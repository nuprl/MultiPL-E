name: HumanEval_114_minSubArraySum
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given an array of integers nums, find the minimum sum of any non-empty sub-array\n\
  \    // of nums.\n    // Example\n    // minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n\
  \    // minSubArraySum([-1, -2, -3]) == -6\n    def minSubArraySum(nums : List[Long])\
  \ : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(minSubArraySum((List[Long](2l.toLong,\
  \ 3l.toLong, 4l.toLong, 1l.toLong, 2l.toLong, 4l.toLong))) == (1l));\n    assert(minSubArraySum((List[Long](-1l.toLong,\
  \ -2l.toLong, -3l.toLong))) == (-6l));\n    assert(minSubArraySum((List[Long](-1l.toLong,\
  \ -2l.toLong, -3l.toLong, 2l.toLong, -10l.toLong))) == (-14l));\n    assert(minSubArraySum((List[Long](-9999999999999999l.toLong)))\
  \ == (-9999999999999999l));\n    assert(minSubArraySum((List[Long](0l.toLong, 10l.toLong,\
  \ 20l.toLong, 1000000l.toLong))) == (0l));\n    assert(minSubArraySum((List[Long](-1l.toLong,\
  \ -2l.toLong, -3l.toLong, 10l.toLong, -5l.toLong))) == (-6l));\n    assert(minSubArraySum((List[Long](100l.toLong,\
  \ -1l.toLong, -2l.toLong, -3l.toLong, 10l.toLong, -5l.toLong))) == (-6l));\n   \
  \ assert(minSubArraySum((List[Long](10l.toLong, 11l.toLong, 13l.toLong, 8l.toLong,\
  \ 3l.toLong, 4l.toLong))) == (3l));\n    assert(minSubArraySum((List[Long](100l.toLong,\
  \ -33l.toLong, 32l.toLong, -1l.toLong, 0l.toLong, -2l.toLong))) == (-33l));\n  \
  \  assert(minSubArraySum((List[Long](-10l.toLong))) == (-10l));\n    assert(minSubArraySum((List[Long](7l.toLong)))\
  \ == (7l));\n    assert(minSubArraySum((List[Long](1l.toLong, -1l.toLong))) == (-1l));\n\
  \    }\n\n}\n"
completions: ["        val numsMap = nums.toMap\n        val numsSet = nums.toSet\n\
    \        val numsArray = nums.toArray\n        val numsArrayList = nums.toList\n\
    \        val numsArrayBuffer = nums.toBuffer\n        val numsArrayIterator =\
    \ nums.toIterator\n        val numsArrayEnumerator = nums.toEnumerator\n     \
    \   val numsArraySeq = nums.toSeq\n        val numsArraySeqIterator = nums.toSeqIterator\n\
    \        val numsArraySeqEnumerator = nums.toSeqEnumerator\n        val numsArraySeqView\
    \ = nums.toSeqView\n        val numsArraySeqViewIterator = nums.toSeqViewIterator\n\
    \        val numsArraySeqViewEnumerator = nums.toSeqViewEnumerator\n        val\
    \ numsArraySeqViewSet = nums.toSeqViewSet\n        val numsArraySeqViewSetIterator\
    \ = nums.toSeqViewSetIterator\n        val numsArraySeqViewSetEnumerator = nums.toSeqViewSetEnumerator\n\
    \        val numsArraySeqViewSetView = nums.toSeqViewSetView\n        val numsArraySeqViewSetViewIterator\
    \ = nums.toSeqViewSetViewIterator\n        val numsArraySeqViewSetViewEnumerator\
    \ = nums.toSeqViewSetViewEnumerator\n        val numsArraySeqViewSetViewSet =\
    \ nums.toSeqViewSetViewSet\n        val numsArraySeqViewSetViewSetIterator = nums.toSeqViewSetViewSetIterator\n\
    \        val numsArraySeqViewSetViewSetEnumerator = nums.toSeqViewSetViewSetEnumerator\n\
    \        val numsArraySeqViewSetViewSetView = nums.toSeqViewSetViewSetView\n \
    \       val numsArraySeqViewSetViewSetViewIterator = nums.toSeqViewSetViewSetViewIterator\n\
    \        val numsArraySeqViewSetViewSetViewEnumerator = nums.toSeqViewSetViewSetViewEnumerator\n\
    \        val numsArraySeqViewSetViewSetViewSet = nums.toSeqViewSetViewSetViewSet\n\
    \        val numsArraySeqViewSetViewSetViewSetIterator = nums.toSeqViewSetViewSetViewSetIterator\n\
    \        val numsArraySeqViewSetViewSetViewSetEnumerator = nums.toSeqViewSetViewSetViewSetEnumerator\n\
    \        val numsArraySeqViewSetViewSetViewSetView = nums.toSeqView", "      \
    \  val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L) { (sum,\
    \ num) =>\n            val newSum = sum + num\n            if (newSum < minSum)\
    \ newSum else minSum\n        }\n        minSum", "        val numsSorted = nums.sortWith(_\
    \ < _)\n        val sums = numsSorted.scanLeft(0L)(_ + _)\n        val minSum\
    \ = sums.min\n        val minSumIndex = sums.indexOf(minSum)\n        sums(minSumIndex\
    \ - 1)", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator",
  "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n    \
    \    val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize =\
    \ numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsMap = nums.groupBy(x => x).mapValues(_.size)\n    \
    \    val minSum = numsMap.minBy(_._2)._2\n        val minSumList = numsMap.filter(_._2\
    \ == minSum).map(_._1)\n        val minSumSum = minSumList.sum\n        minSumSum",
  "        val numsSorted = nums.sortBy(_.toInt)\n        val sums = numsSorted.scanLeft(0)(_\
    \ + _)\n        sums.min", "        val numsSet = nums.toSet\n        val numsSetSize\
    \ = numsSet.size\n        val numsSetIterator = numsSet.iterator\n        val\
    \ numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsArray = nums.toArray\n        val numsArrayLen = numsArray.length\n\
    \        val numsArraySum = numsArray.reduce((x, y) => x + y)\n        val numsArraySumLen\
    \ = numsArraySum.toLong\n        val numsArraySumLenMinusOne = numsArraySumLen\
    \ - 1\n        val numsArraySumLenMinusTwo = numsArraySumLen - 2\n        val\
    \ numsArraySumLenMinusThree = numsArraySumLen - 3\n        val numsArraySumLenMinusFour\
    \ = numsArraySumLen - 4\n        val numsArraySumLenMinusFive = numsArraySumLen\
    \ - 5\n        val numsArraySumLenMinusSix = numsArraySumLen - 6\n        val\
    \ numsArraySumLenMinusSeven = numsArraySumLen - 7\n        val numsArraySumLenMinusEight\
    \ = numsArraySumLen - 8\n        val numsArraySumLenMinusNine = numsArraySumLen\
    \ - 9\n        val numsArraySumLenMinusTen = numsArraySumLen - 10\n        val\
    \ numsArraySumLenMinusEleven = numsArraySumLen - 11\n        val numsArraySumLenMinusTwelve\
    \ = numsArraySumLen - 12\n        val numsArraySumLenMinusThirteen = numsArraySumLen\
    \ - 13\n        val numsArraySumLenMinusFourteen = numsArraySumLen - 14\n    \
    \    val numsArraySumLenMinusFifteen = numsArraySumLen - 15\n        val numsArraySumLenMinusSixteen\
    \ = numsArraySumLen - 16\n        val numsArraySumLenMinusSeventeen = numsArraySumLen\
    \ - 17\n        val numsArraySumLenMinusEighteen = numsArraySumLen - 18\n    \
    \    val numsArraySumLenMinusNineteen = numsArraySumLen - 19\n        val numsArraySumLenMinusTwenty\
    \ = numsArraySumLen - 20\n        val numsArraySumLenMinusThirty = numsArraySumLen\
    \ - 30\n        val numsArraySumLenMinusFourty = numsArraySumLen - 40\n      \
    \  val numsArraySumLenMinusFifty = numsArraySum", "        val numsArray = nums.toArray\n\
    \        val numsArrayLength = numsArray.length\n        val numsArraySum = numsArray.reduceLeft(_\
    \ + _)\n        val numsArraySumLength = numsArraySum.length\n        val numsArraySumArray\
    \ = numsArraySum.toArray\n        val numsArraySumArrayLength = numsArraySumArray.length\n\
    \        val numsArraySumArraySum = numsArraySumArray.reduceLeft(_ + _)\n    \
    \    val numsArraySumArraySumLength = numsArraySumArraySum.length\n        val\
    \ numsArraySumArraySumArray = numsArraySumArraySum.toArray\n        val numsArraySumArraySumArrayLength\
    \ = numsArraySumArraySumArray.length\n        val numsArraySumArraySumArraySum\
    \ = numsArraySumArraySumArray.reduceLeft(_ + _)\n        val numsArraySumArraySumArrayLength\
    \ = numsArraySumArraySumArrayLength.length\n        val numsArraySumArraySumArraySumArray\
    \ = numsArraySumArraySumArraySum.toArray\n        val numsArraySumArraySumArraySumArrayLength\
    \ = numsArraySumArraySumArraySumArrayLength.length\n        val numsArraySumArraySumArraySumArraySum\
    \ = numsArraySumArraySumArraySumArray.reduceLeft(_ + _)\n        val numsArraySumArraySumArraySumArrayLength\
    \ = numsArraySumArraySumArraySumArrayLength.length\n        val numsArraySumArraySumArraySumArraySumArray\
    \ = numsArraySumArraySumArraySumArraySum.toArray\n        val numsArraySumArraySumArraySumArraySumArrayLength\
    \ = numsArraySumArraySumArraySumArraySumArrayLength.length\n        val numsArraySumArraySumArraySumArraySumArraySum\
    \ = numsArraySumArraySumArraySumArraySumArray.reduceLeft(_ + _)\n        val numsArraySumArraySumArraySumArraySumArrayLength\
    \ = numsArraySumArraySumArraySumArraySumArrayLength.length\n        val numsArraySumArraySumArraySumArraySumArraySumArray\
    \ = numsArraySumArraySumArraySumArraySumArraySumArray.reduceLeft(_ + _)\n    \
    \    val numsArraySumArraySumArraySumArraySumArraySumArrayLength = numsArraySumArraySumArraySumArraySumArrayLength.length\n\
    \        val numsArraySumArraySumArray", "        val numsSet = nums.toSet\n \
    \       val numsSetSize = numsSet.size\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n   \
    \     val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator", "        val numsSorted = nums.sortWith(_\
    \ < _)\n        val numsSortedLength = numsSorted.length\n        val sums = mutable.ArrayBuffer.empty[Long]\n\
    \        var minSum = Long.MaxValue\n        var minSumIndex = 0\n        var\
    \ sum = 0\n        var i = 0\n        var j = 0\n        while (i < numsSortedLength)\
    \ {\n            sum = sum + numsSorted(i)\n            if (sum < minSum) {\n\
    \                minSum = sum\n                minSumIndex = i\n            }\n\
    \            i = i + 1\n        }\n        val numsSortedLength = numsSorted.length\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        var minSum = Long.MaxValue\n\
    \        var minSumIndex = 0\n        var sum = 0\n        var i = 0\n       \
    \ var j = 0\n        while (i < numsSortedLength) {\n            sum = sum + numsSorted(i)\n\
    \            if (sum < minSum) {\n                minSum = sum\n             \
    \   minSumIndex = i\n            }\n            i = i + 1\n        }\n       \
    \ return minSum", "        val numsSet = nums.toSet\n        val numsSortedSet\
    \ = nums.sortBy(x => x)\n        val numsSortedSetIterator = numsSortedSet.iterator\n\
    \        var sum = 0L\n        var minSum = Long.MaxValue\n        var minSumIndex\
    \ = 0\n        var minSumIndexIterator = numsSortedSetIterator.dropWhile(_ < 0).iterator\n\
    \        while (sum < minSum) {\n            val nextSum = numsSortedSetIterator.dropWhile(_\
    \ < 0).sum\n            if (nextSum < sum) {\n                minSum = nextSum\n\
    \                minSumIndex = nextSumIndex\n            }\n            sum +=\
    \ nextSum\n            minSumIndexIterator = numsSortedSetIterator.dropWhile(_\
    \ < 0).iterator\n        }\n        minSumIndexIterator = numsSortedSetIterator.dropWhile(_\
    \ < 0).iterator\n        while (sum > minSum) {\n            val nextSum = numsSortedSetIterator.dropWhile(_\
    \ < 0).sum\n            if (nextSum > sum) {\n                minSum = nextSum\n\
    \                minSumIndex = nextSumIndex\n            }\n            sum -=\
    \ nextSum\n            minSumIndexIterator = numsSortedSetIterator.dropWhile(_\
    \ < 0).iterator\n        }\n        minSumIndex", "        val numsSet = nums.toSet\n\
    \        val numsArray = nums.toArray\n        val numsArraySet = numsArray.toSet\n\
    \        val numsArrayArray = numsArray.toArray\n        val numsArrayArraySet\
    \ = numsArrayArray.toSet\n        val numsArrayArrayArray = numsArrayArray.toArray\n\
    \        val numsArrayArrayArraySet = numsArrayArrayArray.toSet\n        val numsArrayArrayArrayArray\
    \ = numsArrayArrayArray.toArray\n        val numsArrayArrayArrayArraySet = numsArrayArrayArrayArray.toSet\n\
    \        val numsArrayArrayArrayArrayArray = numsArrayArrayArrayArray.toArray\n\
    \        val numsArrayArrayArrayArrayArraySet = numsArrayArrayArrayArrayArray.toSet\n\
    \        val numsArrayArrayArrayArrayArrayArray = numsArrayArrayArrayArrayArray.toArray\n\
    \        val numsArrayArrayArrayArrayArrayArraySet = numsArrayArrayArrayArrayArrayArray.toSet\n\
    \        val numsArrayArrayArrayArrayArrayArrayArray = numsArrayArrayArrayArrayArrayArray.toArray\n\
    \        val numsArrayArrayArrayArrayArrayArrayArraySet = numsArrayArrayArrayArrayArrayArrayArray.toSet\n\
    \        val numsArrayArrayArrayArrayArrayArrayArrayArray = numsArrayArrayArrayArrayArrayArrayArray.toArray\n\
    \        val numsArrayArrayArrayArrayArrayArrayArrayArraySet = numsArrayArrayArrayArrayArrayArrayArrayArrayArray.toSet\n\
    \        val numsArrayArrayArrayArrayArrayArrayArrayArrayArrayArray = numsArrayArrayArrayArrayArrayArrayArrayArrayArray.toArray\n\
    \        val numsArrayArrayArrayArrayArrayArrayArrayArrayArraySet = numsArrayArrayArrayArrayArrayArrayArrayArrayArray.toSet\n\
    \        val numsArrayArrayArrayArrayArrayArrayArrayArrayArrayArray = numsArrayArrayArrayArrayArrayArrayArrayArrayArray.toArray\n\
    \        val numsArrayArrayArrayArrayArrayArrayArrayArrayArrayArraySet = numsArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray.toSet\n\
    \        val numsArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray = numsArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray.toArray\n\
    \        val numsArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArraySet =\
    \ numsArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray.toSet\n        val\
    \ numsArrayArrayArrayArrayArrayArrayArrayArray", "        val numsArray = nums.toArray\n\
    \        val numsArrayLen = numsArray.length\n        val numsArraySum = numsArray.foldLeft(0L){\
    \ (sum, num) => sum + num }\n        val numsArraySumLen = numsArraySum.length\n\
    \        val numsArraySumLenMinusOne = numsArraySumLen - 1\n        val numsArraySumLenMinusTwo\
    \ = numsArraySumLen - 2\n        val numsArraySumLenMinusThree = numsArraySumLen\
    \ - 3\n        val numsArraySumLenMinusFour = numsArraySumLen - 4\n        val\
    \ numsArraySumLenMinusFive = numsArraySumLen - 5\n        val numsArraySumLenMinusSix\
    \ = numsArraySumLen - 6\n        val numsArraySumLenMinusSeven = numsArraySumLen\
    \ - 7\n        val numsArraySumLenMinusEight = numsArraySumLen - 8\n        val\
    \ numsArraySumLenMinusNine = numsArraySumLen - 9\n        val numsArraySumLenMinusTen\
    \ = numsArraySumLen - 10\n        val numsArraySumLenMinusEleven = numsArraySumLen\
    \ - 11\n        val numsArraySumLenMinusTwelve = numsArraySumLen - 12\n      \
    \  val numsArraySumLenMinusThirteen = numsArraySumLen - 13\n        val numsArraySumLenMinusFourteen\
    \ = numsArraySumLen - 14\n        val numsArraySumLenMinusFifteen = numsArraySumLen\
    \ - 15\n        val numsArraySumLenMinusSixteen = numsArraySumLen - 16\n     \
    \   val numsArraySumLenMinusSeventeen = numsArraySumLen - 17\n        val numsArraySumLenMinusEighteen\
    \ = numsArraySumLen - 18\n        val numsArraySumLenMinusNineteen = numsArraySumLen\
    \ - 19\n        val numsArraySumLenMinusTwenty = numsArraySumLen - 20\n      \
    \  val numsArraySumLenMinusThirty = numsArraySumLen - 30\n        val numsArraySumLenMinusFourty\
    \ = numsArraySumLen - 40\n        val numsArraySumLenMinus", "        val numsArray\
    \ = nums.toArray\n        val numsArrayLen = numsArray.length\n        val numsArraySum\
    \ = numsArray.reduceLeft(_ + _)\n        val numsArraySumLen = numsArraySum.length\n\
    \        val numsArraySumMinus1 = numsArraySum.drop(1)\n        val numsArraySumMinus1Len\
    \ = numsArraySumMinus1.length\n        val numsArraySumMinus1Minus1 = numsArraySumMinus1.drop(1)\n\
    \        val numsArraySumMinus1Minus1Len = numsArraySumMinus1Minus1.length\n \
    \       val numsArraySumMinus1Minus1Minus1 = numsArraySumMinus1Minus1.drop(1)\n\
    \        val numsArraySumMinus1Minus1Minus1Len = numsArraySumMinus1Minus1Minus1.length\n\
    \        val numsArraySumMinus1Minus1Minus1Minus1 = numsArraySumMinus1Minus1Minus1.drop(1)\n\
    \        val numsArraySumMinus1Minus1Minus1Minus1Len = numsArraySumMinus1Minus1Minus1Minus1.length\n\
    \        val numsArraySumMinus1Minus1Minus1Minus1Minus1 = numsArraySumMinus1Minus1Minus1Minus1.drop(1)\n\
    \        val numsArraySumMinus1Minus1Minus1Minus1Minus1Len = numsArraySumMinus1Minus1Minus1Minus1Minus1.length\n\
    \        val numsArraySumMinus1Minus1Minus1Minus1Minus1Minus1 = numsArraySumMinus1Minus1Minus1Minus1Minus1.drop(1)\n\
    \        val numsArraySumMinus1Minus1Minus1Minus1Minus1Minus1Len = numsArraySumMinus1Minus1Minus1Minus1Minus1Minus1.length\n\
    \        val numsArraySumMinus1Minus1Minus1Minus1Minus1Minus1Minus1 = numsArraySumMinus1Minus1Minus1Minus1Minus1Minus1Len.drop(1)\n\
    \        val nums", "        val numsMap = nums.groupBy(x => x).mapValues(_.size)\n\
    \        val minSum = numsMap.foldLeft(0L) { (sum, num) =>\n            val newSum\
    \ = sum + num\n            if (newSum < 0) newSum\n            else newSum\n \
    \       }\n        minSum", "        val numsSet = nums.toSet\n        val numsSetSize\
    \ = numsSet.size\n        val numsSetIterator = numsSet.iterator\n        val\
    \ numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L){\
    \ (sum, num) =>\n            val newSum = sum + num\n            if(newSum < minSum)\
    \ newSum else minSum\n        }\n        minSum", "        val numsSet = nums.toSet\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorNext\
    \ = numsSetIterator.next\n        val numsSetIteratorNextValue = numsSetIteratorNext.get\n\
    \        val numsSetIteratorNextNext = numsSetIteratorNext.next\n        val numsSetIteratorNextNextValue\
    \ = numsSetIteratorNextNext.get\n        val numsSetIteratorNextNextNext = numsSetIteratorNextNext.next\n\
    \        val numsSetIteratorNextNextNextValue = numsSetIteratorNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNext = numsSetIteratorNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextValue = numsSetIteratorNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNext = numsSetIteratorNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNext",
  "        val numsArray = nums.toArray\n        val numsArrayLength = numsArray.length\n\
    \        val numsArraySum = numsArray.sum\n        val numsArraySumLength = numsArraySum.length\n\
    \        val numsArraySumMinusOne = numsArraySum - numsArray(0)\n        val numsArraySumMinusOneLength\
    \ = numsArraySumMinusOne.length\n        val numsArraySumMinusOneArray = numsArraySumMinusOne.toArray\n\
    \        val numsArraySumMinusOneArrayLength = numsArraySumMinusOneArray.length\n\
    \        val numsArraySumMinusOneArraySum = numsArraySumMinusOneArray.sum\n  \
    \      val numsArraySumMinusOneArraySumLength = numsArraySumMinusOneArraySum.length\n\
    \        val numsArraySumMinusOneArraySumMinusOne = numsArraySumMinusOneArraySum\
    \ - numsArraySumMinusOneArray(0)\n        val numsArraySumMinusOneArraySumMinusOneLength\
    \ = numsArraySumMinusOneArraySumMinusOne.length\n        val numsArraySumMinusOneArraySumMinusOneArray\
    \ = numsArraySumMinusOneArraySumMinusOne.toArray\n        val numsArraySumMinusOneArraySumMinusOneArrayLength\
    \ = numsArraySumMinusOneArraySumMinusOneArray.length\n        val numsArraySumMinusOneArraySumMinusOneArraySum\
    \ = numsArraySumMinusOneArraySumMinusOneArray.sum\n        val numsArraySumMinusOneArraySumMinusOneArraySumLength\
    \ = numsArraySumMinusOneArraySumMinusOneArraySum.length\n        val numsArraySumMinusOneArraySumMinusOneArraySumMinusOne\
    \ = numsArraySumMinusOneArraySumMinusOneArraySum - numsArraySumMinusOneArraySumMinusOneArray(0)\n\
    \        val numsArraySumMinusOneArraySumMinusOneArraySumMinusOneLength = numsArraySumMinusOneArraySumMinusOneArraySumMinusOne.length\n\
    \        val numsArraySumMinusOneArraySumMinusOneArraySumMinusOneArray = numsArraySumMinusOneArraySumMinusOneArraySumMinusOne.toArray\n\
    \        val numsArraySumMinusOneArraySumMinusOneArraySumMinus", "        val\
    \ numsMap = nums.groupBy(x => x).mapValues(_.size).asInstanceOf[Map[Long, Int]]\n\
    \        val minSum = numsMap.filter(_._2 > 0).map(_._1).sum\n        val maxSum\
    \ = numsMap.filter(_._2 > 0).map(_._1).max\n        minSum + maxSum", "      \
    \  val numsCopy = nums.toList\n        val result = numsCopy.foldLeft(0L)((sum,\
    \ num) => {\n            val newSum = sum + num\n            if (newSum < 0) newSum\n\
    \            else newSum\n        })\n        result", "        val numsCopy =\
    \ nums.toList\n        val minSum = numsCopy.foldLeft(0L)((sum, num) => {\n  \
    \          val newSum = sum + num\n            if (newSum < minSum) newSum else\
    \ minSum\n        })\n        minSum", "        val minSum = math.Long.MaxValue\n\
    \        val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorNext = numsSetIterator.next\n        val numsSetIteratorNextValue\
    \ = numsSetIteratorNext.asInstanceOf[Long]\n        val numsSetIteratorNextNext\
    \ = numsSetIteratorNext.next\n        val numsSetIteratorNextNextValue = numsSetIteratorNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNext = numsSetIteratorNextNext.next\n    \
    \    val numsSetIteratorNextNextNextValue = numsSetIteratorNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextValue = numsSetIteratorNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNext = numsSetIteratorNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextValue = numsSetIteratorNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNext = numsSetIteratorNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNext",
  "        val minSum = nums.foldLeft(0L)((sum, num) => {\n            val newSum\
    \ = sum + num\n            if (newSum < minSum) newSum else minSum\n        })\n\
    \        minSum", "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(numsCopy(0))\
    \ { (sum, num) =>\n            val newSum = sum + num\n            if (newSum\
    \ < 0) newSum\n            else newSum\n        }\n        minSum", "        val\
    \ numsSet = nums.toSet\n        val minSum = nums.foldLeft(0L) { (sum, num) =>\n\
    \            val newSum = sum + num\n            if (numsSet.contains(newSum))\
    \ {\n                newSum\n            } else {\n                sum\n     \
    \       }\n        }\n        minSum", "        val numsSet = nums.toSet\n   \
    \     val numsArray = nums.toArray\n        val numsArraySet = numsArray.toSet\n\
    \        val numsArrayArray = numsArray.toArray\n        val numsArraySetArray\
    \ = numsArraySet.toArray\n        val numsArrayArraySet = numsArrayArray.toSet\n\
    \        val numsArraySetArraySet = numsArraySetArray.toSet\n        val numsArraySetArraySet\
    \ = numsArraySetArray.toSet\n        val numsArraySetArraySetArray = numsArraySetArraySet.toArray\n\
    \        val numsArraySetArraySetArray = numsArraySetArraySet.toArray\n      \
    \  val numsArraySetArraySetArraySet = numsArraySetArraySet.toSet\n        val\
    \ numsArraySetArraySetArraySet = numsArraySetArraySet.toSet\n        val numsArraySetArraySetArraySet\
    \ = numsArraySetArraySet.toSet\n        val numsArraySetArraySetArraySetArray\
    \ = numsArraySetArraySetArray.toArray\n        val numsArraySetArraySetArrayArray\
    \ = numsArraySetArraySetArray.toArray\n        val numsArraySetArraySetArraySetArray\
    \ = numsArraySetArraySetArray.toSet\n        val numsArraySetArraySetArraySetArray\
    \ = numsArraySetArraySetArray.toSet\n        val numsArraySetArraySetArraySetArraySet\
    \ = numsArraySetArraySetArraySet.toSet\n        val numsArraySetArraySetArraySetArraySet\
    \ = numsArraySetArraySetArraySet.toSet\n        val numsArraySetArraySetArraySetArraySet\
    \ = numsArraySetArraySetArraySet.toSet\n        val numsArraySetArraySetArraySetArraySet\
    \ = numsArraySetArraySetArraySet.toSet\n        val numsArraySetArraySetArraySetArraySet\
    \ = numsArraySetArraySetArraySet.toSet\n        val numsArraySetArraySetArraySetArraySet\
    \ = numsArraySetArraySetArraySet.toSet\n        val numsArraySetArraySetArraySetArraySet\
    \ = numsArraySetArraySetArraySet.toSet\n        val numsArraySetArraySetArraySetArraySet\
    \ = numsArraySetArraySetArraySet.toSet\n        val numsArraySetArraySetArraySetArraySet\
    \ = numsArraySetArraySetArraySet.toSet", "        val numsMap = nums.groupBy(x\
    \ => x).mapValues(_.size)\n        val maxSum = numsMap.maxBy(_._2)._2\n     \
    \   val minSum = numsMap.minBy(_._2)._2\n        val sums = numsMap.mapValues(x\
    \ => x - minSum + maxSum)\n        sums.min", "        val numsSorted = nums.sortWith(_\
    \ < _)\n        val sums = mutable.ArrayBuffer.empty[Long]\n        val minSum\
    \ = Long.MaxValue\n        for(i <- 0 until numsSorted.length){\n            val\
    \ sum = numsSorted.take(i).sum\n            sums += sum\n            if(sum <\
    \ minSum){\n                minSum = sum\n            }\n        }\n        minSum",
  "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n    \
    \    val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize =\
    \ numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val minSum = nums.foldLeft(0L)((sum,\
    \ num) => {\n            val newSum = sum + num\n            if (numsSet.contains(newSum))\
    \ {\n                newSum\n            } else {\n                num\n     \
    \       }\n        })\n        minSum", "        val numsCopy = nums.toList\n\
    \        val minSum = numsCopy.foldLeft(0L) { (sum, elem) =>\n            val\
    \ newSum = sum + elem\n            if (newSum < minSum) newSum else minSum\n \
    \       }\n        minSum", "        val numsSorted = nums.sortWith(_ < _)\n \
    \       val sums = numsSorted.scanLeft(0)(_ + _)\n        sums.min", "       \
    \ val numsCopy = nums.toList\n        val result = numsCopy.foldLeft(0L) { (sum,\
    \ num) =>\n            val newSum = sum + num\n            if (newSum < 0) newSum\n\
    \            else newSum\n        }\n        result", "        val numsSet = nums.toSet\n\
    \        val numsSortedSet = nums.sort\n        val numsSortedSetSize = numsSortedSet.size\n\
    \        val numsSortedSetIterator = numsSortedSet.iterator\n        val numsSortedSetIteratorSize\
    \ = numsSortedSetIterator.size\n        val numsSortedSetIteratorIterator = numsSortedSetIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorSize = numsSortedSetIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIterator = numsSortedSetIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorSize = nums",
  "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L){\
    \ (sum, num) =>\n            val newSum = sum + num\n            if (newSum <\
    \ minSum) newSum else minSum\n        }\n        minSum", "        val numsSet\
    \ = nums.toSet\n        val numsSetSize = numsSet.size\n        val numsSetIterator\
    \ = numsSet.iterator\n        val numsSetIteratorSize = numsSetIterator.size\n\
    \        val numsSetIteratorIterator = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize\
    \ = numsSetIteratorIterator.size\n        val numsSetIteratorIteratorIterator\
    \ = numsSetIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val minSum = math.min(nums.toList.map(x\
    \ => math.abs(x)).sum)\n        val maxSum = math.max(nums.toList.map(x => math.abs(x)).sum)\n\
    \        val sums = mutable.HashSet[Long]()\n        val numsSetIterator = numsSet.iterator\n\
    \        while(numsSetIterator.hasNext) {\n            val curSum = math.abs(numsSetIterator.next())\n\
    \            sums += curSum\n            if(curSum < minSum) {\n             \
    \   minSum = curSum\n            }\n            if(curSum > maxSum) {\n      \
    \          maxSum = curSum\n            }\n        }\n        minSum", "     \
    \   val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n       \
    \ val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize = numsSetIterator.size\n\
    \        val numsSetIteratorIterator = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize\
    \ = numsSetIteratorIterator.size\n        val numsSetIteratorIteratorIterator\
    \ = numsSetIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val minSum = nums.foldLeft(0L)((sum,\
    \ num) => {\n            val newSum = sum + num\n            if (numsSet.contains(newSum))\
    \ {\n                newSum\n            } else {\n                sum\n     \
    \       }\n        })\n        minSum", "        val numsCopy = nums.toList\n\
    \        val minSum = numsCopy.foldLeft(0L){ (sum, num) =>\n            val newSum\
    \ = sum + num\n            if (newSum < minSum) newSum else minSum\n        }\n\
    \        minSum", "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(numsCopy(0))\
    \ { (sum, num) =>\n            if (num > sum) num\n            else sum\n    \
    \    }\n        minSum", "        val numsSet = nums.toSet\n        val numsSortedSet\
    \ = nums.sort\n        val numsSortedSetSet = numsSortedSet.toSet\n        val\
    \ numsSortedSetSetSet = numsSortedSetSet.toSet\n        val numsSortedSetSetSetSet\
    \ = numsSortedSetSetSet.toSet\n        val numsSortedSetSetSetSetSet = numsSortedSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSet = numsSortedSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSet = numsSortedSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSet = numsSortedSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSet = numsSortedSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSetSet.toSet",
  "        val numsSorted = nums.sortWith(_ < _)\n        val sums = numsSorted.scanLeft(0)(_\
    \ + _)\n        val min = sums.min\n        val max = sums.max\n        if (min\
    \ == max) min\n        else min - max", "        val numsSet = nums.toSet\n  \
    \      val numsSetIterator = numsSet.iterator\n        val numsSetIteratorResult\
    \ = numsSetIterator.next\n        val numsSetIteratorResultSet = numsSetIterator.next\n\
    \        val numsSetIteratorResultSetIterator = numsSetIteratorResultSet.iterator\n\
    \        val numsSetIteratorResultSetIteratorResult = numsSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSet = numsSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIterator = numsSetIteratorResultSetIteratorResultSet.iterator\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResult = numsSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSet = numsSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIterator\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSet.iterator\n    \
    \    val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResult\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSet\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIterator\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSet.iterator\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResult\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSet\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIterator\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResult\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSet",
  "        val numsSet = nums.toSet\n        val numsSortedSet = nums.toSeq.sortBy(x\
    \ => x)\n        val numsSortedSetSet = numsSortedSet.toSet\n        val numsSortedSetSetSize\
    \ = numsSortedSetSet.size\n        val numsSortedSetSetIterator = numsSortedSetSet.iterator\n\
    \        val numsSortedSetSetIteratorSize = numsSortedSetSetIterator.size\n  \
    \      val numsSortedSetSetIteratorIterator = numsSortedSetSetIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorSize = numsSortedSetSetIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIterator = numsSortedSetSetIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorSize = numsSortedSetSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIterator = numsSortedSetSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorSize = numsSortedSetSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIterator = numsSortedSetSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIterator.iterator\n      \
    \  val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorSize =\
    \ numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIterator.size\n    \
    \    val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val ", "        val minSum = math.min(nums.sum)\n        val subArray\
    \ = nums.filter(_ < minSum)\n        minSubArraySum(subArray)", "        val numsSet\
    \ = nums.toSet\n        val minSum = nums.foldLeft(0L)((sum, num) => sum + num)\n\
    \        val minSumSet = numsSet.foldLeft(0L)((sum, num) => sum + num)\n     \
    \   minSumSet.min", "        val numsSorted = nums.sortWith(_ < _)\n        val\
    \ sums = numsSorted.scanLeft(0)(_ + _)\n        val minSum = sums.min\n      \
    \  val minSumIndex = sums.indexWhere(_ == minSum)\n        sums(minSumIndex)",
  "        val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorNext = numsSetIterator.next\n        val numsSetIteratorNextNext\
    \ = numsSetIteratorNext.next\n        val numsSetIteratorNextNextNext = numsSetIteratorNextNext.next\n\
    \        val numsSetIteratorNextNextNextNext = numsSetIteratorNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNext = numsSetIteratorNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext =\
    \ numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n     \
    \   val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext =\
    \ numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext =\
    \ numsSetIteratorNextNextNextNextNextNextNextNext", "        val numsSet = nums.toSet\n\
    \        val minSum = math.min(nums.toList.map(x => math.abs(x)).sum)\n      \
    \  val minSubArray = nums.filter(x => numsSet.contains(x)).map(x => math.abs(x)).sum\n\
    \        minSubArray < minSum ? minSubArray : minSum", "        val numsSet =\
    \ nums.toSet\n        val sums = mutable.HashMap[Long, Long]()\n        val minSum\
    \ = Long.MaxValue\n        for(i <- 0 until nums.size) {\n            val sum\
    \ = nums.filter(_ != i).sum\n            sums += (sum -> i)\n            if(sum\
    \ < minSum) {\n                minSum = sum\n            }\n        }\n      \
    \  minSum", "        val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorResult = numsSetIterator.next\n        val numsSetIteratorResultNext\
    \ = numsSetIterator.next\n        val numsSetIteratorResultNextNext = numsSetIterator.next\n\
    \        val numsSetIteratorResultNextNextNext = numsSetIterator.next\n      \
    \  val numsSetIteratorResultNextNextNextNext = numsSetIterator.next\n        val\
    \ numsSetIteratorResultNextNextNextNextNext = numsSetIterator.next\n        val\
    \ numsSetIteratorResultNextNextNextNextNextNext = numsSetIterator.next\n     \
    \   val numsSetIteratorResultNextNextNextNextNextNext = numsSetIterator.next\n\
    \        val numsSetIteratorResultNextNextNextNextNextNextNext = numsSetIterator.next\n\
    \        val numsSetIteratorResultNextNextNextNextNextNextNextNext = numsSetIterator.next\n\
    \        val numsSetIteratorResultNextNextNextNextNextNextNextNextNext = numsSetIterator.next\n\
    \        val numsSetIteratorResultNextNextNextNextNextNextNextNextNext = numsSetIterator.next\n\
    \        val numsSetIteratorResultNextNextNextNextNextNextNextNextNextNext = numsSetIterator.next\n\
    \        val numsSetIteratorResultNextNextNextNextNextNextNextNextNextNext = numsSetIterator.next\n\
    \        val numsSetIteratorResultNextNextNextNextNextNextNextNextNextNext = numsSetIterator.next\n\
    \        val numsSetIteratorResultNextNextNextNextNextNextNextNextNextNext = numsSetIterator.next\n\
    \        val numsSetIteratorResultNextNextNextNextNextNextNextNextNextNextNext\
    \ = numsSetIterator.next\n        val numsSetIteratorResultNextNextNextNextNextNextNextNextNextNextNext\
    \ = numsSetIterator.next\n        val numsSetIteratorResultNextNextNextNextNextNextNextNextNextNextNext\
    \ = numsSetIterator.next\n        val numsSetIteratorResultNextNextNextNextNextNextNextNextNextNextNext\
    \ = numsSetIterator.next\n        val numsSetIteratorResultNextNextNextNextNextNextNextNextNextNextNext\
    \ = numsSetIterator.next\n        val numsSetIteratorResultNextNextNextNextNextNextNextNextNextNextNextNext",
  "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L){\
    \ (sum, num) =>\n            val newSum = sum + num\n            if (newSum <\
    \ minSum) newSum else minSum\n        }\n        minSum", "        val numsSet\
    \ = nums.toSet\n        val numsSetSize = numsSet.size\n        val numsSetIterator\
    \ = numsSet.iterator\n        val numsSetIteratorSize = numsSetIterator.size\n\
    \        val numsSetIteratorIterator = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize\
    \ = numsSetIteratorIterator.size\n        val numsSetIteratorIteratorIterator\
    \ = numsSetIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n   \
    \     val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator", "        val numsCopy = nums.toList\n  \
    \      val minSum = numsCopy.foldLeft(0L){ (sum, num) =>\n            val newSum\
    \ = sum + num\n            if (newSum < minSum) newSum else minSum\n        }\n\
    \        minSum", "        val minSum = nums.foldLeft(0L) { (sum, num) =>\n  \
    \          val newSum = sum + num\n            if (newSum < minSum) newSum else\
    \ minSum\n        }\n        minSum", "        val numsSet = nums.toSet\n    \
    \    val numsSetSize = numsSet.size\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSorted = nums.sortWith(_ < _)\n        val sums = numsSorted.scanLeft(0L)(_\
    \ + _)\n        val min = sums.min\n        val index = sums.indexWhere(_ == min)\n\
    \        sums(index - 1)", "        val numsSet = nums.toSet\n        val numsSetSize\
    \ = numsSet.size\n        val numsSetIterator = numsSet.iterator\n        val\
    \ numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator", "        val numsCopy = nums.toList\n  \
    \      val minSum = numsCopy.foldLeft(0L) { (sum, num) =>\n            val newSum\
    \ = sum + num\n            if (newSum < minSum) newSum else minSum\n        }\n\
    \        minSum", "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L){\
    \ (sum, num) => sum + num }\n        val subArray = numsCopy.filter(_ < minSum)\n\
    \        minSubArraySum(subArray)", "        val numsSet = nums.toSet\n      \
    \  val numsSetSize = numsSet.size\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorNext = numsSetIterator.next\n        val numsSetIteratorNextValue\
    \ = numsSetIteratorNext.get\n        val numsSetIteratorNextNext = numsSetIteratorNext.next\n\
    \        val numsSetIteratorNextNextValue = numsSetIteratorNextNext.get\n    \
    \    val numsSetIteratorNextNextNext = numsSetIteratorNextNext.next\n        val\
    \ numsSetIteratorNextNextNextValue = numsSetIteratorNextNextNext.get\n       \
    \ val numsSetIteratorNextNextNextNext = numsSetIteratorNextNextNext.next\n   \
    \     val numsSetIteratorNextNextNextNextValue = numsSetIteratorNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNext = numsSetIteratorNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextValue = numsSet",
  "        val numsArray = nums.toArray\n        val numsArrayLength = numsArray.length\n\
    \        val numsArraySum = numsArray.reduceLeft(_ + _)\n        val numsArraySumLength\
    \ = numsArraySum.length\n        val numsArraySumArray = numsArraySum.toArray\n\
    \        val numsArraySumArrayLength = numsArraySumArray.length\n        val numsArraySumArraySum\
    \ = numsArraySumArray.reduceLeft(_ + _)\n        val numsArraySumArraySumLength\
    \ = numsArraySumArraySum.length\n        val numsArraySumArraySumArray = numsArraySumArraySum.toArray\n\
    \        val numsArraySumArraySumArrayLength = numsArraySumArraySumArray.length\n\
    \        val numsArraySumArraySumArraySum = numsArraySumArraySumArray.reduceLeft(_\
    \ + _)\n        val numsArraySumArraySumArraySumLength = numsArraySumArraySumArraySum.length\n\
    \        val numsArraySumArraySumArraySumArray = numsArraySumArraySumArraySum.toArray\n\
    \        val numsArraySumArraySumArraySumArrayLength = numsArraySumArraySumArraySumArray.length\n\
    \        val numsArraySumArraySumArraySumArraySum = numsArraySumArraySumArraySumArray.reduceLeft(_\
    \ + _)\n        val numsArraySumArraySumArraySumArrayLength = numsArraySumArraySumArraySumArraySumArray.length\n\
    \        val numsArraySumArraySumArraySumArraySum = numsArraySumArraySumArraySumArraySum.reduceLeft(_\
    \ + _)\n        val numsArraySumArraySumArraySumArraySumLength = numsArraySumArraySumArraySumArraySumArray.length\n\
    \        val numsArraySumArraySumArraySumArraySumArray = numsArraySumArraySumArraySumArraySumArray.toArray\n\
    \        val numsArraySumArraySumArraySumArraySumArrayLength = numsArraySumArraySumArraySumArraySumArrayArray.length\n\
    \        val numsArraySumArraySumArraySumArraySumArraySum = numsArraySumArraySumArraySumArraySumArraySum.reduceLeft(_\
    \ + _)\n        val numsArraySumArraySumArraySumArraySumArraySumLength = numsArraySumArraySumArraySumArraySumArraySumArray.length\n\
    \        val numsArraySumArraySumArraySumArraySumArraySum", "        val numsSet\
    \ = nums.toSet\n        val numsSetSize = numsSet.size\n        val numsSetIterator\
    \ = numsSet.iterator\n        val numsSetIteratorSize = numsSetIterator.size\n\
    \        val numsSetIteratorIterator = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize\
    \ = numsSetIteratorIterator.size\n        val numsSetIteratorIteratorIterator\
    \ = numsSetIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSortedSet = nums.sortBy(_)\n\
    \        val numsSortedSetSize = numsSortedSet.size\n        val numsSortedSetIterator\
    \ = numsSortedSet.iterator\n        val numsSortedSetIteratorSize = numsSortedSetIterator.size\n\
    \        val numsSortedSetIteratorIterator = numsSortedSetIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIterator = numsSortedSetIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetIteratorIteratorIteratorIterator.iterator\n        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetIteratorIteratorIteratorIterator.iterator\n        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetIteratorIteratorIteratorIterator.iterator\n        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetIteratorIteratorIterator.iterator\n        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetIteratorIteratorIterator.iterator\n        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetIteratorIteratorIterator.iterator\n        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetIteratorIteratorIterator.iterator\n        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetIteratorIteratorIterator.iterator\n        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetIteratorIteratorIterator.iterator\n        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetIteratorIteratorIterator.iterator\n        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetIteratorIteratorIterator.iterator\n        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSet", "        val numsSet = nums.toSet\n        val numsSetSize\
    \ = numsSet.size\n        val numsSetIterator = numsSet.iterator\n        val\
    \ numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSorted = nums.sortWith(_ < _)\n        val numsSum\
    \ = numsSorted.foldLeft(0L) { (sum, num) =>\n            val newSum = sum + num\n\
    \            if (newSum > 0) newSum else num\n        }\n        numsSorted.foldLeft(0L)\
    \ { (sum, num) =>\n            val newSum = sum + num\n            if (newSum\
    \ > 0) newSum else num\n        }", "        val numsSet = nums.toSet\n      \
    \  val numsSetIterator = numsSet.iterator\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator",
  "        val numsMap = nums.groupBy(x => x).mapValues(_.size)\n        val minSum\
    \ = numsMap.minBy(_._2)._2\n        val subArray = numsMap.filter(_._2 == minSum)\n\
    \        val subArraySum = subArray.map(_._1).sum\n        minSum + subArraySum",
  "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L){\
    \ (sum, num) =>\n            val newSum = sum + num\n            if (newSum <\
    \ minSum) newSum else minSum\n        }\n        minSum", "        val numsSet\
    \ = nums.toSet\n        val numsSetSize = numsSet.size\n        val numsSetIterator\
    \ = numsSet.iterator\n        val numsSetIteratorSize = numsSetIterator.size\n\
    \        val numsSetIteratorIterator = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize\
    \ = numsSetIteratorIterator.size\n        val numsSetIteratorIteratorIterator\
    \ = numsSetIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val sums = mutable.HashSet[Long]()\n\
    \        val minSum = Long.MaxValue\n        for(i <- 0 until nums.size) {\n \
    \           val subArray = nums.slice(i+1, nums.size).filter(_ != nums(i))\n \
    \           val subArraySum = subArray.sum\n            sums += subArraySum\n\
    \            if(subArraySum < minSum) {\n                minSum = subArraySum\n\
    \            }\n        }\n        minSum", "        val numsCopy = nums.toList\n\
    \        val minSum = numsCopy.foldLeft(0L) { (sum, num) =>\n            val newSum\
    \ = sum + num\n            if (newSum < minSum) newSum else minSum\n        }\n\
    \        minSum", "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L){\
    \ (sum, num) =>\n            val newSum = sum + num\n            if (newSum <\
    \ minSum) newSum else minSum\n        }\n        minSum", "        val numsSet\
    \ = nums.toSet\n        val numsSetSize = numsSet.size\n        val numsSetIterator\
    \ = numsSet.iterator\n        val numsSetIteratorSize = numsSetIterator.size\n\
    \        val numsSetIteratorIterator = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize\
    \ = numsSetIteratorIterator.size\n        val numsSetIteratorIteratorIterator\
    \ = numsSetIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIter", "  \
    \      val numsMap = nums.groupBy(x => x).mapValues(_.size).asInstanceOf[Map[Long,\
    \ Int]]\n        val numsMapSorted = numsMap.sortBy(_._2).reverse\n        val\
    \ sums = numsMapSorted.map(x => x._2).sum\n        val minSum = sums.min\n   \
    \     minSum", "        val numsCopy = nums.toList\n        val numsCopyCopy =\
    \ numsCopy.toList\n        val numsCopyCopyCopy = numsCopyCopy.toList\n      \
    \  val numsCopyCopyCopyCopy = numsCopyCopyCopy.toList\n        val numsCopyCopyCopyCopyCopy\
    \ = numsCopyCopyCopyCopy.toList\n        val numsCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy\
    \ = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy\
    \ = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy\
    \ = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy", "        val numsMap =\
    \ nums.groupBy(x => x).mapValues(_.size)\n        val numsMapSorted = numsMap.sortBy(_._1).reverse\n\
    \        val numsMapSortedKeys = numsMapSorted.keys\n        val numsMapSortedValues\
    \ = numsMapSorted.values\n        val numsMapSortedKeysSum = numsMapSortedKeys.sum\n\
    \        val numsMapSortedValuesSum = numsMapSortedValues.sum\n        val numsMapSortedKeysSumMin\
    \ = numsMapSortedKeysSum - numsMapSortedKeysSum\n        val numsMapSortedValuesSumMin\
    \ = numsMapSortedValuesSum - numsMapSortedValuesSum\n        val numsMapSortedKeysSumMax\
    \ = numsMapSortedKeysSum + numsMapSortedKeysSum\n        val numsMapSortedValuesSumMax\
    \ = numsMapSortedValuesSum + numsMapSortedValuesSum\n        val numsMapSortedKeysSumMinMax\
    \ = numsMapSortedKeysSumMin - numsMapSortedKeysSumMax\n        val numsMapSortedValuesSumMinMax\
    \ = numsMapSortedValuesSumMin - numsMapSortedValuesSumMax\n        val numsMapSortedKeysSumMinMaxMin\
    \ = numsMapSortedKeysSumMinMax - numsMapSortedKeysSumMin\n        val numsMapSortedValuesSumMinMaxMin\
    \ = numsMapSortedValuesSumMinMax - numsMapSortedValuesSumMinMax\n        val numsMapSortedKeysSumMinMaxMinMinMax\
    \ = numsMapSortedKeysSumMinMaxMin - numsMapSortedKeysSumMinMax\n        val numsMapSortedValuesSumMinMaxMinMax\
    \ = numsMapSortedValuesSumMinMaxMin - numsMapSortedValuesSumMinMax\n        val\
    \ numsMapSortedKeysSumMinMaxMinMaxMinMax = numsMapSortedKeysSumMinMaxMinMax -\
    \ numsMapSortedKeysSumMinMaxMinMax\n        val numsMapSortedValuesSumMinMaxMinMaxMinMax\
    \ = numsMapSortedValuesSumMinMaxMinMax - numsMapSortedValuesSumMinMaxMinMax\n\
    \        val numsMapSortedKeysSumMinMaxMinMaxMinMaxMin = numsMapSortedKeysSumMinMaxMinMaxMin\
    \ - numsMapSortedKeysSumMinMaxMinMaxMinMax\n        val nums", "        val minSum\
    \ = nums.foldLeft(0L)((sum, num) => sum + num)\n        val subArray = nums.filter(x\
    \ => x >= minSum)\n        minSubArraySum(subArray)", "        val numsSorted\
    \ = nums.sortWith(_ < _)\n        val numsSortedLength = numsSorted.length\n \
    \       val numsSortedSum = numsSorted.sum\n        val numsSortedSumLength =\
    \ numsSortedSum.length\n        val numsSortedSumLastIndex = numsSortedSumLength\
    \ - 1\n        val numsSortedSumLastElement = numsSortedSum(numsSortedSumLastIndex)\n\
    \        val numsSortedSumLastElementLength = numsSortedSumLastElement.length\n\
    \        val numsSortedSumLastElementLastIndex = numsSortedSumLastElementLength\
    \ - 1\n        val numsSortedSumLastElementLastElement = numsSortedSumLastElement(numsSortedSumLastElementLastIndex)\n\
    \        val numsSortedSumLastElementLastElementLength = numsSortedSumLastElementLastElement.length\n\
    \        val numsSortedSumLastElementLastElementLastIndex = numsSortedSumLastElementLastElementLength\
    \ - 1\n        val numsSortedSumLastElementLastElementLastElement = numsSortedSumLastElementLastElement(numsSortedSumLastElementLastElementLastIndex)\n\
    \        val numsSortedSumLastElementLastElementLastElementLength = numsSortedSumLastElementLastElementLastElement.length\n\
    \        val numsSortedSumLastElementLastElementLastElementLastIndex = numsSortedSumLastElementLastElementLastElementLength\
    \ - 1\n        val numsSortedSumLastElementLastElementLastElementLastElement =\
    \ numsSortedSumLastElementLastElementLastElement(numsSortedSumLastElementLastElementLastElementLastIndex)\n\
    \        val numsSortedSumLastElementLastElementLastElementLastElementLength =\
    \ numsSortedSumLastElementLastElementLastElementLastElement.length\n        val\
    \ numsSortedSumLastElementLastElementLastElementLastElementLastIndex = numsSortedSumLastElementLastElementLastElementLastElementLength\
    \ - 1\n        val numsSortedSumLastElementLastElementLastElementLastElementLastElement\
    \ = numsSortedSumLastElementLastElementLastElementLastElement(numsSortedSumLastElementLastElementLastElementLastElementLastIndex)\n\
    \        val numsSortedSumLastElementLastElementLastElementLastElementLastElementLength\
    \ = numsSortedSumLastElementLastElementLastElementLastElementLastElement.length\n\
    \        val numsSortedSumLastElementLastElementLastElementLastElementLastElementLastIndex\
    \ = numsSortedSumLastElementLastElementLastElementLastElementLastElementLastElementLength\
    \ - 1\n        val numsSortedSumLastElementLastElementLastElementLastElementLastElementLastElement\
    \ = nums", "        val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorNext = numsSetIterator.next\n        val numsSetIteratorNextValue\
    \ = numsSetIteratorNext.toLong\n        val numsSetIteratorNextNext = numsSetIteratorNext.next\n\
    \        val numsSetIteratorNextNextValue = numsSetIteratorNextNext.toLong\n \
    \       val numsSetIteratorNextNextNext = numsSetIteratorNextNext.next\n     \
    \   val numsSetIteratorNextNextNextValue = numsSetIteratorNextNextNext.toLong\n\
    \        val numsSetIteratorNextNextNextNext = numsSetIteratorNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextValue = numsSetIteratorNextNextNextNext.toLong\n\
    \        val numsSetIteratorNextNextNextNextNext = numsSetIteratorNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNext.toLong\n\
    \        val numsSetIteratorNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNext.toLong\n\
    \        val numsSetIteratorNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNext.toLong\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNext.toLong\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNext.toLong\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNext",
  "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n    \
    \    val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize =\
    \ numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L)\
    \ { (sum, num) =>\n            val newSum = sum + num\n            if (newSum\
    \ < minSum) newSum else minSum\n        }\n        minSum", "        val numsSet\
    \ = nums.toSet\n        val numsSetSize = numsSet.size\n        val numsSetIterator\
    \ = numsSet.iterator\n        val numsSetIteratorSize = numsSetIterator.size\n\
    \        val numsSetIteratorIterator = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize\
    \ = numsSetIteratorIterator.size\n        val numsSetIteratorIteratorIterator\
    \ = numsSetIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L)((sum,\
    \ num) => sum + num)\n        val subArray = numsCopy.filter(num => num < minSum)\n\
    \        minSum - subArray.foldLeft(0L)((sum, num) => sum + num)", "        val\
    \ numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L){ (sum, num)\
    \ =>\n            val newSum = sum + num\n            if (newSum < minSum) newSum\
    \ else minSum\n        }\n        minSum", "        val numsCopy = nums.toList\n\
    \        val numsCopyCopy = numsCopy.toList\n        val numsCopyCopyCopy = numsCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopy = numsCopyCopyCopy.toList\n        val numsCopyCopyCopyCopyCopy\
    \ = numsCopyCopyCopyCopy.toList\n        val numsCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy\
    \ = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy\
    \ = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy\
    \ = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy", "        val numsMap = nums.groupBy(x\
    \ => x).mapValues(_.size)\n        val numsMapSorted = numsMap.sortBy(_._2).reverse\n\
    \        val numsMapSortedKeys = numsMapSorted.keys\n        val numsMapSortedValues\
    \ = numsMapSorted.values\n        val numsMapSortedKeysAndValues = numsMapSorted.zip(numsMapSortedValues)\n\
    \        val numsMapSortedKeysAndValuesAndSum = numsMapSortedKeysAndValues.map(x\
    \ => (x._1, x._2 + x._1))\n        val numsMapSortedKeysAndValuesAndSumAndMin\
    \ = numsMapSortedKeysAndValuesAndSum.minBy(x => x._2)\n        val numsMapSortedKeysAndValuesAndSumAndMinValue\
    \ = numsMapSortedKeysAndValuesAndSumAndMin._1\n        val numsMapSortedKeysAndValuesAndSumAndMinKeys\
    \ = numsMapSortedKeysAndValuesAndSumAndMin._2\n        val numsMapSortedKeysAndValuesAndSumAndMinKeysAndSum\
    \ = numsMapSortedKeysAndValuesAndSumAndMinKeys.map(x => (x._1, x._2 + x._1))\n\
    \        val numsMapSortedKeysAndValuesAndSumAndMinKeysAndSumAndMin = numsMapSortedKeysAndValuesAndSumAndMinKeysAndSum.minBy(x\
    \ => x._2)\n        val numsMapSortedKeysAndValuesAndSumAndMinKeysAndSumAndMinValue\
    \ = numsMapSortedKeysAndValuesAndSumAndMinKeysAndSumAndMin._1\n        val numsMapSortedKeysAndValuesAndSumAndMinKeysAndSumAndMinKeys\
    \ = numsMapSortedKeysAndValuesAndSumAndMinKeysAndSumAndMin._2\n        val numsMapSortedKeysAndValuesAndSumAndMinKeysAndSumAndMinKeysAndSum\
    \ = numsMapSortedKeysAndValuesAndSumAndMinKeysAndSumAndMinKeysAndSum.map(x =>\
    \ (x._1, x._2 + x._1))\n        val numsMapSortedKeysAndValuesAndSumAndMinKeysAndSumAndMinKeysAndSumAndMin\
    \ = numsMapSortedKeysAndValuesAndSumAndMinKeysAndSumAndMinKeysAndSum.minBy(x =>\
    \ x._2)\n        val numsMapSortedKeysAndValuesAndSumAndMinKeysAndSumAndMinKeysAndSumAndMinValue\
    \ = numsMapSortedKeysAndValuesAndSumAndMin", "        val numsSet = nums.toSet\n\
    \        val numsArray = nums.toArray\n        val numsArrayLen = numsArray.length\n\
    \        val numsArraySet = numsArray.toSet\n        val numsArrayArray = numsArray.toArray\n\
    \        val numsArraySetLen = numsArraySet.length\n        val numsArrayArrayLen\
    \ = numsArrayArray.length\n        val numsArraySetSet = numsArraySet.toSet\n\
    \        val numsArrayArraySet = numsArrayArray.toSet\n        val numsArraySetSetLen\
    \ = numsArraySetSet.length\n        val numsArrayArraySetLen = numsArrayArraySet.length\n\
    \        val numsArraySetSetSetLen = numsArraySetSetLen\n        val numsArrayArraySetSetLen\
    \ = numsArrayArraySetLen\n        val numsArraySetSetSetLen = numsArraySetSetLen\n\
    \        val numsArrayArraySetSetLen = numsArrayArraySetLen\n        val numsArraySetSetSetLen\
    \ = numsArraySetSetLen\n        val numsArrayArraySetSetLen = numsArrayArraySetLen\n\
    \        val numsArraySetSetSetLen = numsArraySetSetLen\n        val numsArrayArraySetSetLen\
    \ = numsArrayArraySetLen\n        val numsArraySetSetSetLen = numsArraySetSetLen\n\
    \        val numsArrayArraySetSetLen = numsArrayArraySetLen\n        val numsArraySetSetSetLen\
    \ = numsArraySetSetLen\n        val numsArrayArraySetSetLen = numsArrayArraySetLen\n\
    \        val numsArraySetSetSetLen = numsArraySetSetLen\n        val numsArrayArraySetSetLen\
    \ = numsArrayArraySetLen\n        val numsArraySetSetSetLen = numsArraySetSetLen\n\
    \        val numsArrayArraySetSetLen = numsArrayArraySetLen\n        val numsArraySetSetSetLen\
    \ = numsArraySetSetLen\n        val numsArrayArraySetSetLen = numsArrayArraySetLen\n\
    \        val numsArraySetSetSetLen = numsArraySetSetLen\n        val numsArrayArraySetSetLen\
    \ = numsArrayArraySetLen\n        val numsArraySetSetSetLen = numsArraySetSetLen\n\
    \        val numsArray", "        val numsCopy = nums.toList\n        val minSum\
    \ = numsCopy.foldLeft(0L){ (sum, num) =>\n            val newSum = sum + num\n\
    \            if (newSum < minSum) newSum else minSum\n        }\n        minSum",
  "        val numsSet = nums.toSet\n        val numsSortedSet = nums.sortWith(_ <\
    \ _)\n        val numsSortedSetSet = numsSortedSet.toSet\n        val numsSortedSetSetSize\
    \ = numsSortedSetSet.size\n        val numsSortedSetSetIterator = numsSortedSetSet.iterator\n\
    \        val numsSortedSetSetIteratorSize = numsSortedSetSetIterator.size\n  \
    \      val numsSortedSetSetIteratorIterator = numsSortedSetSetIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorSize = numsSortedSetSetIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIterator = numsSortedSetSetIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorSize = numsSortedSetSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIterator = numsSortedSetSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorSize = numsSortedSetSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIterator = numsSortedSetSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIterator.iterator\n      \
    \  val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorSize =\
    \ numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIterator.size\n    \
    \    val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSortedSetSetIteratorIteratorIteratorIteratorIteratorIteratorIterator",
  "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n    \
    \    val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize =\
    \ numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIter", "  \
    \      val minSum = nums.foldLeft(0L)((sum, num) => sum + num)\n        val subArray\
    \ = nums.filter(_ > minSum)\n        minSubArraySum(subArray)", "        val numsCopy\
    \ = nums.toList\n        val minSum = numsCopy.foldLeft(0L) { (sum, num) =>\n\
    \            val newSum = sum + num\n            if (newSum < minSum) newSum else\
    \ minSum\n        }\n        minSum", "        val numsCopy = nums.toList\n  \
    \      val minSum = numsCopy.foldLeft(numsCopy(0)) { (sum, num) =>\n         \
    \   val newSum = sum + num\n            if (newSum < sum) newSum else sum\n  \
    \      }\n        minSum", "        val numsSet = nums.toSet\n        val minSum\
    \ = nums.foldLeft(0L)((sum, num) => sum + num)\n        val numsSetIterator =\
    \ numsSet.iterator\n        val numsSetIteratorNext = numsSetIterator.next\n \
    \       val numsSetIteratorNextNext = numsSetIteratorNext.next\n        val numsSetIteratorNextNextNext\
    \ = numsSetIteratorNextNext.next\n        val numsSetIteratorNextNextNextNext\
    \ = numsSetIteratorNextNextNext.next\n        val numsSetIteratorNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n        val\
    \ numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n   \
    \     val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNextNext", "      \
    \  val numsSet = nums.toSet\n        val minSum = nums.foldLeft(0L) { (sum, num)\
    \ =>\n            val newSum = sum + num\n            if (numsSet.contains(newSum))\
    \ {\n                newSum\n            } else {\n                sum\n     \
    \       }\n        }\n        minSum", "        val numsSorted = nums.sortWith(_\
    \ < _)\n        val sums = numsSorted.scanLeft(0L)(_ + _)\n        sums.min",
  "        val numsMap = nums.toMap\n        val minSum = nums.foldLeft(0L) { (sum,\
    \ num) =>\n            val sum = sum + num\n            val key = numsMap.get(sum)\n\
    \            if (key == None) sum else key.get\n        }\n        minSum", " \
    \       val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L)((sum,\
    \ num) => sum + num)\n        val maxSum = numsCopy.foldRight(0L)((sum, num) =>\
    \ sum + num)\n        val minSumSubArray = numsCopy.foldLeft(0L)((sum, num) =>\
    \ {\n            val subArray = numsCopy.filter(_ != num)\n            val newSum\
    \ = sum + num\n            if (newSum < minSum) {\n                minSum = newSum\n\
    \                minSumSubArray = subArray\n            } else if (newSum > maxSum)\
    \ {\n                maxSum = newSum\n                minSumSubArray = subArray\n\
    \            }\n            newSum\n        })\n        minSumSubArray", "   \
    \     val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L) {\
    \ (sum, num) =>\n            val newSum = sum + num\n            if (newSum <\
    \ minSum) newSum else minSum\n        }\n        minSum", "        val minSum\
    \ = math.min(nums.sum)\n        val subArray = nums.filter(x => x >= minSum)\n\
    \        minSubArraySum(subArray)", "        val numsCopy = nums.toList\n    \
    \    val minSum = numsCopy.foldLeft(0L)((sum, num) => {\n            val newSum\
    \ = sum + num\n            if (newSum < minSum) {\n                minSum = newSum\n\
    \            }\n            newSum\n        })\n        minSum", "        val\
    \ numsArray = nums.toArray\n        val numsArrayLength = numsArray.length\n \
    \       val numsArraySum = numsArray.sum\n        val numsArraySumLength = numsArraySum.length\n\
    \        val numsArraySumMinusOne = numsArraySum - 1\n        val numsArraySumMinusOneLength\
    \ = numsArraySumMinusOne.length\n        val numsArraySumMinusOneArray = numsArraySumMinusOne.toArray\n\
    \        val numsArraySumMinusOneArrayLength = numsArraySumMinusOneArray.length\n\
    \        val numsArraySumMinusOneArraySum = numsArraySumMinusOneArray.sum\n  \
    \      val numsArraySumMinusOneArraySumLength = numsArraySumMinusOneArraySum.length\n\
    \        val numsArraySumMinusOneArraySumMinusOne = numsArraySumMinusOneArraySum\
    \ - 1\n        val numsArraySumMinusOneArraySumMinusOneLength = numsArraySumMinusOneArraySumMinusOne.length\n\
    \        val numsArraySumMinusOneArraySumMinusOneArray = numsArraySumMinusOneArraySumMinusOne.toArray\n\
    \        val numsArraySumMinusOneArraySumMinusOneArrayLength = numsArraySumMinusOneArraySumMinusOneArray.length\n\
    \        val numsArraySumMinusOneArraySumMinusOneArraySum = numsArraySumMinusOneArraySumMinusOneArray.sum\n\
    \        val numsArraySumMinusOneArraySumMinusOneArraySumLength = numsArraySumMinusOneArraySumMinusOneArraySum.length\n\
    \        val numsArraySumMinusOneArraySumMinusOneArraySumMinusOne = numsArraySumMinusOneArraySumMinusOneArraySum\
    \ - 1\n        val numsArraySumMinusOneArraySumMinusOneArraySumMinusOneLength\
    \ = numsArraySumMinusOneArraySumMinusOneArraySumMinusOne.length\n        val numsArraySumMinusOneArraySumMinusOneArraySumMinusOneArray\
    \ = numsArraySumMinusOneArraySumMinusOneArraySumMinusOne.toArray\n        val\
    \ numsArraySumMinusOneArraySumMinusOneArraySumMinusOneArrayLength = numsArraySumMinusOneArraySumMinusOneArraySumMinusOneArray.length\n\
    \        val nums", "        val numsSorted = nums.sortWith(_ < _)\n        val\
    \ minSum = numsSorted.head\n        val minSumIndex = numsSorted.indexWhere(_\
    \ == minSum)\n        val minSumSubArray = numsSorted.take(minSumIndex + 1)\n\
    \        val minSumSubArraySum = minSumSubArray.sum\n        minSumSubArraySum",
  "        val numsCopy = nums.toList\n        val sums = mutable.ArrayBuffer.empty[Long]\n\
    \        val minSum = Long.MaxValue\n        for(i <- 0 until numsCopy.size) {\n\
    \            val curSum = numsCopy(i) + sums.last\n            sums += curSum\n\
    \            if(curSum < minSum) {\n                minSum = curSum\n        \
    \    }\n        }\n        minSum", "        val numsCopy = nums.toList\n    \
    \    val minSum = numsCopy.foldLeft(0L)((sum, num) => {\n            val newSum\
    \ = sum + num\n            if (newSum < minSum) newSum else minSum\n        })\n\
    \        minSum", "        val numsCopy = nums.toList\n        val sums = mutable.HashMap.empty[Long,\
    \ Long]\n        val minSum = Long.MaxValue\n        for(i <- 0 until numsCopy.size)\
    \ {\n            val curSum = numsCopy(i) + sums.getOrElse(numsCopy(i), 0L)\n\
    \            sums.put(numsCopy(i), curSum)\n            if(curSum < minSum) {\n\
    \                minSum = curSum\n            }\n        }\n        minSum", " \
    \       val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L)((sum,\
    \ num) => {\n            val newSum = sum + num\n            if (newSum < minSum)\
    \ newSum else minSum\n        })\n        minSum", "        val minSum = math.min(nums.sum)\n\
    \        val minSubArray = nums.filter(x => x >= minSum).map(x => x - minSum).sorted\n\
    \        minSubArray.foldLeft(math.min(nums.sum)) { (sum, elem) => sum + elem\
    \ }", "        val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorNext = numsSetIterator.next\n        val numsSetIteratorNextValue\
    \ = numsSetIteratorNext.asInstanceOf[Long]\n        val numsSetIteratorNextNext\
    \ = numsSetIteratorNext.next\n        val numsSetIteratorNextNextValue = numsSetIteratorNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNext = numsSetIteratorNextNext.next\n    \
    \    val numsSetIteratorNextNextNextValue = numsSetIteratorNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNext = numsSetIteratorNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextValue = numsSetIteratorNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNext = numsSetIteratorNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSet", " \
    \       val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorNext = numsSetIterator.next\n        val numsSetIteratorNextValue\
    \ = numsSetIteratorNext.get\n        val numsSetIteratorNextNext = numsSetIteratorNext.next\n\
    \        val numsSetIteratorNextNextValue = numsSetIteratorNextNext.get\n    \
    \    val numsSetIteratorNextNextNext = numsSetIteratorNextNext.next\n        val\
    \ numsSetIteratorNextNextNextValue = numsSetIteratorNextNextNext.get\n       \
    \ val numsSetIteratorNextNextNextNext = numsSetIteratorNextNextNext.next\n   \
    \     val numsSetIteratorNextNextNextNextValue = numsSetIteratorNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNext = numsSetIteratorNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNext",
  "        val numsSorted = nums.sortWith(_ < _)\n        val numsSortedLength = numsSorted.length\n\
    \        val numsSortedSum = numsSorted.sum\n        val numsSortedSumLength =\
    \ numsSortedSum.length\n        val numsSortedSumMinusOne = numsSortedSum - numsSortedSumLength\n\
    \        val numsSortedSumMinusOneLength = numsSortedSumMinusOne.length\n    \
    \    val numsSortedSumMinusOneMinusOne = numsSortedSumMinusOne - numsSortedSumMinusOneLength\n\
    \        val numsSortedSumMinusOneMinusOneLength = numsSortedSumMinusOneMinusOne.length\n\
    \        val numsSortedSumMinusOneMinusOneMinusOne = numsSortedSumMinusOneMinusOne\
    \ - numsSortedSumMinusOneMinusOneLength\n        val numsSortedSumMinusOneMinusOneMinusOneLength\
    \ = numsSortedSumMinusOneMinusOneMinusOne.length\n        val numsSortedSumMinusOneMinusOneMinusOneMinusOne\
    \ = numsSortedSumMinusOneMinusOneMinusOne - numsSortedSumMinusOneMinusOneMinusOneLength\n\
    \        val numsSortedSumMinusOneMinusOneMinusOneMinusOneLength = numsSortedSumMinusOneMinusOneMinusOneMinusOne.length\n\
    \        val numsSortedSumMinusOneMinusOneMinusOneMinusOneMinusOne = numsSortedSumMinusOneMinusOneMinusOneMinusOneMinusOneLength\
    \ - numsSortedSumMinusOneMinusOneMinusOneMinusOneMinusOneLength\n        val numsSortedSumMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsSortedSumMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneLength - numsSortedSumMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneLength\n\
    \        val numsSortedSumMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneLength\
    \ = numsSortedSumMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneLength\
    \ - numsSortedSumMinusOneMinusOneMinusOneMinusOneMin", "        val numsSorted\
    \ = nums.sortWith(_ < _)\n        val sums = numsSorted.scanLeft(0)(_ + _)\n \
    \       val minSum = sums.min\n        val minSumIndex = sums.indexOf(minSum)\n\
    \        sums(minSumIndex)", "        val numsSet = nums.toSet\n        val numsSetSize\
    \ = numsSet.size\n        val numsSetIterator = numsSet.iterator\n        val\
    \ numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsCopy = nums.toList\n        val numsCopyLength = numsCopy.length\n\
    \        val numsCopyMin = numsCopy.min\n        val numsCopyMax = numsCopy.max\n\
    \        val numsCopySum = numsCopy.sum\n        val numsCopySumMin = numsCopySum.min\n\
    \        val numsCopySumMax = numsCopySum.max\n        val numsCopySumSum = numsCopySum.sum\n\
    \        val numsCopySumSumMin = numsCopySumSum.min\n        val numsCopySumSumMax\
    \ = numsCopySumSum.max\n        val numsCopySumSumSum = numsCopySumSum.sum\n \
    \       val numsCopySumSumSumMin = numsCopySumSumSum.min\n        val numsCopySumSumSumMax\
    \ = numsCopySumSumSum.max\n        val numsCopySumSumSumSum = numsCopySumSumSum.sum\n\
    \        val numsCopySumSumSumSumMin = numsCopySumSumSumSum.min\n        val numsCopySumSumSumSumMax\
    \ = numsCopySumSumSumSum.max\n        val numsCopySumSumSumSumSum = numsCopySumSumSumSum.sum\n\
    \        val numsCopySumSumSumSumMin = numsCopySumSumSumSum.min\n        val numsCopySumSumSumSumMax\
    \ = numsCopySumSumSumSum.max\n        val numsCopySumSumSumSumSum = numsCopySumSumSumSum.sum\n\
    \        val numsCopySumSumSumSumSumMin = numsCopySumSumSumSumSum.min\n      \
    \  val numsCopySumSumSumSumMax = numsCopySumSumSumSum.max\n        val numsCopySumSumSumSumSum\
    \ = numsCopySumSumSumSum.sum\n        val numsCopySumSumSumSumSumMin = numsCopySumSumSumSumSum.min\n\
    \        val numsCopySumSumSumSumSumMax = numsCopySumSumSumSumSum.max\n      \
    \  val numsCopySumSumSumSumSum = numsCopySumSumSumSumSum.sum\n        val numsCopySumSumSumSumSumMin\
    \ = numsCopySumSumSumSumSum.min\n        val numsCopySumSumSumSumSumMax = numsCopySum",
  "        val numsSet = nums.toSet\n        val numsArray = nums.toArray\n      \
    \  val numsArraySet = numsArray.toSet\n        val numsArrayArray = numsArray.toArray\n\
    \        val numsArraySetArray = numsArraySet.toArray\n        val numsArrayArraySet\
    \ = numsArrayArray.toSet\n        val numsArrayArrayArray = numsArrayArray.toArray\n\
    \        val numsArraySetArraySet = numsArraySetArray.toSet\n        val numsArrayArrayArraySet\
    \ = numsArrayArrayArray.toSet\n        val numsArraySetArrayArraySet = numsArraySetArray.toArray\n\
    \        val numsArrayArrayArraySet = numsArrayArrayArray.toSet\n        val numsArraySetArrayArrayArraySet\
    \ = numsArraySetArrayArray.toArray\n        val numsArrayArrayArraySetArray =\
    \ numsArrayArrayArraySet.toSet\n        val numsArraySetArrayArrayArraySetArray\
    \ = numsArraySetArrayArrayArraySet.toArray\n        val numsArraySetArrayArrayArraySetArrayArraySet\
    \ = numsArraySetArrayArrayArraySet.toSet\n        val numsArrayArrayArraySetArrayArraySetArrayArraySet\
    \ = numsArrayArrayArraySet.toArray\n        val numsArraySetArrayArrayArraySetArrayArraySetArraySet\
    \ = numsArraySetArrayArrayArraySet.toSet\n        val numsArrayArrayArraySetArrayArraySetArraySetArraySetArraySet\
    \ = numsArrayArrayArraySet.toArray\n        val numsArraySetArrayArrayArraySetArraySetArraySetArraySetArraySet\
    \ = numsArraySetArrayArraySet.toSet\n        val numsArrayArrayArraySetArraySetArraySetArraySetArraySetArraySet\
    \ = numsArrayArrayArraySet.toArray\n        val numsArraySetArrayArrayArraySetArraySetArraySetArraySetArraySetArraySet\
    \ = numsArraySetArrayArraySet.toSet\n        val numsArrayArrayArraySetArraySetArraySetArraySetArraySetArraySetArraySetArraySet\
    \ = numsArrayArrayArraySet.toArray\n        val numsArraySetArrayArrayArraySetArraySetArraySetArraySetArraySetArraySetArraySet\
    \ = numsArraySetArrayArraySet.toSet\n        val numsArrayArrayArraySetArraySetArraySetArraySetArraySetArraySetArraySetArraySetArraySet\
    \ = numsArrayArrayArraySet.to", "        val numsSet = nums.toSet\n        val\
    \ numsSetSize = numsSet.size\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val minSum = nums.foldLeft(0L)\
    \ { (sum, num) =>\n            val newSum = sum + num\n            if (numsSet.contains(newSum))\
    \ {\n                newSum\n            } else {\n                sum\n     \
    \       }\n        }\n        minSum", "        val numsSet = nums.toSet\n   \
    \     val minSum = nums.foldLeft(0L) { (sum, num) =>\n            val newSum =\
    \ sum + num\n            if (numsSet.contains(newSum)) {\n                newSum\n\
    \            } else {\n                sum\n            }\n        }\n       \
    \ minSum", "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(numsCopy(0))\
    \ { (sum, num) =>\n            val newSum = sum + num\n            if (newSum\
    \ < 0) newSum\n            else newSum\n        }\n        minSum", "        val\
    \ numsSet = nums.toSet\n        val numsSortedSet = nums.sortWith(_ < _)\n   \
    \     val numsSortedSetSize = numsSortedSet.size\n        val numsSortedSetIterator\
    \ = numsSortedSet.iterator\n        val numsSortedSetIteratorSize = numsSortedSetIterator.size\n\
    \        val numsSortedSetIteratorIterator = numsSortedSetIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorSize = numsSortedSetIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIterator = numsSortedSetIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIterator = numsSortedSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIterator = numsSortedSetIteratorIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIterator", "        val numsArray = nums.toArray\n\
    \        val numsArrayLen = numsArray.length\n        val minSum = numsArray(0)\n\
    \        val minSumIndex = numsArrayLen - 1\n        val minSumArray = Array.ofDim[Long](numsArrayLen)\n\
    \        val numsArrayCopy = numsArray.clone()\n        val numsArrayCopyLen =\
    \ numsArrayCopy.length\n        val numsArrayCopyCopy = numsArrayCopy.clone()\n\
    \        val numsArrayCopyCopyLen = numsArrayCopyCopy.length\n        val numsArrayCopyCopyCopy\
    \ = numsArrayCopyCopy.clone()\n        val numsArrayCopyCopyCopyLen = numsArrayCopyCopyCopy.length\n\
    \        val numsArrayCopyCopyCopyCopy = numsArrayCopyCopyCopy.clone()\n     \
    \   val numsArrayCopyCopyCopyCopyLen = numsArrayCopyCopyCopyCopy.length\n    \
    \    val numsArrayCopyCopyCopyCopyCopy = numsArrayCopyCopyCopyCopy.clone()\n \
    \       val numsArrayCopyCopyCopyCopyLen = numsArrayCopyCopyCopyCopyLen.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopy = numsArrayCopyCopyCopyCopyCopy.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopyLen = numsArrayCopyCopyCopyCopyCopyLen.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopyCopy = numsArrayCopyCopyCopyCopyCopyCopy.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopyLen = numsArrayCopyCopyCopyCopyCopyLen.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopy = numsArrayCopyCopyCopyCopyCopy.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopyLen = numsArrayCopyCopyCopyCopyCopyLen.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopyCopy = numsArrayCopyCopyCopyCopyCopyCopy.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopyCopyLen = numsArrayCopyCopyCopyCopyCopyCopyLen.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopyCopy = numsArrayCopyCopyCopyCopyCopyCopy.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopyLen = numsArrayCopyCopyCopyCopyCopyLen.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopy = numsArrayCopyCopyCopyCopyCopyCopy.clone()\n\
    \        val numsArrayCopyCopyCopyCopyCopyLen = numsArray", "        val numsSet\
    \ = nums.toSet\n        val numsSetSize = numsSet.size\n        val numsSetIterator\
    \ = numsSet.iterator\n        val numsSetIteratorSize = numsSetIterator.size\n\
    \        val numsSetIteratorIterator = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize\
    \ = numsSetIteratorIterator.size\n        val numsSetIteratorIteratorIterator\
    \ = numsSetIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(numsCopy.head)\
    \ { (sum, num) =>\n            if (num > sum) num\n            else sum\n    \
    \    }\n        minSum", "        val numsSet = nums.toSet\n        val numsSortedSet\
    \ = nums.sort\n        val numsSortedSetSize = numsSortedSet.size\n        val\
    \ numsSortedSetIterator = numsSortedSet.iterator\n        val numsSortedSetIteratorSize\
    \ = numsSortedSetIterator.size\n        val numsSortedSetIteratorIterator = numsSortedSetIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorSize = numsSortedSetIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIterator = numsSortedSetIteratorIterator.iterator\n\
    \        val numsSortedSetIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSortedSetIteratorIteratorIteratorIteratorIteratorIterator.size\n     \
    \   val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSortedSetIteratorIteratorIteratorIteratorIteratorIterator.size\n     \
    \   val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSortedSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSortedSetIteratorIteratorIteratorIteratorIteratorIterator.size\n     \
    \   val numsSortedSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsArray = nums.toArray\n        val numsArrayLen = numsArray.length\n\
    \        val minSum = numsArray(0)\n        val minSumIndex = 0\n        val minSumIndexArray\
    \ = Array.fill[Int](numsArrayLen)(0)\n        val minSumIndexArrayLen = numsArrayLen\n\
    \        val minSumIndexArrayCopy = numsArrayCopy.asInstanceOf[Array[Int]]\n \
    \       val minSumIndexArrayCopyLen = numsArrayCopyLen\n        val minSumIndexArrayCopyCopy\
    \ = numsArrayCopyCopy.asInstanceOf[Array[Int]]\n        val minSumIndexArrayCopyCopyLen\
    \ = numsArrayCopyCopyLen\n        val minSumIndexArrayCopyCopyCopy = numsArrayCopyCopy.asInstanceOf[Array[Int]]\n\
    \        val minSumIndexArrayCopyCopyCopyLen = numsArrayCopyCopyLen\n        val\
    \ minSumIndexArrayCopyCopyCopyCopy = numsArrayCopyCopy.asInstanceOf[Array[Int]]\n\
    \        val minSumIndexArrayCopyCopyCopyCopyLen = numsArrayCopyCopyLen\n    \
    \    val minSumIndexArrayCopyCopyCopyCopy = numsArrayCopyCopy.asInstanceOf[Array[Int]]\n\
    \        val minSumIndexArrayCopyCopyCopyCopyLen = numsArrayCopyCopyLen\n    \
    \    val minSumIndexArrayCopyCopyCopyCopyCopy = numsArrayCopyCopy.asInstanceOf[Array[Int]]\n\
    \        val minSumIndexArrayCopyCopyCopyCopyLen = numsArrayCopyCopyLen\n    \
    \    val minSumIndexArrayCopyCopyCopyCopy = numsArrayCopyCopy.asInstanceOf[Array[Int]]\n\
    \        val minSumIndexArrayCopyCopyCopyCopyLen = numsArrayCopyCopyLen\n    \
    \    val minSumIndexArrayCopyCopyCopyCopy = numsArrayCopyCopy.asInstanceOf[Array[Int]]\n\
    \        val minSumIndexArrayCopyCopyCopyCopyLen = numsArrayCopyCopyLen\n    \
    \    val minSumIndexArrayCopyCopyCopyCopy = numsArrayCopyCopy.asInstanceOf[Array[Int]]\n\
    \        val minSumIndexArrayCopyCopyCopyCopyLen = numsArrayCopyCopyLen\n    \
    \    val minSumIndexArrayCopyCopyCopyCopy = numsArrayCopyCopy.asInstanceOf[Array[Int]]\n\
    \        val minSumIndexArrayCopyCopyCopyCopyLen = numsArrayCopyCopyLen\n    \
    \    val min", "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L)((sum,\
    \ num) => sum + num)\n        val numsCopy2 = numsCopy.filterNot(_ == minSum)\n\
    \        val minSum2 = numsCopy2.foldLeft(0L)((sum, num) => sum + num)\n     \
    \   val numsCopy3 = numsCopy2.filterNot(_ == minSum2)\n        val minSum3 = numsCopy3.foldLeft(0L)((sum,\
    \ num) => sum + num)\n        minSum3", "        val numsSet = nums.toSet\n  \
    \      val minSum = nums.foldLeft(0L) { (sum, num) =>\n            val newSum\
    \ = sum + num\n            if (numsSet.contains(newSum)) {\n                newSum\n\
    \            } else {\n                sum\n            }\n        }\n       \
    \ minSum", "        val minSum = math.min(nums.sum, math.max(nums.sum))\n    \
    \    val subArray = nums.filter(_ > minSum)\n        val subArraySum = subArray.sum\n\
    \        if (subArraySum == 0) minSum\n        else minSum - subArraySum", " \
    \       val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n   \
    \     val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n       \
    \ val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n       \
    \ val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIterator", "        val numsSorted = nums.sortWith(_ < _)\n       \
    \ val numsSortedLength = numsSorted.length\n        val numsSortedSum = numsSorted.sum\n\
    \        val numsSortedSumLength = numsSortedSum.length\n        val numsSortedSumArray\
    \ = numsSortedSum.toArray\n        val numsSortedSumArrayLength = numsSortedSumArray.length\n\
    \        val numsSortedSumArraySum = numsSortedSumArray.sum\n        val numsSortedSumArraySumLength\
    \ = numsSortedSumArraySum.length\n        val numsSortedSumArraySumArray = numsSortedSumArraySum.toArray\n\
    \        val numsSortedSumArraySumArrayLength = numsSortedSumArraySumArray.length\n\
    \        val numsSortedSumArraySumArraySum = numsSortedSumArraySumArray.sum\n\
    \        val numsSortedSumArraySumArraySumLength = numsSortedSumArraySumArraySum.length\n\
    \        val numsSortedSumArraySumArraySumArray = numsSortedSumArraySumArraySum.toArray\n\
    \        val numsSortedSumArraySumArraySumArrayLength = numsSortedSumArraySumArraySumArray.length\n\
    \        val numsSortedSumArraySumArraySumArraySum = numsSortedSumArraySumArraySumArray.sum\n\
    \        val numsSortedSumArraySumArraySumArraySumLength = numsSortedSumArraySumArraySumArraySum.length\n\
    \        val numsSortedSumArraySumArraySumArraySumArray = numsSortedSumArraySumArraySumArraySum.toArray\n\
    \        val numsSortedSumArraySumArraySumArraySumArrayLength = numsSortedSumArraySumArraySumArraySumArray.length\n\
    \        val numsSortedSumArraySumArraySumArraySumArraySum = numsSortedSumArraySumArraySumArraySum.sum\n\
    \        val numsSortedSumArraySumArraySumArraySumArraySumLength = numsSortedSumArraySumArraySumArraySumArraySumArray.length\n\
    \        val numsSortedSumArraySumArraySumArraySumArraySumArray = numsSortedSumArraySumArraySumArraySumArraySum.toArray\n\
    \        val numsSortedSumArraySumArraySumArraySumArraySumArrayLength = numsSortedSumArraySumArraySumArraySumArraySumArray.length\n\
    \        val numsSortedSumArraySumArraySumArraySumArraySumArraySum = numsSortedSumArraySumArraySumArraySumArraySum.sum\n\
    \        val numsSortedSumArraySumArraySumArraySumArraySumArrayLength = ", " \
    \       val numsSet = nums.toSet\n        val minSum = nums.foldLeft(0L)((sum,\
    \ num) => sum + num)\n        val minSumSet = numsSet.foldLeft(0L)((sum, num)\
    \ => sum + num)\n        minSum - minSumSet", "        val numsSet = nums.toSet\n\
    \        val numsSortedSet = nums.sortBy(math.abs)\n        val numsSortedSetSet\
    \ = numsSortedSet.toSet\n        val numsSortedSetSetSet = numsSortedSetSet.toSet\n\
    \        val numsSortedSetSetSetSet = numsSortedSetSetSet.toSet\n        val numsSortedSetSetSetSetSet\
    \ = numsSortedSetSetSetSet.toSet\n        val numsSortedSetSetSetSetSetSet = numsSortedSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSet = numsSortedSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSet = numsSortedSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSet = numsSortedSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSetSetSetSetSetSetSetSet = numsSortedSetSetSetSetSetSet.toSet\n\
    \        val numsSortedSetSet", "        val numsSet = nums.toSet\n        val\
    \ numsSetIterator = numsSet.iterator\n        val numsSetIteratorNext = numsSetIterator.next\n\
    \        val numsSetIteratorNextValue = numsSetIteratorNext.get\n        val numsSetIteratorNextNext\
    \ = numsSetIteratorNext.next\n        val numsSetIteratorNextNextValue = numsSetIteratorNextNext.get\n\
    \        val numsSetIteratorNextNextNext = numsSetIteratorNextNext.next\n    \
    \    val numsSetIteratorNextNextNextValue = numsSetIteratorNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNext = numsSetIteratorNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextValue = numsSetIteratorNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNext = numsSetIteratorNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.get\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNext",
  "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n    \
    \    val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize =\
    \ numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator",
  "        val numsSet = nums.toSet\n        val numsArray = nums.toArray\n      \
    \  val numsArrayLen = numsArray.length\n        val numsSetLen = numsSet.length\n\
    \        val numsArraySum = numsArray.foldLeft(0L){ (sum, num) => sum + num }\n\
    \        val numsSetSum = numsSet.foldLeft(0L){ (sum, num) => sum + num }\n  \
    \      val numsSetSumMin = numsSet.foldLeft(0L){ (sum, num) => if (sum < num)\
    \ sum else num }\n        val numsSetSumMax = numsSet.foldLeft(0L){ (sum, num)\
    \ => if (sum > num) sum else num }\n        val numsSetSumMinMax = numsSet.foldLeft(0L){\
    \ (sum, num) => if (sum < num && sum > num) sum else num }\n        val numsSetSumMinMax2\
    \ = numsSet.foldLeft(0L){ (sum, num) => if (sum < num || sum > num) sum else num\
    \ }\n        val numsSetSumMinMax3 = numsSet.foldLeft(0L){ (sum, num) => if (sum\
    \ < num && sum > num) sum else num }\n        val numsSetSumMinMax4 = numsSet.foldLeft(0L){\
    \ (sum, num) => if (sum < num || sum > num) sum else num }\n        val numsSetSumMinMax5\
    \ = numsSet.foldLeft(0L){ (sum, num) => if (sum < num && sum > num) sum else num\
    \ }\n        val numsSetSumMinMax6 = numsSet.foldLeft(0L){ (sum, num) => if (sum\
    \ < num || sum > num) sum else num }\n        val numsSetSumMinMax7 = numsSet.foldLeft(0L){\
    \ (sum, num) => if (sum < num && sum > num) sum else num }\n        val numsSetSumMinMax8\
    \ = numsSet.foldLeft(0L){ (sum, num) => if (sum < num || sum > num) sum else num\
    \ }\n        val numsSetSumMinMax9 = numsSet.foldLeft(0L){ (sum, num) => if (sum\
    \ < num && sum > num) sum else num }\n        val nums", "        val numsArray\
    \ = nums.toArray\n        val numsArrayLength = numsArray.length\n        val\
    \ numsArraySum = numsArray.foldLeft(0L) { (sum, elem) => sum + elem }\n      \
    \  val numsArraySumLength = numsArraySum.length\n        val numsArraySumSubArray\
    \ = numsArray.foldLeft(0L) { (sum, elem) => sum + elem }\n        val numsArraySumSubArrayLength\
    \ = numsArraySumSubArray.length\n        val numsArraySumSubArraySubArray = numsArray.foldLeft(0L)\
    \ { (sum, elem) => sum + elem }\n        val numsArraySumSubArraySubArrayLength\
    \ = numsArraySumSubArraySubArray.length\n        val numsArraySumSubArraySubArraySubArray\
    \ = numsArray.foldLeft(0L) { (sum, elem) => sum + elem }\n        val numsArraySumSubArraySubArraySubArrayLength\
    \ = numsArraySumSubArraySubArraySubArray.length\n        val numsArraySumSubArraySubArraySubArraySubArray\
    \ = numsArray.foldLeft(0L) { (sum, elem) => sum + elem }\n        val numsArraySumSubArraySubArraySubArraySubArrayLength\
    \ = numsArraySumSubArraySubArraySubArray.length\n        val numsArraySumSubArraySubArraySubArraySubArraySubArray\
    \ = numsArray.foldLeft(0L) { (sum, elem) => sum + elem }\n        val numsArraySumSubArraySubArraySubArraySubArraySubArrayLength\
    \ = numsArraySumSubArraySubArraySubArraySubArray.length\n        val numsArraySumSubArraySubArraySubArraySubArraySubArraySubArrayLength\
    \ = numsArraySumSubArraySubArraySubArraySubArraySubArray.length\n        val numsArraySumSubArraySubArraySubArraySubArraySubArraySubArrayLength\
    \ = numsArraySumSubArraySubArraySubArraySubArraySubArray.length\n        val numsArraySumSubArraySubArraySubArraySubArraySubArraySubArrayLength\
    \ = numsArraySumSubArraySubArraySubArraySubArraySubArraySubArray.length\n    \
    \    val numsArraySumSubArraySubArraySubArraySubArraySubArraySubArraySubArrayLength\
    \ = numsArraySumSubArraySubArraySubArraySubArraySubArraySubArray.length\n    \
    \    val numsArraySumSubArraySubArraySubArraySubArraySubArraySubArray", "    \
    \    val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(numsCopy(0))\
    \ { (sum, num) =>\n            val newSum = sum + num\n            if (newSum\
    \ < sum) newSum else sum\n        }\n        minSum", "        val minSum = math.Long.MaxValue\n\
    \        val numsCopy = nums.toList\n        val numsCopyLength = numsCopy.length\n\
    \        val numsCopyIterator = numsCopy.iterator\n        val numsCopyIteratorLength\
    \ = numsCopyIterator.length\n        val numsCopyIteratorNext = numsCopyIterator.next\n\
    \        val numsCopyIteratorNextLength = numsCopyIteratorNext.length\n      \
    \  val numsCopyIteratorNextNext = numsCopyIteratorNext.next\n        val numsCopyIteratorNextNextLength\
    \ = numsCopyIteratorNextNext.length\n        val numsCopyIteratorNextNextNext\
    \ = numsCopyIteratorNextNext.next\n        val numsCopyIteratorNextNextNextLength\
    \ = numsCopyIteratorNextNextNext.length\n        val numsCopyIteratorNextNextNextNext\
    \ = numsCopyIteratorNextNextNext.next\n        val numsCopyIteratorNextNextNextNextLength\
    \ = numsCopyIteratorNextNextNextNext.length\n        val numsCopyIteratorNextNextNextNextNext\
    \ = numsCopyIteratorNextNextNextNext.next\n        val numsCopyIteratorNextNextNextNextNextLength\
    \ = numsCopyIteratorNextNextNextNextNext.length\n        val numsCopyIteratorNextNextNextNextNextNext\
    \ = numsCopyIteratorNextNextNextNextNext.next\n        val numsCopyIteratorNextNextNextNextNextNextLength\
    \ = numsCopyIteratorNextNextNextNextNextNext.length\n        val numsCopyIteratorNextNextNextNextNextNextNext\
    \ = numsCopyIteratorNextNextNextNextNextNext.next\n        val numsCopyIteratorNextNextNextNextNextNextNextLength\
    \ = numsCopyIteratorNextNextNextNextNextNextNext.length\n        val numsCopyIteratorNextNextNextNextNextNextNextNext\
    \ = numsCopyIteratorNextNextNextNextNextNextNextNext.next\n        val numsCopyIteratorNextNextNextNextNextNextNextNextLength\
    \ = numsCopyIteratorNextNextNextNextNextNextNextNextNext.length\n        val numsCopyIteratorNextNextNextNextNextNextNextNextNext\
    \ = numsCopyIteratorNextNextNextNextNextNextNextNextNextNext.next\n        val\
    \ numsCopyIteratorNextNextNextNextNextNextNextNextNextLength = numsCopyIteratorNextNextNextNextNextNextNextNextNextNext.length\n\
    \        val numsCopyIteratorNextNextNextNextNextNextNextNextNextNext = numsCopyIteratorNextNextNextNext",
  "        val numsMap = nums.groupBy(x => x).mapValues(_.size)\n        val numsMapSorted\
    \ = numsMap.sortBy(_._2).reverse\n        val minSum = numsMapSorted.head._2\n\
    \        val minSumList = numsMapSorted.filter(_._2 == minSum).map(_._1)\n   \
    \     minSumList.sum", "        val numsSet = nums.toSet\n        val numsSetSize\
    \ = numsSet.size\n        val numsSetIterator = numsSet.iterator\n        val\
    \ numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIterator", "        val numsSet = nums.toSet\n        val numsSetSize\
    \ = numsSet.size\n        val numsSetIterator = numsSet.iterator\n        val\
    \ numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n   \
    \     val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator", "        val numsSorted = nums.sortWith(_\
    \ < _)\n        val numsSum = numsSorted.foldLeft(0L)((sum, num) => sum + num)\n\
    \        val numsSumList = numsSorted.toList\n        val numsSumListLength =\
    \ numsSumList.length\n        val numsSumListLength = numsSumListLength - 1\n\
    \        val numsSumListLength = numsSumListLength - 1\n        val numsSumListLength\
    \ = numsSumListLength - 1\n        val numsSumListLength = numsSumListLength -\
    \ 1\n        val numsSumListLength = numsSumListLength - 1\n        val numsSumListLength\
    \ = numsSumListLength - 1\n        val numsSumListLength = numsSumListLength -\
    \ 1\n        val numsSumListLength = numsSumListLength - 1\n        val numsSumListLength\
    \ = numsSumListLength - 1\n        val numsSumListLength = numsSumListLength -\
    \ 1\n        val numsSumListLength = numsSumListLength - 1\n        val numsSumListLength\
    \ = numsSumListLength - 1\n        val numsSumListLength = numsSumListLength -\
    \ 1\n        val numsSumListLength = numsSumListLength - 1\n        val numsSumListLength\
    \ = numsSumListLength - 1\n        val numsSumListLength = numsSumListLength -\
    \ 1\n        val numsSumListLength = numsSumListLength - 1\n        val numsSumListLength\
    \ = numsSumListLength - 1\n        val numsSumListLength = numsSumListLength -\
    \ 1\n        val numsSumListLength = numsSumListLength - 1\n        val numsSumListLength\
    \ = numsSumListLength - 1\n        val numsSumListLength = numsSumListLength -\
    \ 1\n        val numsSumListLength = numsSumListLength - 1\n        val numsSumListLength\
    \ = numsSumListLength - 1\n        val numsSumListLength = numsSumListLength -\
    \ 1\n        val numsSumListLength = numsSumListLength - 1\n        val numsSumListLength\
    \ = numsSumListLength - 1\n        val numsSumListLength = numsSumListLength -\
    \ 1\n        val numsSumListLength = numsSumListLength - 1\n        val numsSumListLength\
    \ = numsSumListLength - 1\n        val numsSumListLength = numsSumListLength -\
    \ 1\n        val numsSumListLength = numsSumListLength", "        val numsCopy\
    \ = nums.toList\n        val minSum = numsCopy.foldLeft(0L) { (sum, num) =>\n\
    \            val newSum = sum + num\n            if (newSum < minSum) newSum else\
    \ minSum\n        }\n        minSum", "        val numsCopy = nums.toList\n  \
    \      val numsCopySize = numsCopy.size\n        val numsCopyCopy = numsCopy.toList\n\
    \        val numsCopyCopySize = numsCopyCopy.size\n        val numsCopyCopyCopy\
    \ = numsCopyCopy.toList\n        val numsCopyCopyCopySize = numsCopyCopyCopy.size\n\
    \        val numsCopyCopyCopyCopy = numsCopyCopyCopy.toList\n        val numsCopyCopyCopyCopySize\
    \ = numsCopyCopyCopyCopy.size\n        val numsCopyCopyCopyCopyCopy = numsCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopySize = numsCopyCopyCopyCopyCopy.size\n  \
    \      val numsCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopy.toList\n  \
    \      val numsCopyCopyCopyCopyCopyCopySize = numsCopyCopyCopyCopyCopyCopy.size\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopySize = numsCopyCopyCopyCopyCopyCopyCopyCopy.size\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopySize = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.size\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopySize = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.size\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopySize = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.size\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.toList\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopySize = numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopy.size\n\
    \        val numsCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopyCopySize\
    \ = nums", "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L)\
    \ { (sum, num) =>\n            val newSum = sum + num\n            if (newSum\
    \ < minSum) newSum else minSum\n        }\n        minSum", "        val numsMap\
    \ = nums.groupBy(x => x).mapValues(_.size)\n        val minSum = numsMap.minBy(_._2)._2\n\
    \        val minSumList = numsMap.filter(_._2 == minSum).map(_._1)\n        minSumList.sum",
  "        val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L)\
    \ { (sum, elem) => sum + elem }\n        val minSubArray = numsCopy.filter(elem\
    \ => sum - elem < minSum)\n        minSubArray.foldLeft(0L) { (sum, elem) => sum\
    \ + elem }", "        val numsSet = nums.toSet\n        val numsSetIterator =\
    \ numsSet.iterator\n        val numsSetIteratorNext = numsSetIterator.next\n \
    \       val numsSetIteratorNextValue = numsSetIteratorNext.toLong\n        val\
    \ numsSetIteratorNextNext = numsSetIteratorNext.next\n        val numsSetIteratorNextNextValue\
    \ = numsSetIteratorNextNext.toLong\n        val numsSetIteratorNextNextNext =\
    \ numsSetIteratorNextNext.next\n        val numsSetIteratorNextNextNextValue =\
    \ numsSetIteratorNextNextNext.toLong\n        val numsSetIteratorNextNextNextNext\
    \ = numsSetIteratorNextNextNext.next\n        val numsSetIteratorNextNextNextNextValue\
    \ = numsSetIteratorNextNextNextNext.toLong\n        val numsSetIteratorNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextValue\
    \ = numsSetIteratorNextNextNextNextNext.toLong\n        val numsSetIteratorNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextValue\
    \ = numsSetIteratorNextNextNextNextNextNext.toLong\n        val numsSetIteratorNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextNextValue\
    \ = numsSetIteratorNextNextNextNextNextNextNext.toLong\n        val numsSetIteratorNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextNextNextValue\
    \ = numsSetIteratorNextNextNextNextNextNextNextNext.toLong\n        val numsSetIteratorNextNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n        val\
    \ numsSetIteratorNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.toLong\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNextValue = numsSet",
  "        val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorNext = numsSetIterator.next\n        val numsSetIteratorNextValue\
    \ = numsSetIteratorNext.asInstanceOf[Long]\n        val numsSetIteratorNextNext\
    \ = numsSetIteratorNext.next\n        val numsSetIteratorNextNextValue = numsSetIteratorNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNext = numsSetIteratorNextNext.next\n    \
    \    val numsSetIteratorNextNextNextValue = numsSetIteratorNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNext = numsSetIteratorNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextValue = numsSetIteratorNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNext = numsSetIteratorNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSet", " \
    \       val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(0L){\
    \ (sum, num) =>\n            val newSum = sum + num\n            if (newSum <\
    \ minSum) newSum else minSum\n        }\n        minSum", "        val numsSorted\
    \ = nums.sortWith(_ < _)\n        val numsSortedLength = numsSorted.length\n \
    \       val minSum = numsSortedLength\n        val minSumIndex = numsSortedLength\n\
    \        val minSumIndexSet = mutable.HashSet[Int]()\n        val numsSortedLength\
    \ = numsSorted.length\n        for ( i <- 0 until numsSortedLength ) {\n     \
    \       val currentSum = numsSorted(i)\n            if ( currentSum < minSum )\
    \ {\n                minSum = currentSum\n                minSumIndex = i\n  \
    \          }\n            val currentSumSet = numsSortedIndexSet(i)\n        \
    \    if ( currentSumSet.contains(minSumIndex) ) {\n                minSumIndexSet\
    \ = currentSumSet\n            }\n        }\n        minSum", "        val numsSet\
    \ = nums.toSet\n        val numsSetSize = numsSet.size\n        val numsSetIterator\
    \ = numsSet.iterator\n        val numsSetIteratorSize = numsSetIterator.size\n\
    \        val numsSetIteratorIterator = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize\
    \ = numsSetIteratorIterator.size\n        val numsSetIteratorIteratorIterator\
    \ = numsSetIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorNext = numsSetIterator.next\n        val numsSetIteratorNextValue\
    \ = numsSetIteratorNext.asInstanceOf[Long]\n        val numsSetIteratorNextNext\
    \ = numsSetIteratorNext.next\n        val numsSetIteratorNextNextValue = numsSetIteratorNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNext = numsSetIteratorNextNext.next\n    \
    \    val numsSetIteratorNextNextNextValue = numsSetIteratorNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNext = numsSetIteratorNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextValue = numsSetIteratorNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNext = numsSetIteratorNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSetIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNextNextNextNextNextNextNextNext.asInstanceOf[Long]\n\
    \        val numsSetIteratorNextNextNextNextNextNextNextNextNext = numsSet", " \
    \       val numsMap = nums.toMap\n        val numsSet = nums.toSet\n        val\
    \ numsArray = nums.toArray\n        val numsArrayBuilder = new mutable.ArrayBuilder[Long]\n\
    \        numsArray.foreach(x => numsArrayBuilder.append(x))\n        val numsArrayBuilderBuilder\
    \ = new mutable.ArrayBuilder[Long]\n        numsSet.foreach(x => numsArrayBuilderBuilder.append(x))\n\
    \        val numsArrayBuilderBuilderBuilder = new mutable.ArrayBuilder[Long]\n\
    \        numsMap.foreach(x => numsArrayBuilderBuilderBuilder.append(x))\n    \
    \    val numsArrayBuilderBuilderBuilderBuilder = new mutable.ArrayBuilder[Long]\n\
    \        numsArrayBuilder.foreach(x => numsArrayBuilderBuilderBuilder.append(x))\n\
    \        val numsArrayBuilderBuilderBuilderBuilder = new mutable.ArrayBuilder[Long]\n\
    \        numsArrayBuilderBuilder.foreach(x => numsArrayBuilderBuilderBuilderBuilder.append(x))\n\
    \        val numsArrayBuilderBuilderBuilderBuilderBuilder = new mutable.ArrayBuilder[Long]\n\
    \        numsArrayBuilderBuilderBuilder.foreach(x => numsArrayBuilderBuilderBuilderBuilder.append(x))\n\
    \        val numsArrayBuilderBuilderBuilderBuilderBuilder = new mutable.ArrayBuilder[Long]\n\
    \        numsArrayBuilderBuilderBuilder.foreach(x => numsArrayBuilderBuilderBuilderBuilder.append(x))\n\
    \        val numsArrayBuilderBuilderBuilderBuilderBuilderBuilder = new mutable.ArrayBuilder[Long]\n\
    \        numsArrayBuilderBuilderBuilderBuilder.foreach(x => numsArrayBuilderBuilderBuilderBuilderBuilder.append(x))\n\
    \        val numsArrayBuilderBuilderBuilderBuilderBuilderBuilder = new mutable.ArrayBuilder[Long]\n\
    \        numsArrayBuilderBuilderBuilderBuilder.foreach(x => numsArrayBuilderBuilderBuilderBuilder.append(x))\n\
    \        val numsArrayBuilderBuilderBuilderBuilderBuilderBuilder = new mutable.ArrayBuilder[Long]\n\
    \        numsArrayBuilderBuilderBuilderBuilder.foreach(x => numsArrayBuilderBuilderBuilderBuilder.append(x))\n\
    \        val numsArrayBuilderBuilderBuilderBuilderBuilderBuilder = new mutable.ArrayBuilder[Long]\n\
    \        numsArrayBuilderBuilderBuilderBuilder.foreach(x => numsArrayBuilderBuilderBuilderBuilder.append(x))\n\
    \        val numsArrayBuilderBuilderBuilderBuilderBuilderBuilder = new mutable.ArrayBuilder[Long]\n\
    \        numsArrayBuilderBuilderBuilderBuilder.foreach(x => numsArrayBuilderBuilderBuilderBuilder.append(x))\n\
    \        val numsArrayBuilderBuilderBuilderBuilderBuilder", "        val numsSorted\
    \ = nums.sortWith(_ < _)\n        val sums = numsSorted.scanLeft(0)(_ + _)\n \
    \       sums.min", "        val numsCopy = nums.toList\n        val numsCopySize\
    \ = numsCopy.size\n        val numsCopyMin = numsCopy.min\n        val numsCopyMax\
    \ = numsCopy.max\n        val numsCopySum = numsCopy.sum\n        val numsCopySumMin\
    \ = numsCopySum.min\n        val numsCopySumMax = numsCopySum.max\n        val\
    \ numsCopySumSum = numsCopySum.sum\n        val numsCopySumSumMin = numsCopySumSum.min\n\
    \        val numsCopySumSumMax = numsCopySumSum.max\n        val numsCopySumSumSum\
    \ = numsCopySumSum.sum\n        val numsCopySumSumSumMin = numsCopySumSumSum.min\n\
    \        val numsCopySumSumSumMax = numsCopySumSumSum.max\n        val numsCopySumSumSumSum\
    \ = numsCopySumSumSum.sum\n        val numsCopySumSumSumSumMin = numsCopySumSumSumSum.min\n\
    \        val numsCopySumSumSumSumMax = numsCopySumSumSumSum.max\n        val numsCopySumSumSumSumSum\
    \ = numsCopySumSumSumSum.sum\n        val numsCopySumSumSumSumMin = numsCopySumSumSumSum.min\n\
    \        val numsCopySumSumSumSumMax = numsCopySumSumSumSumSum.max\n        val\
    \ numsCopySumSumSumSumSum = numsCopySumSumSumSumSum.sum\n        val numsCopySumSumSumSumSumMin\
    \ = numsCopySumSumSumSumSum.min\n        val numsCopySumSumSumSumMax = numsCopySumSumSumSumSum.max\n\
    \        val numsCopySumSumSumSumSum = numsCopySumSumSumSumSum.sum\n        val\
    \ numsCopySumSumSumSumSumMin = numsCopySumSumSumSumSum.min\n        val numsCopySumSumSumSumSumMax\
    \ = numsCopySumSumSumSumSum.max\n        val numsCopySumSumSumSumSumSum = numsCopySumSumSumSumSum.sum\n\
    \        val numsCopySumSumSumSumSumMin = numsCopySumSumSumSumSum.min\n      \
    \  val numsCopySumSumSumSumSumMax", "        val numsSet = nums.toSet\n      \
    \  val sums = nums.map(x => numsSet.count(_ == x))\n        val minSum = math.min(sums)\n\
    \        val minSumIndex = sums.indexOf(minSum)\n        sums(minSumIndex)", " \
    \       val numsMap = nums.toMap\n        val numsSet = nums.toSet\n        val\
    \ numsArray = nums.toArray\n        val numsArrayList = nums.toList\n        val\
    \ numsArrayIterator = nums.iterator\n        val numsArrayIteratorList = nums.toIterator\n\
    \        val numsArrayIteratorSet = nums.toIterator.toSet\n        val numsArrayIteratorMap\
    \ = nums.toIterator.toMap\n        val numsArrayIteratorArray = nums.toIterator.toArray\n\
    \        val numsArrayIteratorArrayList = nums.toIterator.toList\n        val\
    \ numsArrayIteratorArrayIterator = nums.toIterator.toIterator\n        val numsArrayIteratorArrayIteratorList\
    \ = nums.toIterator.toIterator.toList\n        val numsArrayIteratorArrayIteratorSet\
    \ = nums.toIterator.toIterator.toSet\n        val numsArrayIteratorArrayIteratorMap\
    \ = nums.toIterator.toIterator.toMap\n        val numsArrayIteratorArrayIteratorArray\
    \ = nums.toIterator.toIterator.toArray\n        val numsArrayIteratorArrayIteratorArrayList\
    \ = nums.toIterator.toIterator.toList\n        val numsArrayIteratorArrayIteratorArraySet\
    \ = nums.toIterator.toIterator.toSet\n        val numsArrayIteratorArrayIteratorArrayMap\
    \ = nums.toIterator.toIterator.toMap\n        val numsArrayIteratorArrayIteratorArrayArray\
    \ = nums.toIterator.toIterator.toArray\n        val numsArrayIteratorArrayIteratorArrayArrayList\
    \ = nums.toIterator.toIterator.toList\n        val numsArrayIteratorArrayIteratorArrayArraySet\
    \ = nums.toIterator.toIterator.toSet\n        val numsArrayIteratorArrayIteratorArrayArrayMap\
    \ = nums.toIterator.toIterator.toMap\n        val numsArrayIteratorArrayIteratorArrayArrayArray\
    \ = nums.toIterator.toIterator.toArray\n        val numsArrayIteratorArrayIteratorArrayArrayList\
    \ = nums.toIterator.toIterator.toList\n        val numsArrayIteratorArrayIteratorArrayArraySet\
    \ = nums.toIterator.toIterator.toSet\n        val numsArrayIteratorArrayIteratorArrayArrayMap\
    \ = nums.toIterator.toIterator.toMap\n        val numsArrayIteratorArrayIteratorArrayArrayArray\
    \ = nums.toIterator.toIterator.toArray\n        val numsArrayIteratorArrayIteratorArrayArrayList\
    \ = nums.toIterator.toIterator.toList\n        val numsArrayIteratorArrayIteratorArrayArraySet\
    \ = nums.toIterator.toIterator.toSet\n        val numsArrayIteratorArrayIteratorArrayArrayMap\
    \ = nums.to", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsMap = nums.groupBy(x => x).mapValues(_.size)\n    \
    \    val minSum = numsMap.minBy(_._2)._2\n        val minSumList = numsMap.filter(_._2\
    \ == minSum).map(_._1)\n        minSumList.sum", "        val numsSet = nums.toSet\n\
    \        val numsSetSize = numsSet.size\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val minSum = nums.foldLeft(0L)((sum,\
    \ num) => sum + num)\n        val minSumSet = numsSet.foldLeft(0L)((sum, num)\
    \ => sum + num)\n        minSum - minSumSet", "        val numsSet = nums.toSet\n\
    \        val numsSetSize = numsSet.size\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsCopy = nums.toList\n        val result = numsCopy.foldLeft(0L){\
    \ (sum, num) =>\n            val newSum = sum + num\n            if (newSum <\
    \ 0) newSum\n            else newSum\n        }\n        result", "        val\
    \ numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n        val numsSetIterator\
    \ = numsSet.iterator\n        val numsSetIteratorSize = numsSetIterator.size\n\
    \        val numsSetIteratorIterator = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize\
    \ = numsSetIteratorIterator.size\n        val numsSetIteratorIteratorIterator\
    \ = numsSetIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.size\n        val numsSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n        val numsSetIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val minSum = nums.foldLeft(0L){ (sum, num) =>\n           \
    \ val newSum = sum + num\n            if (newSum < sum) newSum else sum\n    \
    \    }\n        minSum", "        val numsSorted = nums.sortWith(_ < _)\n    \
    \    val minSum = numsSorted.foldLeft(numsSorted.head) { (sum, num) =>\n     \
    \       val newSum = sum + num\n            if (newSum < 0) newSum\n         \
    \   else newSum\n        }\n        minSum", "        val numsSet = nums.toSet\n\
    \        val numsSetSize = numsSet.size\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsArray = nums.toArray\n        val numsArrayLen = numsArray.length\n\
    \        val minSum = numsArray(0)\n        val minSumIndex = 0\n        val minSumArray\
    \ = Array.ofDim[Long](numsArrayLen)\n        val minSumArrayLen = minSumArray.length\n\
    \        val minSumArrayIndex = Array.ofDim[Int](minSumArrayLen)\n        val\
    \ minSumArrayLenIndex = Array.ofDim[Int](minSumArrayLen)\n        val minSumArrayIndexLen\
    \ = Array.ofDim[Int](minSumArrayLen)\n        val minSumArrayIndexLenIndex = Array.ofDim[Int](minSumArrayLen)\n\
    \        val minSumArrayIndexLenIndexLen = Array.ofDim[Int](minSumArrayLen)\n\
    \        val minSumArrayIndexLenIndexLenIndex = Array.ofDim[Int](minSumArrayLen)\n\
    \        val minSumArrayIndexLenIndexLenIndexLen = Array.ofDim[Int](minSumArrayLen)\n\
    \        val minSumArrayIndexLenIndexLenIndexLenIndex = Array.ofDim[Int](minSumArrayLen)\n\
    \        val minSumArrayIndexLenIndexLenIndexLenIndexLen = Array.ofDim[Int](minSumArrayLen)\n\
    \        val minSumArrayIndexLenIndexLenIndexLenIndexLenIndex = Array.ofDim[Int](minSumArrayLen)\n\
    \        val minSumArrayIndexLenIndexLenIndexLenIndexLenIndexLen = Array.ofDim[Int](minSumArrayLen)\n\
    \        val minSumArrayIndexLenIndexLenIndexLenIndexLenIndexLenIndex = Array.ofDim[Int](minSumArrayLen)\n\
    \        val minSumArrayIndexLenIndexLenIndexLenIndexLenIndexLenIndexLen = Array.ofDim[Int](minSumArrayLen)\n\
    \        val minSumArrayIndexLenIndexLenIndexLenIndexLenIndexLenIndexLenIndex\
    \ = Array.ofDim[Int](minSumArrayLen)\n        val minSumArrayIndexLenIndexLenIndexLenIndexLenIndexLenIndexLenIndexLen\
    \ = Array.ofDim[Int](minSumArrayLen)\n        val minSumArrayIndexLenIndexLenIndexLenIndexLenIndexLenIndexLenIndexLenIndex\
    \ = Array.ofDim[Int](minSumArrayLen)\n        val minSumArrayIndexLenIndexLenIndexLenIndexLenIndexLenIndexLenIndexLenIndexLen\
    \ = Array.ofDim[Int](minSumArrayLen)\n        val minSumArrayIndexLen", "    \
    \    val numsSorted = nums.sortWith(_ < _)\n        val sums = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumsIndex = mutable.ArrayBuffer.empty[Int]\n        val numsIndex\
    \ = mutable.ArrayBuffer.empty[Int]\n        var sum = 0L\n        var index =\
    \ 0\n        var sumIndex = 0\n        var numsIndex = 0\n        var numsIndexMax\
    \ = numsSorted.length - 1\n        var sumIndexMax = 0\n        var sumIndexMin\
    \ = 0\n        var sumIndexMaxSum = 0\n        var sumIndexMinSum = 0\n      \
    \  var sumIndexMaxSumMin = 0\n        var sumIndexMinSumMin = 0\n        var sumIndexMaxSumMinMin\
    \ = 0\n        var sumIndexMinSumMinMin = 0\n        var sumIndexMaxSumMinMin\
    \ = 0\n        var sumIndexMinSumMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSumMinMinMin\
    \ = 0\n        var sumIndexMinSumMinMinMin = 0\n        var sumIndexMaxSum", " \
    \       val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        var minSum = numsSet.head\n        var minSumIndex = 0\n        var minSumIndexIterator\
    \ = numsSetIterator.iterator\n        while (true) {\n            if (minSumIndexIterator.hasNext)\
    \ {\n                val currentSum = numsSetIterator.next().toLong\n        \
    \        if (currentSum < minSum) {\n                    minSum = currentSum\n\
    \                    minSumIndex = minSumIndexIterator.next()\n              \
    \  }\n            }\n            if (minSumIndexIterator.hasNext) {\n        \
    \        val currentSum = numsSetIterator.next().toLong\n                if (currentSum\
    \ < minSum) {\n                    minSum = currentSum\n                    minSumIndex\
    \ = minSumIndexIterator.next()\n                }\n            }\n           \
    \ if (minSumIndexIterator.hasNext) {\n                val currentSum = numsSetIterator.next().toLong\n\
    \                if (currentSum < minSum) {\n                    minSum = currentSum\n\
    \                    minSumIndex = minSumIndexIterator.next()\n              \
    \  }\n            }\n            if (minSumIndexIterator.hasNext) {\n        \
    \        val currentSum = numsSetIterator.next().toLong\n                if (currentSum\
    \ < minSum) {\n                    minSum = currentSum\n                    minSumIndex\
    \ = minSumIndexIterator.next()\n                }\n            }\n           \
    \ if (minSumIndexIterator.hasNext) {\n                val currentSum = numsSetIterator.next().toLong\n\
    \                if (currentSum < minSum) {\n                    minSum = currentSum\n\
    \                    minSumIndex = minSumIndexIterator.next()\n              \
    \  }\n            }\n            if (minSumIndexIterator.hasNext) {\n        \
    \        val currentSum = numsSetIterator.next().toLong\n                if (currentSum\
    \ < minSum) {\n                    minSum = currentSum\n                    minSumIndex\
    \ = minSumIndexIterator.next()\n                }\n            }\n           \
    \ if (minSumIndexIterator.hasNext) {\n                val currentSum = numsSetIterator.next().toLong\n\
    \                if (currentSum < minSum) {\n                    minSum = currentSum\n\
    \                    minSumIndex = minSumIndexIterator.next()\n              \
    \  }\n            }\n            if (minSumIndexIterator.hasNext) {\n        \
    \        val currentSum = numsSetIterator.next().toLong\n                if (currentSum\
    \ < minSum) {\n                    minSum = currentSum\n                    minSumIndex\
    \ = minSumIndexIterator.next()\n                }\n            }\n           \
    \ if (minSumIndexIterator.hasNext) {\n                val currentSum = numsSetIterator.next().toLong\n\
    \                if (current", "        val numsSet = nums.toSet\n        val\
    \ numsSetIterator = numsSet.iterator\n        val numsSetIteratorNext = numsSetIterator.next\n\
    \        val numsSetIteratorNextValue = numsSetIteratorNext.toLong\n        val\
    \ numsSetIteratorNextNext = numsSetIteratorNext.next\n        val numsSetIteratorNextNextValue\
    \ = numsSetIteratorNextNext.toLong\n        val numsSetIteratorNextNextNext =\
    \ numsSetIteratorNextNext.next\n        val numsSetIteratorNextNextNextValue =\
    \ numsSetIteratorNextNextNext.toLong\n        val numsSetIteratorNextNextNextNext\
    \ = numsSetIteratorNextNextNext.next\n        val numsSetIteratorNextNextNextNextValue\
    \ = numsSetIteratorNextNextNextNext.toLong\n        val numsSetIteratorNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextValue\
    \ = numsSetIteratorNextNextNextNextNext.toLong\n        val numsSetIteratorNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextValue\
    \ = numsSetIteratorNextNextNextNextNextNext.toLong\n        val numsSetIteratorNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextNextValue\
    \ = numsSetIteratorNextNextNextNextNextNextNext.toLong\n        val numsSetIteratorNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextNextNextValue\
    \ = numsSetIteratorNextNextNextNextNextNextNextNext.toLong\n        val numsSetIteratorNextNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNextNext.next\n        val numsSetIteratorNextNextNextNextNextNextNextNextNextValue\
    \ = numsSetIteratorNextNextNextNextNextNextNextNextNext.toLong\n        val numsSetIteratorNextNextNextNextNextNextNextNextNext\
    \ = numsSetIteratorNextNextNextNextNextNextNextNextNextNext.next\n        val\
    \ numsSetIteratorNextNextNextNextNextNextNextNextNextValue = numsSetIteratorNextNext",
  "        val numsSorted = nums.sortWith(_ < _)\n        val sums = mutable.ArrayBuffer.empty[Long]\n\
    \        val minSum = Long.MaxValue\n        for(i <- 0 until numsSorted.length){\n\
    \            val currentSum = numsSorted(i)\n            val nextSum = numsSorted(i+1)\n\
    \            val currentMinSum = sums.min\n            val nextMinSum = sums.min\n\
    \            if(currentSum > 0 && nextSum > 0){\n                sums += currentSum\
    \ + nextSum\n                if(currentMinSum < sums.min){\n                 \
    \   minSum = sums.min\n                }\n            }\n        }\n        minSum",
  "        val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorResult = numsSetIterator.next\n        val numsSetIteratorResultSet\
    \ = numsSetIterator.next\n        val numsSetIteratorResultSetIterator = numsSetIteratorResultSet.iterator\n\
    \        val numsSetIteratorResultSetIteratorResult = numsSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSet = numsSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIterator = numsSetIteratorResultSetIteratorResult.iterator\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResult = numsSetIteratorResultSetIteratorResultSet.iterator\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSet = numsSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIterator\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResult.iterator\n       \
    \ val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResult\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSet.iterator\n    \
    \    val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResult\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIterator\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResult.iterator\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResult\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIterator\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResult.iterator\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResult\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResult\
    \ = numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSetIterator.next\n\
    \        val numsSetIteratorResultSetIteratorResultSetIteratorResultSetIteratorResultSet",
  "        val numsSorted = nums.sortWith(_ < _)\n        var sum = 0L\n        var\
    \ minSum = Long.MaxValue\n        var minSumIndex = 0\n        for (i <- 0 until\
    \ numsSorted.length) {\n            val currentSum = numsSorted(i)\n         \
    \   if (currentSum > 0) {\n                sum += currentSum\n               \
    \ if (sum < minSum) {\n                    minSum = sum\n                    minSumIndex\
    \ = i\n                }\n            }\n        }\n        minSum", "       \
    \ val numsCopy = nums.toList\n        var minSum = Long.MaxValue\n        var\
    \ minSumIndex = 0\n        var minSumIndex2 = 0\n        var minSumIndex3 = 0\n\
    \        var minSumIndex4 = 0\n        var minSumIndex5 = 0\n        var minSumIndex6\
    \ = 0\n        var minSumIndex7 = 0\n        var minSumIndex8 = 0\n        var\
    \ minSumIndex9 = 0\n        var minSumIndex10 = 0\n        var minSumIndex11 =\
    \ 0\n        var minSumIndex12 = 0\n        var minSumIndex13 = 0\n        var\
    \ minSumIndex14 = 0\n        var minSumIndex15 = 0\n        var minSumIndex16\
    \ = 0\n        var minSumIndex17 = 0\n        var minSumIndex18 = 0\n        var\
    \ minSumIndex19 = 0\n        var minSumIndex20 = 0\n        var minSumIndex21\
    \ = 0\n        var minSumIndex22 = 0\n        var minSumIndex23 = 0\n        var\
    \ minSumIndex24 = 0\n        var minSumIndex25 = 0\n        var minSumIndex26\
    \ = 0\n        var minSumIndex27 = 0\n        var minSumIndex28 = 0\n        var\
    \ minSumIndex29 = 0\n        var minSumIndex30 = 0\n        var minSumIndex31\
    \ = 0\n        var minSumIndex32 = 0\n        var minSumIndex33 = 0\n        var\
    \ minSumIndex34 = 0\n        var minSumIndex35 = 0\n        var minSumIndex36\
    \ = 0\n        var minSumIndex37 = 0\n        var minSumIndex38 = 0\n        var\
    \ minSumIndex39 = 0\n        var minSumIndex40 = 0\n        var minSumIndex41\
    \ = 0\n        var minSumIndex42 = 0\n        var minSumIndex43 = 0\n        var\
    \ minSumIndex44 = 0\n        var minSumIndex45 = 0\n        var minSumIndex46\
    \ = 0\n        var minSumIndex47 = 0\n        var minSumIndex48 = 0\n        var\
    \ minSumIndex49 = 0\n        var minSumIndex50 = 0\n        var minSumIndex51\
    \ = 0\n        var minSumIndex52 = 0\n        var minSumIndex53 = 0\n        var\
    \ minSumIndex54 = 0\n        var minSumIndex55 = 0\n        var minSumIndex56\
    \ = 0\n        var minSumIndex57 = 0\n        var minSumIndex58 = 0\n        var\
    \ minSumIndex59 = 0\n        var minSumIndex60 = 0\n        var minSumIndex61\
    \ = 0\n        var minSumIndex62 = 0\n        var minSumIndex63 = 0\n        var\
    \ minSumIndex64 = 0\n        var minSumIndex65 = 0\n        var minSumIndex66\
    \ = 0\n        var minSumIndex67 = 0\n        var minSumIndex68 = 0\n        var\
    \ minSumIndex69 = 0\n        var minSumIndex70 = 0\n        var minSum", "   \
    \     val numsSet = nums.toSet\n        val numsSetIterator = numsSet.iterator\n\
    \        var minSum = numsSet.head\n        var minSumIndex = 0\n        var minSumIndexIterator\
    \ = numsSetIterator.next()\n        var minSumIterator = numsSetIterator.next()\n\
    \        var minSumIterator2 = numsSetIterator.next()\n        var minSumIterator3\
    \ = numsSetIterator.next()\n        var minSumIterator4 = numsSetIterator.next()\n\
    \        var minSumIterator5 = numsSetIterator.next()\n        var minSumIterator6\
    \ = numsSetIterator.next()\n        var minSumIterator7 = numsSetIterator.next()\n\
    \        var minSumIterator8 = numsSetIterator.next()\n        var minSumIterator9\
    \ = numsSetIterator.next()\n        var minSumIterator10 = numsSetIterator.next()\n\
    \        var minSumIterator11 = numsSetIterator.next()\n        var minSumIterator12\
    \ = numsSetIterator.next()\n        var minSumIterator13 = numsSetIterator.next()\n\
    \        var minSumIterator14 = numsSetIterator.next()\n        var minSumIterator15\
    \ = numsSetIterator.next()\n        var minSumIterator16 = numsSetIterator.next()\n\
    \        var minSumIterator17 = numsSetIterator.next()\n        var minSumIterator18\
    \ = numsSetIterator.next()\n        var minSumIterator19 = numsSetIterator.next()\n\
    \        var minSumIterator20 = numsSetIterator.next()\n        var minSumIterator21\
    \ = numsSetIterator.next()\n        var minSumIterator22 = numsSetIterator.next()\n\
    \        var minSumIterator23 = numsSetIterator.next()\n        var minSumIterator24\
    \ = numsSetIterator.next()\n        var minSumIterator25 = numsSetIterator.next()\n\
    \        var minSumIterator26 = numsSetIterator.next()\n        var minSumIterator27\
    \ = numsSetIterator.next()\n        var minSumIterator28 = numsSetIterator.next()\n\
    \        var minSumIterator29 = numsSetIterator.next()\n        var minSumIterator30\
    \ = numsSetIterator.next()\n        var minSumIterator31 = numsSetIterator.next()\n\
    \        var minSumIterator32 = numsSetIterator.next()\n        var minSumIterator33\
    \ = numsSetIterator.next()\n        var minSumIterator34 = numsSetIterator.next()\n\
    \        var minSumIterator35 = numsSetIterator.next()\n        var minSumIterator36\
    \ = numsSetIterator.next()\n        var minSumIterator37", "        val numsCopy\
    \ = nums.toList\n        val numsCopy2 = numsCopy.sortWith(_ < _)\n        val\
    \ numsCopy3 = numsCopy2.foldLeft(0)((sum, num) => sum + num)\n        val numsCopy4\
    \ = numsCopy3.foldLeft((numsCopy3.head))((sum, num) => sum + num)\n        val\
    \ numsCopy5 = numsCopy4.foldLeft((numsCopy4.head))((sum, num) => sum + num)\n\
    \        val numsCopy6 = numsCopy5.foldLeft((numsCopy5.head))((sum, num) => sum\
    \ + num)\n        val numsCopy7 = numsCopy6.foldLeft((numsCopy6.head))((sum, num)\
    \ => sum + num)\n        val numsCopy8 = numsCopy7.foldLeft((numsCopy7.head))((sum,\
    \ num) => sum + num)\n        val numsCopy9 = numsCopy8.foldLeft((numsCopy8.head))((sum,\
    \ num) => sum + num)\n        val numsCopy10 = numsCopy9.foldLeft((numsCopy9.head))((sum,\
    \ num) => sum + num)\n        val numsCopy11 = numsCopy10.foldLeft((numsCopy10.head))((sum,\
    \ num) => sum + num)\n        val numsCopy12 = numsCopy11.foldLeft((numsCopy11.head))((sum,\
    \ num) => sum + num)\n        val numsCopy13 = numsCopy12.foldLeft((numsCopy12.head))((sum,\
    \ num) => sum + num)\n        val numsCopy14 = numsCopy13.foldLeft((numsCopy13.head))((sum,\
    \ num) => sum + num)\n        val numsCopy15 = numsCopy14.foldLeft((numsCopy14.head))((sum,\
    \ num) => sum + num)\n        val numsCopy16 = numsCopy15.foldLeft((numsCopy15.head))((sum,\
    \ num) => sum + num)\n        val numsCopy17 = numsCopy16.foldLeft((numsCopy16.head))((sum,\
    \ num) => sum + num)\n        val numsCopy18 = numsCopy17.foldLeft((numsCopy17.head))((sum,\
    \ num) => sum + num)\n        val numsCopy19 = numsCopy18.foldLeft((numsCopy18.head))((sum,\
    \ num) => sum + num)\n        val numsCopy", "        val numsSet = nums.toSet\n\
    \        val numsSetSize = numsSet.size\n        val numsSetIterator = numsSet.iterator\n\
    \        val numsSetIteratorSize = numsSetIterator.size\n        val numsSetIteratorIterator\
    \ = numsSetIterator.iterator\n        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = num", "        val numsSet = nums.toSet\n        val numsSetSize = numsSet.size\n\
    \        val numsSetIterator = numsSet.iterator\n        val numsSetIteratorSize\
    \ = numsSetIterator.size\n        val numsSetIteratorIterator = numsSetIterator.iterator\n\
    \        val numsSetIteratorIteratorSize = numsSetIteratorIterator.size\n    \
    \    val numsSetIteratorIteratorIterator = numsSetIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorSize = numsSetIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIterator = numsSetIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIterator = numsSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorSize = numsSetIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator =\
    \ numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n \
    \       val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n   \
    \     val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val numsSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = numsSetIteratorIteratorIterator", "        val numsSet = nums.toSet\n    \
    \    val numsSetIterator = numsSet.iterator\n        var min = Long.MaxValue\n\
    \        var sum = 0L\n        var i = 0\n        while (i < numsSet.size) {\n\
    \            val curr = numsSetIterator.next()\n            sum += curr\n    \
    \        val newSum = sum\n            if (newSum < min) {\n                min\
    \ = newSum\n            }\n            i += 1\n        }\n        min", "    \
    \    val numsCopy = nums.toList\n        val minSum = numsCopy.foldLeft(numsCopy.head)\
    \ { (sum, num) =>\n            if (numsCopy.contains(sum + num)) sum + num\n \
    \           else sum\n        }\n        minSum", "        val n = nums.length\n\
    \        val sum = mutable.ArrayBuffer.empty[Long]\n        val minSum = math.Long.MinValue\n\
    \        val minSumIndex = math.Long.MinValue\n        val minSumIndex2 = math.Long.MinValue\n\
    \        val minSumIndex3 = math.Long.MinValue\n        val minSumIndex4 = math.Long.MinValue\n\
    \        val minSumIndex5 = math.Long.MinValue\n        val minSumIndex6 = math.Long.MinValue\n\
    \        val minSumIndex7 = math.Long.MinValue\n        val minSumIndex8 = math.Long.MinValue\n\
    \        val minSumIndex9 = math.Long.MinValue\n        val minSumIndex10 = math.Long.MinValue\n\
    \        val minSumIndex11 = math.Long.MinValue\n        val minSumIndex12 = math.Long.MinValue\n\
    \        val minSumIndex13 = math.Long.MinValue\n        val minSumIndex14 = math.Long.MinValue\n\
    \        val minSumIndex15 = math.Long.MinValue\n        val minSumIndex16 = math.Long.MinValue\n\
    \        val minSumIndex17 = math.Long.MinValue\n        val minSumIndex18 = math.Long.MinValue\n\
    \        val minSumIndex19 = math.Long.MinValue\n        val minSumIndex20 = math.Long.MinValue\n\
    \        val minSumIndex21 = math.Long.MinValue\n        val minSumIndex22 = math.Long.MinValue\n\
    \        val minSumIndex23 = math.Long.MinValue\n        val minSumIndex24 = math.Long.MinValue\n\
    \        val minSumIndex25 = math.Long.MinValue\n        val minSumIndex26 = math.Long.MinValue\n\
    \        val minSumIndex27 = math.Long.MinValue\n        val minSumIndex28 = math.Long.MinValue\n\
    \        val minSumIndex29 = math.Long.MinValue\n        val minSumIndex30 = math.Long.MinValue\n\
    \        val minSumIndex31 = math.Long.MinValue\n        val minSumIndex32 = math.Long.MinValue\n\
    \        val minSumIndex33 = math.Long.MinValue\n        val minSumIndex34 = math.Long.MinValue\n\
    \        val minSumIndex35 = math.Long.MinValue\n        val minSumIndex36 = math.Long.MinValue\n\
    \        val minSumIndex37 = math.Long.MinValue\n        val minSumIndex38 = math.Long.MinValue\n\
    \        val "]
stop_tokens:
- "\n    }\n"

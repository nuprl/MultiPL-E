name: HumanEval_56_correct_bracketing
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // brackets is a string of \"<\" and \">\".\n    // return True if every opening\
  \ bracket has a corresponding closing bracket.\n    // >>> correct_bracketing(\"\
  <\")\n    // False\n    // >>> correct_bracketing(\"<>\")\n    // True\n    // >>>\
  \ correct_bracketing(\"<<><>>\")\n    // True\n    // >>> correct_bracketing(\"\
  ><<>\")\n    // False\n    def correctBracketing(brackets : String) : Boolean =\
  \ {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(correctBracketing((\"\
  <>\")) == (true));\n    assert(correctBracketing((\"<<><>>\")) == (true));\n   \
  \ assert(correctBracketing((\"<><><<><>><>\")) == (true));\n    assert(correctBracketing((\"\
  <><><<<><><>><>><<><><<>>>\")) == (true));\n    assert(correctBracketing((\"<<<><>>>>\"\
  )) == (false));\n    assert(correctBracketing((\"><<>\")) == (false));\n    assert(correctBracketing((\"\
  <\")) == (false));\n    assert(correctBracketing((\"<<<<\")) == (false));\n    assert(correctBracketing((\"\
  >\")) == (false));\n    assert(correctBracketing((\"<<>\")) == (false));\n    assert(correctBracketing((\"\
  <><><<><>><>><<>\")) == (false));\n    assert(correctBracketing((\"<><><<><>><>>><>\"\
  )) == (false));\n    }\n\n}\n"
completions: ["        val bracketsArray = brackets.toCharArray\n        var openingBrackets\
    \ = 0\n        var closingBrackets = 0\n        for(i <- 0 until bracketsArray.length)\
    \ {\n            if(bracketsArray(i) == '<') {\n                openingBrackets\
    \ += 1\n            } else if(bracketsArray(i) == '>') {\n                closingBrackets\
    \ += 1\n            }\n        }\n        if(openingBrackets == closingBrackets)\
    \ {\n            return true\n        }\n        return false", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.trim).toSet\n        val closingBrackets = brackets.split(\"\
    >\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)", " \
    \       val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val\
    \ closingBrackets = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount\
    \ = openingBrackets.toSet.size\n        val closingBracketsCount = closingBrackets.toSet.size\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        openingBrackets.zipAll(closingBrackets, (a, b) => a != b).forall(x\
    \ => x._2)", "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var currentBracket = bracketsArray(0)\n        var currentBracketCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpen", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBracketsCount23 = 0\n        var openingBracketsCount24\
    \ = 0\n        var closingBracketsCount24 = 0\n        var openingBracketsCount25\
    \ = 0\n        var closingBracketsCount25 = 0\n        var openingBracketsCount26\
    \ = 0\n        var closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\", \">\")\n        val closingBracketsArray\
    \ = Array(\"<\", \">\")\n        val openingBracketsSet = openingBracketsArray.toSet\n\
    \        val closingBracketsSet = closingBracketsArray.toSet\n        val openingBracketsCount\
    \ = openingBracketsArray.length\n        val closingBracketsCount = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArray\
    \ = Array.fill(openingBracketsArrayLength)(0)\n        val closingBracketsArray\
    \ = Array.fill(closingBracketsArrayLength)(0)\n        var i = 0\n        while\
    \ (i < bracketsArray.length) {\n            if (openingBracketsSet.contains(bracketsArray(i)))\
    \ {\n                openingBracketsArray(i) = bracketsArray(i)\n            \
    \    i += 1\n            } else if (closingBracketsSet.contains(bracketsArray(i)))\
    \ {\n                closingBracketsArray(i) = bracketsArray(i)\n            \
    \    i += 1\n            } else {\n                i += 1\n            }\n   \
    \     }\n        if (openingBracketsArray.length != openingBracketsArrayLength\
    \ || closingBracketsArray.length != closingBracketsArrayLength) {\n          \
    \  return false\n        }\n        var j = 0\n        while (j < openingBracketsArrayLength)\
    \ {\n            if (openingBracketsArray(j) != closingBracketsArray(j)) {\n \
    \               return false\n            }\n            j += 1\n        }\n \
    \       return true", "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n\
    \        val closingBrackets = brackets.split(\">\").map(_.toInt)\n        val\
    \ openingBracketsCount = openingBrackets.foldLeft(0)(_ + _)\n        val closingBracketsCount\
    \ = closingBrackets.foldLeft(0)(_ + _)\n        openingBracketsCount == closingBracketsCount",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCount2 = 0\n        var closingBracketsCount2 = 0\n\
    \        var openingBracketsCount3 = 0\n        var closingBracketsCount3 = 0\n\
    \        var openingBracketsCount4 = 0\n        var closingBracketsCount4 = 0\n\
    \        var openingBracketsCount5 = 0\n        var closingBracketsCount5 = 0\n\
    \        var openingBracketsCount6 = 0\n        var closingBracketsCount6 = 0\n\
    \        var openingBracketsCount7 = 0\n        var closingBracketsCount7 = 0\n\
    \        var openingBracketsCount8 = 0\n        var closingBracketsCount8 = 0\n\
    \        var openingBracketsCount9 = 0\n        var closingBracketsCount9 = 0\n\
    \        var openingBracketsCount10 = 0\n        var closingBracketsCount10 =\
    \ 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBracketsCount23\
    \ = 0\n        var openingBracketsCount24 = 0\n        var closingBracketsCount24\
    \ = 0\n        var openingBracketsCount25 = 0\n        var closingBracketsCount25\
    \ = 0\n        var openingBracketsCount26 = 0\n        var closingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCount2 = 0\n        var closingBracketsCount2\
    \ = 0\n        var openingBracketsCount3 = 0\n        var closingBracketsCount3\
    \ = 0\n        var openingBracketsCount4 = 0\n        var closingBracketsCount4\
    \ = 0\n        var openingBracketsCount5 = 0\n        var closingBracketsCount5\
    \ = 0\n        var openingBracketsCount6 = 0\n        var closingBracketsCount6\
    \ = 0\n        var openingBracketsCount7 = 0\n        var closingBracketsCount7\
    \ = 0\n        var openingBracketsCount8 = 0\n        var closingBracketsCount8\
    \ = 0\n        var openingBracketsCount9 = 0\n        var closingBracketsCount9\
    \ = 0\n        var openingBracketsCount10 = 0\n        var closingBracketsCount10\
    \ = 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBracketsCount23\
    \ = 0\n        var openingBracketsCount24 = 0\n        var closingBracketsCount24\
    \ = 0\n        var openingBracketsCount25 = 0\n        var closingBracketsCount25\
    \ = 0\n        var openingBracketsCount26 = 0\n        var closingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.filter(c => c == '<').length\n        val closingBracketsCount\
    \ = bracketsArray.filter(c => c == '>').length\n        openingBracketsCount ==\
    \ closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n \
    \       val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBracketsCount23 = 0\n        var openingBracketsCount24\
    \ = 0\n        var closingBracketsCount24 = 0\n        var openingBracketsCount25\
    \ = 0\n        var closingBracketsCount25 = 0\n        var openingBracketsCount26\
    \ = 0\n        var closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        val openingBracketsArray\
    \ = Array.fill(\n            bracketsArrayLength\n        )(0)\n        val closingBracketsArray\
    \ = Array.fill(\n            bracketsArrayLength\n        )(0)\n        var openingBracketsIndex\
    \ = 0\n        var closingBracketsIndex = 0\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBra", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBracketsCount23 = 0\n        var openingBracketsCount24\
    \ = 0\n        var closingBracketsCount24 = 0\n        var openingBracketsCount25\
    \ = 0\n        var closingBracketsCount25 = 0\n        var openingBracketsCount26\
    \ = 0\n        var closingBracketsCount", "        val openingBrackets = brackets.split(\"\
    <\")\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsSet\
    \ = openingBrackets.toSet\n        val closingBracketsSet = closingBrackets.toSet\n\
    \        openingBracketsSet.forall(closingBracketsSet.contains)", "        val\
    \ bracketsArray = brackets.toCharArray\n        val openingBracketsArray = bracketsArray.filter(c\
    \ => c == '<')\n        val closingBracketsArray = bracketsArray.filter(c => c\
    \ == '>')\n        openingBracketsArray.forall(c => closingBracketsArray.contains(c))",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.filter(c => c == '<').length\n        val closingBracketsCount\
    \ = bracketsArray.filter(c => c == '>').length\n        openingBracketsCount ==\
    \ closingBracketsCount", "        val openingBrackets = brackets.split(\"<\")\n\
    \        val closingBrackets = brackets.split(\">\")\n        val openingBracketsSet\
    \ = openingBrackets.toSet\n        val closingBracketsSet = closingBrackets.toSet\n\
    \        openingBracketsSet.forall(closingBracketsSet.contains)", "        val\
    \ bracketsArray = brackets.toCharArray\n        var openingBracketsCount = 0\n\
    \        var closingBracketsCount = 0\n        for (i <- 0 until bracketsArray.length)\
    \ {\n            if (bracketsArray(i) == '<') {\n                openingBracketsCount\
    \ += 1\n            } else if (bracketsArray(i) == '>') {\n                closingBracketsCount\
    \ += 1\n            }\n        }\n        return openingBracketsCount == closingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        var openingBrackets =\
    \ 0\n        var closingBrackets = 0\n        for(i <- 0 until bracketsArray.length){\n\
    \            if(bracketsArray(i) == '<'){\n                openingBrackets +=\
    \ 1\n            }\n            if(bracketsArray(i) == '>'){\n               \
    \ closingBrackets += 1\n            }\n        }\n        if(openingBrackets ==\
    \ closingBrackets){\n            return true\n        }\n        return false",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.count(_ == '<')\n        val closingBracketsCount = bracketsArray.count(_\
    \ == '>')\n        openingBracketsCount == closingBracketsCount", "        val\
    \ bracketsArray = brackets.toCharArray\n        val openingBracketsArray = Array(\"\
    <\", \">\", \"(\", \")\")\n        val closingBracketsArray = Array(\"<\", \"\
    >\", \")\", \"(\")\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCount2 = 0\n        var closingBracketsCount2 = 0\n\
    \        var openingBracketsCount3 = 0\n        var closingBracketsCount3 = 0\n\
    \        var openingBracketsCount4 = 0\n        var closingBracketsCount4 = 0\n\
    \        var openingBracketsCount5 = 0\n        var closingBracketsCount5 = 0\n\
    \        var openingBracketsCount6 = 0\n        var closingBracketsCount6 = 0\n\
    \        var openingBracketsCount7 = 0\n        var closingBracketsCount7 = 0\n\
    \        var openingBracketsCount8 = 0\n        var closingBracketsCount8 = 0\n\
    \        var openingBracketsCount9 = 0\n        var closingBracketsCount9 = 0\n\
    \        var openingBracketsCount10 = 0\n        var closingBracketsCount10 =\
    \ 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBracketsCount23\
    \ = 0\n        var openingBracketsCount24 = 0\n        var closingBracketsCount24\
    \ = 0\n        var openingBracketsCount25 = 0\n        var closingBracketsCount25\
    \ = 0\n        var openingBracketsCount26 = 0\n        var closingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        val openingBrackets =\
    \ mutable.HashSet[Char]()\n        val closingBrackets = mutable.HashSet[Char]()\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var currentChar = bracketsArray(0)\n        for(i <- 0 until bracketsArray.length){\n\
    \            currentChar = bracketsArray(i)\n            if(currentChar == '<'){\n\
    \                openingBrackets.add(currentChar)\n                openingBracketsCount\
    \ += 1\n            }\n            else if(currentChar == '>'){\n            \
    \    closingBrackets.add(currentChar)\n                closingBracketsCount +=\
    \ 1\n            }\n        }\n        if(openingBracketsCount == closingBracketsCount){\n\
    \            return true\n        }\n        else{\n            return false\n\
    \        }", "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsCount = bracketsArray.count(c\
    \ => c == '<')\n        val closingBracketsCount = bracketsArray.count(c => c\
    \ == '>')\n        openingBracketsCount == closingBracketsCount", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val bracketsArrayCopy = Array(bracketsArrayLength)\n        System.arraycopy(bracketsArray,\
    \ 0, bracketsArrayCopy, 0, bracketsArrayLength)\n        val openingBracketsArray\
    \ = Array(bracketsArrayCopy.takeWhile(_ == '<'))\n        val closingBracketsArray\
    \ = Array(bracketsArrayCopy.dropWhile(_ == '>'))\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayCopy = Array(openingBracketsArrayLength)\n  \
    \      System.arraycopy(openingBracketsArray, 0, openingBracketsArrayCopy, 0,\
    \ openingBracketsArrayLength)\n        val closingBracketsArrayCopy = Array(closingBracketsArrayLength)\n\
    \        System.arraycopy(closingBracketsArray, 0, closingBracketsArrayCopy, 0,\
    \ closingBracketsArrayLength)\n        val openingBracketsArrayCopyLength = openingBracketsArrayCopy.length\n\
    \        val closingBracketsArrayCopyLength = closingBracketsArrayCopy.length\n\
    \        val openingBracketsArrayCopy = Array(openingBracketsArrayCopyLength)\n\
    \        System.arraycopy(openingBracketsArrayCopy, 0, openingBracketsArrayCopy,\
    \ 0, openingBracketsArrayCopyLength)\n        val closingBracketsArrayCopy = Array(closingBracketsArrayCopyLength)\n\
    \        System.arraycopy(closingBracketsArrayCopy, 0, closingBracketsArrayCopy,\
    \ 0, closingBracketsArrayCopyLength)\n        val openingBracketsArrayCopyLength\
    \ = openingBracketsArrayCopy.length\n        val closingBracketsArrayCopyLength\
    \ = closingBracketsArrayCopy.length\n        val openingBracketsArrayCopy = Array(openingBracketsArrayCopyLength)\n\
    \        System.arraycopy(openingBracketsArrayCopy, 0, openingBracketsArrayCopy,\
    \ 0, openingBracketsArrayCopyLength)\n        val closingBracketsArrayCopy = Array(closingBracketsArrayCopyLength)\n\
    \        System.arraycopy(closingBracketsArrayCopy, 0, closingBracketsArrayCopy,\
    \ 0, closingBracketsArrayCopyLength)\n        val openingBracketsArrayCopyLength\
    \ = openingBracketsArray", "        val bracketsArray = brackets.toCharArray\n\
    \        var openingBrackets : List[Char] = Nil\n        var closingBrackets :\
    \ List[Char] = Nil\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsIndex : Int = 0\n        var closingBracketsIndex\
    \ : Int = 0\n        var openingBracketsLength : Int = 0\n        var closingBracketsLength\
    \ : Int = 0\n        var openingBracketsLengthIndex : Int = 0\n        var closingBracketsLengthIndex\
    \ : Int = 0\n        var openingBracketsLengthLength : Int = 0\n        var closingBracketsLengthLength\
    \ : Int = 0\n        var openingBracketsLengthLengthIndex : Int = 0\n        var\
    \ closingBracketsLengthLengthIndex : Int = 0\n        var openingBracketsLengthLengthLength\
    \ : Int = 0\n        var closingBracketsLengthLengthIndex : Int = 0\n        var\
    \ openingBracketsLengthLengthLengthIndex : Int = 0\n        var closingBracketsLengthLengthLength\
    \ : Int = 0\n        var openingBracketsLengthLengthLengthIndex : Int = 0\n  \
    \      var closingBracketsLengthLengthLengthIndex : Int = 0\n        var openingBracketsLengthLengthLengthLength\
    \ : Int = 0\n        var closingBracketsLengthLengthLengthIndex : Int = 0\n  \
    \      var openingBracketsLengthLengthLengthLength : Int = 0\n        var closingBracketsLengthLengthLengthIndex\
    \ : Int = 0\n        var openingBracketsLengthLengthLengthLength : Int = 0\n \
    \       var closingBracketsLengthLengthLengthIndex : Int = 0\n        var openingBracketsLengthLengthLengthLength\
    \ : Int = 0\n        var closingBracketsLengthLengthLengthIndex : Int = 0\n  \
    \      var openingBracketsLengthLengthLengthLength : Int = 0\n        var closingBracketsLengthLengthLengthIndex\
    \ : Int = 0\n        var openingBracketsLengthLengthLengthLength : Int = 0\n \
    \       var closingBracketsLengthLengthLengthIndex : Int = 0\n        var openingBracketsLengthLengthLengthLength\
    \ : Int = 0\n        var closingBracketsLengthLengthLengthIndex : Int = 0\n  \
    \      var openingBracketsLengthLengthLengthLength : Int = 0\n        var closingBracketsLengthLengthLengthIndex\
    \ : Int = 0\n        var openingBracketsLengthLengthLengthLength : Int = 0\n \
    \       var closingBracketsLengthLengthLengthIndex : Int = 0\n        var openingBracketsLengthLengthLengthLength\
    \ : Int = 0\n        var closingBracketsLengthLengthLength", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\n\
    \        val closingBracketsCount = closingBrackets.toSet.size\n        openingBracketsCount\
    \ == closingBracketsCount", "        val openingBrackets = brackets.split(\"<\"\
    )\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        val openingBracketsSet = openingBrackets.toSet\n        val closingBracketsSet\
    \ = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.count(c => c == '<')\n        val closingBracketsCount = bracketsArray.count(c\
    \ => c == '>')\n        openingBracketsCount == closingBracketsCount", "     \
    \   val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var closingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var openingBracketsCountArrayIndex = 0\n        var closingBracketsCountArrayIndex\
    \ = 0\n        var openingBracketsCountArrayElement = 0\n        var closingBracketsCountArrayElement\
    \ = 0\n        var openingBracketsCountArrayElementIndex = 0\n        var closingBracketsCountArrayElementIndex\
    \ = 0\n        var openingBracketsCountArrayElementValue = 0\n        var closingBracketsCountArrayElementValue\
    \ = 0\n        var openingBracketsCountArrayElementValueIndex = 0\n        var\
    \ closingBracketsCountArrayElementValueIndex = 0\n        var openingBracketsCountArrayElementValueIndex\
    \ = 0\n        var closingBracketsCountArrayElementValueIndex = 0\n        var\
    \ openingBracketsCountArrayElementValueIndex = 0\n        var closingBracketsCountArrayElementValueIndex\
    \ = 0\n        var openingBracketsCountArrayElementValueIndex = 0\n        var\
    \ closingBracketsCountArrayElementValueIndex = 0\n        var openingBracketsCountArrayElementValueIndex\
    \ = 0\n        var closingBracketsCountArrayElementValueIndex = 0\n        var\
    \ openingBracketsCountArrayElementValueIndex = 0\n        var closingBracketsCountArrayElementValueIndex\
    \ = 0\n        var openingBracketsCountArrayElementValueIndex = 0\n        var\
    \ closingBracketsCountArrayElementValueIndex = 0\n        var openingBracketsCountArrayElementValueIndex\
    \ = 0\n        var closingBracketsCountArrayElementValueIndex = 0\n        var\
    \ openingBracketsCountArrayElementValueIndex = 0\n        var closingBracketsCountArrayElementValueIndex\
    \ = 0\n        var openingBracketsCountArrayElementValueIndex = 0\n        var\
    \ closingBracketsCountArrayElementValueIndex = 0\n        var openingBracketsCountArrayElementValueIndex\
    \ = 0\n        var closingBracketsCountArrayElementValueIndex = 0\n        var\
    \ openingBracketsCountArrayElementValueIndex = 0\n        var closingBracketsCountArrayElementValueIndex\
    \ = 0\n        var openingBracketsCountArrayElementValueIndex = 0\n        var\
    \ closingBracketsCountArrayElementValueIndex = 0\n        var openingBracketsCountArrayElementValueIndex\
    \ = 0\n        var closingBrackets", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketCount\
    \ = 0\n        var closingBracketCount = 0\n        var openingBracketIndex =\
    \ 0\n        var closingBracketIndex = 0\n        while (openingBracketIndex <\
    \ bracketsArrayLength) {\n            val currentChar = bracketsArray(openingBracketIndex)\n\
    \            if (currentChar == '<') {\n                openingBracketCount +=\
    \ 1\n            } else if (currentChar == '>') {\n                closingBracketCount\
    \ += 1\n            }\n            openingBracketIndex += 1\n        }\n     \
    \   if (openingBracketCount != closingBracketCount) {\n            return false\n\
    \        }\n        while (openingBracketIndex < bracketsArrayLength) {\n    \
    \        val currentChar = bracketsArray(openingBracketIndex)\n            if\
    \ (currentChar == '<') {\n                openingBracketIndex += 1\n         \
    \   } else if (currentChar == '>') {\n                closingBracketIndex += 1\n\
    \            }\n        }\n        if (openingBracketIndex != bracketsArrayLength)\
    \ {\n            return false\n        }\n        return true", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsSet = openingBrackets.toSet\n        val closingBracketsSet\
    \ = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        val openingBracketsSet = openingBrackets.toSet\n\
    \        val closingBracketsSet = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var currentChar = bracketsArray(0)\n        var currentCharCount\
    \ = 0\n        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var currentChar = bracketsArray(0)\n\
    \        var currentCharCount = 0\n        var ", "        val bracketsArray =\
    \ brackets.toCharArray\n        val openingBrackets = mutable.HashSet[Char]()\n\
    \        val closingBrackets = mutable.HashSet[Char]()\n        val openingBracketsArray\
    \ = mutable.ArrayBuffer.empty[Char]\n        val closingBracketsArray = mutable.ArrayBuffer.empty[Char]\n\
    \        val openingBracketsCount = mutable.HashMap[Char, Int]()\n        val\
    \ closingBracketsCount = mutable.HashMap[Char, Int]()\n        var openingBracketsCountIndex\
    \ = 0\n        var closingBracketsCountIndex = 0\n        var openingBracketsCountIndex2\
    \ = 0\n        var closingBracketsCountIndex2 = 0\n        var openingBracketsCountIndex3\
    \ = 0\n        var closingBracketsCountIndex3 = 0\n        var openingBracketsCountIndex4\
    \ = 0\n        var closingBracketsCountIndex4 = 0\n        var openingBracketsCountIndex5\
    \ = 0\n        var closingBracketsCountIndex5 = 0\n        var openingBracketsCountIndex6\
    \ = 0\n        var closingBracketsCountIndex6 = 0\n        var openingBracketsCountIndex7\
    \ = 0\n        var closingBracketsCountIndex7 = 0\n        var openingBracketsCountIndex8\
    \ = 0\n        var closingBracketsCountIndex8 = 0\n        var openingBracketsCountIndex9\
    \ = 0\n        var closingBracketsCountIndex9 = 0\n        var openingBracketsCountIndex10\
    \ = 0\n        var closingBracketsCountIndex10 = 0\n        var openingBracketsCountIndex11\
    \ = 0\n        var closingBracketsCountIndex11 = 0\n        var openingBracketsCountIndex12\
    \ = 0\n        var closingBracketsCountIndex12 = 0\n        var openingBracketsCountIndex13\
    \ = 0\n        var closingBracketsCountIndex13 = 0\n        var openingBracketsCountIndex14\
    \ = 0\n        var closingBracketsCountIndex14 = 0\n        var openingBracketsCountIndex15\
    \ = 0\n        var closingBracketsCountIndex15 = 0\n        var openingBracketsCountIndex16\
    \ = 0\n        var closingBracketsCountIndex16 = 0\n        var openingBracketsCountIndex17\
    \ = 0\n        var closingBracketsCountIndex17 = 0\n        var openingBracketsCountIndex18\
    \ = 0\n        var closingBracketsCountIndex18 = 0\n        var openingBracketsCountIndex19\
    \ = 0\n        var closingBracketsCountIndex19 = 0\n        var open", "     \
    \   val bracketsArray = brackets.toCharArray\n        var openingBrackets = 0\n\
    \        var closingBrackets = 0\n        for(i <- 0 until bracketsArray.length)\n\
    \        {\n            if(bracketsArray(i) == '<')\n            {\n         \
    \       openingBrackets += 1\n            }\n            if(bracketsArray(i) ==\
    \ '>')\n            {\n                closingBrackets += 1\n            }\n \
    \       }\n        if(openingBrackets == closingBrackets)\n        {\n       \
    \     return true\n        }\n        return false", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBracketsArray = Array(\"<\", \">\"\
    )\n        val closingBracketsArray = Array(\"</\", \"/>\")\n        val openingBracketsSet\
    \ = openingBracketsArray.toSet\n        val closingBracketsSet = closingBracketsArray.toSet\n\
    \        val openingBracketsCount = openingBracketsArray.length\n        val closingBracketsCount\
    \ = closingBracketsArray.length\n        val openingBracketsArrayLength = openingBracketsArray.length\n\
    \        val closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  val openingBracketsArray = Array.fill(openingBracketsArrayLength)(0)\n    \
    \    val closingBracketsArray = Array.fill(closingBracketsArrayLength)(0)\n  \
    \      var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n  \
    \      var openingBracketsCount = 0\n        var closingBracketsCount = 0\n  \
    \      var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArray = Array.fill(openingBracketsArrayLength)(0)\n\
    \        var closingBracketsArray = Array.fill(closingBracketsArrayLength)(0)\n\
    \        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayCount = 0\n        var closingBracketsArrayCount\
    \ = 0\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArray = Array.fill(openingBracketsArrayLength)(0)\n    \
    \    var closingBracketsArray = Array.fill(closingBracketsArrayLength)(0)\n  \
    \      var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayCount = 0\n        var closingBracketsArrayCount\
    \ = 0\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArray = Array.fill(openingBracketsArrayLength)(0)\n    \
    \    var closingBracketsArray = Array.fill(closingBracketsArrayLength)(0)\n  \
    \      var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayCount = 0\n        var closing", "    \
    \    val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = Array.fill( (bracketsArrayLength\
    \ - 1))(\"\")\n        val closingBracketsArray = Array.fill( (bracketsArrayLength\
    \ - 1))(\"\")\n        val openingBracketsArrayLength = openingBracketsArray.length\n\
    \        val closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  val openingBracketsArrayIterator = openingBracketsArray.iterator\n        val\
    \ closingBracketsArrayIterator = closingBracketsArray.iterator\n        var index\
    \ = 0\n        while (index < bracketsArrayLength) {\n            val currentChar\
    \ = bracketsArray(index)\n            if (currentChar == '<') {\n            \
    \    openingBracketsArrayIterator(index) = currentChar\n                openingBracketsArrayLength\
    \ -= 1\n            } else if (currentChar == '>') {\n                closingBracketsArrayIterator(index)\
    \ = currentChar\n                closingBracketsArrayLength -= 1\n           \
    \ }\n            index += 1\n        }\n        openingBracketsArrayLength ==\
    \ closingBracketsArrayLength", "        val openingBrackets = brackets.split(\"\
    <\")\n        val closingBrackets = brackets.split(\">\")\n        openingBrackets.forall(x\
    \ => closingBrackets.contains(x))", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBracketsCount23 = 0\n        var openingBracketsCount24\
    \ = 0\n        var closingBracketsCount24 = 0\n        var openingBracketsCount25\
    \ = 0\n        var closingBracketsCount25 = 0\n        var openingBracketsCount26\
    \ = 0\n        var closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBracketsCount23 = 0\n        var openingBracketsCount24\
    \ = 0\n        var closingBracketsCount24 = 0\n        var openingBracketsCount25\
    \ = 0\n        var closingBracketsCount25 = 0\n        var openingBracketsCount26\
    \ = 0\n        var closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = bracketsArray.filter(c => c == '<')\n    \
    \    val closingBracketsArray = bracketsArray.filter(c => c == '>')\n        openingBracketsArray.forall(c\
    \ => closingBracketsArray.contains(c))", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = bracketsArray.filter(c => c == '<')\n    \
    \    val closingBracketsArray = bracketsArray.filter(c => c == '>')\n        openingBracketsArray.forall(c\
    \ => closingBracketsArray.contains(c))", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBracketsCount23 = 0\n        var openingBracketsCount24\
    \ = 0\n        var closingBracketsCount24 = 0\n        var openingBracketsCount25\
    \ = 0\n        var closingBracketsCount25 = 0\n        var openingBracketsCount26\
    \ = 0\n        var closingBracketsCount", "        val openingBrackets = brackets.split(\"\
    <\")\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        val openingBracketsSet = openingBrackets.toSet\n        val closingBracketsSet\
    \ = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\n\
    \        val closingBracketsCount = closingBrackets.toSet.size\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = bracketsArray.filter(c => c == '<')\n    \
    \    val closingBracketsArray = bracketsArray.filter(c => c == '>')\n        openingBracketsArray.forall(c\
    \ => closingBracketsArray.contains(c))", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCountArray\
    \ = new Array[Int](bracketsArrayLength)\n        var closingBracketsCountArray\
    \ = new Array[Int](bracketsArrayLength)\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex2\
    \ = 0\n        var closingBracketsCountArrayIndex2 = 0\n        var openingBracketsCountArrayIndex3\
    \ = 0\n        var closingBracketsCountArrayIndex3 = 0\n        var openingBracketsCountArrayIndex4\
    \ = 0\n        var closingBracketsCountArrayIndex4 = 0\n        var openingBracketsCountArrayIndex5\
    \ = 0\n        var closingBracketsCountArrayIndex5 = 0\n        var openingBracketsCountArrayIndex6\
    \ = 0\n        var closingBracketsCountArrayIndex6 = 0\n        var openingBracketsCountArrayIndex7\
    \ = 0\n        var closingBracketsCountArrayIndex7 = 0\n        var openingBracketsCountArrayIndex8\
    \ = 0\n        var closingBracketsCountArrayIndex8 = 0\n        var openingBracketsCountArrayIndex9\
    \ = 0\n        var closingBracketsCountArrayIndex9 = 0\n        var openingBracketsCountArrayIndex10\
    \ = 0\n        var closingBracketsCountArrayIndex10 = 0\n        var openingBracketsCountArrayIndex11\
    \ = 0\n        var closingBracketsCountArrayIndex11 = 0\n        var openingBracketsCountArrayIndex12\
    \ = 0\n        var closingBracketsCountArrayIndex12 = 0\n        var openingBracketsCountArrayIndex13\
    \ = 0\n        var closingBracketsCountArrayIndex13 = 0\n        var openingBracketsCountArrayIndex14\
    \ = 0\n        var closingBracketsCountArrayIndex14 = 0\n        var openingBracketsCountArrayIndex15\
    \ = 0\n        var closingBracketsCountArrayIndex15 = 0\n        var openingBracketsCountArrayIndex16\
    \ = 0\n        var closingBracketsCountArrayIndex16 = 0\n        var openingBracketsCountArrayIndex17\
    \ = 0\n        var closingBracketsCountArrayIndex17 = 0\n        var openingBracketsCountArrayIndex18\
    \ = 0\n        var closingBracketsCountArrayIndex18 = 0\n        var openingBracketsCountArrayIndex19\
    \ = 0\n        var closingBracketsCountArray", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\")\n        val closingBracketsArray\
    \ = Array(\">\")\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracket", "        val bracketsArray = brackets.toCharArray\n     \
    \   val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var currentBracket = bracketsArray(0)\n\
    \        var currentBracketCount = 0\n        var currentBracketCount2 = 0\n \
    \       var currentBracketCount3 = 0\n        var currentBracketCount4 = 0\n \
    \       var currentBracketCount5 = 0\n        var currentBracketCount6 = 0\n \
    \       var currentBracketCount7 = 0\n        var currentBracketCount8 = 0\n \
    \       var currentBracketCount9 = 0\n        var currentBracketCount10 = 0\n\
    \        var currentBracketCount11 = 0\n        var currentBracketCount12 = 0\n\
    \        var currentBracketCount13 = 0\n        var currentBracketCount14 = 0\n\
    \        var currentBracketCount15 = 0\n        var currentBracketCount16 = 0\n\
    \        var currentBracketCount17 = 0\n        var currentBracketCount18 = 0\n\
    \        var currentBracketCount19 = 0\n        var currentBracketCount20 = 0\n\
    \        var currentBracketCount21 = 0\n        var currentBracketCount22 = 0\n\
    \        var currentBracketCount23 = 0\n        var currentBracketCount24 = 0\n\
    \        var currentBracketCount25 = 0\n        var currentBracketCount26 = 0\n\
    \        var currentBracketCount27 = 0\n        var currentBracketCount28 = 0\n\
    \        var currentBracketCount29 = 0\n        var currentBracketCount30 = 0\n\
    \        var currentBracketCount31 = 0\n        var currentBracketCount32 = 0\n\
    \        var currentBracketCount33 = 0\n        var currentBracketCount34 = 0\n\
    \        var currentBracketCount35 = 0\n        var currentBracketCount36 = 0\n\
    \        var currentBracketCount37 = 0\n        var currentBracketCount38 = 0\n\
    \        var currentBracketCount39 = 0\n        var currentBracketCount40 = 0\n\
    \        var currentBracketCount41 = 0\n        var currentBracketCount42 = 0\n\
    \        var currentBracketCount43 = 0\n        var currentBracketCount44 = 0\n\
    \        var currentBracketCount45 = 0\n        var currentBracketCount46 = 0\n\
    \        var currentBracketCount47 = 0\n        var currentBracketCount48 = 0\n\
    \        var currentBracketCount49 = 0\n        var currentBracketCount50 = 0\n\
    \        var currentBracketCount51 = 0\n        var currentBracketCount52 = 0\n\
    \        var currentBracketCount53 = 0\n        var currentBracketCount54 = 0\n\
    \        var currentBracketCount55 = 0\n        var currentBracketCount56 = 0\n\
    \        var currentBracketCount57 = 0\n        var currentBracketCount58 = 0",
  "        val openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n       \
    \ val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketCount = 0\n        var closingBracketCount\
    \ = 0\n        var currentChar = 0\n        var currentBracket = 0\n        var\
    \ currentBracketCount = 0\n        var currentOpeningBracket = 0\n        var\
    \ currentClosingBracket = 0\n        var currentOpeningBracketCount = 0\n    \
    \    var currentClosingBracketCount = 0\n        var currentOpeningBracketIndex\
    \ = 0\n        var currentClosingBracketIndex = 0\n        var currentOpeningBracketCountIndex\
    \ = 0\n        var currentClosingBracketCountIndex = 0\n        var currentOpeningBracketIndex2\
    \ = 0\n        var currentClosingBracketIndex2 = 0\n        var currentOpeningBracketCountIndex2\
    \ = 0\n        var currentClosingBracketCountIndex2 = 0\n        var currentOpeningBracketIndex3\
    \ = 0\n        var currentClosingBracketIndex3 = 0\n        var currentOpeningBracketCountIndex3\
    \ = 0\n        var currentClosingBracketCountIndex3 = 0\n        var currentOpeningBracketIndex4\
    \ = 0\n        var currentClosingBracketIndex4 = 0\n        var currentOpeningBracketCountIndex4\
    \ = 0\n        var currentClosingBracketCountIndex4 = 0\n        var currentOpeningBracketIndex5\
    \ = 0\n        var currentClosingBracketIndex5 = 0\n        var currentOpeningBracketCountIndex5\
    \ = 0\n        var currentClosingBracketCountIndex5 = 0\n        var currentOpeningBracketIndex6\
    \ = 0\n        var currentClosingBracketIndex6 = 0\n        var currentOpeningBracketCountIndex6\
    \ = 0\n        var currentClosingBracketCountIndex6 = 0\n        var currentOpeningBracketIndex7\
    \ = 0\n        var currentClosingBracketIndex7 = 0\n        var currentOpeningBracketCountIndex7\
    \ = 0\n        var currentClosingBracketCountIndex7 = 0\n        var currentOpeningBracketIndex8\
    \ = 0\n        var currentClosingBracketIndex8 = 0\n        var currentOpeningBracketCountIndex8\
    \ = 0\n        var currentClosingBracketCountIndex8 = 0\n        var currentOpeningBracketIndex9\
    \ = 0\n        var currentClosingBracketIndex9 = 0\n        var currentOpeningBracketCountIndex9\
    \ = 0\n        var currentClosingBracketCountIndex9 = 0\n        var currentOpeningBracketIndex10\
    \ = 0\n        var currentClosingBracketIndex10 = 0\n        var currentOpeningBracketCountIndex10\
    \ = 0\n        var currentClosingBracketCountIndex10 = 0\n        var currentOpeningBracket",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCount2 = 0\n        var closingBracketsCount2\
    \ = 0\n        var openingBracketsCount3 = 0\n        var closingBracketsCount3\
    \ = 0\n        var openingBracketsCount4 = 0\n        var closingBracketsCount4\
    \ = 0\n        var openingBracketsCount5 = 0\n        var closingBracketsCount5\
    \ = 0\n        var openingBracketsCount6 = 0\n        var closingBracketsCount6\
    \ = 0\n        var openingBracketsCount7 = 0\n        var closingBracketsCount7\
    \ = 0\n        var openingBracketsCount8 = 0\n        var closingBracketsCount8\
    \ = 0\n        var openingBracketsCount9 = 0\n        var closingBracketsCount9\
    \ = 0\n        var openingBracketsCount10 = 0\n        var closingBracketsCount10\
    \ = 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBracketsCount23\
    \ = 0\n        var openingBracketsCount24 = 0\n        var closingBracketsCount24\
    \ = 0\n        var openingBracketsCount25 = 0\n        var closingBracketsCount25\
    \ = 0\n        var openingBracketsCount26 = 0\n        var closingBracketsCount",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        openingBracketsCount\
    \ == closingBracketsCount && openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var currentChar = 0\n        var currentBracket = 0\n        var\
    \ currentBracketCount = 0\n        var currentBracketChar = 0\n        var currentBracketCountArray\
    \ = Array.fill(8)(0)\n        var currentBracketCountArrayLength = currentBracketCountArray.length\n\
    \        var currentBracketCountArrayIndex = 0\n        var currentBracketCountArrayElement\
    \ = 0\n        var currentBracketCountArrayElementIndex = 0\n        var currentBracketCountArrayElementValue\
    \ = 0\n        var currentBracketCountArrayElementValueIndex = 0\n        var\
    \ currentBracketCountArrayElementValueIndex = 0\n        var currentBracketCountArrayElementValue\
    \ = 0\n        var currentBracketCountArrayElementValueIndex = 0\n        var\
    \ currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBracketCountArrayElementValue = 0\n        var currentBracketCountArrayElementValueIndex\
    \ = 0\n        var currentBra", "        val openingBrackets = brackets.split(\"\
    <\")\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsSet\
    \ = openingBrackets.toSet\n        val closingBracketsSet = closingBrackets.toSet\n\
    \        openingBracketsSet.forall(closingBracketsSet.contains)", "        val\
    \ openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)",
  "        val bracketsArray = brackets.toCharArray\n        val openingBrackets =\
    \ mutable.HashSet[Char]()\n        val closingBrackets = mutable.HashSet[Char]()\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var currentOpeningBracket = ' '\n        var currentClosingBracket =\
    \ ' '\n        var currentOpeningBracketCount = 0\n        var currentClosingBracketCount\
    \ = 0\n        var currentOpeningBracketChar = ' '\n        var currentClosingBracketChar\
    \ = ' '\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracketCharCount\
    \ = 0\n        var currentOpeningBracketCharCount = 0\n        var currentClosingBracket",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"</\", \"/>\"\
    )\n        val openingBracketsSet = openingBracketsArray.toSet\n        val closingBracketsSet\
    \ = closingBracketsArray.toSet\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracket", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBrackets = mutable.HashSet[Char]()\n\
    \        val closingBrackets = mutable.HashSet[Char]()\n        val openingBracketsArray\
    \ = mutable.ArrayBuffer.empty[Char]\n        val closingBracketsArray = mutable.ArrayBuffer.empty[Char]\n\
    \        var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n\
    \        var currentOpeningBracketIndex = 0\n        var currentClosingBracketIndex\
    \ = 0\n        var currentOpeningBracket = ' '\n        var currentClosingBracket\
    \ = ' '\n        var currentOpeningBracketIsClosingBracket = false\n        var\
    \ currentClosingBracketIsOpeningBracket = false\n        var currentClosingBracketIsClosingBracket\
    \ = false\n        var currentClosingBracketIsOpeningBracket = false\n       \
    \ var currentClosingBracketIsClosingBracket = false\n        var currentOpeningBracketIsClosingBracket\
    \ = false\n        var currentClosingBracketIsOpeningBracket = false\n       \
    \ var currentOpeningBracketIsClosingBracket = false\n        var currentClosingBracketIsOpeningBracket\
    \ = false\n        var currentClosingBracketIsClosingBracket = false\n       \
    \ var currentOpeningBracketIsClosingBracket = false\n        var currentClosingBracketIsOpeningBracket\
    \ = false\n        var currentClosingBracketIsClosingBracket = false\n       \
    \ var currentOpeningBracketIsClosingBracket = false\n        var currentClosingBracketIsOpeningBracket\
    \ = false\n        var currentClosingBracketIsClosingBracket = false\n       \
    \ var currentOpeningBracketIsClosingBracket = false\n        var currentClosingBracketIsOpeningBracket\
    \ = false\n        var currentClosingBracketIsClosingBracket = false\n       \
    \ var currentOpeningBracketIsClosingBracket = false\n        var currentClosingBracketIsOpeningBracket\
    \ = false\n        var currentClosingBracketIsClosingBracket = false\n       \
    \ var currentOpeningBracketIsClosingBracket = false\n        var currentClosingBracketIsOpeningBracket\
    \ = false\n        var currentClosingBracketIsClosingBracket = false\n       \
    \ var currentOpeningBracketIsClosingBracket = false\n        var currentClosingBracketIsOpeningBracket\
    \ = false\n        var currentClosingBracketIsClosingBracket = false\n       \
    \ var currentOpeningBracketIsClosingBracket = false\n        var currentClosing",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsSet = openingBrackets.toSet\n\
    \        val closingBracketsSet = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        val openingBracketsSet\
    \ = openingBrackets.toSet\n        val closingBracketsSet = closingBrackets.toSet\n\
    \        openingBracketsSet.forall(closingBracketsSet.contains)", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val openingBracketsArray = Array[Int](bracketsArrayLength)\n        val\
    \ closingBracketsArray = Array[Int](bracketsArrayLength)\n        var openingBracketsIndex\
    \ = 0\n        var closingBracketsIndex = 0\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBrackets", "        val openingBrackets = brackets.split(\"\
    <\").map(_.toInt)\n        val closingBrackets = brackets.split(\">\").map(_.toInt)\n\
    \        val openingBracketsCount = openingBrackets.toSet.size\n        val closingBracketsCount\
    \ = closingBrackets.toSet.size\n        openingBracketsCount == closingBracketsCount",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\n\
    \        val closingBracketsCount = closingBrackets.toSet.size\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsCount = bracketsArray.count(c => c == '<')\n     \
    \   val closingBracketsCount = bracketsArray.count(c => c == '>')\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\", \">\")\n        val closingBracketsArray\
    \ = Array(\"</\", \"/>\")\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.map(_.toInt)\n      \
    \  val closingBracketsArray = closingBracketsArray.map(_.toInt)\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.map(_.toInt)\n      \
    \  val closingBracketsArray = closingBracketsArray.map(_.toInt)\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.map(_.toInt)\n      \
    \  val closingBracketsArray = closingBracketsArray.map(_.toInt)\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.map(_.toInt)\n      \
    \  val closingBracketsArray = closingBracketsArray.map(_.toInt)\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.map(_.toInt)\n      \
    \  val closingBracketsArray = closingBracketsArray.map(_.toInt)\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.map(_.toInt)\n      \
    \  val closingBracketsArray = closingBracketsArray.map(_.toInt)\n        val openingBracketsArray",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        val openingBracketsSet\
    \ = openingBrackets.toSet\n        val closingBracketsSet = closingBrackets.toSet\n\
    \        openingBracketsSet.forall(closingBracketsSet.contains)", "        val\
    \ bracketsArray = brackets.toCharArray\n        var openingBrackets = 0\n    \
    \    var closingBrackets = 0\n        for (i <- 0 until bracketsArray.length)\
    \ {\n            if (bracketsArray(i) == '<') {\n                openingBrackets\
    \ += 1\n            } else if (bracketsArray(i) == '>') {\n                closingBrackets\
    \ += 1\n            }\n        }\n        return openingBrackets == closingBrackets",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.filter(c => c == '<').length\n        val closingBracketsCount\
    \ = bracketsArray.filter(c => c == '>').length\n        openingBracketsCount ==\
    \ closingBracketsCount", "        val openingBrackets = brackets.split(\"<\")\n\
    \        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount && openingBrackets.forall(x\
    \ => closingBrackets.contains(x))", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var currentBracket = bracketsArray(0)\n\
    \        var currentBracketCount = 0\n        var currentOpeningBracket = currentBracket\n\
    \        var currentClosingBracket = currentBracket\n        var currentOpeningBracketCount\
    \ = 0\n        var currentClosingBracketCount = 0\n        var currentOpeningBracketChar\
    \ = currentOpeningBracket\n        var currentClosingBracketChar = currentClosingBracket\n\
    \        var currentOpeningBracketCharCount = 1\n        var currentClosingBracketCharCount\
    \ = 1\n        var currentOpeningBracketCharArray = new Array[Char](currentOpeningBracketCharCount)\n\
    \        var currentClosingBracketCharArray = new Array[Char](currentClosingBracketCharCount)\n\
    \        var currentOpeningBracketCharArrayLength = currentOpeningBracketCharArray.length\n\
    \        var currentClosingBracketCharArrayLength = currentClosingBracketCharArray.length\n\
    \        var currentOpeningBracketCharArrayIndex = 0\n        var currentClosingBracketCharArrayIndex\
    \ = 0\n        var currentOpeningBracketCharArrayIndexLength = 0\n        var\
    \ currentClosingBracketCharArrayIndexLength = 0\n        var currentOpeningBracketCharArrayIndexLength\
    \ = 0\n        var currentOpeningBracketCharArrayIndex = 0\n        var currentClosingBracketCharArrayIndex\
    \ = 0\n        var currentOpeningBracketCharArrayIndexLength = 0\n        var\
    \ currentClosingBracketCharArrayIndexLength = 0\n        var currentOpeningBracketCharArrayIndex\
    \ = 0\n        var currentClosingBracketCharArrayIndex = 0\n        var currentOpeningBracketCharArrayIndexLength\
    \ = 0\n        var currentClosingBracketCharArrayIndexLength = 0\n        var\
    \ currentOpeningBracketCharArrayIndexLength = 0\n        var currentOpeningBracketCharArrayIndex\
    \ = 0\n        var currentClosingBracketCharArrayIndex = 0\n        var currentOpeningBracketCharArrayIndexLength\
    \ = 0\n        var currentClosingBracketCharArrayIndexLength = 0\n        var\
    \ currentOpeningBracketCharArrayIndexLength = 0\n        var currentOpeningBracketCharArrayIndex\
    \ = 0\n        var currentClosingBracketCharArrayIndex = 0\n        var currentOpeningBracketCharArrayIndexLength\
    \ = 0\n        var currentClosingBracketCharArrayIndexLength = 0\n        var\
    \ currentOpeningBracketCharArrayIndexLength = 0\n        var currentOpeningBracketCharArrayIndex",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.count(_ == '<')\n        val closingBracketsCount = bracketsArray.count(_\
    \ == '>')\n        openingBracketsCount != closingBracketsCount", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCountInsideBracket = 0\n        var closingBracketsCountInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracket = 0\n      \
    \  var closingBracketsCountInsideBracketInsideBracket = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBra", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\", \">\")\n        val closingBracketsArray\
    \ = Array(\"<\", \">\")\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        var openingBracketsCountForLoop\
    \ = 0\n        var closingBracketsCountForLoop = 0\n        var openingBracketsCountForLoop2\
    \ = 0\n        var closingBracketsCountForLoop2 = 0\n        var openingBracketsCountForLoop3\
    \ = 0\n        var closingBracketsCountForLoop3 = 0\n        var openingBracketsCountForLoop4\
    \ = 0\n        var closingBracketsCountForLoop4 = 0\n        var openingBracketsCountForLoop5\
    \ = 0\n        var closingBracketsCountForLoop5 = 0\n        var openingBracketsCountForLoop6\
    \ = 0\n        var closingBracketsCountForLoop6 = 0\n        var openingBracketsCountForLoop7\
    \ = 0\n        var closingBracketsCountForLoop7 = 0\n        var openingBracketsCountForLoop8\
    \ = 0\n        var closingBracketsCountForLoop8 = 0\n        var openingBracketsCountForLoop9\
    \ = 0\n        var closingBracketsCountForLoop9 = 0\n        var openingBracketsCountForLoop10\
    \ = 0\n        var closingBracketsCountForLoop10 = 0\n        var openingBracketsCountForLoop11\
    \ = 0\n        var closingBracketsCountForLoop11 = 0\n        var openingBracketsCountForLoop12\
    \ = 0\n        var closingBracketsCountForLoop12 = 0\n        var openingBracketsCountForLoop13\
    \ = 0\n        var closingBracketsCountForLoop13 = 0\n        var openingBracketsCountForLoop14\
    \ = 0\n        var closingBracketsCountForLoop14 = 0\n        var openingBracketsCountForLoop15\
    \ = 0\n        var closingBracketsCountForLoop15 = 0\n        var openingBracketsCountForLoop16\
    \ = 0\n        var closingBracketsCountForLoop16 = 0\n        var openingBracketsCountForLoop17\
    \ = 0\n        var closingBracketsCountForLoop17 = 0\n        var openingBracketsCountForLoop18\
    \ = 0\n        var closingBracketsCountForLoop18 = 0\n        var openingBracketsCountForLoop19\
    \ = 0\n        var closingBracketsCountForLoop19 = 0\n        var openingBrackets",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCount2 = 0\n        var closingBracketsCount2\
    \ = 0\n        var openingBracketsCount3 = 0\n        var closingBracketsCount3\
    \ = 0\n        var openingBracketsCount4 = 0\n        var closingBracketsCount4\
    \ = 0\n        var openingBracketsCount5 = 0\n        var closingBracketsCount5\
    \ = 0\n        var openingBracketsCount6 = 0\n        var closingBracketsCount6\
    \ = 0\n        var openingBracketsCount7 = 0\n        var closingBracketsCount7\
    \ = 0\n        var openingBracketsCount8 = 0\n        var closingBracketsCount8\
    \ = 0\n        var openingBracketsCount9 = 0\n        var closingBracketsCount9\
    \ = 0\n        var openingBracketsCount10 = 0\n        var closingBracketsCount10\
    \ = 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBracketsCount23\
    \ = 0\n        var openingBracketsCount24 = 0\n        var closingBracketsCount24\
    \ = 0\n        var openingBracketsCount25 = 0\n        var closingBracketsCount25\
    \ = 0\n        var openingBracketsCount26 = 0\n        var closingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        val openingBrackets =\
    \ mutable.HashSet[Char]()\n        val closingBrackets = mutable.HashSet[Char]()\n\
    \        val openingBracketsArray = mutable.ArrayBuffer(0)\n        val closingBracketsArray\
    \ = mutable.ArrayBuffer(0)\n        var openingBracketsIndex = 0\n        var\
    \ closingBracketsIndex = 0\n        var currentOpeningBracket = 0\n        var\
    \ currentClosingBracket = 0\n        while(openingBracketsIndex < bracketsArray.length){\n\
    \            val currentBracket = bracketsArray(openingBracketsIndex)\n      \
    \      openingBrackets.add(currentBracket)\n            openingBracketsArray.append(currentBracket)\n\
    \            openingBracketsIndex += 1\n        }\n        while(closingBracketsIndex\
    \ < bracketsArray.length){\n            val currentBracket = bracketsArray(closingBracketsIndex)\n\
    \            closingBrackets.add(currentBracket)\n            closingBracketsArray.append(currentBracket)\n\
    \            closingBracketsIndex += 1\n        }\n        while(openingBracketsIndex\
    \ < bracketsArray.length){\n            val currentBracket = bracketsArray(openingBracketsIndex)\n\
    \            openingBracketsIndex += 1\n            while(closingBracketsIndex\
    \ < bracketsArray.length){\n                val currentBracket = bracketsArray(closingBracketsIndex)\n\
    \                closingBracketsIndex += 1\n                if(currentBracket\
    \ == openingBracketsArray(openingBracketsIndex)){\n                    openingBracketsIndex\
    \ += 1\n                }\n                if(currentBracket == closingBracketsArray(closingBracketsIndex)){\n\
    \                    closingBracketsIndex += 1\n                }\n          \
    \  }\n        }\n        openingBrackets.size == closingBrackets.size", "    \
    \    val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var currentChar = 0\n        var currentBracket = 0\n        var\
    \ currentBracketCount = 0\n        var currentBracketChar = 0\n        var currentBracketCountArray\
    \ = new Array[Int](bracketsArrayLength)\n        var currentBracketCountArrayIndex\
    \ = 0\n        var currentBracketCountArrayLength = bracketsArrayLength\n    \
    \    var currentBracketCountArrayIndex = 0\n        var currentBracketCountArrayLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndex = 0\n     \
    \   var currentBracketCountArrayLength = bracketsArrayLength\n        var currentBracketCountArrayIndex\
    \ = 0\n        var currentBracketCountArrayLength = bracketsArrayLength\n    \
    \    var currentBracketCountArrayIndex = 0\n        var currentBracketCountArrayLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndex = 0\n     \
    \   var currentBracketCountArrayLength = bracketsArrayLength\n        var currentBracketCountArrayIndex\
    \ = 0\n        var currentBracketCountArrayLength = bracketsArrayLength\n    \
    \    var currentBracketCountArrayIndex = 0\n        var currentBracketCountArrayLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndex = 0\n     \
    \   var currentBracketCountArrayLength = bracketsArrayLength\n        var currentBracketCountArrayIndex\
    \ = 0\n        var currentBracketCountArrayLength = bracketsArrayLength\n    \
    \    var currentBracketCountArrayIndex = 0\n        var currentBracketCountArrayLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndex = 0\n     \
    \   var currentBracketCountArrayLength = bracketsArrayLength\n        var currentBracketCountArrayIndex\
    \ = 0\n        var currentBracketCountArrayLength = bracketsArrayLength\n    \
    \    var currentBracketCountArrayIndex = 0\n        var currentBracketCountArrayLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndex = 0\n     \
    \   var currentBracketCountArrayLength = bracketsArrayLength\n        var currentBracketCountArrayIndex\
    \ = 0\n        var currentBracketCountArrayLength = bracketsArrayLength\n    \
    \    var currentBracketCountArrayIndex = 0\n        var currentBracketCountArrayLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndex = 0\n     \
    \   var currentBracketCountArrayLength = bracketsArrayLength\n        var currentBracketCountArrayIndex\
    \ = 0\n        var currentBracketCountArrayLength = bracketsArrayLength\n    \
    \    var currentBracketCountArrayIndex = 0\n        var currentBracketCountArrayLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndex = 0", "   \
    \     val bracketsArray = brackets.toCharArray\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCountArray\
    \ = Array.fill(bracketsArray.length)(0)\n        var closingBracketsCountArray\
    \ = Array.fill(bracketsArray.length)(0)\n        for (i <- 0 until bracketsArray.length)\
    \ {\n            if (bracketsArray(i) == '<') {\n                openingBracketsCount\
    \ += 1\n                openingBracketsCountArray(i) = openingBracketsCount\n\
    \            } else if (bracketsArray(i) == '>') {\n                closingBracketsCount\
    \ += 1\n                closingBracketsCountArray(i) = closingBracketsCount\n\
    \            }\n        }\n        openingBracketsCount - closingBracketsCount\
    \ > 0", "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        val openingBracketsSet\
    \ = openingBrackets.toSet\n        val closingBracketsSet = closingBrackets.toSet\n\
    \        openingBracketsSet.forall(closingBracketsSet.contains)", "        val\
    \ bracketsArray = brackets.toCharArray\n        var openingBrackets = 0\n    \
    \    var closingBrackets = 0\n        for(i <- 0 until bracketsArray.length){\n\
    \            if(bracketsArray(i) == '<'){\n                openingBrackets +=\
    \ 1\n            }\n            if(bracketsArray(i) == '>'){\n               \
    \ closingBrackets += 1\n            }\n        }\n        if(openingBrackets ==\
    \ closingBrackets){\n            return true\n        }\n        return false",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.filter(c => c == '<').length\n        val closingBracketsCount\
    \ = bracketsArray.filter(c => c == '>').length\n        openingBracketsCount ==\
    \ closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n \
    \       val bracketsArrayLength = bracketsArray.length\n        val openingBracketsArray\
    \ = Array.fill(\n            bracketsArrayLength\n        ){\n            false\n\
    \        }\n        val closingBracketsArray = Array.fill(\n            bracketsArrayLength\n\
    \        ){\n            false\n        }\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracket", "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n\
    \        val closingBrackets = brackets.split(\">\").map(_.toInt)\n        val\
    \ openingBracketsCount = openingBrackets.toSet.size\n        val closingBracketsCount\
    \ = closingBrackets.toSet.size\n        openingBracketsCount == closingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCountArray\
    \ = new Array[Int](bracketsArray.length)\n        var closingBracketsCountArray\
    \ = new Array[Int](bracketsArray.length)\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex2\
    \ = 0\n        var closingBracketsCountArrayIndex2 = 0\n        var openingBracketsCountArrayIndex3\
    \ = 0\n        var closingBracketsCountArrayIndex3 = 0\n        var openingBracketsCountArrayIndex4\
    \ = 0\n        var closingBracketsCountArrayIndex4 = 0\n        var openingBracketsCountArrayIndex5\
    \ = 0\n        var closingBracketsCountArrayIndex5 = 0\n        var openingBracketsCountArrayIndex6\
    \ = 0\n        var closingBracketsCountArrayIndex6 = 0\n        var openingBracketsCountArrayIndex7\
    \ = 0\n        var closingBracketsCountArrayIndex7 = 0\n        var openingBracketsCountArrayIndex8\
    \ = 0\n        var closingBracketsCountArrayIndex8 = 0\n        var openingBracketsCountArrayIndex9\
    \ = 0\n        var closingBracketsCountArrayIndex9 = 0\n        var openingBracketsCountArrayIndex10\
    \ = 0\n        var closingBracketsCountArrayIndex10 = 0\n        var openingBracketsCountArrayIndex11\
    \ = 0\n        var closingBracketsCountArrayIndex11 = 0\n        var openingBracketsCountArrayIndex12\
    \ = 0\n        var closingBracketsCountArrayIndex12 = 0\n        var openingBracketsCountArrayIndex13\
    \ = 0\n        var closingBracketsCountArrayIndex13 = 0\n        var openingBracketsCountArrayIndex14\
    \ = 0\n        var closingBracketsCountArrayIndex14 = 0\n        var openingBracketsCountArrayIndex15\
    \ = 0\n        var closingBracketsCountArrayIndex15 = 0\n        var openingBracketsCountArrayIndex16\
    \ = 0\n        var closingBracketsCountArrayIndex16 = 0\n        var openingBracketsCountArrayIndex17\
    \ = 0\n        var closingBracketsCountArrayIndex17 = 0\n        var openingBracketsCountArrayIndex18\
    \ = 0\n        var closingBracketsCountArrayIndex18 = 0\n        var openingBracketsCountArrayIndex19\
    \ = 0\n        var closingBracketsCountArrayIndex19 = 0\n        var openingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.filter(c => c == '<').length\n        val closingBracketsCount\
    \ = bracketsArray.filter(c => c == '>').length\n        openingBracketsCount ==\
    \ closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n \
    \       val openingBrackets = bracketsArray.filter(_ == '<')\n        val closingBrackets\
    \ = bracketsArray.filter(_ == '>')\n        openingBrackets.size == closingBrackets.size",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"</\", \"/>\"\
    )\n        val openingBracketsCount = openingBracketsArray.length\n        val\
    \ closingBracketsCount = closingBracketsArray.length\n        var openingBracketsIndex\
    \ = 0\n        var closingBracketsIndex = 0\n        while (openingBracketsIndex\
    \ < openingBracketsCount && closingBracketsIndex < closingBracketsCount) {\n \
    \           if (bracketsArray(openingBracketsIndex) == openingBracketsArray(closingBracketsIndex))\
    \ {\n                openingBracketsIndex += 1\n                closingBracketsIndex\
    \ += 1\n            } else {\n                openingBracketsIndex += 1\n    \
    \        }\n        }\n        openingBracketsIndex == openingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var currentBracket = bracketsArray(0)\n        var currentBracketCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpen", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        val bracketsArrayCopy\
    \ = Array(bracketsArrayLength)\n        System.arraycopy(bracketsArray, 0, bracketsArrayCopy,\
    \ 0, bracketsArrayLength)\n        val openingBracketsArray = Array(bracketsArrayCopy.takeWhile(_\
    \ != '>'))\n        val closingBracketsArray = Array(bracketsArrayCopy.dropWhile(_\
    \ != '<'))\n        val openingBracketsArrayLength = openingBracketsArray.length\n\
    \        val closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  val openingBracketsArrayCopy = Array(openingBracketsArrayLength)\n        val\
    \ closingBracketsArrayCopy = Array(closingBracketsArrayLength)\n        System.arraycopy(openingBracketsArray,\
    \ 0, openingBracketsArrayCopy, 0, openingBracketsArrayLength)\n        System.arraycopy(closingBracketsArray,\
    \ 0, closingBracketsArrayCopy, 0, closingBracketsArrayLength)\n        val openingBracketsArrayCopyLength\
    \ = openingBracketsArrayCopy.length\n        val closingBracketsArrayCopyLength\
    \ = closingBracketsArrayCopy.length\n        val openingBracketsArrayCopy = Array(openingBracketsArrayCopyLength)\n\
    \        val closingBracketsArrayCopy = Array(closingBracketsArrayCopyLength)\n\
    \        val openingBracketsArray = Array(openingBracketsArrayCopyLength)\n  \
    \      val closingBracketsArray = Array(closingBracketsArrayCopyLength)\n    \
    \    val openingBracketsArrayCopy = Array(openingBracketsArrayCopyLength)\n  \
    \      val closingBracketsArrayCopy = Array(closingBracketsArrayCopyLength)\n\
    \        val openingBracketsArrayCopyLength = openingBracketsArrayCopyLength\n\
    \        val closingBracketsArrayCopyLength = closingBracketsArrayCopyLength\n\
    \        val openingBracketsArrayCopy = Array(openingBracketsArrayCopyLength)\n\
    \        val closingBracketsArrayCopy = Array(closingBracketsArrayCopyLength)\n\
    \        val openingBracketsArray = Array(openingBracketsArrayCopyLength)\n  \
    \      val closingBracketsArray = Array(closingBracketsArrayCopyLength)\n    \
    \    val openingBracketsArrayCopy = Array(openingBra", "        val bracketsArray\
    \ = brackets.toCharArray\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var currentChar = bracketsArray(0)\n        var isCorrect = true\n\
    \        for (i <- 1 to bracketsArray.length) {\n            currentChar = bracketsArray(i)\n\
    \            if (currentChar == '<') {\n                openingBracketsCount +=\
    \ 1\n            } else if (currentChar == '>') {\n                closingBracketsCount\
    \ += 1\n            }\n            if (openingBracketsCount != closingBracketsCount)\
    \ {\n                isCorrect = false\n                break\n            }\n\
    \        }\n        isCorrect", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        val openingBracketsArray\
    \ = new Array[Int](bracketsArrayLength)\n        val closingBracketsArray = new\
    \ Array[Int](bracketsArrayLength)\n        var openingBracketsIndex = 0\n    \
    \    var closingBracketsIndex = 0\n        var openingBracketsCount = 0\n    \
    \    var closingBracketsCount = 0\n        var openingBracketsCount2 = 0\n   \
    \     var closingBracketsCount2 = 0\n        var openingBracketsCount3 = 0\n \
    \       var closingBracketsCount3 = 0\n        var openingBracketsCount4 = 0\n\
    \        var closingBracketsCount4 = 0\n        var openingBracketsCount5 = 0\n\
    \        var closingBracketsCount5 = 0\n        var openingBracketsCount6 = 0\n\
    \        var closingBracketsCount6 = 0\n        var openingBracketsCount7 = 0\n\
    \        var closingBracketsCount7 = 0\n        var openingBracketsCount8 = 0\n\
    \        var closingBracketsCount8 = 0\n        var openingBracketsCount9 = 0\n\
    \        var closingBracketsCount9 = 0\n        var openingBracketsCount10 = 0\n\
    \        var closingBracketsCount10 = 0\n        var openingBracketsCount11 =\
    \ 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBrackets", "        val openingBrackets = brackets.split(\"\
    <\").map(_.toInt)\n        val closingBrackets = brackets.split(\">\").map(_.toInt)\n\
    \        val openingBracketsCount = openingBrackets.toSet.size\n        val closingBracketsCount\
    \ = closingBrackets.toSet.size\n        openingBracketsCount == closingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        val openingBrackets =\
    \ mutable.HashSet[Char]()\n        val closingBrackets = mutable.HashSet[Char]()\n\
    \        bracketsArray.foreach { c =>\n            c match {\n               \
    \ case '<' =>\n                    openingBrackets += c\n                case\
    \ '>' =>\n                    closingBrackets += c\n                case _ =>\n\
    \            }\n        }\n        openingBrackets.size == closingBrackets.size",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val bracketsArrayCopy = Array(bracketsArrayLength)\n\
    \        bracketsArray.copyTo(bracketsArrayCopy)\n        val openingBracketsArray\
    \ = Array(\"<\")\n        val closingBracketsArray = Array(\">\")\n        val\
    \ openingBracketsArrayLength = openingBracketsArray.length\n        val closingBracketsArrayLength\
    \ = closingBracketsArray.length\n        val openingBracketsArrayCopy = Array(openingBracketsArrayLength)\n\
    \        openingBracketsArray.copyTo(openingBracketsArrayCopy)\n        val closingBracketsArrayCopy\
    \ = Array(closingBracketsArrayLength)\n        closingBracketsArray.copyTo(closingBracketsArrayCopy)\n\
    \        val openingBracketsArrayCopyLength = openingBracketsArrayCopy.length\n\
    \        val closingBracketsArrayCopyLength = closingBracketsArrayCopy.length\n\
    \        val openingBracketsArrayCopy = Array(openingBracketsArrayCopyLength)\n\
    \        openingBracketsArrayCopy.copyTo(openingBracketsArrayCopy)\n        val\
    \ closingBracketsArrayCopy = Array(closingBracketsArrayCopyLength)\n        closingBracketsArrayCopy.copyTo(closingBracketsArrayCopy)\n\
    \        val openingBracketsArrayCopyLength = openingBracketsArrayCopy.length\n\
    \        val closingBracketsArrayCopyLength = closingBracketsArrayCopy.length\n\
    \        val openingBracketsArrayCopy = Array(openingBracketsArrayCopyLength)\n\
    \        openingBracketsArrayCopy.copyTo(openingBracketsArrayCopy)\n        val\
    \ closingBracketsArrayCopy = Array(closingBracketsArrayCopyLength)\n        closingBracketsArrayCopy.copyTo(closingBracketsArrayCopy)\n\
    \        val openingBracketsArrayCopyLength = openingBracketsArrayCopy.length\n\
    \        val closingBracketsArrayCopyLength = closingBracketsArrayCopy.length\n\
    \        val openingBracketsArrayCopy = Array(openingBracketsArrayCopyLength)\n\
    \        openingBracketsArrayCopy.copyTo(openingBracketsArrayCopy)\n        val\
    \ closingBracketsArrayCopy = Array(closingBracketsArrayCopyLength)\n        closingBracketsArray",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\", \"(\", \")\")\n        val closingBracketsArray = Array(\"\
    <\", \">\", \")\", \"(\")\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArray = Array.empty[Char]\n        var closingBracketsArray\
    \ = Array.empty[Char]\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArray = Array.empty[Char]\n        var closingBracketsArray\
    \ = Array.empty[Char]\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArray = Array.empty[Char]\n        var closingBracketsArray\
    \ = Array.empty[Char]\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArray = Array.empty[Char]\n        var closingBracketsArray\
    \ = Array.empty[Char]\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArray = Array.empty[Char]\n        var closingBracketsArray\
    \ = Array.empty[Char]\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArray = Array.empty[Char]\n        var closingBracketsArray\
    \ = Array.empty[Char]\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBrackets", "        val openingBrackets = brackets.split(\"<\")\n\
    \        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBrackets.zipWithIndex.forall { case (open, index) =>\n       \
    \     closingBrackets.contains(open) && index == closingBracketsCount - 1\n  \
    \      }", "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n\
    \        val closingBrackets = brackets.split(\">\").map(_.toInt)\n        val\
    \ openingBracketsSet = Set(openingBrackets)\n        val closingBracketsSet =\
    \ Set(closingBrackets)\n        openingBracketsSet.subsetOf(closingBracketsSet)",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCount2 = 0\n        var closingBracketsCount2\
    \ = 0\n        var openingBracketsCount3 = 0\n        var closingBracketsCount3\
    \ = 0\n        var openingBracketsCount4 = 0\n        var closingBracketsCount4\
    \ = 0\n        var openingBracketsCount5 = 0\n        var closingBracketsCount5\
    \ = 0\n        var openingBracketsCount6 = 0\n        var closingBracketsCount6\
    \ = 0\n        var openingBracketsCount7 = 0\n        var closingBracketsCount7\
    \ = 0\n        var openingBracketsCount8 = 0\n        var closingBracketsCount8\
    \ = 0\n        var openingBracketsCount9 = 0\n        var closingBracketsCount9\
    \ = 0\n        var openingBracketsCount10 = 0\n        var closingBracketsCount10\
    \ = 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBracketsCount23\
    \ = 0\n        var openingBracketsCount24 = 0\n        var closingBracketsCount24\
    \ = 0\n        var openingBracketsCount25 = 0\n        var closingBracketsCount25\
    \ = 0\n        var openingBracketsCount26 = 0\n        var closingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        val openingBrackets =\
    \ bracketsArray.filter(c => c == '<')\n        val closingBrackets = bracketsArray.filter(c\
    \ => c == '>')\n        openingBrackets.forall(c => closingBrackets.contains(c))",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = bracketsArray.filter(c => c == '<')\n        val closingBracketsArray = bracketsArray.filter(c\
    \ => c == '>')\n        openingBracketsArray.forall(c => closingBracketsArray.contains(c))",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        openingBrackets.forall(x => closingBrackets.contains(x))",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"</\", \"/>\"\
    )\n        val openingBracketsSet = openingBracketsArray.toSet\n        val closingBracketsSet\
    \ = closingBracketsArray.toSet\n        val openingBracketsArraySize = openingBracketsArray.length\n\
    \        val closingBracketsArraySize = closingBracketsArray.length\n        val\
    \ openingBracketsArrayIterator = openingBracketsArray.iterator\n        val closingBracketsArrayIterator\
    \ = closingBracketsArray.iterator\n        val openingBracketsSetIterator = openingBracketsSet.iterator\n\
    \        val closingBracketsSetIterator = closingBracketsSet.iterator\n      \
    \  val openingBracketsArrayIteratorSize = openingBracketsArrayIterator.size\n\
    \        val closingBracketsArrayIteratorSize = closingBracketsArrayIterator.size\n\
    \        val openingBracketsSetIteratorSize = openingBracketsSetIterator.size\n\
    \        val closingBracketsSetIteratorSize = closingBracketsSetIterator.size\n\
    \        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsSetIndex = 0\n        var closingBracketsSetIndex\
    \ = 0\n        var openingBracketsArrayIndexSize = 0\n        var closingBracketsArrayIndexSize\
    \ = 0\n        var openingBracketsSetIndexSize = 0\n        var closingBracketsSetIndexSize\
    \ = 0\n        var openingBracketsArrayIndexIterator = 0\n        var closingBracketsArrayIndexIterator\
    \ = 0\n        var openingBracketsSetIndexIterator = 0\n        var closingBracketsSetIndexIterator\
    \ = 0\n        var openingBracketsArrayIndexIteratorSize = 0\n        var closingBracketsArrayIndexIteratorSize\
    \ = 0\n        var openingBracketsSetIndexIteratorSize = 0\n        var closingBracketsSetIndexIteratorSize\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsSetIndex = 0\n        var closingBracketsSetIndex\
    \ = 0\n        var openingBracketsArrayIndexSize = 0\n        var closingBracketsArrayIndexSize\
    \ = 0\n        var openingBracketsSetIndexSize = 0\n        var closingBracketsSetIndexSize\
    \ = 0\n        var openingBracketsArrayIndexIterator = 0\n        var ", "   \
    \     val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\n\
    \        val closingBracketsCount = closingBrackets.toSet.size\n        openingBracketsCount\
    \ == closingBracketsCount", "        val openingBrackets = brackets.split(\"<\"\
    ).map(_.trim).toSet\n        val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n\
    \        openingBrackets.forall(closingBrackets.contains)", "        val bracketsArray\
    \ = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var closingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var openingBracketsCountArrayIndex = 0\n        var closingBracketsCountArrayIndex\
    \ = 0\n        var openingBracketsCountArrayIndex2 = 0\n        var closingBracketsCountArrayIndex2\
    \ = 0\n        var openingBracketsCountArrayIndex3 = 0\n        var closingBracketsCountArrayIndex3\
    \ = 0\n        var openingBracketsCountArrayIndex4 = 0\n        var closingBracketsCountArrayIndex4\
    \ = 0\n        var openingBracketsCountArrayIndex5 = 0\n        var closingBracketsCountArrayIndex5\
    \ = 0\n        var openingBracketsCountArrayIndex6 = 0\n        var closingBracketsCountArrayIndex6\
    \ = 0\n        var openingBracketsCountArrayIndex7 = 0\n        var closingBracketsCountArrayIndex7\
    \ = 0\n        var openingBracketsCountArrayIndex8 = 0\n        var closingBracketsCountArrayIndex8\
    \ = 0\n        var openingBracketsCountArrayIndex9 = 0\n        var closingBracketsCountArrayIndex9\
    \ = 0\n        var openingBracketsCountArrayIndex10 = 0\n        var closingBracketsCountArrayIndex10\
    \ = 0\n        var openingBracketsCountArrayIndex11 = 0\n        var closingBracketsCountArrayIndex11\
    \ = 0\n        var openingBracketsCountArrayIndex12 = 0\n        var closingBracketsCountArrayIndex12\
    \ = 0\n        var openingBracketsCountArrayIndex13 = 0\n        var closingBracketsCountArrayIndex13\
    \ = 0\n        var openingBracketsCountArrayIndex14 = 0\n        var closingBracketsCountArrayIndex14\
    \ = 0\n        var openingBracketsCountArrayIndex15 = 0\n        var closingBracketsCountArrayIndex15\
    \ = 0\n        var openingBracketsCountArrayIndex16 = 0\n        var closingBracketsCountArrayIndex16\
    \ = 0\n        var openingBracketsCountArrayIndex17 = 0\n        var closingBracketsCountArrayIndex17\
    \ = 0\n        var openingBracketsCountArrayIndex18 = 0\n        var closingBracketsCountArrayIndex18\
    \ = 0\n        var openingBracketsCountArrayIndex19 = 0\n        var closingBracketsCountArray",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"(\", \")\"\
    )\n        val openingBracketsCount = openingBracketsArray.length\n        val\
    \ closingBracketsCount = closingBracketsArray.length\n        var openingBracketsIndex\
    \ = 0\n        var closingBracketsIndex = 0\n        var openingBracketsCountInCurrentBracket\
    \ = 0\n        var closingBracketsCountInCurrentBracket = 0\n        var currentBracket\
    \ = openingBracketsArray(0)\n        var currentBracketCount = 0\n        while\
    \ (openingBracketsIndex < openingBracketsCount) {\n            while (closingBracketsIndex\
    \ < closingBracketsCount) {\n                if (currentBracket == openingBracketsArray(openingBracketsIndex))\
    \ {\n                    openingBracketsCountInCurrentBracket = openingBracketsIndex\n\
    \                    closingBracketsCountInCurrentBracket = closingBracketsIndex\n\
    \                    currentBracket = openingBracketsArray(openingBracketsIndex\
    \ + 1)\n                    currentBracketCount = 1\n                    openingBracketsIndex\
    \ += 1\n                }\n                if (currentBracket == closingBracketsArray(closingBracketsIndex))\
    \ {\n                    openingBracketsCountInCurrentBracket += currentBracketCount\n\
    \                    closingBracketsCountInCurrentBracket += currentBracketCount\n\
    \                    currentBracket = openingBracketsArray(openingBracketsIndex\
    \ + 1)\n                    currentBracketCount = 1\n                    closingBracketsIndex\
    \ += 1\n                }\n                currentBracketCount += 1\n        \
    \    }\n            currentBracket = openingBracketsArray(openingBracketsIndex\
    \ + 1)\n            currentBracketCount = 1\n            openingBracketsIndex\
    \ += 1\n        }\n        openingBracketsIndex == openingBracketsCount", "  \
    \      val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"</\", \"/>\"\
    )\n        val openingBracketsCount = openingBracketsArray.length\n        val\
    \ closingBracketsCount = closingBracketsArray.length\n        var openingBracketsCountForCurrentChar\
    \ = 0\n        var closingBracketsCountForCurrentChar = 0\n        var currentChar\
    \ = 0\n        var currentOpeningBracket = 0\n        var currentClosingBracket\
    \ = 0\n        var currentOpeningBracketCount = 0\n        var currentClosingBracketCount\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracketCountForCurrentChar\
    \ = 0\n        var currentOpeningBracketCountForCurrentChar = 0\n        var currentClosingBracket",
  "        val bracketsArray = brackets.toCharArray\n        var openingBrackets :\
    \ List[Char] = Nil\n        var closingBrackets : List[Char] = Nil\n        var\
    \ openingBracketsCount : Int = 0\n        var closingBracketsCount : Int = 0\n\
    \        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        var openingBracketsCount : Int = 0\n        var closingBracket",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        openingBracketsCount\
    \ == closingBracketsCount && openingBrackets.forall(x => closingBrackets.contains(x))",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = Array.fill(\n   \
    \         bracketsArrayLength\n        ){\n            false\n        }\n    \
    \    val closingBracketsArray = Array.fill(\n            bracketsArrayLength\n\
    \        ){\n            false\n        }\n        var i = 0\n        while (i\
    \ < bracketsArrayLength) {\n            if (bracketsArray(i) == '<') {\n     \
    \           openingBracketsArray(i) = true\n                i += 1\n         \
    \   } else if (bracketsArray(i) == '>') {\n                closingBracketsArray(i)\
    \ = true\n                i += 1\n            }\n            i += 1\n        }\n\
    \        openingBracketsArray.forall(x => closingBracketsArray(x))", "       \
    \ val bracketsArray = brackets.toCharArray\n        var openingBrackets : List[Char]\
    \ = Nil\n        var closingBrackets : List[Char] = Nil\n        var openingBracketsCount\
    \ : Int = 0\n        var closingBracketsCount : Int = 0\n        var openingBracketsIndex\
    \ : Int = 0\n        var closingBracketsIndex : Int = 0\n        var openingBracketsLength\
    \ : Int = 0\n        var closingBracketsLength : Int = 0\n        var openingBracketsLengthCurrent\
    \ : Int = 0\n        var closingBracketsLengthCurrent : Int = 0\n        var openingBracketsLengthPrevious\
    \ : Int = 0\n        var closingBracketsLengthPrevious : Int = 0\n        var\
    \ openingBracketsLengthPreviousIncrement : Int = 0\n        var closingBracketsLengthPreviousIncrement\
    \ : Int = 0\n        var openingBracketsLengthPreviousIncrement2 : Int = 0\n \
    \       var closingBracketsLengthPreviousIncrement2 : Int = 0\n        var openingBracketsLengthPreviousIncrement3\
    \ : Int = 0\n        var closingBracketsLengthPreviousIncrement3 : Int = 0\n \
    \       var openingBracketsLengthPreviousIncrement4 : Int = 0\n        var closingBracketsLengthPreviousIncrement4\
    \ : Int = 0\n        var openingBracketsLengthPreviousIncrement5 : Int = 0\n \
    \       var closingBracketsLengthPreviousIncrement5 : Int = 0\n        var openingBracketsLengthPreviousIncrement6\
    \ : Int = 0\n        var closingBracketsLengthPreviousIncrement6 : Int = 0\n \
    \       var openingBracketsLengthPreviousIncrement7 : Int = 0\n        var closingBracketsLengthPreviousIncrement7\
    \ : Int = 0\n        var openingBracketsLengthPreviousIncrement8 : Int = 0\n \
    \       var closingBracketsLengthPreviousIncrement8 : Int = 0\n        var openingBracketsLengthPreviousIncrement9\
    \ : Int = 0\n        var closingBracketsLengthPreviousIncrement9 : Int = 0\n \
    \       var openingBracketsLengthPreviousIncrement10 : Int = 0\n        var closingBracketsLengthPreviousIncrement10\
    \ : Int = 0\n        var openingBracketsLengthPreviousIncrement11 : Int = 0\n\
    \        var closingBracketsLengthPreviousIncrement11 : Int = 0\n        var openingBracketsLengthPreviousIncrement12\
    \ : Int = 0\n        var closingBracketsLengthPreviousIncrement12 : Int = 0\n\
    \        var open", "        val bracketsArray = brackets.toCharArray\n      \
    \  val openingBrackets = mutable.HashSet[Char]()\n        val closingBrackets\
    \ = mutable.HashSet[Char]()\n        var openingBracketsCount = 0\n        var\
    \ closingBracketsCount = 0\n        bracketsArray.foreach { c =>\n           \
    \ if (c == '<') {\n                openingBrackets += c\n                openingBracketsCount\
    \ += 1\n            } else if (c == '>') {\n                closingBrackets +=\
    \ c\n                closingBracketsCount += 1\n            }\n        }\n   \
    \     if (openingBracketsCount != closingBracketsCount) {\n            return\
    \ false\n        }\n        openingBrackets.foreach { c =>\n            if (!closingBrackets.contains(c))\
    \ {\n                return false\n            }\n        }\n        true", " \
    \       val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsCount = bracketsArray.count(_\
    \ == '<')\n        val closingBracketsCount = bracketsArray.count(_ == '>')\n\
    \        openingBracketsCount != closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsSet = openingBrackets.toSet\n        val closingBracketsSet\
    \ = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        openingBracketsCount\
    \ == closingBracketsCount && openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\n\
    \        val closingBracketsCount = closingBrackets.toSet.size\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBrackets = mutable.HashSet[Char]()\n        val closingBrackets\
    \ = mutable.HashSet[Char]()\n        var openingBracketsCount = 0\n        var\
    \ closingBracketsCount = 0\n        var currentChar = bracketsArray(0)\n     \
    \   var nextChar = bracketsArray(1)\n        while(currentChar != '>') {\n   \
    \         openingBracketsCount += 1\n            openingBrackets += currentChar\n\
    \            currentChar = nextChar\n            nextChar = bracketsArray(2)\n\
    \        }\n        while(currentChar != '<') {\n            closingBracketsCount\
    \ += 1\n            closingBrackets += currentChar\n            currentChar =\
    \ nextChar\n            nextChar = bracketsArray(3)\n        }\n        openingBracketsCount\
    \ < closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        val bracketsArrayCopy\
    \ = Array(bracketsArrayLength)\n        bracketsArray.copyTo(bracketsArrayCopy)\n\
    \        val openingBracketsArray = Array(bracketsArrayCopy.size)\n        val\
    \ closingBracketsArray = Array(bracketsArrayCopy.size)\n        var openingBracketsIndex\
    \ = 0\n        var closingBracketsIndex = 0\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        while(openingBracketsIndex\
    \ < bracketsArrayLength) {\n            val currentChar = bracketsArray(openingBracketsIndex)\n\
    \            openingBracketsCount += 1\n            openingBracketsArray = Array(bracketsArrayCopy.size)\n\
    \            openingBracketsArray(0) = openingBracketsCount\n            while(closingBracketsIndex\
    \ < bracketsArrayLength) {\n                val nextChar = bracketsArray(closingBracketsIndex)\n\
    \                closingBracketsCount += 1\n                closingBracketsArray\
    \ = Array(bracketsArrayCopy.size)\n                closingBracketsArray(0) = closingBracketsCount\n\
    \                if(currentChar == nextChar) {\n                    openingBracketsArray\
    \ = openingBracketsArray.drop(1)\n                    closingBracketsArray = closingBracketsArray.drop(1)\n\
    \                    openingBracketsIndex += 1\n                    closingBracketsIndex\
    \ += 1\n                }\n                else {\n                    if(openingBracketsCount\
    \ > closingBracketsCount) {\n                        openingBracketsArray = openingBracketsArray.drop(1)\n\
    \                        closingBracketsArray = closingBracketsArray.drop(1)\n\
    \                    }\n                    else {\n                        closingBracketsIndex\
    \ += 1\n                    }\n                }\n            }\n            val\
    \ openingBracketsArrayLength = openingBracketsArray.length\n            val closingBracketsArrayLength\
    \ = closingBracketsArray.length\n            if(openingBracketsArrayLength ==\
    \ closingBracketsArrayLength) {\n                val openingBracketsArrayCopy\
    \ = Array(openingBracketsArrayLength)\n                openingBracketsArray.copyTo(openingBracketsArrayCopy)\n\
    \                val closingBracketsArrayCopy = Array(closingBracketsArrayLength)\n\
    \                closingBracketsArray.copyTo(closingBracketsArrayCopy", "    \
    \    val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCount2 = 0\n        var closingBracketsCount2\
    \ = 0\n        var openingBracketsCount3 = 0\n        var closingBracketsCount3\
    \ = 0\n        var openingBracketsCount4 = 0\n        var closingBracketsCount4\
    \ = 0\n        var openingBracketsCount5 = 0\n        var closingBracketsCount5\
    \ = 0\n        var openingBracketsCount6 = 0\n        var closingBracketsCount6\
    \ = 0\n        var openingBracketsCount7 = 0\n        var closingBracketsCount7\
    \ = 0\n        var openingBracketsCount8 = 0\n        var closingBracketsCount8\
    \ = 0\n        var openingBracketsCount9 = 0\n        var closingBracketsCount9\
    \ = 0\n        var openingBracketsCount10 = 0\n        var closingBracketsCount10\
    \ = 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBracketsCount23\
    \ = 0\n        var openingBracketsCount24 = 0\n        var closingBracketsCount24\
    \ = 0\n        var openingBracketsCount25 = 0\n        var closingBracketsCount25\
    \ = 0\n        var openingBracketsCount26 = 0\n        var closingBracketsCount",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        val openingBracketsSet\
    \ = openingBrackets.toSet\n        val closingBracketsSet = closingBrackets.toSet\n\
    \        openingBracketsSet.forall(closingBracketsSet.contains)", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCountInside = 0\n        var closingBracketsCountInside\
    \ = 0\n        var openingBracketsCountOutside = 0\n        var closingBracketsCountOutside\
    \ = 0\n        var openingBracketsCountInsideOutside = 0\n        var closingBracketsCountInsideOutside\
    \ = 0\n        var openingBracketsCountOutsideInside = 0\n        var closingBracketsCountOutsideInside\
    \ = 0\n        var openingBracketsCountInsideOutsideOutside = 0\n        var closingBracketsCountInsideOutsideOutside\
    \ = 0\n        var openingBracketsCountOutsideInsideInside = 0\n        var closingBracketsCountOutsideInsideInside\
    \ = 0\n        var openingBracketsCountInsideOutsideOutsideInside = 0\n      \
    \  var closingBracketsCountInsideOutsideOutsideInside = 0\n        var openingBracketsCountOutsideInsideInside\
    \ = 0\n        var closingBracketsCountOutsideInsideInside = 0\n        var openingBracketsCountInsideOutsideOutsideInsideInside\
    \ = 0\n        var closingBracketsCountInsideOutsideOutsideInsideInside = 0\n\
    \        var openingBracketsCountOutsideInsideInsideOutside = 0\n        var closingBracketsCountOutsideInsideInsideOutside\
    \ = 0\n        var openingBracketsCountInsideOutsideOutsideInsideOutside = 0\n\
    \        var closingBracketsCountInsideOutsideOutsideInsideOutside = 0\n     \
    \   var openingBracketsCountOutsideInsideInsideOutsideOutside = 0\n        var\
    \ closingBracketsCountInsideOutsideOutsideInsideOutside = 0\n        var openingBracketsCountInsideOutsideOutsideInsideOutsideInside\
    \ = 0\n        var closingBracketsCountInsideOutsideOutsideInsideOutsideInside\
    \ = 0\n        var openingBracketsCountOutsideInsideInsideOutsideOutsideInside\
    \ = 0\n        var closingBracketsCountInsideOutsideOutsideInsideOutsideInside\
    \ = 0\n        var openingBracketsCountInsideOutsideOutsideInsideOutsideInsideOutside\
    \ = 0\n        var closingBracketsCountInsideOutsideOut", "        val bracketsArray\
    \ = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val openingBracketsCount = bracketsArray.filter(c => c == '<').length\n\
    \        val closingBracketsCount = bracketsArray.filter(c => c == '>').length\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsSet = Set(openingBrackets)\n   \
    \     val closingBracketsSet = Set(closingBrackets)\n        openingBracketsSet.subsetOf(closingBracketsSet)",
  "        val bracketsArray = brackets.toCharArray\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCountArray\
    \ = new Array[Int](bracketsArray.length)\n        var closingBracketsCountArray\
    \ = new Array[Int](bracketsArray.length)\n        var openingBracketsCountArrayCopy\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy2\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy2\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy3\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy3\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy4\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy4\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy5\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy5\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy6\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy6\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy7\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy7\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy8\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy8\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy9\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy9\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy10\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy10\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy11\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy11\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy12\
    \ = openingBracketsCountArray.clone()\n        var closingBracketsCountArrayCopy12\
    \ = closingBracketsCountArray.clone()\n        var openingBracketsCountArrayCopy13",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = ArrayBuffer.empty[Int]\n\
    \        val closingBracketsArray = ArrayBuffer.empty[Int]\n        var openingBracketsArrayIndex\
    \ = 0\n        var closingBracketsArrayIndex = 0\n        var openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        var closingBracketsArrayLength = closingBracketsArray.length\n\
    \        var openingBracketsArrayMaxIndex = openingBracketsArrayLength - 1\n \
    \       var closingBracketsArrayMaxIndex = closingBracketsArrayLength - 1\n  \
    \      var openingBracketsArrayMax = openingBracketsArrayLength\n        var closingBracketsArrayMax\
    \ = closingBracketsArrayLength\n        var openingBracketsArrayMin = openingBracketsArrayLength\n\
    \        var closingBracketsArrayMin = closingBracketsArrayLength\n        var\
    \ openingBracketsArrayMinIndex = openingBracketsArrayLength\n        var closingBracketsArrayMinIndex\
    \ = closingBracketsArrayLength\n        var openingBracketsArrayMin = openingBracketsArrayLength\n\
    \        var closingBracketsArrayMin = closingBracketsArrayLength\n        var\
    \ openingBracketsArrayMinIndex = openingBracketsArrayLength\n        var closingBracketsArrayMinIndex\
    \ = closingBracketsArrayLength\n        var openingBracketsArrayMax = openingBracketsArrayLength\n\
    \        var closingBracketsArrayMax = closingBracketsArrayLength\n        var\
    \ openingBracketsArrayMaxIndex = openingBracketsArrayLength - 1\n        var closingBracketsArrayMaxIndex\
    \ = closingBracketsArrayLength - 1\n        var openingBracketsArrayMax = openingBracketsArrayLength\n\
    \        var closingBracketsArrayMax = closingBracketsArrayLength\n        var\
    \ openingBracketsArrayMin = openingBracketsArrayLength\n        var closingBracketsArrayMin\
    \ = closingBracketsArrayLength\n        var openingBracketsArrayMinIndex = openingBracketsArrayLength\n\
    \        var closingBracketsArrayMinIndex = closingBracketsArrayLength\n     \
    \   var openingBracketsArrayMin = openingBracketsArrayLength\n        var closingBracketsArrayMin\
    \ = closingBracketsArrayLength\n        var openingBracketsArrayMinIndex = openingBracketsArrayLength\n\
    \        var closingBracket", "        val openingBrackets = brackets.split(\"\
    <\").map(_.trim).toSet\n        val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n\
    \        openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.count(c => c == '<')\n        val closingBracketsCount = bracketsArray.count(c\
    \ => c == '>')\n        openingBracketsCount == closingBracketsCount", "     \
    \   val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = Array[Int](bracketsArrayLength)\n\
    \        val closingBracketsArray = Array[Int](bracketsArrayLength)\n        var\
    \ openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n        var\
    \ openingBracketsCount = 0\n        var closingBracketsCount = 0\n        var\
    \ openingBracketsCount2 = 0\n        var closingBracketsCount2 = 0\n        var\
    \ openingBracketsCount3 = 0\n        var closingBracketsCount3 = 0\n        var\
    \ openingBracketsCount4 = 0\n        var closingBracketsCount4 = 0\n        var\
    \ openingBracketsCount5 = 0\n        var closingBracketsCount5 = 0\n        var\
    \ openingBracketsCount6 = 0\n        var closingBracketsCount6 = 0\n        var\
    \ openingBracketsCount7 = 0\n        var closingBracketsCount7 = 0\n        var\
    \ openingBracketsCount8 = 0\n        var closingBracketsCount8 = 0\n        var\
    \ openingBracketsCount9 = 0\n        var closingBracketsCount9 = 0\n        var\
    \ openingBracketsCount10 = 0\n        var closingBracketsCount10 = 0\n       \
    \ var openingBracketsCount11 = 0\n        var closingBracketsCount11 = 0\n   \
    \     var openingBracketsCount12 = 0\n        var closingBracketsCount12 = 0\n\
    \        var openingBracketsCount13 = 0\n        var closingBracketsCount13 =\
    \ 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBrackets", " \
    \       val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        openingBracketsCount\
    \ == closingBracketsCount && openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.count(_\
    \ > 0)\n        val closingBracketsCount = closingBrackets.count(_ > 0)\n    \
    \    openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        openingBracketsCount == closingBracketsCount\
    \ && openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"<<\", \">>\"\
    , \"<->\")\n        val openingBracketsCount = openingBracketsArray.length\n \
    \       val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val closingBracketsArray\
    \ = closingBracketsArray.toList\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.toList\n        val ",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        openingBrackets.forall(x => closingBrackets.contains(x))",
  "        val openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n       \
    \ val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)",
  "        val bracketsArray = brackets.toCharArray\n        var openingBrackets :\
    \ Int = 0\n        var closingBrackets : Int = 0\n        var openingBracketsCount\
    \ : Int = 0\n        var closingBracketsCount : Int = 0\n        var openingBracketsArray\
    \ = Array.empty[Int]\n        var closingBracketsArray = Array.empty[Int]\n  \
    \      for (i <- 0 until bracketsArray.length) {\n            if (bracketsArray(i)\
    \ == '<') {\n                openingBracketsCount += 1\n                openingBracketsArray\
    \ :+= openingBracketsCount\n            } else if (bracketsArray(i) == '>') {\n\
    \                closingBracketsCount += 1\n                closingBracketsArray\
    \ :+= closingBracketsCount\n            }\n        }\n        if (openingBracketsCount\
    \ != closingBracketsCount) {\n            return false\n        }\n        for\
    \ (i <- 0 until openingBracketsArray.length) {\n            if (openingBracketsArray(i)\
    \ != closingBracketsArray(i)) {\n                return false\n            }\n\
    \        }\n        return true", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCountInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracket = 0\n        var openingBracketsCountInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracket = 0\n      \
    \  var openingBracketsCountInsideBracketInsideBracketInsideBracket = 0\n     \
    \   var closingBracketsCountInsideBracketInsideBracketInsideBracket = 0\n    \
    \    var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var openingBracketsCountInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracketInsideBracket\
    \ = 0\n        var closingBra", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsCount = bracketsArray.count(c => c == '<')\n     \
    \   val closingBracketsCount = bracketsArray.count(c => c == '>')\n        openingBracketsCount\
    \ != closingBracketsCount", "        val openingBrackets = brackets.split(\"<\"\
    ).map(_.toInt)\n        val closingBrackets = brackets.split(\">\").map(_.toInt)\n\
    \        val openingBracketsCount = openingBrackets.foldLeft(0)(_ + _)\n     \
    \   val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        val openingBracketsCount\
    \ = bracketsArray.count(_ == '<')\n        val closingBracketsCount = bracketsArray.count(_\
    \ == '>')\n        openingBracketsCount == closingBracketsCount", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val openingBracketsCount = bracketsArray.count(_ == '<')\n        val\
    \ closingBracketsCount = bracketsArray.count(_ == '>')\n        openingBracketsCount\
    \ == closingBracketsCount", "        val openingBrackets = brackets.split(\"<\"\
    )\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount && openingBrackets.forall(openingBracket\
    \ => closingBrackets.contains(openingBracket))", "        val bracketsArray =\
    \ brackets.toCharArray\n        val openingBracketsArray = Array(\"<\", \">\"\
    )\n        val closingBracketsArray = Array(\"</\", \"/>\")\n        val openingBracketsSet\
    \ = openingBracketsArray.toSet\n        val closingBracketsSet = closingBracketsArray.toSet\n\
    \        val openingBracketsCount = openingBracketsArray.length\n        val closingBracketsCount\
    \ = closingBracketsArray.length\n        var openingBracketsIndex = 0\n      \
    \  var closingBracketsIndex = 0\n        var openingBracketsCountInCurrentBracket\
    \ = 0\n        var closingBracketsCountInCurrentBracket = 0\n        var openingBracketsCountInCurrentBracketInCurrentBracket\
    \ = 0\n        var closingBracketsCountInCurrentBracketInCurrentBracket = 0\n\
    \        var openingBracketsCountInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var closingBracketsCountInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var openingBracketsCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var closingBracketsCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var openingBracketsCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var closingBracketsCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var openingBracketsCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var closingBracketsCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var openingBracketsCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var closingBracketsCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var openingBracketsCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var closingBrackets", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketCount\
    \ = 0\n        var closingBracketCount = 0\n        var currentBracket = bracketsArray(0)\n\
    \        var currentBracketCount = 1\n        var currentBracketIndex = 0\n  \
    \      var isCorrect = true\n        for (i <- 1 to bracketsArrayLength) {\n \
    \           currentBracket = bracketsArray(i)\n            currentBracketCount\
    \ = 1\n            currentBracketIndex = 0\n            while (currentBracket\
    \ != currentBracketsArray(currentBracketIndex)) {\n                currentBracketIndex\
    \ += 1\n                currentBracketCount += 1\n            }\n            if\
    \ (currentBracketCount != currentBracketIndex + 1) {\n                isCorrect\
    \ = false\n                break\n            }\n            currentBracketIndex\
    \ += 1\n            currentBracketCount += 1\n            openingBracketCount\
    \ += currentBracketIndex\n            closingBracketCount += currentBracketIndex\n\
    \        }\n        isCorrect && openingBracketCount == closingBracketCount",
  "        val bracketsArray = brackets.toCharArray\n        var openingBrackets =\
    \ 0\n        var closingBrackets = 0\n        var openingBracketsArray = Array.empty[Char]\n\
    \        var closingBracketsArray = Array.empty[Char]\n        var openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        var closingBracketsArrayLength = closingBracketsArray.length\n\
    \        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayLastIndex = 0\n        var closingBracketsArrayLastIndex\
    \ = 0\n        var openingBracketsArrayLastChar = openingBracketsArray(0)\n  \
    \      var closingBracketsArrayLastChar = closingBracketsArray(0)\n        var\
    \ openingBracketsArrayLastCharIndex = openingBracketsArray.length\n        var\
    \ closingBracketsArrayLastCharIndex = closingBracketsArray.length\n        var\
    \ openingBracketsArrayLastCharIndexInArray = openingBracketsArrayLastIndex\n \
    \       var closingBracketsArrayLastCharIndexInArray = closingBracketsArrayLastIndex\n\
    \        var openingBracketsArrayLastCharIndexInArrayLength = openingBracketsArrayLastCharIndexInArray\n\
    \        var closingBracketsArrayLastCharIndexInArrayLength = closingBracketsArrayLastCharIndexInArray\n\
    \        var openingBracketsArrayLastCharIndexInArrayLength = openingBracketsArrayLastCharIndexInArray\n\
    \        var closingBracketsArrayLastCharIndexInArrayLength = closingBracketsArrayLastCharIndexInArray\n\
    \        var openingBracketsArrayLastCharIndexInArrayLength = openingBracketsArrayLastCharIndexInArray\n\
    \        var closingBracketsArrayLastCharIndexInArrayLength = closingBracketsArrayLastCharIndexInArray\n\
    \        var openingBracketsArrayLastCharIndexInArrayLength = openingBracketsArrayLastCharIndexInArray\n\
    \        var closingBracketsArrayLastCharIndexInArrayLength = closingBracketsArrayLastCharIndexInArray\n\
    \        var openingBracketsArrayLastCharIndexInArrayLength = openingBracketsArrayLastCharIndexInArray\n\
    \        var closingBracketsArrayLastCharIndexInArrayLength = closingBracketsArrayLastCharIndexInArray\n\
    \        var openingBracketsArrayLastCharIndexInArrayLength = openingBracketsArrayLastCharIndexInArray\n\
    \        var closingBracketsArrayLastCharIndexInArrayLength = closingBracket",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsCount = bracketsArray.filter(c\
    \ => c == '<').length\n        val closingBracketsCount = bracketsArray.filter(c\
    \ => c == '>').length\n        openingBracketsCount == closingBracketsCount",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.count(_\
    \ > 0)\n        val closingBracketsCount = closingBrackets.count(_ > 0)\n    \
    \    openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBracketsArray = bracketsArray.filter(c\
    \ => c == '<')\n        val closingBracketsArray = bracketsArray.filter(c => c\
    \ == '>')\n        openingBracketsArray.forall(c => closingBracketsArray.contains(c))",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val bracketsArrayCopy = Array(bracketsArrayLength)\n\
    \        bracketsArrayCopy.copyToArray(bracketsArray, 0)\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBracketsCount23 = 0\n        var openingBracketsCount24\
    \ = 0\n        var closingBracketsCount24 = 0\n        var opening", "       \
    \ val bracketsArray = brackets.toCharArray\n        val openingBracketsArray =\
    \ Array(\"<\", \">\", \"(\", \")\")\n        val closingBracketsArray = Array(\"\
    <\", \">\", \")\", \"(\")\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        var openingBracketsCountInCurrentBracket\
    \ = 0\n        var closingBracketsCountInCurrentBracket = 0\n        var currentBracket\
    \ = openingBracketsArray(0)\n        var currentBracketCount = 0\n        var\
    \ currentBracketCountInCurrentBracket = 0\n        var currentBracketCountInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBra",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsSet = openingBrackets.toSet\n\
    \        val closingBracketsSet = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val bracketsArray = brackets.toCharArray\n        val openingBrackets =\
    \ mutable.HashSet[Char]()\n        val closingBrackets = mutable.HashSet[Char]()\n\
    \        val openingBracketsArray = mutable.ArrayBuffer.empty[Char]\n        val\
    \ closingBracketsArray = mutable.ArrayBuffer.empty[Char]\n        var openingBracketsIndex\
    \ = 0\n        var closingBracketsIndex = 0\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var ", "        val bracketsArray\
    \ = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var currentChar = bracketsArray(0)\n        var currentCharCount = 1\n\
    \        var currentCharCountInCurrentBracket = 0\n        var currentCharCountInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBra", "        val bracketsArray =\
    \ brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val openingBracketsArray = Array.fill(\n            bracketsArrayLength\n\
    \        ){\n            false\n        }\n        val closingBracketsArray =\
    \ Array.fill(\n            bracketsArrayLength\n        ){\n            false\n\
    \        }\n        val openingBracketsArrayLength = openingBracketsArray.length\n\
    \        val closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var i = 0\n        while (i < bracketsArrayLength) {\n            val c = bracketsArray(i)\n\
    \            if (c == '<') {\n                openingBracketsArray(i) = true\n\
    \                openingBracketsArrayLength += 1\n            } else if (c ==\
    \ '>') {\n                closingBracketsArray(i) = true\n                closingBracketsArrayLength\
    \ += 1\n            }\n            i += 1\n        }\n        var j = 0\n    \
    \    while (j < openingBracketsArrayLength) {\n            if (!openingBracketsArray(j))\
    \ {\n                return false\n            }\n            j += 1\n       \
    \ }\n        var k = 0\n        while (k < closingBracketsArrayLength) {\n   \
    \         if (!closingBracketsArray(k)) {\n                return false\n    \
    \        }\n            k += 1\n        }\n        return true", "        val\
    \ openingBrackets = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\"\
    >\")\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        openingBracketsCount == closingBracketsCount\
    \ && openingBrackets.forall(x => closingBrackets.contains(x))", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsSet = openingBrackets.toSet\n  \
    \      val closingBracketsSet = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.filter(c => c == '<').length\n        val closingBracketsCount\
    \ = bracketsArray.filter(c => c == '>').length\n        openingBracketsCount ==\
    \ closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n \
    \       val bracketsArrayLength = bracketsArray.length\n        val bracketsArrayCopy\
    \ = Array(bracketsArrayLength)\n        System.arraycopy(bracketsArray, 0, bracketsArrayCopy,\
    \ 0, bracketsArrayLength)\n        val openingBracketsArray = Array(bracketsArrayCopy.takeWhile(_\
    \ != '<'))\n        val closingBracketsArray = Array(bracketsArrayCopy.dropWhile(_\
    \ != '<'))\n        val openingBracketsArrayLength = openingBracketsArray.length\n\
    \        val closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  val openingBracketsArrayCopy = Array(openingBracketsArrayLength)\n        System.arraycopy(openingBracketsArray,\
    \ 0, openingBracketsArrayCopy, 0, openingBracketsArrayLength)\n        val closingBracketsArrayCopy\
    \ = Array(closingBracketsArrayLength)\n        System.arraycopy(closingBracketsArray,\
    \ 0, closingBracketsArrayCopy, 0, closingBracketsArrayLength)\n        val openingBracketsArrayCopyLength\
    \ = openingBracketsArrayCopy.length\n        val closingBracketsArrayCopyLength\
    \ = closingBracketsArrayCopy.length\n        val openingBracketsArrayCopy = Array(openingBracketsArrayCopyLength)\n\
    \        System.arraycopy(openingBracketsArrayCopy, 0, openingBracketsArrayCopy,\
    \ 0, openingBracketsArrayCopyLength)\n        val closingBracketsArrayCopy = Array(closingBracketsArrayCopyLength)\n\
    \        System.arraycopy(closingBracketsArrayCopy, 0, closingBracketsArrayCopy,\
    \ 0, closingBracketsArrayCopyLength)\n        val openingBracketsArrayCopyLength\
    \ = openingBracketsArrayCopy.length\n        val closingBracketsArrayCopyLength\
    \ = closingBracketsArrayCopy.length\n        val openingBracketsArrayCopy = Array(openingBracketsArrayCopyLength)\n\
    \        System.arraycopy(openingBracketsArrayCopy, 0, openingBracketsArrayCopy,\
    \ 0, openingBracketsArrayCopyLength)\n        val closingBracketsArrayCopy = Array(closingBracketsArrayCopyLength)\n\
    \        System.arraycopy(closingBracketsArrayCopy, 0, closingBracketsArrayCopy,\
    \ 0, closingBracketsArrayCopyLength)\n        val openingBracketsArrayCopyLength\
    \ = openingBracketsArray", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        val openingBracketsArray\
    \ = Array.fill(\n            bracketsArrayLength\n        ){\n            false\n\
    \        }\n        val closingBracketsArray = Array.fill(\n            bracketsArrayLength\n\
    \        ){\n            false\n        }\n        var openingBracketsIndex =\
    \ 0\n        var closingBracketsIndex = 0\n        var openingBracketsCount =\
    \ 0\n        var closingBracketsCount = 0\n        for(i <- 0 until bracketsArrayLength){\n\
    \            if(bracketsArray(i) == '<'){\n                openingBracketsArray(openingBracketsIndex)\
    \ = true\n                openingBracketsIndex += 1\n                openingBracketsCount\
    \ += 1\n            }\n            if(bracketsArray(i) == '>'){\n            \
    \    closingBracketsArray(closingBracketsIndex) = true\n                closingBracketsIndex\
    \ += 1\n                closingBracketsCount += 1\n            }\n        }\n\
    \        openingBracketsCount <= closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        openingBracketsCount == closingBracketsCount\
    \ && openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var currentChar = 0\n        var currentBracket = 0\n        var\
    \ currentBracketCount = 0\n        var currentBracketOpeningCount = 0\n      \
    \  var currentBracketClosingCount = 0\n        var currentBracketOpeningChar =\
    \ 0\n        var currentBracketClosingChar = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount = 0\n        var currentBracketOpeningCharCount\
    \ = 0\n        var currentBracketClosingCharCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBracketsArray = bracketsArray.filter(c\
    \ => c == '<')\n        val closingBracketsArray = bracketsArray.filter(c => c\
    \ == '>')\n        openingBracketsArray.forall(c => closingBracketsArray.contains(c))",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsSet = openingBrackets.toSet\n\
    \        val closingBracketsSet = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        openingBrackets.forall(x => closingBrackets.contains(x))",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"<\", \">\"\
    )\n        val openingBracketsCount = openingBracketsArray.length\n        val\
    \ closingBracketsCount = closingBracketsArray.length\n        var openingBracketsIndex\
    \ = 0\n        var closingBracketsIndex = 0\n        while (openingBracketsIndex\
    \ < openingBracketsCount && closingBracketsIndex < closingBracketsCount) {\n \
    \           if (bracketsArray(openingBracketsIndex) == openingBracketsArray(closingBracketsIndex))\
    \ {\n                openingBracketsIndex += 1\n                closingBracketsIndex\
    \ += 1\n            } else {\n                if (openingBracketsIndex < openingBracketsCount)\
    \ {\n                    openingBracketsIndex += 1\n                } else {\n\
    \                    closingBracketsIndex += 1\n                }\n          \
    \  }\n        }\n        openingBracketsIndex == openingBracketsCount", "    \
    \    val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = Array.fill(\n   \
    \         bracketsArrayLength\n        )(0)\n        val closingBracketsArray\
    \ = Array.fill(\n            bracketsArrayLength\n        )(0)\n        var openingBracketsIndex\
    \ = 0\n        var closingBracketsIndex = 0\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        for (i <- 0 until bracketsArrayLength)\
    \ {\n            val currentChar = bracketsArray(i)\n            if (currentChar\
    \ == '<') {\n                openingBracketsArray(openingBracketsIndex) = currentChar\n\
    \                openingBracketsIndex += 1\n                openingBracketsCount\
    \ += 1\n            } else if (currentChar == '>') {\n                closingBracketsArray(closingBracketsIndex)\
    \ = currentChar\n                closingBracketsIndex += 1\n                closingBracketsCount\
    \ += 1\n            }\n        }\n        if (openingBracketsCount != closingBracketsCount)\
    \ {\n            return false\n        }\n        for (i <- 0 until openingBracketsArray.length)\
    \ {\n            if (openingBracketsArray(i) != closingBracketsArray(i)) {\n \
    \               return false\n            }\n        }\n        return true",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = bracketsArray.filter(c => c == '<')\n        val closingBracketsArray = bracketsArray.filter(c\
    \ => c == '>')\n        openingBracketsArray.forall(c => closingBracketsArray.contains(c))",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = Array.fill(bracketsArrayLength)(0)\n\
    \        val closingBracketsArray = Array.fill(bracketsArrayLength)(0)\n     \
    \   var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n     \
    \   var openingBracketsCount = 0\n        var closingBracketsCount = 0\n     \
    \   for (i <- 0 until bracketsArrayLength) {\n            if (bracketsArray(i)\
    \ == '<') {\n                openingBracketsArray(i) = openingBracketsIndex\n\
    \                openingBracketsIndex += 1\n                openingBracketsCount\
    \ += 1\n            } else if (bracketsArray(i) == '>') {\n                closingBracketsArray(i)\
    \ = closingBracketsIndex\n                closingBracketsIndex += 1\n        \
    \        closingBracketsCount += 1\n            }\n        }\n        if (openingBracketsCount\
    \ != closingBracketsCount) {\n            return false\n        }\n        for\
    \ (i <- 0 until openingBracketsArray.length) {\n            if (openingBracketsArray(i)\
    \ != closingBracketsArray(i)) {\n                return false\n            }\n\
    \        }\n        return true", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var currentBracket = bracketsArray(0)\n\
    \        var currentBracketCount = 0\n        var currentBracketsArray = Array[Char]()\n\
    \        var currentBracketsArrayLength = currentBracketsArray.length\n      \
    \  var currentBracketsArrayIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0\n        var currentBracketsArrayElement\
    \ = currentBracketsArray(0)\n        var currentBracketsArrayElementCount = 0\n\
    \        var currentBracketsArrayElementIndex = 0", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        openingBrackets.forall(x => closingBrackets.contains(x))", "      \
    \  val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"</\", \"/>\"\
    )\n        val openingBracketsArrayLength = openingBracketsArray.length\n    \
    \    val closingBracketsArrayLength = closingBracketsArray.length\n        var\
    \ openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n        var\
    \ openingBracketsCount = 0\n        var closingBracketsCount = 0\n        var\
    \ openingBracketsFound = false\n        var closingBracketsFound = false\n   \
    \     while (!openingBracketsFound && openingBracketsIndex < openingBracketsArrayLength)\
    \ {\n            if (bracketsArray(openingBracketsIndex) == openingBracketsArray(openingBracketsCount))\
    \ {\n                openingBracketsCount += 1\n                openingBracketsIndex\
    \ += 1\n            } else {\n                openingBracketsCount = 0\n     \
    \           openingBracketsIndex += 1\n            }\n        }\n        while\
    \ (!closingBracketsFound && closingBracketsIndex < closingBracketsArrayLength)\
    \ {\n            if (bracketsArray(closingBracketsIndex) == closingBracketsArray(closingBracketsCount))\
    \ {\n                closingBracketsCount += 1\n                closingBracketsIndex\
    \ += 1\n            } else {\n                closingBracketsCount = 0\n     \
    \           closingBracketsIndex += 1\n            }\n        }\n        if (openingBracketsIndex\
    \ == openingBracketsArrayLength) {\n            openingBracketsFound = true\n\
    \        }\n        if (closingBracketsIndex == closingBracketsArrayLength) {\n\
    \            closingBracketsFound = true\n        }\n        if (openingBracketsCount\
    \ != closingBracketsCount) {\n            return false\n        }\n        return\
    \ true", "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = new Array[Int](bracketsArrayLength)\n\
    \        val closingBracketsArray = new Array[Int](bracketsArrayLength)\n    \
    \    var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n    \
    \    var currentOpeningBracket = 0\n        var currentClosingBracket = 0\n  \
    \      var currentOpeningBracketCount = 0\n        var currentClosingBracketCount\
    \ = 0\n        var currentOpeningBracketCountForCurrentClosingBracket = 0\n  \
    \      var currentClosingBracketCountForCurrentOpeningBracket = 0\n        var\
    \ currentOpeningBracketCountForCurrentClosingBracketForCurrentOpeningBracket =\
    \ 0\n        var currentClosingBracketCountForCurrentOpeningBracketForCurrentClosingBracket\
    \ = 0\n        var currentOpeningBracketCountForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracket\
    \ = 0\n        var currentOpeningBracketCountForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracket\
    \ = 0\n        var currentClosingBracketCountForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracket\
    \ = 0\n        var currentOpeningBracketCountForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracket\
    \ = 0\n        var currentClosingBracketCountForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracket\
    \ = 0\n        var currentOpeningBracketCountForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracket\
    \ = 0\n        var currentClosingBracketCountForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracketForCurrentClosingBracketForCurrentOpeningBracket\
    \ = 0\n        var currentOpeningBracketCountForCurrentClos", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.trim).toSet\n        val closingBrackets = brackets.split(\"\
    >\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)", " \
    \       val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.count(_ == '<')\n        val closingBracketsCount = bracketsArray.count(_\
    \ == '>')\n        openingBracketsCount != closingBracketsCount", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var closingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var openingBracketsCountArrayIndex = 0\n        var closingBracketsCountArrayIndex\
    \ = 0\n        var openingBracketsCountArrayIndex2 = 0\n        var closingBracketsCountArrayIndex2\
    \ = 0\n        var openingBracketsCountArrayIndex3 = 0\n        var closingBracketsCountArrayIndex3\
    \ = 0\n        var openingBracketsCountArrayIndex4 = 0\n        var closingBracketsCountArrayIndex4\
    \ = 0\n        var openingBracketsCountArrayIndex5 = 0\n        var closingBracketsCountArrayIndex5\
    \ = 0\n        var openingBracketsCountArrayIndex6 = 0\n        var closingBracketsCountArrayIndex6\
    \ = 0\n        var openingBracketsCountArrayIndex7 = 0\n        var closingBracketsCountArrayIndex7\
    \ = 0\n        var openingBracketsCountArrayIndex8 = 0\n        var closingBracketsCountArrayIndex8\
    \ = 0\n        var openingBracketsCountArrayIndex9 = 0\n        var closingBracketsCountArrayIndex9\
    \ = 0\n        var openingBracketsCountArrayIndex10 = 0\n        var closingBracketsCountArrayIndex10\
    \ = 0\n        var openingBracketsCountArrayIndex11 = 0\n        var closingBracketsCountArrayIndex11\
    \ = 0\n        var openingBracketsCountArrayIndex12 = 0\n        var closingBracketsCountArrayIndex12\
    \ = 0\n        var openingBracketsCountArrayIndex13 = 0\n        var closingBracketsCountArrayIndex13\
    \ = 0\n        var openingBracketsCountArrayIndex14 = 0\n        var closingBracketsCountArrayIndex14\
    \ = 0\n        var openingBracketsCountArrayIndex15 = 0\n        var closingBracketsCountArrayIndex15\
    \ = 0\n        var openingBracketsCountArrayIndex16 = 0\n        var closingBracketsCountArrayIndex16\
    \ = 0\n        var openingBracketsCountArrayIndex17 = 0\n        var closingBracketsCountArrayIndex17\
    \ = 0\n        var openingBracketsCountArrayIndex18 = 0\n        var closingBracketsCountArrayIndex18\
    \ = 0\n        var openingBracketsCountArrayIndex19 = 0\n        var closingBracketsCountArray",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = Array[Int](bracketsArrayLength)\n\
    \        var i = 0\n        while (i < bracketsArrayLength) {\n            openingBracketsArray(i)\
    \ = bracketsArray(i) - '<'\n            i += 1\n        }\n        val closingBracketsArray\
    \ = Array[Int](bracketsArrayLength)\n        i = 0\n        while (i < bracketsArrayLength)\
    \ {\n            closingBracketsArray(i) = bracketsArray(i) - '>'\n          \
    \  i += 1\n        }\n        val openingBracketsArrayLength = openingBracketsArray.length\n\
    \        val closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  if (openingBracketsArrayLength != closingBracketsArrayLength) {\n         \
    \   return false\n        }\n        var i = 0\n        while (i < openingBracketsArrayLength)\
    \ {\n            if (openingBracketsArray(i) != closingBracketsArray(i)) {\n \
    \               return false\n            }\n            i += 1\n        }\n \
    \       return true", "        val bracketsArray = brackets.toCharArray\n    \
    \    val openingBracketsArray = Array(\"<\", \">\")\n        val closingBracketsArray\
    \ = Array(\"</\", \"/>\")\n        val openingBracketsSet = openingBracketsArray.toSet\n\
    \        val closingBracketsSet = closingBracketsArray.toSet\n        val openingBracketsCount\
    \ = openingBracketsArray.length\n        val closingBracketsCount = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength - 1\n        val closingBracketsArrayLength = closingBracketsArrayLength\
    \ - 1\n        val openingBracketsArrayLength = openingBracketsArrayLength - 1\n\
    \        val closingBracketsArrayLength = closingBracketsArrayLength - 1\n   \
    \     val openingBracketsArrayLength = openingBracketsArrayLength - 1\n      \
    \  val closingBracketsArrayLength = closingBracketsArrayLength - 1\n        val\
    \ openingBracketsArrayLength = openingBracketsArrayLength - 1\n        val closingBracketsArrayLength\
    \ = closingBracketsArrayLength - 1\n        val openingBracketsArrayLength = openingBracketsArrayLength\
    \ - 1\n        val closingBracketsArrayLength = closingBracketsArrayLength - 1\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength - 1\n   \
    \     val closingBracketsArrayLength = closingBracketsArrayLength - 1\n      \
    \  val openingBracketsArrayLength = openingBracketsArrayLength - 1\n        val\
    \ closingBracketsArrayLength = closingBracketsArrayLength - 1\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength - 1\n        val closingBracketsArrayLength = closingBracketsArrayLength\
    \ - 1\n        val openingBracketsArrayLength = openingBracketsArrayLength - 1\n\
    \        val closingBracketsArrayLength = closingBracketsArrayLength - 1\n   \
    \     val openingBracketsArrayLength = openingBracketsArrayLength - 1\n      \
    \  val closingBracketsArrayLength = closingBracketsArrayLength - 1\n        val\
    \ openingBracketsArrayLength = openingBracketsArrayLength - 1\n        val closingBracketsArrayLength\
    \ = closingBracketsArrayLength - 1\n", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsCount = bracketsArray.count(_ == '<')\n        val\
    \ closingBracketsCount = bracketsArray.count(_ == '>')\n        openingBracketsCount\
    \ != closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBrackets = mutable.HashSet[Char]()\n        val closingBrackets\
    \ = mutable.HashSet[Char]()\n        val openingBracketsArray = mutable.ArrayBuffer.empty[Char]\n\
    \        val closingBracketsArray = mutable.ArrayBuffer.empty[Char]\n        val\
    \ openingBracketsCount = mutable.HashMap[Char, Int]()\n        val closingBracketsCount\
    \ = mutable.HashMap[Char, Int]()\n        val openingBracketsCountArray = mutable.ArrayBuffer.empty[Int]\n\
    \        val closingBracketsCountArray = mutable.ArrayBuffer.empty[Int]\n    \
    \    var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n    \
    \    var openingBracketsCountIndex = 0\n        var closingBracketsCountIndex\
    \ = 0\n        var openingBracketsCountIndexArray = 0\n        var closingBracketsCountIndexArray\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBracketsCountIndexArrayIndex = 0\n        var closingBracketsCountIndexArrayIndex\
    \ = 0\n        var openingBrackets", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsCount = bracketsArray.count(_ == '<')\n        val\
    \ closingBracketsCount = bracketsArray.count(_ == '>')\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\", \">\")\n        val closingBracketsArray\
    \ = Array(\"<<\", \">>\", \"<->\")\n        val openingBracketsSet = openingBracketsArray.toSet\n\
    \        val closingBracketsSet = closingBracketsArray.toSet\n        val openingBracketsArraySize\
    \ = openingBracketsArray.length\n        val closingBracketsArraySize = closingBracketsArray.length\n\
    \        var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCountArray = Array.fill(openingBracketsArraySize)(0)\n\
    \        var closingBracketsCountArray = Array.fill(closingBracketsArraySize)(0)\n\
    \        var openingBracketsCountArraySize = openingBracketsArraySize\n      \
    \  var closingBracketsCountArraySize = closingBracketsArraySize\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        openingBrackets.size == closingBrackets.size && openingBrackets.forall(openingBracket\
    \ => closingBrackets.contains(openingBracket))", "        val bracketsArray =\
    \ brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var currentChar = 0\n        var currentBracket = 0\n        var currentBracketCount\
    \ = 0\n        var currentBracketChar = 0\n        var currentBracketCountChar\
    \ = 0\n        var currentCharCount = 0\n        var currentCharCountChar = 0\n\
    \        var currentCharCountChar2 = 0\n        var currentCharCountChar3 = 0\n\
    \        var currentCharCountChar4 = 0\n        var currentCharCountChar5 = 0\n\
    \        var currentCharCountChar6 = 0\n        var currentCharCountChar7 = 0\n\
    \        var currentCharCountChar8 = 0\n        var currentCharCountChar9 = 0\n\
    \        var currentCharCountChar10 = 0\n        var currentCharCountChar11 =\
    \ 0\n        var currentCharCountChar12 = 0\n        var currentCharCountChar13\
    \ = 0\n        var currentCharCountChar14 = 0\n        var currentCharCountChar15\
    \ = 0\n        var currentCharCountChar16 = 0\n        var currentCharCountChar17\
    \ = 0\n        var currentCharCountChar18 = 0\n        var currentCharCountChar19\
    \ = 0\n        var currentCharCountChar20 = 0\n        var currentCharCountChar21\
    \ = 0\n        var currentCharCountChar22 = 0\n        var currentCharCountChar23\
    \ = 0\n        var currentCharCountChar24 = 0\n        var currentCharCountChar25\
    \ = 0\n        var currentCharCountChar26 = 0\n        var currentCharCountChar27\
    \ = 0\n        var currentCharCountChar28 = 0\n        var currentCharCountChar29\
    \ = 0\n        var currentCharCountChar30 = 0\n        var currentCharCountChar31\
    \ = 0\n        var currentCharCountChar32 = 0\n        var currentCharCountChar33\
    \ = 0\n        var currentCharCountChar34 = 0\n        var currentCharCountChar35\
    \ = 0\n        var currentCharCountChar36 = 0\n        var currentCharCountChar37\
    \ = 0\n        var currentCharCountChar38 = 0\n        var currentCharCountChar39\
    \ = 0\n        var currentCharCountChar40 = 0\n        var currentCharCountChar41\
    \ = 0\n        var currentCharCountChar42 = 0\n        var currentCharCountChar43\
    \ = 0\n        var currentCharCountChar44 = 0\n        var currentCharCountChar45\
    \ = 0\n        var currentCharCountChar46 = 0\n        var currentCharCountChar47\
    \ = 0\n        var currentCharCountChar48 = 0\n        var currentCharCountChar49\
    \ = 0\n        var currentCharCountChar50 = 0\n        var currentCharCountChar51\
    \ = 0\n        var currentCharCountChar52 = 0\n        var currentCharCountChar53\
    \ = 0\n        var currentCharCountChar54 = 0\n        var current", "       \
    \ val bracketsArray = brackets.toCharArray\n        val openingBracketsArray =\
    \ Array(\"<\")\n        val closingBracketsArray = Array(\">\")\n        val openingBracketsCount\
    \ = openingBracketsArray.length\n        val closingBracketsCount = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArray\
    \ = openingBracketsArray.iterator\n        val closingBracketsArray = closingBracketsArray.iterator\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArray\
    \ = openingBracketsArray.iterator\n        val closingBracketsArray = closingBracketsArray.iterator\n\
    \        val openingBracketsCount = openingBracketsArray.length\n        val closingBracketsCount\
    \ = closingBracketsArray.length\n        val openingBracketsArrayLength = openingBracketsArray.length\n\
    \        val closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  val openingBracketsArray = openingBracketsArray.iterator\n        val closingBracketsArray\
    \ = closingBracketsArray.iterator\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.iterator\n        val\
    \ closingBracketsArray = closingBracketsArray.iterator\n        val openingBracketsCount\
    \ = openingBracketsArray.length\n        val closingBracketsCount = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArray\
    \ = openingBracketsArray.iterator\n        val closingBracketsArray = closingBracketsArray.iterator\n\
    \        val openingBracketsCount = openingBracketsArray.length\n        val closingBracketsCount\
    \ = closingBracketsArray.length\n        val openingBra", "        val bracketsArray\
    \ = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val bracketsArrayIterator = bracketsArray.iterator\n        val bracketsArrayIteratorNext\
    \ = bracketsArrayIterator.next\n        val bracketsArrayIteratorNextNext = bracketsArrayIteratorNext.next\n\
    \        val bracketsArrayIteratorNextNextNext = bracketsArrayIteratorNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNext = bracketsArrayIteratorNextNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNextNext = bracketsArrayIteratorNextNextNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNextNextNext = bracketsArrayIteratorNextNextNextNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNextNextNextNext = bracketsArrayIteratorNextNextNextNextNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNextNextNextNextNext = bracketsArrayIteratorNextNextNextNextNextNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNextNextNextNextNextNext = bracketsArrayIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNext = bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ = bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNext.next\n \
    \       val bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNext\
    \ = bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNextNext\
    \ = bracketsArrayIteratorNextNextNextNextNextNextNextNextNextNextNextNextNextNext.next\n\
    \        val bracketsArrayIterator", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCountArray\
    \ = new Array[Int](bracketsArrayLength)\n        var closingBracketsCountArray\
    \ = new Array[Int](bracketsArrayLength)\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex2\
    \ = 0\n        var closingBracketsCountArrayIndex2 = 0\n        var openingBracketsCountArrayIndex3\
    \ = 0\n        var closingBracketsCountArrayIndex3 = 0\n        var openingBracketsCountArrayIndex4\
    \ = 0\n        var closingBracketsCountArrayIndex4 = 0\n        var openingBracketsCountArrayIndex5\
    \ = 0\n        var closingBracketsCountArrayIndex5 = 0\n        var openingBracketsCountArrayIndex6\
    \ = 0\n        var closingBracketsCountArrayIndex6 = 0\n        var openingBracketsCountArrayIndex7\
    \ = 0\n        var closingBracketsCountArrayIndex7 = 0\n        var openingBracketsCountArrayIndex8\
    \ = 0\n        var closingBracketsCountArrayIndex8 = 0\n        var openingBracketsCountArrayIndex9\
    \ = 0\n        var closingBracketsCountArrayIndex9 = 0\n        var openingBracketsCountArrayIndex10\
    \ = 0\n        var closingBracketsCountArrayIndex10 = 0\n        var openingBracketsCountArrayIndex11\
    \ = 0\n        var closingBracketsCountArrayIndex11 = 0\n        var openingBracketsCountArrayIndex12\
    \ = 0\n        var closingBracketsCountArrayIndex12 = 0\n        var openingBracketsCountArrayIndex13\
    \ = 0\n        var closingBracketsCountArrayIndex13 = 0\n        var openingBracketsCountArrayIndex14\
    \ = 0\n        var closingBracketsCountArrayIndex14 = 0\n        var openingBracketsCountArrayIndex15\
    \ = 0\n        var closingBracketsCountArrayIndex15 = 0\n        var openingBracketsCountArrayIndex16\
    \ = 0\n        var closingBracketsCountArrayIndex16 = 0\n        var openingBracketsCountArrayIndex17\
    \ = 0\n        var closingBracketsCountArrayIndex17 = 0\n        var openingBracketsCountArrayIndex18\
    \ = 0\n        var closingBracketsCountArrayIndex18 = 0\n        var openingBracketsCountArrayIndex19\
    \ = 0\n        var closingBracketsCountArray", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\", \">\")\n        val closingBracketsArray\
    \ = Array(\"</\", \"/>\")\n        val openingBracketsSet = openingBracketsArray.toSet\n\
    \        val closingBracketsSet = closingBracketsArray.toSet\n        val openingBracketsCount\
    \ = openingBracketsArray.length\n        val closingBracketsCount = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracket", "        val openingBrackets = brackets.split(\"<\")\n\
    \        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount && openingBrackets.forall(x\
    \ => closingBrackets.contains(x))", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\", \">\", \"(\", \")\")\n      \
    \  val closingBracketsArray = Array(\"<\", \">\", \")\", \"(\")\n        val openingBracketsSet\
    \ = openingBracketsArray.toSet\n        val closingBracketsSet = closingBracketsArray.toSet\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        var openingBracketsIndex\
    \ = 0\n        var closingBracketsIndex = 0\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var open", "        val\
    \ openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\n\
    \        val closingBracketsCount = closingBrackets.toSet.size\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsCount = bracketsArray.count(_ == '<')\n        val\
    \ closingBracketsCount = bracketsArray.count(_ == '>')\n        openingBracketsCount\
    \ == closingBracketsCount", "        val openingBrackets = brackets.split(\"<\"\
    )\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var closingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var openingBracketsCountArrayIndex = 0\n        var closingBracketsCountArrayIndex\
    \ = 0\n        var openingBracketsCountArrayIndex2 = 0\n        var closingBracketsCountArrayIndex2\
    \ = 0\n        var openingBracketsCountArrayIndex3 = 0\n        var closingBracketsCountArrayIndex3\
    \ = 0\n        var openingBracketsCountArrayIndex4 = 0\n        var closingBracketsCountArrayIndex4\
    \ = 0\n        var openingBracketsCountArrayIndex5 = 0\n        var closingBracketsCountArrayIndex5\
    \ = 0\n        var openingBracketsCountArrayIndex6 = 0\n        var closingBracketsCountArrayIndex6\
    \ = 0\n        var openingBracketsCountArrayIndex7 = 0\n        var closingBracketsCountArrayIndex7\
    \ = 0\n        var openingBracketsCountArrayIndex8 = 0\n        var closingBracketsCountArrayIndex8\
    \ = 0\n        var openingBracketsCountArrayIndex9 = 0\n        var closingBracketsCountArrayIndex9\
    \ = 0\n        var openingBracketsCountArrayIndex10 = 0\n        var closingBracketsCountArrayIndex10\
    \ = 0\n        var openingBracketsCountArrayIndex11 = 0\n        var closingBracketsCountArrayIndex11\
    \ = 0\n        var openingBracketsCountArrayIndex12 = 0\n        var closingBracketsCountArrayIndex12\
    \ = 0\n        var openingBracketsCountArrayIndex13 = 0\n        var closingBracketsCountArrayIndex13\
    \ = 0\n        var openingBracketsCountArrayIndex14 = 0\n        var closingBracketsCountArrayIndex14\
    \ = 0\n        var openingBracketsCountArrayIndex15 = 0\n        var closingBracketsCountArrayIndex15\
    \ = 0\n        var openingBracketsCountArrayIndex16 = 0\n        var closingBracketsCountArrayIndex16\
    \ = 0\n        var openingBracketsCountArrayIndex17 = 0\n        var closingBracketsCountArrayIndex17\
    \ = 0\n        var openingBracketsCountArrayIndex18 = 0\n        var closingBracketsCountArrayIndex18\
    \ = 0\n        var openingBracketsCountArrayIndex19 = 0\n        var closingBracketsCountArray",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"</\", \"/>\"\
    )\n        val openingBracketsCount = openingBracketsArray.length\n        val\
    \ closingBracketsCount = closingBracketsArray.length\n        var openingBracketsCountForLoop\
    \ = 0\n        var closingBracketsCountForLoop = 0\n        var openingBracketsCountForLoop2\
    \ = 0\n        var closingBracketsCountForLoop2 = 0\n        var openingBracketsCountForLoop3\
    \ = 0\n        var closingBracketsCountForLoop3 = 0\n        var openingBracketsCountForLoop4\
    \ = 0\n        var closingBracketsCountForLoop4 = 0\n        var openingBracketsCountForLoop5\
    \ = 0\n        var closingBracketsCountForLoop5 = 0\n        var openingBracketsCountForLoop6\
    \ = 0\n        var closingBracketsCountForLoop6 = 0\n        var openingBracketsCountForLoop7\
    \ = 0\n        var closingBracketsCountForLoop7 = 0\n        var openingBracketsCountForLoop8\
    \ = 0\n        var closingBracketsCountForLoop8 = 0\n        var openingBracketsCountForLoop9\
    \ = 0\n        var closingBracketsCountForLoop9 = 0\n        var openingBracketsCountForLoop10\
    \ = 0\n        var closingBracketsCountForLoop10 = 0\n        var openingBracketsCountForLoop11\
    \ = 0\n        var closingBracketsCountForLoop11 = 0\n        var openingBracketsCountForLoop12\
    \ = 0\n        var closingBracketsCountForLoop12 = 0\n        var openingBracketsCountForLoop13\
    \ = 0\n        var closingBracketsCountForLoop13 = 0\n        var openingBracketsCountForLoop14\
    \ = 0\n        var closingBracketsCountForLoop14 = 0\n        var openingBracketsCountForLoop15\
    \ = 0\n        var closingBracketsCountForLoop15 = 0\n        var openingBracketsCountForLoop16\
    \ = 0\n        var closingBracketsCountForLoop16 = 0\n        var openingBracketsCountForLoop17\
    \ = 0\n        var closingBracketsCountForLoop17 = 0\n        var openingBracketsCountForLoop18\
    \ = 0\n        var closingBracketsCountForLoop18 = 0\n        var openingBracketsCountForLoop19\
    \ = 0\n        var closingBracketsCountForLoop19 = 0\n        var openingBracket",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.filter(c => c == '<').length\n        val closingBracketsCount\
    \ = bracketsArray.filter(c => c == '>').length\n        openingBracketsCount ==\
    \ closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n \
    \       val openingBrackets = bracketsArray.filter(x => x == '<')\n        val\
    \ closingBrackets = bracketsArray.filter(x => x == '>')\n        openingBrackets.size\
    \ == closingBrackets.size", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var currentBracketsCount\
    \ = 0\n        var currentBracketsCount2 = 0\n        var currentBracketsCount3\
    \ = 0\n        var currentBracketsCount4 = 0\n        var currentBracketsCount5\
    \ = 0\n        var currentBracketsCount6 = 0\n        var currentBracketsCount7\
    \ = 0\n        var currentBracketsCount8 = 0\n        var currentBracketsCount9\
    \ = 0\n        var currentBracketsCount10 = 0\n        var currentBracketsCount11\
    \ = 0\n        var currentBracketsCount12 = 0\n        var currentBracketsCount13\
    \ = 0\n        var currentBracketsCount14 = 0\n        var currentBracketsCount15\
    \ = 0\n        var currentBracketsCount16 = 0\n        var currentBracketsCount17\
    \ = 0\n        var currentBracketsCount18 = 0\n        var currentBracketsCount19\
    \ = 0\n        var currentBracketsCount20 = 0\n        var currentBracketsCount21\
    \ = 0\n        var currentBracketsCount22 = 0\n        var currentBracketsCount23\
    \ = 0\n        var currentBracketsCount24 = 0\n        var currentBracketsCount25\
    \ = 0\n        var currentBracketsCount26 = 0\n        var currentBracketsCount27\
    \ = 0\n        var currentBracketsCount28 = 0\n        var currentBracketsCount29\
    \ = 0\n        var currentBracketsCount30 = 0\n        var currentBracketsCount31\
    \ = 0\n        var currentBracketsCount32 = 0\n        var currentBracketsCount33\
    \ = 0\n        var currentBracketsCount34 = 0\n        var currentBracketsCount35\
    \ = 0\n        var currentBracketsCount36 = 0\n        var currentBracketsCount37\
    \ = 0\n        var currentBracketsCount38 = 0\n        var currentBracketsCount39\
    \ = 0\n        var currentBracketsCount40 = 0\n        var currentBracketsCount41\
    \ = 0\n        var currentBracketsCount42 = 0\n        var currentBracketsCount43\
    \ = 0\n        var currentBracketsCount44 = 0\n        var currentBracketsCount45\
    \ = 0\n        var currentBracketsCount46 = 0\n        var currentBracketsCount47\
    \ = 0\n        var currentBracketsCount48 = 0\n        var currentBracketsCount49\
    \ = 0\n        var currentBracketsCount50 = 0\n        var currentBracketsCount51\
    \ = 0\n        var currentBracketsCount52 = 0\n        var currentBrackets"]
stop_tokens:
- "\n    }\n"

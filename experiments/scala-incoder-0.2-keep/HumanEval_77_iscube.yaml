name: HumanEval_77_iscube
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that takes an integer a and returns True \n    // if this\
  \ ingeger is a cube of some integer number.\n    // Note: you may assume the input\
  \ is always valid.\n    // Examples:\n    // iscube(1) ==> True\n    // iscube(2)\
  \ ==> False\n    // iscube(-1) ==> True\n    // iscube(64) ==> True\n    // iscube(0)\
  \ ==> True\n    // iscube(180) ==> False\n    def iscube(a : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(iscube((1l)) == (true));\n\
  \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n  \
  \  assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n  \
  \  assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n   \
  \ assert(iscube((1729l)) == (false));\n    }\n\n}\n"
completions: ["        val cube = a.toInt\n        cube == (a * a * a)", "       \
    \ val cube = a.toInt\n        cube == (a * a * a)", "        val cube = a.toString.toInt\n\
    \        cube == (a * a * a)", "        val cube = a.toInt\n        val cubes\
    \ = mutable.Set[Int]()\n        cubes += cube\n        cubes += cube * cube\n\
    \        cubes += cube * cube * cube\n        cubes.contains(cube)", "       \
    \ val cube = a.toString.toInt\n        cube*cube == a", "        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a", "        val cube = a.toString.toInt\n        cube == (a * a * a)",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", '        val
    cubes = mutable.ListBuffer(1L, 3L, 5L, 7L, 9L, 11L, 13L, 15L, 17L, 19L, 21L, 23L,
    25L, 27L, 29L, 31L, 33L, 35L, 37L, 39L, 41L, 43L, 45L, 47L, 49L, 51L, 53L, 55L,
    57L, 59L, 61L, 63L, 65L, 67L, 69L, 71L, 73L, 75L, 77L, 79L, 81L, 83L, 85L, 87L,
    89L, 91L, 93L, 95L, 97L, 99L, 101L, 103L, 105L, 107L, 109L, 111L, 113L, 115L,
    117L, 119L, 121L, 123L, 125L, 127L, 129L, 131L, 133L, 135L, 137L, 139L, 141L,
    143L, 145L, 147L, 149L, 151L, 153L, 155L, 157L, 159L, 161L, 163L, 165L, 167L,
    169L, 171L, 173L, 175L, 177L, 179L, 181L, 183L, 185L, 187L, 189L, 191L, 193L,
    195L, 197L, 199L, 201L, 203L, 205L, 207L, 209L, 211L, 213L, 215L, 217L, 219L,
    221L, 223L, 225L, 227L, 229L, 231L, 233L, 235L, 237L, 239L, 241L, 243L, 245L,
    247L, 249L, 251L, 253L, 255L, 257L, 259L, 261L, 263L, 265L, 267L, 269L, 271L,
    273L, 275L, 277L, 279L, 281L, 283L, 285L, 287L, 289L, 291L, 293L, 295L, 297L,
    299L, 301L, 303L, 305L, 307L, 309L, 311L, 313L, 315L, 317L, 319L, 321L, 323L,
    325L, 327L, 329L, 331L, 333L, 335L, 337L, 339L, 341L, 343L, 345L, 347L, 349L,
    351L, 353L, 355L, 357L, 359L, 361L, 363L, 365L, 367L, 369L, 371L, 373L, 375L,
    377L, 379L, 381L, 383L, 385L, 387L, 389L, 391L, 393L, 395L, 397L, 399L, 401L,
    403L, 405L, 407L, 409L, 411L, 413L, 415L, 417L, 419L, 421L, 423L, 425L, 427L,
    429L, 431L, 433L, 435L, 437L, 439L, ', "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += a\n        while(cubes.nonEmpty)\
    \ {\n            val cube = cubes.head\n            cubes -= cube\n          \
    \  if(cubes.nonEmpty) {\n                cubes += cube\n            }\n      \
    \  }\n        cubes.nonEmpty", "        val cube = a.toString.toInt\n        cube\
    \ == cube * cube * cube", "        val cube = a % 3\n        if (cube == 0) true\n\
    \        else false", "        val cube = a.toString.toInt\n        cube == (a\
    \ * a * a)", "        val cubes = mutable.Set[Long]()\n        for (x <- 1 to\
    \ a) {\n            cubes += x*x*x\n        }\n        cubes.contains(a)", " \
    \       val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n  \
    \      val cubesCount = cubes.length\n        val cubesSum = cubes.sum\n     \
    \   val cubesSumSquare = cubesSum * cubesSum\n        val cubesSumCube = cubesSum\
    \ * cubes\n        val cubesSumCubeSquare = cubesSumCube * cubesSum\n        val\
    \ cubesSumCubeCube = cubesSumCube * cubes\n        val cubesSumCubeCubeSquare\
    \ = cubesSumCubeSquare * cubesSum\n        val cubesSumCubeCubeCube = cubesSumCubeCube\
    \ * cubes\n        val cubesSumCubeCubeCubeSquare = cubesSumCubeCubeSquare * cubesSum\n\
    \        val cubesSumCubeCubeCubeCube = cubesSumCubeCubeCube * cubes\n       \
    \ val cubesSumCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeSquare * cubesSum\n\
    \        val cubesSumCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCube * cubes\n\
    \        val cubesSumCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeSquare * cubesSum\n\
    \        val cubesSumCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCube * cubes\n\
    \        val cubesSumCubeCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCubeCube\
    \ * cubes\n        val cubesSumCubeCubeCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCubeCube\
    \ * cubes\n        val cubesSumCubeCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCubeCube\
    \ * cubes\n        val cubesSumCubeCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCubeCube\
    \ * cubes\n        val cubesSumCubeCubeCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCubeCubeCube = ", "        val cube\
    \ = a.toString.toInt\n        cube == (a * a * a)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        val cubesCount = cubes.count(_\
    \ == cube)\n        cubesCount > 0", "        val cube = a.toString.toInt\n  \
    \      val cubes = mutable.ListBuffer[Long]()\n        cubes += a\n        cubes\
    \ += a * a\n        cubes += a * a * a\n        cubes += a * a * a * a\n     \
    \   cubes += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n \
    \       cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cube", "        val cube = a.toString.toInt\n        cube == cube\
    \ * cube * cube", "        val cubes = mutable.Set[Long]()\n        cubes += 1\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a", "        val\
    \ cube = a.toInt\n        cube == cube * cube * cube", "        val cube = a.toInt\n\
    \        val cubes = mutable.Set[Int]()\n        cubes.add(cube)\n        cubes.add(cube\
    \ * cube)\n        cubes.add(cube * cube * cube)\n        cubes.add(cube * cube\
    \ * cube * cube)\n        cubes.add(cube * cube * cube * cube * cube)\n      \
    \  cubes.add(cube * cube * cube * cube * cube * cube)\n        cubes.add(cube\
    \ * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube * cube *\
    \ cube * cube * cube * cube * cube * cube)\n        cubes.add(cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube)\n\
    \        cubes.add(cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube)\n        cubes.add(cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube)\n\
    \        cubes.add(cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube)\n        cubes.add(cube *\
    \ cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube)\n        cubes.add(cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube)\n        cubes.add(cube * cube * cube *\
    \ cube * cube * cube * cube * cube * cube * ", "        val cube = a.toString.toInt\n\
    \        cube == (a * a * a)", "        val cube = a % 3\n        cube == 0 ||\
    \ cube == 2", "        val cube = a.toInt\n        cube == (a * a * a)", "   \
    \     val cube = a.toString.toInt\n        cube == cube * cube * cube", "    \
    \    val cube = a.toInt\n        val cubes = mutable.ListBuffer(cube)\n      \
    \  while (cubes.nonEmpty) {\n            val cube = cubes.head\n            cubes\
    \ -= cube\n            if (cubes.nonEmpty) {\n                cubes += cube\n\
    \            }\n        }\n        cubes.nonEmpty", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        cubes += cube\n      \
    \  cubes.contains(cube)", "        val cubes = mutable.Set[Long]()\n        cubes\
    \ += 1\n        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n\
    \        cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a", " \
    \       val cubes = mutable.Set[Long]()\n        cubes += 1\n        cubes +=\
    \ 2\n        cubes += 3\n        cubes += 4\n        cubes += 5\n        cubes\
    \ += 6\n        cubes += 7\n        cubes += 8\n        cubes += 9\n        cubes\
    \ += 10\n        cubes += 11\n        cubes += 12\n        cubes += 13\n     \
    \   cubes += 14\n        cubes += 15\n        cubes += 16\n        cubes += 17\n\
    \        cubes += 18\n        cubes += 19\n        cubes += 20\n        cubes\
    \ += 21\n        cubes += 22\n        cubes += 23\n        cubes += 24\n     \
    \   cubes += 25\n        cubes += 26\n        cubes += 27\n        cubes += 28\n\
    \        cubes += 29\n        cubes += 30\n        cubes += 31\n        cubes\
    \ += 32\n        cubes += 33\n        cubes += 34\n        cubes += 35\n     \
    \   cubes += 36\n        cubes += 37\n        cubes += 38\n        cubes += 39\n\
    \        cubes += 40\n        cubes += 41\n        cubes += 42\n        cubes\
    \ += 43\n        cubes += 44\n        cubes += 45\n        cubes += 46\n     \
    \   cubes += 47\n        cubes += 48\n        cubes += 49\n        cubes += 50\n\
    \        cubes += 51\n        cubes += 52\n        cubes += 53\n        cubes\
    \ += 54\n        cubes += 55\n        cubes += 56\n        cubes += 57\n     \
    \   cubes += 58\n        cubes += 59\n        cubes += 60\n        cubes += 61\n\
    \        cubes += 62\n        cubes += 63\n        cubes += 64\n        cubes\
    \ += 65\n        cubes += 66\n        cubes += 67\n        cubes += 68\n     \
    \   cubes += 69\n        cubes += 70\n        cubes += 71\n        cubes += 72\n\
    \        cubes += 73\n        cubes += 74\n        cubes += 75\n        cubes\
    \ += 76\n        cubes += 77\n        cubes += 78\n        cubes += 79\n     \
    \   cubes += 80\n        cubes += 81\n        cubes += 82\n        cubes += 83\n\
    \        cubes += 84\n        cubes += 85\n        cubes += 86\n        cubes\
    \ += 87\n        cubes += 88\n        cubes += 89\n        cubes += 90\n     \
    \   cubes += 91\n        cubes += 92\n        cubes += 93\n        cubes += 94\n\
    \        cubes += 95\n        cubes += 96\n        cubes += 97\n        cubes\
    \ += 98\n        cubes += 99\n        cubes += 100\n", "        val cube = a.toInt\n\
    \        cube == (a * a * a)", "        val cube = a.toInt\n        val cubes\
    \ = mutable.ListBuffer[Long]()\n        cubes += a\n        cubes += a * a\n \
    \       cubes += a * a * a\n        cubes += a * a * a * a\n        cubes += a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n \
    \       cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a", "        val cubes = mutable.Set[Long]()\n        cubes +=\
    \ a\n        cubes += a * a\n        cubes += a * a * a\n        cubes += a *\
    \ a * a * a\n        cubes += a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a", "        val cube\
    \ = a % 3\n        if (cube == 0) true\n        else false", "        val cube\
    \ = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n        val cubesSet\
    \ = mutable.Set[Long]()\n        cubesSet += cube\n        cubesSet += cube*cube\n\
    \        cubesSet += cube*cube*cube\n        cubesSet += cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += ", "        val cubes = mutable.Set[Long]()\n        cubes\
    \ += 1\n        cubes += 3\n        cubes += 5\n        cubes += 7\n        cubes\
    \ += 9\n        cubes += 11\n        cubes += 13\n        cubes += 17\n      \
    \  cubes += 19\n        cubes += 23\n        cubes += 29\n        cubes += 31\n\
    \        cubes += 37\n        cubes += 41\n        cubes += 43\n        cubes\
    \ += 47\n        cubes += 53\n        cubes += 59\n        cubes += 61\n     \
    \   cubes += 67\n        cubes += 71\n        cubes += 73\n        cubes += 79\n\
    \        cubes += 83\n        cubes += 89\n        cubes += 97\n        cubes\
    \ += 101\n        cubes += 107\n        cubes += 113\n        cubes += 119\n \
    \       cubes += 125\n        cubes += 131\n        cubes += 137\n        cubes\
    \ += 143 \n        cubes += 149\n        cubes += 155 \n        cubes += 161\n\
    \        cubes += 167\n        cubes += 173\n        cubes += 179\n        cubes\
    \ += 185\n        cubes += 191\n        cubes += 197\n        cubes += 203\n \
    \       cubes += 209\n        cubes += 215\n        cubes += 221\n        cubes\
    \ += 227\n        cubes += 233\n        cubes += 239\n        cubes += 245\n \
    \       cubes += 251\n        cubes += 257\n        cubes += 263\n        cubes\
    \ += 269\n        cubes += 275\n        cubes += 281\n        cubes += 287\n \
    \       cubes += 293\n        cubes += 299\n        cubes += 305\n        cubes\
    \ += 311\n        cubes += 317\n        cubes += 323\n        cubes += 329\n \
    \       cubes += 335\n        cubes += 341\n        cubes += 347\n        cubes\
    \ += 353\n        cubes += 359\n        cubes += 365\n        cubes += 371\n \
    \       cubes += 377\n        cubes += 383\n        cubes += 389\n        cubes\
    \ += 395\n        cubes += 401\n        cubes += 407\n        cubes += 413\n \
    \       cubes += 419\n        cubes += 425\n        cubes += 431\n        cubes\
    \ += 437\n        cubes += 443\n        cubes += 449\n        cubes += 455\n \
    \       cubes += 461\n        cubes += 467\n        cubes += 473\n        cubes\
    \ += 479\n        cubes += 485\n        cubes += 491\n        cubes += 49", " \
    \       val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        ", "        val cube\
    \ = a % 3\n        cube == 0 || cube == 1 || cube == 2", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong *\
    \ a.toString.toLong * a.toString.toLong", "        val cube = a.toInt\n      \
    \  val cubes = mutable.Set[Int]()\n        cubes += cube\n        cubes += cube\
    \ * cube\n        cubes += cube * cube * cube\n        cubes.contains(cube)",
  "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n   \
    \     val cubesSet = mutable.Set[Long]()\n        cubesSet += cube\n        cubesSet\
    \ += cube*cube\n        cubesSet += cube*cube*cube\n        cubesSet += cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube", "        val cube = a.toString.toInt\n \
    \       cube == (a * a * a)", "        val cube = a.toInt\n        val cubes =\
    \ mutable.Set[Long]()\n        cubes += cube\n        cubes += cube * cube\n \
    \       cubes += cube * cube * cube\n        cubes.contains(a) ", "        val\
    \ cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n        cube\
    \ == a.toString.toLong * a.toString.toLong * a.toString.toLong", "        val\
    \ cube = a % 3\n        cube == 0 || cube == 1 || cube == 2", "        val cube\
    \ = a.toString.toLong * a.toString.toLong * a.toString.toLong\n        cube ==\
    \ a.toString.toLong", "        val cube = a.toInt\n        cube == (a * a * a)",
  "        val cube = a % 9 == 0\n        val cube2 = a % 9 == 0\n        val cube3\
    \ = a % 9 == 0\n        val cube4 = a % 9 == 0\n        val cube5 = a % 9 == 0\n\
    \        val cube6 = a % 9 == 0\n        val cube7 = a % 9 == 0\n        val cube8\
    \ = a % 9 == 0\n        val cube9 = a % 9 == 0\n        val cube10 = a % 9 ==\
    \ 0\n        val cube11 = a % 9 == 0\n        val cube12 = a % 9 == 0\n      \
    \  val cube13 = a % 9 == 0\n        val cube14 = a % 9 == 0\n        val cube15\
    \ = a % 9 == 0\n        val cube16 = a % 9 == 0\n        val cube17 = a % 9 ==\
    \ 0\n        val cube18 = a % 9 == 0\n        val cube19 = a % 9 == 0\n      \
    \  val cube20 = a % 9 == 0\n        val cube21 = a % 9 == 0\n        val cube22\
    \ = a % 9 == 0\n        val cube23 = a % 9 == 0\n        val cube24 = a % 9 ==\
    \ 0\n        val cube25 = a % 9 == 0\n        val cube26 = a % 9 == 0\n      \
    \  val cube27 = a % 9 == 0\n        val cube28 = a % 9 == 0\n        val cube29\
    \ = a % 9 == 0\n        val cube30 = a % 9 == 0\n        val cube31 = a % 9 ==\
    \ 0\n        val cube32 = a % 9 == 0\n        val cube33 = a % 9 == 0\n      \
    \  val cube34 = a % 9 == 0\n        val cube35 = a % 9 == 0\n        val cube36\
    \ = a % 9 == 0\n        val cube37 = a % 9 == 0\n        val cube38 = a % 9 ==\
    \ 0\n        val cube39 = a % 9 == 0\n        val cube40 = a % 9 == 0\n      \
    \  val cube41 = a % 9 == 0\n        val cube42 = a % 9 == 0\n        val cube43\
    \ = a % 9 == 0\n        val cube44 = a % 9 == 0\n        val cube45 = a % 9 ==\
    \ 0\n        val cube46 = a % 9 == 0\n        val cube47 = a % 9 == 0\n      \
    \  val cube48 = a % 9 == 0\n        val cube49 = a % 9 == 0\n        val cube50\
    \ = a % 9 == 0\n        val cube51 = a % 9 == 0\n        val cube52 = a % 9 ==\
    \ 0\n        val cube5", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.ArrayBuffer.empty[Long]\n        cubes += cube\n        cubes += cube\
    \ * cube\n        cubes += cube * cube * cube\n        cubes.contains(a)", " \
    \       val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes += cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube * cube\n      \
    \  cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * ", "        val cubes = mutable.Set[Long]()\n        cubes.add(1)\n\
    \        cubes.add(3)\n        cubes.add(5)\n        cubes.add(7)\n        cubes.add(9)\n\
    \        cubes.add(11)\n        cubes.add(13)\n        cubes.add(15)\n       \
    \ cubes.add(17)\n        cubes.add(19)\n        cubes.add(21)\n        cubes.add(23)\n\
    \        cubes.add(25)\n        cubes.add(27)\n        cubes.add(29)\n       \
    \ cubes.add(31)\n        cubes.add(33)\n        cubes.add(35)\n        cubes.add(37)\n\
    \        cubes.add(39)\n        cubes.add(41)\n        cubes.add(43)\n       \
    \ cubes.add(45)\n        cubes.add(47)\n        cubes.add(49)\n        cubes.add(51)\n\
    \        cubes.add(53)\n        cubes.add(55)\n        cubes.add(57)\n       \
    \ cubes.add(59)\n        cubes.add(61)\n        cubes.add(63)\n        cubes.add(65)\n\
    \        cubes.add(67)\n        cubes.add(69)\n        cubes.add(71)\n       \
    \ cubes.add(73)\n        cubes.add(75)\n        cubes.add(77)\n        cubes.add(79)\n\
    \        cubes.add(81)\n        cubes.add(83)\n        cubes.add(85)\n       \
    \ cubes.add(87)\n        cubes.add(89)\n        cubes.add(91)\n        cubes.add(93)\n\
    \        cubes.add(95)\n        cubes.add(97)\n        cubes.add(99)\n       \
    \ cubes.add(101)\n        cubes.add(103)\n        cubes.add(105)\n        cubes.add(107)\n\
    \        cubes.add(109)\n        cubes.add(111)\n        cubes.add(113)\n    \
    \    cubes.add(115)\n        cubes.add(117)\n        cubes.add(119)\n        cubes.add(121)\n\
    \        cubes.add(123)\n        cubes.add(125)\n        cubes.add(127)\n    \
    \    cubes.add(129)\n        cubes.add(131)\n        cubes.add(133)\n        cubes.add(135)\n\
    \        cubes.add(137)\n        cubes.add(139)\n        cubes.add(141)\n    \
    \    cubes.add(143)\n        cubes.add(145)\n        cubes.add(147)\n        cubes.add(149)\n\
    \        cubes.add(151)\n        cubes.add(153)\n        cubes.add(155)\n    \
    \    cubes.add(157)\n        cubes.add(159)\n        cubes.add(161)\n        cubes.add(163)\n\
    \        cubes.add(165)\n        cubes.add(167)\n        cubes.add(169)\n    \
    \    cubes.add(17", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesCount = cubes.length\n        val cubesSum = cubes.sum\n   \
    \     val cubesSumSquare = cubesSum * cubesSum\n        val cubesSumCube = cubesSum\
    \ * cube\n        val cubesSumCubeSquare = cubesSumCube * cubesSumCube\n     \
    \   val cubesSumCubeCube = cubesSumCube * cube\n        val cubesSumCubeCubeSquare\
    \ = cubesSumCubeCube * cubesSumCube\n        val cubesSumCubeCubeCube = cubesSumCubeCube\
    \ * cubesSumCube\n        val cubesSumCubeCubeCubeSquare = cubesSumCubeCubeCube\
    \ * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCube = cubesSumCubeCubeCube\
    \ * cubesSumCubeCube\n        val cubesSumCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCube\
    \ * cubesSumCubeCubeCube\n        val cubesSumCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCube\
    \ * cubesSumCubeCubeCube\n        val cubesSumCubeCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCubeCube\
    \ * cubesSumCubeCubeCubeCube\n        val cubesSumCubeCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCubeCube\
    \ * cubesSumCubeCubeCubeCube\n        val cubesSumCubeCubeCubeCubeCubeSquare =\
    \ cubesSumCubeCubeCubeCubeCube * cubesSumCubeCubeCubeCube\n        val cubesSumCubeCubeCubeCubeCubeCube\
    \ = cubesSumCubeCubeCubeCubeCube * cubesSumCubeCubeCubeCube\n        val cubesSumCubeCubeCubeCubeCubeCubeSquare\
    \ = cubesSumCubeCubeCubeCubeCube * cubesSumCubeCubeCubeCube\n        val cubesSumCubeCubeCubeCubeCubeCubeCube\
    \ = cubesSumCubeCubeCubeCubeCube * cubesSumCubeCubeCubeCube\n        val cubesSumCubeCubeCubeCubeCubeCubeSquare\
    \ = cubesSumCubeCubeCubeCubeCube * cubesSumCubeCubeCubeCube\n        val cubesSumCubeCubeCubeCubeCubeCubeCube\
    \ = cubesSumCubeCubeCubeCubeCube * cubesSumCubeCubeCubeCubeCube\n        val cubesSumCubeCubeCubeCubeCubeCubeSquare\
    \ = cubesSumCubeCubeCubeCubeCube * ", "        val cube = a.toInt\n        val\
    \ cubes = cube.toLong * cube.toLong * cube.toLong\n        cubes % 1 == 0", " \
    \       val cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        cubes += cube\n        cubes.contains(cube)", "        val cube = a %\
    \ 3\n        if (cube == 0 || cube == 2) return true\n        else return false",
  "        val cube = a.toInt\n        val cubes = cube.toLong * cube.toLong * cube.toLong\n\
    \        cubes % 1 == 0", "        val cube = a.toString.toInt\n        cube ==\
    \ (a * a * a)", "        val cube = a.toString.toInt\n        cube*cube == a",
  "        val cube = a % 3\n        if (cube == 0) true\n        else false", " \
    \       val cube = a.toString.toInt\n        val cubes = mutable.Set[Long]()\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cube", "        val\
    \ cube = a.toInt\n        val cubes = mutable.ArrayBuffer.empty[Int]\n       \
    \ cubes += cube\n        cubes += cube * cube\n        cubes += cube * cube *\
    \ cube\n        cubes.contains(cube)", "        val cubes = mutable.Set[Long]()\n\
    \        cubes.add(a)\n        cubes.add(3*a)\n        cubes.add(5*a)\n      \
    \  cubes.add(7*a)\n        cubes.add(9*a)\n        cubes.add(11*a)\n        cubes.add(13*a)\n\
    \        cubes.add(15*a)\n        cubes.add(17*a)\n        cubes.add(19*a)\n \
    \       cubes.add(21*a)\n        cubes.add(23*a)\n        cubes.add(25*a)\n  \
    \      cubes.add(27*a)\n        cubes.add(29*a)\n        cubes.add(31*a)\n   \
    \     cubes.add(33*a)\n        cubes.add(35*a)\n        cubes.add(37*a)\n    \
    \    cubes.add(39*a)\n        cubes.add(41*a)\n        cubes.add(43*a)\n     \
    \   cubes.add(45*a)\n        cubes.add(47*a)\n        cubes.add(49*a)\n      \
    \  cubes.add(51*a)\n        cubes.add(53*a)\n        cubes.add(55*a)\n       \
    \ cubes.add(57*a)\n        cubes.add(59*a)\n        cubes.add(61*a)\n        cubes.add(63*a)\n\
    \        cubes.add(65*a)\n        cubes.add(67*a)\n        cubes.add(69*a)\n \
    \       cubes.add(71*a)\n        cubes.add(73*a)\n        cubes.add(75*a)\n  \
    \      cubes.add(77*a)\n        cubes.add(79*a)\n        cubes.add(81*a)\n   \
    \     cubes.add(83*a)\n        cubes.add(85*a)\n        cubes.add(87*a)\n    \
    \    cubes.add(89*a)\n        cubes.add(91*a)\n        cubes.add(93*a)\n     \
    \   cubes.add(95*a)\n        cubes.add(97*a)\n        cubes.add(99*a)\n      \
    \  cubes.add(101*a)\n        cubes.add(103*a)\n        cubes.add(105*a)\n    \
    \    cubes.add(107*a)\n        cubes.add(109*a)\n        cubes.add(111*a)\n  \
    \      cubes.add(113*a)\n        cubes.add(115*a)\n        cubes.add(117*a)\n\
    \        cubes.add(119*a)\n        cubes.add(121*a)\n        cubes.add(123*a)\n\
    \        cubes.add(125*a)\n        cubes.add(127*a)\n        cubes.add(129*a)\n\
    \        cubes.add(131*a)\n        cubes.add(133*a)\n        cubes.add(135*a)\n\
    \        cubes.add(137*a)\n        cubes.add(139*a)\n        cubes.add(141*a)\n\
    \        cubes.add(143*a)\n", "        val cube = a % 3\n        if (cube == 0)\
    \ true\n        else false", "        val cube = a.toString.toInt\n        cube\
    \ == cube * cube * cube", "        val cube = a.toString.toLong * a.toString.toLong\
    \ * a.toString.toLong\n        cube == a.toString.toLong * a.toString.toLong *\
    \ a.toString.toLong", "        val cube = a.toInt\n        cube == (a * a * a)",
  "        val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong * a.toString.toLong * a.toString.toLong", " \
    \       val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong * a.toString.toLong * a.toString.toLong", " \
    \       val cube = a.toInt\n        val cubes = cube.pow(3).toInt\n        cubes\
    \ % a == 0", "        val cube = a.toInt\n        val cubes = cube.toLong * cube.toLong\
    \ * cube.toLong\n        cubes.toLong == a", "        val cube = a.toInt\n   \
    \     val cubes = mutable.Set[Long]()\n        cubes += a\n        cubes += a\
    \ * a\n        cubes += a * a * a\n        cubes += a * a * a * a\n        cubes\
    \ += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a", "        val cube = a % 3\n        if (cube == 0) true\n   \
    \     else false", "        val cube = a.toString.toInt\n        cube*cube ==\
    \ a", "        val cube = a.toString.toLong\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n     \
    \   cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes +=\
    \ cube * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * ", "        val cube\
    \ = a.toInt\n        val cubes = mutable.Set[Long]()\n        cubes += cube\n\
    \        cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(a)",
  "        val cube = a % 3\n        if (cube == 0) true\n        else false", " \
    \       val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong * a.toString.toLong * a.toString.toLong", " \
    \       val cube = a.toInt\n        cube == cube * cube * cube", "        val\
    \ cube = a.toInt\n        val cubes = mutable.Set[Long]()\n        cubes += a\n\
    \        cubes += a * a\n        cubes += a * a * a\n        cubes += a * a *\
    \ a * a\n        cubes += a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n \
    \       cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a", "        val cube = a.toInt\n  \
    \      cube == cube * cube * cube", "        val cube = a.toInt\n        val cubes\
    \ = mutable.Set[Long]()\n        cubes += cube\n        cubes += cube * cube\n\
    \        cubes += cube * cube * cube\n        cubes.contains(a)", "        val\
    \ cube = a.toString.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n   \
    \     val cubesCount = cubes.count(_ == cube)\n        cubesCount > 0", "    \
    \    val cube = a.toInt\n        cube == cube * cube * cube", "        val cubes\
    \ = mutable.Set[Long]()\n        cubes.add(a)\n        cubes.add(a * a)\n    \
    \    cubes.add(a * a * a)\n        cubes.add(a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a)\n        cubes.add(a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a)\n\
    \        cubes.add(a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a\
    \ * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a *\
    \ a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n     \
    \   cubes.add(a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a *\
    \ a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a\
    \ * a * a)\n        cubes.add(a * a * a * a * a * a)\n        cubes.add(a * a\
    \ * a * a)\n        cubes.add(a * a)\n        cubes.add(a)", "        val cubes\
    \ = mutable.Set[Long]()\n        cubes += 1\n        cubes += a\n        cubes\
    \ += a*a\n        cubes += a*a*a\n        cubes += a*a*a*a\n        cubes += a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a\n        cubes +=\
    \ a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*", "        val cube =\
    \ a.toString.toInt\n        cube == cube * cube * cube", "        val cube = a\
    \ % 3\n        cube == 0 || cube == 2 || cube == 3", "        val cube = a % 3\n\
    \        if (cube == 0 || cube == 2) return true\n        else return false",
  "        val cube = a / 3\n        val square = a / 3\n        val cubes = cube.toInt\n\
    \        val squares = square.toInt\n        val cubes3 = cubes * 3\n        val\
    \ squares3 = squares * 3\n        val cubes5 = cubes * 5\n        val squares5\
    \ = squares * 5\n        val cubes7 = cubes * 7\n        val squares7 = squares\
    \ * 7\n        val cubes9 = cubes * 9\n        val squares9 = squares * 9\n  \
    \      val cubes11 = cubes * 11\n        val squares11 = squares * 11\n      \
    \  val cubes13 = cubes * 13\n        val squares13 = squares * 13\n        val\
    \ cubes15 = cubes * 15\n        val squares15 = squares * 15\n        val cubes17\
    \ = cubes * 17\n        val squares17 = squares * 17\n        val cubes19 = cubes\
    \ * 19\n        val squares19 = squares * 19\n        val cubes23 = cubes * 23\n\
    \        val squares23 = squares * 23\n        val cubes25 = cubes * 25\n    \
    \    val squares25 = squares * 25\n        val cubes27 = cubes * 27\n        val\
    \ squares27 = squares * 27\n        val cubes29 = cubes * 29\n        val squares29\
    \ = squares * 29\n        val cubes31 = cubes * 31\n        val squares31 = squares\
    \ * 31\n        val cubes33 = cubes * 33\n        val squares33 = squares * 33\n\
    \        val cubes35 = cubes * 35\n        val squares35 = squares * 35\n    \
    \    val cubes37 = cubes * 37\n        val squares37 = squares * 37\n        val\
    \ cubes39 = cubes * 39\n        val squares39 = squares * 39\n        val cubes41\
    \ = cubes * 41\n        val squares41 = squares * 41\n        val cubes43 = cubes\
    \ * 43\n        val squares43 = squares * 43\n        val cubes45 = cubes * 45\n\
    \        val squares45 = squares * 45\n        val cubes47 = cubes * 47\n    \
    \    val squares47 = squares * 47\n        val cubes49 = cubes * 49\n        val\
    \ squares49 = squares * 49\n        val cubes51 = cubes * 51\n        val squares51\
    \ = squares * 51\n        val cubes53 = cubes * 53", "        val cube = a.toInt\n\
    \        val cubes = mutable.ListBuffer[Int]()\n        cubes += cube\n      \
    \  cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(cube)",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toString.toInt\n        cube == cube * cube * cube", "    \
    \    val cube = a.toInt\n        val cubes = mutable.ArrayBuffer.empty[Int]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(cube)", "        val cube = a.toString.toInt\n\
    \        cube == (a * a * a)", "        val cube = a.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        val cubesSet = mutable.HashSet(cubes)\n\
    \        cubesSet.contains(cube)", "        val cube = a.toString.toInt\n    \
    \    cube == cube * cube * cube", "        val cubes = mutable.Set[Long]()\n \
    \       cubes.add(a)\n        cubes.add(3*a)\n        cubes.add(5*a)\n       \
    \ cubes.add(7*a)\n        cubes.add(9*a)\n        cubes.add(11*a)\n        cubes.add(13*a)\n\
    \        cubes.add(15*a)\n        cubes.add(17*a)\n        cubes.add(19*a)\n \
    \       cubes.add(21*a)\n        cubes.add(23*a)\n        cubes.add(25*a)\n  \
    \      cubes.add(27*a)\n        cubes.add(29*a)\n        cubes.add(31*a)\n   \
    \     cubes.add(33*a)\n        cubes.add(35*a)\n        cubes.add(37*a)\n    \
    \    cubes.add(39*a)\n        cubes.add(41)\n        cubes.add(43)\n        cubes.add(45)\n\
    \        cubes.add(47)\n        cubes.add(49)\n        cubes.add(51)\n       \
    \ cubes.add(53)\n        cubes.add(55)\n        cubes.add(57)\n        cubes.add(59)\n\
    \        cubes.add(61)\n        cubes.add(63)\n        cubes.add(65)\n       \
    \ cubes.add(67)\n        cubes.add(69)\n        cubes.add(71)\n        cubes.add(73)\n\
    \        cubes.add(75)\n        cubes.add(77)\n        cubes.add(79)\n       \
    \ cubes.add(81)\n        cubes.add(83)\n        cubes.add(85)\n        cubes.add(87)\n\
    \        cubes.add(89)\n        cubes.add(91)\n        cubes.add(93)\n       \
    \ cubes.add(95)\n        cubes.add(97)\n        cubes.add(99)\n        cubes.add(101)\n\
    \        cubes.add(103)\n        cubes.add(105)\n        cubes.add(107)\n    \
    \    cubes.add(109)\n        cubes.add(111)\n        cubes.add(113)\n        cubes.add(115)\n\
    \        cubes.add(117)\n        cubes.add(119)\n        cubes.add(121)\n    \
    \    cubes.add(123)\n        cubes.add(125)\n        cubes.add(127)\n        cubes.add(129)\n\
    \        cubes.add(131)\n        cubes.add(133)\n        cubes.add(135)\n    \
    \    cubes.add(137)\n        cubes.add(139)\n        cubes.add(141)\n        cubes.add(143)\n\
    \        cubes.add(145)\n        cubes.add(147)\n        cubes.add(149)\n    \
    \    cubes.add(151)\n        cubes.add(153)\n        cubes.add(155)\n        cubes.add(157)\n\
    \        cubes.add(159)\n        cubes.add(161)\n", "        val cube = a.toString.toInt\n\
    \        cube == (a * a * a)", "        val cube = a.toString.toInt\n        val\
    \ cubes = cube.toString.toInt\n        cubes % a == 0", "        val cube = a.toString.toInt\n\
    \        cube == (a * a * a)", "        val cube = a.toString.toInt\n        val\
    \ cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n        cubes +=\
    \ cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(cube)",
  "        val cube = a.toString.toInt\n        cube*cube == a", "        val cube\
    \ = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n        cubes +=\
    \ a\n        cubes += a * a\n        cubes += a * a * a\n        cubes += a *\
    \ a * a * a\n        cubes += a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n \
    \       cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a", "        val cube = a.toInt\n      \
    \  val cubes = cube.toLong\n        val cubesRemainder = cubes % 3\n        val\
    \ cubesRemainder2 = cubesRemainder.toInt\n        val cubesRemainder3 = cubesRemainder2.toLong\n\
    \        val cubesRemainder4 = cubesRemainder3.toInt\n        val cubesRemainder5\
    \ = cubesRemainder4.toLong\n        val cubesRemainder6 = cubesRemainder5.toInt\n\
    \        val cubesRemainder7 = cubesRemainder6.toLong\n        val cubesRemainder8\
    \ = cubesRemainder7.toInt\n        val cubesRemainder9 = cubesRemainder8.toLong\n\
    \        val cubesRemainder10 = cubesRemainder9.toInt\n        val cubesRemainder11\
    \ = cubesRemainder10.toLong\n        val cubesRemainder12 = cubesRemainder11.toInt\n\
    \        val cubesRemainder13 = cubesRemainder12.toLong\n        val cubesRemainder14\
    \ = cubesRemainder13.toInt\n        val cubesRemainder15 = cubesRemainder14.toLong\n\
    \        val cubesRemainder16 = cubesRemainder15.toInt\n        val cubesRemainder17\
    \ = cubesRemainder16.toLong\n        val cubesRemainder18 = cubesRemainder17.toInt\n\
    \        val cubesRemainder19 = cubesRemainder18.toLong\n        val cubesRemainder20\
    \ = cubesRemainder19.toInt\n        val cubesRemainder21 = cubesRemainder20.toLong\n\
    \        val cubesRemainder22 = cubesRemainder21.toInt\n        val cubesRemainder23\
    \ = cubesRemainder22.toLong\n        val cubesRemainder24 = cubesRemainder23.toInt\n\
    \        val cubesRemainder25 = cubesRemainder24.toLong\n        val cubesRemainder26\
    \ = cubesRemainder25.toInt\n        val cubesRemainder27 = cubesRemainder26.toLong\n\
    \        val cubesRemainder28 = cubesRemainder27.toInt\n        val cubesRemainder29\
    \ = cubesRemainder28.toLong\n        val cubesRemainder30 = cubesRemainder29.toInt\n\
    \        val cubesRemainder31 = cubesRemainder30.toLong\n        val cubesRemainder32\
    \ = cubesRemainder31.toInt\n        ", "        val cube = a.toInt\n        val\
    \ cubes = mutable.ArrayBuffer(cube)\n        cubes += cube\n        cubes.toList.forall(cubes.contains)",
  "        val cube = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n  \
    \      cubes += a\n        cubes += a * a\n        cubes += a * a * a\n      \
    \  cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong *\
    \ a.toString.toLong * a.toString.toLong", "        val cube = a.toString.toInt\n\
    \        cube == (a * a * a)", "        val cube = a.toString.toLong * a.toString.toLong\
    \ * a.toString.toLong\n        cube == a.toString.toLong * a.toString.toLong *\
    \ a.toString.toLong", "        val cube = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += a\n        while(cubes.nonEmpty) {\n            val cube = cubes.head\n\
    \            cubes -= cube\n            if(cube == cube*cube*cube) {\n       \
    \         return true\n            }\n        }\n        return false", "    \
    \    val cubes = mutable.Set[Long]()\n        for (x <- 1 to a) {\n          \
    \  cubes.add(x * a * a)\n        }\n        cubes.contains(a)", "        val cube\
    \ = a / 3\n        val cube2 = a / 3\n        val cube3 = a / 3\n        val cube4\
    \ = a / 3\n        val cube5 = a / 3\n        val cube6 = a / 3\n        val cube7\
    \ = a / 3\n        val cube8 = a / 3\n        val cube9 = a / 3\n        val cube10\
    \ = a / 3\n        val cube11 = a / 3\n        val cube12 = a / 3\n        val\
    \ cube13 = a / 3\n        val cube14 = a / 3\n        val cube15 = a / 3\n   \
    \     val cube16 = a / 3\n        val cube17 = a / 3\n        val cube18 = a /\
    \ 3\n        val cube19 = a / 3\n        val cube20 = a / 3\n        val cube21\
    \ = a / 3\n        val cube22 = a / 3\n        val cube23 = a / 3\n        val\
    \ cube24 = a / 3\n        val cube25 = a / 3\n        val cube26 = a / 3\n   \
    \     val cube27 = a / 3\n        val cube28 = a / 3\n        val cube29 = a /\
    \ 3\n        val cube30 = a / 3\n        val cube31 = a / 3\n        val cube32\
    \ = a / 3\n        val cube33 = a / 3\n        val cube34 = a / 3\n        val\
    \ cube35 = a / 3\n        val cube36 = a / 3\n        val cube37 = a / 3\n   \
    \     val cube38 = a / 3\n        val cube39 = a / 3\n        val cube40 = a /\
    \ 3\n        val cube41 = a / 3\n        val cube42 = a / 3\n        val cube43\
    \ = a / 3\n        val cube44 = a / 3\n        val cube45 = a / 3\n        val\
    \ cube46 = a / 3\n        val cube47 = a / 3\n        val cube48 = a / 3\n   \
    \     val cube49 = a / 3\n        val cube50 = a / 3\n        val cube51 = a /\
    \ 3\n        val cube52 = a / 3\n        val cube53 = a / 3\n        val cube54\
    \ = a / 3\n        val cube55 = a / 3\n        val cube56 = a / 3\n        val\
    \ cube57 = a / 3\n        val cube58 = a / 3\n        val ", "        val cube\
    \ = a.toString.toInt\n        cube == cube * cube * cube", "        val cube =\
    \ a % 3\n        if (cube == 0) true\n        else false", "        val cube =\
    \ a.toString.toLong * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong",
  "        val cubes = mutable.Set[Long]()\n        cubes.add(a)\n        cubes.add(a\
    \ * a)\n        cubes.add(a * a * a)\n        cubes.add(a * a * a * a)\n     \
    \   cubes.add(a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a)\n \
    \       cubes.add(a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a\
    \ * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a)\n   \
    \     cubes.add(a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a *\
    \ a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n     \
    \   cubes.add(a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a)\n", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.Set[Long]()\n        cubes += a\n        cubes +=\
    \ a * a\n        cubes += a * a * a\n        cubes += a * a * a * a\n        cubes\
    \ += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n \
    \       cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cube", "        val cube = a % 3\n        cube == 0 || cube ==\
    \ 1 || cube == 2", "        val cube = a / 3\n        val cubes = cube.toInt\n\
    \        val cubes3 = cubes * 3\n        val cubes5 = cubes3 * 5\n        val\
    \ cubes7 = cubes5 * 7\n        val cubes9 = cubes7 * 9\n        val cubes11 =\
    \ cubes9 * 11\n        val cubes13 = cubes11 * 13\n        val cubes15 = cubes13\
    \ * 15\n        val cubes17 = cubes15 * 17\n        val cubes19 = cubes17 * 19\n\
    \        val cubes23 = cubes19 * 23\n        val cubes27 = cubes23 * 27\n    \
    \    val cubes29 = cubes27 * 29\n        val cubes33 = cubes29 * 33\n        val\
    \ cubes37 = cubes33 * 37\n        val cubes39 = cubes37 * 39\n        val cubes43\
    \ = cubes39 * 43\n        val cubes47 = cubes43 * 47\n        val cubes51 = cubes47\
    \ * 51\n        val cubes55 = cubes51 * 55\n        val cubes57 = cubes55 * 57\n\
    \        val cubes59 = cubes57 * 59\n        val cubes63 = cubes59 * 63\n    \
    \    val cubes67 = cubes63 * 67\n        val cubes69 = cubes67 * 69\n        val\
    \ cubes73 = cubes69 * 73\n        val cubes77 = cubes73 * 77\n        val cubes79\
    \ = cubes77 * 79\n        val cubes83 = cubes79 * 83\n        val cubes87 = cubes83\
    \ * 87\n        val cubes89 = cubes87 * 89\n        val cubes93 = cubes89 * 93\n\
    \        val cubes97 = cubes93 * 97\n        val cubes101 = cubes97 * 101\n  \
    \      val cubes105 = cubes101 * 105\n        val cubes107 = cubes105 * 107\n\
    \        val cubes109 = cubes107 * 109\n        val cubes113 = cubes109 * 113\n\
    \        val cubes117 = cubes113 * 117\n        val cubes119 = cubes117 * 119\n\
    \        val cubes123 = cubes119 * 123\n        val cubes127 = cubes123 * 127\n\
    \        val cubes129 = cubes127 * 129\n", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong",
  "        val cube = a % 3\n        cube == 0 || cube == 1 || cube == 2", "     \
    \   val cubes = mutable.ListBuffer[Long]()\n        cubes += a\n        cubes\
    \ += a*a\n        cubes += a*a*a\n        cubes += a*a*a*a\n        cubes += a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a\n        cubes +=\
    \ a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes +=\
    \ a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes\
    \ += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes\
    \ += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*", "        val cube = a % 3\n        if\
    \ (cube == 0 || cube == 1 || cube == 2) return true\n        else return false",
  "        val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(cube)", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong *\
    \ a.toString.toLong * a.toString.toLong", "        val cube = a % 3\n        if\
    \ (cube == 0) true\n        else false", "        val cube = a.toInt\n       \
    \ val cubes = mutable.ArrayBuffer.empty[Int]\n        cubes += cube\n        cubes\
    \ += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(cube)",
  "        val cube = a / 3\n        val cube2 = a / 3\n        val cube3 = a / 3\n\
    \        val cube4 = a / 3\n        val cube5 = a / 3\n        val cube6 = a /\
    \ 3\n        val cube7 = a / 3\n        val cube8 = a / 3\n        val cube9 =\
    \ a / 3\n        val cube10 = a / 3\n        val cube11 = a / 3\n        val cube12\
    \ = a / 3\n        val cube13 = a / 3\n        val cube14 = a / 3\n        val\
    \ cube15 = a / 3\n        val cube16 = a / 3\n        val cube17 = a / 3\n   \
    \     val cube18 = a / 3\n        val cube19 = a / 3\n        val cube20 = a /\
    \ 3\n        val cube21 = a / 3\n        val cube22 = a / 3\n        val cube23\
    \ = a / 3\n        val cube24 = a / 3\n        val cube25 = a / 3\n        val\
    \ cube26 = a / 3\n        val cube27 = a / 3\n        val cube28 = a / 3\n   \
    \     val cube29 = a / 3\n        val cube30 = a / 3\n        val cube31 = a /\
    \ 3\n        val cube32 = a / 3\n        val cube33 = a / 3\n        val cube34\
    \ = a / 3\n        val cube35 = a / 3\n        val cube36 = a / 3\n        val\
    \ cube37 = a / 3\n        val cube38 = a / 3\n        val cube39 = a / 3\n   \
    \     val cube40 = a / 3\n        val cube41 = a / 3\n        val cube42 = a /\
    \ 3\n        val cube43 = a / 3\n        val cube44 = a / 3\n        val cube45\
    \ = a / 3\n        val cube46 = a / 3\n        val cube47 = a / 3\n        val\
    \ cube48 = a / 3\n        val cube49 = a / 3\n        val cube50 = a / 3\n   \
    \     val cube51 = a / 3\n        val cube52 = a / 3\n        val cube53 = a /\
    \ 3\n        val cube54 = a / 3\n        val cube55 = a / 3\n        val cube56\
    \ = a / 3\n        val cube57 = a / 3\n        val cube58 = a / 3\n        val ",
  "        val cube = a.toString.toInt\n        cube == (a * a * a)", "        val\
    \ cubes = mutable.ListBuffer[Long]()\n        cubes += a\n        cubes += a *\
    \ a\n        cubes += a * a * a\n        cubes += a * a * a * a\n        cubes\
    \ += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n \
    \       cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a", "        val cube = a.toInt\n   \
    \     cube == cube * cube * cube", "        val cube = a.toString.toInt\n    \
    \    val cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n        cubes\
    \ += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(cube)",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a % 3\n        if (cube == 0) true\n        else false", "  \
    \      val cube = a % 4 == 0\n        val cube2 = a % 8 == 0\n        val cube3\
    \ = a % 16 == 0\n        val cube4 = a % 32 == 0\n        val cube5 = a % 64 ==\
    \ 0\n        val cube6 = a % 128 == 0\n        val cube7 = a % 256 == 0\n    \
    \    val cube8 = a % 512 == 0\n        val cube9 = a % 1024 == 0\n        val\
    \ cube10 = a % 2048 == 0\n        val cube11 = a % 4096 == 0\n        val cube12\
    \ = a % 8192 == 0\n        val cube13 = a % 16384 == 0\n        val cube14 = a\
    \ % 32768 == 0\n        val cube15 = a % 65536 == 0\n        val cube16 = a %\
    \ 131072 == 0\n        val cube17 = a % 262144 == 0\n        val cube18 = a %\
    \ 524288 == 0\n        val cube19 = a % 1048576 == 0\n        val cube20 = a %\
    \ 2097152 == 0\n        val cube21 = a % 4194304 == 0\n        val cube22 = a\
    \ % 8388608 == 0\n        val cube23 = a % 16777216 == 0\n        val cube24 =\
    \ a % 33554432 == 0\n        val cube25 = a % 67108864 == 0\n        val cube26\
    \ = a % 134217728 == 0\n        val cube27 = a % 268435456 == 0\n        val cube28\
    \ = a % 536870912 == 0\n        val cube29 = a % 1073741824 == 0\n        val\
    \ cube30 = a % 2147483648 == 0\n        val cube31 = a % 4294967296 == 0\n   \
    \     val cube32 = a % 8589934592 == 0\n        val cube33 = a % 17179869184 ==\
    \ 0\n        val cube34 = a % 34359738368 == 0\n        val cube35 = a % 68719476736\
    \ == 0\n        val cube36 = a % 137438953472 == 0\n        val cube37 = a % 274877906944\
    \ == 0\n        val cube38 = a % 549755813888 == 0\n        val cube39 = a % 1099511627776\
    \ == 0\n        val cube40 = a % 2199023255552 == 0\n        val cube41 = a %\
    \ 4398046511104 == 0\n        val cube42 = a % 8796093022208 == 0\n        val\
    \ cube43 = a % 1759", "        val cube = a.toInt\n        cube == (a * a * a)",
  "        val cube = a % 3\n        if (cube == 0) true\n        else false", " \
    \       val cube = a.toString.toInt\n        cube == cube * cube * cube", "  \
    \      val cube = a % 3\n        if (cube == 0) true\n        else false", " \
    \       val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n  \
    \      val cubesSet = mutable.Set[Long]()\n        cubesSet += cube\n        cubesSet\
    \ += cube*cube\n        cubesSet += cube*cube*cube\n        cubesSet += cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesSet += ", "        val cube = a.toInt\n        cube == cube * cube\
    \ * cube", "        val cube = a.toInt\n        val cubes = mutable.ListBuffer(cube)\n\
    \        val cubesCount = cubes.count(_ == cube)\n        cubesCount > 1", " \
    \       val cube = a.toInt\n        val cubes = mutable.ListBuffer[Long]()\n \
    \       cubes += cube\n        cubes += cube * cube\n        cubes += cube * cube\
    \ * cube\n        cubes.contains(cube)", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong *\
    \ a.toString.toLong * a.toString.toLong", "        val cubes = mutable.ListBuffer(a\
    \ * a, a * a * a)\n        cubes.takeWhile(cubes.head < cubes.last).forall(cubes.head\
    \ * cubes.head * cubes.head == a)", "        val cube = a.toInt\n        val cubes\
    \ = mutable.Set[Long]()\n        cubes += a\n        cubes += a * a\n        cubes\
    \ += a * a * a\n        cubes += a * a * a * a\n        cubes += a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a", "        val cube = a ^ (a >> 1) ^ (a >> 2) ^ (a >> 3) ^ (a >> 4) ^ (a >>\
    \ 5) ^ (a >> 6) ^ (a >> 7) ^ (a >> 8) ^ (a >> 9)\n        cube == 0", "      \
    \  val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n    \
    \    cube == a.toString.toLong * a.toString.toLong * a.toString.toLong", "   \
    \     val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n \
    \       cube == a.toString.toLong * a.toString.toLong * a.toString.toLong", " \
    \       val cube = a.toInt\n        val cubes = mutable.Set[Long]()\n        cubes\
    \ += a\n        cubes += a * a\n        cubes += a * a * a\n        cubes += a\
    \ * a * a * a\n        cubes += a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n \
    \       cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += ", "        val cube = a % 3\n\
    \        cube == 0 || cube == 2", "        val cube = a.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        val cubesCount = cubes.length\n       \
    \ val cubesSum = cubes.sum\n        val cubesSum2 = cubesSum * cubesSum\n    \
    \    val cubesSum3 = cubesSum2 * cubesSum\n        val cubesSum4 = cubesSum3 *\
    \ cubesSum\n        val cubesSum5 = cubesSum4 * cubesSum\n        val cubesSum6\
    \ = cubesSum5 * cubesSum\n        val cubesSum7 = cubesSum6 * cubesSum\n     \
    \   val cubesSum8 = cubesSum7 * cubesSum\n        val cubesSum9 = cubesSum8 *\
    \ cubesSum\n        val cubesSum10 = cubesSum9 * cubesSum\n        val cubesSum11\
    \ = cubesSum10 * cubesSum\n        val cubesSum12 = cubesSum11 * cubesSum\n  \
    \      val cubesSum13 = cubesSum12 * cubesSum\n        val cubesSum14 = cubesSum13\
    \ * cubesSum\n        val cubesSum15 = cubesSum14 * cubesSum\n        val cubesSum16\
    \ = cubesSum15 * cubesSum\n        val cubesSum17 = cubesSum16 * cubesSum\n  \
    \      val cubesSum18 = cubesSum17 * cubesSum\n        val cubesSum19 = cubesSum18\
    \ * cubesSum\n        val cubesSum20 = cubesSum19 * cubesSum\n        val cubesSum21\
    \ = cubesSum20 * cubesSum\n        val cubesSum22 = cubesSum21 * cubesSum\n  \
    \      val cubesSum23 = cubesSum22 * cubesSum\n        val cubesSum24 = cubesSum23\
    \ * cubesSum\n        val cubesSum25 = cubesSum24 * cubesSum\n        val cubesSum26\
    \ = cubesSum25 * cubesSum\n        val cubesSum27 = cubesSum26 * cubesSum\n  \
    \      val cubesSum28 = cubesSum27 * cubesSum\n        val cubesSum29 = cubesSum28\
    \ * cubesSum\n        val cubesSum30 = cubesSum29 * cubesSum\n        val cubesSum31\
    \ = cubesSum30 * cubesSum\n        val cubesSum32 = cubesSum31 * cube", "    \
    \    val cube = a.toInt\n        val cubes = mutable.ListBuffer(cube)\n      \
    \  val cubesCount = cubes.count(_ == cube)\n        cubesCount > 0", "       \
    \ val cube = a % 3\n        if (cube == 0) true\n        else false", "      \
    \  val cube = a / 3\n        val square = a / 3\n        val cube2 = a / 3\n \
    \       val square2 = a / 3\n        val cube3 = a / 3\n        val square3 =\
    \ a / 3\n        val cube4 = a / 3\n        val square4 = a / 3\n        val cube5\
    \ = a / 3\n        val square5 = a / 3\n        val cube6 = a / 3\n        val\
    \ square6 = a / 3\n        val cube7 = a / 3\n        val square7 = a / 3\n  \
    \      val cube8 = a / 3\n        val square8 = a / 3\n        val cube9 = a /\
    \ 3\n        val square9 = a / 3\n        val cube10 = a / 3\n        val square10\
    \ = a / 3\n        val cube11 = a / 3\n        val square11 = a / 3\n        val\
    \ cube12 = a / 3\n        val square12 = a / 3\n        val cube13 = a / 3\n \
    \       val square13 = a / 3\n        val cube14 = a / 3\n        val square14\
    \ = a / 3\n        val cube15 = a / 3\n        val square15 = a / 3\n        val\
    \ cube16 = a / 3\n        val square16 = a / 3\n        val cube17 = a / 3\n \
    \       val square17 = a / 3\n        val cube18 = a / 3\n        val square18\
    \ = a / 3\n        val cube19 = a / 3\n        val square19 = a / 3\n        val\
    \ cube20 = a / 3\n        val square20 = a / 3\n        val cube21 = a / 3\n \
    \       val square21 = a / 3\n        val cube22 = a / 3\n        val square22\
    \ = a / 3\n        val cube23 = a / 3\n        val square23 = a / 3\n        val\
    \ cube24 = a / 3\n        val square24 = a / 3\n        val cube25 = a / 3\n \
    \       val square25 = a / 3\n        val cube26 = a / 3\n        val square26\
    \ = a / 3\n        val cube27 = a / 3\n        val square27 = a / 3\n        val\
    \ cube28 = a / 3\n        val square28 = a / 3\n        val cube29 = a / 3\n \
    \       val square29 = a / 3\n        val cube30 = a / 3\n        val square30\
    \ = ", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesSet = mutable.Set[Long]()\n        cubesSet += cube\n      \
    \  cubesSet += cube * cube\n        cubesSet += cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube\n        cubesSet += cube * cube * cube * cube\
    \ * cube\n        cubesSet += cube * cube * cube * cube * cube * cube\n      \
    \  cubesSet += cube * cube * cube * cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubesSet\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cu", "        val cube = a.toInt\n        val cubes = cube.toLong * cube.toLong\
    \ * cube.toLong\n        cubes % 1 == 0", "        val cube = a.toString.toInt\n\
    \        cube == (a * a * a)", "        val cube = a / 3\n        val square =\
    \ a / 3\n        val cubeAndSquare = cube + square\n        if (cubeAndSquare\
    \ == a) true else false", "        val cube = a.toInt\n        val cubes = cube.toLong\
    \ * cube.toLong * cube.toLong\n        cubes % 1 == 0", "        val cube = a\
    \ / 3\n        val cube2 = a / 3\n        val cube3 = a / 3\n        val cube4\
    \ = a / 3\n        val cube5 = a / 3\n        val cube6 = a / 3\n        val cube7\
    \ = a / 3\n        val cube8 = a / 3\n        val cube9 = a / 3\n        val cube10\
    \ = a / 3\n        val cube11 = a / 3\n        val cube12 = a / 3\n        val\
    \ cube13 = a / 3\n        val cube14 = a / 3\n        val cube15 = a / 3\n   \
    \     val cube16 = a / 3\n        val cube17 = a / 3\n        val cube18 = a /\
    \ 3\n        val cube19 = a / 3\n        val cube20 = a / 3\n        val cube21\
    \ = a / 3\n        val cube22 = a / 3\n        val cube23 = a / 3\n        val\
    \ cube24 = a / 3\n        val cube25 = a / 3\n        val cube26 = a / 3\n   \
    \     val cube27 = a / 3\n        val cube28 = a / 3\n        val cube29 = a /\
    \ 3\n        val cube30 = a / 3\n        val cube31 = a / 3\n        val cube32\
    \ = a / 3\n        val cube33 = a / 3\n        val cube34 = a / 3\n        val\
    \ cube35 = a / 3\n        val cube36 = a / 3\n        val cube37 = a / 3\n   \
    \     val cube38 = a / 3\n        val cube39 = a / 3\n        val cube40 = a /\
    \ 3\n        val cube41 = a / 3\n        val cube42 = a / 3\n        val cube43\
    \ = a / 3\n        val cube44 = a / 3\n        val cube45 = a / 3\n        val\
    \ cube46 = a / 3\n        val cube47 = a / 3\n        val cube48 = a / 3\n   \
    \     val cube49 = a / 3\n        val cube50 = a / 3\n        val cube51 = a /\
    \ 3\n        val cube52 = a / 3\n        val cube53 = a / 3\n        val cube54\
    \ = a / 3\n        val cube55 = a / 3\n        val cube56 = a / 3\n        val\
    \ cube57 = a / 3\n        val cube58 = a / 3\n        val ", "        val cube\
    \ = a.toString.toInt\n        val cubes = mutable.ListBuffer(cube)\n        cubes\
    \ += cube\n        cubes += cube*cube\n        cubes += cube*cube*cube\n     \
    \   cubes += cube*cube*cube*cube\n        cubes += cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube\n        cubes += cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube\n        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubes\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubes +=\
    \ cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubes +=\
    \ cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubes\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n \
    \       cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubes += cube*cube*cube*cube*cube*cube*cube*", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong *\
    \ a.toString.toLong * a.toString.toLong", "        val cube = a % 9 == 0\n   \
    \     val cube2 = a % 9 == 0\n        val cube3 = a % 9 == 0\n        val cube4\
    \ = a % 9 == 0\n        val cube5 = a % 9 == 0\n        val cube6 = a % 9 == 0\n\
    \        val cube7 = a % 9 == 0\n        val cube8 = a % 9 == 0\n        val cube9\
    \ = a % 9 == 0\n        val cube10 = a % 9 == 0\n        val cube11 = a % 9 ==\
    \ 0\n        val cube12 = a % 9 == 0\n        val cube13 = a % 9 == 0\n      \
    \  val cube14 = a % 9 == 0\n        val cube15 = a % 9 == 0\n        val cube16\
    \ = a % 9 == 0\n        val cube17 = a % 9 == 0\n        val cube18 = a % 9 ==\
    \ 0\n        val cube19 = a % 9 == 0\n        val cube20 = a % 9 == 0\n      \
    \  val cube21 = a % 9 == 0\n        val cube22 = a % 9 == 0\n        val cube23\
    \ = a % 9 == 0\n        val cube24 = a % 9 == 0\n        val cube25 = a % 9 ==\
    \ 0\n        val cube26 = a % 9 == 0\n        val cube27 = a % 9 == 0\n      \
    \  val cube28 = a % 9 == 0\n        val cube29 = a % 9 == 0\n        val cube30\
    \ = a % 9 == 0\n        val cube31 = a % 9 == 0\n        val cube32 = a % 9 ==\
    \ 0\n        val cube33 = a % 9 == 0\n        val cube34 = a % 9 == 0\n      \
    \  val cube35 = a % 9 == 0\n        val cube36 = a % 9 == 0\n        val cube37\
    \ = a % 9 == 0\n        val cube38 = a % 9 == 0\n        val cube39 = a % 9 ==\
    \ 0\n        val cube40 = a % 9 == 0\n        val cube41 = a % 9 == 0\n      \
    \  val cube42 = a % 9 == 0\n        val cube43 = a % 9 == 0\n        val cube44\
    \ = a % 9 == 0\n        val cube45 = a % 9 == 0\n        val cube46 = a % 9 ==\
    \ 0\n        val cube47 = a % 9 == 0\n        val cube48 = a % 9 == 0\n      \
    \  val cube49 = a % 9 == 0\n        val cube50 = a % 9 == 0\n        val cube51\
    \ = a % 9 == 0\n        val cube52 = a % 9 == 0\n        val cube5", "       \
    \ val cube = a % 3\n        if (cube == 0) true\n        else false", "      \
    \  val cube = a.toInt\n        val cubes = mutable.ListBuffer(cube)\n        cubes\
    \ += cube\n        cubes += cube * cube\n        cubes += cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube\n        cubes += cube * cube * cube\
    \ * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\n  \
    \      cubes += cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes += cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube\n        cubes\
    \ += cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n\
    \        cubes += cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube\n        cubes += cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube\n        cubes += cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube\n        cubes += cube * cube * cube * cube * cube * cube\
    \ * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube * cube\n",
  "        val cube = a.toInt\n        val cubes = mutable.Set[Long]()\n        cubes\
    \ += a\n        cubes += a*a\n        cubes += a*a*a\n        cubes += a*a*a*a\n\
    \        cubes += a*a*a*a*a\n        cubes += a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a\n      \
    \  cubes += a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a\n    \
    \    cubes += a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes +=\
    \ a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes\
    \ += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*", " \
    \       val cube = a.toInt\n        cube == (a * a * a)", "        val cube =\
    \ a.toString.toInt\n        cube == cube * cube * cube", "        val cube = a.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       cube*cube == a", "        val cube = a % 3\n        cube == 0 || cube\
    \ == 1 || cube == 2", "        val cube = a / 3\n        val square = a / 3\n\
    \        val cubes = cube.toInt\n        val squares = square.toInt\n        cubes\
    \ % squares == 0", "        val cube = a.toInt\n        cube == cube * cube *\
    \ cube", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer.empty[Int]\n\
    \        cubes += cube\n        cubes += cube * cube\n        cubes += cube *\
    \ cube * cube\n        cubes.contains(cube)", "        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a", "        val cube = a.toString.toInt\n        cube == (a * a\
    \ * a)", "        val cube = a.toInt\n        val cubes = mutable.ListBuffer(cube)\n\
    \        val cubesCount = cubes.length\n        val cubesRemaining = cubesCount\
    \ - 1\n        val cubesRemainingCount = cubesRemaining * cubesRemaining\n   \
    \     val cubesRemainingCubesCount = cubesRemainingCount / cubesCount\n      \
    \  val cubesRemainingCubesRemainingCount = cubesRemainingCubesCount * cubesRemaining\n\
    \        val cubesRemainingCubesRemainingRemainingCount = cubesRemainingCubesRemainingCount\
    \ / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = cubesRemainingCubesRemainingRemainingCount / cubesCount\n        val cubesRemainingCubesRemainingRemainingRemainingCount\
    \ = ", "        val cube = a.toString.toInt\n        cube == cube * cube * cube",
  "        val cube = a.toString.toInt\n        cube == (a * a * a)", "        val\
    \ cube = a.toInt\n        cube == cube * cube * cube", "        val cube = a /\
    \ 3\n        val square = a / 3\n        val cube2 = a / 3\n        val square2\
    \ = a / 3\n        val cube3 = a / 3\n        val square3 = a / 3\n        val\
    \ cube4 = a / 3\n        val square4 = a / 3\n        val cube5 = a / 3\n    \
    \    val square5 = a / 3\n        val cube6 = a / 3\n        val square6 = a /\
    \ 3\n        val cube7 = a / 3\n        val square7 = a / 3\n        val cube8\
    \ = a / 3\n        val square8 = a / 3\n        val cube9 = a / 3\n        val\
    \ square9 = a / 3\n        val cube10 = a / 3\n        val square10 = a / 3\n\
    \        val cube11 = a / 3\n        val square11 = a / 3\n        val cube12\
    \ = a / 3\n        val square12 = a / 3\n        val cube13 = a / 3\n        val\
    \ square13 = a / 3\n        val cube14 = a / 3\n        val square14 = a / 3\n\
    \        val cube15 = a / 3\n        val square15 = a / 3\n        val cube16\
    \ = a / 3\n        val square16 = a / 3\n        val cube17 = a / 3\n        val\
    \ square17 = a / 3\n        val cube18 = a / 3\n        val square18 = a / 3\n\
    \        val cube19 = a / 3\n        val square19 = a / 3\n        val cube20\
    \ = a / 3\n        val square20 = a / 3\n        val cube21 = a / 3\n        val\
    \ square21 = a / 3\n        val cube22 = a / 3\n        val square22 = a / 3\n\
    \        val cube23 = a / 3\n        val square23 = a / 3\n        val cube24\
    \ = a / 3\n        val square24 = a / 3\n        val cube25 = a / 3\n        val\
    \ square25 = a / 3\n        val cube26 = a / 3\n        val square26 = a / 3\n\
    \        val cube27 = a / 3\n        val square27 = a / 3\n        val cube28\
    \ = a / 3\n        val square28 = a / 3\n        val cube29 = a / 3\n        val\
    \ square29 = a / 3\n        val cube30 = a / 3\n        val square30 = ", "  \
    \      val cubes = mutable.Set[Long]()\n        cubes.add(a)\n        cubes.add(a\
    \ * a)\n        cubes.add(a * a * a)\n        cubes.add(a * a * a * a)\n     \
    \   cubes.add(a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a)\n \
    \       cubes.add(a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a\
    \ * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a * a)\n   \
    \     cubes.add(a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a *\
    \ a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a\
    \ * a * a * a * a * a * a * a * a)\n        cubes.add(a * a * a * a * a * a *\
    \ a * a * a)\n        cubes.add(a * a * a * a * a * a", "        val cube = a.toString.toInt\n\
    \        cube == (a * a * a)", "        val cube = a.toString.toInt\n        val\
    \ cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += cube\n        cubes.toList.forall(cubes.contains)",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a % 9 == 0\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += a\n        while(cube.equals(false)) {\n            cubes +=\
    \ a\n            cube = a % 9 == 0\n        }\n        cubes.toList.contains(a)",
  "        val cube = a.toInt\n        val cubes = cube.toLong * cube.toLong * cube.toLong\n\
    \        cubes % 1 == 0", "        val cube = a.toString.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        val cubesCount = cubes.count(_ == cube)\n\
    \        cubesCount == 1", "        val cube = a.toString.toLong * a.toString.toLong\
    \ * a.toString.toLong\n        cube == a.toString.toLong * a.toString.toLong *\
    \ a.toString.toLong", "        val cube = a.toInt\n        val cubes = mutable.ListBuffer(cube)\n\
    \        val cubesCount = cubes.length\n        val cubesSum = cubes.sum\n   \
    \     val cubesSum2 = cubesSum * cubesSum\n        val cubesSum3 = cubesSum2 *\
    \ cubesSum\n        val cubesSum4 = cubesSum3 * cubesSum\n        val cubesSum5\
    \ = cubesSum4 * cubesSum\n        val cubesSum6 = cubesSum5 * cubesSum\n     \
    \   val cubesSum7 = cubesSum6 * cubesSum\n        val cubesSum8 = cubesSum7 *\
    \ cubesSum\n        val cubesSum9 = cubesSum8 * cubesSum\n        val cubesSum10\
    \ = cubesSum9 * cubesSum\n        val cubesSum11 = cubesSum10 * cubesSum\n   \
    \     val cubesSum12 = cubesSum11 * cubesSum\n        val cubesSum13 = cubesSum12\
    \ * cubesSum\n        val cubesSum14 = cubesSum13 * cubesSum\n        val cubesSum15\
    \ = cubesSum14 * cubesSum\n        val cubesSum16 = cubesSum15 * cubesSum\n  \
    \      val cubesSum17 = cubesSum16 * cubesSum\n        val cubesSum18 = cubesSum17\
    \ * cubesSum\n        val cubesSum19 = cubesSum18 * cubesSum\n        val cubesSum20\
    \ = cubesSum19 * cubesSum\n        val cubesSum21 = cubesSum20 * cubesSum\n  \
    \      val cubesSum22 = cubesSum21 * cubesSum\n        val cubesSum23 = cubesSum22\
    \ * cubesSum\n        val cubesSum24 = cubesSum23 * cubesSum\n        val cubesSum25\
    \ = cubesSum24 * cubesSum\n        val cubesSum26 = cubesSum25 * cubesSum\n  \
    \      val cubesSum27 = cubesSum26 * cubesSum\n        val cubesSum28 = cubesSum27\
    \ * cubesSum\n        val cubesSum29 = cubesSum28 * cubesSum\n        val cubesSum30\
    \ = cubesSum29 * cubesSum\n        val cubesSum31 = cubesSum30 * cubesSum\n  \
    \      val cubesSum32 = cubesSum31 * cube", "        val cube = a.toString.toInt\n\
    \        cube == (a * a * a)", "        val cube = a.toInt\n        cube == cube\
    \ * cube * cube", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        cubes += cube\n        cubes.contains(cube)", "        val cube = a.toInt\n\
    \        val cubes = cube.toLong * cube.toLong * cube.toLong\n        cubes %\
    \ 1 == 0", "        val cube = a.toInt\n        cube == cube * cube * cube", " \
    \       val cube = a.toString.toInt\n        cube == cube * cube * cube", "  \
    \      val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n   \
    \     val cubesSet = mutable.Set[Long]()\n        val cubesSetSize = cubes.size\n\
    \        cubesSet.foreach(cubesSetSize += _)\n        cubesSetSize == cubesSet"]
stop_tokens:
- "\n    }\n"

name: HumanEval_77_iscube
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that takes an integer a and returns True \n    // if this\
  \ ingeger is a cube of some integer number.\n    // Note: you may assume the input\
  \ is always valid.\n    // Examples:\n    // iscube(1) ==> True\n    // iscube(2)\
  \ ==> False\n    // iscube(-1) ==> True\n    // iscube(64) ==> True\n    // iscube(0)\
  \ ==> True\n    // iscube(180) ==> False\n    def iscube(a : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(iscube((1l)) == (true));\n\
  \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n  \
  \  assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n  \
  \  assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n   \
  \ assert(iscube((1729l)) == (false));\n    }\n\n}\n"
completions: ["        val cube = a.toInt\n        cube == (a * a * a)", "       \
    \ val cube = a.toInt\n        cube == (a * a * a)", "        val cube = a.toString.toInt\n\
    \        cube == (a * a * a)", "        val cube = a.toInt\n        val cubes\
    \ = mutable.Set[Int]()\n        cubes += cube\n        cubes += cube * cube\n\
    \        cubes += cube * cube * cube\n        cubes.contains(cube)", "       \
    \ val cube = a.toString.toInt\n        cube*cube == a", "        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a", "        val cube = a.toString.toInt\n        cube == (a * a * a)",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", '        val
    cubes = mutable.ListBuffer(1L, 3L, 5L, 7L, 9L, 11L, 13L, 15L, 17L, 19L, 21L, 23L,
    25L, 27L, 29L, 31L, 33L, 35L, 37L, 39L, 41L, 43L, 45L, 47L, 49L, 51L, 53L, 55L,
    57L, 59L, 61L, 63L, 65L, 67L, 69L, 71L, 73L, 75L, 77L, 79L, 81L, 83L, 85L, 87L,
    89L, 91L, 93L, 95L, 97L, 99L, 101L, 103L, 105L, 107L, 109L, 111L, 113L, 115L,
    117L, 119L, 121L, 123L, 125L, 127L, 129L, 131L, 133L, 135L, 137L, 139L, 141L,
    143L, 145L, 147L, 149L, 151L, 153L, 155L, 157L, 159L, 161L, 163L, 165L, 167L,
    169L, 171L, 173L, 175L, 177L, 179L, 181L, 183L, 185L, 187L, 189L, 191L, 193L,
    195L, 197L, 199L, 201L, 203L, 205L, 207L, 209L, 211L, 213L, 215L, 217L, 219L,
    221L, 223L, 225L, 227L, 229L, 231L, 233L, 235L, 237L, 239L, 241L, 243L, 245L,
    247L, 249L, 251L, 253L, 255L, 257L, 259L, 261L, 263L, 265L, 267L, 269L, 271L,
    273L, 275L, 277L, 279L, 281L, 283L, 285L, 287L, 289L, 291L, 293L, 295L, 297L,
    299L, 301L, 303L, 305L, 307L, 309L, 311L, 313L, 315L, 317L, 319L, 321L, 323L,
    325L, 327L, 329L, 331L, 333L, 335L, 337L, 339L, 341L, 343L, 345L, 347L, 349L,
    351L, 353L, 355L, 357L, 359L, 361L, 363L, 365L, 367L, 369L, 371L, 373L, 375L,
    377L, 379L, 381L, 383L, 385L, 387L, 389L, 391L, 393L, 395L, 397L, 399L, 401L,
    403L, 405L, 407L, 409L, 411L, 413L, 415L, 417L, 419L, 421L, 423L, 425L, 427L,
    429L, 431L, 433L, 435L, 437L, 439L, ', "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += a\n        while(cubes.nonEmpty)\
    \ {\n            val cube = cubes.head\n            cubes -= cube\n          \
    \  if(cubes.nonEmpty) {\n                cubes += cube\n            }\n      \
    \  }\n        cubes.nonEmpty", "        val cube = a.toString.toInt\n        cube\
    \ == cube * cube * cube", "        val cube = a % 3\n        if (cube == 0) true\n\
    \        else false", "        val cube = a.toString.toInt\n        cube == (a\
    \ * a * a)", "        val cubes = mutable.Set[Long]()\n        for (x <- 1 to\
    \ a) {\n            cubes += x*x*x\n        }\n        cubes.contains(a)", " \
    \       val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n  \
    \      val cubesCount = cubes.length\n        val cubesSum = cubes.sum\n     \
    \   val cubesSumSquare = cubesSum * cubesSum\n        val cubesSumCube = cubesSum\
    \ * cubes\n        val cubesSumCubeSquare = cubesSumCube * cubesSum\n        val\
    \ cubesSumCubeCube = cubesSumCube * cubes\n        val cubesSumCubeCubeSquare\
    \ = cubesSumCubeSquare * cubesSum\n        val cubesSumCubeCubeCube = cubesSumCubeCube\
    \ * cubes\n        val cubesSumCubeCubeCubeSquare = cubesSumCubeCubeSquare * cubesSum\n\
    \        val cubesSumCubeCubeCubeCube = cubesSumCubeCubeCube * cubes\n       \
    \ val cubesSumCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeSquare * cubesSum\n\
    \        val cubesSumCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCube * cubes\n\
    \        val cubesSumCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeSquare * cubesSum\n\
    \        val cubesSumCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCube * cubes\n\
    \        val cubesSumCubeCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCubeCube\
    \ * cubes\n        val cubesSumCubeCubeCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCubeCube\
    \ * cubes\n        val cubesSumCubeCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCubeCube\
    \ * cubes\n        val cubesSumCubeCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCubeCubeCube = cubesSumCubeCubeCubeCubeCube\
    \ * cubes\n        val cubesSumCubeCubeCubeCubeCubeCubeSquare = cubesSumCubeCubeCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCubeCubeCube = ", "        val cube\
    \ = a.toString.toInt\n        cube == (a * a * a)", "        val cube = a.toString.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        val cubesCount = cubes.count(_\
    \ == cube)\n        cubesCount > 0", "        val cube = a.toString.toInt\n  \
    \      val cubes = mutable.ListBuffer[Long]()\n        cubes += a\n        cubes\
    \ += a * a\n        cubes += a * a * a\n        cubes += a * a * a * a\n     \
    \   cubes += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n \
    \       cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n      \
    \  cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a\n        cube", "        val cube = a.toString.toInt\n        cube == cube\
    \ * cube * cube", "        val cubes = mutable.Set[Long]()\n        cubes += 1\n\
    \        cubes += a\n        cubes += a * a\n        cubes += a * a * a\n    \
    \    cubes += a * a * a * a\n        cubes += a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n    \
    \    cubes += a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a\n        cubes += a * a * a * a"]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(103)\n        divisors.add(107)\n        divisors.add(109)\n\
    \        divisors.add(111)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(139)\n        divisors.add(149)\n\
    \        divisors.add(151)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(273)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(365)\n\
    \        divisors.add(367)\n        divisors.add(369)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(383)\n        divisors.add(389)\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptvenh6t0.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(101)\n        divisors.add(103)\n        divisors.add(107)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(139)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(251)\n        divisors.add(253)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(273)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(287)\n        divisors.add(293)\n\
    \        divisors.add(297)\n        divisors.add(301)\n        divisors.add(303)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(323)\n        divisors.add(329)\n\
    \        divisors.add(337)\n        divisors.add(341)\n        divisors.add(347)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(365)\n        divisors.add(367)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(38\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpky8u_04u.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpky8u_04u.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ListBuffer[Long]()\n    \
    \    for (d <- 1 until n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbti4xj9x.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbti4xj9x.scala:9:26 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m until n by \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                          ^\e[0m\n\e[31m  |\e\
    [0m                          Found:    (n : Long)\n\e[31m  |\e[0m            \
    \              Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(273)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(287)\n        divisors.add(293)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(331)\n        divisors.add(333)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(365)\n        divisors.add(367)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(381)\n\
    \        divisors.add(383)\n        divisors.add(383)\n        divisors.add(383)\n\
    \        divisors.add(383)\n        divisors.add(383)\n        divisors.add(383)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphe4bjnca.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792519
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 1 to n by 2) {\n            if (n % d == 0) {\n           \
    \     divisors += d\n            }\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpirqas5qd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpirqas5qd.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (i <- 1 to n by 2)\n            if (n % i == 0)\n                divisors\
    \ += i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxetr9rxo.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpxetr9rxo.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.update(0, n)\n        divisors.update(1, n-1)\n        divisors.update(n/2,\
    \ n/2)\n        divisors.update(n/3, n/3)\n        divisors.update(n/4, n/4)\n\
    \        divisors.update(n/5, n/5)\n        divisors.update(n/6, n/6)\n      \
    \  divisors.update(n/7, n/7)\n        divisors.update(n/8, n/8)\n        divisors.update(n/9,\
    \ n/9)\n        divisors.update(n/10, n/10)\n        divisors.update(n/11, n/11)\n\
    \        divisors.update(n/12, n/12)\n        divisors.update(n/13, n/13)\n  \
    \      divisors.update(n/14, n/14)\n        divisors.update(n/15, n/15)\n    \
    \    divisors.update(n/16, n/16)\n        divisors.update(n/17, n/17)\n      \
    \  divisors.update(n/18, n/18)\n        divisors.update(n/19, n/19)\n        divisors.update(n/20,\
    \ n/20)\n        divisors.update(n/21, n/21)\n        divisors.update(n/22, n/22)\n\
    \        divisors.update(n/23, n/23)\n        divisors.update(n/24, n/24)\n  \
    \      divisors.update(n/25, n/25)\n        divisors.update(n/26, n/26)\n    \
    \    divisors.update(n/27, n/27)\n        divisors.update(n/28, n/28)\n      \
    \  divisors.update(n/29, n/29)\n        divisors.update(n/30, n/30)\n        divisors.update(n/31,\
    \ n/31)\n        divisors.update(n/32, n/32)\n        divisors.update(n/33, n/33)\n\
    \        divisors.update(n/34, n/34)\n        divisors.update(n/35, n/35)\n  \
    \      divisors.update(n/36, n/36)\n        divisors.update(n/37, n/37)\n    \
    \    divisors.update(n/38, n/38)\n        divisors.update(n/39, n/39)\n      \
    \  divisors.update(n/40, n/40)\n        divisors.update(n/41, n/41)\n        divisors.update(n/42,\
    \ n/42)\n        divisors.update(n/43, n/43)\n        divisors.update(n/44, n/44)\n\
    \        divisors.update(n/45, n/45)\n        divisors.update(n/46, n/46\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp36oprv8o.scala:56:4 ----------------------------\e\
    [0m\e[0m\n\e[31m56 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp36oprv8o.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6g0fcnf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpg6g0fcnf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(103)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(143)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(251)\n        divisors.add(253)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(273)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(287)\n        divisors.add(293)\n\
    \        divisors.add(297)\n        divisors.add(301)\n        divisors.add(303)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(323)\n        divisors.add(327)\n\
    \        divisors.add(331)\n        divisors.add(333)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(365)\n        divisors.add(367)\n        divisors.add(37\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp1poemdyu.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1poemdyu.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 413\n        divisors += 421\n        divisors +=\
    \ 431\n        divisors += 437\n        divisors += 443\n        divisors += 449\n\
    \        divisors += 457\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpwrt8l6k5.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpwrt8l6k5.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 247\n        divisors += 251\n        divisors += 257\n \
    \       divisors += 263\n        divisors += 269\n        divisors += 271\n  \
    \      divisors += 277\n        divisors += 281\n        divisors += 283\n   \
    \     divisors += 293\n        divisors += 307\n        divisors += 311\n    \
    \    divisors += 313\n        divisors += 317\n        divisors += 323\n     \
    \   divisors += 329\n        divisors += 331\n        divisors += 337\n      \
    \  divisors += 341\n        divisors += 347\n        divisors += 353\n       \
    \ divisors += 359\n        divisors += 363\n        divisors += 369\n        divisors\
    \ += 373\n        divisors += 379\n        divisors += 383\n        divisors +=\
    \ 389\n        divisors += 397\n        divisors += 401\n        divisors += 407\n\
    \        divisors += 411\n        divisors += 413\n        divisors += 417\n \
    \       divisors += 419\n        divisors += 421\n        divisors += 423\n  \
    \      divisors += 427\n        divisors += 431\n        divisors += 433\n   \
    \     divisors += 439\n        divisors += 443\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4fp45kgl.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0L\n        for(i <- 1 to n by 2){\n            val div = i\
    \ / 2\n            if(divisors.contains(div)){\n                maxDivisor = div\n\
    \            }\n            divisors += div\n        }\n        maxDivisor\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoms684jf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpoms684jf.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 1 to n by 2)\n            if (n % d == 0)\n               \
    \ divisors += d\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7yszywka.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp7yszywka.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 319\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 341\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 411\n        divisors += 413\n        divisors +=\
    \ 417\n        divisors += 419\n        divisors += 421\n        divisors += 423\n\
    \        divisors += 427\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiygz9hid.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 319\n   \
    \     divisors += 323\n        divisors += 327\n        divisors += 331\n    \
    \    divisors += 337\n        divisors += 343\n        divisors += 347\n     \
    \   divisors += 351\n        divisors += 353\n        divisors += 359\n      \
    \  divisors += 363\n        divisors += 367\n        divisors += 373\n       \
    \ divisors += 379\n        divisors += 383\n        divisors += 389\n        divisors\
    \ += 397\n        divisors += 401\n        divisors += 403\n        divisors +=\
    \ 407\n        divisors += 411\n        divisors += 413\n        divisors += 417\n\
    \        divisors += 419\n        divisors += 423\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeq_sx30g.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792519
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8zw5loed.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp8zw5loed.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 257\n        divisors += 263\n        divisors += 269\n  \
    \      divisors += 271\n        divisors += 277\n        divisors += 281\n   \
    \     divisors += 283\n        divisors += 293\n        divisors += 307\n    \
    \    divisors += 311\n        divisors += 313\n        divisors += 317\n     \
    \   divisors += 323\n        divisors += 329\n        divisors += 331\n      \
    \  divisors += 337\n        divisors += 343\n        divisors += 349\n       \
    \ divisors += 353\n        divisors += 359\n        divisors += 363\n        divisors\
    \ += 369\n        divisors += 373\n        divisors += 379\n        divisors +=\
    \ 383\n        divisors += 389\n        divisors += 397\n        divisors += 401\n\
    \        divisors += 407\n        divisors += 413\n        divisors += 421\n \
    \       divisors += 423\n        divisors += 429\n        divisors += 433\n  \
    \      divisors += 439\n        divisors += 443\n        divisors += 449\n   \
    \     divisors += 457\n        divisors += 461\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1f8r8nfy.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792519
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8ftj_oem.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp8ftj_oem.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ListBuffer[Long]()\n    \
    \    for (d <- 1 until n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbti4xj9x.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbti4xj9x.scala:9:26 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m until n by \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                          ^\e[0m\n\e[31m  |\e\
    [0m                          Found:    (n : Long)\n\e[31m  |\e[0m            \
    \              Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 413\n        divisors += 417\n        divisors +=\
    \ 423\n        divisors += 429\n        divisors += 431\n        divisors += 437\n\
    \        divisors += 443\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp1z1qvws7.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp1z1qvws7.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (i <- 1 to n by 2) {\n            if (n % i == 0) {\n                divisors\
    \ += i\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2y1uol42.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2y1uol42.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 247\n        divisors += 251\n        divisors += 257\n \
    \       divisors += 263\n        divisors += 269\n        divisors += 271\n  \
    \      divisors += 277\n        divisors += 281\n        divisors += 283\n   \
    \     divisors += 293\n        divisors += 307\n        divisors += 311\n    \
    \    divisors += 313\n        divisors += 317\n        divisors += 323\n     \
    \   divisors += 329\n        divisors += 331\n        divisors += 337\n      \
    \  divisors += 343\n        divisors += 349\n        divisors += 353\n       \
    \ divisors += 359\n        divisors += 363\n        divisors += 369\n        divisors\
    \ += 373\n        divisors += 379\n        divisors += 383\n        divisors +=\
    \ 389\n        divisors += 397\n        divisors += 401\n        divisors += 407\n\
    \        divisors += 411\n        divisors += 413\n        divisors += 417\n \
    \       divisors += 419\n        divisors += 423\n        divisors += 429\n  \
    \      divisors += 433\n        divisors += 439\n        divisors += 443\n   \
    \     divisors += 449\n        divisors += 457\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2dqf0q3u.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 257\n        divisors += 263\n        divisors += 269\n        divisors +=\
    \ 271\n        divisors += 277\n        divisors += 281\n        divisors += 283\n\
    \        divisors += 293\n        divisors += 307\n        divisors += 311\n \
    \       divisors += 317\n        divisors += 323\n        divisors += 329\n  \
    \      divisors += 337\n        divisors += 341\n        divisors += 347\n   \
    \     divisors += 353\n        divisors += 359\n        divisors += 367\n    \
    \    divisors += 373\n        divisors += 379\n        divisors += 383\n     \
    \   divisors += 389\n        divisors += 397\n        divisors += 401\n      \
    \  divisors += 409\n        divisors += 419\n        divisors += 429\n       \
    \ divisors += 431\n        divisors += 439\n        divisors += 447\n        divisors\
    \ += 451\n        divisors += 457\n        divisors += 461\n        divisors +=\
    \ 467\n        divisors += 473\n        divisors += 479\n        divisors += 483\n\
    \        divisors += 489\n        divisors += 49\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcpim_phu.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792519
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(57)\n\
    \        divisors.add(61)\n        divisors.add(67)\n        divisors.add(73)\n\
    \        divisors.add(79)\n        divisors.add(83)\n        divisors.add(89)\n\
    \        divisors.add(97)\n        divisors.add(101)\n        divisors.add(103)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(111)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(213)\n\
    \        divisors.add(217)\n        divisors.add(219)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(369)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(383)\n        divisors.add(389)\n\
    \        divisors.add(397)\n        divisors.add(401)\n        divisors.add(409)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprsbm9vqu.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792519
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 1 until n) {\n            if (n % d == 0) {\n             \
    \   divisors += d\n            }\n        }\n        divisors.max\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm3lcahbk.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpm3lcahbk.scala:9:26 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m until n) {\n\
    \e[31m\e[31m  |\e[0m                          ^\e[0m\n\e[31m  |\e[0m         \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       \
    \   Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792523
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6g0fcnf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpg6g0fcnf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (i <- 1 to n by 2) {\n            if (n % i == 0) {\n                divisors\
    \ += i\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm7u9c1b8.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpm7u9c1b8.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(273)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(365)\n\
    \        divisors.add(367)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(409)\n        divisors.add(419)\n        divisors.add(42\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9gfcnkz5.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9gfcnkz5.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 247\n        divisors += 251\n        divisors += 257\n \
    \       divisors += 263\n        divisors += 269\n        divisors += 271\n  \
    \      divisors += 277\n        divisors += 281\n        divisors += 283\n   \
    \     divisors += 293\n        divisors += 307\n        divisors += 311\n    \
    \    divisors += 313\n        divisors += 317\n        divisors += 323\n     \
    \   divisors += 329\n        divisors += 331\n        divisors += 337\n      \
    \  divisors += 343\n        divisors += 349\n        divisors += 353\n       \
    \ divisors += 359\n        divisors += 363\n        divisors += 369\n        divisors\
    \ += 373\n        divisors += 379\n        divisors += 383\n        divisors +=\
    \ 389\n        divisors += 397\n        divisors += 401\n        divisors += 407\n\
    \        divisors += 413\n        divisors += 421\n        divisors += 427\n \
    \       divisors += 433\n        divisors += 439\n        divisors += 443\n  \
    \      divisors += 449\n        divisors += 457\n        divisors += 461\n   \
    \     divisors += 467\n        divisors += 473\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4n_cj9x1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8ftj_oem.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp8ftj_oem.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 343\n        divisors += 349\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 367\n        divisors += 373\n      \
    \  divisors += 379\n        divisors += 383\n        divisors += 389\n       \
    \ divisors += 397\n        divisors += 401\n        divisors += 407\n        divisors\
    \ += 413\n        divisors += 421\n        divisors += 431\n        divisors +=\
    \ 437\n        divisors += 443\n        divisors += 449\n        divisors += 457\n\
    \        divisors += 461\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpymep80rq.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpymep80rq.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorIndex\
    \ = 0\n        var divisor = 0\n        var divisorIndex = 0\n        var remainder\
    \ = 0\n        for(i <- 1 to n) {\n            divisor = i\n            remainder\
    \ = n % divisor\n            divisorIndex = i\n            while(divisor != 0)\
    \ {\n                if(remainder % divisor == 0) {\n                    divisor\
    \ = divisor - 1\n                    remainder = remainder / divisor\n       \
    \         } else {\n                    divisor = divisor + 1\n              \
    \      remainder = remainder / divisor\n                }\n            }\n   \
    \         if(remainder == 0) {\n                maxDivisor = divisorIndex\n  \
    \              maxDivisorIndex = divisorIndex\n            }\n        }\n    \
    \    if(maxDivisor == 0) {\n            largestDivisor(n - 1)\n        } else\
    \ {\n            maxDivisor\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjs2307_8.scala:13:22\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpjs2307_8.scala:15:24 --------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m            remainder = n % divisor\n\e[31m\e[31m   |\e[0m           \
    \             ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                        Found:\
    \    Long\n\e[31m   |\e[0m                        Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n by 2){\n            divisors += i\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7ueebpfw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7ueebpfw.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6g0fcnf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpg6g0fcnf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(101)\n        divisors.add(107)\n        divisors.add(109)\n\
    \        divisors.add(113)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(139)\n        divisors.add(149)\n\
    \        divisors.add(151)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(253)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(269)\n        divisors.add(271)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(293)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(331)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(369)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(401)\n        divisors.add(409)\n        divisors.add(419)\n\
    \        divisors.add(421)\n        divisors.add(427)\n        divisor\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppr13mdti.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmppr13mdti.scala:93:8 -------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 343\n        divisors += 349\n        divisors += 351\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 409\n        divisors += 419\n        divisors += 421\n        divisors +=\
    \ 431\n        divisors += 433\n        divisors += 439\n        divisors += 443\n\
    \        divisors += 449\n        divisors += 45\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3yjc1dlw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var currentDivisor = 1\n        for(i <- 1 to n){\n           \
    \ currentDivisor = i * currentDivisor\n            if(currentDivisor % 2 == 0){\n\
    \                if(currentDivisor > maxDivisor){\n                    maxDivisor\
    \ = currentDivisor\n                    maxDivisorFactor = i\n               \
    \ }\n            }\n        }\n        maxDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxd831bjh.scala:11:22\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var largestDivisor = 0\n        var divisor = 0\n\
    \        for(i <- 1 to n / 2){\n            divisor = i\n            while(divisor\
    \ != 0){\n                if(n % divisor == 0){\n                    largestDivisor\
    \ = divisor\n                    break\n                }\n                divisor\
    \ = divisor - 1\n            }\n        }\n        largestDivisor\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1n5vemnc.scala:10:22\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n / \e[31m2\e[0m){\n\e[31m\e[31m   |\e[0m                      ^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Found:    Long\n\e[31m   |\e[0m    \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp1n5vemnc.scala:15:20 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m                    break\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: break\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6g0fcnf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpg6g0fcnf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 257\n        divisors +=\
    \ 263\n        divisors += 269\n        divisors += 271\n        divisors += 277\n\
    \        divisors += 281\n        divisors += 283\n        divisors += 293\n \
    \       divisors += 307\n        divisors += 311\n        divisors += 313\n  \
    \      divisors += 317\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 343\n    \
    \    divisors += 349\n        divisors += 353\n        divisors += 359\n     \
    \   divisors += 367\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 413\n        divisors\
    \ += 421\n        divisors += 431\n        divisors += 437\n        divisors +=\
    \ 443\n        divisors += 449\n        divisors += 457\n        divisors += 461\n\
    \        divisors += 467\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpeish15po.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpeish15po.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var largestDivisor = 0\n        var largestDivisorFactor\
    \ = 0\n        var currentDivisor = 1\n        var currentDivisorFactor = 1\n\
    \        var currentDivisorFactorFactor = 1\n        var currentDivisorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactor = 1\n        var currentDivisorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactor = 1\n  \
    \      var currentDivisorFactorFactorFactorFactorFactorFactorFactor = 1\n    \
    \    var currentDivisorFactorFactorFactorFactorFactorFactorFactor = 1\n      \
    \  var currentDivisorFactorFactorFactorFactorFactorFactorFactor = 1\n        var\
    \ currentDivisorFactorFactorFactorFactorFactorFactorFactor = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1\n        var currentDivisorFactorFactorFactorFactor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5jo88s1r.scala:47:4 ----------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5jo88s1r.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mcurrentDivisorFactorFactorFactorFactorFactorFactorFactor\e[0m = \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorFactorFactorFactorFactorFactorFactorFactor is\
    \ already defined as \e[33mvariable\e[0m \e[35mcurrentDivisorFactorFactorFactorFactorFactorFactorFactor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5jo88s1r.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorFactorFactorFactorFactorFactorFactorFactor\e\
    [0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorFactorFactorFactorFactorFactorFactorFactor is\
    \ already defined as \e[33mvariable\e[0m \e[35mcurrentDivisorFactorFactorFactorFactorFactorFactorFactor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5jo88s1r.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorFactorFactorFactorFactorFactorFactorFactor\e\
    [0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorFactorFactorFactorFactorFactorFactorFactor is\
    \ already defined as \e[33mvariable\e[0m \e[35mcurrentDivisorFactorFactorFactorFactorFactorFactorFactor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5jo88s1r.sca"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(10)\n        divisors.add(15)\n        divisors.add(20)\n\
    \        divisors.add(25)\n        divisors.add(30)\n        divisors.add(35)\n\
    \        divisors.add(40)\n        divisors.add(45)\n        divisors.add(50)\n\
    \        divisors.add(55)\n        divisors.add(60)\n        divisors.add(65)\n\
    \        divisors.add(70)\n        divisors.add(75)\n        divisors.add(80)\n\
    \        divisors.add(85)\n        divisors.add(90)\n        divisors.add(95)\n\
    \        divisors.add(100)\n        divisors.add(105)\n        divisors.add(110)\n\
    \        divisors.add(115)\n        divisors.add(120)\n        divisors.add(125)\n\
    \        divisors.add(130)\n        divisors.add(135)\n        divisors.add(140)\n\
    \        divisors.add(145)\n        divisors.add(150)\n        divisors.add(155)\n\
    \        divisors.add(160)\n        divisors.add(165)\n        divisors.add(170)\n\
    \        divisors.add(175)\n        divisors.add(180)\n        divisors.add(185)\n\
    \        divisors.add(190)\n        divisors.add(195)\n        divisors.add(200)\n\
    \        divisors.add(205)\n        divisors.add(210)\n        divisors.add(215)\n\
    \        divisors.add(220)\n        divisors.add(225)\n        divisors.add(230)\n\
    \        divisors.add(235)\n        divisors.add(240)\n        divisors.add(245)\n\
    \        divisors.add(250)\n        divisors.add(255)\n        divisors.add(260)\n\
    \        divisors.add(265)\n        divisors.add(270)\n        divisors.add(275)\n\
    \        divisors.add(280)\n        divisors.add(285)\n        divisors.add(290)\n\
    \        divisors.add(295)\n        divisors.add(300)\n        divisors.add(305)\n\
    \        divisors.add(310)\n        divisors.add(315)\n        divisors.add(320)\n\
    \        divisors.add(325)\n        divisors.add(330)\n        divisors.add(335)\n\
    \        divisors.add(340)\n        divisors.add(345)\n        divisors.add(350)\n\
    \        divisors.add(355)\n        divisors.add(360)\n        divisors.add(365)\n\
    \        divisors.add(370)\n        divisors.add(375)\n        divisors.add(380)\n\
    \        divisors.add(385)\n        divisors.add(390)\n        divisors.add(395)\n\
    \        divisors.add(400)\n        divisors.add(405)\n        divisors.add(410)\n\
    \        divisors.add(415)\n        divisors.add(4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpn1zxt_zc.scala:96:4 ----------------------------\e\
    [0m\e[0m\n\e[31m96 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn1zxt_zc.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 247\n        divisors += 251\n        divisors += 257\n \
    \       divisors += 263\n        divisors += 269\n        divisors += 271\n  \
    \      divisors += 277\n        divisors += 281\n        divisors += 283\n   \
    \     divisors += 293\n        divisors += 307\n        divisors += 311\n    \
    \    divisors += 317\n        divisors += 323\n        divisors += 329\n     \
    \   divisors += 331\n        divisors += 337\n        divisors += 343\n      \
    \  divisors += 349\n        divisors += 353\n        divisors += 359\n       \
    \ divisors += 367\n        divisors += 373\n        divisors += 379\n        divisors\
    \ += 383\n        divisors += 389\n        divisors += 397\n        divisors +=\
    \ 401\n        divisors += 409\n        divisors += 419\n        divisors += 429\n\
    \        divisors += 431\n        divisors += 439\n        divisors += 443\n \
    \       divisors += 449\n        divisors += 457\n        divisors += 461\n  \
    \      divisors += 463\n        divisors += 467\n        divisors += 479\n   \
    \     divisors += 481\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnmojbsyr.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(103)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(139)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(251)\n        divisors.add(253)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(365)\n\
    \        divisors.add(367)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(381)\n        divisors.add(383)\n        divisors.add(409)\n\
    \        divisors.add(419)\n        divisors.add(421)\n        divisors.add(4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdt1nhe4b.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt1nhe4b.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 349\n    \
    \    divisors += 351\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 413\n        divisors\
    \ += 421\n        divisors += 427\n        divisors += 439\n        divisors +=\
    \ 443\n        divisors += 449\n        divisors += 457\n        divisors += 461\n\
    \        divisors += 467\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpdwkoz3ls.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpdwkoz3ls.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792523
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(333)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(369)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(401)\n        divisors.add(409)\n        divisors.add(419)\n\
    \        divisors.add(421)\n        divisors.add(423)\n        divisors.add(4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0quazfpi.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0quazfpi.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 319\n   \
    \     divisors += 323\n        divisors += 327\n        divisors += 331\n    \
    \    divisors += 337\n        divisors += 343\n        divisors += 347\n     \
    \   divisors += 351\n        divisors += 353\n        divisors += 359\n      \
    \  divisors += 363\n        divisors += 367\n        divisors += 373\n       \
    \ divisors += 379\n        divisors += 383\n        divisors += 389\n        divisors\
    \ += 397\n        divisors += 401\n        divisors += 407\n        divisors +=\
    \ 411\n        divisors += 413\n        divisors += 417\n        divisors += 419\n\
    \        divisors += 421\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyk1t97t7.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(10)\n        divisors.add(15)\n        divisors.add(20)\n\
    \        divisors.add(25)\n        divisors.add(30)\n        divisors.add(35)\n\
    \        divisors.add(40)\n        divisors.add(45)\n        divisors.add(50)\n\
    \        divisors.add(55)\n        divisors.add(60)\n        divisors.add(65)\n\
    \        divisors.add(70)\n        divisors.add(75)\n        divisors.add(80)\n\
    \        divisors.add(85)\n        divisors.add(90)\n        divisors.add(95)\n\
    \        divisors.add(100)\n        divisors.add(105)\n        divisors.add(110)\n\
    \        divisors.add(115)\n        divisors.add(120)\n        divisors.add(125)\n\
    \        divisors.add(130)\n        divisors.add(135)\n        divisors.add(140)\n\
    \        divisors.add(145)\n        divisors.add(150)\n        divisors.add(155)\n\
    \        divisors.add(160)\n        divisors.add(165)\n        divisors.add(170)\n\
    \        divisors.add(175)\n        divisors.add(180)\n        divisors.add(185)\n\
    \        divisors.add(190)\n        divisors.add(195)\n        divisors.add(200)\n\
    \        divisors.add(205)\n        divisors.add(210)\n        divisors.add(215)\n\
    \        divisors.add(220)\n        divisors.add(225)\n        divisors.add(230)\n\
    \        divisors.add(235)\n        divisors.add(240)\n        divisors.add(245)\n\
    \        divisors.add(250)\n        divisors.add(255)\n        divisors.add(260)\n\
    \        divisors.add(265)\n        divisors.add(270)\n        divisors.add(275)\n\
    \        divisors.add(280)\n        divisors.add(285)\n        divisors.add(290)\n\
    \        divisors.add(295)\n        divisors.add(300)\n        divisors.add(305)\n\
    \        divisors.add(310)\n        divisors.add(315)\n        divisors.add(320)\n\
    \        divisors.add(325)\n        divisors.add(330)\n        divisors.add(335)\n\
    \        divisors.add(340)\n        divisors.add(345)\n        divisors.add(350)\n\
    \        divisors.add(355)\n        divisors.add(360)\n        divisors.add(365)\n\
    \        divisors.add(370)\n        divisors.add(375)\n        divisors.add(380)\n\
    \        divisors.add(385)\n        divisors.add(390)\n        divisors.add(395)\n\
    \        divisors.add(400)\n        divisors.add(405)\n        divisors.add(410)\n\
    \        divisors.add(415)\n        divisors.add(4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpn1zxt_zc.scala:96:4 ----------------------------\e\
    [0m\e[0m\n\e[31m96 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn1zxt_zc.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 1 to n by 2) {\n            if (n % d == 0) {\n           \
    \     divisors += d\n            }\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpirqas5qd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpirqas5qd.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.update(n/2, n/3)\n        divisors.update(n/4, n/5)\n        divisors.update(n/6,\
    \ n/7)\n        divisors.update(n/8, n/9)\n        divisors.update(n/10, n/11)\n\
    \        divisors.update(n/12, n/13)\n        divisors.update(n/14, n/15)\n  \
    \      divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpksow8cdc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n by 2){\n            divisors += i\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7ueebpfw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7ueebpfw.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (i <- 1 to n by 2)\n            if (n % i == 0)\n                divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7q_jpp_b.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7q_jpp_b.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792525
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 307\n        divisors += 311\n     \
    \   divisors += 313\n        divisors += 317\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 343\n        divisors += 347\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 397\n        divisors += 401\n        divisors += 407\n \
    \       divisors += 413\n        divisors += 421\n        divisors += 423\n  \
    \      divisors += 429\n        divisors += 433\n        divisors += 439\n   \
    \     divisors += 443\n        divisors += 44\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxlk60z2f.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ListBuffer[Long]()\n    \
    \    for (d <- 1 to n / 2) divisors += d\n        divisors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpui2pgd6k.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpui2pgd6k.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n / \e[31m2\e\
    [0m) divisors += d\n\e[31m\e[31m  |\e[0m                       ^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Found:    Long\n\e[31m  |\e[0m            \
    \           Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792525
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0L\n        var currentDivisor = 0L\n        for(i <- 1 to\
    \ n) {\n            currentDivisor = i\n            while(currentDivisor != 1)\
    \ {\n                if(divisors.contains(currentDivisor)) {\n               \
    \     currentDivisor = currentDivisor / 2\n                } else {\n        \
    \            divisors += currentDivisor\n                    currentDivisor =\
    \ currentDivisor / 2\n                }\n            }\n            if(currentDivisor\
    \ > maxDivisor) {\n                maxDivisor = currentDivisor\n            }\n\
    \        }\n        maxDivisor\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt6b769p.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdt6b769p.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 257\n        divisors += 263\n        divisors += 269\n        divisors +=\
    \ 271\n        divisors += 277\n        divisors += 281\n        divisors += 283\n\
    \        divisors += 293\n        divisors += 307\n        divisors += 311\n \
    \       divisors += 313\n        divisors += 317\n        divisors += 323\n  \
    \      divisors += 329\n        divisors += 331\n        divisors += 337\n   \
    \     divisors += 343\n        divisors += 349\n        divisors += 353\n    \
    \    divisors += 359\n        divisors += 363\n        divisors += 369\n     \
    \   divisors += 373\n        divisors += 379\n        divisors += 383\n      \
    \  divisors += 389\n        divisors += 397\n        divisors += 401\n       \
    \ divisors += 407\n        divisors += 413\n        divisors += 421\n        divisors\
    \ += 427\n        divisors += 433\n        divisors += 439\n        divisors +=\
    \ 443\n        divisors += 449\n        divisors += 457\n        divisors += 461\n\
    \        divisors += 467\n        divisors += 47\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj5edwqxn.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792525
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgc96gkm9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpgc96gkm9.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 247\n        divisors += 251\n        divisors += 257\n \
    \       divisors += 263\n        divisors += 269\n        divisors += 271\n  \
    \      divisors += 277\n        divisors += 281\n        divisors += 283\n   \
    \     divisors += 293\n        divisors += 307\n        divisors += 311\n    \
    \    divisors += 313\n        divisors += 317\n        divisors += 323\n     \
    \   divisors += 329\n        divisors += 331\n        divisors += 337\n      \
    \  divisors += 343\n        divisors += 349\n        divisors += 351\n       \
    \ divisors += 359\n        divisors += 363\n        divisors += 369\n        divisors\
    \ += 373\n        divisors += 379\n        divisors += 383\n        divisors +=\
    \ 389\n        divisors += 397\n        divisors += 401\n        divisors += 407\n\
    \        divisors += 413\n        divisors += 421\n        divisors += 427\n \
    \       divisors += 439\n        divisors += 443\n        divisors += 449\n  \
    \      divisors += 457\n        divisors += 461\n        divisors += 467\n   \
    \     divisors += 473\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc0izrnlc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792525
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 1 to n by 2)\n            if (n % d == 0)\n               \
    \ divisors += d\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7yszywka.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp7yszywka.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk6vnp3mi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpk6vnp3mi.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 257\n        divisors += 263\n        divisors += 269\n        divisors +=\
    \ 271\n        divisors += 277\n        divisors += 281\n        divisors += 283\n\
    \        divisors += 293\n        divisors += 307\n        divisors += 311\n \
    \       divisors += 313\n        divisors += 317\n        divisors += 323\n  \
    \      divisors += 329\n        divisors += 331\n        divisors += 337\n   \
    \     divisors += 343\n        divisors += 349\n        divisors += 353\n    \
    \    divisors += 359\n        divisors += 363\n        divisors += 369\n     \
    \   divisors += 373\n        divisors += 379\n        divisors += 383\n      \
    \  divisors += 389\n        divisors += 397\n        divisors += 401\n       \
    \ divisors += 409\n        divisors += 419\n        divisors += 421\n        divisors\
    \ += 431\n        divisors += 433\n        divisors += 439\n        divisors +=\
    \ 443\n        divisors += 449\n        divisors += 457\n        divisors += 461\n\
    \        divisors += 463\n        divisors += 467\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpixh77sn0.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792525
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var maxDivisorFactorIndex = 0\n        var divisor = 0\n      \
    \  var divisorFactor = 0\n        var divisorFactorIndex = 0\n        var divisorFactorIndex2\
    \ = 0\n        var divisorFactorIndex3 = 0\n        var divisorFactorIndex4 =\
    \ 0\n        var divisorFactorIndex5 = 0\n        var divisorFactorIndex6 = 0\n\
    \        var divisorFactorIndex7 = 0\n        var divisorFactorIndex8 = 0\n  \
    \      var divisorFactorIndex9 = 0\n        var divisorFactorIndex10 = 0\n   \
    \     var divisorFactorIndex11 = 0\n        var divisorFactorIndex12 = 0\n   \
    \     var divisorFactorIndex13 = 0\n        var divisorFactorIndex14 = 0\n   \
    \     var divisorFactorIndex15 = 0\n        var divisorFactorIndex16 = 0\n   \
    \     var divisorFactorIndex17 = 0\n        var divisorFactorIndex18 = 0\n   \
    \     var divisorFactorIndex19 = 0\n        var divisorFactorIndex20 = 0\n   \
    \     var divisorFactorIndex21 = 0\n        var divisorFactorIndex22 = 0\n   \
    \     var divisorFactorIndex23 = 0\n        var divisorFactorIndex24 = 0\n   \
    \     var divisorFactorIndex25 = 0\n        var divisorFactorIndex26 = 0\n   \
    \     var divisorFactorIndex27 = 0\n        var divisorFactorIndex28 = 0\n   \
    \     var divisorFactorIndex29 = 0\n        var divisorFactorIndex30 = 0\n   \
    \     var divisorFactorIndex31 = 0\n        var divisorFactorIndex32 = 0\n   \
    \     var divisorFactorIndex33 = 0\n        var divisorFactorIndex34 = 0\n   \
    \     var divisorFactorIndex35 = 0\n        var divisorFactorIndex36 = 0\n   \
    \     var divisorFactorIndex37 = 0\n        var divisorFactorIndex38 = 0\n   \
    \     var divisorFactorIndex39 = 0\n        var divisorFactorIndex40 = 0\n   \
    \     var divisorFactorIndex41 = 0\n        var divisorFactorIndex42 = 0\n   \
    \     var divisorFactorIndex43 = 0\n        var divisorFactorIndex44 = 0\n   \
    \     var divisorFactorIndex45 = 0\n        var divisorFactorIndex46 = 0\n   \
    \     var divisorFactorIndex47 = 0\n        var divisorFactorIndex48 = 0\n   \
    \     var divisorFactorIndex49 = 0\n        var divisorFactorIndex50 = 0\n   \
    \     var divisorFactorIndex51 = 0\n        var divisorFactorIndex52 = 0\n   \
    \     var divisorFactorIndex53 = 0\n        var divisorFactorIndex54 = 0\n   \
    \     var divisorFactorIndex55 = 0\n        var divisorFactorIndex56 = 0\n   \
    \     var divisorFactorIndex57 = 0\n        var divisorFactorIndex58 = 0\n   \
    \     var divisorFactorIndex59 = 0\n        var divisorFactorIndex60 = 0\n   \
    \     var divisorFactorIndex61 = 0\n        var divisorFactorIndex62 = 0\n   \
    \     var divisorFactorIndex63 = 0\n        var divisorFactorIndex64 = 0\n   \
    \     var divisorFactorIndex65 = 0\n        var divisorFactorIndex66 = 0\n   \
    \     var divisorFactorIndex67 = 0\n        var divisorFactorIndex68 = 0\n   \
    \     var divisorFactorIndex69 = 0\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpec_45t05.scala:83:5\
    \ ---------------------\e[0m\e[0m\n\e[31m83 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 341\n        divisors += 347\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 409\n        divisors += 419\n        divisors\
    \ += 421\n        divisors += 431\n        divisors += 433\n        divisors +=\
    \ 439\n        divisors += 443\n        divisors += 449\n        divisors += 457\n\
    \        divisors += 461\n        divisors += 463\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2wk4w6lv.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(333)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(369)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(401)\n        divisors.add(409)\n        divisors.add(419)\n\
    \        divisors.add(421)\n        divisors.add(423)\n        divisors.add(4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0quazfpi.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0quazfpi.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6g0fcnf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpg6g0fcnf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 1 to n by 2)\n            if (n % d == 0)\n               \
    \ divisors += d\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7yszywka.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp7yszywka.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n){\n            val div = i / 2\n            if(div % 2 == 0){\n  \
    \              divisors += div\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdfw72kez.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdfw72kez.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6g0fcnf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpg6g0fcnf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(111)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(369)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(383)\n        divisors.add(389)\n\
    \        divisors.add(397)\n        divisors.add(401)\n        divisors.add(409)\n\
    \        divisors.add(419)\n        divisors.add(421)\n        divisors.add(4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr1khncjg.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr1khncjg.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 2 to n by 2) {\n            if (n % d == 0) {\n           \
    \     divisors += d\n            }\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp62ttsho9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp62ttsho9.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        divisors += 2\n        divisors += 3\n        divisors += 5\n       \
    \ divisors += 7\n        divisors += 11\n        divisors += 13\n        divisors\
    \ += 17\n        divisors += 19\n        divisors += 23\n        divisors += 29\n\
    \        divisors += 31\n        divisors += 37\n        divisors += 41\n    \
    \    divisors += 43\n        divisors += 47\n        divisors += 53\n        divisors\
    \ += 59\n        divisors += 61\n        divisors += 67\n        divisors += 71\n\
    \        divisors += 73\n        divisors += 79\n        divisors += 83\n    \
    \    divisors += 89\n        divisors += 97\n        divisors += 101\n       \
    \ divisors += 103\n        divisors += 107\n        divisors += 109\n        divisors\
    \ += 113\n        divisors += 127\n        divisors += 131\n        divisors +=\
    \ 137\n        divisors += 139\n        divisors += 147\n        divisors += 151\n\
    \        divisors += 157\n        divisors += 163\n        divisors += 167\n \
    \       divisors += 173\n        divisors += 179\n        divisors += 181\n  \
    \      divisors += 191\n        divisors += 193\n        divisors += 197\n   \
    \     divisors += 199\n        divisors += 211\n        divisors += 223\n    \
    \    divisors += 227\n        divisors += 229\n        divisors += 233\n     \
    \   divisors += 239\n        divisors += 241\n        divisors += 243\n      \
    \  divisors += 247\n        divisors += 251\n        divisors += 253\n       \
    \ divisors += 257\n        divisors += 263\n        divisors += 269\n        divisors\
    \ += 271\n        divisors += 277\n        divisors += 281\n        divisors +=\
    \ 283\n        divisors += 293\n        divisors += 307\n        divisors += 311\n\
    \        divisors += 313\n        divisors += 317\n        divisors += 323\n \
    \       divisors += 329\n        divisors += 331\n        divisors += 337\n  \
    \      divisors += 343\n        divisors += 349\n        divisors += 353\n   \
    \     divisors += 359\n        divisors += 363\n        divisors += 369\n    \
    \    divisors += 373\n        divisors += 379\n        divisors += 383\n     \
    \   divisors += 389\n        divisors += 393\n        divisors += 397\n      \
    \  divisors += 401\n        divisors += 407\n        divisors += 411\n       \
    \ divisors += 413\n        divisors += 417\n        divisors += 419\n        divisors\
    \ += 421\n        divisors += 423\n        divisors += \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp42or6hpp.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp42or6hpp.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(369)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(383)\n        divisors.add(389)\n\
    \        divisors.add(397)\n        divisors.add(401)\n        divisors.add(409)\n\
    \        divisors.add(419)\n        divisors.add(421)\n        divisors.add(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp8hz95z9r.scala:93:21 ---------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp8hz95z9r.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.update(1, n)\n        divisors.update(n/2, n/2)\n        divisors.update(n/3,\
    \ n/3)\n        divisors.update(n/4, n/4)\n        divisors.update(n/5, n/5)\n\
    \        divisors.update(n/6, n/6)\n        divisors.update(n/7, n/7)\n      \
    \  divisors.update(n/8, n/8)\n        divisors.update(n/9, n/9)\n        divisors.update(n/10,\
    \ n/10)\n        divisors.update(n/11, n/11)\n        divisors.update(n/12, n/12)\n\
    \        divisors.update(n/13, n/13)\n        divisors.update(n/14, n/14)\n  \
    \      divisors.update(n/15, n/15)\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgcjcc5ez.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n){\n            val d = i\n            while(d % 2 == 0){\n       \
    \         d /= 2\n            }\n            divisors += d\n        }\n      \
    \  divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7e8htf6c.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7e8htf6c.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7e8htf6c.scala:12:18\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var maxDivisorFactorIndex = 0\n        var divisor = 0\n      \
    \  var divisorFactor = 0\n        var divisorFactorIndex = 0\n        var divisorFactorIndex2\
    \ = 0\n        var divisorFactorIndex3 = 0\n        var divisorFactorIndex4 =\
    \ 0\n        var divisorFactorIndex5 = 0\n        var divisorFactorIndex6 = 0\n\
    \        var divisorFactorIndex7 = 0\n        var divisorFactorIndex8 = 0\n  \
    \      var divisorFactorIndex9 = 0\n        var divisorFactorIndex10 = 0\n   \
    \     var divisorFactorIndex11 = 0\n        var divisorFactorIndex12 = 0\n   \
    \     var divisorFactorIndex13 = 0\n        var divisorFactorIndex14 = 0\n   \
    \     var divisorFactorIndex15 = 0\n        var divisorFactorIndex16 = 0\n   \
    \     var divisorFactorIndex17 = 0\n        var divisorFactorIndex18 = 0\n   \
    \     var divisorFactorIndex19 = 0\n        var divisorFactorIndex20 = 0\n   \
    \     var divisorFactorIndex21 = 0\n        var divisorFactorIndex22 = 0\n   \
    \     var divisorFactorIndex23 = 0\n        var divisorFactorIndex24 = 0\n   \
    \     var divisorFactorIndex25 = 0\n        var divisorFactorIndex26 = 0\n   \
    \     var divisorFactorIndex27 = 0\n        var divisorFactorIndex28 = 0\n   \
    \     var divisorFactorIndex29 = 0\n        var divisorFactorIndex30 = 0\n   \
    \     var divisorFactorIndex31 = 0\n        var divisorFactorIndex32 = 0\n   \
    \     var divisorFactorIndex33 = 0\n        var divisorFactorIndex34 = 0\n   \
    \     var divisorFactorIndex35 = 0\n        var divisorFactorIndex36 = 0\n   \
    \     var divisorFactorIndex37 = 0\n        var divisorFactorIndex38 = 0\n   \
    \     var divisorFactorIndex39 = 0\n        var divisorFactorIndex40 = 0\n   \
    \     var divisorFactorIndex41 = 0\n        var divisorFactorIndex42 = 0\n   \
    \     var divisorFactorIndex43 = 0\n        var divisorFactorIndex44 = 0\n   \
    \     var divisorFactorIndex45 = 0\n        var divisorFactorIndex46 = 0\n   \
    \     var divisorFactorIndex47 = 0\n        var divisorFactorIndex48 = 0\n   \
    \     var divisorFactorIndex49 = 0\n        var divisorFactorIndex50 = 0\n   \
    \     var divisorFactorIndex51 = 0\n        var divisorFactorIndex52 = 0\n   \
    \     var divisorFactorIndex53 = 0\n        var divisorFactorIndex54 = 0\n   \
    \     var divisorFactorIndex55 = 0\n        var divisorFactorIndex56 = 0\n   \
    \     var divisorFactorIndex57 = 0\n        var divisorFactorIndex58 = 0\n   \
    \     var divisorFactorIndex59 = 0\n        var divisorFactorIndex60 = 0\n   \
    \     var divisorFactorIndex61 = 0\n        var divisorFactorIndex62 = 0\n   \
    \     var divisorFactorIndex63 = 0\n        var divisorFactorIndex64 = 0\n   \
    \     var divisorFactorIndex65 = 0\n        var divisorFactorIndex66 = 0\n   \
    \     var divisorFactorIndex67 = 0\n        var divisorFactorIndex68 = 0\n   \
    \     var divisorFactorIndex69 = 0\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpec_45t05.scala:83:5\
    \ ---------------------\e[0m\e[0m\n\e[31m83 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(369)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(383)\n        divisors.add(389)\n\
    \        divisors.add(397)\n        divisors.add(401)\n        divisors.add(409)\n\
    \        divisors.add(419)\n        divisors.add(421)\n        divisors.add(427)\n\
    \        divisors.add(433)\n        divisors.add(439)\n        divisor\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1h13hkuh.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp1h13hkuh.scala:93:8 -------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ maxDivisor = 0\n        for (i <- 1 to n by 2)\n            if (n % i == 0)\n\
    \                divisors.add(i)\n        for (divisor <- divisors)\n        \
    \    if (divisor > maxDivisor)\n                maxDivisor = divisor\n       \
    \ maxDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf15hee83.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpf15hee83.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 247\n        divisors += 251\n        divisors += 257\n \
    \       divisors += 263\n        divisors += 269\n        divisors += 271\n  \
    \      divisors += 277\n        divisors += 281\n        divisors += 283\n   \
    \     divisors += 293\n        divisors += 307\n        divisors += 311\n    \
    \    divisors += 313\n        divisors += 317\n        divisors += 323\n     \
    \   divisors += 329\n        divisors += 331\n        divisors += 337\n      \
    \  divisors += 343\n        divisors += 349\n        divisors += 351\n       \
    \ divisors += 359\n        divisors += 363\n        divisors += 369\n        divisors\
    \ += 373\n        divisors += 379\n        divisors += 383\n        divisors +=\
    \ 389\n        divisors += 397\n        divisors += 401\n        divisors += 409\n\
    \        divisors += 419\n        divisors += 421\n        divisors += 431\n \
    \       divisors += 433\n        divisors += 439\n        divisors += 443\n  \
    \      divisors += 449\n        divisors += 457\n        divisors += 461\n   \
    \     divisors += 463\n        divisors += 467\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6d69kjsm.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ largestDivisor = 0L\n        for(i <- 1 to n by 2){\n            divisors +=\
    \ i\n        }\n        divisors.foreach { divisor =>\n            if(n % divisor\
    \ == 0){\n                largestDivisor = divisor\n            }\n        }\n\
    \        largestDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp815uibot.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp815uibot.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 247\n        divisors += 251\n        divisors += 257\n \
    \       divisors += 263\n        divisors += 269\n        divisors += 271\n  \
    \      divisors += 277\n        divisors += 281\n        divisors += 283\n   \
    \     divisors += 293\n        divisors += 307\n        divisors += 311\n    \
    \    divisors += 313\n        divisors += 317\n        divisors += 323\n     \
    \   divisors += 329\n        divisors += 331\n        divisors += 337\n      \
    \  divisors += 341\n        divisors += 347\n        divisors += 353\n       \
    \ divisors += 359\n        divisors += 363\n        divisors += 369\n        divisors\
    \ += 373\n        divisors += 379\n        divisors += 383\n        divisors +=\
    \ 389\n        divisors += 397\n        divisors += 401\n        divisors += 409\n\
    \        divisors += 419\n        divisors += 421\n        divisors += 431\n \
    \       divisors += 433\n        divisors += 439\n        divisors += 443\n  \
    \      divisors += 449\n        divisors += 457\n        divisors += 461\n   \
    \     divisors += 463\n        divisors += 467\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphm2d15fj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n){\n            divisors += i\n        }\n        divisors.toList.sortWith(_\
    \ < _).last\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp337pd7e6.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp337pd7e6.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (i <- 1 to n) divisors += i\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2psqhuk9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2psqhuk9.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(4)\n\
    \        divisors.add(5)\n        divisors.add(6)\n        divisors.add(7)\n \
    \       divisors.add(8)\n        divisors.add(9)\n        divisors.add(10)\n \
    \       divisors.add(11)\n        divisors.add(12)\n        divisors.add(13)\n\
    \        divisors.add(14)\n        divisors.add(15)\n        divisors.add(16)\n\
    \        divisors.add(17)\n        divisors.add(18)\n        divisors.add(19)\n\
    \        divisors.add(20)\n        divisors.add(21)\n        divisors.add(22)\n\
    \        divisors.add(23)\n        divisors.add(24)\n        divisors.add(25)\n\
    \        divisors.add(26)\n        divisors.add(27)\n        divisors.add(28)\n\
    \        divisors.add(29)\n        divisors.add(30)\n        divisors.add(31)\n\
    \        divisors.add(32)\n        divisors.add(33)\n        divisors.add(34)\n\
    \        divisors.add(35)\n        divisors.add(36)\n        divisors.add(37)\n\
    \        divisors.add(38)\n        divisors.add(39)\n        divisors.add(40)\n\
    \        divisors.add(41)\n        divisors.add(42)\n        divisors.add(43)\n\
    \        divisors.add(44)\n        divisors.add(45)\n        divisors.add(46)\n\
    \        divisors.add(47)\n        divisors.add(48)\n        divisors.add(49)\n\
    \        divisors.add(50)\n        divisors.add(51)\n        divisors.add(52)\n\
    \        divisors.add(53)\n        divisors.add(54)\n        divisors.add(55)\n\
    \        divisors.add(56)\n        divisors.add(57)\n        divisors.add(58)\n\
    \        divisors.add(59)\n        divisors.add(60)\n        divisors.add(61)\n\
    \        divisors.add(62)\n        divisors.add(63)\n        divisors.add(64)\n\
    \        divisors.add(65)\n        divisors.add(66)\n        divisors.add(67)\n\
    \        divisors.add(68)\n        divisors.add(69)\n        divisors.add(70)\n\
    \        divisors.add(71)\n        divisors.add(72)\n        divisors.add(73)\n\
    \        divisors.add(74)\n        divisors.add(75)\n        divisors.add(76)\n\
    \        divisors.add(77)\n        divisors.add(78)\n        divisors.add(79)\n\
    \        divisors.add(80)\n        divisors.add(81)\n        divisors.add(82)\n\
    \        divisors.add(83)\n        divisors.add(84)\n        divisors.add(85)\n\
    \        divisors.add(86)\n        divisors.add(87)\n        divisors.add(88)\n\
    \        divisors.add(\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp6cdk85g9.scala:97:21 ---------------------------\e\
    [0m\e[0m\n\e[31m97 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp6cdk85g9.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var maxDivisorFactorIndex = 0\n        var maxDivisorFactorIndex2\
    \ = 0\n        var maxDivisorFactorIndex3 = 0\n        var maxDivisorFactorIndex4\
    \ = 0\n        var maxDivisorFactorIndex5 = 0\n        var maxDivisorFactorIndex6\
    \ = 0\n        var maxDivisorFactorIndex7 = 0\n        var maxDivisorFactorIndex8\
    \ = 0\n        var maxDivisorFactorIndex9 = 0\n        var maxDivisorFactorIndex10\
    \ = 0\n        var maxDivisorFactorIndex11 = 0\n        var maxDivisorFactorIndex12\
    \ = 0\n        var maxDivisorFactorIndex13 = 0\n        var maxDivisorFactorIndex14\
    \ = 0\n        var maxDivisorFactorIndex15 = 0\n        var maxDivisorFactorIndex16\
    \ = 0\n        var maxDivisorFactorIndex17 = 0\n        var maxDivisorFactorIndex18\
    \ = 0\n        var maxDivisorFactorIndex19 = 0\n        var maxDivisorFactorIndex20\
    \ = 0\n        var maxDivisorFactorIndex21 = 0\n        var maxDivisorFactorIndex22\
    \ = 0\n        var maxDivisorFactorIndex23 = 0\n        var maxDivisorFactorIndex24\
    \ = 0\n        var maxDivisorFactorIndex25 = 0\n        var maxDivisorFactorIndex26\
    \ = 0\n        var maxDivisorFactorIndex27 = 0\n        var maxDivisorFactorIndex28\
    \ = 0\n        var maxDivisorFactorIndex29 = 0\n        var maxDivisorFactorIndex30\
    \ = 0\n        var maxDivisorFactorIndex31 = 0\n        var maxDivisorFactorIndex32\
    \ = 0\n        var maxDivisorFactorIndex33 = 0\n        var maxDivisorFactorIndex34\
    \ = 0\n        var maxDivisorFactorIndex35 = 0\n        var maxDivisorFactorIndex36\
    \ = 0\n        var maxDivisorFactorIndex37 = 0\n        var maxDivisorFactorIndex38\
    \ = 0\n        var maxDivisorFactorIndex39 = 0\n        var maxDivisorFactorIndex40\
    \ = 0\n        var maxDivisorFactorIndex41 = 0\n        var maxDivisorFactorIndex42\
    \ = 0\n        var maxDivisorFactorIndex43 = 0\n        var maxDivisorFactorIndex44\
    \ = 0\n        var maxDivisorFactorIndex45 = 0\n        var maxDivisorFactorIndex46\
    \ = 0\n        var maxDivisorFactorIndex47 = 0\n        var maxDivisorFactorIndex48\
    \ = 0\n        var maxDivisorFactorIndex49 = 0\n        var maxDivisorFactorIndex50\
    \ = 0\n        var maxDivisorFactorIndex51 = 0\n        var maxDivisorFactorIndex52\
    \ = 0\n        var maxDivisorFactorIndex53 = 0\n        var maxDivisorFactorIndex54\
    \ = 0\n        var maxDivisorFactorIndex55 = 0\n        var maxDivisorFactor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpeuclruth.scala:66:4 ----------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpeuclruth.scala:66:5 ---------------------\e[0m\e[0m\n\e[31m66 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.update(0, n)\n        divisors.update(1, n-1)\n        divisors.update(n/2,\
    \ n/2)\n        divisors.update(n/3, n/3)\n        divisors.update(n/4, n/4)\n\
    \        divisors.update(n/5, n/5)\n        divisors.update(n/6, n/6)\n      \
    \  divisors.update(n/7, n/7)\n        divisors.update(n/8, n/8)\n        divisors.update(n/9,\
    \ n/9)\n        divisors.update(n/10, n/10)\n        divisors.update(n/11, n/11)\n\
    \        divisors.update(n/12, n/12)\n        divisors.update(n/13, n/13)\n  \
    \      divisors.update(n/14, n/14)\n        divisors.update(n/15, n/15)\n    \
    \    divisors.update(n/16, n/16)\n        divisors.update(n/17, n/17)\n      \
    \  divisors.update(n/18, n/18)\n        divisors.update(n/19, n/19)\n        divisors.update(n/20,\
    \ n/20)\n        divisors.update(n/21, n/21)\n        divisors.update(n/22, n/22)\n\
    \        divisors.update(n/23, n/23)\n        divisors.update(n/24, n/24)\n  \
    \      divisors.update(n/25, n/25)\n        divisors.update(n/26, n/26)\n    \
    \    divisors.update(n/27, n/27)\n        divisors.update(n/28, n/28)\n      \
    \  divisors.update(n/29, n/29)\n        divisors.update(n/30, n/30)\n        divisors.update(n/31,\
    \ n/31)\n        divisors.update(n/32, n/32)\n        divisors.update(n/33, n/33)\n\
    \        divisors.update(n/34, n/34)\n        divisors.update(n/35, n/35)\n  \
    \      divisors.update(n/36, n/36)\n        divisors.update(n/37, n/37)\n    \
    \    divisors.update(n/38, n/38)\n        divisors.update(n/39, n/39)\n      \
    \  divisors.update(n/40, n/40)\n        divisors.update(n/41, n/41)\n        divisors.update(n/42,\
    \ n/42)\n        divisors.update(n/43, n/43)\n        divisors.update(n/44, n/44)\n\
    \        divisors.update(n/45, n/45)\n        divisors.update(n/46, n/46\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp36oprv8o.scala:56:4 ----------------------------\e\
    [0m\e[0m\n\e[31m56 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp36oprv8o.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgc96gkm9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpgc96gkm9.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 2 to n by 2) {\n            if (n % i == 0) {\n           \
    \     divisors += i\n            }\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxs3_6qaf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpxs3_6qaf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(143)\n        divisors.add(149)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(363)\n\
    \        divisors.add(369)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(401)\n        divisors.add(409)\n        divisors.add(419)\n\
    \        divisors.add(421)\n        divisors.add(427)\n        divisors.add(433)\n\
    \        divisors.add(439)\n        divisors.add(443)\n        divisors.add(449)\n\
    \        divisors.add(457)\n        divisors.add(461)\n        divisor\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpstnkabav.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpstnkabav.scala:93:8 -------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ListBuffer[Long]()\n    \
    \    for (d <- 2 to n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyg97_013.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpyg97_013.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(333)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(369)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(409)\n        divisors.add(419)\n        divisors.add(421)\n\
    \        divisors.add(423)\n        divisors.add(427)\n        divisors.add(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2csxerw0.scala:93:21 ---------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp2csxerw0.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792530
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 257\n        divisors += 263\n        divisors += 269\n  \
    \      divisors += 271\n        divisors += 277\n        divisors += 281\n   \
    \     divisors += 283\n        divisors += 293\n        divisors += 307\n    \
    \    divisors += 311\n        divisors += 313\n        divisors += 317\n     \
    \   divisors += 323\n        divisors += 329\n        divisors += 331\n      \
    \  divisors += 337\n        divisors += 343\n        divisors += 347\n       \
    \ divisors += 353\n        divisors += 359\n        divisors += 363\n        divisors\
    \ += 369\n        divisors += 373\n        divisors += 379\n        divisors +=\
    \ 383\n        divisors += 389\n        divisors += 397\n        divisors += 401\n\
    \        divisors += 407\n        divisors += 413\n        divisors += 421\n \
    \       divisors += 423\n        divisors += 429\n        divisors += 431\n  \
    \      divisors += 437\n        divisors += 443\n        divisors += 449\n   \
    \     divisors += 457\n        divisors += 46\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj8e2ahp6.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var largestDivisor = 0\n        var divisor = 0\n\
    \        var currentDivisor = 1\n        var currentDivisorFactor = 1\n      \
    \  var currentDivisorFactor2 = 1\n        var currentDivisorFactor3 = 1\n    \
    \    var currentDivisorFactor4 = 1\n        var currentDivisorFactor5 = 1\n  \
    \      var currentDivisorFactor6 = 1\n        var currentDivisorFactor7 = 1\n\
    \        var currentDivisorFactor8 = 1\n        var currentDivisorFactor9 = 1\n\
    \        var currentDivisorFactor10 = 1\n        var currentDivisorFactor11 =\
    \ 1\n        var currentDivisorFactor12 = 1\n        var currentDivisorFactor13\
    \ = 1\n        var currentDivisorFactor14 = 1\n        var currentDivisorFactor15\
    \ = 1\n        var currentDivisorFactor16 = 1\n        var currentDivisorFactor17\
    \ = 1\n        var currentDivisorFactor18 = 1\n        var currentDivisorFactor19\
    \ = 1\n        var currentDivisorFactor20 = 1\n        var currentDivisorFactor21\
    \ = 1\n        var currentDivisorFactor22 = 1\n        var currentDivisorFactor23\
    \ = 1\n        var currentDivisorFactor24 = 1\n        var currentDivisorFactor25\
    \ = 1\n        var currentDivisorFactor26 = 1\n        var currentDivisorFactor27\
    \ = 1\n        var currentDivisorFactor28 = 1\n        var currentDivisorFactor29\
    \ = 1\n        var currentDivisorFactor30 = 1\n        var currentDivisorFactor31\
    \ = 1\n        var currentDivisorFactor32 = 1\n        var currentDivisorFactor33\
    \ = 1\n        var currentDivisorFactor34 = 1\n        var currentDivisorFactor35\
    \ = 1\n        var currentDivisorFactor36 = 1\n        var currentDivisorFactor37\
    \ = 1\n        var currentDivisorFactor38 = 1\n        var currentDivisorFactor39\
    \ = 1\n        var currentDivisorFactor40 = 1\n        var currentDivisorFactor41\
    \ = 1\n        var currentDivisorFactor42 = 1\n        var currentDivisorFactor43\
    \ = 1\n        var currentDivisorFactor44 = 1\n        var currentDivisorFactor45\
    \ = 1\n        var currentDivisorFactor46 = 1\n        var currentDivisorFactor47\
    \ = 1\n        var currentDivisorFactor48 = 1\n        var currentDivisorFactor49\
    \ = 1\n        var currentDivisorFactor50 = 1\n        var currentDivisorFactor51\
    \ = 1\n        var currentDivisorFactor52 = 1\n        var currentDivisorFactor53\
    \ = 1\n        var currentDivisorFactor54 = 1\n        var currentDivisorFactor55\
    \ = 1\n        var currentDivisorFactor56 = 1\n        var currentDivisorFactor57\
    \ = 1\n        var currentDivisorFactor58 = 1\n        var currentDivisorFactor59\
    \ = 1\n        var currentDivisorFactor60 = 1\n        var currentDivisorFactor6\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8xpgkpco.scala:72:4 ----------------------------\e\
    [0m\e[0m\n\e[31m72 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp8xpgkpco.scala:72:5 ---------------------\e[0m\e[0m\n\e[31m72 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 341\n        divisors += 343\n    \
    \    divisors += 347\n        divisors += 353\n        divisors += 359\n     \
    \   divisors += 363\n        divisors += 369\n        divisors += 373\n      \
    \  divisors += 379\n        divisors += 383\n        divisors += 389\n       \
    \ divisors += 393\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 411\n        divisors += 413\n        divisors +=\
    \ 417\n        divisors += 419\n        divisors += 421\n        divisors += 423\n\
    \        divisors += 427\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpcr4hj_ax.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpcr4hj_ax.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ListBuffer[Long]()\n    \
    \    for(i <- 1 to n by 2)\n            divisors += i\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7zxu1q8k.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7zxu1q8k.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(369)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(401)\n\
    \        divisors.add(409)\n        divisors.add(419)\n        divisors.add(421)\n\
    \        divisors.add(423)\n        divisors.add(427)\n        divisor\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmh_kd9_8.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmh_kd9_8.scala:93:8 -------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ListBuffer[Long]()\n    \
    \    for (i <- 2 to n by 2) {\n            if (n % i == 0) {\n               \
    \ divisors += i\n            }\n        }\n        divisors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvell98dw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvell98dw.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ListBuffer[Long]()\n    \
    \    for (d <- 2 to n by 2) {\n            if (n % d == 0) {\n               \
    \ divisors += d\n            }\n        }\n        divisors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt8o43f21.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpt8o43f21.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(369)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(401)\n\
    \        divisors.add(409)\n        divisors.add(419)\n        divisors.add(42\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp6vahny19.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6vahny19.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(143)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(369)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(383)\n        divisors.add(389)\n\
    \        divisors.add(397)\n        divisors.add(401)\n        divisors.add(409)\n\
    \        divisors.add(419)\n        divisors.add(421)\n        divisors.add(427)\n\
    \        divisors.add(433)\n        divisors.add(439)\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8bn5dzu.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.clear()\n        divisors.add(1)\n        divisors.add(2)\n       \
    \ divisors.add(3)\n        divisors.add(5)\n        divisors.add(7)\n        divisors.add(11)\n\
    \        divisors.add(13)\n        divisors.add(17)\n        divisors.add(19)\n\
    \        divisors.add(23)\n        divisors.add(29)\n        divisors.add(31)\n\
    \        divisors.add(37)\n        divisors.add(43)\n        divisors.add(49)\n\
    \        divisors.add(53)\n        divisors.add(59)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(273)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(293)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(331)\n        divisors.add(333)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(365)\n        divisors.add(367)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(409)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1k53ktmm.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.clear()\n        divisors.add(1)\n        divisors.add(2)\n       \
    \ divisors.add(3)\n        divisors.add(4)\n        divisors.add(5)\n        divisors.add(6)\n\
    \        divisors.add(7)\n        divisors.add(8)\n        divisors.add(9)\n \
    \       divisors.add(10)\n        divisors.add(11)\n        divisors.add(12)\n\
    \        divisors.add(13)\n        divisors.add(14)\n        divisors.add(15)\n\
    \        divisors.add(16)\n        divisors.add(17)\n        divisors.add(18)\n\
    \        divisors.add(19)\n        divisors.add(20)\n        divisors.add(21)\n\
    \        divisors.add(22)\n        divisors.add(23)\n        divisors.add(24)\n\
    \        divisors.add(25)\n        divisors.add(26)\n        divisors.add(27)\n\
    \        divisors.add(28)\n        divisors.add(29)\n        divisors.add(30)\n\
    \        divisors.add(31)\n        divisors.add(32)\n        divisors.add(33)\n\
    \        divisors.add(34)\n        divisors.add(35)\n        divisors.add(36)\n\
    \        divisors.add(37)\n        divisors.add(38)\n        divisors.add(39)\n\
    \        divisors.add(40)\n        divisors.add(41)\n        divisors.add(42)\n\
    \        divisors.add(43)\n        divisors.add(44)\n        divisors.add(45)\n\
    \        divisors.add(46)\n        divisors.add(47)\n        divisors.add(48)\n\
    \        divisors.add(49)\n        divisors.add(50)\n        divisors.add(51)\n\
    \        divisors.add(52)\n        divisors.add(53)\n        divisors.add(54)\n\
    \        divisors.add(55)\n        divisors.add(56)\n        divisors.add(57)\n\
    \        divisors.add(58)\n        divisors.add(59)\n        divisors.add(60)\n\
    \        divisors.add(61)\n        divisors.add(62)\n        divisors.add(63)\n\
    \        divisors.add(64)\n        divisors.add(65)\n        divisors.add(66)\n\
    \        divisors.add(67)\n        divisors.add(68)\n        divisors.add(69)\n\
    \        divisors.add(70)\n        divisors.add(71)\n        divisors.add(72)\n\
    \        divisors.add(73)\n        divisors.add(74)\n        divisors.add(75)\n\
    \        divisors.add(76)\n        divisors.add(77)\n        divisors.add(78)\n\
    \        divisors.add(79)\n        divisors.add(80)\n        divisors.add(81)\n\
    \        divisors.add(82)\n        divisors.add(83)\n        divisors.add(84)\n\
    \        divisors.add(85)\n        divisors.add(86)\n        divisors.add(87)\n\
    \        divisors.add(88\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp1y3cf_ps.scala:98:4 ----------------------------\e\
    [0m\e[0m\n\e[31m98 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1y3cf_ps.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 149\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 159\n        divisors += 161\n   \
    \     divisors += 163\n        divisors += 167\n        divisors += 173\n    \
    \    divisors += 179\n        divisors += 181\n        divisors += 191\n     \
    \   divisors += 197\n        divisors += 199\n        divisors += 211\n      \
    \  divisors += 223\n        divisors += 227\n        divisors += 229\n       \
    \ divisors += 233\n        divisors += 239\n        divisors += 241\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 257\n        divisors +=\
    \ 263\n        divisors += 269\n        divisors += 271\n        divisors += 277\n\
    \        divisors += 281\n        divisors += 283\n        divisors += 293\n \
    \       divisors += 307\n        divisors += 311\n        divisors += 313\n  \
    \      divisors += 317\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 343\n    \
    \    divisors += 349\n        divisors += 353\n        divisors += 359\n     \
    \   divisors += 363\n        divisors += 369\n        divisors += 373\n      \
    \  divisors += 379\n        divisors += 383\n        divisors += 389\n       \
    \ divisors += 393\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 411\n        divisors += 413\n        divisors +=\
    \ 417\n        divisors += 419\n        divisors += 421\n        divisors += 423\n\
    \        divisors += 427\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp28c88mlv.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(4)\n\
    \        divisors.add(5)\n        divisors.add(6)\n        divisors.add(7)\n \
    \       divisors.add(8)\n        divisors.add(9)\n        divisors.add(10)\n \
    \       divisors.add(11)\n        divisors.add(12)\n        divisors.add(13)\n\
    \        divisors.add(14)\n        divisors.add(15)\n        divisors.add(16)\n\
    \        divisors.add(17)\n        divisors.add(18)\n        divisors.add(19)\n\
    \        divisors.add(20)\n        divisors.add(21)\n        divisors.add(22)\n\
    \        divisors.add(23)\n        divisors.add(24)\n        divisors.add(25)\n\
    \        divisors.add(26)\n        divisors.add(27)\n        divisors.add(28)\n\
    \        divisors.add(29)\n        divisors.add(30)\n        divisors.add(31)\n\
    \        divisors.add(32)\n        divisors.add(33)\n        divisors.add(34)\n\
    \        divisors.add(35)\n        divisors.add(36)\n        divisors.add(37)\n\
    \        divisors.add(38)\n        divisors.add(39)\n        divisors.add(40)\n\
    \        divisors.add(41)\n        divisors.add(42)\n        divisors.add(43)\n\
    \        divisors.add(44)\n        divisors.add(45)\n        divisors.add(46)\n\
    \        divisors.add(47)\n        divisors.add(48)\n        divisors.add(49)\n\
    \        divisors.add(50)\n        divisors.add(51)\n        divisors.add(52)\n\
    \        divisors.add(53)\n        divisors.add(54)\n        divisors.add(55)\n\
    \        divisors.add(56)\n        divisors.add(57)\n        divisors.add(58)\n\
    \        divisors.add(59)\n        divisors.add(60)\n        divisors.add(61)\n\
    \        divisors.add(62)\n        divisors.add(63)\n        divisors.add(64)\n\
    \        divisors.add(65)\n        divisors.add(66)\n        divisors.add(67)\n\
    \        divisors.add(68)\n        divisors.add(69)\n        divisors.add(70)\n\
    \        divisors.add(71)\n        divisors.add(72)\n        divisors.add(73)\n\
    \        divisors.add(74)\n        divisors.add(75)\n        divisors.add(76)\n\
    \        divisors.add(77)\n        divisors.add(78)\n        divisors.add(79)\n\
    \        divisors.add(80)\n        divisors.add(81)\n        divisors.add(82)\n\
    \        divisors.add(83)\n        divisors.add(84)\n        divisors.add(85)\n\
    \        divisors.add(86)\n        divisors.add(87)\n        divisors.add(88)\n\
    \        divisors.add(\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp6cdk85g9.scala:97:21 ---------------------------\e\
    [0m\e[0m\n\e[31m97 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp6cdk85g9.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        divisors += 2\n        divisors += 3\n        divisors += 5\n       \
    \ divisors += 7\n        divisors += 11\n        divisors += 13\n        divisors\
    \ += 17\n        divisors += 19\n        divisors += 23\n        divisors += 29\n\
    \        divisors += 31\n        divisors += 37\n        divisors += 41\n    \
    \    divisors += 43\n        divisors += 47\n        divisors += 53\n        divisors\
    \ += 59\n        divisors += 61\n        divisors += 67\n        divisors += 71\n\
    \        divisors += 73\n        divisors += 79\n        divisors += 83\n    \
    \    divisors += 89\n        divisors += 97\n        divisors += 101\n       \
    \ divisors += 103\n        divisors += 107\n        divisors += 109\n        divisors\
    \ += 113\n        divisors += 127\n        divisors += 131\n        divisors +=\
    \ 137\n        divisors += 139\n        divisors += 149\n        divisors += 151\n\
    \        divisors += 157\n        divisors += 163\n        divisors += 167\n \
    \       divisors += 173\n        divisors += 179\n        divisors += 181\n  \
    \      divisors += 191\n        divisors += 197\n        divisors += 199\n   \
    \     divisors += 211\n        divisors += 223\n        divisors += 227\n    \
    \    divisors += 229\n        divisors += 233\n        divisors += 239\n     \
    \   divisors += 241\n        divisors += 243\n        divisors += 247\n      \
    \  divisors += 251\n        divisors += 253\n        divisors += 257\n       \
    \ divisors += 263\n        divisors += 269\n        divisors += 271\n        divisors\
    \ += 277\n        divisors += 281\n        divisors += 283\n        divisors +=\
    \ 293\n        divisors += 307\n        divisors += 311\n        divisors += 313\n\
    \        divisors += 317\n        divisors += 323\n        divisors += 329\n \
    \       divisors += 331\n        divisors += 337\n        divisors += 343\n  \
    \      divisors += 347\n        divisors += 353\n        divisors += 359\n   \
    \     divisors += 363\n        divisors += 369\n        divisors += 373\n    \
    \    divisors += 379\n        divisors += 383\n        divisors += 389\n     \
    \   divisors += 397\n        divisors += 401\n        divisors += 407\n      \
    \  divisors += 413\n        divisors += 421\n        divisors += 427\n       \
    \ divisors += 431\n        divisors += 437\n        divisors += 443\n        divisors\
    \ += 449\n        divisors += 451\n        divisor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6zn7j9ci.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp6zn7j9ci.scala:102:8 ------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisor\n\e[31m\e[31m    |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m    |\e[0m        Not found: divisor\n\e[31m    |\e[0m\n\e[31m    |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) divisors += i\n        divisors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxq3ajurw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpxq3ajurw.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792534
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 253\n        divisors += 257\n        divisors +=\
    \ 263\n        divisors += 269\n        divisors += 271\n        divisors += 277\n\
    \        divisors += 281\n        divisors += 283\n        divisors += 293\n \
    \       divisors += 307\n        divisors += 311\n        divisors += 313\n  \
    \      divisors += 317\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 341\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 411\n        divisors += 413\n        divisors +=\
    \ 417\n        divisors += 419\n        divisors += 421\n        divisors += 423\n\
    \        divisors += 427\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpwiompbp7.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpwiompbp7.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.clear()\n        divisors.add(1)\n        divisors.add(2)\n       \
    \ divisors.add(3)\n        divisors.add(4)\n        divisors.add(5)\n        divisors.add(6)\n\
    \        divisors.add(7)\n        divisors.add(8)\n        divisors.add(9)\n \
    \       divisors.add(10)\n        divisors.add(11)\n        divisors.add(12)\n\
    \        divisors.add(13)\n        divisors.add(14)\n        divisors.add(15)\n\
    \        divisors.add(16)\n        divisors.add(17)\n        divisors.add(18)\n\
    \        divisors.add(19)\n        divisors.add(20)\n        divisors.add(21)\n\
    \        divisors.add(22)\n        divisors.add(23)\n        divisors.add(24)\n\
    \        divisors.add(25)\n        divisors.add(26)\n        divisors.add(27)\n\
    \        divisors.add(28)\n        divisors.add(29)\n        divisors.add(30)\n\
    \        divisors.add(31)\n        divisors.add(32)\n        divisors.add(33)\n\
    \        divisors.add(34)\n        divisors.add(35)\n        divisors.add(36)\n\
    \        divisors.add(37)\n        divisors.add(38)\n        divisors.add(39)\n\
    \        divisors.add(40)\n        divisors.add(41)\n        divisors.add(42)\n\
    \        divisors.add(43)\n        divisors.add(44)\n        divisors.add(45)\n\
    \        divisors.add(46)\n        divisors.add(47)\n        divisors.add(48)\n\
    \        divisors.add(49)\n        divisors.add(50)\n        divisors.add(51)\n\
    \        divisors.add(52)\n        divisors.add(53)\n        divisors.add(54)\n\
    \        divisors.add(55)\n        divisors.add(56)\n        divisors.add(57)\n\
    \        divisors.add(58)\n        divisors.add(59)\n        divisors.add(60)\n\
    \        divisors.add(61)\n        divisors.add(62)\n        divisors.add(63)\n\
    \        divisors.add(64)\n        divisors.add(65)\n        divisors.add(66)\n\
    \        divisors.add(67)\n        divisors.add(68)\n        divisors.add(69)\n\
    \        divisors.add(70)\n        divisors.add(71)\n        divisors.add(72)\n\
    \        divisors.add(73)\n        divisors.add(74)\n        divisors.add(75)\n\
    \        divisors.add(76)\n        divisors.add(77)\n        divisors.add(78)\n\
    \        divisors.add(79)\n        divisors.add(80)\n        divisors.add(81)\n\
    \        divisors.add(82)\n        divisors.add(83)\n        divisors.add(84)\n\
    \        divisors.add(85)\n        divisors.add(86)\n        divisors.add(87)\n\
    \        divisors.add(88\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp1y3cf_ps.scala:98:4 ----------------------------\e\
    [0m\e[0m\n\e[31m98 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1y3cf_ps.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(103)\n        divisors.add(107)\n        divisors.add(109)\n\
    \        divisors.add(113)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(139)\n        divisors.add(149)\n\
    \        divisors.add(151)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(213)\n        divisors.add(217)\n        divisors.add(219)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(253)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(269)\n        divisors.add(271)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(293)\n        divisors.add(297)\n        divisors.add(301)\n\
    \        divisors.add(303)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(319)\n\
    \        divisors.add(323)\n        divisors.add(327)\n        divisors.add(331)\n\
    \        divisors.add(337)\n        divisors.add(341)\n        divisors.add(347)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(36\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdxsxxy9p.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdxsxxy9p.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n by 2)\n            divisors += i\n        divisors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph639_kt7.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmph639_kt7.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792534
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        divisors += 2\n        divisors += 3\n        divisors += 5\n       \
    \ divisors += 7\n        divisors += 11\n        divisors += 13\n        divisors\
    \ += 17\n        divisors += 19\n        divisors += 23\n        divisors += 29\n\
    \        divisors += 31\n        divisors += 37\n        divisors += 41\n    \
    \    divisors += 43\n        divisors += 47\n        divisors += 53\n        divisors\
    \ += 59\n        divisors += 61\n        divisors += 67\n        divisors += 71\n\
    \        divisors += 73\n        divisors += 79\n        divisors += 83\n    \
    \    divisors += 89\n        divisors += 97\n        divisors += 101\n       \
    \ divisors += 103\n        divisors += 107\n        divisors += 109\n        divisors\
    \ += 113\n        divisors += 127\n        divisors += 131\n        divisors +=\
    \ 137\n        divisors += 139\n        divisors += 147\n        divisors += 151\n\
    \        divisors += 157\n        divisors += 163\n        divisors += 167\n \
    \       divisors += 173\n        divisors += 179\n        divisors += 181\n  \
    \      divisors += 191\n        divisors += 193\n        divisors += 197\n   \
    \     divisors += 199\n        divisors += 211\n        divisors += 223\n    \
    \    divisors += 227\n        divisors += 229\n        divisors += 233\n     \
    \   divisors += 239\n        divisors += 241\n        divisors += 243\n      \
    \  divisors += 247\n        divisors += 251\n        divisors += 253\n       \
    \ divisors += 257\n        divisors += 263\n        divisors += 269\n        divisors\
    \ += 271\n        divisors += 277\n        divisors += 281\n        divisors +=\
    \ 283\n        divisors += 293\n        divisors += 307\n        divisors += 311\n\
    \        divisors += 313\n        divisors += 317\n        divisors += 323\n \
    \       divisors += 329\n        divisors += 331\n        divisors += 337\n  \
    \      divisors += 343\n        divisors += 349\n        divisors += 353\n   \
    \     divisors += 359\n        divisors += 363\n        divisors += 369\n    \
    \    divisors += 373\n        divisors += 379\n        divisors += 383\n     \
    \   divisors += 389\n        divisors += 397\n        divisors += 401\n      \
    \  divisors += 407\n        divisors += 411\n        divisors += 413\n       \
    \ divisors += 417\n        divisors += 423\n        divisors += 429\n        divisors\
    \ += 433\n        divisors += 439\n        divisors += 44\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6zggaml0.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792533
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(4)\n\
    \        divisors.add(5)\n        divisors.add(6)\n        divisors.add(7)\n \
    \       divisors.add(8)\n        divisors.add(9)\n        divisors.add(10)\n \
    \       divisors.add(11)\n        divisors.add(12)\n        divisors.add(13)\n\
    \        divisors.add(14)\n        divisors.add(15)\n        divisors.add(16)\n\
    \        divisors.add(17)\n        divisors.add(18)\n        divisors.add(19)\n\
    \        divisors.add(20)\n        divisors.add(21)\n        divisors.add(22)\n\
    \        divisors.add(23)\n        divisors.add(24)\n        divisors.add(25)\n\
    \        divisors.add(26)\n        divisors.add(27)\n        divisors.add(28)\n\
    \        divisors.add(29)\n        divisors.add(30)\n        divisors.add(31)\n\
    \        divisors.add(32)\n        divisors.add(33)\n        divisors.add(34)\n\
    \        divisors.add(35)\n        divisors.add(36)\n        divisors.add(37)\n\
    \        divisors.add(38)\n        divisors.add(39)\n        divisors.add(40)\n\
    \        divisors.add(41)\n        divisors.add(42)\n        divisors.add(43)\n\
    \        divisors.add(44)\n        divisors.add(45)\n        divisors.add(46)\n\
    \        divisors.add(47)\n        divisors.add(48)\n        divisors.add(49)\n\
    \        divisors.add(50)\n        divisors.add(51)\n        divisors.add(52)\n\
    \        divisors.add(53)\n        divisors.add(54)\n        divisors.add(55)\n\
    \        divisors.add(56)\n        divisors.add(57)\n        divisors.add(58)\n\
    \        divisors.add(59)\n        divisors.add(60)\n        divisors.add(61)\n\
    \        divisors.add(62)\n        divisors.add(63)\n        divisors.add(64)\n\
    \        divisors.add(65)\n        divisors.add(66)\n        divisors.add(67)\n\
    \        divisors.add(68)\n        divisors.add(69)\n        divisors.add(70)\n\
    \        divisors.add(71)\n        divisors.add(72)\n        divisors.add(73)\n\
    \        divisors.add(74)\n        divisors.add(75)\n        divisors.add(76)\n\
    \        divisors.add(77)\n        divisors.add(78)\n        divisors.add(79)\n\
    \        divisors.add(80)\n        divisors.add(81)\n        divisors.add(82)\n\
    \        divisors.add(83)\n        divisors.add(84)\n        divisors.add(85)\n\
    \        divisors.add(86)\n        divisors.add(87)\n        divisors.add(88)\n\
    \        divisors.add(\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp6cdk85g9.scala:97:21 ---------------------------\e\
    [0m\e[0m\n\e[31m97 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp6cdk85g9.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(4)\n\
    \        divisors.add(5)\n        divisors.add(6)\n        divisors.add(7)\n \
    \       divisors.add(8)\n        divisors.add(9)\n        divisors.add(10)\n \
    \       divisors.add(11)\n        divisors.add(12)\n        divisors.add(13)\n\
    \        divisors.add(14)\n        divisors.add(15)\n        divisors.add(16)\n\
    \        divisors.add(17)\n        divisors.add(18)\n        divisors.add(19)\n\
    \        divisors.add(20)\n        divisors.add(21)\n        divisors.add(22)\n\
    \        divisors.add(23)\n        divisors.add(24)\n        divisors.add(25)\n\
    \        divisors.add(26)\n        divisors.add(27)\n        divisors.add(28)\n\
    \        divisors.add(29)\n        divisors.add(30)\n        divisors.add(31)\n\
    \        divisors.add(32)\n        divisors.add(33)\n        divisors.add(34)\n\
    \        divisors.add(35)\n        divisors.add(36)\n        divisors.add(37)\n\
    \        divisors.add(38)\n        divisors.add(39)\n        divisors.add(40)\n\
    \        divisors.add(41)\n        divisors.add(42)\n        divisors.add(43)\n\
    \        divisors.add(44)\n        divisors.add(45)\n        divisors.add(46)\n\
    \        divisors.add(47)\n        divisors.add(48)\n        divisors.add(49)\n\
    \        divisors.add(50)\n        divisors.add(51)\n        divisors.add(52)\n\
    \        divisors.add(53)\n        divisors.add(54)\n        divisors.add(55)\n\
    \        divisors.add(56)\n        divisors.add(57)\n        divisors.add(58)\n\
    \        divisors.add(59)\n        divisors.add(60)\n        divisors.add(61)\n\
    \        divisors.add(62)\n        divisors.add(63)\n        divisors.add(64)\n\
    \        divisors.add(65)\n        divisors.add(66)\n        divisors.add(67)\n\
    \        divisors.add(68)\n        divisors.add(69)\n        divisors.add(70)\n\
    \        divisors.add(71)\n        divisors.add(72)\n        divisors.add(73)\n\
    \        divisors.add(74)\n        divisors.add(75)\n        divisors.add(76)\n\
    \        divisors.add(77)\n        divisors.add(78)\n        divisors.add(79)\n\
    \        divisors.add(80)\n        divisors.add(81)\n        divisors.add(82)\n\
    \        divisors.add(83)\n        divisors.add(84)\n        divisors.add(85)\n\
    \        divisors.add(86)\n        divisors.add(87)\n        divisors.add(88)\n\
    \        divisors.add(\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp6cdk85g9.scala:97:21 ---------------------------\e\
    [0m\e[0m\n\e[31m97 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp6cdk85g9.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ListBuffer[Long]()\n    \
    \    for (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbek6m1m.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjbek6m1m.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792535
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 413\n        divisors += 421\n        divisors +=\
    \ 423\n        divisors += 429\n        divisors += 433\n        divisors += 439\n\
    \        divisors += 443\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp5y5z9otj.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp5y5z9otj.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792534
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ListBuffer[Long]()\n    \
    \    for (d <- 1 until n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbti4xj9x.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbti4xj9x.scala:9:26 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m until n by \e\
    [31m2\e[0m)\n\e[31m\e[31m  |\e[0m                          ^\e[0m\n\e[31m  |\e\
    [0m                          Found:    (n : Long)\n\e[31m  |\e[0m            \
    \              Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.update(0, 2)\n        divisors.update(1, 3)\n        divisors.update(n/2,\
    \ n/2)\n        divisors.update(n/3, n/3)\n        divisors.update(n/4, n/4)\n\
    \        divisors.update(n/5, n/5)\n        divisors.update(n/6, n/6)\n      \
    \  divisors.update(n/7, n/7)\n        divisors.update(n/8, n/8)\n        divisors.update(n/9,\
    \ n/9)\n        divisors.update(n/10, n/10)\n        divisors.update(n/11, n/11)\n\
    \        divisors.update(n/12, n/12)\n        divisors.update(n/13, n/13)\n  \
    \      divisors.update(n/14, n/14)\n        divisors.update(n/15, n/15)\n    \
    \    divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps03fn5dc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792534
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgc96gkm9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpgc96gkm9.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ListBuffer[Long]()\n    \
    \    for (d <- 1 until n)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp559c_idz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp559c_idz.scala:9:26 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m until n)\n\e\
    [31m\e[31m  |\e[0m                          ^\e[0m\n\e[31m  |\e[0m           \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                         \
    \ Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792536
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 1 to n by 2)\n            if (n % d == 0)\n               \
    \ divisors += d\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7yszywka.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp7yszywka.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(101)\n        divisors.add(107)\n        divisors.add(109)\n\
    \        divisors.add(113)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(139)\n        divisors.add(149)\n\
    \        divisors.add(151)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(253)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(269)\n        divisors.add(271)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(293)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(331)\n        divisors.add(333)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(369)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(383)\n        divisors.add(389)\n\
    \        divisors.add(397)\n        divisors.add(401)\n        divisors.add(409)\n\
    \        divisors.add(419)\n        divisors.add(421)\n        divisors.add(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpxjvwub55.scala:93:21 ---------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpxjvwub55.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792534
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 307\n        divisors += 311\n     \
    \   divisors += 313\n        divisors += 317\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 341\n        divisors += 343\n        divisors += 347\n        divisors\
    \ += 353\n        divisors += 359\n        divisors += 363\n        divisors +=\
    \ 369\n        divisors += 373\n        divisors += 379\n        divisors += 383\n\
    \        divisors += 389\n        divisors += 393\n        divisors += 397\n \
    \       divisors += 401\n        divisors += 407\n        divisors += 411\n  \
    \      divisors += 413\n        divisors += 417\n        divisors += 423\n   \
    \     divisors += 429\n        divisors += 433\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvss0fbw9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792534
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(57)\n\
    \        divisors.add(61)\n        divisors.add(67)\n        divisors.add(73)\n\
    \        divisors.add(79)\n        divisors.add(83)\n        divisors.add(89)\n\
    \        divisors.add(97)\n        divisors.add(101)\n        divisors.add(103)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(111)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(273)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(365)\n\
    \        divisors.add(367)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgriranh9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792534
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 307\n        divisors += 311\n     \
    \   divisors += 313\n        divisors += 317\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 343\n        divisors += 347\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 397\n        divisors += 401\n        divisors += 407\n \
    \       divisors += 413\n        divisors += 421\n        divisors += 427\n  \
    \      divisors += 433\n        divisors += 439\n        divisors += 443\n   \
    \     divisors += 449\n        divisors += 457\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvq0fnb5y.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792534
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ maxDivisor = 0L\n        var maxDivisorIndex = 0\n        for (i <- 0 until\
    \ n) {\n            if (n % i == 0) {\n                divisors += i\n       \
    \         if (divisors.size > maxDivisor) {\n                    maxDivisor =\
    \ divisors.size\n                    maxDivisorIndex = i\n                }\n\
    \            }\n        }\n        divisors.size - maxDivisorIndex\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ltvjdrf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp5ltvjdrf.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792536
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 349\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 413\n        divisors\
    \ += 421\n        divisors += 427\n        divisors += 439\n        divisors +=\
    \ 443\n        divisors += 449\n        divisors += 457\n        divisors += 461\n\
    \        divisors += 467\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpg0079liw.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpg0079liw.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792535
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 343\n        divisors += 349\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 413\n        divisors += 417\n        divisors +=\
    \ 423\n        divisors += 429\n        divisors += 433\n        divisors += 439\n\
    \        divisors += 443\n        divisors += 44\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuu1u4qml.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792535
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(101)\n        divisors.add(103)\n        divisors.add(107)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(139)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(251)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(269)\n        divisors.add(271)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(293)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(331)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(369)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(401)\n        divisors.add(409)\n        divisors.add(419)\n\
    \        divisors.add(421)\n        divisors.add(423)\n        divisors.add(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpqrkm420j.scala:93:21 ---------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqrkm420j.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792535
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(365)\n\
    \        divisors.add(367)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(401)\n        divisors.add(409)\n        divisors.add(4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphnxa4bvc.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphnxa4bvc.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792536
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(103)\n        divisors.add(107)\n        divisors.add(109)\n\
    \        divisors.add(111)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(139)\n        divisors.add(149)\n\
    \        divisors.add(151)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(253)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(269)\n        divisors.add(271)\n        divisors.add(273)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(287)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(369)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(401)\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4zs1hcae.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792536
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 341\n        divisors += 343\n        divisors += 347\n     \
    \   divisors += 353\n        divisors += 359\n        divisors += 363\n      \
    \  divisors += 369\n        divisors += 373\n        divisors += 379\n       \
    \ divisors += 383\n        divisors += 389\n        divisors += 397\n        divisors\
    \ += 401\n        divisors += 407\n        divisors += 411\n        divisors +=\
    \ 413\n        divisors += 417\n        divisors += 423\n        divisors += 429\n\
    \        divisors += 433\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxnq2rrl6.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792535
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(101)\n        divisors.add(103)\n        divisors.add(107)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(139)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(251)\n        divisors.add(253)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(273)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(287)\n        divisors.add(293)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(331)\n        divisors.add(333)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(363)\n\
    \        divisors.add(369)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(401)\n        divisors.add(409)\n        divisors.add(419\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr85eh54v.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr85eh54v.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792536
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(273)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(293)\n        divisors.add(297)\n        divisors.add(301)\n\
    \        divisors.add(309)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(331)\n        divisors.add(333)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(365)\n        divisors.add(367)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(381)\n\
    \        divisors.add(383)\n        divisors.add(383)\n        divisors.add(383)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6h5ti1fw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792536
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(111)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(369)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(401)\n\
    \        divisors.add(409)\n        divisors.add(419)\n        divisors.add(42\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpb77ewau8.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb77ewau8.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792536
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 393\n        divisors += 397\n        divisors\
    \ += 401\n        divisors += 407\n        divisors += 411\n        divisors +=\
    \ 413\n        divisors += 417\n        divisors += 423\n        divisors += 429\n\
    \        divisors += 431\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp7oy9gx24.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp7oy9gx24.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792536
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(103)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(143)\n\
    \        divisors.add(149)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(253)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(269)\n        divisors.add(271)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(365)\n        divisors.add(367)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(409)\n\
    \        divisors.add(419)\n        divisors.add(421)\n        divisors.add(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpquznk_eq.scala:93:21 ---------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpquznk_eq.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792536
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 307\n        divisors += 311\n     \
    \   divisors += 313\n        divisors += 317\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 343\n        divisors += 349\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 393\n        divisors += 397\n        divisors += 401\n \
    \       divisors += 407\n        divisors += 411\n        divisors += 413\n  \
    \      divisors += 417\n        divisors += 423\n        divisors += 429\n   \
    \     divisors += 431\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp62nhgsqf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792536
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n) divisors += i\n        divisors.toList.sortWith(_ < _).last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo2kxcu02.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpo2kxcu02.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792539
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(103)\n        divisors.add(107)\n        divisors.add(109)\n\
    \        divisors.add(113)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(139)\n        divisors.add(149)\n\
    \        divisors.add(151)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(369)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(401)\n\
    \        divisors.add(409)\n        divisors.add(419)\n        divisors.add(42\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptwirq_5z.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptwirq_5z.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792537
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Long]()\n\
    \        divisors ++= Seq(2 to n by 2)\n        divisors.foreach { divisor =>\n\
    \            if (n % divisor == 0) {\n                maxDivisor += divisor\n\
    \                maxDivisorIndex += divisor\n            }\n        }\n      \
    \  maxDivisor.foreach { divisor =>\n            if (divisors.contains(divisor))\
    \ {\n                divisors.remove(divisor)\n                maxDivisorIndex.remove(divisor)\n\
    \            }\n        }\n        maxDivisorIndex.foreach { index =>\n      \
    \      if (maxDivisor.contains(index)) {\n                maxDivisor.remove(index)\n\
    \            }\n        }\n        maxDivisor.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphp5x5a53.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmphp5x5a53.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmphp5x5a53.scala:10:30 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659792537
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 319\n   \
    \     divisors += 323\n        divisors += 327\n        divisors += 331\n    \
    \    divisors += 337\n        divisors += 343\n        divisors += 347\n     \
    \   divisors += 353\n        divisors += 359\n        divisors += 363\n      \
    \  divisors += 369\n        divisors += 373\n        divisors += 379\n       \
    \ divisors += 383\n        divisors += 389\n        divisors += 397\n        divisors\
    \ += 401\n        divisors += 407\n        divisors += 411\n        divisors +=\
    \ 413\n        divisors += 417\n        divisors += 419\n        divisors += 423\n\
    \        divisors += 429\n        divisors += 433\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvz37u2dv.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792537
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(369)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(401)\n\
    \        divisors.add(409)\n        divisors.add(419)\n        divisors.add(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpdd6y07tq.scala:93:21 ---------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpdd6y07tq.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792537
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var largestDivisor = 0L\n        var divisor = 0L\n\
    \        var remainder = 0L\n        for(divisor <- 2 to n){\n            remainder\
    \ = n % divisor\n            if(remainder == 0){\n                largestDivisor\
    \ = divisor\n                break\n            }\n        }\n        largestDivisor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqugsex5h.scala:11:28\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(divisor\
    \ <- \e[31m2\e[0m to n){\n\e[31m\e[31m   |\e[0m                            ^\e\
    [0m\n\e[31m   |\e[0m                            Found:    (n : Long)\n\e[31m \
    \  |\e[0m                            Required: Int\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpqugsex5h.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659792540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ListBuffer[Long]()\n    \
    \    for (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbek6m1m.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjbek6m1m.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792535
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 307\n        divisors += 311\n     \
    \   divisors += 313\n        divisors += 317\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 347\n        divisors += 349\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 397\n        divisors += 401\n        divisors += 407\n \
    \       divisors += 411\n        divisors += 419\n        divisors += 423\n  \
    \      divisors += 429\n        divisors += 433\n        divisors += 439\n   \
    \     divisors += 443\n        divisors += 449\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqw5mk4ij.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792537
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(287)\n        divisors.add(293)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(331)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(369)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(401)\n        divisors.add(409)\n        divisors.add(419)\n\
    \        divisors.add(421)\n        divisors.add(427)\n        divisors.add(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpei83szf4.scala:93:21 ---------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpei83szf4.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792538
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0L\n        var maxDividend = 0L\n\
    \        var divisor = 0L\n        var dividend = 0L\n        for(divisor <- 1\
    \ to n by 2) {\n            dividend = n\n            while(dividend != 0) {\n\
    \                dividend /= divisor\n                if(dividend % divisor ==\
    \ 0) {\n                    if(dividend > maxDividend) {\n                   \
    \     maxDividend = dividend\n                        maxDivisor = divisor\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ maxDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprqdmhx1x.scala:12:28\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(divisor\
    \ <- \e[31m1\e[0m to n by \e[31m2\e[0m) {\n\e[31m\e[31m   |\e[0m             \
    \               ^\e[0m\n\e[31m   |\e[0m                            Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                            Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659792540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0L\n        var maxDivisorNum =\
    \ 0L\n        for (i <- 1 to n) {\n            if (n % i == 0) {\n           \
    \     val divisor = i / n\n                if (divisor > maxDivisor) {\n     \
    \               maxDivisor = divisor\n                    maxDivisorNum = i\n\
    \                }\n            }\n        }\n        maxDivisorNum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpt2zpgrbb.scala:10:23\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.update(n/2, n/3)\n        divisors.update(n/4, n/5)\n        divisors.update(n/6,\
    \ n/7)\n        divisors.update(n/8, n/9)\n        divisors.update(n/10, n/11)\n\
    \        divisors.update(n/12, n/13)\n        divisors.update(n/14, n/15)\n  \
    \      divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpksow8cdc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (i <- 1 to n by 2)\n            if (n % i == 0)\n                divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7q_jpp_b.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7q_jpp_b.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792525
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 1 to n by 2) {\n            if (n % d == 0) {\n           \
    \     divisors += d\n            }\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpirqas5qd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpirqas5qd.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (i <- 1 to n) {\n            if (n % i == 0) {\n                divisors\
    \ += i\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxczjrt6v.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpxczjrt6v.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m              \
    \         Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 307\n        divisors += 311\n     \
    \   divisors += 313\n        divisors += 317\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 343\n        divisors += 349\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 393\n        divisors += 397\n        divisors += 401\n \
    \       divisors += 407\n        divisors += 411\n        divisors += 413\n  \
    \      divisors += 417\n        divisors += 423\n        divisors += 429\n   \
    \     divisors += 433\n        divisors += 439\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpljtfg70v.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792539
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6g0fcnf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpg6g0fcnf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2) {\n            if (n % i == 0) {\n           \
    \     divisors += i\n            }\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1ovcmaps.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp1ovcmaps.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(4)\n \
    \       divisors.add(5)\n        divisors.add(6)\n        divisors.add(7)\n  \
    \      divisors.add(8)\n        divisors.add(9)\n        divisors.add(10)\n  \
    \      divisors.add(11)\n        divisors.add(12)\n        divisors.add(13)\n\
    \        divisors.add(14)\n        divisors.add(15)\n        divisors.add(16)\n\
    \        divisors.add(17)\n        divisors.add(18)\n        divisors.add(19)\n\
    \        divisors.add(20)\n        divisors.add(21)\n        divisors.add(22)\n\
    \        divisors.add(23)\n        divisors.add(24)\n        divisors.add(25)\n\
    \        divisors.add(26)\n        divisors.add(27)\n        divisors.add(28)\n\
    \        divisors.add(29)\n        divisors.add(30)\n        divisors.add(31)\n\
    \        divisors.add(32)\n        divisors.add(33)\n        divisors.add(34)\n\
    \        divisors.add(35)\n        divisors.add(36)\n        divisors.add(37)\n\
    \        divisors.add(38)\n        divisors.add(39)\n        divisors.add(40)\n\
    \        divisors.add(41)\n        divisors.add(42)\n        divisors.add(43)\n\
    \        divisors.add(44)\n        divisors.add(45)\n        divisors.add(46)\n\
    \        divisors.add(47)\n        divisors.add(48)\n        divisors.add(49)\n\
    \        divisors.add(50)\n        divisors.add(51)\n        divisors.add(52)\n\
    \        divisors.add(53)\n        divisors.add(54)\n        divisors.add(55)\n\
    \        divisors.add(56)\n        divisors.add(57)\n        divisors.add(58)\n\
    \        divisors.add(59)\n        divisors.add(60)\n        divisors.add(61)\n\
    \        divisors.add(62)\n        divisors.add(63)\n        divisors.add(64)\n\
    \        divisors.add(65)\n        divisors.add(66)\n        divisors.add(67)\n\
    \        divisors.add(68)\n        divisors.add(69)\n        divisors.add(70)\n\
    \        divisors.add(71)\n        divisors.add(72)\n        divisors.add(73)\n\
    \        divisors.add(74)\n        divisors.add(75)\n        divisors.add(76)\n\
    \        divisors.add(77)\n        divisors.add(78)\n        divisors.add(79)\n\
    \        divisors.add(80)\n        divisors.add(81)\n        divisors.add(82)\n\
    \        divisors.add(83)\n        divisors.add(84)\n        divisors.add(85)\n\
    \        divisors.add(86)\n        divisors.add(87)\n        divisors.add(88)\n\
    \        divisors.add(89\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpipnmlppx.scala:98:4 ----------------------------\e\
    [0m\e[0m\n\e[31m98 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpipnmlppx.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792539
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 253\n        divisors += 257\n        divisors +=\
    \ 263\n        divisors += 269\n        divisors += 271\n        divisors += 277\n\
    \        divisors += 281\n        divisors += 283\n        divisors += 293\n \
    \       divisors += 307\n        divisors += 311\n        divisors += 313\n  \
    \      divisors += 317\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 343\n    \
    \    divisors += 349\n        divisors += 351\n        divisors += 359\n     \
    \   divisors += 363\n        divisors += 369\n        divisors += 373\n      \
    \  divisors += 379\n        divisors += 383\n        divisors += 389\n       \
    \ divisors += 393\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 413\n        divisors += 421\n        divisors +=\
    \ 423\n        divisors += 429\n        divisors += 431\n        divisors += 437\n\
    \        divisors += 443\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc_o4vgn9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpc_o4vgn9.scala:102:8 ------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisor\n\e[31m\e[31m    |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m    |\e[0m        Not found: divisor\n\e[31m    |\e[0m\n\e[31m    |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792539
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 2 to n by 2){\n            if(n%i == 0){\n                divisors += i\n\
    \            }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ffk4qo9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp0ffk4qo9.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(101)\n        divisors.add(103)\n        divisors.add(107)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(139)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(213)\n        divisors.add(217)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(253)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(267)\n        divisors.add(271)\n        divisors.add(273)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(287)\n        divisors.add(293)\n        divisors.add(297)\n\
    \        divisors.add(301)\n        divisors.add(303)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(323)\n        divisors.add(327)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(357)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(367\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxla4v1n6.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxla4v1n6.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792539
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 307\n        divisors += 311\n     \
    \   divisors += 313\n        divisors += 317\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 343\n        divisors += 347\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 393\n        divisors += 397\n        divisors += 401\n \
    \       divisors += 407\n        divisors += 411\n        divisors += 413\n  \
    \      divisors += 417\n        divisors += 423\n        divisors += 429\n   \
    \     divisors += 433\n        divisors += 439\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp74s7fvaf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792539
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorNum =\
    \ 0\n        var divisor = 0\n        var divisorNum = 0\n        for (i <- 1\
    \ to n) {\n            divisorNum = i\n            divisor = divisorNum\n    \
    \        while (divisorNum > 0) {\n                divisorNum = divisorNum / divisor\n\
    \                if (divisorNum > maxDivisorNum) {\n                    maxDivisorNum\
    \ = divisorNum\n                    maxDivisor = divisor\n                }\n\
    \            }\n        }\n        maxDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpveejpc2f.scala:12:23\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(4)\n \
    \       divisors.add(5)\n        divisors.add(6)\n        divisors.add(7)\n  \
    \      divisors.add(8)\n        divisors.add(9)\n        divisors.add(10)\n  \
    \      divisors.add(11)\n        divisors.add(12)\n        divisors.add(13)\n\
    \        divisors.add(14)\n        divisors.add(15)\n        divisors.add(16)\n\
    \        divisors.add(17)\n        divisors.add(18)\n        divisors.add(19)\n\
    \        divisors.add(20)\n        divisors.add(21)\n        divisors.add(22)\n\
    \        divisors.add(23)\n        divisors.add(24)\n        divisors.add(25)\n\
    \        divisors.add(26)\n        divisors.add(27)\n        divisors.add(28)\n\
    \        divisors.add(29)\n        divisors.add(30)\n        divisors.add(31)\n\
    \        divisors.add(32)\n        divisors.add(33)\n        divisors.add(34)\n\
    \        divisors.add(35)\n        divisors.add(36)\n        divisors.add(37)\n\
    \        divisors.add(38)\n        divisors.add(39)\n        divisors.add(40)\n\
    \        divisors.add(41)\n        divisors.add(42)\n        divisors.add(43)\n\
    \        divisors.add(44)\n        divisors.add(45)\n        divisors.add(46)\n\
    \        divisors.add(47)\n        divisors.add(48)\n        divisors.add(49)\n\
    \        divisors.add(50)\n        divisors.add(51)\n        divisors.add(52)\n\
    \        divisors.add(53)\n        divisors.add(54)\n        divisors.add(55)\n\
    \        divisors.add(56)\n        divisors.add(57)\n        divisors.add(58)\n\
    \        divisors.add(59)\n        divisors.add(60)\n        divisors.add(61)\n\
    \        divisors.add(62)\n        divisors.add(63)\n        divisors.add(64)\n\
    \        divisors.add(65)\n        divisors.add(66)\n        divisors.add(67)\n\
    \        divisors.add(68)\n        divisors.add(69)\n        divisors.add(70)\n\
    \        divisors.add(71)\n        divisors.add(72)\n        divisors.add(73)\n\
    \        divisors.add(74)\n        divisors.add(75)\n        divisors.add(76)\n\
    \        divisors.add(77)\n        divisors.add(78)\n        divisors.add(79)\n\
    \        divisors.add(80)\n        divisors.add(81)\n        divisors.add(82)\n\
    \        divisors.add(83)\n        divisors.add(84)\n        divisors.add(85)\n\
    \        divisors.add(86)\n        divisors.add(87)\n        divisors.add(88)\n\
    \        divisors.add(89\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpipnmlppx.scala:98:4 ----------------------------\e\
    [0m\e[0m\n\e[31m98 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpipnmlppx.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792539
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(4)\n \
    \       divisors.add(5)\n        divisors.add(6)\n        divisors.add(7)\n  \
    \      divisors.add(8)\n        divisors.add(9)\n        divisors.add(10)\n  \
    \      divisors.add(11)\n        divisors.add(12)\n        divisors.add(13)\n\
    \        divisors.add(14)\n        divisors.add(15)\n        divisors.add(16)\n\
    \        divisors.add(17)\n        divisors.add(18)\n        divisors.add(19)\n\
    \        divisors.add(20)\n        divisors.add(21)\n        divisors.add(22)\n\
    \        divisors.add(23)\n        divisors.add(24)\n        divisors.add(25)\n\
    \        divisors.add(26)\n        divisors.add(27)\n        divisors.add(28)\n\
    \        divisors.add(29)\n        divisors.add(30)\n        divisors.add(31)\n\
    \        divisors.add(32)\n        divisors.add(33)\n        divisors.add(34)\n\
    \        divisors.add(35)\n        divisors.add(36)\n        divisors.add(37)\n\
    \        divisors.add(38)\n        divisors.add(39)\n        divisors.add(40)\n\
    \        divisors.add(41)\n        divisors.add(42)\n        divisors.add(43)\n\
    \        divisors.add(44)\n        divisors.add(45)\n        divisors.add(46)\n\
    \        divisors.add(47)\n        divisors.add(48)\n        divisors.add(49)\n\
    \        divisors.add(50)\n        divisors.add(51)\n        divisors.add(52)\n\
    \        divisors.add(53)\n        divisors.add(54)\n        divisors.add(55)\n\
    \        divisors.add(56)\n        divisors.add(57)\n        divisors.add(58)\n\
    \        divisors.add(59)\n        divisors.add(60)\n        divisors.add(61)\n\
    \        divisors.add(62)\n        divisors.add(63)\n        divisors.add(64)\n\
    \        divisors.add(65)\n        divisors.add(66)\n        divisors.add(67)\n\
    \        divisors.add(68)\n        divisors.add(69)\n        divisors.add(70)\n\
    \        divisors.add(71)\n        divisors.add(72)\n        divisors.add(73)\n\
    \        divisors.add(74)\n        divisors.add(75)\n        divisors.add(76)\n\
    \        divisors.add(77)\n        divisors.add(78)\n        divisors.add(79)\n\
    \        divisors.add(80)\n        divisors.add(81)\n        divisors.add(82)\n\
    \        divisors.add(83)\n        divisors.add(84)\n        divisors.add(85)\n\
    \        divisors.add(86)\n        divisors.add(87)\n        divisors.add(88)\n\
    \        divisors.add(89\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpipnmlppx.scala:98:4 ----------------------------\e\
    [0m\e[0m\n\e[31m98 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpipnmlppx.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792539
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (i <- 1 to n by 2)\n            if (n % i == 0)\n                divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7q_jpp_b.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7q_jpp_b.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792525
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var largest = 0L\n        for(i <- 2 to n by 2){\n            divisors += i\n\
    \            if(divisors.contains(n%i)){\n                largest = i\n      \
    \      }\n        }\n        largest\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_mnw7lze.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp_mnw7lze.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2) {\n            if (n % i == 0) {\n           \
    \     divisors += i\n            }\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1ovcmaps.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp1ovcmaps.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var largestDivisor = 0\n        var divisor = 0\n\
    \        var divisorCount = 0\n        var currentDivisor = 1\n        var currentDivisorCount\
    \ = 0\n        var currentDivisorCountMax = 0\n        var currentDivisorCountMaxIndex\
    \ = 0\n        var currentDivisorCountMin = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n        var currentDivisorCountMaxIndex = 0\n        var currentDivisorCountMinIndex\
    \ = 0\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxlw7pyi9.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorCountMaxIndex\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorCountMaxIndex is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentDivisorCountMaxIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxlw7pyi9.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorCountMinIndex\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorCountMinIndex is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentDivisorCountMinIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxlw7pyi9.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorCountMaxIndex\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorCountMaxIndex is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentDivisorCountMaxIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxlw7pyi9.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorCountMinIndex\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorCountMinIndex is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentDivisorCountMinIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxlw7pyi9.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |"
  stdout: ''
  timestamp: 1659792541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (i <- 1 to n by 2)\n            if (n % i == 0)\n                divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7q_jpp_b.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7q_jpp_b.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792525
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(333)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(369)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(401)\n        divisors.add(409)\n        divisors.add(419)\n\
    \        divisors.add(421)\n        divisors.add(427)\n        divisor\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj8u626dx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpj8u626dx.scala:93:8 -------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792539
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgc96gkm9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpgc96gkm9.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 2 to n by 2) {\n            if (n % i == 0) {\n           \
    \     divisors += i\n            }\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxs3_6qaf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpxs3_6qaf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (i <- 1 to n by 2)\n            if (n % i == 0)\n                divisors\
    \ += i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxetr9rxo.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpxetr9rxo.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var largestDivisor = 0\n        var divisor = 0\n\
    \        var divisorCount = 0\n        var divisorMax = 0\n        var divisorMaxCount\
    \ = 0\n        var divisorMaxCount2 = 0\n        var divisorMaxCount3 = 0\n  \
    \      var divisorMaxCount4 = 0\n        var divisorMaxCount5 = 0\n        var\
    \ divisorMaxCount6 = 0\n        var divisorMaxCount7 = 0\n        var divisorMaxCount8\
    \ = 0\n        var divisorMaxCount9 = 0\n        var divisorMaxCount10 = 0\n \
    \       var divisorMaxCount11 = 0\n        var divisorMaxCount12 = 0\n       \
    \ var divisorMaxCount13 = 0\n        var divisorMaxCount14 = 0\n        var divisorMaxCount15\
    \ = 0\n        var divisorMaxCount16 = 0\n        var divisorMaxCount17 = 0\n\
    \        var divisorMaxCount18 = 0\n        var divisorMaxCount19 = 0\n      \
    \  var divisorMaxCount20 = 0\n        var divisorMaxCount21 = 0\n        var divisorMaxCount22\
    \ = 0\n        var divisorMaxCount23 = 0\n        var divisorMaxCount24 = 0\n\
    \        var divisorMaxCount25 = 0\n        var divisorMaxCount26 = 0\n      \
    \  var divisorMaxCount27 = 0\n        var divisorMaxCount28 = 0\n        var divisorMaxCount29\
    \ = 0\n        var divisorMaxCount30 = 0\n        var divisorMaxCount31 = 0\n\
    \        var divisorMaxCount32 = 0\n        var divisorMaxCount33 = 0\n      \
    \  var divisorMaxCount34 = 0\n        var divisorMaxCount35 = 0\n        var divisorMaxCount36\
    \ = 0\n        var divisorMaxCount37 = 0\n        var divisorMaxCount38 = 0\n\
    \        var divisorMaxCount39 = 0\n        var divisorMaxCount40 = 0\n      \
    \  var divisorMaxCount41 = 0\n        var divisorMaxCount42 = 0\n        var divisorMaxCount43\
    \ = 0\n        var divisorMaxCount44 = 0\n        var divisorMaxCount45 = 0\n\
    \        var divisorMaxCount46 = 0\n        var divisorMaxCount47 = 0\n      \
    \  var divisorMaxCount48 = 0\n        var divisorMaxCount49 = 0\n        var divisorMaxCount50\
    \ = 0\n        var divisorMaxCount51 = 0\n        var divisorMaxCount52 = 0\n\
    \        var divisorMaxCount53 = 0\n        var divisorMaxCount54 = 0\n      \
    \  var divisorMaxCount55 = 0\n        var divisorMaxCount56 = 0\n        var divisorMaxCount57\
    \ = 0\n        var divisorMaxCount58 = 0\n        var divisorMaxCount59 = 0\n\
    \        var divisorMaxCount60 = 0\n        var divisorMaxCount61 = 0\n      \
    \  var divisorMaxCount62 = 0\n        var divisorMaxCount63 = 0\n        var divisorMaxCount64\
    \ = 0\n        var divisorMaxCount65 = 0\n        var divisorMaxCount66 = 0\n\
    \        var divisorMaxCount67 = 0\n        var divisorMaxCount68 = 0\n      \
    \  var divisorMaxCount69 = 0\n        var divisorMaxCount70 = 0\n        var divisor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyn2y87sv.scala:83:4 ----------------------------\e\
    [0m\e[0m\n\e[31m83 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpyn2y87sv.scala:83:5 ---------------------\e[0m\e[0m\n\e[31m83 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(10)\n        divisors.add(15)\n        divisors.add(20)\n\
    \        divisors.add(25)\n        divisors.add(30)\n        divisors.add(35)\n\
    \        divisors.add(40)\n        divisors.add(45)\n        divisors.add(50)\n\
    \        divisors.add(55)\n        divisors.add(60)\n        divisors.add(65)\n\
    \        divisors.add(70)\n        divisors.add(75)\n        divisors.add(80)\n\
    \        divisors.add(85)\n        divisors.add(90)\n        divisors.add(95)\n\
    \        divisors.add(100)\n        divisors.add(105)\n        divisors.add(110)\n\
    \        divisors.add(115)\n        divisors.add(120)\n        divisors.add(125)\n\
    \        divisors.add(130)\n        divisors.add(135)\n        divisors.add(140)\n\
    \        divisors.add(145)\n        divisors.add(150)\n        divisors.add(155)\n\
    \        divisors.add(160)\n        divisors.add(165)\n        divisors.add(170)\n\
    \        divisors.add(175)\n        divisors.add(180)\n        divisors.add(185)\n\
    \        divisors.add(190)\n        divisors.add(195)\n        divisors.add(200)\n\
    \        divisors.add(205)\n        divisors.add(210)\n        divisors.add(215)\n\
    \        divisors.add(220)\n        divisors.add(225)\n        divisors.add(230)\n\
    \        divisors.add(235)\n        divisors.add(240)\n        divisors.add(245)\n\
    \        divisors.add(250)\n        divisors.add(255)\n        divisors.add(260)\n\
    \        divisors.add(265)\n        divisors.add(270)\n        divisors.add(275)\n\
    \        divisors.add(280)\n        divisors.add(285)\n        divisors.add(290)\n\
    \        divisors.add(295)\n        divisors.add(300)\n        divisors.add(305)\n\
    \        divisors.add(310)\n        divisors.add(315)\n        divisors.add(320)\n\
    \        divisors.add(325)\n        divisors.add(330)\n        divisors.add(335)\n\
    \        divisors.add(340)\n        divisors.add(345)\n        divisors.add(350)\n\
    \        divisors.add(355)\n        divisors.add(360)\n        divisors.add(365)\n\
    \        divisors.add(370)\n        divisors.add(375)\n        divisors.add(380)\n\
    \        divisors.add(385)\n        divisors.add(390)\n        divisors.add(395)\n\
    \        divisors.add(400)\n        divisors.add(405)\n        divisors.add(410)\n\
    \        divisors.add(415)\n        divisors.add(4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpn1zxt_zc.scala:96:4 ----------------------------\e\
    [0m\e[0m\n\e[31m96 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn1zxt_zc.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var largestDivisor = 0L\n        divisors.clear()\n        divisors += 2\n \
    \       divisors += 3\n        divisors += 5\n        divisors += 7\n        divisors\
    \ += 11\n        divisors += 13\n        divisors += 17\n        divisors += 19\n\
    \        divisors += 23\n        divisors += 29\n        divisors += 31\n    \
    \    divisors += 37\n        divisors += 41\n        divisors += 43\n        divisors\
    \ += 47\n        divisors += 53\n        divisors += 59\n        divisors += 61\n\
    \        divisors += 67\n        divisors += 71\n        divisors += 73\n    \
    \    divisors += 79\n        divisors += 83\n        divisors += 89\n        divisors\
    \ += 97\n        divisors += 101\n        divisors += 103\n        divisors +=\
    \ 107\n        divisors += 109\n        divisors += 113\n        divisors += 127\n\
    \        divisors += 131\n        divisors += 137\n        divisors += 139\n \
    \       divisors += 147\n        divisors += 151\n        divisors += 157\n  \
    \      divisors += 163\n        divisors += 167\n        divisors += 173\n   \
    \     divisors += 179\n        divisors += 181\n        divisors += 191\n    \
    \    divisors += 197\n        divisors += 199\n        divisors += 211\n     \
    \   divisors += 223\n        divisors += 227\n        divisors += 229\n      \
    \  divisors += 233\n        divisors += 239\n        divisors += 241\n       \
    \ divisors += 247\n        divisors += 251\n        divisors += 257\n        divisors\
    \ += 263\n        divisors += 269\n        divisors += 271\n        divisors +=\
    \ 277\n        divisors += 281\n        divisors += 283\n        divisors += 293\n\
    \        divisors += 307\n        divisors += 311\n        divisors += 313\n \
    \       divisors += 317\n        divisors += 323\n        divisors += 329\n  \
    \      divisors += 331\n        divisors += 337\n        divisors += 341\n   \
    \     divisors += 347\n        divisors += 353\n        divisors += 359\n    \
    \    divisors += 363\n        divisors += 369\n        divisors += 373\n     \
    \   divisors += 379\n        divisors += 383\n        divisors += 389\n      \
    \  divisors += 393\n        divisors += 397\n        divisors += 401\n       \
    \ divisors += 407\n        divisors += 411\n        divisors += 413\n        divisors\
    \ += 417\n        divisors += 419\n        divisors += 421\n        divisors +=\
    \ 423\n        divisors += 427\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl49q0m04.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpl49q0m04.scala:102:8 ------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisor\n\e[31m\e[31m    |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m    |\e[0m        Not found: divisor\n\e[31m    |\e[0m\n\e[31m    |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 2 to n by 2) {\n            if (n % d == 0) {\n           \
    \     divisors += d\n            }\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp62ttsho9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp62ttsho9.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.update(0, n)\n        divisors.update(1, n-1)\n        divisors.update(n,\
    \ n/2)\n        divisors.update(n-1, n/2)\n        divisors.update(n/2, n/3)\n\
    \        divisors.update(n/3, n/4)\n        divisors.update(n/4, n/5)\n      \
    \  divisors.update(n/5, n/6)\n        divisors.update(n/6, n/7)\n        divisors.update(n/7,\
    \ n/8)\n        divisors.update(n/8, n/9)\n        divisors.update(n/9, n/10)\n\
    \        divisors.update(n/10, n/11)\n        divisors.update(n/11, n/12)\n  \
    \      divisors.update(n/12, n/13)\n        divisors.update(n/13, n/14)\n    \
    \    divisors.update(n/14, n/15)\n        divisors.update(n/15, n/16)\n      \
    \  divisors.update(n/16, n/17)\n        divisors.update(n/17, n/18)\n        divisors.update(n/18,\
    \ n/19)\n        divisors.update(n/19, n/20)\n        divisors.update(n/20, n/21)\n\
    \        divisors.update(n/21, n/22)\n        divisors.update(n/22, n/23)\n  \
    \      divisors.update(n/23, n/24)\n        divisors.update(n/24, n/25)\n    \
    \    divisors.update(n/25, n/26)\n        divisors.update(n/26, n/27)\n      \
    \  divisors.update(n/27, n/28)\n        divisors.update(n/28, n/29)\n        divisors.update(n/29,\
    \ n/30)\n        divisors.update(n/30, n/31)\n        divisors.update(n/31, n/32)\n\
    \        divisors.update(n/32, n/33)\n        divisors.update(n/33, n/34)\n  \
    \      divisors.update(n/34, n/35)\n        divisors.update(n/35, n/36)\n    \
    \    divisors.update(n/36, n/37)\n        divisors.update(n/37, n/38)\n      \
    \  divisors.update(n/38, n/39)\n        divisors.update(n/39, n/40)\n        divisors.update(n/40,\
    \ n/41)\n        divisors.update(n/41, n/42)\n        divisors.update(n/42, n/43)\n\
    \        divisors.update(n/43, n/44)\n        divisors.update(n/44, n/45)\n  \
    \      divisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdafs_6ad.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpdafs_6ad.scala:56:8 -------------------------\e\
    [0m\e[0m\n\e[31m56 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 297\n        divisors += 301\n     \
    \   divisors += 303\n        divisors += 307\n        divisors += 311\n      \
    \  divisors += 313\n        divisors += 317\n        divisors += 319\n       \
    \ divisors += 323\n        divisors += 329\n        divisors += 331\n        divisors\
    \ += 337\n        divisors += 341\n        divisors += 343\n        divisors +=\
    \ 347\n        divisors += 353\n        divisors += 359\n        divisors += 363\n\
    \        divisors += 369\n        divisors += 373\n        divisors += 379\n \
    \       divisors += 383\n        divisors += 389\n        divisors += 393\n  \
    \      divisors += 397\n        divisors += 401\n        divisors += 407\n   \
    \     divisors += 411\n        divisors += 413\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx5anyadu.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6g0fcnf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpg6g0fcnf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n by 2){\n            divisors += i\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7ueebpfw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7ueebpfw.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792524
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 149\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 253\n        divisors += 257\n        divisors += 263\n  \
    \      divisors += 269\n        divisors += 271\n        divisors += 277\n   \
    \     divisors += 281\n        divisors += 283\n        divisors += 293\n    \
    \    divisors += 307\n        divisors += 311\n        divisors += 313\n     \
    \   divisors += 317\n        divisors += 323\n        divisors += 327\n      \
    \  divisors += 331\n        divisors += 337\n        divisors += 343\n       \
    \ divisors += 347\n        divisors += 353\n        divisors += 359\n        divisors\
    \ += 363\n        divisors += 369\n        divisors += 373\n        divisors +=\
    \ 379\n        divisors += 383\n        divisors += 389\n        divisors += 393\n\
    \        divisors += 397\n        divisors += 401\n        divisors += 407\n \
    \       divisors += 411\n        divisors += 413\n        divisors += 417\n  \
    \      divisors += 419\n        divisors += 421\n        divisors += 423\n   \
    \     divisors += 427\n        divisors += 43\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbl1ga0tt.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n){\n            val d = i\n            while(d % 2 == 0){\n       \
    \         d /= 2\n            }\n            divisors += d\n        }\n      \
    \  divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7e8htf6c.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7e8htf6c.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7e8htf6c.scala:12:18\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 2 to n) if (n % d == 0) divisors += d\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgan9ghh_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpgan9ghh_.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) \e[33mif\e\
    [0m (n % d == \e[31m0\e[0m) divisors += d\n\e[31m\e[31m  |\e[0m              \
    \         ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e\
    [31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        divisors += 2\n        divisors += 3\n        divisors += 5\n       \
    \ divisors += 7\n        divisors += 11\n        divisors += 13\n        divisors\
    \ += 17\n        divisors += 19\n        divisors += 23\n        divisors += 29\n\
    \        divisors += 31\n        divisors += 37\n        divisors += 41\n    \
    \    divisors += 43\n        divisors += 47\n        divisors += 53\n        divisors\
    \ += 59\n        divisors += 61\n        divisors += 67\n        divisors += 71\n\
    \        divisors += 73\n        divisors += 79\n        divisors += 83\n    \
    \    divisors += 89\n        divisors += 97\n        divisors += 101\n       \
    \ divisors += 103\n        divisors += 107\n        divisors += 109\n        divisors\
    \ += 113\n        divisors += 127\n        divisors += 131\n        divisors +=\
    \ 137\n        divisors += 139\n        divisors += 147\n        divisors += 151\n\
    \        divisors += 157\n        divisors += 163\n        divisors += 167\n \
    \       divisors += 173\n        divisors += 179\n        divisors += 181\n  \
    \      divisors += 191\n        divisors += 193\n        divisors += 197\n   \
    \     divisors += 199\n        divisors += 211\n        divisors += 223\n    \
    \    divisors += 227\n        divisors += 229\n        divisors += 233\n     \
    \   divisors += 239\n        divisors += 241\n        divisors += 243\n      \
    \  divisors += 247\n        divisors += 251\n        divisors += 253\n       \
    \ divisors += 257\n        divisors += 263\n        divisors += 269\n        divisors\
    \ += 271\n        divisors += 277\n        divisors += 281\n        divisors +=\
    \ 283\n        divisors += 293\n        divisors += 307\n        divisors += 311\n\
    \        divisors += 313\n        divisors += 317\n        divisors += 323\n \
    \       divisors += 329\n        divisors += 331\n        divisors += 337\n  \
    \      divisors += 343\n        divisors += 347\n        divisors += 353\n   \
    \     divisors += 359\n        divisors += 363\n        divisors += 369\n    \
    \    divisors += 373\n        divisors += 379\n        divisors += 383\n     \
    \   divisors += 389\n        divisors += 393\n        divisors += 397\n      \
    \  divisors += 401\n        divisors += 407\n        divisors += 413\n       \
    \ divisors += 421\n        divisors += 423\n        divisors += 429\n        divisors\
    \ += 431\n        divisors += 437\n        divisor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpymhlseai.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpymhlseai.scala:102:8 ------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisor\n\e[31m\e[31m    |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m    |\e[0m        Not found: divisor\n\e[31m    |\e[0m\n\e[31m    |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 257\n        divisors += 263\n        divisors += 269\n  \
    \      divisors += 271\n        divisors += 277\n        divisors += 281\n   \
    \     divisors += 283\n        divisors += 293\n        divisors += 307\n    \
    \    divisors += 311\n        divisors += 313\n        divisors += 317\n     \
    \   divisors += 323\n        divisors += 329\n        divisors += 331\n      \
    \  divisors += 337\n        divisors += 343\n        divisors += 349\n       \
    \ divisors += 353\n        divisors += 359\n        divisors += 363\n        divisors\
    \ += 369\n        divisors += 373\n        divisors += 379\n        divisors +=\
    \ 383\n        divisors += 389\n        divisors += 397\n        divisors += 401\n\
    \        divisors += 407\n        divisors += 413\n        divisors += 421\n \
    \       divisors += 427\n        divisors += 431\n        divisors += 437\n  \
    \      divisors += 443\n        divisors += 449\n        divisors += 455\n   \
    \     divisors += 461\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpi0gch2m5.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpi0gch2m5.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 341\n        divisors += 347\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 411\n        divisors\
    \ += 413\n        divisors += 417\n        divisors += 423\n        divisors +=\
    \ 429\n        divisors += 433\n        divisors += 439\n        divisors += 443\n\
    \        divisors += 449\n        divisors += 457\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpevtm1dhd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 341\n        divisors += 343\n        divisors += 347\n     \
    \   divisors += 353\n        divisors += 359\n        divisors += 363\n      \
    \  divisors += 369\n        divisors += 373\n        divisors += 379\n       \
    \ divisors += 383\n        divisors += 389\n        divisors += 393\n        divisors\
    \ += 397\n        divisors += 401\n        divisors += 407\n        divisors +=\
    \ 411\n        divisors += 413\n        divisors += 417\n        divisors += 423\n\
    \        divisors += 429\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpkga5lgu4.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpkga5lgu4.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6g0fcnf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpg6g0fcnf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        divisors += 2\n        divisors += 3\n        divisors += 5\n       \
    \ divisors += 7\n        divisors += 11\n        divisors += 13\n        divisors\
    \ += 17\n        divisors += 19\n        divisors += 23\n        divisors += 29\n\
    \        divisors += 31\n        divisors += 37\n        divisors += 41\n    \
    \    divisors += 43\n        divisors += 47\n        divisors += 53\n        divisors\
    \ += 59\n        divisors += 61\n        divisors += 67\n        divisors += 71\n\
    \        divisors += 73\n        divisors += 79\n        divisors += 83\n    \
    \    divisors += 89\n        divisors += 97\n        divisors += 101\n       \
    \ divisors += 103\n        divisors += 107\n        divisors += 109\n        divisors\
    \ += 113\n        divisors += 127\n        divisors += 131\n        divisors +=\
    \ 137\n        divisors += 139\n        divisors += 147\n        divisors += 151\n\
    \        divisors += 157\n        divisors += 163\n        divisors += 167\n \
    \       divisors += 173\n        divisors += 179\n        divisors += 181\n  \
    \      divisors += 191\n        divisors += 197\n        divisors += 199\n   \
    \     divisors += 211\n        divisors += 223\n        divisors += 227\n    \
    \    divisors += 229\n        divisors += 233\n        divisors += 239\n     \
    \   divisors += 241\n        divisors += 247\n        divisors += 251\n      \
    \  divisors += 257\n        divisors += 263\n        divisors += 269\n       \
    \ divisors += 271\n        divisors += 277\n        divisors += 281\n        divisors\
    \ += 283\n        divisors += 293\n        divisors += 307\n        divisors +=\
    \ 311\n        divisors += 313\n        divisors += 317\n        divisors += 323\n\
    \        divisors += 329\n        divisors += 331\n        divisors += 337\n \
    \       divisors += 343\n        divisors += 349\n        divisors += 351\n  \
    \      divisors += 359\n        divisors += 363\n        divisors += 369\n   \
    \     divisors += 373\n        divisors += 379\n        divisors += 383\n    \
    \    divisors += 389\n        divisors += 397\n        divisors += 401\n     \
    \   divisors += 407\n        divisors += 413\n        divisors += 421\n      \
    \  divisors += 427\n        divisors += 433\n        divisors += 439\n       \
    \ divisors += 443\n        divisors += 449\n        divisors += 457\n        divisors\
    \ += 461\n        divisors += 467\n        divisors += 47\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe0nmrr7i.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6g0fcnf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpg6g0fcnf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(4)\n\
    \        divisors.add(5)\n        divisors.add(6)\n        divisors.add(7)\n \
    \       divisors.add(8)\n        divisors.add(9)\n        divisors.add(10)\n \
    \       divisors.add(11)\n        divisors.add(12)\n        divisors.add(13)\n\
    \        divisors.add(14)\n        divisors.add(15)\n        divisors.add(16)\n\
    \        divisors.add(17)\n        divisors.add(18)\n        divisors.add(19)\n\
    \        divisors.add(20)\n        divisors.add(21)\n        divisors.add(22)\n\
    \        divisors.add(23)\n        divisors.add(24)\n        divisors.add(25)\n\
    \        divisors.add(26)\n        divisors.add(27)\n        divisors.add(28)\n\
    \        divisors.add(29)\n        divisors.add(30)\n        divisors.add(31)\n\
    \        divisors.add(32)\n        divisors.add(33)\n        divisors.add(34)\n\
    \        divisors.add(35)\n        divisors.add(36)\n        divisors.add(37)\n\
    \        divisors.add(38)\n        divisors.add(39)\n        divisors.add(40)\n\
    \        divisors.add(41)\n        divisors.add(42)\n        divisors.add(43)\n\
    \        divisors.add(44)\n        divisors.add(45)\n        divisors.add(46)\n\
    \        divisors.add(47)\n        divisors.add(48)\n        divisors.add(49)\n\
    \        divisors.add(50)\n        divisors.add(51)\n        divisors.add(52)\n\
    \        divisors.add(53)\n        divisors.add(54)\n        divisors.add(55)\n\
    \        divisors.add(56)\n        divisors.add(57)\n        divisors.add(58)\n\
    \        divisors.add(59)\n        divisors.add(60)\n        divisors.add(61)\n\
    \        divisors.add(62)\n        divisors.add(63)\n        divisors.add(64)\n\
    \        divisors.add(65)\n        divisors.add(66)\n        divisors.add(67)\n\
    \        divisors.add(68)\n        divisors.add(69)\n        divisors.add(70)\n\
    \        divisors.add(71)\n        divisors.add(72)\n        divisors.add(73)\n\
    \        divisors.add(74)\n        divisors.add(75)\n        divisors.add(76)\n\
    \        divisors.add(77)\n        divisors.add(78)\n        divisors.add(79)\n\
    \        divisors.add(80)\n        divisors.add(81)\n        divisors.add(82)\n\
    \        divisors.add(83)\n        divisors.add(84)\n        divisors.add(85)\n\
    \        divisors.add(86)\n        divisors.add(87)\n        divisors.add(88)\n\
    \        divisors.add(\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp6cdk85g9.scala:97:21 ---------------------------\e\
    [0m\e[0m\n\e[31m97 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp6cdk85g9.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 307\n        divisors += 311\n     \
    \   divisors += 313\n        divisors += 317\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 343\n        divisors += 349\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 367\n        divisors += 373\n        divisors +=\
    \ 379\n        divisors += 383\n        divisors += 389\n        divisors += 397\n\
    \        divisors += 401\n        divisors += 407\n        divisors += 413\n \
    \       divisors += 421\n        divisors += 431\n        divisors += 437\n  \
    \      divisors += 443\n        divisors += 449\n        divisors += 457\n   \
    \     divisors += 461\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt7i8_234.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorNum =\
    \ 0\n        var maxDivisorNumNum = 0\n        var maxDivisorNumNumNum = 0\n \
    \       var maxDivisorNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0\n      \
    \  var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0\n      \
    \  var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNum = 0\n      \
    \  var maxDivisorNumNumNumNumNumNumNumNumNumNumNumNumNum = 0\n\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpgxm_z_ii.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m \e[36mmaxDivisorNumNumNumNumNumNumNumNumNum\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNum is already defined as\
    \ \e[33mvariable\e[0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpgxm_z_ii.scala:20:12 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mvar\e[0m \e[36mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNumNum is already defined\
    \ as \e[33mvariable\e[0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpgxm_z_ii.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mvar\e[0m \e[36mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNumNum is already defined\
    \ as \e[33mvariable\e[0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpgxm_z_ii.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mvar\e[0m \e[36mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNumNum is already defined\
    \ as \e[33mvariable\e[0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNumNum\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNot"
  stdout: ''
  timestamp: 1659792543
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.update(1, n)\n        divisors.update(n/2, n/2)\n        divisors.update(n/3,\
    \ n/3)\n        divisors.update(n/4, n/4)\n        divisors.update(n/5, n/5)\n\
    \        divisors.update(n/6, n/6)\n        divisors.update(n/7, n/7)\n      \
    \  divisors.update(n/8, n/8)\n        divisors.update(n/9, n/9)\n        divisors.update(n/10,\
    \ n/10)\n        divisors.update(n/11, n/11)\n        divisors.update(n/12, n/12)\n\
    \        divisors.update(n/13, n/13)\n        divisors.update(n/14, n/14)\n  \
    \      divisors.update(n/15, n/15)\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgcjcc5ez.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(103)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(143)\n\
    \        divisors.add(149)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(253)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(269)\n        divisors.add(271)\n        divisors.add(273)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(287)\n        divisors.add(293)\n        divisors.add(297)\n\
    \        divisors.add(301)\n        divisors.add(303)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(323)\n        divisors.add(327)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(367)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfzama4u0.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 257\n        divisors += 263\n  \
    \      divisors += 269\n        divisors += 271\n        divisors += 277\n   \
    \     divisors += 281\n        divisors += 283\n        divisors += 293\n    \
    \    divisors += 307\n        divisors += 311\n        divisors += 313\n     \
    \   divisors += 317\n        divisors += 323\n        divisors += 329\n      \
    \  divisors += 331\n        divisors += 337\n        divisors += 343\n       \
    \ divisors += 349\n        divisors += 353\n        divisors += 359\n        divisors\
    \ += 363\n        divisors += 369\n        divisors += 373\n        divisors +=\
    \ 379\n        divisors += 383\n        divisors += 389\n        divisors += 397\n\
    \        divisors += 401\n        divisors += 407\n        divisors += 411\n \
    \       divisors += 413\n        divisors += 417\n        divisors += 419\n  \
    \      divisors += 421\n        divisors += 423\n        divisors += 427\n   \
    \     divisors += 431\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppoyh58sc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer(n)\n        val\
    \ largestDivisor = mutable.Long.MinValue\n        for(i <- 1 to n){\n        \
    \    val divisor = i / divisors.last\n            if(divisor == 0){\n        \
    \        divisors += i\n            }\n            else if(divisor > largestDivisor){\n\
    \                largestDivisor = divisor\n            }\n        }\n        largestDivisor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9vsi1kro.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer(n)\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9vsi1kro.scala:9:29 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Long.MinValue\n\e\
    [31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m  |\e[0m  \
    \                           Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9vsi1kro.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp9vsi1kro.scala:16:31 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                largestDivisor = divisor\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \           Reassignment to val largestDivisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659792543
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (i <- 1 to n by 2) {\n            if (n % i == 0) {\n                divisors\
    \ += i\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2y1uol42.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2y1uol42.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        divisors += 2\n        divisors +=\
    \ 3\n        divisors += 5\n        divisors += 7\n        divisors += 11\n  \
    \      divisors += 13\n        divisors += 17\n        divisors += 19\n      \
    \  divisors += 23\n        divisors += 29\n        divisors += 31\n        divisors\
    \ += 37\n        divisors += 41\n        divisors += 43\n        divisors += 47\n\
    \        divisors += 53\n        divisors += 59\n        divisors += 61\n    \
    \    divisors += 67\n        divisors += 71\n        divisors += 73\n        divisors\
    \ += 79\n        divisors += 83\n        divisors += 89\n        divisors += 97\n\
    \        divisors += 101\n        divisors += 103\n        divisors += 107\n \
    \       divisors += 109\n        divisors += 113\n        divisors += 127\n  \
    \      divisors += 131\n        divisors += 137\n        divisors += 139\n   \
    \     divisors += 147\n        divisors += 151\n        divisors += 157\n    \
    \    divisors += 163\n        divisors += 167\n        divisors += 173\n     \
    \   divisors += 179\n        divisors += 181\n        divisors += 191\n      \
    \  divisors += 197\n        divisors += 199\n        divisors += 211\n       \
    \ divisors += 223\n        divisors += 227\n        divisors += 229\n        divisors\
    \ += 233\n        divisors += 239\n        divisors += 241\n        divisors +=\
    \ 243\n        divisors += 247\n        divisors += 251\n        divisors += 257\n\
    \        divisors += 263\n        divisors += 269\n        divisors += 271\n \
    \       divisors += 277\n        divisors += 281\n        divisors += 283\n  \
    \      divisors += 293\n        divisors += 307\n        divisors += 311\n   \
    \     divisors += 313\n        divisors += 317\n        divisors += 323\n    \
    \    divisors += 329\n        divisors += 331\n        divisors += 337\n     \
    \   divisors += 343\n        divisors += 349\n        divisors += 353\n      \
    \  divisors += 359\n        divisors += 363\n        divisors += 369\n       \
    \ divisors += 373\n        divisors += 379\n        divisors += 383\n        divisors\
    \ += 389\n        divisors += 397\n        divisors += 401\n        divisors +=\
    \ 407\n        divisors += 413\n        divisors += 417\n        divisors += 423\n\
    \        divisors += 429\n        divisors += 431\n        divisors += 437\n \
    \       divisors += 443\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2dm3oe9m.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2dm3oe9m.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2dm3oe9m.scala:101:8 ------------------------\e\
    [0m\e[0m\n\e[31m101 |\e[0m        divisor\n\e[31m\e[31m    |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m    |\e[0m        Not found: divisor\n\e[31m    |\e[0m\n\e[31m    |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659792543
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2) {\n            if (n % i == 0) {\n           \
    \     divisors += i\n            }\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1ovcmaps.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp1ovcmaps.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(107)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(365)\n\
    \        divisors.add(367)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(383)\n        divisors.add(389)\n        divisors.add(397)\n\
    \        divisors.add(401)\n        divisors.add(409)\n        divisors.add(4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphnxa4bvc.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphnxa4bvc.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792536

{
  "language": "scala",
  "name": "HumanEval_28_concatenate",
  "results": [
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        stringList.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjai5ne2h.scala:10:8 -------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        stringList.foldLeft(\u001b[31m\"\"\u001b[0m)(_ + _)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Not found: stringList\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798971
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.length match {\n            case 0 => \"\"\n            case _ => strings.foldLeft(\"\")(_ + _)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798973
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.length match {\n            case 0 => \"\"\n            case 1 => strings(0)\n            case _ => strings.foldLeft(\"\")(_ + _)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798973
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        stringList.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjai5ne2h.scala:10:8 -------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        stringList.foldLeft(\u001b[31m\"\"\u001b[0m)(_ + _)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Not found: stringList\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798971
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Concatenate list of strings into a single string\n    // >>> concatenate([])\n    // ''\n    // >>> concatenate(['a', 'b', 'c'])\n    // 'abc'\n    def concatenate(strings : List[String]) : String = {\n        strings.foldLeft(\"\")(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(concatenate((List[String]())).equals((\"\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\"))).equals((\"xyz\")));\n    assert(concatenate((List[String](\"x\", \"y\", \"z\", \"w\", \"k\"))).equals((\"xyzwk\")));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659798907
    }
  ]
}
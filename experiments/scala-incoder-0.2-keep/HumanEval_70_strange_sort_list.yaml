name: HumanEval_70_strange_sort_list
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given list of integers, return list in strange order.\n    // Strange sorting,\
  \ is when you start with the minimum value,\n    // then maximum of the remaining\
  \ integers, then minimum and so on.\n    // Examples:\n    // strange_sort_list([1,\
  \ 2, 3, 4]) == [1, 4, 2, 3]\n    // strange_sort_list([5, 5, 5, 5]) == [5, 5, 5,\
  \ 5]\n    // strange_sort_list([]) == []\n    def strangeSortList(lst : List[Long])\
  \ : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(strangeSortList((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 4l.toLong, 2l.toLong,\
  \ 3l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong, 6l.toLong, 7l.toLong,\
  \ 8l.toLong, 9l.toLong))).equals((List[Long](5l.toLong, 9l.toLong, 6l.toLong, 8l.toLong,\
  \ 7l.toLong))));\n    assert(strangeSortList((List[Long](1l.toLong, 2l.toLong, 3l.toLong,\
  \ 4l.toLong, 5l.toLong))).equals((List[Long](1l.toLong, 5l.toLong, 2l.toLong, 4l.toLong,\
  \ 3l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong, 6l.toLong, 7l.toLong,\
  \ 8l.toLong, 9l.toLong, 1l.toLong))).equals((List[Long](1l.toLong, 9l.toLong, 5l.toLong,\
  \ 8l.toLong, 6l.toLong, 7l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong,\
  \ 5l.toLong, 5l.toLong, 5l.toLong))).equals((List[Long](5l.toLong, 5l.toLong, 5l.toLong,\
  \ 5l.toLong))));\n    assert(strangeSortList((List[Long]())).equals((List[Long]())));\n\
  \    assert(strangeSortList((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong,\
  \ 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong))).equals((List[Long](1l.toLong, 8l.toLong,\
  \ 2l.toLong, 7l.toLong, 3l.toLong, 6l.toLong, 4l.toLong, 5l.toLong))));\n    assert(strangeSortList((List[Long](0l.toLong,\
  \ 2l.toLong, 2l.toLong, 2l.toLong, 5l.toLong, 5l.toLong, -5l.toLong, -5l.toLong))).equals((List[Long](-5l.toLong,\
  \ 5l.toLong, -5l.toLong, 5l.toLong, 0l.toLong, 2l.toLong, 2l.toLong, 2l.toLong))));\n\
  \    assert(strangeSortList((List[Long](111111l.toLong))).equals((List[Long](111111l.toLong))));\n\
  \    }\n\n}\n"
completions: ["        val minValue = lst.min\n        val maxValue = lst.max\n  \
    \      val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val m = lst.min\n        val\
    \ n = lst.max\n        val r = lst.filter(_ != m).filter(_ != n).sortBy(_ - m)\n\
    \        val l = lst.filter(_ != m).filter(_ != n).sortBy(_ - n)\n        val\
    \ s = lst.filter(_ != m).filter(_ != n).sortBy(_ - r)\n        val t = lst.filter(_\
    \ != m).filter(_ != n).sortBy(_ - l)\n        l + r + s + t", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val tempList = lst.filterNot(x\
    \ => x == minValue)\n        val tempList2 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList3 = lst.filterNot(x => x == minValue)\n        val tempList4\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList5 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList6 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList7 = lst.filterNot(x => x == minValue)\n        val tempList8\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList9 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList10 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList11 = lst.filterNot(x => x == minValue)\n        val tempList12\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList13 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList14 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList15 = lst.filterNot(x => x == minValue)\n        val tempList16\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList17 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList18 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList19 = lst.filterNot(x => x == minValue)\n        val tempList20\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList21 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList22 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList23 = lst.filterNot(x => x == minValue)\n        val tempList24\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList25 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList26 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList27 = lst.filterNot(x => x == minValue)\n        val tempList28\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList29 = lst.filterNot(x\
    \ => ", "        val m = lst.min\n        val n = lst.max\n        val r = lst.filter(_\
    \ != m)\n        val s = lst.filter(_ != n)\n        val t = lst.filter(_ != r)\n\
    \        val u = lst.filter(_ != s)\n        val v = lst.filter(_ != t)\n    \
    \    val w = lst.filter(_ != u)\n        val x = lst.filter(_ != v)\n        val\
    \ y = lst.filter(_ != w)\n        val z = lst.filter(_ != x)\n        val a =\
    \ lst.filter(_ != y)\n        val b = lst.filter(_ != z)\n        val c = lst.filter(_\
    \ != b)\n        val d = lst.filter(_ != c)\n        val e = lst.filter(_ != d)\n\
    \        val f = lst.filter(_ != e)\n        val g = lst.filter(_ != f)\n    \
    \    val h = lst.filter(_ != g)\n        val i = lst.filter(_ != h)\n        val\
    \ j = lst.filter(_ != i)\n        val k = lst.filter(_ != j)\n        val l =\
    \ lst.filter(_ != k)\n        val m = lst.filter(_ != l)\n        val n = lst.filter(_\
    \ != m)\n        val r = lst.filter(_ != n)\n        val s = lst.filter(_ != r)\n\
    \        val t = lst.filter(_ != s)\n        val u = lst.filter(_ != t)\n    \
    \    val v = lst.filter(_ != u)\n        val w = lst.filter(_ != v)\n        val\
    \ x = lst.filter(_ != w)\n        val y = lst.filter(_ != x)\n        val z =\
    \ lst.filter(_ != y)\n        val a = lst.filter(_ != z)\n        val b = lst.filter(_\
    \ != a)\n        val c = lst.filter(_ != b)\n        val d = lst.filter(_ != c)\n\
    \        val e = lst.filter(_ != d)\n        val f = lst.filter(_ != e)\n    \
    \    val g = lst.filter(_ != f)\n        val h = lst.filter(_ != g)\n        val\
    \ i = lst.filter(_ != h)\n        val j = lst.filter(_ != i)\n        val k =\
    \ lst.filter(_ != j)\n        val l = lst.filter(_ != k)\n        val m = lst.filter(_\
    \ != l)\n        val n = lst.filter(_ != m)\n        val r = lst.filter(_ != n)\n\
    \        val s = lst.filter(_ != r)\n        val t = lst.filter(_ != s)\n    \
    \    val u = lst.filter(_ != ", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue, minIndex\
    \ + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n        val\
    \ minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue,\
    \ maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n\
    \        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5\
    \ = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue,\
    \ maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n\
    \        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7\
    \ = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue,\
    \ maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n\
    \        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9\
    \ = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue,\
    \ maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n\
    \        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11\
    \ = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue,\
    \ maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n\
    \        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13\
    \ = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue,\
    \ maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n\
    \        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15\
    \ = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue,\
    \ maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n\
    \        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17\
    \ = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        val newList2 = newList.sortWith((x, y) => y < x)\n   \
    \     val newList3 = newList2.sortWith((x, y) => x > y)\n        val newList4\
    \ = newList3.sortWith((x, y) => y > x)\n        newList4.toList", "        val\
    \ minLst = lst.min\n        val maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n\
    \        val maxLstIndex = lst.indexOf(maxLst)\n        val minLstIndex2 = lst.indexOf(minLst,\
    \ minLstIndex + 1)\n        val maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex\
    \ + 1)\n        val minLstIndex3 = lst.indexOf(minLst, minLstIndex2 + 1)\n   \
    \     val maxLstIndex3 = lst.indexOf(maxLst, maxLstIndex2 + 1)\n        val minLstIndex4\
    \ = lst.indexOf(minLst, minLstIndex3 + 1)\n        val maxLstIndex4 = lst.indexOf(maxLst,\
    \ maxLstIndex3 + 1)\n        val minLstIndex5 = lst.indexOf(minLst, minLstIndex4\
    \ + 1)\n        val maxLstIndex5 = lst.indexOf(maxLst, maxLstIndex4 + 1)\n   \
    \     val minLstIndex6 = lst.indexOf(minLst, minLstIndex5 + 1)\n        val maxLstIndex6\
    \ = lst.indexOf(maxLst, maxLstIndex5 + 1)\n        val minLstIndex7 = lst.indexOf(minLst,\
    \ minLstIndex6 + 1)\n        val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex6\
    \ + 1)\n        val minLstIndex8 = lst.indexOf(minLst, minLstIndex7 + 1)\n   \
    \     val maxLstIndex8 = lst.indexOf(maxLst, maxLstIndex7 + 1)\n        val minLstIndex9\
    \ = lst.indexOf(minLst, minLstIndex8 + 1)\n        val maxLstIndex9 = lst.indexOf(maxLst,\
    \ maxLstIndex8 + 1)\n        val minLstIndex10 = lst.indexOf(minLst, minLstIndex9\
    \ + 1)\n        val maxLstIndex10 = lst.indexOf(maxLst, maxLstIndex9 + 1)\n  \
    \      val minLstIndex11 = lst.indexOf(minLst, minLstIndex10 + 1)\n        val\
    \ maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10 + 1)\n        val minLstIndex12\
    \ = lst.indexOf(minLst, minLstIndex11 + 1)\n        val maxLstIndex12 = lst.indexOf(maxLst,\
    \ maxLstIndex11 + 1)\n        val minLstIndex13 = lst.indexOf(minLst, minLstIndex12\
    \ + 1)\n        val maxLstIndex13 = l", "        val list = mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = ", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex2 = lst.indexOf(minValue)\n        val maxValueIndex2\
    \ = lst.indexOf(maxValue)\n        val minValueIndex3 = lst.indexOf(minValue)\n\
    \        val maxValueIndex3 = lst.indexOf(maxValue)\n        val minValueIndex4\
    \ = lst.indexOf(minValue)\n        val maxValueIndex4 = lst.indexOf(maxValue)\n\
    \        val minValueIndex5 = lst.indexOf(minValue)\n        val maxValueIndex5\
    \ = lst.indexOf(maxValue)\n        val minValueIndex6 = lst.indexOf(minValue)\n\
    \        val maxValueIndex6 = lst.indexOf(maxValue)\n        val minValueIndex7\
    \ = lst.indexOf(minValue)\n        val maxValueIndex7 = lst.indexOf(maxValue)\n\
    \        val minValueIndex8 = lst.indexOf(minValue)\n        val maxValueIndex8\
    \ = lst.indexOf(maxValue)\n        val minValueIndex9 = lst.indexOf(minValue)\n\
    \        val maxValueIndex9 = lst.indexOf(maxValue)\n        val minValueIndex10\
    \ = lst.indexOf(minValue)\n        val maxValueIndex10 = lst.indexOf(maxValue)\n\
    \        val minValueIndex11 = lst.indexOf(minValue)\n        val maxValueIndex11\
    \ = lst.indexOf(maxValue)\n        val minValueIndex12 = lst.indexOf(minValue)\n\
    \        val maxValueIndex12 = lst.indexOf(maxValue)\n        val minValueIndex13\
    \ = lst.indexOf(minValue)\n        val maxValueIndex13 = lst.indexOf(maxValue)\n\
    \        val minValueIndex14 = lst.indexOf(minValue)\n        val maxValueIndex14\
    \ = lst.indexOf(maxValue)\n        val minValueIndex15 = lst.indexOf(minValue)\n\
    \        val maxValueIndex15 = lst.indexOf(maxValue)\n        val minValueIndex16\
    \ = lst.indexOf(minValue)\n        val maxValueIndex16 = lst.indexOf(maxValue)\n\
    \        val minValueIndex17 = lst.indexOf(minValue)\n        val maxValueIndex17\
    \ = lst.indexOf(maxValue)\n        val minValueIndex18 = lst.indexOf(minValue)\n\
    \        val maxValueIndex18 = lst.indexOf(maxValue)\n        val minValueIndex19\
    \ = lst.indexOf(minValue)\n        val maxValueIndex19 = l", "        val sortedList\
    \ = lst.sortWith(_ < _)\n        val reversedList = sortedList.reverse\n     \
    \   val reversedList2 = reversedList.sortWith(_ < _)\n        val reversedList3\
    \ = reversedList2.sortWith(_ < _)\n        val reversedList4 = reversedList3.sortWith(_\
    \ < _)\n        val reversedList5 = reversedList4.sortWith(_ < _)\n        val\
    \ reversedList6 = reversedList5.sortWith(_ < _)\n        val reversedList7 = reversedList6.sortWith(_\
    \ < _)\n        val reversedList8 = reversedList7.sortWith(_ < _)\n        val\
    \ reversedList9 = reversedList8.sortWith(_ < _)\n        val reversedList10 =\
    \ reversedList9.sortWith(_ < _)\n        val reversedList11 = reversedList10.sortWith(_\
    \ < _)\n        val reversedList12 = reversedList11.sortWith(_ < _)\n        val\
    \ reversedList13 = reversedList12.sortWith(_ < _)\n        val reversedList14\
    \ = reversedList13.sortWith(_ < _)\n        val reversedList15 = reversedList14.sortWith(_\
    \ < _)\n        val reversedList16 = reversedList15.sortWith(_ < _)\n        val\
    \ reversedList17 = reversedList16.sortWith(_ < _)\n        val reversedList18\
    \ = reversedList17.sortWith(_ < _)\n        val reversedList19 = reversedList18.sortWith(_\
    \ < _)\n        val reversedList20 = reversedList19.sortWith(_ < _)\n        val\
    \ reversedList21 = reversedList20.sortWith(_ < _)\n        val reversedList22\
    \ = reversedList21.sortWith(_ < _)\n        val reversedList23 = reversedList22.sortWith(_\
    \ < _)\n        val reversedList24 = reversedList23.sortWith(_ < _)\n        val\
    \ reversedList25 = reversedList24.sortWith(_ < _)\n        val reversedList26\
    \ = reversedList25.sortWith(_ < _)\n        val reversedList27 = reversedList26.sortWith(_\
    \ < _)\n        val reversedList28 = reversedList27.sortWith(_ < _)\n        val\
    \ reversedList29 = reversedList28.sortWith(_ < _", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val min", "        val list = new mutable.ListBuffer[Long]()\n      \
    \  val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    for(i <- minIndex to maxIndex){\n            list += lst(i)\n        }\n\
    \        list.sortWith((x, y) => x.compareTo(y))\n        list.toList", "    \
    \    val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val middleIndex = math.ceil(lst.size / 2)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min) // get index of minimum value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(lst.max)\
    \ // get index of maximum value\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middle", "        val result = new mutable.ListBuffer[Long]()\n\
    \        var minValue = lst.head\n        var maxValue = lst.last\n        var\
    \ currentValue = lst.head\n        while(currentValue < maxValue) {\n        \
    \    result.add(currentValue)\n            currentValue += 1\n        }\n    \
    \    while(currentValue > minValue) {\n            result.add(currentValue)\n\
    \            currentValue -= 1\n        }\n        result.toList", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = 0\n\
    \        val maxIndex = lst.size - 1\n        val tempList = lst.filter(_ < minValue)\n\
    \        val tempList2 = lst.filter(_ > maxValue)\n        val tempList3 = lst.filter(_\
    \ < minValue && _ > maxValue)\n        val tempList4 = lst.filter(_ < maxValue\
    \ && _ > minValue)\n        val tempList5 = lst.filter(_ < minValue && _ < maxValue)\n\
    \        val tempList6 = lst.filter(_ > maxValue && _ < minValue)\n        val\
    \ tempList7 = lst.filter(_ > minValue && _ > maxValue)\n        val tempList8\
    \ = lst.filter(_ > maxValue && _ > minValue)\n        val tempList9 = lst.filter(_\
    \ < maxValue && _ < minValue)\n        val tempList10 = lst.filter(_ < minValue\
    \ && _ > maxValue)\n        val tempList11 = lst.filter(_ > maxValue && _ > minValue)\n\
    \        val tempList12 = lst.filter(_ > minValue && _ < maxValue)\n        val\
    \ tempList13 = lst.filter(_ < maxValue && _ > minValue)\n        val tempList14\
    \ = lst.filter(_ < minValue && _ < maxValue)\n        val tempList15 = lst.filter(_\
    \ > maxValue && _ > minValue)\n        val tempList16 = lst.filter(_ > minValue\
    \ && _ < maxValue)\n        val tempList17 = lst.filter(_ < maxValue && _ > minValue)\n\
    \        val tempList18 = lst.filter(_ < minValue && _ < maxValue)\n        val\
    \ tempList19 = lst.filter(_ > maxValue && _ > minValue)\n        val tempList20\
    \ = lst.filter(_ > minValue && _ < maxValue)\n        val tempList21 = lst.filter(_\
    \ < maxValue && _ > minValue)\n        val tempList22 = lst.filter(_ < minValue\
    \ && _ < maxValue)\n        val tempList23 = lst.filter(_ > maxValue && _ > minValue)\n\
    \        val tempList24 = lst.filter(_ > minValue && _ < maxValue)\n        val\
    \ tempList25 = lst.filter(_ < maxValue && _ > minValue)\n        val tempList26\
    \ = lst.filter(_ < minValue && _ < maxValue)\n        val tempList27 = lst.filter(_",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val newList = lst.take(minIndex).reverse.take(maxIndex).reverse.take(minIndex).reverse.take(maxIndex).reverse\n\
    \        newList", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val l = lst.size\n        val\
    \ m = lst.min\n        val n = lst.max\n        val r = lst.filter(_ > m).filter(_\
    \ < n).reverse\n        r.foldLeft(lst) { (acc, x) => x :: acc}", "        val\
    \ sortedList = lst.sortWith(_ < _)\n        val reversedList = sortedList.reverse\n\
    \        val reversedSortedList = reversedList.sortWith(_ < _)\n        val reversedSortedList2\
    \ = reversedSortedList.reverse\n        val reversedSortedList3 = reversedSortedList2.sortWith(_\
    \ < _)\n        val reversedSortedList4 = reversedSortedList3.sortWith(_ < _)\n\
    \        val reversedSortedList5 = reversedSortedList4.sortWith(_ < _)\n     \
    \   val reversedSortedList6 = reversedSortedList5.sortWith(_ < _)\n        val\
    \ reversedSortedList7 = reversedSortedList6.sortWith(_ < _)\n        val reversedSortedList8\
    \ = reversedSortedList7.sortWith(_ < _)\n        val reversedSortedList9 = reversedSortedList8.sortWith(_\
    \ < _)\n        val reversedSortedList10 = reversedSortedList9.sortWith(_ < _)\n\
    \        val reversedSortedList11 = reversedSortedList10.sortWith(_ < _)\n   \
    \     val reversedSortedList12 = reversedSortedList11.sortWith(_ < _)\n      \
    \  val reversedSortedList13 = reversedSortedList12.sortWith(_ < _)\n        val\
    \ reversedSortedList14 = reversedSortedList13.sortWith(_ < _)\n        val reversedSortedList15\
    \ = reversedSortedList14.sortWith(_ < _)\n        val reversedSortedList16 = reversedSortedList15.sortWith(_\
    \ < _)\n        val reversedSortedList17 = reversedSortedList16.sortWith(_ < _)\n\
    \        val reversedSortedList18 = reversedSortedList17.sortWith(_ < _)\n   \
    \     val reversedSortedList19 = reversedSortedList18.sortWith(_ < _)\n      \
    \  val reversedSortedList20 = reversedSortedList19.sortWith(_ < _)\n        val\
    \ reversedSortedList21 = reversedSortedList20.sortWith(_ < _)\n        val reversedSortedList22\
    \ = reversedSortedList21.sortWith(_ < _)\n        val reversedSortedList23 = reversedSortedList22.sortWith(_\
    \ < _)\n        val reversedSortedList24 = reversedSortedList23.sortWith(_ < _)\n\
    \        val reversedSortedList25 = reversedSortedList24.sortWith(_ < _)\n   \
    \     val reversedSortedList26 = reversedSorted", "        val minLst = lst.min\n\
    \        val maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n\
    \        val maxLstIndex = lst.indexOf(maxLst)\n        val minLstIndex2 = lst.indexOf(minLst,\
    \ minLstIndex + 1)\n        val maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex\
    \ + 1)\n        val minLstIndex3 = lst.indexOf(minLst, minLstIndex + 2)\n    \
    \    val maxLstIndex3 = lst.indexOf(maxLst, maxLstIndex + 2)\n        val minLstIndex4\
    \ = lst.indexOf(minLst, minLstIndex + 3)\n        val maxLstIndex4 = lst.indexOf(maxLst,\
    \ maxLstIndex + 3)\n        val minLstIndex5 = lst.indexOf(minLst, minLstIndex\
    \ + 4)\n        val maxLstIndex5 = lst.indexOf(maxLst, maxLstIndex + 4)\n    \
    \    val minLstIndex6 = lst.indexOf(minLst, minLstIndex + 5)\n        val maxLstIndex6\
    \ = lst.indexOf(maxLst, maxLstIndex + 5)\n        val minLstIndex7 = lst.indexOf(minLst,\
    \ minLstIndex + 6)\n        val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex\
    \ + 6)\n        val minLstIndex8 = lst.indexOf(minLst, minLstIndex + 7)\n    \
    \    val maxLstIndex8 = lst.indexOf(maxLst, maxLstIndex + 7)\n        val minLstIndex9\
    \ = lst.indexOf(minLst, minLstIndex + 8)\n        val maxLstIndex9 = lst.indexOf(maxLst,\
    \ maxLstIndex + 8)\n        val minLstIndex10 = lst.indexOf(minLst, minLstIndex\
    \ + 9)\n        val maxLstIndex10 = lst.indexOf(maxLst, maxLstIndex + 9)\n   \
    \     val minLstIndex11 = lst.indexOf(minLst, minLstIndex + 10)\n        val maxLstIndex11\
    \ = lst.indexOf(maxLst, maxLstIndex + 10)\n        val minLstIndex12 = lst.indexOf(minLst,\
    \ minLstIndex + 11)\n        val maxLstIndex12 = lst.indexOf(maxLst, maxLstIndex\
    \ + 11)\n        val minLstIndex13 = lst.indexOf(minLst, minLstIndex + 12)\n \
    \       val maxLstIndex13 = l", "        val lst2 = lst.sortBy(x => x)\n     \
    \   val lst3 = lst2.sortBy(x => -x)\n        lst3.reverse", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        val newList2 = newList.filter((x, i) => i >= minIndex\
    \ && i <= maxIndex)\n        newList2.reverse", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => if (x == minValue) -1 else if (y == minValue) 1 else 0)\n        val newList2\
    \ = newList.sortWith((x, y) => if (x == maxValue) -1 else if (y == maxValue) 1\
    \ else 0)\n        val newList3 = newList2.sortWith((x, y) => if (x == minValue)\
    \ -1 else if (y == minValue) 1 else 0)\n        val newList4 = newList3.sortWith((x,\
    \ y) => if (x == maxValue) -1 else if (y == maxValue) 1 else 0)\n        val newList5\
    \ = newList4.sortWith((x, y) => if (x == minValue) -1 else if (y == minValue)\
    \ 1 else 0)\n        val newList6 = newList5.sortWith((x, y) => if (x == maxValue)\
    \ -1 else if (y == maxValue) 1 else 0)\n        val newList7 = newList6.sortWith((x,\
    \ y) => if (x == minValue) -1 else if (y == minValue) 1 else 0)\n        val newList8\
    \ = newList7.sortWith((x, y) => if (x == maxValue) -1 else if (y == maxValue)\
    \ 1 else 0)\n        val newList9 = newList8.sortWith((x, y) => if (x == minValue)\
    \ -1 else if (y == minValue) 1 else 0)\n        val newList10 = newList9.sortWith((x,\
    \ y) => if (x == maxValue) -1 else if (y == maxValue) 1 else 0)\n        val newList11\
    \ = newList10.sortWith((x, y) => if (x == minValue) -1 else if (y == minValue)\
    \ 1 else 0)\n        val newList12 = newList11.sortWith((x, y) => if (x == maxValue)\
    \ -1 else if (y == maxValue) 1 else 0)\n        val newList13 = newList12.sortWith((x,\
    \ y) => if (x == minValue) -1 else if (y == minValue) 1 else 0)\n        val newList14\
    \ = newList13.sortWith((x, y) => if (x == maxValue) -1 else if (y == maxValue)\
    \ 1 else 0)\n        val newList15 = newList14.sortWith((x, y) => if (x == minValue)\
    \ -1 else if (y == minValue) 1 else 0)\n        val newList16 = newList15.sortWith((x,\
    \ y) => if (x == maxValue) -1 else if (y == maxValue) 1 else 0)\n        val newList17\
    \ = newList16.sortWith((x, y) => if (x == minValue) -1 else if (y == minValue)\
    \ 1 else 0)\n        val newList18 = newList17.sortWith((x, y) => if (x == maxValue)\
    \ -1 else if (", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val middle = minIndex + maxIndex / 2\n        val leftList = lst.take(minIndex)\n\
    \        val rightList = lst.drop(middle)\n        val leftListSorted = strangeSortList(leftList)\n\
    \        val rightListSorted = strangeSortList(rightList)\n        val sortedList\
    \ = leftListSorted ++ rightListSorted ++ lst.take(middle)\n        sortedList",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(_ == minValue)\n        val maxIndex = lst.indexWhere(_ ==\
    \ maxValue)\n        val minIndex2 = lst.indexWhere(_ == minValue)\n        val\
    \ maxIndex2 = lst.indexWhere(_ == maxValue)\n        val minIndex3 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex3 = lst.indexWhere(_ == maxValue)\n      \
    \  val minIndex4 = lst.indexWhere(_ == minValue)\n        val maxIndex4 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex5 = lst.indexWhere(_ == minValue)\n      \
    \  val maxIndex5 = lst.indexWhere(_ == maxValue)\n        val minIndex6 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex6 = lst.indexWhere(_ == maxValue)\n      \
    \  val minIndex7 = lst.indexWhere(_ == minValue)\n        val maxIndex7 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex8 = lst.indexWhere(_ == minValue)\n      \
    \  val maxIndex8 = lst.indexWhere(_ == maxValue)\n        val minIndex9 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex9 = lst.indexWhere(_ == maxValue)\n      \
    \  val minIndex10 = lst.indexWhere(_ == minValue)\n        val maxIndex10 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex11 = lst.indexWhere(_ == minValue)\n     \
    \   val maxIndex11 = lst.indexWhere(_ == maxValue)\n        val minIndex12 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex12 = lst.indexWhere(_ == maxValue)\n     \
    \   val minIndex13 = lst.indexWhere(_ == minValue)\n        val maxIndex13 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex14 = lst.indexWhere(_ == minValue)\n     \
    \   val maxIndex14 = lst.indexWhere(_ == maxValue)\n        val minIndex15 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex15 = lst.indexWhere(_ == maxValue)\n     \
    \   val minIndex16 = lst.indexWhere(_ == minValue)\n        val maxIndex16 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex17 = lst.indexWhere(_ == minValue)\n     \
    \   val maxIndex17 = lst.indexWhere(_ == maxValue)\n        val minIndex18 = lst.indexWhere(_\
    \ == ", "        val minValue = lst.min\n        val maxValue = lst.max\n    \
    \    val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val listToSort = lst.filterNot(_ == minValue)\n        val listToSort2\
    \ = listToSort.filterNot(_ == maxValue)\n        val listToSort3 = listToSort2.filterNot(_\
    \ == minValue)\n        val listToSort4 = listToSort3.filterNot(_ == maxValue)\n\
    \        val listToSort5 = listToSort4.filterNot(_ == minValue)\n        val listToSort6\
    \ = listToSort5.filterNot(_ == maxValue)\n        val listToSort7 = listToSort6.filterNot(_\
    \ == minValue)\n        val listToSort8 = listToSort7.filterNot(_ == maxValue)\n\
    \        val listToSort9 = listToSort8.filterNot(_ == minValue)\n        val listToSort10\
    \ = listToSort9.filterNot(_ == maxValue)\n        val listToSort11 = listToSort10.filterNot(_\
    \ == minValue)\n        val listToSort12 = listToSort11.filterNot(_ == maxValue)\n\
    \        val listToSort13 = listToSort12.filterNot(_ == minValue)\n        val\
    \ listToSort14 = listToSort13.filterNot(_ == maxValue)\n        val listToSort15\
    \ = listToSort14.filterNot(_ == minValue)\n        val listToSort16 = listToSort15.filterNot(_\
    \ == maxValue)\n        val listToSort17 = listToSort16.filterNot(_ == minValue)\n\
    \        val listToSort18 = listToSort17.filterNot(_ == maxValue)\n        val\
    \ listToSort19 = listToSort18.filterNot(_ == minValue)\n        val listToSort20\
    \ = listToSort19.filterNot(_ == maxValue)\n        val listToSort21 = listToSort20.filterNot(_\
    \ == minValue)\n        val listToSort22 = listToSort21.filterNot(_ == maxValue)\n\
    \        val listToSort23 = listToSort22.filterNot(_ == minValue)\n        val\
    \ listToSort24 = listToSort23.filterNot(_ == maxValue)\n        val listToSort25\
    \ = listToSort24.filterNot(_ == minValue)\n        val listToSort26 = listToSort25.filterNot(_",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val middleIndex = math.ceil((minIndex + maxIndex) / 2)\n        val middleValue\
    \ = lst(middleIndex)\n        val newList = lst.filterNot(x => x == minValue)\n\
    \        newList ::: lst.filterNot(x => x == maxValue)\n        newList ::: lst.filterNot(x\
    \ => x == middleValue)", "        val minLst = lst.min\n        val maxLst = lst.max\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst, minLstIndex + 1)\n        val maxLstIndex\
    \ = lst.indexOf(maxLst, maxLstIndex + 1)\n        val minLstIndex = lst.indexOf(minLst,\
    \ minLstIndex - 1)\n        val maxLstIndex = lst.indexOf(maxLst, maxLstIndex\
    \ - 1)\n        val minLstIndex = lst.indexOf(minLst, minLstIndex + 2)\n     \
    \   val maxLstIndex = lst.indexOf(maxLst, maxLstIndex + 2)\n        val minLstIndex\
    \ = lst.indexOf(minLst, minLstIndex - 2)\n        val maxLstIndex = lst.indexOf(maxLst,\
    \ maxLstIndex - 2)\n        val minLstIndex = lst.indexOf(minLst, minLstIndex\
    \ + 3)\n        val maxLstIndex = lst.indexOf(maxLst, maxLstIndex + 3)\n     \
    \   val minLstIndex = lst.indexOf(minLst, minLstIndex - 3)\n        val maxLstIndex\
    \ = lst.indexOf(maxLst, maxLstIndex - 3)\n        val minLstIndex = lst.indexOf(minLst,\
    \ minLstIndex + 4)\n        val maxLstIndex = lst.indexOf(maxLst, maxLstIndex\
    \ + 4)\n        val minLstIndex = lst.indexOf(minLst, minLstIndex - 4)\n     \
    \   val maxLstIndex = lst.indexOf(maxLst, maxLstIndex - 4)\n        val minLstIndex\
    \ = lst.indexOf(minLst, minLstIndex + 5)\n        val maxLstIndex = lst.indexOf(maxLst,\
    \ maxLstIndex + 5)\n        val minLstIndex = lst.indexOf(minLst, minLstIndex\
    \ - 5)\n        val maxLstIndex = lst.indexOf(maxLst, maxLstIndex - 5)\n     \
    \   val minLstIndex = lst.indexOf(minLst, minLstIndex + 6)\n        val maxLstIndex\
    \ = lst.indexOf(maxLst, maxLstIndex + 6)\n        val minLstIndex = lst.indexOf(minLst,\
    \ minLstIndex - 6)\n        val maxLstIndex = lst.indexOf(maxLst, maxLstIndex\
    \ - 6)\n        val minLstIndex = lst.indexOf(minLst, minLstIndex", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith(\
    \ (x,y) => x < y)\n        val newList2 = newList.filter( x => x != minValue &&\
    \ x != maxValue)\n        val newList3 = newList2.filter( x => x != minIndex &&\
    \ x != maxIndex)\n        newList3", "        val list = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val tempList = lst.filter(_ != minValue)\n        val tempList2 = lst.filter(_\
    \ != maxValue)\n        val tempList3 = lst.filter(_ != minValue)\n        val\
    \ tempList4 = lst.filter(_ != maxValue)\n        val tempList5 = lst.filter(_\
    \ != minValue)\n        val tempList6 = lst.filter(_ != maxValue)\n        val\
    \ tempList7 = lst.filter(_ != minValue)\n        val tempList8 = lst.filter(_\
    \ != maxValue)\n        val tempList9 = lst.filter(_ != minValue)\n        val\
    \ tempList10 = lst.filter(_ != maxValue)\n        val tempList11 = lst.filter(_\
    \ != minValue)\n        val tempList12 = lst.filter(_ != maxValue)\n        val\
    \ tempList13 = lst.filter(_ != minValue)\n        val tempList14 = lst.filter(_\
    \ != maxValue)\n        val tempList15 = lst.filter(_ != minValue)\n        val\
    \ tempList16 = lst.filter(_ != maxValue)\n        val tempList17 = lst.filter(_\
    \ != minValue)\n        val tempList18 = lst.filter(_ != maxValue)\n        val\
    \ tempList19 = lst.filter(_ != minValue)\n        val tempList20 = lst.filter(_\
    \ != maxValue)\n        val tempList21 = lst.filter(_ != minValue)\n        val\
    \ tempList22 = lst.filter(_ != maxValue)\n        val tempList23 = lst.filter(_\
    \ != minValue)\n        val tempList24 = lst.filter(_ != maxValue)\n        val\
    \ tempList25 = lst.filter(_ != minValue)\n        val tempList26 = lst.filter(_\
    \ != maxValue)\n        val tempList27 = lst.filter(_ != minValue)\n        val\
    \ tempList28 = lst.filter(_ != maxValue)\n        val tempList29 = lst.filter(_\
    \ != minValue)\n        val tempList30 = lst.filter(_ != maxValue)\n        val\
    \ tempList31 = lst.filter(_ != minValue)\n        val tempList32 = lst.filter(_\
    \ != maxValue)\n        val tempList33 = lst.filter(_ != minValue)\n        val\
    \ tempList34 = lst.filter(_ != maxValue)\n", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.", "        val list = mutable.ListBuffer[Long]()\n\
    \        val min = lst.min\n        val max = lst.max\n        val minIndex =\
    \ lst.indexOf(min)\n        val maxIndex = lst.indexOf(max)\n        for(i <-\
    \ minIndex to maxIndex){\n            list += lst(i)\n        }\n        list.sortWith((x,\
    \ y) => x.compareTo(y))\n        list.toList", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => if (x == minValue) -1 else if (y == minValue) 1 else 0)\n        val newList2\
    \ = newList.sortWith((x, y) => if (x == maxValue) -1 else if (y == maxValue) 1\
    \ else 0)\n        val newList3 = newList2.sortWith((x, y) => if (x == minValue)\
    \ -1 else if (y == minValue) 1 else 0)\n        val newList4 = newList3.sortWith((x,\
    \ y) => if (x == maxValue) -1 else if (y == maxValue) 1 else 0)\n        newList4",
  "        val result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val middleIndex = math.ceil(lst.size\
    \ / 2)\n        val middleValue = lst(middleIndex)\n        val middleIndex =\
    \ lst.indexOf(middleValue)\n        val middleValue = lst(middleIndex)\n     \
    \   val middleIndex = lst.indexOf(middleValue)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(middleValue)\n        val middleValue =\
    \ lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n     \
    \   val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.",
  "        val minLst = lst.min\n        val maxLst = lst.max\n        val minLstIndex\
    \ = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n     \
    \   val minLstIndex2 = lst.indexOf(minLst, minLstIndex + 1)\n        val maxLstIndex2\
    \ = lst.indexOf(maxLst, maxLstIndex + 1)\n        val minLstIndex3 = lst.indexOf(minLst,\
    \ minLstIndex2 + 1)\n        val maxLstIndex3 = lst.indexOf(maxLst, maxLstIndex2\
    \ + 1)\n        val minLstIndex4 = lst.indexOf(minLst, minLstIndex3 + 1)\n   \
    \     val maxLstIndex4 = lst.indexOf(maxLst, maxLstIndex3 + 1)\n        val minLstIndex5\
    \ = lst.indexOf(minLst, minLstIndex4 + 1)\n        val maxLstIndex5 = lst.indexOf(maxLst,\
    \ maxLstIndex4 + 1)\n        val minLstIndex6 = lst.indexOf(minLst, minLstIndex5\
    \ + 1)\n        val maxLstIndex6 = lst.indexOf(maxLst, maxLstIndex5 + 1)\n   \
    \     val minLstIndex7 = lst.indexOf(minLst, minLstIndex6 + 1)\n        val maxLstIndex7\
    \ = lst.indexOf(maxLst, maxLstIndex6 + 1)\n        val minLstIndex8 = lst.indexOf(minLst,\
    \ minLstIndex7 + 1)\n        val maxLstIndex8 = lst.indexOf(maxLst, maxLstIndex7\
    \ + 1)\n        val minLstIndex9 = lst.indexOf(minLst, minLstIndex8 + 1)\n   \
    \     val maxLstIndex9 = lst.indexOf(maxLst, maxLstIndex8 + 1)\n        val minLstIndex10\
    \ = lst.indexOf(minLst, minLstIndex9 + 1)\n        val maxLstIndex10 = lst.indexOf(maxLst,\
    \ maxLstIndex9 + 1)\n        val minLstIndex11 = lst.indexOf(minLst, minLstIndex10\
    \ + 1)\n        val maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10 + 1)\n \
    \       val minLstIndex12 = lst.indexOf(minLst, minLstIndex11 + 1)\n        val\
    \ maxLstIndex12 = lst.indexOf(maxLst, maxLstIndex11 + 1)\n        val minLstIndex13\
    \ = lst.indexOf(minLst, minLstIndex12 + 1)\n        val maxLstIndex13 = l", " \
    \       val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = 0\n        val maxIndex = 0\n        val minList = new mutable.ListBuffer[Long]()\n\
    \        val maxList = new mutable.ListBuffer[Long]()\n        for(i <- 0 until\
    \ lst.size) {\n            val currentValue = lst(i)\n            if(currentValue\
    \ < minValue) {\n                minList.add(currentValue)\n                minIndex\
    \ = i\n            } else if(currentValue > maxValue) {\n                maxList.add(currentValue)\n\
    \                maxIndex = i\n            }\n        }\n        val newList =\
    \ minList.take(minIndex) ++ maxList.take(maxIndex) ++ minList.drop(minIndex) ++\
    \ maxList.drop(maxIndex)\n        newList.toList", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val midIndex = minIndex + (maxIndex - minIndex) / 2\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val midIndex = lst.indexOf(midValue)\n        val midValue\
    \ = lst(midIndex)\n        val mid", "        val list = mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.", "  \
    \      val list = lst.sortBy(x => x)\n        val newList = list.map(x => x +\
    \ 1)\n        newList", "        val list = new mutable.ListBuffer[Long]()\n \
    \       val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = l", "     \
    \   val list = new mutable.ListBuffer[Long]()\n        val min = lst.min\n   \
    \     val max = lst.max\n        val minIndex = lst.indexOf(min)\n        val\
    \ maxIndex = lst.indexOf(max)\n        for(i <- minIndex to maxIndex) {\n    \
    \        list += lst(i)\n        }\n        list.toList", "        val list =\
    \ new mutable.ListBuffer[Long]()\n        var minValue = lst(0)\n        var maxValue\
    \ = lst(0)\n        for (i <- 0 until lst.size) {\n            if (lst(i) < minValue)\
    \ {\n                minValue = lst(i)\n            }\n            if (lst(i)\
    \ > maxValue) {\n                maxValue = lst(i)\n            }\n        }\n\
    \        list.add(minValue)\n        list.add(maxValue)\n        for (i <- 0 until\
    \ lst.size) {\n            if (lst(i) < minValue) {\n                list.add(lst(i))\n\
    \            }\n            if (lst(i) > maxValue) {\n                list.add(lst(i))\n\
    \            }\n        }\n        list.toList", "        val m = lst.min\n  \
    \      val n = lst.max\n        val r = lst.filter(_ != m).filter(_ != n).sortWith(_\
    \ < _)\n        val s = lst.filter(_ != m).filter(_ != n).sortWith(_ > _)\n  \
    \      val t = lst.filter(_ != m).filter(_ != n).sortWith(_ <= _)\n        val\
    \ u = lst.filter(_ != m).filter(_ != n).sortWith(_ >= _)\n        r ++ s ++ t\
    \ ++ u", "        val minLst = lst.min\n        val maxLst = lst.max\n       \
    \ val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstVal = lst(minLstIndex)\n        val maxLstVal = lst(maxLstIndex)\n\
    \        val minLstIndex = lst.indexOf(minLstVal)\n        val maxLstIndex = lst.indexOf(maxLstVal)\n\
    \        val minLstVal = lst(minLstIndex)\n        val maxLstVal = lst(maxLstIndex)\n\
    \        val minLstIndex = lst.indexOf(minLstVal)\n        val maxLstIndex = lst.indexOf(maxLstVal)\n\
    \        val minLstVal = lst(minLstIndex)\n        val maxLstVal = lst(maxLstIndex)\n\
    \        val minLstIndex = lst.indexOf(minLstVal)\n        val maxLstIndex = lst.indexOf(maxLstVal)\n\
    \        val minLstVal = lst(minLstIndex)\n        val maxLstVal = lst(maxLstIndex)\n\
    \        val minLstIndex = lst.indexOf(minLstVal)\n        val maxLstIndex = lst.indexOf(maxLstVal)\n\
    \        val minLstVal = lst(minLstIndex)\n        val maxLstVal = lst(maxLstIndex)\n\
    \        val minLstIndex = lst.indexOf(minLstVal)\n        val maxLstIndex = lst.indexOf(maxLstVal)\n\
    \        val minLstVal = lst(minLstIndex)\n        val maxLstVal = lst(maxLstIndex)\n\
    \        val minLstIndex = lst.indexOf(minLstVal)\n        val maxLstIndex = lst.indexOf(maxLstVal)\n\
    \        val minLstVal = lst(minLstIndex)\n        val maxLstVal = lst(maxLstIndex)\n\
    \        val minLstIndex = lst.indexOf(minLstVal)\n        val maxLstIndex = lst.indexOf(maxLstVal)\n\
    \        val minLstVal = lst(minLstIndex)\n        val maxLstVal = lst(maxLstIndex)\n\
    \        val minLstIndex = lst.indexOf(minLstVal)\n        val maxLstIndex = lst.indexOf(maxLstVal)\n\
    \        val minLstVal = lst(minLstIndex)", "        val sorted = lst.sortBy(x\
    \ => x)\n        val reversed = sorted.reverse\n        reversed.toList", "  \
    \      val sorted = lst.sortWith((x, y) => x < y)\n        val reversed = sorted.reverse\n\
    \        val result = reversed.take(lst.size)\n        result", "        val newList\
    \ = mutable.ListBuffer[Long]()\n        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue)\n   \
    \     val maxIndex2 = lst.indexOf(maxValue)\n        val minIndex3 = lst.indexOf(minValue)\n\
    \        val maxIndex3 = lst.indexOf(maxValue)\n        val minIndex4 = lst.indexOf(minValue)\n\
    \        val maxIndex4 = lst.indexOf(maxValue)\n        val minIndex5 = lst.indexOf(minValue)\n\
    \        val maxIndex5 = lst.indexOf(maxValue)\n        val minIndex6 = lst.indexOf(minValue)\n\
    \        val maxIndex6 = lst.indexOf(maxValue)\n        val minIndex7 = lst.indexOf(minValue)\n\
    \        val maxIndex7 = lst.indexOf(maxValue)\n        val minIndex8 = lst.indexOf(minValue)\n\
    \        val maxIndex8 = lst.indexOf(maxValue)\n        val minIndex9 = lst.indexOf(minValue)\n\
    \        val maxIndex9 = lst.indexOf(maxValue)\n        val minIndex10 = lst.indexOf(minValue)\n\
    \        val maxIndex10 = lst.indexOf(maxValue)\n        val minIndex11 = lst.indexOf(minValue)\n\
    \        val maxIndex11 = lst.indexOf(maxValue)\n        val minIndex12 = lst.indexOf(minValue)\n\
    \        val maxIndex12 = lst.indexOf(maxValue)\n        val minIndex13 = lst.indexOf(minValue)\n\
    \        val maxIndex13 = lst.indexOf(maxValue)\n        val minIndex14 = lst.indexOf(minValue)\n\
    \        val maxIndex14 = lst.indexOf(maxValue)\n        val minIndex15 = lst.indexOf(minValue)\n\
    \        val maxIndex15 = lst.indexOf(maxValue)\n        val minIndex16 = lst.indexOf(minValue)\n\
    \        val maxIndex16 = lst.indexOf(maxValue)\n        val minIndex17 = lst.indexOf(minValue)\n\
    \        val maxIndex17 = lst.indexOf(maxValue)\n        val minIndex18 = lst.indexOf(minValue)\n\
    \        val maxIndex18 = lst.indexOf(maxValue)\n        val minIndex19 = lst.indexOf(minValue)\n\
    \        val maxIndex19 = lst.indexOf(maxValue)\n        val minIndex20 = lst.indexOf(minValue)\n\
    \        val maxIndex20 = lst.indexOf(maxValue)\n        val minIndex21 = lst.indexOf(minValue)\n\
    \        val maxIndex21 = lst.indexOf(maxValue)\n        val minIndex22", "  \
    \      val lst2 = lst.sortBy(x => x)\n        val lst3 = lst2.sortBy(x => x)\n\
    \        val lst4 = lst3.sortBy(x => x)\n        val lst5 = lst4.sortBy(x => x)\n\
    \        val lst6 = lst5.sortBy(x => x)\n        val lst7 = lst6.sortBy(x => x)\n\
    \        val lst8 = lst7.sortBy(x => x)\n        val lst9 = lst8.sortBy(x => x)\n\
    \        val lst10 = lst9.sortBy(x => x)\n        val lst11 = lst10.sortBy(x =>\
    \ x)\n        val lst12 = lst11.sortBy(x => x)\n        val lst13 = lst12.sortBy(x\
    \ => x)\n        val lst14 = lst13.sortBy(x => x)\n        val lst15 = lst14.sortBy(x\
    \ => x)\n        val lst16 = lst15.sortBy(x => x)\n        val lst17 = lst16.sortBy(x\
    \ => x)\n        val lst18 = lst17.sortBy(x => x)\n        val lst19 = lst18.sortBy(x\
    \ => x)\n        val lst20 = lst19.sortBy(x => x)\n        val lst21 = lst20.sortBy(x\
    \ => x)\n        val lst22 = lst21.sortBy(x => x)\n        val lst23 = lst22.sortBy(x\
    \ => x)\n        val lst24 = lst23.sortBy(x => x)\n        val lst25 = lst24.sortBy(x\
    \ => x)\n        val lst26 = lst25.sortBy(x => x)\n        val lst27 = lst26.sortBy(x\
    \ => x)\n        val lst28 = lst27.sortBy(x => x)\n        val lst29 = lst28.sortBy(x\
    \ => x)\n        val lst30 = lst29.sortBy(x => x)\n        val lst31 = lst30.sortBy(x\
    \ => x)\n        val lst32 = lst31.sortBy(x => x)\n        val lst33 = lst32.sortBy(x\
    \ => x)\n        val lst34 = lst33.sortBy(x => x)\n        val lst35 = lst34.sortBy(x\
    \ => x)\n        val lst36 = lst35.sortBy(x => x)\n        val lst37 = lst36.sortBy(x\
    \ => x)\n        val lst38 = lst37.sortBy(x => x)\n        val lst39 = lst38.sortBy(x\
    \ => x)\n        val lst40 = lst39.sortBy(x => x)\n        val lst41 = lst40.sortBy(x\
    \ => x)\n        ", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val minValue = lst.min\n   \
    \     val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n \
    \       val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex",
  "        val sortedList = lst.sortWith(_ < _)\n        val resultList = mutable.ListBuffer[Long]()\n\
    \        val currentMin = sortedList.head\n        val currentMax = sortedList.last\n\
    \        val currentMinIndex = lst.indexOf(currentMin)\n        val currentMaxIndex\
    \ = lst.indexOf(currentMax)\n        val currentMinIndex = currentMinIndex - 1\n\
    \        val currentMaxIndex = currentMaxIndex - 1\n        val currentMinValue\
    \ = lst.take(currentMinIndex)\n        val currentMaxValue = lst.take(currentMaxIndex)\n\
    \        val currentMinValueIndex = lst.indexOf(currentMinValue)\n        val\
    \ currentMaxValueIndex = lst.indexOf(currentMaxValue)\n        val currentMinValueIndex\
    \ = currentMinValueIndex - 1\n        val currentMaxValueIndex = currentMaxValueIndex\
    \ - 1\n        val currentMinValueIndex = currentMinIndex - 1\n        val currentMaxValueIndex\
    \ = currentMaxIndex - 1\n        val currentMinValueIndex = currentMinIndex -\
    \ 1\n        val currentMaxValueIndex = currentMaxIndex - 1\n        val currentMinValueIndex\
    \ = currentMinIndex - 1\n        val currentMaxValueIndex = currentMaxIndex -\
    \ 1\n        val currentMinValueIndex = currentMinIndex - 1\n        val currentMaxValueIndex\
    \ = currentMaxIndex - 1\n        val currentMinValueIndex = currentMinIndex -\
    \ 1\n        val currentMaxValueIndex = currentMaxIndex - 1\n        val currentMinValueIndex\
    \ = currentMinIndex - 1\n        val currentMaxValueIndex = currentMaxIndex -\
    \ 1\n        val currentMinValueIndex = currentMinIndex - 1\n        val currentMaxValueIndex\
    \ = currentMaxIndex - 1\n        val currentMinValueIndex = currentMinIndex -\
    \ 1\n        val currentMaxValueIndex = currentMaxIndex - 1\n        val currentMinValueIndex\
    \ = currentMinIndex - 1\n        val currentMaxValueIndex = currentMaxIndex -\
    \ 1\n        val currentMinValueIndex = currentMinIndex - 1\n        val currentMaxValueIndex\
    \ = currentMaxIndex - 1\n        val currentMinValueIndex = currentMinIndex -\
    \ 1\n        val currentMaxValueIndex = currentMaxIndex - 1\n        val currentMinValueIndex\
    \ = currentMinIndex - 1\n        val currentMaxValueIndex = currentMaxIndex -\
    \ 1\n        val currentMinValueIndex = currentMinIndex - 1\n        val currentMaxValueIndex\
    \ = currentMaxIndex - 1\n        val currentMinValueIndex = currentMinIndex -\
    \ 1\n        val currentMaxValueIndex = currentMaxIndex - 1\n        val currentMinValueIndex\
    \ = currentMinIndex - 1\n        val currentMaxValueIndex = currentMaxIndex -\
    \ 1\n        val currentMinValueIndex = currentMinIndex - 1\n        val currentMaxValueIndex\
    \ = current", "        val list = new mutable.ListBuffer[Long]()\n        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        var currentValue\
    \ = minValue\n        while(currentValue < maxValue) {\n            list += currentValue\n\
    \            currentValue += 1\n        }\n        list += maxValue\n        list.toList",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => if (x == minValue) -1 else if (y ==\
    \ minValue) 1 else (if (x == maxValue) -1 else if (y == maxValue) 1 else (if (x\
    \ < y) -1 else if (y < x) 1 else 0)))\n        newList.take(minIndex + 1).concat(newList.drop(minIndex\
    \ + 1))", "        val minValue = lst.min\n        val maxValue = lst.max\n  \
    \      val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex2 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex2 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex3 = lst.indexWhere(x => x == minValue)\n        val maxIndex3\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex4 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex4 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex5 = lst.indexWhere(x => x == minValue)\n        val maxIndex5\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex6 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex6 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex7 = lst.indexWhere(x => x == minValue)\n        val maxIndex7\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex8 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex8 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex9 = lst.indexWhere(x => x == minValue)\n        val maxIndex9\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex10 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex10 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex11 = lst.indexWhere(x => x == minValue)\n        val maxIndex11\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex12 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex12 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex13 = lst.indexWhere(x => x == minValue)\n        val maxIndex13\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex14 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex14 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex15 = lst.indexWhere(x => x == minValue)\n        val maxIndex15\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex16 = lst.indexWhere(x ",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val listSize = lst.size\n        val list = new Array[Long](listSize)\n \
    \       val temp = new Array[Long](listSize)\n        val temp2 = new Array[Long](listSize)\n\
    \        var index = 0\n        for(i <- 0 until listSize){\n            temp(index)\
    \ = lst(i)\n            temp2(index) = lst(listSize - 1 - i)\n            index\
    \ += 1\n        }\n        for(i <- 0 until listSize){\n            if(temp(i)\
    \ < temp2(i)){\n                list(i) = temp(i)\n            }\n           \
    \ else{\n                list(i) = temp2(i)\n            }\n        }\n      \
    \  list", "        val minLst = lst.min\n        val maxLst = lst.max\n      \
    \  val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex2 = lst.indexOf(minLst, minLstIndex + 1)\n        val\
    \ maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex + 1)\n        val minLstIndex3\
    \ = lst.indexOf(minLst, minLstIndex2 + 1)\n        val maxLstIndex3 = lst.indexOf(maxLst,\
    \ maxLstIndex2 + 1)\n        val minLstIndex4 = lst.indexOf(minLst, minLstIndex3\
    \ + 1)\n        val maxLstIndex4 = lst.indexOf(maxLst, maxLstIndex3 + 1)\n   \
    \     val minLstIndex5 = lst.indexOf(minLst, minLstIndex4 + 1)\n        val maxLstIndex5\
    \ = lst.indexOf(maxLst, maxLstIndex4 + 1)\n        val minLstIndex6 = lst.indexOf(minLst,\
    \ minLstIndex5 + 1)\n        val maxLstIndex6 = lst.indexOf(maxLst, maxLstIndex5\
    \ + 1)\n        val minLstIndex7 = lst.indexOf(minLst, minLstIndex6 + 1)\n   \
    \     val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex6 + 1)\n        val minLstIndex8\
    \ = lst.indexOf(minLst, minLstIndex7 + 1)\n        val maxLstIndex8 = lst.indexOf(maxLst,\
    \ maxLstIndex7 + 1)\n        val minLstIndex9 = lst.indexOf(minLst, minLstIndex8\
    \ + 1)\n        val maxLstIndex9 = lst.indexOf(maxLst, maxLstIndex8 + 1)\n   \
    \     val minLstIndex10 = lst.indexOf(minLst, minLstIndex9 + 1)\n        val maxLstIndex10\
    \ = lst.indexOf(maxLst, maxLstIndex9 + 1)\n        val minLstIndex11 = lst.indexOf(minLst,\
    \ minLstIndex10 + 1)\n        val maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10\
    \ + 1)\n        val minLstIndex12 = lst.indexOf(minLst, minLstIndex11 + 1)\n \
    \       val maxLstIndex12 = lst.indexOf(maxLst, maxLstIndex11 + 1)\n        val\
    \ minLstIndex13 = lst.indexOf(minLst, minLstIndex12 + 1)\n        val maxLstIndex13\
    \ = l", "        val minLst = lst.min\n        val maxLst = lst.max\n        val\
    \ minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex2 = lst.indexOf(minLst, minLstIndex + 1)\n        val\
    \ maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex + 1)\n        val minLstIndex3\
    \ = lst.indexOf(minLst, minLstIndex2 + 1)\n        val maxLstIndex3 = lst.indexOf(maxLst,\
    \ maxLstIndex2 + 1)\n        val minLstIndex4 = lst.indexOf(minLst, minLstIndex3\
    \ + 1)\n        val maxLstIndex4 = lst.indexOf(maxLst, maxLstIndex3 + 1)\n   \
    \     val minLstIndex5 = lst.indexOf(minLst, minLstIndex4 + 1)\n        val maxLstIndex5\
    \ = lst.indexOf(maxLst, maxLstIndex4 + 1)\n        val minLstIndex6 = lst.indexOf(minLst,\
    \ minLstIndex5 + 1)\n        val maxLstIndex6 = lst.indexOf(maxLst, maxLstIndex5\
    \ + 1)\n        val minLstIndex7 = lst.indexOf(minLst, minLstIndex6 + 1)\n   \
    \     val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex6 + 1)\n        val minLstIndex8\
    \ = lst.indexOf(minLst, minLstIndex7 + 1)\n        val maxLstIndex8 = lst.indexOf(maxLst,\
    \ maxLstIndex7 + 1)\n        val minLstIndex9 = lst.indexOf(minLst, minLstIndex8\
    \ + 1)\n        val maxLstIndex9 = lst.indexOf(maxLst, maxLstIndex8 + 1)\n   \
    \     val minLstIndex10 = lst.indexOf(minLst, minLstIndex9 + 1)\n        val maxLstIndex10\
    \ = lst.indexOf(maxLst, maxLstIndex9 + 1)\n        val minLstIndex11 = lst.indexOf(minLst,\
    \ minLstIndex10 + 1)\n        val maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10\
    \ + 1)\n        val minLstIndex12 = lst.indexOf(minLst, minLstIndex11 + 1)\n \
    \       val maxLstIndex12 = lst.indexOf(maxLst, maxLstIndex11 + 1)\n        val\
    \ minLstIndex13 = lst.indexOf(minLst, minLstIndex12 + 1)\n        val maxLstIndex13\
    \ = l", "        val sorted = lst.sortWith(_.compareTo(_) < 0)\n        val reversed\
    \ = sorted.reverse\n        reversed.toList", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val midIndex = minIndex + maxIndex / 2\n        val midValue = lst(midIndex)\n\
    \        val midIndex = lst.indexOf(midValue)\n        val midValue2 = lst(midIndex)\n\
    \        val midIndex2 = lst.indexOf(midValue2)\n        val midValue3 = lst(midIndex2)\n\
    \        val midIndex3 = lst.indexOf(midValue3)\n        val midValue4 = lst(midIndex3)\n\
    \        val midIndex4 = lst.indexOf(midValue4)\n        val midValue5 = lst(midIndex4)\n\
    \        val midIndex5 = lst.indexOf(midValue5)\n        val midValue6 = lst(midIndex5)\n\
    \        val midIndex6 = lst.indexOf(midValue6)\n        val midValue7 = lst(midIndex6)\n\
    \        val midIndex7 = lst.indexOf(midValue7)\n        val midValue8 = lst(midIndex7)\n\
    \        val midIndex8 = lst.indexOf(midValue8)\n        val midValue9 = lst(midIndex8)\n\
    \        val midIndex9 = lst.indexOf(midValue9)\n        val midValue10 = lst(midIndex9)\n\
    \        val midIndex10 = lst.indexOf(midValue10)\n        val midValue11 = lst(midIndex10)\n\
    \        val midIndex11 = lst.indexOf(midValue11)\n        val midValue12 = lst(midIndex11)\n\
    \        val midIndex12 = lst.indexOf(midValue12)\n        val midValue13 = lst(midIndex12)\n\
    \        val midIndex13 = lst.indexOf(midValue13)\n        val midValue14 = lst(midIndex13)\n\
    \        val midIndex14 = lst.indexOf(midValue14)\n        val midValue15 = lst(midIndex14)\n\
    \        val midIndex15 = lst.indexOf(midValue15)\n        val midValue16 = lst(midIndex15)\n\
    \        val midIndex16 = lst.indexOf(midValue16)\n        val midValue17 = lst(midIndex16)\n\
    \        val midIndex17 = lst.indexOf(midValue17)\n        val midValue18 = lst(midIndex17)\n\
    \        val midIndex18 = lst.indexOf(midValue18)\n        val midValue19 = lst(midIndex18)\n\
    \        val midIndex19 = lst.indexOf(midValue19)\n        val midValue", "  \
    \      val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        newList.take(minIndex)\
    \ ++ newList.drop(maxIndex) ++ newList.take(minIndex)", "        val sorted =\
    \ lst.sortBy(x => x)\n        val reversed = sorted.reverse\n        val result\
    \ = reversed.take(lst.size)\n        result", "        val maxVal = lst.max\n\
    \        val minVal = lst.min\n        val maxIndex = lst.indexWhere(x => x ==\
    \ maxVal)\n        val minIndex = lst.indexWhere(x => x == minVal)\n        val\
    \ newList = lst.take(minIndex) ++ lst.drop(minIndex) ++ lst.take(maxIndex) ++\
    \ lst.drop(maxIndex)\n        newList", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        ", "        val list\
    \ = mutable.ArrayBuffer(lst)\n        list.sortWith(_ < _)\n        list.toList",
  "        val l = lst.size\n        val m = lst.min\n        val n = lst.max\n  \
    \      val r = lst.sortBy(x => x - m)\n        val s = lst.sortBy(x => x - n)\n\
    \        val t = lst.sortBy(x => x - r)\n        val u = lst.sortBy(x => x - s)\n\
    \        val v = lst.sortBy(x => x - t)\n        val w = lst.sortBy(x => x - u)\n\
    \        val x = lst.sortBy(x => x - v)\n        val y = lst.sortBy(x => x - w)\n\
    \        val z = lst.sortBy(x => x - x)\n        val w = lst.sortBy(x => x - y)\n\
    \        val x = lst.sortBy(x => x - z)\n        val y = lst.sortBy(x => x - w)\n\
    \        val z = lst.sortBy(x => x - x)\n        val w = lst.sortBy(x => x - y)\n\
    \        val x = lst.sortBy(x => x - z)\n        val y = lst.sortBy(x => x - w)\n\
    \        val z = lst.sortBy(x => x - x)\n        val w = lst.sortBy(x => x - y)\n\
    \        val x = lst.sortBy(x => x - z)\n        val y = lst.sortBy(x => x - w)\n\
    \        val z = lst.sortBy(x => x - x)\n        val w = lst.sortBy(x => x - y)\n\
    \        val x = lst.sortBy(x => x - z)\n        val y = lst.sortBy(x => x - w)\n\
    \        val z = lst.sortBy(x => x - x)\n        val w = lst.sortBy(x => x - y)\n\
    \        val x = lst.sortBy(x => x - z)\n        val y = lst.sortBy(x => x - w)\n\
    \        val z = lst.sortBy(x => x - x)\n        val w = lst.sortBy(x => x - y)\n\
    \        val x = lst.sortBy(x => x - z)\n        val y = lst.sortBy(x => x - w)\n\
    \        val z = lst.sortBy(x => x - x)\n        val w = lst.sortBy(x => x - y)\n\
    \        val x = lst.sortBy(x => x - z)\n        val y = lst.sortBy(x => x - w)\n\
    \        val z = lst.sortBy(x => x - x)\n        val w = lst.sortBy(x => x - y)\n\
    \        val x = lst.sortBy(x => x - z)\n        val y = lst.sortBy(x => x - w)\n\
    \        val z = lst.sortBy(x => x - x)", "        val minValue = lst.min\n  \
    \      val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValueIndex = lst.indexOf(minValue, minIndex + 1)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minValueIndex2 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxValueIndex2 = lst.indexOf(maxValue, maxIndex +\
    \ 2)\n        val minValueIndex3 = lst.indexOf(minValue, minIndex + 3)\n     \
    \   val maxValueIndex3 = lst.indexOf(maxValue, maxIndex + 3)\n        val minValueIndex4\
    \ = lst.indexOf(minValue, minIndex + 4)\n        val maxValueIndex4 = lst.indexOf(maxValue,\
    \ maxIndex + 4)\n        val minValueIndex5 = lst.indexOf(minValue, minIndex +\
    \ 5)\n        val maxValueIndex5 = lst.indexOf(maxValue, maxIndex + 5)\n     \
    \   val minValueIndex6 = lst.indexOf(minValue, minIndex + 6)\n        val maxValueIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minValueIndex7 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxValueIndex7 = lst.indexOf(maxValue, maxIndex +\
    \ 7)\n        val minValueIndex8 = lst.indexOf(minValue, minIndex + 8)\n     \
    \   val maxValueIndex8 = lst.indexOf(maxValue, maxIndex + 8)\n        val minValueIndex9\
    \ = lst.indexOf(minValue, minIndex + 9)\n        val maxValueIndex9 = lst.indexOf(maxValue,\
    \ maxIndex + 9)\n        val minValueIndex10 = lst.indexOf(minValue, minIndex\
    \ + 10)\n        val maxValueIndex10 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minValueIndex11 = lst.indexOf(minValue, minIndex + 11)\n        val\
    \ maxValueIndex11 = lst.indexOf(maxValue, maxIndex + 11)\n        val minValueIndex12\
    \ = lst.indexOf(minValue, minIndex + 12)\n        val maxValueIndex12 = lst.indexOf(maxValue,\
    \ maxIndex + 12)\n        val minValueIndex13 = lst.indexOf(minValue, minIndex\
    \ + 13)\n        val maxValueIndex13 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minValueIndex14 = lst.indexOf(minValue, minIndex + 14)\n        val\
    \ maxValueIndex14 = lst.indexOf(maxValue, maxIndex + 14)\n        val minValueIndex15\
    \ = lst.indexOf(minValue, minIndex + 15)\n        val maxValueIndex15 = lst.indexOf(max",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValueIndex = lst.indexOf(minValue, minIndex + 1)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minValueIndex2 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxValueIndex2 = lst.indexOf(maxValue, maxIndex +\
    \ 2)\n        val minValueIndex3 = lst.indexOf(minValue, minIndex + 3)\n     \
    \   val maxValueIndex3 = lst.indexOf(maxValue, maxIndex + 3)\n        val minValueIndex4\
    \ = lst.indexOf(minValue, minIndex + 4)\n        val maxValueIndex4 = lst.indexOf(maxValue,\
    \ maxIndex + 4)\n        val minValueIndex5 = lst.indexOf(minValue, minIndex +\
    \ 5)\n        val maxValueIndex5 = lst.indexOf(maxValue, maxIndex + 5)\n     \
    \   val minValueIndex6 = lst.indexOf(minValue, minIndex + 6)\n        val maxValueIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minValueIndex7 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxValueIndex7 = lst.indexOf(maxValue, maxIndex +\
    \ 7)\n        val minValueIndex8 = lst.indexOf(minValue, minIndex + 8)\n     \
    \   val maxValueIndex8 = lst.indexOf(maxValue, maxIndex + 8)\n        val minValueIndex9\
    \ = lst.indexOf(minValue, minIndex + 9)\n        val maxValueIndex9 = lst.indexOf(maxValue,\
    \ maxIndex + 9)\n        val minValueIndex10 = lst.indexOf(minValue, minIndex\
    \ + 10)\n        val maxValueIndex10 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minValueIndex11 = lst.indexOf(minValue, minIndex + 11)\n        val\
    \ maxValueIndex11 = lst.indexOf(maxValue, maxIndex + 11)\n        val minValueIndex12\
    \ = lst.indexOf(minValue, minIndex + 12)\n        val maxValueIndex12 = lst.indexOf(maxValue,\
    \ maxIndex + 12)\n        val minValueIndex13 = lst.indexOf(minValue, minIndex\
    \ + 13)\n        val maxValueIndex13 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minValueIndex14 = lst.indexOf(minValue, minIndex + 14)\n        val\
    \ maxValueIndex14 = lst.indexOf(maxValue, maxIndex + 14)\n        val minValueIndex15\
    \ = lst.indexOf(minValue, minIndex + 15)\n        val maxValueIndex15 = lst.indexOf(max",
  "        val sorted = lst.sortBy(x => x)\n        val reversed = sorted.reverse\n\
    \        reversed.toList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x, y) => x < y)\n\
    \        val newList2 = newList.sortWith((x, y) => x > y)\n        val newList3\
    \ = newList2.sortWith((x, y) => x < y)\n        val newList4 = newList3.sortWith((x,\
    \ y) => x > y)\n        val newList5 = newList4.sortWith((x, y) => x < y)\n  \
    \      val newList6 = newList5.sortWith((x, y) => x > y)\n        val newList7\
    \ = newList6.sortWith((x, y) => x < y)\n        val newList8 = newList7.sortWith((x,\
    \ y) => x > y)\n        val newList9 = newList8.sortWith((x, y) => x < y)\n  \
    \      val newList10 = newList9.sortWith((x, y) => x > y)\n        val newList11\
    \ = newList10.sortWith((x, y) => x < y)\n        val newList12 = newList11.sortWith((x,\
    \ y) => x > y)\n        val newList13 = newList12.sortWith((x, y) => x < y)\n\
    \        val newList14 = newList13.sortWith((x, y) => x > y)\n        val newList15\
    \ = newList14.sortWith((x, y) => x < y)\n        val newList16 = newList15.sortWith((x,\
    \ y) => x > y)\n        val newList17 = newList16.sortWith((x, y) => x < y)\n\
    \        val newList18 = newList17.sortWith((x, y) => x > y)\n        val newList19\
    \ = newList18.sortWith((x, y) => x < y)\n        val newList20 = newList19.sortWith((x,\
    \ y) => x > y)\n        val newList21 = newList20.sortWith((x, y) => x < y)\n\
    \        val newList22 = newList21.sortWith((x, y) => x > y)\n        val newList23\
    \ = newList22.sortWith((x, y) => x < y)\n        val newList24 = newList23.sortWith((x,\
    \ y) => x > y)\n        val newList25 = newList24.sortWith((x, y) => x < y)\n\
    \        val newList26 = newList25.sortWith((x, y) => x > y)\n        val newList27\
    \ = newList26.sortWith((x, y) => x < y)\n        val newList28 = newList27.sortWith((x,\
    \ y) => x > y)\n        val newList29 = newList28.sortWith((x, y) => x < y)\n\
    \        val newList30 = newList29.sortWith((x, y) => x > ", "        val result\
    \ = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n        val\
    \ maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val\
    \ maxIndex = lst.indexOf(maxValue)\n        val middleIndex = math.ceil(lst.size\
    \ / 2)\n        val middleValue = lst(middleIndex)\n        val middleIndex =\
    \ lst.indexOf(lst.max)\n        val middleValue = lst(middleIndex)\n        val\
    \ middleIndex = lst.indexOf(lst.min)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.max)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.max)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.max)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.max)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.max)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.max)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.max)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.max)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.max)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.max)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min)\n        val middleValue = lst(middleIndex)\n\
    \        val middle", "        val result = new mutable.ListBuffer[Long]()\n \
    \       val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = l", "     \
    \   val minVal = lst.min\n        val maxVal = lst.max\n        val minIndex =\
    \ lst.indexOf(minVal)\n        val maxIndex = lst.indexOf(maxVal)\n        val\
    \ minVal2 = lst.take(minIndex).max\n        val maxVal2 = lst.take(maxIndex).min\n\
    \        val minIndex2 = lst.indexOf(minVal2)\n        val maxIndex2 = lst.indexOf(maxVal2)\n\
    \        val minVal3 = lst.take(minIndex2).min\n        val maxVal3 = lst.take(maxIndex2).max\n\
    \        val minIndex3 = lst.indexOf(minVal3)\n        val maxIndex3 = lst.indexOf(maxVal3)\n\
    \        val minVal4 = lst.take(minIndex3).max\n        val maxVal4 = lst.take(maxIndex3).min\n\
    \        val minIndex4 = lst.indexOf(minVal4)\n        val maxIndex4 = lst.indexOf(maxVal4)\n\
    \        val minVal5 = lst.take(minIndex4).min\n        val maxVal5 = lst.take(maxIndex4).max\n\
    \        val minIndex5 = lst.indexOf(minVal5)\n        val maxIndex5 = lst.indexOf(maxVal5)\n\
    \        val minVal6 = lst.take(minIndex5).max\n        val maxVal6 = lst.take(maxIndex5).min\n\
    \        val minIndex6 = lst.indexOf(minVal6)\n        val maxIndex6 = lst.indexOf(maxVal6)\n\
    \        val minVal7 = lst.take(minIndex6).min\n        val maxVal7 = lst.take(maxIndex6).max\n\
    \        val minIndex7 = lst.indexOf(minVal7)\n        val maxIndex7 = lst.indexOf(maxVal7)\n\
    \        val minVal8 = lst.take(minIndex7).max\n        val maxVal8 = lst.take(maxIndex7).min\n\
    \        val minIndex8 = lst.indexOf(minVal8)\n        val maxIndex8 = lst.indexOf(maxVal8)\n\
    \        val minVal9 = lst.take(minIndex8).min\n        val maxVal9 = lst.take(maxIndex8).max\n\
    \        val minIndex9 = lst.indexOf(minVal9)\n        val maxIndex9 = lst.indexOf(maxVal9)\n\
    \        val minVal10 = lst.take(minIndex9).max\n        val maxVal10 = lst.take(maxIndex9).min\n\
    \        val minIndex10 = lst.indexOf(minVal10)\n        val maxIndex10 = lst.indexOf(maxVal10)\n\
    \        ", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex2 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex2 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex3 = lst.indexWhere(x => x == minValue)\n        val maxIndex3\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex4 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex4 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex5 = lst.indexWhere(x => x == minValue)\n        val maxIndex5\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex6 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex6 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex7 = lst.indexWhere(x => x == minValue)\n        val maxIndex7\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex8 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex8 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex9 = lst.indexWhere(x => x == minValue)\n        val maxIndex9\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex10 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex10 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex11 = lst.indexWhere(x => x == minValue)\n        val maxIndex11\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex12 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex12 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex13 = lst.indexWhere(x => x == minValue)\n        val maxIndex13\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex14 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex14 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex15 = lst.indexWhere(x => x == minValue)\n        val maxIndex15\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex16 = lst.indexWhere(x ",
  "        val result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxValueIndex = lst.indexOf(maxValue, maxIndex +\
    \ 1)\n        val minValueIndex2 = lst.indexOf(minValue, minIndex + 2)\n     \
    \   val maxValueIndex2 = lst.indexOf(maxValue, maxIndex + 2)\n        val minValueIndex3\
    \ = lst.indexOf(minValue, minIndex + 3)\n        val maxValueIndex3 = lst.indexOf(maxValue,\
    \ maxIndex + 3)\n        val minValueIndex4 = lst.indexOf(minValue, minIndex +\
    \ 4)\n        val maxValueIndex4 = lst.indexOf(maxValue, maxIndex + 4)\n     \
    \   val minValueIndex5 = lst.indexOf(minValue, minIndex + 5)\n        val maxValueIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minValueIndex6 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxValueIndex6 = lst.indexOf(maxValue, maxIndex +\
    \ 6)\n        val minValueIndex7 = lst.indexOf(minValue, minIndex + 7)\n     \
    \   val maxValueIndex7 = lst.indexOf(maxValue, maxIndex + 7)\n        val minValueIndex8\
    \ = lst.indexOf(minValue, minIndex + 8)\n        val maxValueIndex8 = lst.indexOf(maxValue,\
    \ maxIndex + 8)\n        val minValueIndex9 = lst.indexOf(minValue, minIndex +\
    \ 9)\n        val maxValueIndex9 = lst.indexOf(maxValue, maxIndex + 9)\n     \
    \   val minValueIndex10 = lst.indexOf(minValue, minIndex + 10)\n        val maxValueIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minValueIndex11 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxValueIndex11 = lst.indexOf(maxValue, maxIndex\
    \ + 11)\n        val minValueIndex12 = lst.indexOf(minValue, minIndex + 12)\n\
    \        val maxValueIndex12 = lst.indexOf(maxValue, maxIndex + 12)\n        val\
    \ minValueIndex13 = lst.indexOf(minValue, minIndex + 13)\n        val maxValueIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minValueIndex14 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxValueIndex14 = lst.indexOf(maxValue, maxIndex\
    \ + 14)\n        val minValueIndex15 = lst.indexOf(minValue, minIndex + ", " \
    \       val result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = l", "        val m = lst.min\n        val n = lst.max\n\
    \        val r = lst.filter(_ != m).filter(_ != n).sortBy(_ - m)\n        val\
    \ l = lst.filter(_ != m).filter(_ != n).sortBy(_ - n)\n        val s = lst.filter(_\
    \ != m).filter(_ != n).sortBy(_ - r)\n        val t = lst.filter(_ != m).filter(_\
    \ != n).sortBy(_ - l)\n        val u = lst.filter(_ != m).filter(_ != n).sortBy(_\
    \ - s)\n        val v = lst.filter(_ != m).filter(_ != n).sortBy(_ - t)\n    \
    \    val w = lst.filter(_ != m).filter(_ != n).sortBy(_ - u)\n        val x =\
    \ lst.filter(_ != m).filter(_ != n).sortBy(_ - v)\n        val y = lst.filter(_\
    \ != m).filter(_ != n).sortBy(_ - w)\n        val z = lst.filter(_ != m).filter(_\
    \ != n).sortBy(_ - x)\n        val a = lst.filter(_ != m).filter(_ != n).sortBy(_\
    \ - y)\n        val b = lst.filter(_ != m).filter(_ != n).sortBy(_ - z)\n    \
    \    val c = lst.filter(_ != m).filter(_ != n).sortBy(_ - b)\n        val d =\
    \ lst.filter(_ != m).filter(_ != n).sortBy(_ - c)\n        val e = lst.filter(_\
    \ != m).filter(_ != n).sortBy(_ - d)\n        val f = lst.filter(_ != m).filter(_\
    \ != n).sortBy(_ - e)\n        val g = lst.filter(_ != m).filter(_ != n).sortBy(_\
    \ - f)\n        val h = lst.filter(_ != m).filter(_ != n).sortBy(_ - g)\n    \
    \    val i = lst.filter(_ != m).filter(_ != n).sortBy(_ - h)\n        val j =\
    \ lst.filter(_ != m).filter(_ != n).sortBy(_ - i)\n        val k = lst.filter(_\
    \ != m).filter(_ != n).sortBy(_ - j)\n        val l = lst.filter(_ != m).filter(_\
    \ != n).sortBy(_ - k)\n        val m = lst.filter(_ != m).filter(_ != n).sortBy(_\
    \ - l)\n        val n = lst.filter(_ != m).filter(_ != n).", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = 0\n      \
    \  val maxIndex = lst.size - 1\n        val swappedList = mutable.ListBuffer[Long]()\n\
    \        while(maxIndex >= minIndex) {\n            val currentMin = lst(minIndex)\n\
    \            val currentMax = lst(maxIndex)\n            val currentIndex = minIndex\n\
    \            val currentSwappedList = mutable.ListBuffer[Long]()\n           \
    \ while(currentIndex < maxIndex) {\n                val currentValue = lst(currentIndex)\n\
    \                if(currentValue < currentMin) {\n                    currentSwappedList\
    \ += currentValue\n                    currentIndex += 1\n                } else\
    \ if(currentValue > currentMax) {\n                    currentSwappedList += currentMax\n\
    \                    maxIndex -= 1\n                } else {\n               \
    \     currentSwappedList += currentMin\n                    minIndex += 1\n  \
    \              }\n            }\n            swappedList += currentMin\n     \
    \       swappedList += currentMax\n            swappedList += currentSwappedList\n\
    \        }\n        swappedList.toList", "        val list = mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = ", "        val l = lst.size\n        val m = lst.head\n\
    \        val n = lst.last\n        val max = (l - 1) * n\n        val min = 0\n\
    \        val max2 = lst.map(x => math.max(x, m))\n        val min2 = lst.map(x\
    \ => math.min(m, x))\n        val max3 = lst.map(x => math.max(x, m))\n      \
    \  val min3 = lst.map(x => math.min(m, x))\n        val max4 = lst.map(x => math.max(x,\
    \ m))\n        val min4 = lst.map(x => math.min(m, x))\n        val max5 = lst.map(x\
    \ => math.max(x, m))\n        val min5 = lst.map(x => math.min(m, x))\n      \
    \  val max6 = lst.map(x => math.max(x, m))\n        val min6 = lst.map(x => math.min(m,\
    \ x))\n        val max7 = lst.map(x => math.max(x, m))\n        val min7 = lst.map(x\
    \ => math.min(m, x))\n        val max8 = lst.map(x => math.max(x, m))\n      \
    \  val min8 = lst.map(x => math.min(m, x))\n        val max9 = lst.map(x => math.max(x,\
    \ m))\n        val min9 = lst.map(x => math.min(m, x))\n        val max10 = lst.map(x\
    \ => math.max(x, m))\n        val min10 = lst.map(x => math.min(m, x))\n     \
    \   val max11 = lst.map(x => math.max(x, m))\n        val min11 = lst.map(x =>\
    \ math.min(m, x))\n        val max12 = lst.map(x => math.max(x, m))\n        val\
    \ min12 = lst.map(x => math.min(m, x))\n        val max13 = lst.map(x => math.max(x,\
    \ m))\n        val min13 = lst.map(x => math.min(m, x))\n        val max14 = lst.map(x\
    \ => math.max(x, m))\n        val min14 = lst.map(x => math.min(m, x))\n     \
    \   val max15 = lst.map(x => math.max(x, m))\n        val min15 = lst.map(x =>\
    \ math.min(m, x))\n        val max16 = lst.map(x => math.max(x, m))\n        val\
    \ min16 = lst.map(x => math.min(m, x))\n        val max17 = lst.map(x => math.max(x,\
    \ m))\n        val min17 = lst.map(x => math.min(m, x))\n        val max", " \
    \       val minLst = lst.min\n        val maxLst = lst.max\n        val minLstIndex\
    \ = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n     \
    \   val minLstValue = lst.apply(minLstIndex)\n        val maxLstValue = lst.apply(maxLstIndex)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex = ",
  "        val sortedList = lst.sortBy(x => x)\n        val reversedList = sortedList.reverse\n\
    \        val result = reversedList.take(lst.size)\n        result", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        val newList2 = newList.sortWith((x, y) => y < x)\n   \
    \     val newList3 = newList2.sortWith((x, y) => x > y)\n        val newList4\
    \ = newList3.sortWith((x, y) => y > x)\n        newList4.toList", "        val\
    \ result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n  \
    \      val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = l", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue, minIndex\
    \ + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n        val\
    \ minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue,\
    \ maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n\
    \        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5\
    \ = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue,\
    \ maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n\
    \        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7\
    \ = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue,\
    \ maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n\
    \        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9\
    \ = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue,\
    \ maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n\
    \        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11\
    \ = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue,\
    \ maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n\
    \        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13\
    \ = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue,\
    \ maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n\
    \        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15\
    \ = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue,\
    \ maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n\
    \        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17\
    \ = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex", "        val\
    \ minLst = lst.min\n        val maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n\
    \        val maxLstIndex = lst.indexOf(maxLst)\n        val minLstIndex2 = lst.indexOf(minLst,\
    \ minLstIndex + 1)\n        val maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex\
    \ + 1)\n        val minLstIndex3 = lst.indexOf(minLst, minLstIndex2 + 1)\n   \
    \     val maxLstIndex3 = lst.indexOf(maxLst, maxLstIndex2 + 1)\n        val minLstIndex4\
    \ = lst.indexOf(minLst, minLstIndex3 + 1)\n        val maxLstIndex4 = lst.indexOf(maxLst,\
    \ maxLstIndex3 + 1)\n        val minLstIndex5 = lst.indexOf(minLst, minLstIndex4\
    \ + 1)\n        val maxLstIndex5 = lst.indexOf(maxLst, maxLstIndex4 + 1)\n   \
    \     val minLstIndex6 = lst.indexOf(minLst, minLstIndex5 + 1)\n        val maxLstIndex6\
    \ = lst.indexOf(maxLst, maxLstIndex5 + 1)\n        val minLstIndex7 = lst.indexOf(minLst,\
    \ minLstIndex6 + 1)\n        val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex6\
    \ + 1)\n        val minLstIndex8 = lst.indexOf(minLst, minLstIndex7 + 1)\n   \
    \     val maxLstIndex8 = lst.indexOf(maxLst, maxLstIndex7 + 1)\n        val minLstIndex9\
    \ = lst.indexOf(minLst, minLstIndex8 + 1)\n        val maxLstIndex9 = lst.indexOf(maxLst,\
    \ maxLstIndex8 + 1)\n        val minLstIndex10 = lst.indexOf(minLst, minLstIndex9\
    \ + 1)\n        val maxLstIndex10 = lst.indexOf(maxLst, maxLstIndex9 + 1)\n  \
    \      val minLstIndex11 = lst.indexOf(minLst, minLstIndex10 + 1)\n        val\
    \ maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10 + 1)\n        val minLstIndex12\
    \ = lst.indexOf(minLst, minLstIndex11 + 1)\n        val maxLstIndex12 = lst.indexOf(maxLst,\
    \ maxLstIndex11 + 1)\n        val minLstIndex13 = lst.indexOf(minLst, minLstIndex12\
    \ + 1)\n        val maxLstIndex13 = l", "        val sortedList = lst.sortBy(x\
    \ => x)\n        val reversedList = sortedList.reverse\n        val result = reversedList.take(lst.size)\n\
    \        result", "        val list = new mutable.ListBuffer[Long]()\n       \
    \ val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        ", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.filterNot(x\
    \ => x == minValue)\n        val newList2 = lst.filterNot(x => x == maxValue)\n\
    \        val newList3 = lst.filterNot(x => x == minValue)\n        val newList4\
    \ = lst.filterNot(x => x == maxValue)\n        val newList5 = lst.filterNot(x\
    \ => x == minValue)\n        val newList6 = lst.filterNot(x => x == maxValue)\n\
    \        val newList7 = lst.filterNot(x => x == minValue)\n        val newList8\
    \ = lst.filterNot(x => x == maxValue)\n        val newList9 = lst.filterNot(x\
    \ => x == minValue)\n        val newList10 = lst.filterNot(x => x == maxValue)\n\
    \        val newList11 = lst.filterNot(x => x == minValue)\n        val newList12\
    \ = lst.filterNot(x => x == maxValue)\n        val newList13 = lst.filterNot(x\
    \ => x == minValue)\n        val newList14 = lst.filterNot(x => x == maxValue)\n\
    \        val newList15 = lst.filterNot(x => x == minValue)\n        val newList16\
    \ = lst.filterNot(x => x == maxValue)\n        val newList17 = lst.filterNot(x\
    \ => x == minValue)\n        val newList18 = lst.filterNot(x => x == maxValue)\n\
    \        val newList19 = lst.filterNot(x => x == minValue)\n        val newList20\
    \ = lst.filterNot(x => x == maxValue)\n        val newList21 = lst.filterNot(x\
    \ => x == minValue)\n        val newList22 = lst.filterNot(x => x == maxValue)\n\
    \        val newList23 = lst.filterNot(x => x == minValue)\n        val newList24\
    \ = lst.filterNot(x => x == maxValue)\n        val newList25 = lst.filterNot(x\
    \ => x == minValue)\n        val newList26 = lst.filterNot(x => x == maxValue)\n\
    \        val newList27 = lst.filterNot(x => x == minValue)\n        val newList28\
    \ = lst.filterNot(x => x == maxValue)\n        val newList29 = lst.filterNot(x\
    \ => ", "        val sortedList = lst.sortBy(x => x)\n        val reversedList\
    \ = sortedList.reverse\n        val reversedSortedList = reversedList.sortBy(x\
    \ => x)\n        val reversedSortedList2 = reversedSortedList.reverse\n      \
    \  val reversedSortedList3 = reversedSortedList2.sortBy(x => x)\n        val reversedSortedList4\
    \ = reversedSortedList3.reverse\n        val reversedSortedList5 = reversedSortedList4.reverse\n\
    \        val reversedSortedList6 = reversedSortedList5.reverse\n        val reversedSortedList7\
    \ = reversedSortedList6.reverse\n        val reversedSortedList8 = reversedSortedList7.reverse\n\
    \        val reversedSortedList9 = reversedSortedList8.reverse\n        val reversedSortedList10\
    \ = reversedSortedList9.reverse\n        val reversedSortedList11 = reversedSortedList10.reverse\n\
    \        val reversedSortedList12 = reversedSortedList11.reverse\n        val\
    \ reversedSortedList13 = reversedSortedList12.reverse\n        val reversedSortedList14\
    \ = reversedSortedList13.reverse\n        val reversedSortedList15 = reversedSortedList14.reverse\n\
    \        val reversedSortedList16 = reversedSortedList15.reverse\n        val\
    \ reversedSortedList17 = reversedSortedList16.reverse\n        val reversedSortedList18\
    \ = reversedSortedList17.reverse\n        val reversedSortedList19 = reversedSortedList18.reverse\n\
    \        val reversedSortedList20 = reversedSortedList19.reverse\n        val\
    \ reversedSortedList21 = reversedSortedList20.reverse\n        val reversedSortedList22\
    \ = reversedSortedList21.reverse\n        val reversedSortedList23 = reversedSortedList22.reverse\n\
    \        val reversedSortedList24 = reversedSortedList23.reverse\n        val\
    \ reversedSortedList25 = reversedSortedList24.reverse\n        val reversedSortedList26\
    \ = reversedSortedList25.reverse\n        val reversedSortedList27 = reversedSortedList26.reverse\n\
    \        val reversedSortedList28 = reversedSortedList27.reverse\n        val\
    \ reversedSortedList29 = reversedSortedList28.reverse\n        val reversedSortedList30\
    \ = reversedSortedList29.reverse\n        val reversedSortedList31 = reversedSortedList30.reverse\n\
    \        val reversedSortedList32 = reversedSortedList31.reverse\n        val\
    \ reversedSortedList33 = reversedSortedList32.reverse\n        val reversed",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.", " \
    \       val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val middleIndex = math.ceil((minIndex + maxIndex) / 2)\n        val middleValue\
    \ = lst(middleIndex)\n        val newList = lst.filterNot(x => x == minValue)\n\
    \        newList ::: lst.filterNot(x => x == maxValue)\n        newList ::: lst.filterNot(x\
    \ => x == middleValue)", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x, y) => x < y)\n\
    \        val newList2 = newList.sortWith((x, y) => y < x)\n        val newList3\
    \ = newList2.sortWith((x, y) => x < y)\n        val newList4 = newList3.sortWith((x,\
    \ y) => y < x)\n        val newList5 = newList4.sortWith((x, y) => x < y)\n  \
    \      val newList6 = newList5.sortWith((x, y) => y < x)\n        val newList7\
    \ = newList6.sortWith((x, y) => x < y)\n        val newList8 = newList7.sortWith((x,\
    \ y) => y < x)\n        val newList9 = newList8.sortWith((x, y) => x < y)\n  \
    \      val newList10 = newList9.sortWith((x, y) => y < x)\n        val newList11\
    \ = newList10.sortWith((x, y) => x < y)\n        val newList12 = newList11.sortWith((x,\
    \ y) => y < x)\n        val newList13 = newList12.sortWith((x, y) => x < y)\n\
    \        val newList14 = newList13.sortWith((x, y) => y < x)\n        val newList15\
    \ = newList14.sortWith((x, y) => x < y)\n        val newList16 = newList15.sortWith((x,\
    \ y) => y < x)\n        val newList17 = newList16.sortWith((x, y) => x < y)\n\
    \        val newList18 = newList17.sortWith((x, y) => y < x)\n        val newList19\
    \ = newList18.sortWith((x, y) => x < y)\n        val newList20 = newList19.sortWith((x,\
    \ y) => y < x)\n        val newList21 = newList20.sortWith((x, y) => x < y)\n\
    \        val newList22 = newList21.sortWith((x, y) => y < x)\n        val newList23\
    \ = newList22.sortWith((x, y) => x < y)\n        val newList24 = newList23.sortWith((x,\
    \ y) => y < x)\n        val newList25 = newList24.sortWith((x, y) => x < y)\n\
    \        val newList26 = newList25.sortWith((x, y) => y < x)\n        val newList27\
    \ = newList26.sortWith((x, y) => x < y)\n        val newList28 = newList27.sortWith((x,\
    \ y) => y < x)\n        val newList29 = newList28.sortWith((x, y) => x < y)\n\
    \        val newList30 = newList29.sortWith((x, y) => y < ", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.take(minIndex).reverse.take(maxIndex).reverse.take(minIndex).reverse.take(maxIndex).reverse\n\
    \        newList", "        val list = mutable.ListBuffer[Long]()\n        val\
    \ min = lst.min\n        val max = lst.max\n        val mid = min + (max - min)\
    \ / 2\n        for(i <- 0 until lst.size) {\n            if(lst.get (i) < mid)\
    \ {\n                list += lst.get (i)\n                lst.delete (i)\n   \
    \         }\n        }\n        list += min\n        list += max\n        list.toList",
  "        val newList = mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        for(i <- minIndex to maxIndex){\n\
    \            newList += lst(i)\n        }\n        newList.toList", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val listToSort = lst.drop(minIndex).take(maxIndex\
    \ - minIndex + 1)\n        listToSort.sortWith(_ < _)", "        val sortedList\
    \ = lst.sortBy(x => x)\n        val reversedList = sortedList.reverse\n      \
    \  reversedList", "        val minLst = lst.min\n        val maxLst = lst.max\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minIndex = lst.indexOf(minLst, minLstIndex + 1)\n        val maxIndex\
    \ = lst.indexOf(maxLst, maxLstIndex - 1)\n        val minLstIndex2 = lst.indexOf(minLst,\
    \ minLstIndex + 2)\n        val maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex\
    \ - 2)\n        val minLstIndex3 = lst.indexOf(minLst, minLstIndex + 3)\n    \
    \    val maxLstIndex3 = lst.indexOf(maxLst, maxLstIndex - 3)\n        val minLstIndex4\
    \ = lst.indexOf(minLst, minLstIndex + 4)\n        val maxLstIndex4 = lst.indexOf(maxLst,\
    \ maxLstIndex - 4)\n        val minLstIndex5 = lst.indexOf(minLst, minLstIndex\
    \ + 5)\n        val maxLstIndex5 = lst.indexOf(maxLst, maxLstIndex - 5)\n    \
    \    val minLstIndex6 = lst.indexOf(minLst, minLstIndex + 6)\n        val maxLstIndex6\
    \ = lst.indexOf(maxLst, maxLstIndex - 6)\n        val minLstIndex7 = lst.indexOf(minLst,\
    \ minLstIndex + 7)\n        val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex\
    \ - 7)\n        val minLstIndex8 = lst.indexOf(minLst, minLstIndex + 8)\n    \
    \    val maxLstIndex8 = lst.indexOf(maxLst, maxLstIndex - 8)\n        val minLstIndex9\
    \ = lst.indexOf(minLst, minLstIndex + 9)\n        val maxLstIndex9 = lst.indexOf(maxLst,\
    \ maxLstIndex - 9)\n        val minLstIndex10 = lst.indexOf(minLst, minLstIndex\
    \ + 10)\n        val maxLstIndex10 = lst.indexOf(maxLst, maxLstIndex - 10)\n \
    \       val minLstIndex11 = lst.indexOf(minLst, minLstIndex + 11)\n        val\
    \ maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex - 11)\n        val minLstIndex12\
    \ = lst.indexOf(minLst, minLstIndex + 12)\n        val maxLstIndex12 = lst.indexOf(maxLst,\
    \ maxLst", "        val minValue = lst.min\n        val maxValue = lst.max\n \
    \       val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue, minIndex + 1)\n        val\
    \ maxValueIndex = lst.indexOf(maxValue, maxIndex + 1)\n        val minValueIndex2\
    \ = lst.indexOf(minValue, minIndex + 2)\n        val maxValueIndex2 = lst.indexOf(maxValue,\
    \ maxIndex + 2)\n        val minValueIndex3 = lst.indexOf(minValue, minIndex +\
    \ 3)\n        val maxValueIndex3 = lst.indexOf(maxValue, maxIndex + 3)\n     \
    \   val minValueIndex4 = lst.indexOf(minValue, minIndex + 4)\n        val maxValueIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minValueIndex5 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxValueIndex5 = lst.indexOf(maxValue, maxIndex +\
    \ 5)\n        val minValueIndex6 = lst.indexOf(minValue, minIndex + 6)\n     \
    \   val maxValueIndex6 = lst.indexOf(maxValue, maxIndex + 6)\n        val minValueIndex7\
    \ = lst.indexOf(minValue, minIndex + 7)\n        val maxValueIndex7 = lst.indexOf(maxValue,\
    \ maxIndex + 7)\n        val minValueIndex8 = lst.indexOf(minValue, minIndex +\
    \ 8)\n        val maxValueIndex8 = lst.indexOf(maxValue, maxIndex + 8)\n     \
    \   val minValueIndex9 = lst.indexOf(minValue, minIndex + 9)\n        val maxValueIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minValueIndex10 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxValueIndex10 = lst.indexOf(maxValue, maxIndex\
    \ + 10)\n        val minValueIndex11 = lst.indexOf(minValue, minIndex + 11)\n\
    \        val maxValueIndex11 = lst.indexOf(maxValue, maxIndex + 11)\n        val\
    \ minValueIndex12 = lst.indexOf(minValue, minIndex + 12)\n        val maxValueIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minValueIndex13 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxValueIndex13 = lst.indexOf(maxValue, maxIndex\
    \ + 13)\n        val minValueIndex14 = lst.indexOf(minValue, minIndex + 14)\n\
    \        val maxValueIndex14 = lst.indexOf(maxValue, maxIndex + 14)\n        val\
    \ minValueIndex15 = lst.indexOf(minValue, minIndex + 15)\n        val maxValueIndex15\
    \ = lst.indexOf(max", "        val minValue = lst.min\n        val maxValue =\
    \ lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val newList = lst.take(minIndex).reverse.take(maxIndex).reverse.take(minIndex).reverse.take(maxIndex).reverse\n\
    \        newList", "        val maxList = lst.max\n        val minList = lst.min\n\
    \        val maxIndex = lst.indexOf(maxList)\n        val minIndex = lst.indexOf(minList)\n\
    \        val maxList2 = lst.take(maxIndex).reverse\n        val minList2 = lst.take(minIndex).reverse\n\
    \        val maxList3 = lst.take(maxIndex).reverse\n        val minList3 = lst.take(minIndex).reverse\n\
    \        val maxList4 = lst.take(maxIndex).reverse\n        val minList4 = lst.take(minIndex).reverse\n\
    \        val maxList5 = lst.take(maxIndex).reverse\n        val minList5 = lst.take(minIndex).reverse\n\
    \        val maxList6 = lst.take(maxIndex).reverse\n        val minList6 = lst.take(minIndex).reverse\n\
    \        val maxList7 = lst.take(maxIndex).reverse\n        val minList7 = lst.take(minIndex).reverse\n\
    \        val maxList8 = lst.take(maxIndex).reverse\n        val minList8 = lst.take(minIndex).reverse\n\
    \        val maxList9 = lst.take(maxIndex).reverse\n        val minList9 = lst.take(minIndex).reverse\n\
    \        val maxList10 = lst.take(maxIndex).reverse\n        val minList10 = lst.take(minIndex).reverse\n\
    \        val maxList11 = lst.take(maxIndex).reverse\n        val minList11 = lst.take(minIndex).reverse\n\
    \        val maxList12 = lst.take(maxIndex).reverse\n        val minList12 = lst.take(minIndex).reverse\n\
    \        val maxList13 = lst.take(maxIndex).reverse\n        val minList13 = lst.take(minIndex).reverse\n\
    \        val maxList14 = lst.take(maxIndex).reverse\n        val minList14 = lst.take(minIndex).reverse\n\
    \        val maxList15 = lst.take(maxIndex).reverse\n        val minList15 = lst.take(minIndex).reverse\n\
    \        val maxList16 = lst.take(maxIndex).reverse\n        val minList16 = lst.take(minIndex).reverse\n\
    \        val maxList17 = lst.take(maxIndex).reverse\n        val minList17 = lst.take(minIndex).reverse\n\
    \        val maxList18 = lst.take(maxIndex).reverse\n        val minList18 = lst.take(minIndex).reverse\n\
    \        val maxList19", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val max", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val list = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    for(i <- minIndex to maxIndex){\n            list += lst(i)\n        }\n\
    \        list.sortWith((x, y) => x.compareTo(y))\n        list.toList", "    \
    \    val minLst = lst.min\n        val maxLst = lst.max\n        val minLstIndex\
    \ = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n     \
    \   val minLstIndex = lst.indexOf(minLst, minLstIndex + 1)\n        val maxLstIndex\
    \ = lst.indexOf(maxLst, maxLstIndex + 1)\n        val minLstIndex = lst.indexOf(minLst,\
    \ minLstIndex - 1)\n        val maxLstIndex = lst.indexOf(maxLst, maxLstIndex\
    \ - 1)\n        val minLstIndex = lst.indexOf(minLst, minLstIndex + 2)\n     \
    \   val maxLstIndex = lst.indexOf(maxLst, maxLstIndex + 2)\n        val minLstIndex\
    \ = lst.indexOf(minLst, minLstIndex - 2)\n        val maxLstIndex = lst.indexOf(maxLst,\
    \ maxLstIndex - 2)\n        val minLstIndex = lst.indexOf(minLst, minLstIndex\
    \ - 3)\n        val maxLstIndex = lst.indexOf(maxLst, maxLstIndex - 3)\n     \
    \   val minLstIndex = lst.indexOf(minLst, minLstIndex + 4)\n        val maxLstIndex\
    \ = lst.indexOf(maxLst, maxLstIndex + 4)\n        val minLstIndex = lst.indexOf(minLst,\
    \ minLstIndex - 4)\n        val maxLstIndex = lst.indexOf(maxLst, maxLstIndex\
    \ - 4)\n        val minLstIndex = lst.indexOf(minLst, minLstIndex + 5)\n     \
    \   val maxLstIndex = lst.indexOf(maxLst, maxLstIndex + 5)\n        val minLstIndex\
    \ = lst.indexOf(minLst, minLstIndex - 5)\n        val maxLstIndex = lst.indexOf(maxLst,\
    \ maxLstIndex - 5)\n        val minLstIndex = lst.indexOf(minLst, minLstIndex\
    \ + 6)\n        val maxLstIndex = lst.indexOf(maxLst, maxLstIndex + 6)\n     \
    \   val minLstIndex = lst.indexOf(minLst, minLstIndex - 6)\n        val maxLstIndex\
    \ = lst.indexOf(maxLst, maxLstIndex - 6)\n        val minLstIndex = lst.indexOf(minLst,\
    \ minLstIndex + 7)\n        val maxLstIndex = lst.indexOf(maxLst, maxLstIndex\
    \ + 7)\n        val minLstIndex = lst.indexOf(minLst, minLstIndex", "        val\
    \ result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n  \
    \      val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val middleIndex = minIndex\
    \ + (maxIndex - minIndex) / 2\n        val middleValue = lst(middleIndex)\n  \
    \      val middleIndex = lst.indexOf(middleValue)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(middleValue)\n        val middleValue =\
    \ lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n     \
    \   val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middle", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex + 1)\n        val minList2 = lst.take(minIndex)\n\
    \        val maxList2 = lst.drop(maxIndex + 1)\n        val minList3 = lst.take(minIndex)\n\
    \        val maxList3 = lst.drop(maxIndex + 1)\n        val minList4 = lst.take(minIndex)\n\
    \        val maxList4 = lst.drop(maxIndex + 1)\n        val minList5 = lst.take(minIndex)\n\
    \        val maxList5 = lst.drop(maxIndex + 1)\n        val minList6 = lst.take(minIndex)\n\
    \        val maxList6 = lst.drop(maxIndex + 1)\n        val minList7 = lst.take(minIndex)\n\
    \        val maxList7 = lst.drop(maxIndex + 1)\n        val minList8 = lst.take(minIndex)\n\
    \        val maxList8 = lst.drop(maxIndex + 1)\n        val minList9 = lst.take(minIndex)\n\
    \        val maxList9 = lst.drop(maxIndex + 1)\n        val minList10 = lst.take(minIndex)\n\
    \        val maxList10 = lst.drop(maxIndex + 1)\n        val minList11 = lst.take(minIndex)\n\
    \        val maxList11 = lst.drop(maxIndex + 1)\n        val minList12 = lst.take(minIndex)\n\
    \        val maxList12 = lst.drop(maxIndex + 1)\n        val minList13 = lst.take(minIndex)\n\
    \        val maxList13 = lst.drop(maxIndex + 1)\n        val minList14 = lst.take(minIndex)\n\
    \        val maxList14 = lst.drop(maxIndex + 1)\n        val minList15 = lst.take(minIndex)\n\
    \        val maxList15 = lst.drop(maxIndex + 1)\n        val minList16 = lst.take(minIndex)\n\
    \        val maxList16 = lst.drop(maxIndex + 1)\n        val minList17 = lst.take(minIndex)\n\
    \        val maxList17 = lst.drop(maxIndex + 1)\n        val minList18 = lst.take(minIndex)\n\
    \        val maxList18 = lst.drop(maxIndex + 1)\n        val minList19 = lst.take(minIndex)\n\
    \        val maxList19 = lst.drop(maxIndex + 1)\n        val minList20 = lst.",
  "        val result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        ", "        val minLst = lst.min\n        val\
    \ maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n        val\
    \ maxLstIndex = lst.indexOf(maxLst)\n        val minLstVal = lst.apply(minLstIndex)\n\
    \        val maxLstVal = lst.apply(maxLstIndex)\n        val minLstIndex = lst.indexOf(minLstVal)\n\
    \        val maxLstIndex = lst.indexOf(maxLstVal)\n        val minLstVal = lst.apply(minLstIndex)\n\
    \        val maxLstVal = lst.apply(maxLstIndex)\n        val minLstIndex = lst.indexOf(minLstVal)\n\
    \        val maxLstIndex = lst.indexOf(maxLstVal)\n        val minLstVal = lst.apply(minLstIndex)\n\
    \        val maxLstVal = lst.apply(maxLstIndex)\n        val minLstIndex = lst.indexOf(minLstVal)\n\
    \        val maxLstIndex = lst.indexOf(maxLstVal)\n        val minLstVal = lst.apply(minLstIndex)\n\
    \        val maxLstVal = lst.apply(maxLstIndex)\n        val minLstIndex = lst.indexOf(minLstVal)\n\
    \        val maxLstIndex = lst.indexOf(maxLstVal)\n        val minLstVal = lst.apply(minLstIndex)\n\
    \        val maxLstVal = lst.apply(maxLstIndex)\n        val minLstIndex = lst.indexOf(minLstVal)\n\
    \        val maxLstIndex = lst.indexOf(maxLstVal)\n        val minLstVal = lst.apply(minLstIndex)\n\
    \        val maxLstVal = lst.apply(maxLstIndex)\n        val minLstIndex = lst.indexOf(minLstVal)\n\
    \        val maxLstIndex = lst.indexOf(maxLstVal)\n        val minLstVal = lst.apply(minLstIndex)\n\
    \        val maxLstVal = lst.apply(maxLstIndex)\n        val minLstIndex = lst.indexOf(minLstVal)\n\
    \        val maxLstIndex = lst.indexOf(maxLstVal)\n        val minLstVal = lst.apply(minLstIndex)\n\
    \        val maxLstVal = lst.apply(maxLstIndex)\n        val minLstIndex = lst.indexOf(minLstVal)\n\
    \        val max", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val middleIndex = math.ceil((minIndex + maxIndex) / 2)\n        val middleValue\
    \ = lst(middleIndex)\n        val newList = lst.sortWith(\n            (a, b)\
    \ => middleValue < a && middleValue < b || middleValue > a && middleValue > b\n\
    \        )\n        newList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x, y) => x < y)\n\
    \        val newList2 = newList.filter((x, y) => x < minValue)\n        val newList3\
    \ = newList2.filter((x, y) => y < maxValue)\n        val newList4 = newList3.filter((x,\
    \ y) => x > maxValue)\n        newList4", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = l", "     \
    \   val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValues = lst.take(minIndex)\n        val maxValues = lst.drop(maxIndex)\n\
    \        val minValuesAndMaxValues = minValues ++ maxValues\n        val maxValuesAndMinValues\
    \ = maxValues ++ minValues\n        val minValuesAndMaxValuesAndMinValues = minValuesAndMaxValues\
    \ ++ minValuesAndMaxValues\n        val minValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxValuesAndMinValues ++ maxValuesAndMinValues\n        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValues ++ minValuesAndMaxValuesAndMinValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues ++ maxValuesAndMinValuesAndMaxValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues ++ minValuesAndMaxValuesAndMinValuesAndMaxValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ ++ maxValuesAndMinValuesAndMaxValuesAndMinValues\n        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ ++ minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\n        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ ++ maxValuesAndMinValuesAndMaxValuesAndMinValuesAndMinValues\n        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMin",
  "        val minLst = lst.min\n        val maxLst = lst.max\n        val minLstIndex\
    \ = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n     \
    \   val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n",
  "        val minLst = lst.min\n        val maxLst = lst.max\n        val minLstIndex\
    \ = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n     \
    \   val minIndex = minLstIndex\n        val maxIndex = maxLstIndex\n        val\
    \ minLstValue = lst.apply(minLstIndex)\n        val maxLstValue = lst.apply(maxLstIndex)\n\
    \        val minValue = lst.apply(minIndex)\n        val maxValue = lst.apply(maxIndex)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minIndex = minLstIndex\n        val maxIndex\
    \ = maxLstIndex\n        val minLstValue = lst.apply(minLstIndex)\n        val\
    \ maxLstValue = lst.apply(maxLstIndex)\n        val minValue = lst.apply(minIndex)\n\
    \        val maxValue = lst.apply(maxIndex)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minIndex = minLstIndex\n\
    \        val maxIndex = maxLstIndex\n        val minLstValue = lst.apply(minLstIndex)\n\
    \        val maxLstValue = lst.apply(maxLstIndex)\n        val minValue = lst.apply(minIndex)\n\
    \        val maxValue = lst.apply(maxIndex)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minIndex = minLstIndex\n\
    \        val maxIndex = maxLstIndex\n        val minLstValue = lst.apply(minLstIndex)\n\
    \        val maxLstValue = lst.apply(maxLstIndex)\n        val minValue = lst.apply(minIndex)\n\
    \        val maxValue = lst.apply(maxIndex)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minIndex = minLstIndex\n\
    \        val maxIndex = maxLstIndex\n        val minLstValue = lst.apply(minLstIndex)\n\
    \        val maxLstValue = lst.apply(maxLstIndex)\n        val minValue = lst.apply(minIndex)\n\
    \        val maxValue = lst.apply(maxIndex)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLst", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        var currentValue\
    \ = minValue\n        while(currentValue < maxValue) {\n            result.+=currentValue\n\
    \            currentValue += 1\n        }\n        result.+=maxValue\n       \
    \ return result.toList", "        val minLst = lst.min\n        val maxLst = lst.max\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstValue = lst.take(minLstIndex).max\n        val maxLstValue\
    \ = lst.take(maxLstIndex).min\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        ", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex: Int = lst.indexWhere(x => x == minValue)\n        val maxIndex:\
    \ Int = lst.indexWhere(x => x == maxValue)\n        val middleIndex = math.max(minIndex,\
    \ maxIndex) / 2\n        val middleValue = lst(middleIndex)\n        val newList\
    \ = lst.filterNot(x => x == middleValue)\n        newList ++ List(middleValue)",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.sortWith((x,\
    \ y) => y < x)\n        newList2.reverse", "        val minValue = lst.min\n \
    \       val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val listToSort = lst.filter(_\
    \ != minValue && _ != maxValue)\n        val listToSort2 = listToSort.sortWith(_\
    \ < _)\n        val listToSort3 = listToSort2.filter(_ != minValue)\n        val\
    \ listToSort4 = listToSort3.filter(_ != maxValue)\n        listToSort4.sortWith(_\
    \ < _)", "        val list = new mutable.ListBuffer[Long]()\n        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex2\
    \ = lst.indexOf(minValue)\n        val maxValueIndex2 = lst.indexOf(maxValue)\n\
    \        val minValueIndex3 = lst.indexOf(minValue)\n        val maxValueIndex3\
    \ = lst.indexOf(maxValue)\n        val minValueIndex4 = lst.indexOf(minValue)\n\
    \        val maxValueIndex4 = lst.indexOf(maxValue)\n        val minValueIndex5\
    \ = lst.indexOf(minValue)\n        val maxValueIndex5 = lst.indexOf(maxValue)\n\
    \        val minValueIndex6 = lst.indexOf(minValue)\n        val maxValueIndex6\
    \ = lst.indexOf(maxValue)\n        val minValueIndex7 = lst.indexOf(minValue)\n\
    \        val maxValueIndex7 = lst.indexOf(maxValue)\n        val minValueIndex8\
    \ = lst.indexOf(minValue)\n        val maxValueIndex8 = lst.indexOf(maxValue)\n\
    \        val minValueIndex9 = lst.indexOf(minValue)\n        val maxValueIndex9\
    \ = lst.indexOf(maxValue)\n        val minValueIndex10 = lst.indexOf(minValue)\n\
    \        val maxValueIndex10 = lst.indexOf(maxValue)\n        val minValueIndex11\
    \ = lst.indexOf(minValue)\n        val maxValueIndex11 = lst.indexOf(maxValue)\n\
    \        val minValueIndex12 = lst.indexOf(minValue)\n        val maxValueIndex12\
    \ = lst.indexOf(maxValue)\n        val minValueIndex13 = lst.indexOf(minValue)\n\
    \        val maxValueIndex13 = lst.indexOf(maxValue)\n        val minValueIndex14\
    \ = lst.indexOf(minValue)\n        val maxValueIndex14 = lst.indexOf(maxValue)\n\
    \        val minValueIndex15 = lst.indexOf(minValue)\n        val maxValueIndex15\
    \ = lst.indexOf(maxValue)\n        val minValueIndex16 = lst.indexOf(minValue)\n\
    \        val maxValueIndex16 = lst.indexOf(maxValue)\n        val minValueIndex17\
    \ = lst.indexOf(minValue)\n        val maxValueIndex17 = lst.indexOf(maxValue)\n\
    \        val minValueIndex18 = lst.indexOf(minValue)\n        val maxValueIndex18\
    \ = lst.indexOf(maxValue)\n        val minValueIndex19 = lst.indexOf(minValue)\n\
    \        val maxValueIndex19 = l", "        val minLst = lst.min\n        val\
    \ maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n        val\
    \ maxLstIndex = lst.indexOf(maxLst)\n        val minLstIndex2 = lst.indexOf(minLst,\
    \ minLstIndex + 1)\n        val maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex\
    \ + 1)\n        val minLstIndex3 = lst.indexOf(minLst, minLstIndex2 + 1)\n   \
    \     val maxLstIndex3 = lst.indexOf(maxLst, maxLstIndex2 + 1)\n        val minLstIndex4\
    \ = lst.indexOf(minLst, minLstIndex3 + 1)\n        val maxLstIndex4 = lst.indexOf(maxLst,\
    \ maxLstIndex3 + 1)\n        val minLstIndex5 = lst.indexOf(minLst, minLstIndex4\
    \ + 1)\n        val maxLstIndex5 = lst.indexOf(maxLst, maxLstIndex4 + 1)\n   \
    \     val minLstIndex6 = lst.indexOf(minLst, minLstIndex5 + 1)\n        val maxLstIndex6\
    \ = lst.indexOf(maxLst, maxLstIndex5 + 1)\n        val minLstIndex7 = lst.indexOf(minLst,\
    \ minLstIndex6 + 1)\n        val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex6\
    \ + 1)\n        val minLstIndex8 = lst.indexOf(minLst, minLstIndex7 + 1)\n   \
    \     val maxLstIndex8 = lst.indexOf(maxLst, maxLstIndex7 + 1)\n        val minLstIndex9\
    \ = lst.indexOf(minLst, minLstIndex8 + 1)\n        val maxLstIndex9 = lst.indexOf(maxLst,\
    \ maxLstIndex8 + 1)\n        val minLstIndex10 = lst.indexOf(minLst, minLstIndex9\
    \ + 1)\n        val maxLstIndex10 = lst.indexOf(maxLst, maxLstIndex9 + 1)\n  \
    \      val minLstIndex11 = lst.indexOf(minLst, minLstIndex10 + 1)\n        val\
    \ maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10 + 1)\n        val minLstIndex12\
    \ = lst.indexOf(minLst, minLstIndex11 + 1)\n        val maxLstIndex12 = lst.indexOf(maxLst,\
    \ maxLstIndex11 + 1)\n        val minLstIndex13 = lst.indexOf(minLst, minLstIndex12\
    \ + 1)\n        val maxLstIndex13 = l", "        val minValue = lst.min\n    \
    \    val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n  \
    \      val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex",
  "        val sortedList = lst.sortWith(_ < _)\n        val reversedList = sortedList.reverse\n\
    \        val reversedList2 = reversedList.sortWith(_ < _)\n        val reversedList3\
    \ = reversedList2.sortWith(_ < _)\n        val reversedList4 = reversedList3.sortWith(_\
    \ < _)\n        val reversedList5 = reversedList4.sortWith(_ < _)\n        val\
    \ reversedList6 = reversedList5.sortWith(_ < _)\n        val reversedList7 = reversedList6.sortWith(_\
    \ < _)\n        val reversedList8 = reversedList7.sortWith(_ < _)\n        val\
    \ reversedList9 = reversedList8.sortWith(_ < _)\n        val reversedList10 =\
    \ reversedList9.sortWith(_ < _)\n        val reversedList11 = reversedList10.sortWith(_\
    \ < _)\n        val reversedList12 = reversedList11.sortWith(_ < _)\n        val\
    \ reversedList13 = reversedList12.sortWith(_ < _)\n        val reversedList14\
    \ = reversedList13.sortWith(_ < _)\n        val reversedList15 = reversedList14.sortWith(_\
    \ < _)\n        val reversedList16 = reversedList15.sortWith(_ < _)\n        val\
    \ reversedList17 = reversedList16.sortWith(_ < _)\n        val reversedList18\
    \ = reversedList17.sortWith(_ < _)\n        val reversedList19 = reversedList18.sortWith(_\
    \ < _)\n        val reversedList20 = reversedList19.sortWith(_ < _)\n        val\
    \ reversedList21 = reversedList20.sortWith(_ < _)\n        val reversedList22\
    \ = reversedList21.sortWith(_ < _)\n        val reversedList23 = reversedList22.sortWith(_\
    \ < _)\n        val reversedList24 = reversedList23.sortWith(_ < _)\n        val\
    \ reversedList25 = reversedList24.sortWith(_ < _)\n        val reversedList26\
    \ = reversedList25.sortWith(_ < _)\n        val reversedList27 = reversedList26.sortWith(_\
    \ < _)\n        val reversedList28 = reversedList27.sortWith(_ < _)\n        val\
    \ reversedList29 = reversedList28.sortWith(_ < _", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith(x\
    \ => x < minValue || x > maxValue)\n        newList.take(minIndex) ++ newList.drop(maxIndex)\
    \ ++ newList.take(minIndex)", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = 0\n        val maxIndex = lst.size - 1\n \
    \       val list = new mutable.ListBuffer[Long]()\n        while(maxIndex >= minIndex)\
    \ {\n            val mid = (minIndex + maxIndex) / 2\n            val midValue\
    \ = lst(mid)\n            if(midValue < minValue) {\n                minIndex\
    \ = mid + 1\n            } else if(midValue > maxValue) {\n                maxIndex\
    \ = mid - 1\n            } else {\n                list += midValue\n        \
    \        minIndex = mid + 1\n                maxIndex = mid - 1\n            }\n\
    \        }\n        list += minValue\n        list.toList", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.take(minIndex).reverse.take(maxIndex).reverse.take(minIndex).reverse.take(maxIndex).reverse\n\
    \        newList", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.filter((x,\
    \ y) => x < y)\n        val newList3 = newList2.filter((x, y) => x < y)\n    \
    \    val newList4 = newList3.filter((x, y) => x < y)\n        val newList5 = newList4.filter((x,\
    \ y) => x < y)\n        val newList6 = newList5.filter((x, y) => x < y)\n    \
    \    val newList7 = newList6.filter((x, y) => x < y)\n        val newList8 = newList7.filter((x,\
    \ y) => x < y)\n        val newList9 = newList8.filter((x, y) => x < y)\n    \
    \    val newList10 = newList9.filter((x, y) => x < y)\n        val newList11 =\
    \ newList10.filter((x, y) => x < y)\n        val newList12 = newList11.filter((x,\
    \ y) => x < y)\n        val newList13 = newList12.filter((x, y) => x < y)\n  \
    \      val newList14 = newList13.filter((x, y) => x < y)\n        val newList15\
    \ = newList14.filter((x, y) => x < y)\n        val newList16 = newList15.filter((x,\
    \ y) => x < y)\n        val newList17 = newList16.filter((x, y) => x < y)\n  \
    \      val newList18 = newList17.filter((x, y) => x < y)\n        val newList19\
    \ = newList18.filter((x, y) => x < y)\n        val newList20 = newList19.filter((x,\
    \ y) => x < y)\n        val newList21 = newList20.filter((x, y) => x < y)\n  \
    \      val newList22 = newList21.filter((x, y) => x < y)\n        val newList23\
    \ = newList22.filter((x, y) => x < y)\n        val newList24 = newList23.filter((x,\
    \ y) => x < y)\n        val newList25 = newList24.filter((x, y) => x < y)\n  \
    \      val newList26 = newList25.filter((x, y) => x < y)\n        val newList27\
    \ = newList26.filter((x, y) => x < y)\n        val newList28 = newList27.filter((x,\
    \ y) => x < y)\n        val newList29 = newList28.filter((x, y) => x < y)\n  \
    \      val newList30 = newList29.filter((x, y) => x < y)\n        val newList31\
    \ = newList30.filter((x, y) => x < y)\n        val newList32 = newList31.filter((x,\
    \ y", "        val minValue = lst.min\n        val maxValue = lst.max\n      \
    \  val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minList = lst.take(minIndex)\n        val maxList = lst.drop(maxIndex)\n\
    \        val newList = minList ++ maxList ++ minList\n        newList", "    \
    \    val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        ", "        val sorted = lst.sortWith(_\
    \ < _)\n        val reversed = sorted.reverse\n        val result = reversed.take(lst.size)\n\
    \        result", "        val minLst = lst.min\n        val maxLst = lst.max\n\
    \        val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex2 = lst.indexOf(minLst, minLstIndex + 1)\n        val\
    \ maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex + 1)\n        val minLstIndex3\
    \ = lst.indexOf(minLst, minLstIndex2 + 1)\n        val maxLstIndex3 = lst.indexOf(maxLst,\
    \ maxLstIndex2 + 1)\n        val minLstIndex4 = lst.indexOf(minLst, minLstIndex3\
    \ + 1)\n        val maxLstIndex4 = lst.indexOf(maxLst, maxLstIndex3 + 1)\n   \
    \     val minLstIndex5 = lst.indexOf(minLst, minLstIndex4 + 1)\n        val maxLstIndex5\
    \ = lst.indexOf(maxLst, maxLstIndex4 + 1)\n        val minLstIndex6 = lst.indexOf(minLst,\
    \ minLstIndex5 + 1)\n        val maxLstIndex6 = lst.indexOf(maxLst, maxLstIndex5\
    \ + 1)\n        val minLstIndex7 = lst.indexOf(minLst, minLstIndex6 + 1)\n   \
    \     val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex6 + 1)\n        val minLstIndex8\
    \ = lst.indexOf(minLst, minLstIndex7 + 1)\n        val maxLstIndex8 = lst.indexOf(maxLst,\
    \ maxLstIndex7 + 1)\n        val minLstIndex9 = lst.indexOf(minLst, minLstIndex8\
    \ + 1)\n        val maxLstIndex9 = lst.indexOf(maxLst, maxLstIndex8 + 1)\n   \
    \     val minLstIndex10 = lst.indexOf(minLst, minLstIndex9 + 1)\n        val maxLstIndex10\
    \ = lst.indexOf(maxLst, maxLstIndex9 + 1)\n        val minLstIndex11 = lst.indexOf(minLst,\
    \ minLstIndex10 + 1)\n        val maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10\
    \ + 1)\n        val minLstIndex12 = lst.indexOf(minLst, minLstIndex11 + 1)\n \
    \       val maxLstIndex12 = lst.indexOf(maxLst, maxLstIndex11 + 1)\n        val\
    \ minLstIndex13 = lst.indexOf(minLst, minLstIndex12 + 1)\n        val maxLstIndex13\
    \ = l", "        val sorted = lst.sortWith(_ < _)\n        val reversed = sorted.reverse\n\
    \        val result = reversed.take(lst.size)\n        result", "        val lst2\
    \ = lst.sortBy(x => x)\n        val lst3 = lst2.sortBy(x => x)\n        val lst4\
    \ = lst3.sortBy(x => x)\n        val lst5 = lst4.sortBy(x => x)\n        val lst6\
    \ = lst5.sortBy(x => x)\n        val lst7 = lst6.sortBy(x => x)\n        val lst8\
    \ = lst7.sortBy(x => x)\n        val lst9 = lst8.sortBy(x => x)\n        val lst10\
    \ = lst9.sortBy(x => x)\n        val lst11 = lst10.sortBy(x => x)\n        val\
    \ lst12 = lst11.sortBy(x => x)\n        val lst13 = lst12.sortBy(x => x)\n   \
    \     val lst14 = lst13.sortBy(x => x)\n        val lst15 = lst14.sortBy(x =>\
    \ x)\n        val lst16 = lst15.sortBy(x => x)\n        val lst17 = lst16.sortBy(x\
    \ => x)\n        val lst18 = lst17.sortBy(x => x)\n        val lst19 = lst18.sortBy(x\
    \ => x)\n        val lst20 = lst19.sortBy(x => x)\n        val lst21 = lst20.sortBy(x\
    \ => x)\n        val lst22 = lst21.sortBy(x => x)\n        val lst23 = lst22.sortBy(x\
    \ => x)\n        val lst24 = lst23.sortBy(x => x)\n        val lst25 = lst24.sortBy(x\
    \ => x)\n        val lst26 = lst25.sortBy(x => x)\n        val lst27 = lst26.sortBy(x\
    \ => x)\n        val lst28 = lst27.sortBy(x => x)\n        val lst29 = lst28.sortBy(x\
    \ => x)\n        val lst30 = lst29.sortBy(x => x)\n        val lst31 = lst30.sortBy(x\
    \ => x)\n        val lst32 = lst31.sortBy(x => x)\n        val lst33 = lst32.sortBy(x\
    \ => x)\n        val lst34 = lst33.sortBy(x => x)\n        val lst35 = lst34.sortBy(x\
    \ => x)\n        val lst36 = lst35.sortBy(x => x)\n        val lst37 = lst36.sortBy(x\
    \ => x)\n        val lst38 = lst37.sortBy(x => x)\n        val lst39 = lst38.sortBy(x\
    \ => x)\n        val lst40 = lst39.sortBy(x => x)\n        val lst41 = lst40.sortBy(x\
    \ => x)\n        ", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val minValue = lst.min\n   \
    \     val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n \
    \       val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.filterNot(x\
    \ => x == minValue)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        newList.sortWith((x, y) => x < y)\n        newList.sortWith((x,\
    \ y) => x > y)\n        new", "        val lst2 = lst.sortBy(x => x)\n       \
    \ val lst3 = lst2.sortBy(x => -x)\n        lst3.reverse", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        val newList2 = newList.sortWith((x, y) => x > y)\n   \
    \     val newList3 = newList2.sortWith((x, y) => x < y)\n        val newList4\
    \ = newList3.sortWith((x, y) => x > y)\n        val newList5 = newList4.sortWith((x,\
    \ y) => x < y)\n        val newList6 = newList5.sortWith((x, y) => x > y)\n  \
    \      val newList7 = newList6.sortWith((x, y) => x < y)\n        val newList8\
    \ = newList7.sortWith((x, y) => x > y)\n        val newList9 = newList8.sortWith((x,\
    \ y) => x < y)\n        val newList10 = newList9.sortWith((x, y) => x > y)\n \
    \       val newList11 = newList10.sortWith((x, y) => x < y)\n        val newList12\
    \ = newList11.sortWith((x, y) => x > y)\n        val newList13 = newList12.sortWith((x,\
    \ y) => x < y)\n        val newList14 = newList13.sortWith((x, y) => x > y)\n\
    \        val newList15 = newList14.sortWith((x, y) => x < y)\n        val newList16\
    \ = newList15.sortWith((x, y) => x > y)\n        val newList17 = newList16.sortWith((x,\
    \ y) => x < y)\n        val newList18 = newList17.sortWith((x, y) => x > y)\n\
    \        val newList19 = newList18.sortWith((x, y) => x < y)\n        val newList20\
    \ = newList19.sortWith((x, y) => x > y)\n        val newList21 = newList20.sortWith((x,\
    \ y) => x < y)\n        val newList22 = newList21.sortWith((x, y) => x > y)\n\
    \        val newList23 = newList22.sortWith((x, y) => x < y)\n        val newList24\
    \ = newList23.sortWith((x, y) => x > y)\n        val newList25 = newList24.sortWith((x,\
    \ y) => x < y)\n        val newList26 = newList25.sortWith((x, y) => x > y)\n\
    \        val newList27 = newList26.sortWith((x, y) => x < y)\n        val newList28\
    \ = newList27.sortWith((x, y) => x > y)\n        val newList29 = newList28.sortWith((x,\
    \ y) => x < y)\n        val newList30 = newList29.sortWith((x, y) => x > ", " \
    \       val sorted = lst.sortWith(_ < _)\n        val reversed = sorted.reverse\n\
    \        val result = reversed.take(lst.size)\n        result", "        val l\
    \ = lst.sortBy(x => x)\n        val r = lst.sortBy(x => -x)\n        l ++ r",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.sortWith((x,\
    \ y) => x > y)\n        val newList3 = newList2.sortWith((x, y) => x < y)\n  \
    \      val newList4 = newList3.sortWith((x, y) => x > y)\n        val newList5\
    \ = newList4.sortWith((x, y) => x < y)\n        val newList6 = newList5.sortWith((x,\
    \ y) => x > y)\n        val newList7 = newList6.sortWith((x, y) => x < y)\n  \
    \      val newList8 = newList7.sortWith((x, y) => x > y)\n        val newList9\
    \ = newList8.sortWith((x, y) => x < y)\n        val newList10 = newList9.sortWith((x,\
    \ y) => x > y)\n        val newList11 = newList10.sortWith((x, y) => x < y)\n\
    \        val newList12 = newList11.sortWith((x, y) => x > y)\n        val newList13\
    \ = newList12.sortWith((x, y) => x < y)\n        val newList14 = newList13.sortWith((x,\
    \ y) => x > y)\n        val newList15 = newList14.sortWith((x, y) => x < y)\n\
    \        val newList16 = newList15.sortWith((x, y) => x > y)\n        val newList17\
    \ = newList16.sortWith((x, y) => x < y)\n        val newList18 = newList17.sortWith((x,\
    \ y) => x > y)\n        val newList19 = newList18.sortWith((x, y) => x < y)\n\
    \        val newList20 = newList19.sortWith((x, y) => x > y)\n        val newList21\
    \ = newList20.sortWith((x, y) => x < y)\n        val newList22 = newList21.sortWith((x,\
    \ y) => x > y)\n        val newList23 = newList22.sortWith((x, y) => x < y)\n\
    \        val newList24 = newList23.sortWith((x, y) => x > y)\n        val newList25\
    \ = newList24.sortWith((x, y) => x < y)\n        val newList26 = newList25.sortWith((x,\
    \ y) => x > y)\n        val newList27 = newList26.sortWith((x, y) => x < y)\n\
    \        val newList28 = newList27.sortWith((x, y) => x > y)\n        val newList29\
    \ = newList28.sortWith((x, y) => x < y)\n        val newList30 = newList29.sortWith((x,\
    \ y) => x > ", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val middleIndex = math.ceil((minIndex + maxIndex) / 2)\n        val middleValue\
    \ = lst(middleIndex)\n        val leftList = lst.take(minIndex)\n        val rightList\
    \ = lst.drop(maxIndex + 1)\n        val leftListSorted = strangeSortList(leftList)\n\
    \        val rightListSorted = strangeSortList(rightList)\n        val sortedList\
    \ = leftListSorted ++ List(middleValue) ++  rightListSorted\n        sortedList",
  "        val sortedList = lst.sortBy(x => x)\n        val reversedList = sortedList.reverse\n\
    \        val reversedSortedList = reversedList.sortBy(x => x)\n        val reversedSortedList2\
    \ = reversedSortedList.reverse\n        val reversedSortedList3 = reversedSortedList2.sortBy(x\
    \ => x)\n        val reversedSortedList4 = reversedSortedList3.sortBy(x => x)\n\
    \        val reversedSortedList5 = reversedSortedList4.reverse\n        val reversedSortedList6\
    \ = reversedSortedList5.reverse\n        val reversedSortedList7 = reversedSortedList6.reverse\n\
    \        val reversedSortedList8 = reversedSortedList7.reverse\n        val reversedSortedList9\
    \ = reversedSortedList8.reverse\n        val reversedSortedList10 = reversedSortedList9.reverse\n\
    \        val reversedSortedList11 = reversedSortedList10.reverse\n        val\
    \ reversedSortedList12 = reversedSortedList11.reverse\n        val reversedSortedList13\
    \ = reversedSortedList12.reverse\n        val reversedSortedList14 = reversedSortedList13.reverse\n\
    \        val reversedSortedList15 = reversedSortedList14.reverse\n        val\
    \ reversedSortedList16 = reversedSortedList15.reverse\n        val reversedSortedList17\
    \ = reversedSortedList16.reverse\n        val reversedSortedList18 = reversedSortedList17.reverse\n\
    \        val reversedSortedList19 = reversedSortedList18.reverse\n        val\
    \ reversedSortedList20 = reversedSortedList19.reverse\n        val reversedSortedList21\
    \ = reversedSortedList20.reverse\n        val reversedSortedList22 = reversedSortedList21.reverse\n\
    \        val reversedSortedList23 = reversedSortedList22.reverse\n        val\
    \ reversedSortedList24 = reversedSortedList23.reverse\n        val reversedSortedList25\
    \ = reversedSortedList24.reverse\n        val reversedSortedList26 = reversedSortedList25.reverse\n\
    \        val reversedSortedList27 = reversedSortedList26.reverse\n        val\
    \ reversedSortedList28 = reversedSortedList27.reverse\n        val reversedSortedList29\
    \ = reversedSortedList28.reverse\n        val reversedSortedList30 = reversedSortedList29.reverse\n\
    \        val reversedSortedList31 = reversedSortedList30.reverse\n        val\
    \ reversedSortedList32 = reversedSortedList31.reverse\n        val reversedSortedList33\
    \ = reversedSortedList32.reverse\n", "        val minValue = lst.min\n       \
    \ val maxValue = lst.max\n        val minIndex = 0\n        val maxIndex = lst.size\
    \ - 1\n        val swappedList = mutable.ListBuffer[Long]()\n        while(maxIndex\
    \ >= minIndex) {\n            val currentMin = lst(minIndex)\n            val\
    \ currentMax = lst(maxIndex)\n            if(currentMin < currentMax) {\n    \
    \            swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMin\n                swappedList += currentMax\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n\
    \                swappedList += currentMax\n                swappedList += currentMin\n",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => if (x == minValue) -1 else if (y ==\
    \ minValue) 1 else 0)\n        val newList2 = newList.sortWith((x, y) => if (x\
    \ == maxValue) -1 else if (y == maxValue) 1 else 0)\n        val newList3 = newList2.sortWith((x,\
    \ y) => if (x == minValue) -1 else if (y == minValue) 1 else 0)\n        val newList4\
    \ = newList3.sortWith((x, y) => if (x == maxValue) -1 else if (y == maxValue)\
    \ 1 else 0)\n        newList4", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = 0\n        val maxIndex = lst.size - 1\n \
    \       val tempList = lst.sortWith((x, y) => x.compareTo(y))\n        val newList\
    \ = tempList.take(minIndex).zip(tempList.drop(minIndex + 1)).map(x => x._1 + x._2)\n\
    \        newList.take(maxIndex).zip(newList.drop(maxIndex + 1)).map(x => x._1\
    \ + x._2)", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val sorted = lst.sortBy(x =>\
    \ x)\n        val reversed = sorted.reverse\n        reversed.toList", "     \
    \   val list = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxValueIndex = lst.indexOf(maxValue, maxIndex +\
    \ 1)\n        val minValueIndex2 = lst.indexOf(minValue, minIndex + 2)\n     \
    \   val maxValueIndex2 = lst.indexOf(maxValue, maxIndex + 2)\n        val minValueIndex3\
    \ = lst.indexOf(minValue, minIndex + 3)\n        val maxValueIndex3 = lst.indexOf(maxValue,\
    \ maxIndex + 3)\n        val minValueIndex4 = lst.indexOf(minValue, minIndex +\
    \ 4)\n        val maxValueIndex4 = lst.indexOf(maxValue, maxIndex + 4)\n     \
    \   val minValueIndex5 = lst.indexOf(minValue, minIndex + 5)\n        val maxValueIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minValueIndex6 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxValueIndex6 = lst.indexOf(maxValue, maxIndex +\
    \ 6)\n        val minValueIndex7 = lst.indexOf(minValue, minIndex + 7)\n     \
    \   val maxValueIndex7 = lst.indexOf(maxValue, maxIndex + 7)\n        val minValueIndex8\
    \ = lst.indexOf(minValue, minIndex + 8)\n        val maxValueIndex8 = lst.indexOf(maxValue,\
    \ maxIndex + 8)\n        val minValueIndex9 = lst.indexOf(minValue, minIndex +\
    \ 9)\n        val maxValueIndex9 = lst.indexOf(maxValue, maxIndex + 9)\n     \
    \   val minValueIndex10 = lst.indexOf(minValue, minIndex + 10)\n        val maxValueIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minValueIndex11 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxValueIndex11 = lst.indexOf(maxValue, maxIndex\
    \ + 11)\n        val minValueIndex12 = lst.indexOf(minValue, minIndex + 12)\n\
    \        val maxValueIndex12 = lst.indexOf(maxValue, maxIndex + 12)\n        val\
    \ minValueIndex13 = lst.indexOf(minValue, minIndex + 13)\n        val maxValueIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minValueIndex14 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxValueIndex14 = lst.indexOf(maxValue, maxIndex\
    \ + 14)\n        val minValueIndex15 = lst.indexOf(minValue, minIndex + ", " \
    \       val list = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = l", "        val m = lst.min\n        val n = lst.max\n\
    \        val sorted = lst.sortWith((x, y) => x < y)\n        val result: List[Long]\
    \ = List()\n        var i = 0\n        while (i < sorted.length) {\n         \
    \   val j = i + 1\n            while (j < sorted.length) {\n                if\
    \ (sorted[j] < sorted[i]) {\n                    val temp = sorted[i]\n      \
    \              sorted[i] = sorted[j]\n                    sorted[j] = temp\n \
    \               }\n                j += 1\n            }\n            i += 1\n\
    \        }\n        result ++ sorted", "        val minLst = lst.min\n       \
    \ val maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n      \
    \  val maxLstIndex = lst.indexOf(maxLst)\n        val minLstValue = lst.apply(minLstIndex)\n\
    \        val maxLstValue = lst.apply(maxLstIndex)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = ", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x, y) => x < y)\n\
    \        val newList2 = newList.sortWith((x, y) => x > y)\n        val newList3\
    \ = newList2.sortWith((x, y) => x < y)\n        val newList4 = newList3.sortWith((x,\
    \ y) => x > y)\n        val newList5 = newList4.sortWith((x, y) => x < y)\n  \
    \      val newList6 = newList5.sortWith((x, y) => x > y)\n        val newList7\
    \ = newList6.sortWith((x, y) => x < y)\n        val newList8 = newList7.sortWith((x,\
    \ y) => x > y)\n        val newList9 = newList8.sortWith((x, y) => x < y)\n  \
    \      val newList10 = newList9.sortWith((x, y) => x > y)\n        val newList11\
    \ = newList10.sortWith((x, y) => x < y)\n        val newList12 = newList11.sortWith((x,\
    \ y) => x > y)\n        val newList13 = newList12.sortWith((x, y) => x < y)\n\
    \        val newList14 = newList13.sortWith((x, y) => x > y)\n        val newList15\
    \ = newList14.sortWith((x, y) => x < y)\n        val newList16 = newList15.sortWith((x,\
    \ y) => x > y)\n        val newList17 = newList16.sortWith((x, y) => x < y)\n\
    \        val newList18 = newList17.sortWith((x, y) => x > y)\n        val newList19\
    \ = newList18.sortWith((x, y) => x < y)\n        val newList20 = newList19.sortWith((x,\
    \ y) => x > y)\n        val newList21 = newList20.sortWith((x, y) => x < y)\n\
    \        val newList22 = newList21.sortWith((x, y) => x > y)\n        val newList23\
    \ = newList22.sortWith((x, y) => x < y)\n        val newList24 = newList23.sortWith((x,\
    \ y) => x > y)\n        val newList25 = newList24.sortWith((x, y) => x < y)\n\
    \        val newList26 = newList25.sortWith((x, y) => x > y)\n        val newList27\
    \ = newList26.sortWith((x, y) => x < y)\n        val newList28 = newList27.sortWith((x,\
    \ y) => x > y)\n        val newList29 = newList28.sortWith((x, y) => x < y)\n\
    \        val newList30 = newList29.sortWith((x, y) => x > ", "        val result\
    \ = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n        val\
    \ maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val\
    \ maxIndex = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxValueIndex = lst.indexOf(maxValue, maxIndex +\
    \ 1)\n        val minValueIndex2 = lst.indexOf(minValue, minIndex + 2)\n     \
    \   val maxValueIndex2 = lst.indexOf(maxValue, maxIndex + 2)\n        val minValueIndex3\
    \ = lst.indexOf(minValue, minIndex + 3)\n        val maxValueIndex3 = lst.indexOf(maxValue,\
    \ maxIndex + 3)\n        val minValueIndex4 = lst.indexOf(minValue, minIndex +\
    \ 4)\n        val maxValueIndex4 = lst.indexOf(maxValue, maxIndex + 4)\n     \
    \   val minValueIndex5 = lst.indexOf(minValue, minIndex + 5)\n        val maxValueIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minValueIndex6 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxValueIndex6 = lst.indexOf(maxValue, maxIndex +\
    \ 6)\n        val minValueIndex7 = lst.indexOf(minValue, minIndex + 7)\n     \
    \   val maxValueIndex7 = lst.indexOf(maxValue, maxIndex + 7)\n        val minValueIndex8\
    \ = lst.indexOf(minValue, minIndex + 8)\n        val maxValueIndex8 = lst.indexOf(maxValue,\
    \ maxIndex + 8)\n        val minValueIndex9 = lst.indexOf(minValue, minIndex +\
    \ 9)\n        val maxValueIndex9 = lst.indexOf(maxValue, maxIndex + 9)\n     \
    \   val minValueIndex10 = lst.indexOf(minValue, minIndex + 10)\n        val maxValueIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minValueIndex11 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxValueIndex11 = lst.indexOf(maxValue, maxIndex\
    \ + 11)\n        val minValueIndex12 = lst.indexOf(minValue, minIndex + 12)\n\
    \        val maxValueIndex12 = lst.indexOf(maxValue, maxIndex + 12)\n        val\
    \ minValueIndex13 = lst.indexOf(minValue, minIndex + 13)\n        val maxValueIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minValueIndex14 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxValueIndex14 = lst.indexOf(maxValue, maxIndex\
    \ + 14)\n        val minValueIndex15 = lst.indexOf(minValue, minIndex + ", " \
    \       val m = lst.min\n        val n = lst.max\n        val result = new ListBuffer[Long]()\n\
    \        var i = 0\n        while (i < lst.size) {\n            val j = i + 1\
    \ \n            while (j < lst.size) {\n                if (lst(i) > lst(j)) {\n\
    \                    val temp = lst(i)\n                    lst(i) = lst(j)\n\
    \                    lst(j) = temp\n                }\n                j += 1\n\
    \            }\n            result += lst(i)\n            i += 1\n        }\n\
    \        result ++= List(m,n)\n        return result.toList", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        val newList2 = newList.sortWith((x, y) => x > y)\n   \
    \     val newList3 = newList2.sortWith((x, y) => x < y)\n        val newList4\
    \ = newList3.sortWith((x, y) => x > y)\n        val newList5 = newList4.sortWith((x,\
    \ y) => x < y)\n        val newList6 = newList5.sortWith((x, y) => x > y)\n  \
    \      val newList7 = newList6.sortWith((x, y) => x < y)\n        val newList8\
    \ = newList7.sortWith((x, y) => x > y)\n        val newList9 = newList8.sortWith((x,\
    \ y) => x < y)\n        val newList10 = newList9.sortWith((x, y) => x > y)\n \
    \       val newList11 = newList10.sortWith((x, y) => x < y)\n        val newList12\
    \ = newList11.sortWith((x, y) => x > y)\n        val newList13 = newList12.sortWith((x,\
    \ y) => x < y)\n        val newList14 = newList13.sortWith((x, y) => x > y)\n\
    \        val newList15 = newList14.sortWith((x, y) => x < y)\n        val newList16\
    \ = newList15.sortWith((x, y) => x > y)\n        val newList17 = newList16.sortWith((x,\
    \ y) => x < y)\n        val newList18 = newList17.sortWith((x, y) => x > y)\n\
    \        val newList19 = newList18.sortWith((x, y) => x < y)\n        val newList20\
    \ = newList19.sortWith((x, y) => x > y)\n        val newList21 = newList20.sortWith((x,\
    \ y) => x < y)\n        val newList22 = newList21.sortWith((x, y) => x > y)\n\
    \        val newList23 = newList22.sortWith((x, y) => x < y)\n        val newList24\
    \ = newList23.sortWith((x, y) => x > y)\n        val newList25 = newList24.sortWith((x,\
    \ y) => x < y)\n        val newList26 = newList25.sortWith((x, y) => x > y)\n\
    \        val newList27 = newList26.sortWith((x, y) => x < y)\n        val newList28\
    \ = newList27.sortWith((x, y) => x > y)\n        val newList29 = newList28.sortWith((x,\
    \ y) => x < y)\n        val newList30 = newList29.sortWith((x, y) => x > ", " \
    \       val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.filter((x,\
    \ i) => i < minIndex || i > maxIndex)\n        newList2.reverse", "        val\
    \ lst2 = lst.sortBy(x => x)\n        val lst3 = lst2.sortBy(x => x)\n        val\
    \ lst4 = lst3.sortBy(x => x)\n        val lst5 = lst4.sortBy(x => x)\n       \
    \ val lst6 = lst5.sortBy(x => x)\n        val lst7 = lst6.sortBy(x => x)\n   \
    \     val lst8 = lst7.sortBy(x => x)\n        val lst9 = lst8.sortBy(x => x)\n\
    \        val lst10 = lst9.sortBy(x => x)\n        val lst11 = lst10.sortBy(x =>\
    \ x)\n        val lst12 = lst11.sortBy(x => x)\n        val lst13 = lst12.sortBy(x\
    \ => x)\n        val lst14 = lst13.sortBy(x => x)\n        val lst15 = lst14.sortBy(x\
    \ => x)\n        val lst16 = lst15.sortBy(x => x)\n        val lst17 = lst16.sortBy(x\
    \ => x)\n        val lst18 = lst17.sortBy(x => x)\n        val lst19 = lst18.sortBy(x\
    \ => x)\n        val lst20 = lst19.sortBy(x => x)\n        val lst21 = lst20.sortBy(x\
    \ => x)\n        val lst22 = lst21.sortBy(x => x)\n        val lst23 = lst22.sortBy(x\
    \ => x)\n        val lst24 = lst23.sortBy(x => x)\n        val lst25 = lst24.sortBy(x\
    \ => x)\n        val lst26 = lst25.sortBy(x => x)\n        val lst27 = lst26.sortBy(x\
    \ => x)\n        val lst28 = lst27.sortBy(x => x)\n        val lst29 = lst28.sortBy(x\
    \ => x)\n        val lst30 = lst29.sortBy(x => x)\n        val lst31 = lst30.sortBy(x\
    \ => x)\n        val lst32 = lst31.sortBy(x => x)\n        val lst33 = lst32.sortBy(x\
    \ => x)\n        val lst34 = lst33.sortBy(x => x)\n        val lst35 = lst34.sortBy(x\
    \ => x)\n        val lst36 = lst35.sortBy(x => x)\n        val lst37 = lst36.sortBy(x\
    \ => x)\n        val lst38 = lst37.sortBy(x => x)\n        val lst39 = lst38.sortBy(x\
    \ => x)\n        val lst40 = lst39.sortBy(x => x)\n        val lst41 = lst40.sortBy(x\
    \ => x)\n        ", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.sortWith((x,\
    \ y) => x > y)\n        val newList3 = newList2.sortWith((x, y) => x < y)\n  \
    \      val newList4 = newList3.sortWith((x, y) => x > y)\n        val newList5\
    \ = newList4.sortWith((x, y) => x < y)\n        val newList6 = newList5.sortWith((x,\
    \ y) => x > y)\n        val newList7 = newList6.sortWith((x, y) => x < y)\n  \
    \      val newList8 = newList7.sortWith((x, y) => x > y)\n        val newList9\
    \ = newList8.sortWith((x, y) => x < y)\n        val newList10 = newList9.sortWith((x,\
    \ y) => x > y)\n        val newList11 = newList10.sortWith((x, y) => x < y)\n\
    \        val newList12 = newList11.sortWith((x, y) => x > y)\n        val newList13\
    \ = newList12.sortWith((x, y) => x < y)\n        val newList14 = newList13.sortWith((x,\
    \ y) => x > y)\n        val newList15 = newList14.sortWith((x, y) => x < y)\n\
    \        val newList16 = newList15.sortWith((x, y) => x > y)\n        val newList17\
    \ = newList16.sortWith((x, y) => x < y)\n        val newList18 = newList17.sortWith((x,\
    \ y) => x > y)\n        val newList19 = newList18.sortWith((x, y) => x < y)\n\
    \        val newList20 = newList19.sortWith((x, y) => x > y)\n        val newList21\
    \ = newList20.sortWith((x, y) => x < y)\n        val newList22 = newList21.sortWith((x,\
    \ y) => x > y)\n        val newList23 = newList22.sortWith((x, y) => x < y)\n\
    \        val newList24 = newList23.sortWith((x, y) => x > y)\n        val newList25\
    \ = newList24.sortWith((x, y) => x < y)\n        val newList26 = newList25.sortWith((x,\
    \ y) => x > y)\n        val newList27 = newList26.sortWith((x, y) => x < y)\n\
    \        val newList28 = newList27.sortWith((x, y) => x > y)\n        val newList29\
    \ = newList28.sortWith((x, y) => x < y)\n        val newList30 = newList29.sortWith((x,\
    \ y) => x > ", "        val sorted = lst.sortWith(_.compareTo(_) < 0)\n      \
    \  val reversed = sorted.reverse\n        val result = reversed.take(lst.size)\n\
    \        result", "        val list = new mutable.ListBuffer[Long]()\n       \
    \ val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    for(i <- minIndex to maxIndex){\n            list += lst(i)\n        }\n\
    \        list.toList", "        val minValue = lst.min\n        val maxValue =\
    \ lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x, y) => x < y)\n\
    \        val newList2 = newList.sortWith((x, y) => x > y)\n        val newList3\
    \ = newList2.sortWith((x, y) => x < y)\n        val newList4 = newList3.sortWith((x,\
    \ y) => x > y)\n        val newList5 = newList4.sortWith((x, y) => x < y)\n  \
    \      val newList6 = newList5.sortWith((x, y) => x > y)\n        val newList7\
    \ = newList6.sortWith((x, y) => x < y)\n        val newList8 = newList7.sortWith((x,\
    \ y) => x > y)\n        val newList9 = newList8.sortWith((x, y) => x < y)\n  \
    \      val newList10 = newList9.sortWith((x, y) => x > y)\n        val newList11\
    \ = newList10.sortWith((x, y) => x < y)\n        val newList12 = newList11.sortWith((x,\
    \ y) => x > y)\n        val newList13 = newList12.sortWith((x, y) => x < y)\n\
    \        val newList14 = newList13.sortWith((x, y) => x > y)\n        val newList15\
    \ = newList14.sortWith((x, y) => x < y)\n        val newList16 = newList15.sortWith((x,\
    \ y) => x > y)\n        val newList17 = newList16.sortWith((x, y) => x < y)\n\
    \        val newList18 = newList17.sortWith((x, y) => x > y)\n        val newList19\
    \ = newList18.sortWith((x, y) => x < y)\n        val newList20 = newList19.sortWith((x,\
    \ y) => x > y)\n        val newList21 = newList20.sortWith((x, y) => x < y)\n\
    \        val newList22 = newList21.sortWith((x, y) => x > y)\n        val newList23\
    \ = newList22.sortWith((x, y) => x < y)\n        val newList24 = newList23.sortWith((x,\
    \ y) => x > y)\n        val newList25 = newList24.sortWith((x, y) => x < y)\n\
    \        val newList26 = newList25.sortWith((x, y) => x > y)\n        val newList27\
    \ = newList26.sortWith((x, y) => x < y)\n        val newList28 = newList27.sortWith((x,\
    \ y) => x > y)\n        val newList29 = newList28.sortWith((x, y) => x < y)\n\
    \        val newList30 = newList29.sortWith((x, y) => x > ", "        val list\
    \ = mutable.ArrayBuffer.empty[Long]\n        val max = lst.max\n        val min\
    \ = lst.min\n        val len = lst.size\n        val mid = len / 2\n        val\
    \ mid2 = len / 2\n        val mid3 = len / 2\n        val mid4 = len / 2\n   \
    \     val mid5 = len / 2\n        val mid6 = len / 2\n        val mid7 = len /\
    \ 2\n        val mid8 = len / 2\n        val mid9 = len / 2\n        val mid10\
    \ = len / 2\n        val mid11 = len / 2\n        val mid12 = len / 2\n      \
    \  val mid13 = len / 2\n        val mid14 = len / 2\n        val mid15 = len /\
    \ 2\n        val mid16 = len / 2\n        val mid17 = len / 2\n        val mid18\
    \ = len / 2\n        val mid19 = len / 2\n        val mid20 = len / 2\n      \
    \  val mid21 = len / 2\n        val mid22 = len / 2\n        val mid23 = len /\
    \ 2\n        val mid24 = len / 2\n        val mid25 = len / 2\n        val mid26\
    \ = len / 2\n        val mid27 = len / 2\n        val mid28 = len / 2\n      \
    \  val mid29 = len / 2\n        val mid30 = len / 2\n        val mid31 = len /\
    \ 2\n        val mid32 = len / 2\n        val mid33 = len / 2\n        val mid34\
    \ = len / 2\n        val mid35 = len / 2\n        val mid36 = len / 2\n      \
    \  val mid37 = len / 2\n        val mid38 = len / 2\n        val mid39 = len /\
    \ 2\n        val mid40 = len / 2\n        val mid41 = len / 2\n        val mid42\
    \ = len / 2\n        val mid43 = len / 2\n        val mid44 = len / 2\n      \
    \  val mid45 = len / 2\n        val mid46 = len / 2\n        val mid47 = len /\
    \ 2\n        val mid48 = len / 2\n        val mid49 = len / 2\n        val mid50\
    \ = len / 2\n        val mid51 = len / 2\n        val mid52 = len / 2\n      \
    \  val mid53 = len / 2\n        val mid54 = len / 2\n        val mid55 = ", " \
    \       val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val listToSort = lst.filter(_ != minValue).filter(_ != maxValue)\n      \
    \  val listToSort2 = listToSort.sortWith(_ < _)\n        val listToSort3 = listToSort2.filter(_\
    \ != minValue).filter(_ != maxValue)\n        listToSort3.reverse", "        val\
    \ l = lst.sortBy(x => x)\n        val r = lst.sortBy(x => -x).reverse\n      \
    \  l ++ r", "        val sorted = lst.sortWith((x, y) => x < y)\n        val reversed\
    \ = sorted.reverse\n        reversed.toList", "        val list = mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val midIndex = minIndex + (maxIndex - minIndex) / 2\n        for(i <- minIndex\
    \ to maxIndex){\n            list += lst(i)\n        }\n        for(i <- midIndex\
    \ to maxIndex){\n            list += lst(i)\n        }\n        for(i <- minIndex\
    \ to maxIndex){\n            list += lst(i)\n        }\n        list.toList",
  "        val sortedList = lst.sortBy(x => x)\n        val reversedList = sortedList.reverse\n\
    \        reversedList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val newList = lst.sortWith( (a,b) => a < b\
    \ )\n        newList.take(minIndex).reverse ++ newList.drop(minIndex).take(maxIndex).reverse\
    \ ++ newList.drop(maxIndex).reverse", "        val minValue = lst.min\n      \
    \  val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n    \
    \    val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val minValue = lst.min\n   \
    \     val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n \
    \       val maxIndex = lst.indexOf(maxValue)\n        val middleIndex = math.max(minIndex,\
    \ maxIndex)\n        val middleValue = lst(middleIndex)\n        val newList =\
    \ lst.filterNot(x => x == middleValue)\n        newList ++ List(middleValue)",
  "        val minVal = lst.min\n        val maxVal = lst.max\n        val minIndex\
    \ = lst.indexOf(minVal)\n        val maxIndex = lst.indexOf(maxVal)\n        val\
    \ minValIndex = lst.indexOf(minVal, minIndex + 1)\n        val maxValIndex = lst.indexOf(maxVal,\
    \ maxIndex + 1)\n        val minValIndex2 = lst.indexOf(minVal, minIndex + 2)\n\
    \        val maxValIndex2 = lst.indexOf(maxVal, maxIndex + 2)\n        val minValIndex3\
    \ = lst.indexOf(minVal, minIndex + 3)\n        val maxValIndex3 = lst.indexOf(maxVal,\
    \ maxIndex + 3)\n        val minValIndex4 = lst.indexOf(minVal, minIndex + 4)\n\
    \        val maxValIndex4 = lst.indexOf(maxVal, maxIndex + 4)\n        val minValIndex5\
    \ = lst.indexOf(minVal, minIndex + 5)\n        val maxValIndex5 = lst.indexOf(maxVal,\
    \ maxIndex + 5)\n        val minValIndex6 = lst.indexOf(minVal, minIndex + 6)\n\
    \        val maxValIndex6 = lst.indexOf(maxVal, maxIndex + 6)\n        val minValIndex7\
    \ = lst.indexOf(minVal, minIndex + 7)\n        val maxValIndex7 = lst.indexOf(maxVal,\
    \ maxIndex + 7)\n        val minValIndex8 = lst.indexOf(minVal, minIndex + 8)\n\
    \        val maxValIndex8 = lst.indexOf(maxVal, maxIndex + 8)\n        val minValIndex9\
    \ = lst.indexOf(minVal, minIndex + 9)\n        val maxValIndex9 = lst.indexOf(maxVal,\
    \ maxIndex + 9)\n        val minValIndex10 = lst.indexOf(minVal, minIndex + 10)\n\
    \        val maxValIndex10 = lst.indexOf(maxVal, maxIndex + 10)\n        val minValIndex11\
    \ = lst.indexOf(minVal, minIndex + 11)\n        val maxValIndex11 = lst.indexOf(maxVal,\
    \ maxIndex + 11)\n        val minValIndex12 = lst.indexOf(minVal, minIndex + 12)\n\
    \        val maxValIndex12 = lst.indexOf(maxVal, maxIndex + 12)\n        val minValIndex13\
    \ = lst.indexOf(minVal, minIndex + 13)\n        val maxValIndex13 = lst.indexOf(maxVal,\
    \ maxIndex + 13)\n        val minValIndex14 = lst.indexOf(minVal, minIndex + 14)\n\
    \        val maxValIndex14 = lst.indexOf(maxVal, max", "        val minValue =\
    \ lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        val newList2 = newList.sortWith((x, y) => y < x)\n   \
    \     val newList3 = newList2.sortWith((x, y) => x < y)\n        val newList4\
    \ = newList3.sortWith((x, y) => y < x)\n        val newList5 = newList4.sortWith((x,\
    \ y) => x < y)\n        val newList6 = newList5.sortWith((x, y) => y < x)\n  \
    \      val newList7 = newList6.sortWith((x, y) => x < y)\n        val newList8\
    \ = newList7.sortWith((x, y) => y < x)\n        val newList9 = newList8.sortWith((x,\
    \ y) => x < y)\n        val newList10 = newList9.sortWith((x, y) => y < x)\n \
    \       val newList11 = newList10.sortWith((x, y) => x < y)\n        val newList12\
    \ = newList11.sortWith((x, y) => y < x)\n        val newList13 = newList12.sortWith((x,\
    \ y) => x < y)\n        val newList14 = newList13.sortWith((x, y) => y < x)\n\
    \        val newList15 = newList14.sortWith((x, y) => x < y)\n        val newList16\
    \ = newList15.sortWith((x, y) => y < x)\n        val newList17 = newList16.sortWith((x,\
    \ y) => x < y)\n        val newList18 = newList17.sortWith((x, y) => y < x)\n\
    \        val newList19 = newList18.sortWith((x, y) => x < y)\n        val newList20\
    \ = newList19.sortWith((x, y) => y < x)\n        val newList21 = newList20.sortWith((x,\
    \ y) => x < y)\n        val newList22 = newList21.sortWith((x, y) => y < x)\n\
    \        val newList23 = newList22.sortWith((x, y) => x < y)\n        val newList24\
    \ = newList23.sortWith((x, y) => y < x)\n        val newList25 = newList24.sortWith((x,\
    \ y) => x < y)\n        val newList26 = newList25.sortWith((x, y) => y < x)\n\
    \        val newList27 = newList26.sortWith((x, y) => x < y)\n        val newList28\
    \ = newList27.sortWith((x, y) => y < x)\n        val newList29 = newList28.sortWith((x,\
    \ y) => x < y)\n        val newList30 = newList29.sortWith((x, y) => y < ", " \
    \       val result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        var currentMin = minValue\n        var\
    \ currentMax = maxValue\n        var currentIndex = lst.indexOf(minValue)\n  \
    \      while(currentIndex != -1) {\n            val temp = lst(currentIndex)\n\
    \            lst(currentIndex) = lst(currentIndex + 1)\n            lst(currentIndex\
    \ + 1) = temp\n            currentIndex = lst.indexOf(currentMin)\n        }\n\
    \        return result.toList", "        val minVal = lst.min\n        val maxVal\
    \ = lst.max\n        val minIndex = lst.indexOf(minVal)\n        val maxIndex\
    \ = lst.indexOf(maxVal)\n        val newList = lst.filterNot(x => x == minVal\
    \ || x == maxVal)\n        val newList2 = newList.filterNot(x => x == minIndex\
    \ || x == maxIndex)\n        newList2.reverse", "        val sortedList = lst.sortBy(x\
    \ => x)\n        val reversedList = sortedList.reverse\n        reversedList.map(x\
    \ => x.toLong)", "        val list = new mutable.ListBuffer[Long]()\n        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val min", "        val\
    \ result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n  \
    \      val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = l", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexWhere(x => x == minValue)\n     \
    \   val maxIndex = lst.indexWhere(x => x == maxValue)\n        val newList = lst.take(minIndex).reverse.take(maxIndex).reverse.take(minIndex).reverse.take(maxIndex).reverse\n\
    \        newList", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val newList = lst.sortWith((x, y) => x < y)\n        newList.take(minIndex).reverse\
    \ ++ newList.drop(maxIndex).reverse", "        val sorted = lst.sortWith((x, y)\
    \ => x < y)\n        val reversed = sorted.reverse\n        reversed.toList",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValues = lst.take(minIndex)\n        val maxValues = lst.drop(maxIndex).reverse\n\
    \        val minValuesAndMaxValues = minValues ++ maxValues\n        val minValuesAndMaxIndexes\
    \ = minValuesAndMaxValues.zipWithIndex.sortBy(_._1).map(_._2)\n        val maxValuesAndMinIndexes\
    \ = maxValues ++ minValues.zipWithIndex.sortBy(_._1).map(_._2)\n        val maxValuesAndMinIndexesAndMinValues\
    \ = maxValuesAndMinIndexes ++ minValues\n        val maxValuesAndMinIndexesAndMinValuesAndMaxValues\
    \ = maxValuesAndMinIndexesAndMinValues ++ maxValues\n        val maxValuesAndMinIndexesAndMinValuesAndMaxValuesAndMinValue\
    \ = maxValuesAndMinIndexesAndMinValuesAndMaxValues ++ minValue\n        minValuesAndMaxIndexesAndMinValuesAndMaxValuesAndMinValue",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val list = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue)\n        val maxIndex2 = lst.indexOf(maxValue)\n\
    \        val minIndex3 = lst.indexOf(minValue)\n        val maxIndex3 = lst.indexOf(maxValue)\n\
    \        val minIndex4 = lst.indexOf(minValue)\n        val maxIndex4 = lst.indexOf(maxValue)\n\
    \        val minIndex5 = lst.indexOf(minValue)\n        val maxIndex5 = lst.indexOf(maxValue)\n\
    \        val minIndex6 = lst.indexOf(minValue)\n        val maxIndex6 = lst.indexOf(maxValue)\n\
    \        val minIndex7 = lst.indexOf(minValue)\n        val maxIndex7 = lst.indexOf(maxValue)\n\
    \        val minIndex8 = lst.indexOf(minValue)\n        val maxIndex8 = lst.indexOf(maxValue)\n\
    \        val minIndex9 = lst.indexOf(minValue)\n        val maxIndex9 = lst.indexOf(maxValue)\n\
    \        val minIndex10 = lst.indexOf(minValue)\n        val maxIndex10 = lst.indexOf(maxValue)\n\
    \        val minIndex11 = lst.indexOf(minValue)\n        val maxIndex11 = lst.indexOf(maxValue)\n\
    \        val minIndex12 = lst.indexOf(minValue)\n        val maxIndex12 = lst.indexOf(maxValue)\n\
    \        val minIndex13 = lst.indexOf(minValue)\n        val maxIndex13 = lst.indexOf(maxValue)\n\
    \        val minIndex14 = lst.indexOf(minValue)\n        val maxIndex14 = lst.indexOf(maxValue)\n\
    \        val minIndex15 = lst.indexOf(minValue)\n        val maxIndex15 = lst.indexOf(maxValue)\n\
    \        val minIndex16 = lst.indexOf(minValue)\n        val maxIndex16 = lst.indexOf(maxValue)\n\
    \        val minIndex17 = lst.indexOf(minValue)\n        val maxIndex17 = lst.indexOf(maxValue)\n\
    \        val minIndex18 = lst.indexOf(minValue)\n        val maxIndex18 = lst.indexOf(maxValue)\n\
    \        val minIndex19 = lst.indexOf(minValue)\n        val maxIndex19 = lst.indexOf(maxValue)\n\
    \        val minIndex20 = lst.indexOf(minValue)\n        val maxIndex20 = lst.indexOf(maxValue)\n\
    \        val minIndex21 = lst.indexOf(minValue)\n        val maxIndex21 = lst.indexOf(maxValue)\n\
    \        val minIndex22", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexWhere(x => x == minValue)\n     \
    \   val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex + 1)\n        val minListWithMax = minList\
    \ ++ maxList\n        val maxListWithMin = maxList ++ minList\n        val minListWithMaxAndMin\
    \ = minListWithMax ++ minListWithMin\n        val maxListWithMinAndMax = maxListWithMin\
    \ ++ maxListWithMax\n        val minListWithMaxAndMinAndMax = minListWithMaxAndMin\
    \ ++ maxListWithMinAndMax\n        val maxListWithMinAndMinAndMax = maxListWithMinAndMax\
    \ ++ minListWithMaxAndMin\n        val minListWithMaxAndMinAndMaxAndMin = minListWithMaxAndMinAndMax\
    \ ++ maxListWithMinAndMinAndMax\n        val maxListWithMinAndMinAndMinAndMax\
    \ = maxListWithMinAndMinAndMax ++ minListWithMaxAndMinAndMaxAndMin\n        val\
    \ minListWithMaxAndMinAndMinAndMaxAndMin = minListWithMaxAndMinAndMinAndMax ++\
    \ maxListWithMinAndMinAndMinAndMax\n        val maxListWithMinAndMinAndMinAndMaxAndMin\
    \ = maxListWithMinAndMinAndMinAndMax ++ minListWithMaxAndMinAndMinAndMaxAndMin\n\
    \        val minListWithMaxAndMinAndMinAndMaxAndMinAndMin = minListWithMaxAndMinAndMinAndMaxAndMin\
    \ ++ maxListWithMinAndMinAndMinAndMaxAndMin\n        val maxListWithMinAndMinAndMinAndMaxAndMinAndMin\
    \ = maxListWithMinAndMinAndMinAndMaxAndMin ++ minListWithMaxAndMinAndMinAndMaxAndMinAndMin\n\
    \        val minListWithMaxAndMinAndMinAndMaxAndMinAndMinAndMax = minListWithMaxAndMinAndMinAndMaxAndMinAndMax\
    \ ++ maxListWithMinAndMinAndMinAndMaxAndMinAndMin\n        val maxListWithMinAndMinAndMinAndMaxAndMinAndMinAndMax\
    \ = maxListWithMinAndMinAndMinAndMaxAndMinAndMinAndMax ++ minListWithMaxAndMinAndMinAndMaxAndMinAndMinAndMax\n",
  "        val result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        ", "        val minValue = lst.min\n      \
    \  val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n    \
    \    val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        val newList2 = newList.sortWith((x, y) => x > y)\n   \
    \     val newList3 = newList2.sortWith((x, y) => x < y)\n        val newList4\
    \ = newList3.sortWith((x, y) => x > y)\n        newList4.toList", "        val\
    \ lst1 = lst.sortBy(x => x)\n        val lst2 = lst1.sortBy(x => -x)\n       \
    \ lst2.reverse", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.sortWith((x,\
    \ y) => x > y)\n        val newList3 = newList2.sortWith((x, y) => x < y)\n  \
    \      val newList4 = newList3.sortWith((x, y) => x > y)\n        val newList5\
    \ = newList4.sortWith((x, y) => x < y)\n        val newList6 = newList5.sortWith((x,\
    \ y) => x > y)\n        val newList7 = newList6.sortWith((x, y) => x < y)\n  \
    \      val newList8 = newList7.sortWith((x, y) => x > y)\n        val newList9\
    \ = newList8.sortWith((x, y) => x < y)\n        val newList10 = newList9.sortWith((x,\
    \ y) => x > y)\n        val newList11 = newList10.sortWith((x, y) => x < y)\n\
    \        val newList12 = newList11.sortWith((x, y) => x > y)\n        val newList13\
    \ = newList12.sortWith((x, y) => x < y)\n        val newList14 = newList13.sortWith((x,\
    \ y) => x > y)\n        val newList15 = newList14.sortWith((x, y) => x < y)\n\
    \        val newList16 = newList15.sortWith((x, y) => x > y)\n        val newList17\
    \ = newList16.sortWith((x, y) => x < y)\n        val newList18 = newList17.sortWith((x,\
    \ y) => x > y)\n        val newList19 = newList18.sortWith((x, y) => x < y)\n\
    \        val newList20 = newList19.sortWith((x, y) => x > y)\n        val newList21\
    \ = newList20.sortWith((x, y) => x < y)\n        val newList22 = newList21.sortWith((x,\
    \ y) => x > y)\n        val newList23 = newList22.sortWith((x, y) => x < y)\n\
    \        val newList24 = newList23.sortWith((x, y) => x > y)\n        val newList25\
    \ = newList24.sortWith((x, y) => x < y)\n        val newList26 = newList25.sortWith((x,\
    \ y) => x > y)\n        val newList27 = newList26.sortWith((x, y) => x < y)\n\
    \        val newList28 = newList27.sortWith((x, y) => x > y)\n        val newList29\
    \ = newList28.sortWith((x, y) => x < y)\n        val newList30 = newList29.sortWith((x,\
    \ y) => x > ", "        val minVal = lst.min\n        val maxVal = lst.max\n \
    \       val minIndex = lst.indexOf(minVal)\n        val maxIndex = lst.indexOf(maxVal)\n\
    \        val newList = lst.filterNot(_ == minVal)\n        newList.sortWith(_\
    \ < _)\n        newList.take(minIndex) ++ newList.drop(maxIndex) ++ newList.take(minIndex)",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x > y)\n        val newList2 = newList.filter((x,\
    \ i) => i < minIndex || i > maxIndex)\n        newList2.reverse", "        val\
    \ list = new mutable.ListBuffer[Long]()\n        val min = lst.min\n        val\
    \ max = lst.max\n        val len = lst.size\n        val mid = len / 2\n     \
    \   val midVal = lst(mid)\n        val midVal2 = lst(len - mid)\n        val midVal3\
    \ = lst(len - 1 - mid)\n        val midVal4 = lst(len - 2 - mid)\n        val\
    \ midVal5 = lst(len - 3 - mid)\n        val midVal6 = lst(len - 4 - mid)\n   \
    \     val midVal7 = lst(len - 5 - mid)\n        val midVal8 = lst(len - 6 - mid)\n\
    \        val midVal9 = lst(len - 7 - mid)\n        val midVal10 = lst(len - 8\
    \ - mid)\n        val midVal11 = lst(len - 9 - mid)\n        val midVal12 = lst(len\
    \ - 10 - mid)\n        val midVal13 = lst(len - 11 - mid)\n        val midVal14\
    \ = lst(len - 12 - mid)\n        val midVal15 = lst(len - 13 - mid)\n        val\
    \ midVal16 = lst(len - 14 - mid)\n        val midVal17 = lst(len - 15 - mid)\n\
    \        val midVal18 = lst(len - 16 - mid)\n        val midVal19 = lst(len -\
    \ 17 - mid)\n        val midVal20 = lst(len - 18 - mid)\n        val midVal21\
    \ = lst(len - 19 - mid)\n        val midVal22 = lst(len - 20 - mid)\n        val\
    \ midVal23 = lst(len - 21 - mid)\n        val midVal24 = lst(len - 22 - mid)\n\
    \        val midVal25 = lst(len - 23 - mid)\n        val midVal26 = lst(len -\
    \ 24 - mid)\n        val midVal27 = lst(len - 25 - mid)\n        val midVal28\
    \ = lst(len - 26 - mid)\n        val midVal29 = lst(len - 27 - mid)\n        val\
    \ midVal30 = lst(len - 28 - mid)\n        val midVal31 = lst(len - 29 - mid)\n\
    \        val midVal32 = lst(len - 30 - mid)\n        val midVal33 = lst(len -\
    \ 31 - mid)\n        val midVal34 = lst(len - 32 - mid)\n        val midVal35\
    \ = lst(len - 33 - mid)\n", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue, minIndex\
    \ + 1)\n        val maxValueIndex = lst.indexOf(maxValue, maxIndex + 1)\n    \
    \    val minValueIndex2 = lst.indexOf(minValue, minIndex + 2)\n        val maxValueIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minValueIndex3 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxValueIndex3 = lst.indexOf(maxValue, maxIndex +\
    \ 3)\n        val minValueIndex4 = lst.indexOf(minValue, minIndex + 4)\n     \
    \   val maxValueIndex4 = lst.indexOf(maxValue, maxIndex + 4)\n        val minValueIndex5\
    \ = lst.indexOf(minValue, minIndex + 5)\n        val maxValueIndex5 = lst.indexOf(maxValue,\
    \ maxIndex + 5)\n        val minValueIndex6 = lst.indexOf(minValue, minIndex +\
    \ 6)\n        val maxValueIndex6 = lst.indexOf(maxValue, maxIndex + 6)\n     \
    \   val minValueIndex7 = lst.indexOf(minValue, minIndex + 7)\n        val maxValueIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minValueIndex8 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxValueIndex8 = lst.indexOf(maxValue, maxIndex +\
    \ 8)\n        val minValueIndex9 = lst.indexOf(minValue, minIndex + 9)\n     \
    \   val maxValueIndex9 = lst.indexOf(maxValue, maxIndex + 9)\n        val minValueIndex10\
    \ = lst.indexOf(minValue, minIndex + 10)\n        val maxValueIndex10 = lst.indexOf(maxValue,\
    \ maxIndex + 10)\n        val minValueIndex11 = lst.indexOf(minValue, minIndex\
    \ + 11)\n        val maxValueIndex11 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minValueIndex12 = lst.indexOf(minValue, minIndex + 12)\n        val\
    \ maxValueIndex12 = lst.indexOf(maxValue, maxIndex + 12)\n        val minValueIndex13\
    \ = lst.indexOf(minValue, minIndex + 13)\n        val maxValueIndex13 = lst.indexOf(maxValue,\
    \ maxIndex + 13)\n        val minValueIndex14 = lst.indexOf(minValue, minIndex\
    \ + 14)\n        val maxValueIndex14 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minValueIndex15 = lst.indexOf(minValue, minIndex + 15)\n        val\
    \ maxValueIndex15 = lst.indexOf(max", "        val newList = mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        newList\
    \ += minValue\n        newList += maxValue\n        newList += minValue\n    \
    \    newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList += ",
  "        val minVal = lst.min\n        val maxVal = lst.max\n        val minIndex\
    \ = lst.indexOf(minVal)\n        val maxIndex = lst.indexOf(maxVal)\n        val\
    \ newList = lst.filterNot(x => x == minVal || x == maxVal)\n        val newList2\
    \ = newList.filterNot(x => x == minIndex || x == maxIndex)\n        newList2.reverse",
  "        val m = lst.min\n        val n = lst.max\n        val sorted = lst.sortWith((x,\
    \ y) => x < y)\n        val result = sorted.takeWhile((x, y) => x < m).takeWhile((x,\
    \ y) => y < n).takeWhile((x, y) => x < n).takeWhile((x, y) => y < m).takeWhile((x,\
    \ y) => y < n).takeWhile((x, y) => x < m).takeWhile((x, y) => y < n).takeWhile((x,\
    \ y) => x < n).takeWhile((x, y) => y < m).takeWhile((x, y) => y < n).takeWhile((x,\
    \ y) => x < m).takeWhile((x, y) => y < n).takeWhile((x, y) => x < n).takeWhile((x,\
    \ y) => y < m).takeWhile((x, y) => y < n).takeWhile((x, y) => x < m).takeWhile((x,\
    \ y) => y < n).takeWhile((x, y) => x < n)\n        result", "        val minLst\
    \ = lst.min\n        val maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n\
    \        val maxLstIndex = lst.indexOf(maxLst)\n        val minLstIndex2 = lst.indexOf(minLst,\
    \ minLstIndex + 1)\n        val maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex\
    \ + 1)\n        val minLstIndex3 = lst.indexOf(minLst, minLstIndex2 + 1)\n   \
    \     val maxLstIndex3 = lst.indexOf(maxLst, maxLstIndex2 + 1)\n        val minLstIndex4\
    \ = lst.indexOf(minLst, minLstIndex3 + 1)\n        val maxLstIndex4 = lst.indexOf(maxLst,\
    \ maxLstIndex3 + 1)\n        val minLstIndex5 = lst.indexOf(minLst, minLstIndex4\
    \ + 1)\n        val maxLstIndex5 = lst.indexOf(maxLst, maxLstIndex4 + 1)\n   \
    \     val minLstIndex6 = lst.indexOf(minLst, minLstIndex5 + 1)\n        val maxLstIndex6\
    \ = lst.indexOf(maxLst, maxLstIndex5 + 1)\n        val minLstIndex7 = lst.indexOf(minLst,\
    \ minLstIndex6 + 1)\n        val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex6\
    \ + 1)\n        val minLstIndex8 = lst.indexOf(minLst, minLstIndex7 + 1)\n   \
    \     val maxLstIndex8 = lst.indexOf(maxLst, maxLstIndex7 + 1)\n        val minLstIndex9\
    \ = lst.indexOf(minLst, minLstIndex8 + 1)\n        val maxLstIndex9 = lst.indexOf(maxLst,\
    \ maxLstIndex8 + 1)\n        val minLstIndex10 = lst.indexOf(minLst, minLstIndex9\
    \ + 1)\n        val maxLstIndex10 = lst.indexOf(maxLst, maxLstIndex9 + 1)\n  \
    \      val minLstIndex11 = lst.indexOf(minLst, minLstIndex10 + 1)\n        val\
    \ maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10 + 1)\n        val minLstIndex12\
    \ = lst.indexOf(minLst, minLstIndex11 + 1)\n        val maxLstIndex12 = lst.indexOf(maxLst,\
    \ maxLstIndex11 + 1)\n        val minLstIndex13 = lst.indexOf(minLst, minLstIndex12\
    \ + 1)\n        val maxLstIndex13 = l", "        val minValue = lst.min\n    \
    \    val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n  \
    \      val maxIndex = lst.indexOf(maxValue)\n        val listToSort = lst.filterNot(_\
    \ == minValue)\n        val sortedList = listToSort.sortWith(_ < _)\n        val\
    \ newList = sortedList.take(minIndex) ++ sortedList.drop(maxIndex) ++ sortedList.take(minIndex)\n\
    \        newList"]
stop_tokens:
- "\n    }\n"

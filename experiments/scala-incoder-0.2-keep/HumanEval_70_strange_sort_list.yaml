name: HumanEval_70_strange_sort_list
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given list of integers, return list in strange order.\n    // Strange sorting,\
  \ is when you start with the minimum value,\n    // then maximum of the remaining\
  \ integers, then minimum and so on.\n    // Examples:\n    // strange_sort_list([1,\
  \ 2, 3, 4]) == [1, 4, 2, 3]\n    // strange_sort_list([5, 5, 5, 5]) == [5, 5, 5,\
  \ 5]\n    // strange_sort_list([]) == []\n    def strangeSortList(lst : List[Long])\
  \ : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(strangeSortList((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 4l.toLong, 2l.toLong,\
  \ 3l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong, 6l.toLong, 7l.toLong,\
  \ 8l.toLong, 9l.toLong))).equals((List[Long](5l.toLong, 9l.toLong, 6l.toLong, 8l.toLong,\
  \ 7l.toLong))));\n    assert(strangeSortList((List[Long](1l.toLong, 2l.toLong, 3l.toLong,\
  \ 4l.toLong, 5l.toLong))).equals((List[Long](1l.toLong, 5l.toLong, 2l.toLong, 4l.toLong,\
  \ 3l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong, 6l.toLong, 7l.toLong,\
  \ 8l.toLong, 9l.toLong, 1l.toLong))).equals((List[Long](1l.toLong, 9l.toLong, 5l.toLong,\
  \ 8l.toLong, 6l.toLong, 7l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong,\
  \ 5l.toLong, 5l.toLong, 5l.toLong))).equals((List[Long](5l.toLong, 5l.toLong, 5l.toLong,\
  \ 5l.toLong))));\n    assert(strangeSortList((List[Long]())).equals((List[Long]())));\n\
  \    assert(strangeSortList((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong,\
  \ 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong))).equals((List[Long](1l.toLong, 8l.toLong,\
  \ 2l.toLong, 7l.toLong, 3l.toLong, 6l.toLong, 4l.toLong, 5l.toLong))));\n    assert(strangeSortList((List[Long](0l.toLong,\
  \ 2l.toLong, 2l.toLong, 2l.toLong, 5l.toLong, 5l.toLong, -5l.toLong, -5l.toLong))).equals((List[Long](-5l.toLong,\
  \ 5l.toLong, -5l.toLong, 5l.toLong, 0l.toLong, 2l.toLong, 2l.toLong, 2l.toLong))));\n\
  \    assert(strangeSortList((List[Long](111111l.toLong))).equals((List[Long](111111l.toLong))));\n\
  \    }\n\n}\n"
completions: ["        val minValue = lst.min\n        val maxValue = lst.max\n  \
    \      val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val m = lst.min\n        val\
    \ n = lst.max\n        val r = lst.filter(_ != m).filter(_ != n).sortBy(_ - m)\n\
    \        val l = lst.filter(_ != m).filter(_ != n).sortBy(_ - n)\n        val\
    \ s = lst.filter(_ != m).filter(_ != n).sortBy(_ - r)\n        val t = lst.filter(_\
    \ != m).filter(_ != n).sortBy(_ - l)\n        l + r + s + t", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val tempList = lst.filterNot(x\
    \ => x == minValue)\n        val tempList2 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList3 = lst.filterNot(x => x == minValue)\n        val tempList4\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList5 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList6 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList7 = lst.filterNot(x => x == minValue)\n        val tempList8\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList9 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList10 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList11 = lst.filterNot(x => x == minValue)\n        val tempList12\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList13 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList14 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList15 = lst.filterNot(x => x == minValue)\n        val tempList16\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList17 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList18 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList19 = lst.filterNot(x => x == minValue)\n        val tempList20\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList21 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList22 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList23 = lst.filterNot(x => x == minValue)\n        val tempList24\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList25 = lst.filterNot(x\
    \ => x == minValue)\n        val tempList26 = lst.filterNot(x => x == maxValue)\n\
    \        val tempList27 = lst.filterNot(x => x == minValue)\n        val tempList28\
    \ = lst.filterNot(x => x == maxValue)\n        val tempList29 = lst.filterNot(x\
    \ => ", "        val m = lst.min\n        val n = lst.max\n        val r = lst.filter(_\
    \ != m)\n        val s = lst.filter(_ != n)\n        val t = lst.filter(_ != r)\n\
    \        val u = lst.filter(_ != s)\n        val v = lst.filter(_ != t)\n    \
    \    val w = lst.filter(_ != u)\n        val x = lst.filter(_ != v)\n        val\
    \ y = lst.filter(_ != w)\n        val z = lst.filter(_ != x)\n        val a =\
    \ lst.filter(_ != y)\n        val b = lst.filter(_ != z)\n        val c = lst.filter(_\
    \ != b)\n        val d = lst.filter(_ != c)\n        val e = lst.filter(_ != d)\n\
    \        val f = lst.filter(_ != e)\n        val g = lst.filter(_ != f)\n    \
    \    val h = lst.filter(_ != g)\n        val i = lst.filter(_ != h)\n        val\
    \ j = lst.filter(_ != i)\n        val k = lst.filter(_ != j)\n        val l =\
    \ lst.filter(_ != k)\n        val m = lst.filter(_ != l)\n        val n = lst.filter(_\
    \ != m)\n        val r = lst.filter(_ != n)\n        val s = lst.filter(_ != r)\n\
    \        val t = lst.filter(_ != s)\n        val u = lst.filter(_ != t)\n    \
    \    val v = lst.filter(_ != u)\n        val w = lst.filter(_ != v)\n        val\
    \ x = lst.filter(_ != w)\n        val y = lst.filter(_ != x)\n        val z =\
    \ lst.filter(_ != y)\n        val a = lst.filter(_ != z)\n        val b = lst.filter(_\
    \ != a)\n        val c = lst.filter(_ != b)\n        val d = lst.filter(_ != c)\n\
    \        val e = lst.filter(_ != d)\n        val f = lst.filter(_ != e)\n    \
    \    val g = lst.filter(_ != f)\n        val h = lst.filter(_ != g)\n        val\
    \ i = lst.filter(_ != h)\n        val j = lst.filter(_ != i)\n        val k =\
    \ lst.filter(_ != j)\n        val l = lst.filter(_ != k)\n        val m = lst.filter(_\
    \ != l)\n        val n = lst.filter(_ != m)\n        val r = lst.filter(_ != n)\n\
    \        val s = lst.filter(_ != r)\n        val t = lst.filter(_ != s)\n    \
    \    val u = lst.filter(_ != ", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue, minIndex\
    \ + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n        val\
    \ minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue,\
    \ maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n\
    \        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5\
    \ = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue,\
    \ maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n\
    \        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7\
    \ = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue,\
    \ maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n\
    \        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9\
    \ = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue,\
    \ maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n\
    \        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11\
    \ = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue,\
    \ maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n\
    \        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13\
    \ = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue,\
    \ maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n\
    \        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15\
    \ = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue,\
    \ maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n\
    \        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17\
    \ = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        val newList2 = newList.sortWith((x, y) => y < x)\n   \
    \     val newList3 = newList2.sortWith((x, y) => x > y)\n        val newList4\
    \ = newList3.sortWith((x, y) => y > x)\n        newList4.toList", "        val\
    \ minLst = lst.min\n        val maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n\
    \        val maxLstIndex = lst.indexOf(maxLst)\n        val minLstIndex2 = lst.indexOf(minLst,\
    \ minLstIndex + 1)\n        val maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex\
    \ + 1)\n        val minLstIndex3 = lst.indexOf(minLst, minLstIndex2 + 1)\n   \
    \     val maxLstIndex3 = lst.indexOf(maxLst, maxLstIndex2 + 1)\n        val minLstIndex4\
    \ = lst.indexOf(minLst, minLstIndex3 + 1)\n        val maxLstIndex4 = lst.indexOf(maxLst,\
    \ maxLstIndex3 + 1)\n        val minLstIndex5 = lst.indexOf(minLst, minLstIndex4\
    \ + 1)\n        val maxLstIndex5 = lst.indexOf(maxLst, maxLstIndex4 + 1)\n   \
    \     val minLstIndex6 = lst.indexOf(minLst, minLstIndex5 + 1)\n        val maxLstIndex6\
    \ = lst.indexOf(maxLst, maxLstIndex5 + 1)\n        val minLstIndex7 = lst.indexOf(minLst,\
    \ minLstIndex6 + 1)\n        val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex6\
    \ + 1)\n        val minLstIndex8 = lst.indexOf(minLst, minLstIndex7 + 1)\n   \
    \     val maxLstIndex8 = lst.indexOf(maxLst, maxLstIndex7 + 1)\n        val minLstIndex9\
    \ = lst.indexOf(minLst, minLstIndex8 + 1)\n        val maxLstIndex9 = lst.indexOf(maxLst,\
    \ maxLstIndex8 + 1)\n        val minLstIndex10 = lst.indexOf(minLst, minLstIndex9\
    \ + 1)\n        val maxLstIndex10 = lst.indexOf(maxLst, maxLstIndex9 + 1)\n  \
    \      val minLstIndex11 = lst.indexOf(minLst, minLstIndex10 + 1)\n        val\
    \ maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10 + 1)\n        val minLstIndex12\
    \ = lst.indexOf(minLst, minLstIndex11 + 1)\n        val maxLstIndex12 = lst.indexOf(maxLst,\
    \ maxLstIndex11 + 1)\n        val minLstIndex13 = lst.indexOf(minLst, minLstIndex12\
    \ + 1)\n        val maxLstIndex13 = l", "        val list = mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = ", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex2 = lst.indexOf(minValue)\n        val maxValueIndex2\
    \ = lst.indexOf(maxValue)\n        val minValueIndex3 = lst.indexOf(minValue)\n\
    \        val maxValueIndex3 = lst.indexOf(maxValue)\n        val minValueIndex4\
    \ = lst.indexOf(minValue)\n        val maxValueIndex4 = lst.indexOf(maxValue)\n\
    \        val minValueIndex5 = lst.indexOf(minValue)\n        val maxValueIndex5\
    \ = lst.indexOf(maxValue)\n        val minValueIndex6 = lst.indexOf(minValue)\n\
    \        val maxValueIndex6 = lst.indexOf(maxValue)\n        val minValueIndex7\
    \ = lst.indexOf(minValue)\n        val maxValueIndex7 = lst.indexOf(maxValue)\n\
    \        val minValueIndex8 = lst.indexOf(minValue)\n        val maxValueIndex8\
    \ = lst.indexOf(maxValue)\n        val minValueIndex9 = lst.indexOf(minValue)\n\
    \        val maxValueIndex9 = lst.indexOf(maxValue)\n        val minValueIndex10\
    \ = lst.indexOf(minValue)\n        val maxValueIndex10 = lst.indexOf(maxValue)\n\
    \        val minValueIndex11 = lst.indexOf(minValue)\n        val maxValueIndex11\
    \ = lst.indexOf(maxValue)\n        val minValueIndex12 = lst.indexOf(minValue)\n\
    \        val maxValueIndex12 = lst.indexOf(maxValue)\n        val minValueIndex13\
    \ = lst.indexOf(minValue)\n        val maxValueIndex13 = lst.indexOf(maxValue)\n\
    \        val minValueIndex14 = lst.indexOf(minValue)\n        val maxValueIndex14\
    \ = lst.indexOf(maxValue)\n        val minValueIndex15 = lst.indexOf(minValue)\n\
    \        val maxValueIndex15 = lst.indexOf(maxValue)\n        val minValueIndex16\
    \ = lst.indexOf(minValue)\n        val maxValueIndex16 = lst.indexOf(maxValue)\n\
    \        val minValueIndex17 = lst.indexOf(minValue)\n        val maxValueIndex17\
    \ = lst.indexOf(maxValue)\n        val minValueIndex18 = lst.indexOf(minValue)\n\
    \        val maxValueIndex18 = lst.indexOf(maxValue)\n        val minValueIndex19\
    \ = lst.indexOf(minValue)\n        val maxValueIndex19 = l", "        val sortedList\
    \ = lst.sortWith(_ < _)\n        val reversedList = sortedList.reverse\n     \
    \   val reversedList2 = reversedList.sortWith(_ < _)\n        val reversedList3\
    \ = reversedList2.sortWith(_ < _)\n        val reversedList4 = reversedList3.sortWith(_\
    \ < _)\n        val reversedList5 = reversedList4.sortWith(_ < _)\n        val\
    \ reversedList6 = reversedList5.sortWith(_ < _)\n        val reversedList7 = reversedList6.sortWith(_\
    \ < _)\n        val reversedList8 = reversedList7.sortWith(_ < _)\n        val\
    \ reversedList9 = reversedList8.sortWith(_ < _)\n        val reversedList10 =\
    \ reversedList9.sortWith(_ < _)\n        val reversedList11 = reversedList10.sortWith(_\
    \ < _)\n        val reversedList12 = reversedList11.sortWith(_ < _)\n        val\
    \ reversedList13 = reversedList12.sortWith(_ < _)\n        val reversedList14\
    \ = reversedList13.sortWith(_ < _)\n        val reversedList15 = reversedList14.sortWith(_\
    \ < _)\n        val reversedList16 = reversedList15.sortWith(_ < _)\n        val\
    \ reversedList17 = reversedList16.sortWith(_ < _)\n        val reversedList18\
    \ = reversedList17.sortWith(_ < _)\n        val reversedList19 = reversedList18.sortWith(_\
    \ < _)\n        val reversedList20 = reversedList19.sortWith(_ < _)\n        val\
    \ reversedList21 = reversedList20.sortWith(_ < _)\n        val reversedList22\
    \ = reversedList21.sortWith(_ < _)\n        val reversedList23 = reversedList22.sortWith(_\
    \ < _)\n        val reversedList24 = reversedList23.sortWith(_ < _)\n        val\
    \ reversedList25 = reversedList24.sortWith(_ < _)\n        val reversedList26\
    \ = reversedList25.sortWith(_ < _)\n        val reversedList27 = reversedList26.sortWith(_\
    \ < _)\n        val reversedList28 = reversedList27.sortWith(_ < _)\n        val\
    \ reversedList29 = reversedList28.sortWith(_ < _", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val min", "        val list = new mutable.ListBuffer[Long]()\n      \
    \  val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    for(i <- minIndex to maxIndex){\n            list += lst(i)\n        }\n\
    \        list.sortWith((x, y) => x.compareTo(y))\n        list.toList", "    \
    \    val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val middleIndex = math.ceil(lst.size / 2)\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(lst.min) // get index of minimum value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(lst.max)\
    \ // get index of maximum value\n        val middleValue = lst(middleIndex)\n\
    \        val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\
    \ // get index of middle value\n        val middleValue = lst(middleIndex)\n \
    \       val middleIndex = lst.indexOf(middleValue) // get index of middle value\n\
    \        val middleValue = lst(middle", "        val result = new mutable.ListBuffer[Long]()\n\
    \        var minValue = lst.head\n        var maxValue = lst.last\n        var\
    \ currentValue = lst.head\n        while(currentValue < maxValue) {\n        \
    \    result.add(currentValue)\n            currentValue += 1\n        }\n    \
    \    while(currentValue > minValue) {\n            result.add(currentValue)\n\
    \            currentValue -= 1\n        }\n        result.toList", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = 0\n\
    \        val maxIndex = lst.size - 1\n        val tempList = lst.filter(_ < minValue)\n\
    \        val tempList2 = lst.filter(_ > maxValue)\n        val tempList3 = lst.filter(_\
    \ < minValue && _ > maxValue)\n        val tempList4 = lst.filter(_ < maxValue\
    \ && _ > minValue)\n        val tempList5 = lst.filter(_ < minValue && _ < maxValue)\n\
    \        val tempList6 = lst.filter(_ > maxValue && _ < minValue)\n        val\
    \ tempList7 = lst.filter(_ > minValue && _ > maxValue)\n        val tempList8\
    \ = lst.filter(_ > maxValue && _ > minValue)\n        val tempList9 = lst.filter(_\
    \ < maxValue && _ < minValue)\n        val tempList10 = lst.filter(_ < minValue\
    \ && _ > maxValue)\n        val tempList11 = lst.filter(_ > maxValue && _ > minValue)\n\
    \        val tempList12 = lst.filter(_ > minValue && _ < maxValue)\n        val\
    \ tempList13 = lst.filter(_ < maxValue && _ > minValue)\n        val tempList14\
    \ = lst.filter(_ < minValue && _ < maxValue)\n        val tempList15 = lst.filter(_\
    \ > maxValue && _ > minValue)\n        val tempList16 = lst.filter(_ > minValue\
    \ && _ < maxValue)\n        val tempList17 = lst.filter(_ < maxValue && _ > minValue)\n\
    \        val tempList18 = lst.filter(_ < minValue && _ < maxValue)\n        val\
    \ tempList19 = lst.filter(_ > maxValue && _ > minValue)\n        val tempList20\
    \ = lst.filter(_ > minValue && _ < maxValue)\n        val tempList21 = lst.filter(_\
    \ < maxValue && _ > minValue)\n        val tempList22 = lst.filter(_ < minValue\
    \ && _ < maxValue)\n        val tempList23 = lst.filter(_ > maxValue && _ > minValue)\n\
    \        val tempList24 = lst.filter(_ > minValue && _ < maxValue)\n        val\
    \ tempList25 = lst.filter(_ < maxValue && _ > minValue)\n        val tempList26\
    \ = lst.filter(_ < minValue && _ < maxValue)\n        val tempList27 = lst.filter(_",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val newList = lst.take(minIndex).reverse.take(maxIndex).reverse.take(minIndex).reverse.take(maxIndex).reverse\n\
    \        newList", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val l = lst.size\n        val\
    \ m = lst.min\n        val n = lst.max\n        val r = lst.filter(_ > m).filter(_\
    \ < n).reverse\n        r.foldLeft(lst) { (acc, x) => x :: acc}", "        val\
    \ sortedList = lst.sortWith(_ < _)\n        val reversedList = sortedList.reverse\n\
    \        val reversedSortedList = reversedList.sortWith(_ < _)\n        val reversedSortedList2\
    \ = reversedSortedList.reverse\n        val reversedSortedList3 = reversedSortedList2.sortWith(_\
    \ < _)\n        val reversedSortedList4 = reversedSortedList3.sortWith(_ < _)\n\
    \        val reversedSortedList5 = reversedSortedList4.sortWith(_ < _)\n     \
    \   val reversedSortedList6 = reversedSortedList5.sortWith(_ < _)\n        val\
    \ reversedSortedList7 = reversedSortedList6.sortWith(_ < _)\n        val reversedSortedList8\
    \ = reversedSortedList7.sortWith(_ < _)\n        val reversedSortedList9 = reversedSortedList8.sortWith(_\
    \ < _)\n        val reversedSortedList10 = reversedSortedList9.sortWith(_ < _)\n\
    \        val reversedSortedList11 = reversedSortedList10.sortWith(_ < _)\n   \
    \     val reversedSortedList12 = reversedSortedList11.sortWith(_ < _)\n      \
    \  val reversedSortedList13 = reversedSortedList12.sortWith(_ < _)\n        val\
    \ reversedSortedList14 = reversedSortedList13.sortWith(_ < _)\n        val reversedSortedList15\
    \ = reversedSortedList14.sortWith(_ < _)\n        val reversedSortedList16 = reversedSortedList15.sortWith(_\
    \ < _)\n        val reversedSortedList17 = reversedSortedList16.sortWith(_ < _)\n\
    \        val reversedSortedList18 = reversedSortedList17.sortWith(_ < _)\n   \
    \     val reversedSortedList19 = reversedSortedList18.sortWith(_ < _)\n      \
    \  val reversedSortedList20 = reversedSortedList19.sortWith(_ < _)\n        val\
    \ reversedSortedList21 = reversedSortedList20.sortWith(_ < _)\n        val reversedSortedList22\
    \ = reversedSortedList21.sortWith(_ < _)\n        val reversedSortedList23 = reversedSortedList22.sortWith(_\
    \ < _)\n        val reversedSortedList24 = reversedSortedList23.sortWith(_ < _)\n\
    \        val reversedSortedList25 = reversedSortedList24.sortWith(_ < _)\n   \
    \     val reversedSortedList26 = reversedSorted", "        val minLst = lst.min\n\
    \        val maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n\
    \        val maxLstIndex = lst.indexOf(maxLst)\n        val minLstIndex2 = lst.indexOf(minLst,\
    \ minLstIndex + 1)\n        val maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex\
    \ + 1)\n        val minLstIndex3 = lst.indexOf(minLst, minLstIndex + 2)\n    \
    \    val maxLstIndex3 = lst.indexOf(maxLst, maxLstIndex + 2)\n        val minLstIndex4\
    \ = lst.indexOf(minLst, minLstIndex + 3)\n        val maxLstIndex4 = lst.indexOf(maxLst,\
    \ maxLstIndex + 3)\n        val minLstIndex5 = lst.indexOf(minLst, minLstIndex\
    \ + 4)\n        val maxLstIndex5 = lst.indexOf(maxLst, maxLstIndex + 4)\n    \
    \    val minLstIndex6 = lst.indexOf(minLst, minLstIndex + 5)\n        val maxLstIndex6\
    \ = lst.indexOf(maxLst, maxLstIndex + 5)\n        val minLstIndex7 = lst.indexOf(minLst,\
    \ minLstIndex + 6)\n        val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex\
    \ + 6)\n        val minLstIndex8 = lst.indexOf(minLst, minLstIndex + 7)\n    \
    \    val maxLstIndex8 = lst.indexOf(maxLst, maxLstIndex + 7)\n        val minLstIndex9\
    \ = lst.indexOf(minLst, minLstIndex + 8)\n        val maxLstIndex9 = lst.indexOf(maxLst,\
    \ maxLstIndex + 8)\n        val minLstIndex10 = lst.indexOf(minLst, minLstIndex\
    \ + 9)\n        val maxLstIndex10 = lst.indexOf(maxLst, maxLstIndex + 9)\n   \
    \     val minLstIndex11 = lst.indexOf(minLst, minLstIndex + 10)\n        val maxLstIndex11\
    \ = lst.indexOf(maxLst, maxLstIndex + 10)\n        val minLstIndex12 = lst.indexOf(minLst,\
    \ minLstIndex + 11)\n        val maxLstIndex12 = lst.indexOf(maxLst, maxLstIndex\
    \ + 11)\n        val minLstIndex13 = lst.indexOf(minLst, minLstIndex + 12)\n \
    \       val maxLstIndex13 = l"]
stop_tokens:
- "\n    }\n"

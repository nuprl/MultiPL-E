name: HumanEval_19_sort_numbers
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  \    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
  \ 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted from\
  \ smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one three\
  \ five'\n    def sortNumbers(numbers : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sortNumbers((\"\"\
  )).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
  \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
  \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero four\
  \ five seven eight nine\")));\n    assert(sortNumbers((\"six five four three two\
  \ one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n}\n"
completions: ["        val nums = numbers.split(\" \").toList\n        nums.sortBy(_.toInt)\n\
    \        nums.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n        sortedList.toString",
  "        val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numbers_array = numbers.split(\" \").toList\n        val numbers_sorted\
    \ = numbers_array.sortWith(_ < _)\n        numbers_sorted.mkString(\" \")", " \
    \       val numberList = numbers.split(\" \").toList\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        return sortedString", "        val nums = numbers.split(\" \").toList\n\
    \        val numsSorted = nums.sortWith(_.compareTo(_) < 0)\n        val result\
    \ = numsSorted.mkString(\" \")\n        result", "        val numbers_array =\
    \ numbers.split(\" \").toList\n        val numbers_sorted = numbers_array.sortWith(_\
    \ < _)\n        numbers_sorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n \
    \       val result = sortedNumbers.mkString(\" \")\n        result", "       \
    \ val numberArray = numbers.split(\" \").map(_.toInt).toArray\n        val sortedNumbers\
    \ = numberArray.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "   \
    \     val numbers_array = numbers.split(\" \").map(_.toInt)\n        val numbers_sorted\
    \ = numbers_array.sort\n        val numbers_string = numbers_sorted.mkString(\"\
    \ \")\n        return numbers_string", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n \
    \       sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    val result = sortedList.mkString(\" \")\n        result", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.toString", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    sortedList.toString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numbers_array = numbers.split(\" \").toList\n        val\
    \ numbers_sorted = numbers_array.sortWith(_.compareTo(_) < 0)\n        numbers_sorted.mkString(\"\
    \ \")"]
stop_tokens:
- "\n    }\n"

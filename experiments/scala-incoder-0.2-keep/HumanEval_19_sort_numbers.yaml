name: HumanEval_19_sort_numbers
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  \    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
  \ 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted from\
  \ smallest to largest\n    // >>> sort_numbers('three one five')\n    // 'one three\
  \ five'\n    def sortNumbers(numbers : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sortNumbers((\"\"\
  )).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
  \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
  \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero four\
  \ five seven eight nine\")));\n    assert(sortNumbers((\"six five four three two\
  \ one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n}\n"
completions: ["        val nums = numbers.split(\" \").toList\n        nums.sortBy(_.toInt)\n\
    \        nums.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n        sortedList.toString",
  "        val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numbers_array = numbers.split(\" \").toList\n        val numbers_sorted\
    \ = numbers_array.sortWith(_ < _)\n        numbers_sorted.mkString(\" \")", " \
    \       val numberList = numbers.split(\" \").toList\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        return sortedString", "        val nums = numbers.split(\" \").toList\n\
    \        val numsSorted = nums.sortWith(_.compareTo(_) < 0)\n        val result\
    \ = numsSorted.mkString(\" \")\n        result", "        val numbers_array =\
    \ numbers.split(\" \").toList\n        val numbers_sorted = numbers_array.sortWith(_\
    \ < _)\n        numbers_sorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n \
    \       val result = sortedNumbers.mkString(\" \")\n        result", "       \
    \ val numberArray = numbers.split(\" \").map(_.toInt).toArray\n        val sortedNumbers\
    \ = numberArray.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "   \
    \     val numbers_array = numbers.split(\" \").map(_.toInt)\n        val numbers_sorted\
    \ = numbers_array.sort\n        val numbers_string = numbers_sorted.mkString(\"\
    \ \")\n        return numbers_string", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n \
    \       sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    val result = sortedList.mkString(\" \")\n        result", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.toString", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    sortedList.toString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numbers_array = numbers.split(\" \").toList\n        val\
    \ numbers_sorted = numbers_array.sortWith(_.compareTo(_) < 0)\n        numbers_sorted.mkString(\"\
    \ \")", "        val numbers_array = numbers.split(\" \").toList\n        val\
    \ numbers_sorted = numbers_array.sortWith(_.compareTo(_) < 0)\n        numbers_sorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedNumbers\
    \ = numberList.sortBy(_.toInt)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberArray = numbers.split(\" \").toList\n        val sortedArray =\
    \ numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toString\n\
    \        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val numbers_array = numbers.split(\" \").map(_.toInt).toArray\n\
    \        val numbers_sorted = numbers_array.sortWith(_ < _)\n        numbers_sorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val numbers_array = numbers.split(\" \"\
    ).toList\n        val numbers_sorted = numbers_array.sortWith(_ < _)\n       \
    \ numbers_sorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    val sortedString = sortedList.mkString(\" \")\n        sortedString", " \
    \       val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\" \")\n\
    \        result", "        val nums = numbers.split(\" \").map(_.toInt)\n    \
    \    val sorted = nums.sortWith((x, y) => x < y)\n        sorted.mkString(\" \"\
    )", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").toList\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.mkString(\" \")", "        val numbers_array = numbers.split(\"\
    \ \").toList\n        val numbers_sorted = numbers_array.sortWith(_.compareTo(_)\
    \ < 0)\n        numbers_sorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortBy(_)\n        sortedList.mkString(\"\
    \ \")", "        val numbers_arr = numbers.split(\" \").map(_.toInt)\n       \
    \ val sorted_arr = numbers_arr.sortWith(_ < _)\n        sorted_arr.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numbers_array = numbers.split(\" \").toList\n        val numbers_sorted\
    \ = numbers_array.sortWith(_ < _)\n        numbers_sorted.mkString(\" \")", " \
    \       val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberArray = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberArray.sortWith(_ < _)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val nums = numbers.split(\" \").toList\n\
    \        val numsSorted = nums.sortWith(_ < _)\n        numsSorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numbers_array = numbers.split(\" \").toList\n        val numbers_sorted\
    \ = numbers_array.sortWith(_.compareTo(_) < 0)\n        numbers_sorted.mkString(\"\
    \ \")", "        val numbers_arr = numbers.split(\" \").toList\n        val numbers_arr_sorted\
    \ = numbers_arr.sortBy(_.toInt)\n        numbers_arr_sorted.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        val sortedNumberString = sortedNumbers.mkString(\"\
    \ \")\n        sortedNumberString", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    val sortedString = sortedList.mkString(\" \")\n        sortedString", " \
    \       val numberArray = numbers.split(\" \").map(_.toInt)\n        val sortedArray\
    \ = numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toList.mkString(\"\
    \ \")\n        sortedString", "        val nums = numbers.split(\" \").map(_.toInt)\n\
    \        val sorted = nums.sortWith(_ < _)\n        val result = sorted.mkString(\"\
    \ \")\n        result", "        val numberArray = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedArray = numberArray.sortWith(_ < _)\n        val sortedString\
    \ = sortedArray.toString\n        sortedString", "        val numberList = numbers.split(\"\
    \ \").toList\n        val sortedNumbers = numberList.sortWith(_ < _)\n       \
    \ sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n        val\
    \ result = sortedList.mkString(\" \")\n        result", "        val numbers =\
    \ numbers.split(\" \").toList\n        val numbers_sorted = numbers.sortBy(_.toInt)\n\
    \        val numbers_sorted_string = numbers_sorted.mkString(\" \")\n        return\
    \ numbers_sorted_string", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val sortedString\
    \ = sortedList.mkString(\" \")\n        sortedString", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt).toList\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n \
    \       sortedNumbers.mkString(\" \")", "        val numbers_array = numbers.split(\"\
    \ \").toList\n        val numbers_sorted = numbers_array.sortWith(_ < _)\n   \
    \     numbers_sorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    sortedList.toString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortBy(_.toInt)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val numbers = numbers.split(\" \").toList\n\
    \        val numbers_sorted = numbers.sortBy(_.toInt)\n        numbers_sorted.mkString(\"\
    \ \")", "        val numbers_array = numbers.split(\" \").map(_.toInt).toArray\n\
    \        val numbers_sorted = numbers_array.sortWith(_ < _)\n        numbers_sorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt).toList\n \
    \       val sortedList = numberList.sortBy(_.toInt)\n        val sortedString\
    \ = sortedList.mkString(\" \")\n        sortedString", "        val numberArray\
    \ = numbers.split(\" \").map(_.toInt).toArray\n        val sortedArray = numberArray.sortWith(_\
    \ < _)\n        val sortedString = sortedArray.toString\n        sortedString",
  "        val numberArray = numbers.split(\" \").map(_.toInt)\n        val sortedArray\
    \ = numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toString\n\
    \        sortedString.reverse", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "        val\
    \ numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt).toList\n        val sortedList = numberList.sortWith(_ < _)\n\
    \        sortedList.mkString(\" \")", "        val numberArray = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedArray = numberArray.sortWith(_ < _)\n  \
    \      val sortedString = sortedArray.toList.mkString(\" \")\n        sortedString",
  "        val numbers_arr = numbers.split(\" \").toList\n        val numbers_arr_sorted\
    \ = numbers_arr.sortWith(_ < _)\n        numbers_arr_sorted.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortBy(_.toInt)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val nums = numbers.split(\" \").toList\n\
    \        val numsSorted = nums.sortWith((a, b) => a < b)\n        numsSorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numbers_arr = numbers.split(\" \").map(_.toInt).toArray\n        val\
    \ numbers_sorted = numbers_arr.sortWith(_ < _)\n        numbers_sorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt).toList\n \
    \       val sortedList = numberList.sortBy(_.toInt)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").toList\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(_.toInt)\n        val sorted = nums.sortWith(_\
    \ < _)\n        val result = sorted.mkString(\" \")\n        result", "      \
    \  val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val sortedString\
    \ = sortedList.mkString(\" \")\n        sortedString", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt).toList\n        val sortedNumbers = numberList.sortBy(_.toInt)\n\
    \        val sortedStrings = sortedNumbers.map(_.toString).mkString(\" \")\n \
    \       return sortedStrings", "        val numberArray = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedArray = numberArray.sortWith(_ < _)\n      \
    \  val sortedString = sortedArray.toString\n        sortedString.trim", "    \
    \    val numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "        val\
    \ numberArray = numbers.split(\" \").map(_.toInt)\n        val sortedArray = numberArray.sortWith(_\
    \ < _)\n        val sortedString = sortedArray.toList.mkString(\" \")\n      \
    \  return sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.toString",
  "        val numbers_array = numbers.split(\" \").map(_.toInt)\n        val numbers_sorted\
    \ = numbers_array.sortWith(_ < _)\n        val numbers_string = numbers_sorted.mkString(\"\
    \ \")\n        numbers_string", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n     \
    \   sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt).toList\n        val sortedList = numberList.sortBy(_)\n   \
    \     val result = sortedList.mkString(\" \")\n        result", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_\
    \ < _)\n        sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    val result = sortedList.mkString(\" \")\n        result", "        val numberArray\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedArray = numberArray.sortWith(_\
    \ < _)\n        sortedArray.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").toList\n        val numsSorted = nums.sortWith(_ < _)\n        val numsSortedString\
    \ = numsSorted.mkString(\" \")\n        return numsSortedString", "        val\
    \ numberArray = numbers.split(\" \").map(_.toInt)\n        val sortedArray = numberArray.sortWith(_\
    \ < _)\n        val sortedString = sortedArray.toList.mkString(\" \")\n      \
    \  return sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        val result =\
    \ sortedNumbers.mkString(\" \")\n        result", "        val nums = numbers.split(\"\
    \ \").toList\n        val numsSorted = nums.sortBy(_.toInt)\n        numsSorted.mkString(\"\
    \ \")", "        val numbers_array = numbers.split(\" \").toList\n        val\
    \ numbers_array_sorted = numbers_array.sortWith(_ < _)\n        numbers_array_sorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt).toList\n \
    \       val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberArray = numbers.split(\" \").map(_.toInt)\n       \
    \ val sortedArray = numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toString\n\
    \        sortedString", "        val numbers_array = numbers.split(\" \").map(_.toInt)\n\
    \        val numbers_sorted = numbers_array.sortWith(_ < _)\n        val numbers_string\
    \ = numbers_sorted.mkString(\" \")\n        numbers_string", "        val numbers_array\
    \ = numbers.split(\" \").map(_.toInt)\n        val sorted_numbers_array = numbers_array.sortWith(_\
    \ < _)\n        val sorted_numbers = sorted_numbers_array.mkString(\" \")\n  \
    \      sorted_numbers", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberArray = numbers.split(\" \").map(_.toInt)\n        val sortedArray\
    \ = numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toString\n\
    \        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val sortedString\
    \ = sortedList.mkString(\" \")\n        sortedString", "        val numberArray\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedArray = numberArray.sortWith(_\
    \ < _)\n        sortedArray.toString", "        val numberList = numbers.split(\"\
    \ \").toList\n        val sortedList = numberList.sortBy(_.toInt)\n        val\
    \ result = sortedList.mkString(\" \")\n        result", "        val numberList\
    \ = numbers.split(\" \").toList\n        val numberSet = numberList.map(_.toInt).toSet\n\
    \        val sortedNumbers = numberList.sortWith(_.toInt < _.toInt)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").toList\n        val sortedList =\
    \ numberList.sortWith(_.compareTo(_) < 0)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortBy(_)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        return sortedString", "        val nums = numbers.split(\" \").toList\n\
    \        val numsSorted = nums.sortBy(_.toInt)\n        val numsSortedString =\
    \ numsSorted.mkString(\" \")\n        return numsSortedString", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt).toList\n        val sortedNumbers = numberList.sortWith(_ <\
    \ _)\n        sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").toList\n        val sortedList = numberList.sortWith(_ < _)\n        val\
    \ result = sortedList.mkString(\" \")\n        result", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt).toList\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").toList\n        val numsSorted = nums.sortWith(_.compareTo(_) < 0)\n   \
    \     numsSorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n \
    \       sortedNumbers.mkString(\" \")", "        val numbers_array = numbers.split(\"\
    \ \").toList\n        val numbers_array_sorted = numbers_array.sortWith(_ < _)\n\
    \        numbers_array_sorted.mkString(\" \")", "        val numbers_array = numbers.split(\"\
    \ \").map(_.toInt)\n        val numbers_sorted = numbers_array.sortWith(_ < _)\n\
    \        numbers_sorted.mkString(\" \")", "        val numbers_array = numbers.split(\"\
    \ \").map(_.toInt)\n        val numbers_sorted = numbers_array.sortWith(_ < _)\n\
    \        numbers_sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").toList\n        val numsSorted = nums.sortBy(_.toInt)\n        numsSorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\" \"\
    )\n        result", "        val numberList = numbers.split(\" \").toList\n  \
    \      val sortedNumbers = numberList.sortBy(_.toInt)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberArray = numbers.split(\" \").map(_.toInt).toArray\n        val\
    \ sortedArray = numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toString\n\
    \        sortedString", "        val numberList = numbers.split(\" \").toList\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberArray = numbers.split(\" \").toList\n        val sortedArray\
    \ = numberArray.sortWith(_ < _)\n        sortedArray.toString", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt).toList\n        val sortedList = numberList.sortBy(_)\n\
    \        sortedList.mkString(\" \")", "        val numbers_arr = numbers.split(\"\
    \ \").map(_.toInt).toArray\n        val numbers_sorted = numbers_arr.sortWith(_\
    \ < _)\n        numbers_sorted.mkString(\" \")", "        val numbers_array =\
    \ numbers.split(\" \").map(_.toInt)\n        val numbers_sorted = numbers_array.sortWith(_\
    \ < _)\n        val numbers_string = numbers_sorted.mkString(\" \")\n        numbers_string",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\" \")\n\
    \        result", "        val numberArray = numbers.split(\" \").toList\n   \
    \     val sortedArray = numberArray.sortWith(_.compareTo(_) < 0)\n        sortedArray.toList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numbers_array = numbers.split(\" \").map(_.toInt)\n     \
    \   val numbers_sorted = numbers_array.sortWith(_ < _)\n        val numbers_string\
    \ = numbers_sorted.mkString(\" \")\n        numbers_string", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.mkString(\" \")", "        val numberArray = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedArray = numberArray.sortWith(_ < _)\n  \
    \      val sortedString = sortedArray.toString\n        sortedString.trim", " \
    \       val numbers_arr = numbers.split(\" \").map(_.toInt)\n        val sorted_arr\
    \ = numbers_arr.sortWith(_ < _)\n        sorted_arr.mkString(\" \")", "      \
    \  val numbers_array = numbers.split(\" \").toList\n        val numbers_sorted\
    \ = numbers_array.sortWith(_.compareTo(_) < 0)\n        numbers_sorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedList\
    \ = numberList.sortBy(_.toInt)\n        sortedList.mkString(\" \")", "       \
    \ val numbers_array = numbers.split(\" \").toList\n        val numbers_sorted\
    \ = numbers_array.sortWith(_ < _)\n        numbers_sorted.mkString(\" \")", " \
    \       val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedList = numberList.sortBy(_.toInt)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val numberList = numbers.split(\" \").toList\n\
    \        val sortedList = numberList.sortWith(_.compareTo(_) < 0)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        return sortedString", "        val nums = numbers.split(\" \").map(_.toInt)\n\
    \        val sorted = nums.sortWith(_ < _)\n        sorted.mkString(\" \")", " \
    \       val numbers_array = numbers.split(\" \").map(_.toInt)\n        val sorted_numbers\
    \ = numbers_array.sortWith(_ < _)\n        sorted_numbers.mkString(\" \")", " \
    \       val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberArray = numbers.split(\" \").map(_.toInt)\n       \
    \ val sortedArray = numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toString\n\
    \        sortedString", "        val numberList = numbers.split(\" \").toList\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numbers_arr = numbers.split(\" \").toList\n        val numbers_sorted\
    \ = numbers_arr.sortWith(_ < _)\n        numbers_sorted.mkString(\" \")", "  \
    \      val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.toString", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        val result = sortedList.mkString(\" \")\n        result", "  \
    \      val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").toList\n        val numberSet = numberList.map(_.toInt).toSet\n\
    \        val sortedNumbers = numberList.sortWith(_.toInt < _.toInt)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberArray = numbers.split(\" \").map(_.toInt)\n        val sortedArray\
    \ = numberArray.sortWith(_ < _)\n        sortedArray.toString", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_\
    \ < _)\n        sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    sortedList.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberArray = numbers.split(\" \").map(_.toInt).toArray\n\
    \        val sortedArray = numberArray.sortWith(_ < _)\n        sortedArray.toString",
  "        val numbers_array = numbers.split(\" \").map(_.toInt)\n        val numbers_sorted\
    \ = numbers_array.sortWith(_ < _)\n        numbers_sorted.mkString(\" \")", " \
    \       val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numbers_array = numbers.split(\" \").toList\n        val numbers_sorted\
    \ = numbers_array.sortWith(_ < _)\n        numbers_sorted.mkString(\" \")", " \
    \       val numbers_array = numbers.split(\" \").map(_.toInt)\n        val sorted_array\
    \ = numbers_array.sort\n        val sorted_string = sorted_array.mkString(\" \"\
    )\n        sorted_string", "        val nums = numbers.split(\" \").toList\n \
    \       val numsSorted = nums.sortBy(_.toInt)\n        numsSorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.toString", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        val result = sortedList.mkString(\" \")\n        result", "  \
    \      val nums = numbers.split(\" \").map(_.toInt)\n        val sorted = nums.sortWith(_\
    \ < _)\n        sorted.mkString(\" \")", "        val numbers_arr = numbers.split(\"\
    \ \").map(_.toInt).toArray\n        val numbers_sorted = numbers_arr.sortWith(_\
    \ < _)\n        numbers_sorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    sortedList.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n        val\
    \ sortedString = sortedList.mkString(\" \")\n        sortedString", "        val\
    \ numberList = numbers.split(\" \").toList\n        val sortedNumbers = numberList.sortWith(_\
    \ < _)\n        sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").toList\n        val sortedNumbers = numberList.sortWith(_ < _)\n       \
    \ sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n     \
    \   val result = sortedNumbers.mkString(\" \")\n        result"]
stop_tokens:
- "\n    }\n"

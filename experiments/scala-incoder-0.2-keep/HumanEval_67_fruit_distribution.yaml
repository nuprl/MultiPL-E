name: HumanEval_67_fruit_distribution
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // In this task, you will be given a string that represents a number of apples\
  \ and oranges \n    // that are distributed in a basket of fruit this basket contains\
  \ \n    // apples, oranges, and mango fruits. Given the string that represents the\
  \ total number of \n    // the oranges and apples and an integer that represent\
  \ the total number of the fruits \n    // in the basket return the number of the\
  \ mango fruits in the basket.\n    // for examble:\n    // fruit_distribution(\"\
  5 apples and 6 oranges\", 19) ->19 - 5 - 6 = 8\n    // fruit_distribution(\"0 apples\
  \ and 1 oranges\",3) -> 3 - 0 - 1 = 2\n    // fruit_distribution(\"2 apples and\
  \ 3 oranges\", 100) -> 100 - 2 - 3 = 95\n    // fruit_distribution(\"100 apples\
  \ and 1 oranges\",120) -> 120 - 100 - 1 = 19\n    def fruitDistribution(s : String,\
  \ n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fruitDistribution((\"\
  5 apples and 6 oranges\"), (19l)) == (8l));\n    assert(fruitDistribution((\"5 apples\
  \ and 6 oranges\"), (21l)) == (10l));\n    assert(fruitDistribution((\"0 apples\
  \ and 1 oranges\"), (3l)) == (2l));\n    assert(fruitDistribution((\"1 apples and\
  \ 0 oranges\"), (3l)) == (2l));\n    assert(fruitDistribution((\"2 apples and 3\
  \ oranges\"), (100l)) == (95l));\n    assert(fruitDistribution((\"2 apples and 3\
  \ oranges\"), (5l)) == (0l));\n    assert(fruitDistribution((\"1 apples and 100\
  \ oranges\"), (120l)) == (19l));\n    }\n\n}\n"
completions: ["        val apples = s.split(\"apples and \")\n        val oranges\
    \ = s.split(\"oranges and \")\n        val mangos = s.split(\"mango and \")\n\
    \        val apples_count = apples.map(_.toInt).sum\n        val oranges_count\
    \ = oranges.map(_.toInt).sum\n        val mangos_count = mangos.map(_.toInt).sum\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val oranges_count = oranges_count - apples_count\n        val mangos_count\
    \ = mangos_count - apples_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count\n \
    \       val mangos_count = mangos_count - apples_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val oranges_count = oranges_count\
    \ - apples_count\n        val mangos_count = mangos_count - apples_count\n   \
    \     val apples_count = apples_count - oranges_count - mangos_count\n       \
    \ val oranges_count = oranges_count - apples_count\n        val mangos_count =\
    \ mangos_count - apples_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count\n \
    \       val mangos_count = mangos_count - apples_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val oranges_count = oranges_count\
    \ - apples_count\n        val mangos_count = mangos_count - apples_count\n   \
    \     val apples_count = apples_count - oranges_count - mangos_count\n       \
    \ val oranges_count = oranges_count - apples_count\n        val mangos_count =\
    \ mangos_count - apples_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count\n \
    \       val mangos_count = mangos_count - apples_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val oranges_count = oranges_count\
    \ - apples_count\n        val mangos_count = mangos_count - apples_count\n   \
    \     val apples_count = apples_count - oranges_count - mangos_count\n       \
    \ val oranges_count = oranges_count - apples_count\n        val mangos_count =\
    \ mangos_count - apples_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count\n \
    \       val ", "        val apples = s.split(\" \").map(_.toInt).sum\n       \
    \ val oranges = s.split(\" \").map(_.toInt).sum\n        val mangos = s.split(\"\
    \ \").map(_.toInt).sum\n        val fruits = apples + oranges + mangos\n     \
    \   fruits - n - mangos", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val fruits = apples\
    \ ++ oranges\n        val mangos = fruits.filter(x => x % 2 == 0)\n        fruits.length\
    \ - mangos.length", "        val apples = s.split(\"apples and \")\n        val\
    \ oranges = s.split(\"oranges and \")\n        val fruits = s.split(\"fruits and\
    \ \")\n        val apples_count = apples(0).split(\" \").length\n        val oranges_count\
    \ = oranges(0).split(\" \").length\n        val fruits_count = fruits(0).split(\"\
    \ \").length\n        val apples_sum = apples(0).split(\" \").map(_.toInt).sum\n\
    \        val oranges_sum = oranges(0).split(\" \").map(_.toInt).sum\n        val\
    \ fruits_sum = fruits(0).split(\" \").map(_.toInt).sum\n        val mangos = fruits_sum\
    \ - apples_sum - oranges_sum\n        fruits_sum - apples_sum - oranges_sum -\
    \ mangos", "        val apples = s.split(\" \").map(_.toInt)\n        val oranges\
    \ = s.split(\"and\").map(_.toInt)\n        val mangos = s.split(\"and\").map(_.toInt)\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_", "        val fruits\
    \ = s.split(\" \")\n        val apples = fruits(0).toLong\n        val oranges\
    \ = fruits(1).toLong\n        val mangoes = n - apples - oranges\n        fruits.last.toLong\
    \ - apples - oranges", "        val apples = s.toInt\n        val oranges = s.toInt\n\
    \        val mangos = s.toInt\n        val fruits = apples + oranges + mangos\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count_in_basket\
    \ = apples_count - mangos_count\n        val oranges_count_in_basket = oranges_count\
    \ - mangos_count\n        val mangos_count_in_basket = apples_count_in_basket\
    \ - oranges_count_in_basket\n        fruits_count_in_basket - (apples_count_in_basket\
    \ + oranges_count_in_basket + mangos_count_in_basket)", "        val fruits =\
    \ s.split(\" \")\n        val apples = fruits(0).toLong\n        val oranges =\
    \ fruits(1).toLong\n        val mangoes = n - apples - oranges\n        fruits.last.toLong\
    \ - apples - oranges", "        val apples = s.toInt\n        val oranges = s.toInt\n\
    \        val mangos = s.toInt\n        val fruits = apples + oranges + mangos\n\
    \        val basket = fruits.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val apples_count = apples_count\
    \ - mangos_count\n        val apples_count = apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val apples_count = apples_count\
    \ - mangos_count\n        val apples_count = apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val apples_count = apples_count\
    \ - mangos_count\n        val apples_count = apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val apples_count = apples_count\
    \ - mangos_count\n        val apples_count = apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val apples_count = apples_count\
    \ - mangos_count\n        val apples_count = apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val apples_count = apples_count\
    \ - mangos_count\n        val apples_count = apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apple", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val basket = new mutable.ArrayBuffer[Int]()\n    \
    \    basket += n\n        basket += apples(0)\n        basket += oranges(0)\n\
    \        basket += mangos(0)\n        val total = apples(0) + oranges(0) + mangos(0)\n\
    \        val count = apples(0) + oranges(0)\n        val totalMangos = mangos(0)\n\
    \        val totalApples = apples(0)\n        val totalOranges = oranges(0)\n\
    \        val totalFruits = apples(0) + oranges(0) + mangos(0)\n        val totalMangoFruits\
    \ = mangos(0)\n        val totalAppleFruits = apples(0)\n        val totalOrangeFruits\
    \ = oranges(0)\n        val totalFruitsMango = apples(0) + oranges(0)\n      \
    \  val totalFruitsApple = apples(0)\n        val totalFruitsOrange = oranges(0)\n\
    \        val totalFruitsMangoFruits = mangos(0)\n        val totalFruitsAppleFruits\
    \ = apples(0)\n        val totalFruitsOrangeFruits = oranges(0)\n        val totalFruitsMangoFruitsApple\
    \ = mangos(0)\n        val totalFruitsAppleFruitsOrange = apples(0)\n        val\
    \ totalFruitsOrangeFruitsMango = oranges(0)\n        val totalFruitsMangoFruitsAppleFruits\
    \ = mangos(0)\n        val totalFruitsAppleFruitsOrangeFruits = apples(0)\n  \
    \      val totalFruitsOrangeFruitsMangoFruits = oranges(0)\n        val totalFruitsMangoFruitsAppleFruitsOrange\
    \ = mangos(0)\n        val totalFruitsAppleFruitsOrangeFruitsMango = apples(0)\n\
    \        val totalFruitsOrangeFruitsMangoFruitsAppleFruits = oranges(0)\n    \
    \    val totalFruitsMangoFruitsAppleFruitsOrangeFruits = mangos(0)\n        val\
    \ totalFru", "        val apples = s.toInt\n        val oranges = s.toInt\n  \
    \      val fruits = s.toInt\n        val mangos = n - apples - oranges - fruits\n\
    \        mangos", "        val apples = s.split(\"apples\")(0)\n        val oranges\
    \ = s.split(\"oranges\")(0)\n        val mangos = s.split(\"mango\")(0)\n    \
    \    val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_total = apples_count\
    \ + oranges_count + mangos_count\n        val oranges_total = apples_count - mangos_count\n\
    \        val mangos_total = apples_count - oranges_count\n        val apples_percentage\
    \ = apples_count / apples_total\n        val oranges_percentage = oranges_count\
    \ / oranges_total\n        val mangos_percentage = mangos_count / mangos_total\n\
    \        val apples_percentage_rounded = math.round(apples_percentage*100d).toInt\n\
    \        val oranges_percentage_rounded = math.round(oranges_percentage*100d).toInt\n\
    \        val mangos_percentage_rounded = math.round(mangos_percentage*100d).toInt\n\
    \        val apples_percentage_rounded_rounded = math.round(apples_percentage_rounded*100d).toInt\n\
    \        val oranges_percentage_rounded_rounded = math.round(oranges_percentage_rounded*100d).toInt\n\
    \        val mangos_percentage_rounded_rounded = math.round(mangos_percentage_rounded*100d).toInt\n\
    \        val apples_percentage_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded*100d).toInt\n\
    \        val oranges_percentage_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded*100d).toInt\n\
    \        val mangos_percentage_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded*100d).toInt\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded_rounded*100d).toInt\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded_rounded*100d).toInt\n\
    \        val mangos_percentage_rounded_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded_rounded*100d).toInt\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded_rounded_rounded*100d).toInt\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded_rounded = math.round(oranges_percentage_roun",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = s.toInt\n        val fruits = apples + oranges + mangos\n        val basket\
    \ = fruits.toLong\n        val apples_count = apples.toLong\n        val oranges_count\
    \ = oranges.toLong\n        val mangos_count = mangos.toLong\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val apples_count = apples_count\
    \ / fruits\n        val oranges_count = oranges_count / fruits\n        val mangos_count\
    \ = mangos_count / fruits\n        val mangos_count = mangos_count - apples_count\
    \ * fruits\n        fruits_count = apples_count + oranges_count + mangos_count\n\
    \        fruits_count", "        val apples = s.toInt\n        val oranges = s.toInt\n\
    \        val mangos = s.toInt\n        val basket = new mutable.HashMap[String,\
    \ Int]()\n        basket.put(\"apples\", apples)\n        basket.put(\"oranges\"\
    , oranges)\n        basket.put(\"mangos\", mangos)\n        val totalFruits =\
    \ apples + oranges + mangos\n        val fruits = basket.filter(_._2 > 0).map(_._1).sum\n\
    \        fruits - totalFruits", "        val apples = s.split(\" \")(0)\n    \
    \    val oranges = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val fruits_count = fruits.toLong\n        val apples_count = apples_count\
    \ - oranges_count\n        val oranges_count = oranges_count - apples_count\n\
    \        val fruits_count = fruits_count - apples_count\n        fruits_count\
    \ - apples_count + oranges_count - apples_count + apples_count - oranges_count\
    \ + oranges_count - apples_count + apples_count - oranges_count + oranges_count\
    \ - apples_count + apples_count - oranges_count", "        val apples = s.split(\"\
    \ \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n      \
    \  val mangos = s.split(\" \").map(_.toInt)\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val apples_sum = apples.sum\n        val oranges_sum = oranges.sum\n\
    \        val mangos_sum = mangos.sum\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val apples_sum = apples.sum\n        val oranges_sum = oranges.sum\n\
    \        val mangos_sum = mangos.sum\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val apples_sum = apples.sum\n        val oranges_sum = oranges.sum\n\
    \        val mangos_sum = mangos.sum\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val apples_sum = apples.sum\n        val oranges_sum = oranges.sum\n\
    \        val mangos_sum = mangos.sum\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val apples_sum = apples.sum\n        val oranges_sum = oranges.sum\n\
    \        val mangos_sum = mangos.sum\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val apples_sum = apples.sum\n        val oranges_sum = oranges.sum\n\
    \        val mangos_sum = mangos.sum\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val apples_sum = apples.sum\n        val oranges_sum = oranges.sum\n\
    \        val mangos_sum = mangos.sum\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val apples_sum = apples.sum\n        val oranges_sum = oranges.sum\n\
    \        val mangos_sum = mangos.sum\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val apples_", "        val fruits = s.split(\" \")\n        val apples\
    \ = fruits(0).toLong\n        val oranges = fruits(1).toLong\n        val mangoes\
    \ = n - apples - oranges\n        fruits.last.toLong - apples - oranges", "  \
    \      val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangos = n - fruits\n        fruits + mangos",
  "        val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\"\
    \ \")(1).toLong\n        val mangos = s.split(\" \")(2).toLong\n        val totalFruits\
    \ = apples + oranges + mangos\n        val appleFruits = apples - mangos\n   \
    \     val orangeFruits = oranges - mangos\n        val mangoFruits = mangos -\
    \ apples\n        val totalFruitsWithApples = appleFruits + orangeFruits + mangoFruits\n\
    \        val appleFruitsWithApples = appleFruits - mangoFruits\n        val orangeFruitsWithApples\
    \ = orangeFruits - mangoFruits\n        val mangoFruitsWithApples = mangoFruits\
    \ - appleFruits\n        val totalFruitsWithApplesAndOranges = appleFruitsWithApples\
    \ + orangeFruitsWithApples + mangoFruitsWithApples\n        val appleFruitsWithApplesAndOranges\
    \ = appleFruitsWithApples - mangoFruitsWithApples\n        val orangeFruitsWithApplesAndOranges\
    \ = orangeFruitsWithApples - mangoFruitsWithApples\n        val mangoFruitsWithApplesAndOranges\
    \ = mangoFruitsWithApples - appleFruitsWithApples\n        val totalFruitsWithApplesAndOrangesAndMangos\
    \ = appleFruitsWithApplesAndOranges + orangeFruitsWithApplesAndOranges + mangoFruitsWithApplesAndOranges\n\
    \        val appleFruitsWithApplesAndOrangesAndMangos = appleFruitsWithApplesAndOranges\
    \ - mangoFruitsWithApplesAndOranges\n        val orangeFruitsWithApplesAndOrangesAndMangos\
    \ = orangeFruitsWithApplesAndOranges - mangoFruitsWithApplesAndOranges\n     \
    \   val mangoFruitsWithApplesAndOrangesAndMangos = mangoFruitsWithApplesAndOranges\
    \ - appleFruitsWithApplesAndOranges\n        val totalFruitsWithApplesAndOrangesAndMangosAndTotal\
    \ = appleFruitsWithApplesAndOrangesAndMangos + orangeFruitsWithApplesAndOrange",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = s.toInt\n        val basket = new mutable.HashMap[String, Int]()\n       \
    \ basket.put(\"apples\", apples)\n        basket.put(\"oranges\", oranges)\n \
    \       basket.put(\"mangos\", mangos)\n        val totalFruits = apples + oranges\
    \ + mangos\n        val fruits = basket.filter(_._2 > 0).map(_._1).sum\n     \
    \   fruits - totalFruits", "        val apples = s.split(\" \")(0).toLong\n  \
    \      val oranges = s.split(\" \")(1).toLong\n        val fruits = s.split(\"\
    \ \")(2).toLong\n        val apples_oranges = apples + oranges\n        val apples_fruits\
    \ = apples + fruits\n        val oranges_fruits = oranges + fruits\n        val\
    \ apples_oranges_fruits = apples_oranges + fruits\n        val apples_oranges_oranges_fruits\
    \ = apples_oranges + oranges_fruits\n        val apples_oranges_oranges_oranges_fruits\
    \ = apples_oranges + oranges_fruits + fruits\n        val apples_oranges_oranges_oranges_oranges_fruits\
    \ = apples_oranges + oranges_fruits + fruits + fruits\n        val apples_oranges_oranges_oranges_oranges_oranges_fruits\
    \ = apples_oranges + oranges_fruits + fruits + fruits + fruits\n        val apples_oranges_oranges_oranges_oranges_oranges_oranges_fruits\
    \ = apples_oranges + oranges_fruits + fruits + fruits + fruits + fruits\n    \
    \    val apples_oranges_oranges_oranges_oranges_oranges_oranges_fruits = apples_oranges\
    \ + oranges_fruits + fruits + fruits + fruits + fruits + fruits\n        val apples_oranges_oranges_oranges_oranges_oranges_oranges_oranges_fruits\
    \ = apples_oranges + oranges_fruits + fruits + fruits + fruits + fruits + fruits\
    \ + fruits\n        val apples_oranges_oranges_oranges_oranges_oranges_oranges_oranges_fruits\
    \ = apples_oranges + oranges_fruits + fruits + fruits + fruits + fruits + fruits\
    \ + fruits\n        val apples_oranges_oranges_oranges_oranges_oranges_oranges_oranges_oranges_fruits\
    \ = apples_oranges + oranges_fruits + fruits + fruits + fruits + fruits + fruits\
    \ + fruits + fruits\n        val apples_oranges_oranges_oranges_oranges_oranges_oranges_oranges_oranges_oranges_fruits\
    \ = apples_oranges + oranges_fruits + fruits + fruits + fruits + fruits + fruits\
    \ + fruits + fruits + fruits\n        val apples_oranges_oranges_oranges_oranges_oranges_oranges_oranges_oranges_oranges_fruits\
    \ = apples_oranges + oranges_fruits + fruits + fruits + fruits + fruits + ", " \
    \       val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val apples_count = apples.sum\n        val oranges_count = oranges.sum\n   \
    \     val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n   \
    \     val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n   \
    \     val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangos_sum = mangos.sum\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangos_count = mangos.sum\n        val apples_", "        val apples\
    \ = s.toInt\n        val oranges = s.toInt\n        val mangos = n - apples -\
    \ oranges\n        val fruits = apples + oranges + mangos\n        fruits", " \
    \       val apples = s.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = s.toInt\n        val fruits = apples + oranges + mangos\n        val basket\
    \ = fruits.toLong\n        val apples_count = apples / fruits\n        val oranges_count\
    \ = oranges / fruits\n        val mangos_count = mangos / fruits\n        val\
    \ apples_remain = apples % fruits\n        val oranges_remain = oranges % fruits\n\
    \        val mangos_remain = mangos % fruits\n        val apples_total = apples_count\
    \ + apples_remain\n        val oranges_total = oranges_count + oranges_remain\n\
    \        val mangos_total = mangos_count + mangos_remain\n        val apples_remain\
    \ = apples_total - apples_count * fruits\n        val oranges_remain = oranges_total\
    \ - oranges_count * fruits\n        val mangos_remain = mangos_total - mangos_count\
    \ * fruits\n        val apples_total = apples_count * fruits\n        val oranges_total\
    \ = oranges_count * fruits\n        val mangos_total = mangos_count * fruits\n\
    \        val apples_remain = apples_total - apples_count * fruits\n        val\
    \ oranges_remain = oranges_total - oranges_count * fruits\n        val mangos_remain\
    \ = mangos_total - mangos_count * fruits\n        val apples_total = apples_count\
    \ * fruits\n        val oranges_total = oranges_count * fruits\n        val mangos_total\
    \ = mangos_count * fruits\n        val apples_remain = apples_total - apples_count\
    \ * fruits\n        val oranges_remain = oranges_total - oranges_count * fruits\n\
    \        val mangos_remain = mangos_total - mangos_count * fruits\n        val\
    \ apples_total = apples_count * fruits\n        val oranges_total = oranges_count\
    \ * fruits\n        val mangos_total = mangos_count * fruits\n        val apples_remain\
    \ = apples_total - apples_count * fruits\n        val oranges_remain = oranges_total\
    \ - oranges_count * fruits\n        val mangos_remain = mangos_total - mangos_count\
    \ * fruits\n        val apples_total = apples_count * fruits\n        val oranges_total\
    \ = oranges_count * fruits\n        val mangos_total = mangos_count * fruits\n\
    \        val apples_remain = apples_total ", "        val fruits = s.split(\"\
    \ \")\n        val apples = fruits(0).toLong\n        val oranges = fruits(1).toLong\n\
    \        val mango = fruits(2).toLong\n        val apples_count = apples + oranges\n\
    \        val oranges_count = oranges\n        val mango_count = apples_count -\
    \ oranges_count\n        val apples_count = apples + oranges + mango\n       \
    \ val oranges_count = oranges\n        val mango_count = apples_count - oranges_count\
    \ - mango\n        val apples_count = apples + oranges + mango\n        val oranges_count\
    \ = oranges\n        val mango_count = apples_count - oranges_count - mango\n\
    \        val apples_count = apples + oranges + mango\n        val oranges_count\
    \ = oranges\n        val mango_count = apples_count - oranges_count - mango\n\
    \        val apples_count = apples + oranges + mango\n        val oranges_count\
    \ = oranges\n        val mango_count = apples_count - oranges_count - mango\n\
    \        val apples_count = apples + oranges + mango\n        val oranges_count\
    \ = oranges\n        val mango_count = apples_count - oranges_count - mango\n\
    \        val apples_count = apples + oranges + mango\n        val oranges_count\
    \ = oranges\n        val mango_count = apples_count - oranges_count - mango\n\
    \        val apples_count = apples + oranges + mango\n        val oranges_count\
    \ = oranges\n        val mango_count = apples_count - oranges_count - mango\n\
    \        val apples_count = apples + oranges + mango\n        val oranges_count\
    \ = oranges\n        val mango_count = apples_count - oranges_count - mango\n\
    \        val apples_count = apples + oranges + mango\n        val oranges_count\
    \ = oranges\n        val mango_count = apples_count - oranges_count - mango\n\
    \        val apples_count = apples + oranges + mango\n        val oranges_count\
    \ = oranges\n        val mango_count = apples_count - oranges_count - mango\n\
    \        val apples_count = apples + oranges + mango\n        val oranges_count\
    \ = oranges\n        val mango_count = apples_count - oranges_count - mango\n\
    \        val apples_count = apples + oranges + mango\n        val oranges_count\
    \ = oranges\n        val mango_count = apples_count - oranges_count - mango\n\
    \        val apples_count = apples + oranges + mango\n        ", "        val\
    \ apples = s.toInt\n        val oranges = s.toInt\n        val mangos = s.toInt\n\
    \        val fruits = apples + oranges + mangos\n        val basket = fruits.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples_count\
    \ - oranges_count - mangos_count\n        val oranges_count = oranges_count -\
    \ apples_count\n        val mangos_count = mangos_count - apples_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - oranges_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - apples_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - oranges_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - apples_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - oranges_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - apples_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - oranges_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - apples_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - oranges_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - apples_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mang", "        val apples = s.toInt\n\
    \        val oranges = s.toInt\n        val mangos = n - apples - oranges\n  \
    \      val apples_count = apples.toInt\n        val oranges_count = oranges.toInt\n\
    \        val mangos_count = n - apples_count - oranges_count\n        val apples_sum\
    \ = apples_count.toInt\n        val oranges_sum = oranges_count.toInt\n      \
    \  val mangos_sum = n - apples_sum - oranges_sum\n        val apples_percentage\
    \ = apples_sum.toDouble / apples_count.toDouble\n        val oranges_percentage\
    \ = oranges_sum.toDouble / oranges_count.toDouble\n        val mangos_percentage\
    \ = mangos_sum.toDouble / mangos_count.toDouble\n        val mangos_count = mangos_sum.toInt\n\
    \        apples_percentage * oranges_percentage * mangos_percentage", "      \
    \  val apples = s.toInt\n        val oranges = s.toInt\n        val fruits = apples\
    \ + oranges\n        val mangos = n - fruits\n        fruits", "        val apples\
    \ = n.toInt\n        val oranges = s.toInt\n        val mangos = apples - oranges\n\
    \        mangos", "        val apples = s.toInt\n        val oranges = s.toInt\n\
    \        val mangos = n - apples - oranges\n        val fruits = apples + oranges\
    \ + mangos\n        fruits", "        val apples = s.split(\"apples\")(0)\n  \
    \      val oranges = s.split(\"oranges\")(0)\n        val mangos = s.split(\"\
    mango\")(0)\n        val apples_count = apples.toLong\n        val oranges_count\
    \ = oranges.toLong\n        val mangos_count = mangos.toLong\n        val apples_total\
    \ = apples_count + apples_count - oranges_count - mangos_count\n        val oranges_total\
    \ = oranges_count + oranges_count - apples_count - mangos_count\n        val mangos_count\
    \ = apples_total + oranges_total - apples_count - mangos_count\n        mangos_count",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangos = n - fruits\n        fruits - mangos",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangos = n - fruits\n        fruits", "    \
    \    val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\" \"\
    )(1).toLong\n        val mangos = s.split(\" \")(2).toLong\n        val total\
    \ = apples + oranges + mangos\n        val apples_count = apples.toInt\n     \
    \   val oranges_count = oranges.toInt\n        val mangos_count = mangos.toInt\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - apples_count\
    \ - oranges_count\n        val apples_count = apples_count + oranges_count + mangos_count\n\
    \        apples_count + mangos_count", "        val apples = s.toInt\n       \
    \ val oranges = s.toInt\n        val mangos = n - apples - oranges\n        val\
    \ fruits = apples + oranges + mangos\n        fruits", "        val apples = s.split(\"\
    \ \")(0)\n        val oranges = s.split(\" \")(1)\n        val fruits = s.split(\"\
    \ \")(2)\n        val apples_count = apples.toLong\n        val oranges_count\
    \ = oranges.toLong\n        val fruits_count = fruits.toLong\n        val mango_fruits\
    \ = fruits_count - apples_count - oranges_count\n        mango_fruits", "    \
    \    val apples = s.split(\"apples\")(0).trim\n        val oranges = s.split(\"\
    oranges\")(0).trim\n        val mangos = s.split(\"mango\")(0).trim\n        val\
    \ apples_count = apples.toInt\n        val oranges_count = oranges.toInt\n   \
    \     val mangos_count = mangos.toInt\n        val apples_count = apples_count\
    \ - oranges_count\n        val oranges_count = oranges_count - apples_count\n\
    \        val mangos_count = mangos_count - apples_count - oranges_count\n    \
    \    val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count - mangos_count\n        val mangos_count = mangos_count\
    \ - apples_count - oranges_count - mangos_count\n        val apples_count = apples_count\
    \ - mangos_count - oranges_count\n        val oranges_count = oranges_count -\
    \ apples_count - mangos_count - oranges_count\n        val mangos_count = mangos_count\
    \ - apples_count - oranges_count - mangos_count - apples_count\n        val apples_count\
    \ = apples_count - mangos_count - oranges_count - mangos_count - apples_count\
    \ - oranges_count\n        val oranges_count = oranges_count - apples_count -\
    \ mangos_count - apples_count - oranges_count - mangos_count - apples_count\n\
    \        val mangos_count = mangos_count - apples_count - oranges_count - mangos_count\
    \ - apples_count - oranges_count - mangos_count - apples_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count - oranges_count - mangos_count\
    \ - apples_count - oranges_count - mangos_count - apples_count - oranges_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count - mangos_count\
    \ - apples_count - oranges_count - mangos_count - apples_count - oranges_count\
    \ - mangos_count - apples_count - oranges_count\n        val mangos_count = mangos_count\
    \ - apples_count - oranges_count - mangos_count - apples_count - oranges_count\
    \ - mangos_count - apples_count - oranges_count - mangos_count - apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples_count - mangos_count\
    \ - oranges_count - mangos_count - apples_count - oranges_count - mangos_count\
    \ - apples_count - oranges_count - mangos_count - apples_count ", "        val\
    \ apples = s.toInt\n        val oranges = s.toInt\n        val mangos = s.toInt\n\
    \        val fruits = apples + oranges + mangos\n        val basket = fruits.toLong\n\
    \        val totalFruits = fruits.toLong\n        val applesInBasket = apples.toLong\n\
    \        val orangesInBasket = oranges.toLong\n        val mangoInBasket = mangos.toLong\n\
    \        val totalFruitsInBasket = fruits.toLong\n        val applesInBasketPercentage\
    \ = applesInBasket.toDouble / totalFruits\n        val orangesInBasketPercentage\
    \ = orangesInBasket.toDouble / totalFruits\n        val mangoInBasketPercentage\
    \ = mangoInBasket.toDouble / totalFruits\n        val totalFruitsInBasketPercentage\
    \ = totalFruitsInBasket.toDouble / totalFruits\n        val applesInBasketPercentagePercentage\
    \ = applesInBasketPercentage.toDouble / totalFruits\n        val orangesInBasketPercentagePercentage\
    \ = orangesInBasketPercentage.toDouble / totalFruits\n        val mangoInBasketPercentagePercentage\
    \ = mangoInBasketPercentage.toDouble / totalFruits\n        val totalFruitsInBasketPercentagePercentage\
    \ = totalFruitsInBasketPercentage.toDouble / totalFruits\n        val applesInBasketPercentagePercentagePercentage\
    \ = applesInBasketPercentagePercentage.toDouble / totalFruits\n        val orangesInBasketPercentagePercentage\
    \ = orangesInBasketPercentagePercentage.toDouble / totalFruits\n        val mangoInBasketPercentagePercentagePercentage\
    \ = mangoInBasketPercentagePercentage.toDouble / totalFruits\n        val totalFruitsInBasketPercentagePercentagePercentage\
    \ = totalFruitsInBasketPercentagePercentage.toDouble / totalFruits\n        val\
    \ applesInBasketPercentagePercentagePercentagePercentage = applesInBasketPercentagePercentagePercentage.toDouble\
    \ / totalFruits\n        val orangesInBasketPercentagePercentagePercentage = orangesInBasketPercentagePercentage.toDouble\
    \ / totalFruits\n        val mangoInBasketPercentagePercentagePercentage = mangoInBasketPercentagePercentage.toDouble\
    \ / totalFruits\n        val totalFruitsInBasketPercentagePercentagePercentage\
    \ = totalFruitsInBasketPercentagePercentage", "        val arr = s.split(\" \"\
    )\n        val apples = arr.filter(_.equals(\"apples\")).map(_.toInt)\n      \
    \  val oranges = arr.filter(_.equals(\"oranges\")).map(_.toInt)\n        val mangoes\
    \ = arr.filter(_.equals(\"mangoes\")).map(_.toInt)\n        val apples_count =\
    \ apples.sum\n        val oranges_count = oranges.sum\n        val mangoes_count\
    \ = mangoes.sum\n        val total_count = apples_count + oranges_count + mangoes_count\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangoes_count = mangoes.sum\n        val total_count = apples_count\
    \ + oranges_count + mangoes_count\n        val apples_count = apples.sum\n   \
    \     val oranges_count = oranges.sum\n        val mangoes_count = mangoes.sum\n\
    \        val total_count = apples_count + oranges_count + mangoes_count\n    \
    \    val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangoes_count = mangoes.sum\n        val total_count = apples_count\
    \ + oranges_count + mangoes_count\n        val apples_count = apples.sum\n   \
    \     val oranges_count = oranges.sum\n        val mangoes_count = mangoes.sum\n\
    \        val total_count = apples_count + oranges_count + mangoes_count\n    \
    \    val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangoes_count = mangoes.sum\n        val total_count = apples_count\
    \ + oranges_count + mangoes_count\n        val apples_count = apples.sum\n   \
    \     val oranges_count = oranges.sum\n        val mangoes_count = mangoes.sum\n\
    \        val total_count = apples_count + oranges_count + mangoes_count\n    \
    \    val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangoes_count = mangoes.sum\n        val total_count = apples_count\
    \ + oranges_count + mangoes_count\n        val apples_count = apples.sum\n   \
    \     val oranges_count = oranges.sum\n        val mangoes_count = mangoes.sum\n\
    \        val total_count = apples_count + oranges_count + mangoes_count\n    \
    \    val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangoes_count = mangoes.sum\n        val total_count = ", "     \
    \   val apples = s.split(\" \").map(_.toInt).sum\n        val oranges = s.split(\"\
    \ \").map(_.toInt).sum\n        val mangos = s.split(\" \").map(_.toInt).sum\n\
    \        val fruits  = apples + oranges + mangos\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apple", "        val apples = s.toInt\n        val\
    \ oranges = s.toInt\n        val fruits = apples + oranges\n        val mangoes\
    \ = n - fruits\n        mangoes", "        val apples = s.split(\"apples\")(1).trim\n\
    \        val oranges = s.split(\"oranges\")(1).trim\n        val mangos = s.split(\"\
    mango\")(1).trim\n        val apples_count = apples.toInt\n        val oranges_count\
    \ = oranges.toInt\n        val mangos_count = mangos.toInt\n        val apples_sum\
    \ = apples_count + oranges_count + mangos_count\n        val oranges_sum = apples_count\
    \ - apples_sum + oranges_count + mangos_count\n        val mangos_sum = apples_sum\
    \ - apples_count - oranges_count + mangos_count\n        val apples_count = apples_sum\
    \ / apples_sum\n        val oranges_count = oranges_sum / oranges_sum\n      \
    \  val mangos_count = mangos_sum / mangos_sum\n        val apples_count = apples_count\
    \ * apples_count\n        val oranges_count = oranges_count * oranges_count\n\
    \        val mangos_count = mangos_count * mangos_count\n        val apples_count\
    \ = apples_count + oranges_count + mangos_count\n        val apples_sum = apples_count\
    \ * apples_count\n        val oranges_sum = oranges_count * oranges_count\n  \
    \      val mangos_count = mangos_count * mangos_count\n        val mangos_sum\
    \ = apples_sum - apples_count - oranges_count + mangos_count\n        val apples_count\
    \ = apples_sum / apples_sum\n        val oranges_count = oranges_sum / oranges_sum\n\
    \        val mangos_count = mangos_sum / mangos_sum\n        val apples_count\
    \ = apples_count * apples_count\n        val oranges_count = oranges_count * oranges_count\n\
    \        val mangos_count = mangos_count * mangos_count\n        val apples_count\
    \ = apples_count + oranges_count + mangos_count\n        val apples_sum = apples_count\
    \ * apples_count\n        val oranges_sum = oranges_count * oranges_count\n  \
    \      val mangos_count = mangos_count * mangos_count\n        val mangos_sum\
    \ = apples_sum - apples_count - oranges_count + mangos_count\n        val apples_count\
    \ = apples_sum / apples_sum\n        val oranges_count = oranges_sum / oranges_sum\n\
    \        val mangos_count = mangos_sum / mangos_sum\n        val apples_count\
    \ = apples_count * apples_count\n        val oranges_count = oranges_count * oranges_count\n\
    \        val mangos_count = mangos_count * mangos_count\n        val apples_count\
    \ = apples_count + ", "        val apples = s.split(\" \")(0)\n        val oranges\
    \ = s.split(\" \")(1)\n        val fruits = s.split(\" \")(2)\n        val apples_count\
    \ = apples.toLong\n        val oranges_count = oranges.toLong\n        val fruits_count\
    \ = fruits.toLong\n        val apples_sum = apples_count + apples_count - oranges_count\
    \ - oranges_count\n        val oranges_sum = oranges_count + oranges_count - apples_count\
    \ - apples_count\n        val fruits_sum = fruits_count + fruits_count - apples_count\
    \ - apples_count - oranges_count - oranges_count\n        fruits_sum - fruits_sum\
    \ - apples_sum - apples_sum - oranges_sum", "        val apples = s.split(\"apples\"\
    )(0).trim\n        val oranges = s.split(\"oranges\")(0).trim\n        val mangos\
    \ = s.split(\"mango\")(0).trim\n        val apples_count = apples.toLong\n   \
    \     val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val oranges_count = oranges_count - apples_count\n        val mangos_count\
    \ = mangos_count - apples_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count\n \
    \       val mangos_count = mangos_count - apples_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val oranges_count = oranges_count\
    \ - apples_count\n        val mangos_count = mangos_count - apples_count\n   \
    \     val apples_count = apples_count - oranges_count - mangos_count\n       \
    \ val oranges_count = oranges_count - apples_count\n        val mangos_count =\
    \ mangos_count - apples_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count\n \
    \       val mangos_count = mangos_count - apples_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val oranges_count = oranges_count\
    \ - apples_count\n        val mangos_count = mangos_count - apples_count\n   \
    \     val apples_count = apples_count - oranges_count - mangos_count\n       \
    \ val oranges_count = oranges_count - apples_count\n        val mangos_count =\
    \ mangos_count - apples_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count\n \
    \       val mangos_count = mangos_count - apples_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val oranges_count = oranges_count\
    \ - apples_count\n        val mangos_count = mangos_count - apples_count\n   \
    \     val apples_count = apples_count - oranges_count - mangos_count\n       \
    \ val oranges_count = oranges_count - apples_count\n        val mangos_count =\
    \ mangos_count - apples_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count\n \
    \       val mangos_count = mangos_count - apple", "        val arr = s.split(\"\
    \ \")\n        val apples = arr.map(_.toInt)\n        val oranges = arr.filter(_.toInt\
    \ != 0).map(_.toInt)\n        val mangoes = arr.filter(_.toInt == 0).map(_.toInt)\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangoes_count = mangoes.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangoes_sum = mangoes.sum\n\
    \        val apples_percentage = apples_count / apples_sum * 100\n        val\
    \ oranges_percentage = oranges_count / oranges_sum * 100\n        val mangoes_percentage\
    \ = mangoes_count / mangoes_sum * 100\n        val apples_percentage_rounded =\
    \ Math.round(apples_percentage)\n        val oranges_percentage_rounded = Math.round(oranges_percentage)\n\
    \        val mangoes_percentage_rounded = Math.round(mangoes_percentage)\n   \
    \     val apples_percentage_rounded_rounded = Math.round(apples_percentage_rounded)\n\
    \        val oranges_percentage_rounded_rounded = Math.round(oranges_percentage_rounded)\n\
    \        val mangoes_percentage_rounded_rounded = Math.round(mangoes_percentage_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded = Math.round(apples_percentage_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded = Math.round(oranges_percentage_rounded_rounded)\n\
    \        val mangoes_percentage_rounded_rounded_rounded = Math.round(mangoes_percentage_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded = Math.round(apples_percentage_rounded_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded = Math.round(oranges_percentage_rounded_rounded_rounded)\n\
    \        val mangoes_percentage_rounded_rounded_rounded_rounded = Math.round(mangoes_percentage_rounded_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded_rounded = Math.round(apples_percentage_rounded_rounded_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded_rounded = Math.round(oranges_percentage_rounded_rounded_rounded_rounded)\n\
    \        val mangoes_percentage_rounded_rounded_rounded_rounded_rounded = Math.round(mangoes_percentage_rounded_rounded_rounded_rounded",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges\n        val apples_count\
    \ = apples.sum\n        val oranges_count = oranges.sum\n        val mango_count\
    \ = fruits.filter(f => f > 0).sum\n        val apples_percent = apples_count /\
    \ n\n        val oranges_percent = oranges_count / n\n        val mango_percent\
    \ = (fruits - apples_count - oranges_count) / n\n        apples_percent * oranges_percent\
    \ * mango_percent", "        val apples = s.toInt\n        val oranges = s.toInt\n\
    \        val fruits = apples + oranges\n        val mangos = n - fruits\n    \
    \    fruits + mangos", "        val apples = s.split(\" \").map(_.toInt)\n   \
    \     val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges ++ mangos\n       \
    \ val totalFruits = fruits.sum\n        val totalApples = apples.sum\n       \
    \ val totalOranges = oranges.sum\n        val totalMangos = mangos.sum\n     \
    \   val totalFruitsInBasket = totalFruits - totalApples - totalOranges - totalMangos\n\
    \        val totalFruitsInBasketInt = totalFruitsInBasket.toInt\n        val totalFruitsInBasketInt\
    \ = totalFruitsInBasket - totalFruitsInBasketInt\n        val totalFruitsInBasketInt\
    \ = totalFruitsInBasket - totalFruitsInBasketInt\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalMangos = mangos.sum\n\
    \        val totalMangos = mangos.sum\n        val totalM", "        val apples\
    \ = s.toInt\n        val oranges = s.toInt\n        val mangos = n - apples -\
    \ oranges\n        val apples_count = apples.toInt\n        val oranges_count\
    \ = oranges.toInt\n        val mangos_count = n - apples_count - oranges_count\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val ", "        val\
    \ apples = s.toInt\n        val oranges = s.toInt\n        val mangos = s.toInt\n\
    \        val basket = new mutable.HashMap[String, Int]()\n        basket.put(\"\
    apples\", apples)\n        basket.put(\"oranges\", oranges)\n        basket.put(\"\
    mangos\", mangos)\n        val totalFruits = apples + oranges + mangos\n     \
    \   val totalFruitsCount = basket.size\n        val mangoFruitsCount = totalFruits\
    \ - totalFruitsCount\n        val mangoFruits = mangoFruitsCount / totalFruits\n\
    \        val mangoFruitsCount = mangoFruitsCount % totalFruits\n        val mangoFruitsCount\
    \ = mangoFruitsCount.toInt\n        val mangoFruitsCount = mangoFruitsCount +\
    \ mangoFruits\n        val mangoFruitsCount = mangoFruitsCount.toLong\n      \
    \  val mangoFruitsCount = mangoFruitsCount + mangoFruits\n        val mangoFruitsCount\
    \ = mangoFruitsCount + mangoFruits\n        val mangoFruitsCount = mangoFruitsCount\
    \ + mangoFruits\n        val mangoFruitsCount = mangoFruitsCount + mangoFruits\n\
    \        val mangoFruitsCount = mangoFruitsCount + mangoFruits\n        val mangoFruitsCount\
    \ = mangoFruitsCount + mangoFruits\n        val mangoFruitsCount = mangoFruitsCount\
    \ + mangoFruits\n        val mangoFruitsCount = mangoFruitsCount + mangoFruits\n\
    \        val mangoFruitsCount = mangoFruitsCount + mangoFruits\n        val mangoFruitsCount\
    \ = mangoFruitsCount + mangoFruits\n        val mangoFruitsCount = mangoFruitsCount\
    \ + mangoFruits\n        val mangoFruitsCount = mangoFruitsCount + mangoFruits\n\
    \        val mangoFruitsCount = mangoFruitsCount + mangoFruits\n        val mangoFruitsCount\
    \ = mangoFruitsCount + mangoFruits\n        val mang", "        val apples = s.toInt\n\
    \        val oranges = s.toInt\n        val fruits = s.toInt\n        val mangos\
    \ = n - apples - oranges - fruits\n        mangos", "        val arr = s.split(\"\
    \ \")\n        val apples = arr.map(_.toInt)\n        val oranges = arr.filter(_.toString.contains(\"\
    oranges\")).map(_.toInt)\n        val mangos = arr.filter(_.toString.contains(\"\
    mango\")).map(_.toInt)\n        val apples_oranges = apples ++ oranges\n     \
    \   val apples_mangos = apples ++ mangos\n        val oranges_mangos = oranges\
    \ ++ mangos\n        val apples_oranges_mangos = apples_oranges ++ apples_mangos\n\
    \        val apples_oranges_mangos_sum = apples_oranges_mangos.sum\n        val\
    \ apples_oranges_mangos_sum_of_apples = apples_oranges_mangos_sum.filter(_.toString.contains(\"\
    apples\")).map(_.toInt).sum\n        val apples_oranges_mangos_sum_of_oranges\
    \ = apples_oranges_mangos_sum.filter(_.toString.contains(\"oranges\")).map(_.toInt).sum\n\
    \        val apples_oranges_mangos_sum_of_mangos = apples_oranges_mangos_sum.filter(_.toString.contains(\"\
    mango\")).map(_.toInt).sum\n        val apples_oranges_mangos_sum_of_apples_oranges\
    \ = apples_oranges_mangos_sum_of_apples + apples_oranges_mangos_sum_of_oranges\n\
    \        val apples_oranges_mangos_sum_of_apples_mangos = apples_oranges_mangos_sum_of_apples\
    \ + apples_oranges_mangos_sum_of_mangos\n        val apples_oranges_mangos_sum_of_oranges_mangos\
    \ = apples_oranges_mangos_sum_of_oranges + apples_oranges_mangos_sum_of_mangos\n\
    \        val apples_oranges_mangos_sum_of_apples_oranges_mangos = apples_oranges_mangos_sum_of_apples_oranges\
    \ + apples_oranges_mangos_sum_of_oranges_mangos\n        val apples_oranges_mangos_sum_of_apples_oranges_mangos_sum\
    \ = apples_oranges_mangos_sum_of_apples_oranges_mangos + apples_oranges_mangos_sum_of_apples_oranges_mangos\n\
    \        val apples_oranges_mangos_sum_of_apples_oranges_mangos_sum_of_apples\
    \ = apples_oranges_mangos_sum_of_apples_oranges_mangos_sum.filter(_.toString.contains(\"\
    apples\")).map(_.toInt).sum\n        val apples_oranges_mangos_sum_of_apples_oranges_mangos_sum_",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = s.toInt\n        val fruits = apples + oranges + mangos\n        val basket\
    \ = fruits.toLong\n        val apples_count = apples.toLong\n        val oranges_count\
    \ = oranges.toLong\n        val mangos_count = mangos.toLong\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val oranges_count = oranges_count\
    \ - apples_count\n        val mangos_count = mangos_count - apples_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - apples_count\
    \ - oranges_count\n        val apples_count = apples_count - mangos_count\n  \
    \      val oranges_count = oranges_count - apples_count\n        val mangos_count\
    \ = mangos_count - apples_count - oranges_count\n        val apples_count = apples_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count\n \
    \       val mangos_count = mangos_count - apples_count - oranges_count\n     \
    \   val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - apples_count\
    \ - oranges_count\n        val apples_count = apples_count - mangos_count\n  \
    \      val oranges_count = oranges_count - apples_count\n        val mangos_count\
    \ = mangos_count - apples_count - oranges_count\n        val apples_count = apples_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count\n \
    \       val mangos_count = mangos_count - apples_count - oranges_count\n     \
    \   val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - apples_count\
    \ - oranges_count\n        val apples_count = apples_count - mangos_count\n  \
    \      val oranges_count = oranges_count - apples_count\n        val mangos_count\
    \ = mangos_count - apples_count - oranges_count\n        val apples_count = apples_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count\n \
    \       val mangos_count = mangos_count - apples_count - oranges_count\n     \
    \   val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count", "        val apples = s.split(\"apples and\
    \ \").map(_.toInt)\n        val oranges = s.split(\"oranges and \").map(_.toInt)\n\
    \        val mangos = s.split(\"mango and \").map(_.toInt)\n        val fruits\
    \ = apples ++ oranges ++ mangos\n        val totalFruits = fruits.sum\n      \
    \  val totalApples = apples.sum\n        val totalOranges = oranges.sum\n    \
    \    val totalMangos = mangos.sum\n        val totalFruitsPerApple = totalFruits\
    \ / totalApples\n        val totalFruitsPerOrange = totalFruits / totalOranges\n\
    \        val totalFruitsPerMango = totalFruits / totalMangos\n        val totalFruitsPerAppleAndOrange\
    \ = totalFruitsPerApple * totalFruitsPerOrange\n        val totalFruitsPerAppleAndMango\
    \ = totalFruitsPerApple * totalFruitsPerMango\n        val totalFruitsPerOrangeAndMango\
    \ = totalFruitsPerOrange * totalFruitsPerMango\n        val totalFruitsPerAppleAndOrangeAndMango\
    \ = totalFruitsPerAppleAndOrange * totalFruitsPerMango\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotal\
    \ = totalFruitsPerAppleAndOrangeAndMango * totalFruits\n        totalFruitsPerAppleAndOrangeAndMangoAndTotal",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = s.toInt\n        val mangos = n - apples - oranges - fruits\n        mangos",
  "        val fruits = s.split(\" \")\n        val apples = fruits(0).toLong\n  \
    \      val oranges = fruits(1).toLong\n        val mangoes = n - apples - oranges\n\
    \        fruits.last.toLong - fruits(0).toLong - fruits(1).toLong", "        val\
    \ apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val mangos = fruits.filter(x\
    \ => x % 2 == 0)\n        fruits.length - mangos.length", "        val apples\
    \ = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos = fruits.filter(_\
    \ % 2 == 1).length\n        val mangos_count = fruits.filter(_ % 2 == 1).length\n\
    \        val total_count = apples_count + oranges_count + mangos\n        val\
    \ total_apples_count = apples.sum\n        val total_oranges_count = oranges.sum\n\
    \        val total_mangos_count = fruits.filter(_ % 2 == 1).length\n        val\
    \ total_mangos_count = fruits.filter(_ % 2 == 1).length\n        val total_apples_count\
    \ = apples.sum\n        val total_oranges_count = oranges.sum\n        val total_mangos_count\
    \ = fruits.filter(_ % 2 == 1).length\n        val total_mangos_count = fruits.filter(_\
    \ % 2 == 1).length\n        val total_apples_count = apples.sum\n        val total_oranges_count\
    \ = oranges.sum\n        val total_mangos_count = fruits.filter(_ % 2 == 1).length\n\
    \        val total_mangos_count = fruits.filter(_ % 2 == 1).length\n        val\
    \ total_apples_count = apples.sum\n        val total_oranges_count = oranges.sum\n\
    \        val total_mangos_count = fruits.filter(_ % 2 == 1).length\n        val\
    \ total_mangos_count = fruits.filter(_ % 2 == 1).length\n        val total_apples_count\
    \ = apples.sum\n        val total_oranges_count = oranges.sum\n        val total_mangos_count\
    \ = fruits.filter(_ % 2 == 1).length\n        val total_mangos_count = fruits.filter(_\
    \ % 2 == 1).length\n        val total_apples_count = apples.sum\n        val total_oranges_count\
    \ = oranges.sum\n        val total_mangos_count = fruits.filter(_ % 2 == 1).length\n\
    \        val total_mangos_count = fruits.filter(_ % 2 == 1).length\n        val\
    \ total_apples_count = apples.sum\n        val total_oranges_count = oranges.sum\n\
    \        val total_mangos_count = fruits.filter(_ % 2 == 1).length\n        val\
    \ total_mangos_count = fruits.filter(_ % 2 == 1).length\n        val total_apples_count\
    \ = apples.sum\n        val total_oranges_count = oranges.sum\n        val total_mangos_count\
    \ = fruits.filter(_ % 2 == 1).length\n        val total_mangos_count = fruits.filter(_\
    \ % 2 == 1).length\n        val total_apples_count = apples.sum\n        val total_orange",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val fruits = apples ++ oranges ++ mangos\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.sum\n        val oranges_count = oranges.sum\n \
    \       val mangos_count = mangos.sum\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.sum\n    \
    \    val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.sum\n        val oranges_count = oranges.sum\n \
    \       val mangos_count = mangos.sum\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.sum\n    \
    \    val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.sum\n        val oranges_count = oranges.sum\n \
    \       val mangos_count = mangos.sum\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.sum\n    \
    \    val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.sum\n        val oranges_count = oranges.sum\n \
    \       val mangos_count = mangos.sum\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.sum\n    \
    \    val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.sum\n        val oranges_count = oranges.sum\n \
    \       val mangos_count = mangos.sum\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.sum\n    \
    \    val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        ", "        val apples = s.split(\" \")(0).toLong\n        val oranges\
    \ = s.split(\" \")(1).toLong\n        val mangos = s.split(\" \")(2).toLong\n\
    \        val fruits = apples + oranges + mangos\n        val totalFruits = fruits.toLong\n\
    \        val appleFruits = apples - mangos\n        val orangeFruits = oranges\
    \ - mangos\n        val mangoFruits = mangos - mangos\n        val totalFruitsWithApples\
    \ = appleFruits + orangeFruits + mangoFruits\n        val totalFruitsWithApplesAndOranges\
    \ = appleFruits + orangeFruits\n        val totalFruitsWithApplesAndOrangesAndMangos\
    \ = appleFruits + orangeFruits + mangoFruits\n        val totalFruitsWithApplesAndOrangesAndMangosAndTotal\
    \ = appleFruits + orangeFruits + mangoFruits + totalFruits\n        val totalFruitsWithApplesAndOrangesAndMangosAndTotalAndApples\
    \ = appleFruits + orangeFruits + mangoFruits + totalFruitsWithApples + appleFruits\n\
    \        val totalFruitsWithApplesAndOrangesAndMangosAndTotalAndApplesAndOranges\
    \ = appleFruits + orangeFruits + mangoFruits + totalFruitsWithApples + appleFruits\
    \ + orangeFruits\n        val totalFruitsWithApplesAndOrangesAndMangosAndTotalAndApplesAndOrangesAndMangos\
    \ = appleFruits + orangeFruits + mangoFruits + totalFruitsWithApples + appleFruits\
    \ + orangeFruits + mangoFruits\n        val totalFruitsWithApplesAndOrangesAndMangosAndTotalAndApplesAndOrangesAndMangosAndTotal\
    \ = appleFruits + orangeFruits + mangoFruits + totalFruitsWithApples + appleFruits\
    \ + orangeFruits + mangoFruits + totalFruitsWithApplesAndOranges + appleFruits\
    \ + orangeFruits\n        val totalFruitsWithApplesAndOrangesAndMangosAndTotalAndApplesAndOrangesAndMangosAndTotalAndApples\
    \ = appleFruits + orangeFruits + mangoFru", "        val apples = s.split(\"apples\
    \ and \")\n        val oranges = s.split(\"oranges and \")\n        val mangos\
    \ = s.split(\"mango and \")\n        val apples_count = apples(0).split(\" \"\
    ).length\n        val oranges_count = oranges(0).split(\" \").length\n       \
    \ val mangos_count = mangos(0).split(\" \").length\n        val apples_sum = apples(0).split(\"\
    \ \").map(_.toInt).sum\n        val oranges_sum = oranges(0).split(\" \").map(_.toInt).sum\n\
    \        val mangos_sum = mangos(0).split(\" \").map(_.toInt).sum\n        val\
    \ apples_count = apples(0).split(\" \").length\n        val oranges_count = oranges(0).split(\"\
    \ \").length\n        val mangos_count = mangos(0).split(\" \").length\n     \
    \   val apples_sum = apples(0).split(\" \").map(_.toInt).sum\n        val oranges_sum\
    \ = oranges(0).split(\" \").map(_.toInt).sum\n        val mangos_sum = mangos(0).split(\"\
    \ \").map(_.toInt).sum\n        val apples_count = apples(0).split(\" \").length\n\
    \        val oranges_count = oranges(0).split(\" \").length\n        val mangos_count\
    \ = mangos(0).split(\" \").length\n        val apples_sum = apples(0).split(\"\
    \ \").map(_.toInt).sum\n        val oranges_sum = oranges(0).split(\" \").map(_.toInt).sum\n\
    \        val mangos_sum = mangos(0).split(\" \").map(_.toInt).sum\n        val\
    \ apples_count = apples(0).split(\" \").length\n        val oranges_count = oranges(0).split(\"\
    \ \").length\n        val mangos_count = mangos(0).split(\" \").length\n     \
    \   val apples_sum = apples(0).split(\" \").map(_.toInt).sum\n        val oranges_sum\
    \ = oranges(0).split(\" \").map(_.toInt).sum\n        val mangos_sum = mangos(0).split(\"\
    \ \").map(_.toInt).sum\n        val apples_count = apples(0).split(\" \").length\n\
    \        val oranges_count = oranges(0).split(\" \").length\n        val mangos_count\
    \ = mangos(0).split(\" \").length\n        val apples_sum = apples(0).split(\"\
    \ \").map(_.toInt).sum\n        val oranges_sum = oranges(0).split(\" \").map(_.toInt).sum\n\
    \        val mangos_sum = mangos(0).split(\" \").map(_.toInt).sum\n        val ",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges\n        val apples_count\
    \ = apples.sum\n        val oranges_count = oranges.sum\n        val mango_count\
    \ = fruits.filter(_ % 2 == 0).sum\n        val mango_count = fruits.filter(_ %\
    \ 2 == 1).sum\n        fruits.filter(_ % 2 == 0).sum - fruits.filter(_ % 2 ==\
    \ 1).sum", "        val apples = s.toInt\n        val oranges = s.toInt\n    \
    \    val fruits = apples + oranges\n        val mangos = n - fruits\n        fruits",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangos = n - fruits\n        fruits - mangos",
  "        val apples = n.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = apples - oranges\n        val fruits = apples + oranges + mangos\n       \
    \ fruits", "        val fruits = s.split(\" \")\n        val apples = fruits(0).toLong\n\
    \        val oranges = fruits(1).toLong\n        val mangoes = n - apples - oranges\n\
    \        fruits.toList.map(x => x.toLong).sum - mangoes", "        val fruits\
    \ = s.split(\" \")\n        val apples = fruits(0).toLong\n        val oranges\
    \ = fruits(1).toLong\n        val mangoes = n - apples - oranges\n        apples\
    \ + oranges + mangoes", "        val fruits = s.split(\" \")\n        val apples\
    \ = fruits(0).toLong\n        val oranges = fruits(1).toLong\n        val mangoes\
    \ = n - apples - oranges\n        fruits.toList.map(x => x.toLong).sum - mangoes",
  "        val fruits = s.split(\" \")\n        val apples = fruits(0).toLong\n  \
    \      val oranges = fruits(1).toLong\n        val mangoes = n - apples - oranges\n\
    \        fruits.last.toLong - apples - oranges", "        val apples = s.split(\"\
    \ \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n      \
    \  val mangos = s.split(\" \").map(_.toInt)\n        val fruits = apples ++ oranges\
    \ ++ mangos\n        val apples_count = apples.sum\n        val oranges_count\
    \ = oranges.sum\n        val mangos_count = mangos.sum\n        val apples_total\
    \ = apples_count + oranges_count + mangos_count\n        val oranges_total = oranges_count\
    \ + apples_count + mangos_count\n        val mangos_total = apples_count + oranges_count\
    \ + mangos_count\n        val apples_percent = apples_count / apples_total\n \
    \       val oranges_percent = oranges_count / oranges_total\n        val mangos_percent\
    \ = mangos_count / mangos_total\n        val apples_percent = apples_count / apples_total\n\
    \        val oranges_percent = oranges_count / oranges_total\n        val mangos_percent\
    \ = mangos_count / mangos_total\n        val apples_percent = apples_count / apples_total\n\
    \        val oranges_percent = oranges_count / oranges_total\n        val mangos_percent\
    \ = mangos_count / mangos_total\n        val apples_percent = apples_count / apples_total\n\
    \        val oranges_percent = oranges_count / oranges_total\n        val mangos_percent\
    \ = mangos_count / mangos_total\n        val apples_percent = apples_count / apples_total\n\
    \        val oranges_percent = oranges_count / oranges_total\n        val mangos_percent\
    \ = mangos_count / mangos_total\n        val apples_percent = apples_count / apples_total\n\
    \        val oranges_percent = oranges_count / oranges_total\n        val mangos_percent\
    \ = mangos_count / mangos_total\n        val apples_percent = apples_count / apples_total\n\
    \        val oranges_percent = oranges_count / oranges_total\n        val mangos_percent\
    \ = mangos_count / mangos_total\n        val apples_percent = apples_count / apples_total\n\
    \        val oranges_percent = oranges_count / oranges_total\n        val mangos_percent\
    \ = mangos_count / mangos_total\n        val apples_percent = apples_count / apples_total\n\
    \        val oranges_percent = oranges_count / oranges_total\n        val mangos_percent\
    \ = mangos_count / mangos_total\n        val ", "        val apples = s.toInt\n\
    \        val oranges = s.toInt\n        val fruits = apples + oranges\n      \
    \  val mangos = n - fruits\n        mangos", "        val apples = s.split(\"\
    apples\")(0).toInt\n        val oranges = s.split(\"oranges\")(0).toInt\n    \
    \    val mangos = s.split(\"mangos\")(0).toInt\n        val fruits = apples +\
    \ oranges + mangos\n        fruits.toLong - n - mangos", "        val arr = s.split(\"\
    \ \")\n        val apples = arr.filter(_.equals(\"apples\")).map(_.toInt)\n  \
    \      val oranges = arr.filter(_.equals(\"oranges\")).map(_.toInt)\n        val\
    \ mangos = arr.filter(_.equals(\"mango\")).map(_.toInt)\n        val total = apples.sum\
    \ + oranges.sum + mangos.sum\n        val apples_count = apples.sum\n        val\
    \ oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n       \
    \ val apples_percent = apples_count / total * 100\n        val oranges_percent\
    \ = oranges_count / total * 100\n        val mangos_percent = mangos_count / total\
    \ * 100\n        val apples_percent = apples_percent.toInt\n        val oranges_percent\
    \ = oranges_percent.toInt\n        val mangos_percent = mangos_percent.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_percent = apples_percent.toInt\n\
    \        val oranges_percent = oranges_percent.toInt\n        val mangos_percent\
    \ = mangos_percent.toInt\n        val apples_count = apples_count.toInt\n    \
    \    val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_percent = apples_percent.toInt\n        val oranges_percent\
    \ = oranges_percent.toInt\n        val mangos_percent = mangos_percent.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_percent = apples_percent.toInt\n\
    \        val oranges_percent = oranges_percent.toInt\n        val mangos_percent\
    \ = mangos_percent.toInt\n        val apples_count = apples_count.toInt\n    \
    \    val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_percent = apples_percent.toInt\n        val oranges_percent\
    \ = oranges_percent.toInt\n        val mangos_percent = mangos_percent.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_percent = apples_percent.toInt\n\
    \        val oranges_percent = orange", "        val arr = s.split(\" \")\n  \
    \      val apples = arr.toList.map(_.toInt)\n        val oranges = arr.toList.filter(_.toInt\
    \ % 2 == 0).map(_.toInt)\n        val mangoes = arr.toList.filter(_.toInt % 2\
    \ == 1).map(_.toInt)\n        val apples_count = apples.sum\n        val oranges_count\
    \ = oranges.sum\n        val mangoes_count = mangoes.sum\n        val total_count\
    \ = apples_count + oranges_count + mangoes_count\n        val apples_percentage\
    \ = apples.sum / total_count\n        val oranges_percentage = oranges.sum / total_count\n\
    \        val mangoes_percentage = mangoes.sum / total_count\n        val total_percentage\
    \ = apples_percentage + oranges_percentage + mangoes_percentage\n        val apples_percentage_rounded\
    \ = apples_percentage * 100\n        val oranges_percentage_rounded = oranges_percentage\
    \ * 100\n        val mangoes_percentage_rounded = mangoes_percentage * 100\n \
    \       val total_percentage_rounded = total_percentage * 100\n        val apples_percentage_rounded_rounded\
    \ = apples_percentage_rounded + oranges_percentage_rounded + mangoes_percentage_rounded\n\
    \        val apples_percentage_rounded_rounded_rounded = apples_percentage_rounded_rounded\
    \ / 100\n        val oranges_percentage_rounded_rounded = oranges_percentage_rounded\
    \ / 100\n        val mangoes_percentage_rounded_rounded = mangoes_percentage_rounded\
    \ / 100\n        val total_percentage_rounded_rounded = total_percentage_rounded\
    \ / 100\n        val apples_percentage_rounded_rounded_rounded_rounded = apples_percentage_rounded_rounded_rounded\
    \ * 100\n        val oranges_percentage_rounded_rounded_rounded = oranges_percentage_rounded_rounded\
    \ * 100\n        val mangoes_percentage_rounded_rounded_rounded = mangoes_percentage_rounded_rounded\
    \ * 100\n        val total_percentage_rounded_rounded_rounded = total_percentage_rounded_rounded\
    \ * 100\n        val apples_percentage_rounded_rounded_rounded_rounded_rounded\
    \ = apples_percentage_rounded_rounded_rounded_rounded * 100\n        val oranges_percentage_rounded_rounded_rounded_rounded\
    \ = oranges_percentage_rounded_rounded_rounded * 100\n        val mangoes_percentage_rounded_rounded_rounded_rounded\
    \ = mangoes_percentage_rounded_rounded_rounded * 100\n        val total_percentage_rounded_rounded_",
  "        val arr = s.split(\" \")\n        var apples = 0\n        var oranges =\
    \ 0\n        var mangoes = 0\n        var total = 0\n        for (i <- 0 until\
    \ arr.length) {\n            val item = arr(i)\n            if (item == \"apples\"\
    ) {\n                apples += 1\n                total += apples * n\n      \
    \      } else if (item == \"oranges\") {\n                oranges += 1\n     \
    \           total += oranges * n\n            } else if (item == \"mango\") {\n\
    \                mangoes += 1\n                total += mangoes * n\n        \
    \    }\n        }\n        return total - mangoes", "        val apples = s.split(\"\
    apples\")(0)\n        val oranges = s.split(\"oranges\")(0)\n        val mangos\
    \ = s.split(\"mango\")(0)\n        val apples_count = apples.toInt\n        val\
    \ oranges_count = oranges.toInt\n        val mangos_count = mangos.toInt\n   \
    \     val basket_count = n - apples_count - oranges_count - mangos_count\n   \
    \     val apples_count = apples.toInt\n        val oranges_count = oranges.toInt\n\
    \        val mangos_count = mangos.toInt\n        val basket_count = n - apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples.toInt\n  \
    \      val oranges_count = oranges.toInt\n        val mangos_count = mangos.toInt\n\
    \        val basket_count = n - apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples.toInt\n        val oranges_count = oranges.toInt\n\
    \        val mangos_count = mangos.toInt\n        val basket_count = n - apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples.toInt\n  \
    \      val oranges_count = oranges.toInt\n        val mangos_count = mangos.toInt\n\
    \        val basket_count = n - apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples.toInt\n        val oranges_count = oranges.toInt\n\
    \        val mangos_count = mangos.toInt\n        val basket_count = n - apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples.toInt\n  \
    \      val oranges_count = oranges.toInt\n        val mangos_count = mangos.toInt\n\
    \        val basket_count = n - apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples.toInt\n        val oranges_count = oranges.toInt\n\
    \        val mangos_count = mangos.toInt\n        val basket_count = n - apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples.toInt\n  \
    \      val oranges_count = oranges.toInt\n        val mangos_count = mangos.toInt\n\
    \        val basket_count = n - apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples.toInt\n        val oranges_count = oranges.toInt\n\
    \        val mangos_count = mangos.toInt\n        val basket_count = n - apples_count\
    \ - orange", "        val apples = s.toInt\n        val oranges = s.toInt\n  \
    \      val mangos = n - apples - oranges\n        val fruits = apples + oranges\
    \ + mangos\n        fruits", "        val apples = s.split(\"apples and \")\n\
    \        val oranges = s.split(\"oranges and \")\n        val mangos = s.split(\"\
    mango and \")\n        val apples_count = apples.map(_.toInt).sum\n        val\
    \ oranges_count = oranges.map(_.toInt).sum\n        val mangos_count = mangos.map(_.toInt).sum\n\
    \        val apples_total = apples_count + apples_count - 1\n        val oranges_total\
    \ = oranges_count + oranges_count - 1\n        val mangos_count = mangos_count\
    \ + mangos_count - 1\n        val apples_total = apples_total + apples_total -\
    \ 1\n        val oranges_total = oranges_total + oranges_total - 1\n        val\
    \ mangos_count = mangos_count + mangos_count - 1\n        val apples_total = apples_total\
    \ + apples_total - 1\n        val oranges_total = oranges_total + oranges_total\
    \ - 1\n        val mangos_count = mangos_count + mangos_count - 1\n        val\
    \ apples_total = apples_total + apples_total - 1\n        val oranges_total =\
    \ oranges_total + oranges_total - 1\n        val mangos_count = mangos_count +\
    \ mangos_count - 1\n        val apples_total = apples_total + apples_total - 1\n\
    \        val oranges_total = oranges_total + oranges_total - 1\n        val mangos_count\
    \ = mangos_count + mangos_count - 1\n        val apples_total = apples_total +\
    \ apples_total - 1\n        val oranges_total = oranges_total + oranges_total\
    \ - 1\n        val mangos_count = mangos_count + mangos_count - 1\n        val\
    \ apples_total = apples_total + apples_total - 1\n        val oranges_total =\
    \ oranges_total + oranges_total - 1\n        val mangos_count = mangos_count +\
    \ mangos_count - 1\n        val apples_total = apples_total + apples_total - 1\n\
    \        val oranges_total = oranges_total + oranges_total - 1\n        val mangos_count\
    \ = mangos_count + mangos_count - 1\n        val apples_total = apples_total +\
    \ apples_total - 1\n        val oranges_total = oranges_total + oranges_total\
    \ - 1\n        val mangos_count = mangos_count + mangos_count - 1\n        val\
    \ apples_total = apples_total + apples_total - 1\n        val oranges_total =\
    \ oranges_total + oranges_total - 1\n        val mangos_count = mangos_count +\
    \ mangos_count - 1\n        val apples_total = apples_total + apples_total - 1\n\
    \        val oranges_total = oranges_", "        val apples = s.toInt\n      \
    \  val oranges = s.toInt\n        val fruits = s.toInt\n        val mango = n\
    \ - apples - oranges - fruits\n        mango", "        val apples = s.split(\"\
    apples\")(0).toLong\n        val oranges = s.split(\"oranges\")(0).toLong\n  \
    \      val mangos = s.split(\"mango\")(0).toLong\n        val fruit = apples +\
    \ oranges + mangos\n        fruit - n", "        val apples = s.split(\"apples\"\
    )(0)\n        val oranges = s.split(\"oranges\")(0)\n        val mangos = s.split(\"\
    mangos\")(0)\n        val fruits = s.split(\"fruits\")(0)\n        val apples_count\
    \ = apples.toInt\n        val oranges_count = oranges.toInt\n        val mangos_count\
    \ = mangos.toInt\n        val fruits_count = fruits.toInt\n        val total_count\
    \ = apples_count + oranges_count + mangos_count + fruits_count\n        val apples_count\
    \ = apples.toInt\n        val oranges_count = oranges.toInt\n        val mangos_count\
    \ = mangos.toInt\n        val fruits_count = fruits.toInt\n        val total_count\
    \ = apples_count + oranges_count + mangos_count + fruits_count\n        val apples_count\
    \ = apples.toInt\n        val oranges_count = oranges.toInt\n        val mangos_count\
    \ = mangos.toInt\n        val fruits_count = fruits.toInt\n        val total_count\
    \ = apples_count + oranges_count + mangos_count + fruits_count\n        val apples_count\
    \ = apples.toInt\n        val oranges_count = oranges.toInt\n        val mangos_count\
    \ = mangos.toInt\n        val fruits_count = fruits.toInt\n        val total_count\
    \ = apples_count + oranges_count + mangos_count + fruits_count\n        val apples_count\
    \ = apples.toInt\n        val oranges_count = oranges.toInt\n        val mangos_count\
    \ = mangos.toInt\n        val fruits_count = fruits.toInt\n        val total_count\
    \ = apples_count + oranges_count + mangos_count + fruits_count\n        val apples_count\
    \ = apples.toInt\n        val oranges_count = oranges.toInt\n        val mangos_count\
    \ = mangos.toInt\n        val fruits_count = fruits.toInt\n        val total_count\
    \ = apples_count + oranges_count + mangos_count + fruits_count\n        val apples_count\
    \ = apples.toInt\n        val oranges_count = oranges.toInt\n        val mangos_count\
    \ = mangos.toInt\n        val fruits_count = fruits.toInt\n        val total_count\
    \ = apples_count + oranges_count + mangos_count + fruits_count\n        val apples_count\
    \ = apples.toInt\n        val oranges_count = oranges.toInt\n        val mangos_count\
    \ = mangos.toInt\n        val fruits_count = fruits.toInt\n        val total_count\
    \ = apples_count + oranges_count + mangos_count + fruits_count\n        ", " \
    \       val apples = s.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = s.toInt\n        val basket = new mutable.HashMap[String, Int]()\n       \
    \ basket.put(\"apples\", apples)\n        basket.put(\"oranges\", oranges)\n \
    \       basket.put(\"mangos\", mangos)\n        val totalFruits = apples + oranges\
    \ + mangos\n        val totalFruitsCount = basket.values.sum\n        val mangoFruitsCount\
    \ = totalFruits - totalFruitsCount\n        val mangoFruitsCount = mangoFruitsCount.toLong\n\
    \        mangoFruitsCount", "        val apples = s.toInt\n        val oranges\
    \ = s.toInt\n        val fruits = apples + oranges\n        val mangos = n - fruits\n\
    \        mangos", "        val apples = s.split(\"apples and \")\n        val\
    \ oranges = s.split(\"oranges and \")\n        val mangos = s.split(\"mango and\
    \ \")\n        val apples_count = apples.map(_.toInt).sum\n        val oranges_count\
    \ = oranges.map(_.toInt).sum\n        val mangos_count = mangos.map(_.toInt).sum\n\
    \        val apples_total = apples_count + apples_count - 1\n        val oranges_total\
    \ = oranges_count + oranges_count - 1\n        val mangos_count = mangos_count\
    \ + mangos_count - 1\n        val apples_count = apples_count + apples_count -\
    \ 1\n        val oranges_count = oranges_count + oranges_count - 1\n        val\
    \ mangos_count = mangos_count + mangos_count - 1\n        val apples_total = apples_count\
    \ + apples_count - 1\n        val oranges_total = oranges_count + oranges_count\
    \ - 1\n        val mangos_count = mangos_count + mangos_count - 1\n        val\
    \ apples_count = apples_count + apples_count - 1\n        val oranges_count =\
    \ oranges_count + oranges_count - 1\n        val mangos_count = mangos_count +\
    \ mangos_count - 1\n        val apples_total = apples_count + apples_count - 1\n\
    \        val oranges_total = oranges_count + oranges_count - 1\n        val mangos_count\
    \ = mangos_count + mangos_count - 1\n        val apples_count = apples_count +\
    \ apples_count - 1\n        val oranges_count = oranges_count + oranges_count\
    \ - 1\n        val mangos_count = mangos_count + mangos_count - 1\n        val\
    \ apples_total = apples_count + apples_count - 1\n        val oranges_total =\
    \ oranges_count + oranges_count - 1\n        val mangos_count = mangos_count +\
    \ mangos_count - 1\n        val apples_count = apples_count + apples_count - 1\n\
    \        val oranges_count = oranges_count + oranges_count - 1\n        val mangos_count\
    \ = mangos_count + mangos_count - 1\n        val apples_total = apples_count +\
    \ apples_count - 1\n        val oranges_total = oranges_count + oranges_count\
    \ - 1\n        val mangos_count = mangos_count + mangos_count - 1\n        val\
    \ apples_count = apples_count + apples_count - 1\n        val oranges_count =\
    \ oranges_count + oranges_count - 1\n        val mangos_count = mangos_count +\
    \ mangos_count - 1\n        val apples_total = apples_count + apples_count - 1\n\
    \        val oranges_total = oranges_", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges ++ mangos\n       \
    \ val total = fruits.sum\n        val apples_count = apples.sum\n        val oranges_count\
    \ = oranges.sum\n        val mangos_count = mangos.sum\n        val apples_percentage\
    \ = apples_count / total * 100\n        val oranges_percentage = oranges_count\
    \ / total * 100\n        val mangos_percentage = mangos_count / total * 100\n\
    \        val apples_percentage_rounded = math.round(apples_percentage)\n     \
    \   val oranges_percentage_rounded = math.round(oranges_percentage)\n        val\
    \ mangos_percentage_rounded = math.round(mangos_percentage)\n        val apples_percentage_rounded_rounded\
    \ = math.round(apples_percentage_rounded)\n        val oranges_percentage_rounded_rounded\
    \ = math.round(oranges_percentage_rounded)\n        val mangos_percentage_rounded_rounded\
    \ = math.round(mangos_percentage_rounded)\n        val apples_percentage_rounded_rounded_rounded\
    \ = math.round(apples_percentage_rounded_rounded)\n        val oranges_percentage_rounded_rounded_rounded\
    \ = math.round(oranges_percentage_rounded_rounded)\n        val mangos_percentage_rounded_rounded_rounded\
    \ = math.round(mangos_percentage_rounded_rounded)\n        val apples_percentage_rounded_rounded_rounded_rounded\
    \ = math.round(apples_percentage_rounded_rounded_rounded)\n        val oranges_percentage_rounded_rounded_rounded_rounded\
    \ = math.round(oranges_percentage_rounded_rounded_rounded)\n        val mangos_percentage_rounded_rounded_rounded_rounded\
    \ = math.round(mangos_percentage_rounded_rounded_rounded)\n        val apples_percentage_rounded_rounded_rounded_rounded_rounded\
    \ = math.round(apples_percentage_rounded_rounded_rounded_rounded)\n        val\
    \ oranges_percentage_rounded_rounded_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded_rounded)\n\
    \        val mangos_percentage_rounded_rounded_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = math.round(apples_percentage_rounded_roun", "        val apples = s.toInt\n\
    \        val oranges = s.toInt\n        val fruits = apples + oranges\n      \
    \  val mangos = n - fruits\n        fruits + mangos", "        val apples = s.toInt\n\
    \        val oranges = s.toInt\n        val fruits = s.toInt\n        val mangos\
    \ = n - apples - oranges - fruits\n        mangos", "        val apples = s.toInt\n\
    \        val oranges = s.toInt\n        val mangos = n - apples - oranges\n  \
    \      val apples_count = apples.toInt\n        val oranges_count = oranges.toInt\n\
    \        val mangos_count = mangos.toInt\n        val apples_count = apples_count\
    \ - oranges_count\n        val oranges_count = oranges_count - apples_count\n\
    \        val mangos_count = mangos_count - apples_count - oranges_count\n    \
    \    val apples_count = apples_count - oranges_count - mangos_count\n        val\
    \ oranges_count = oranges_count - apples_count - mangos_count\n        val mangos_count\
    \ = mangos_count - apples_count - oranges_count - apples_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count - oranges_count\n        val oranges_count\
    \ = oranges_count - apples_count - mangos_count - apples_count - mangos_count\n\
    \        val mangos_count = mangos_count - apples_count - oranges_count - apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count - oranges_count - mangos_count - apples_count\n        val oranges_count\
    \ = oranges_count - apples_count - mangos_count - oranges_count - mangos_count\
    \ - apples_count - mangos_count\n        val mangos_count = mangos_count - apples_count\
    \ - oranges_count - apples_count - oranges_count - mangos_count - apples_count\
    \ - oranges_count\n        val apples_count = apples_count - oranges_count - mangos_count\
    \ - oranges_count - mangos_count - apples_count - mangos_count - oranges_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count - mangos_count\
    \ - oranges_count - mangos_count - apples_count - mangos_count - oranges_count\
    \ - mangos_count - apples_count\n        val mangos_count = mangos_count - apples_count\
    \ - oranges_count - apples_count - oranges_count - mangos_count - apples_count\
    \ - oranges_count - mangos_count - apples_count - oranges_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count - oranges_count - mangos_count\
    \ - apples_count - mangos_count - oranges_count - mangos_count - apples_count\
    \ - oranges_count - mangos_count\n        val oranges_count = ", "        val\
    \ apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n      \
    \  val mangos = s.split(\" \")(2)\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_sum = apples_count + apples_count - 1\n        val oranges_sum\
    \ = oranges_count + oranges_count - 1\n        val mangos_sum = mangos_count +\
    \ mangos_count - 1\n        val apples_percentage = apples_sum / apples_count\
    \ * 100\n        val oranges_percentage = oranges_sum / oranges_count * 100\n\
    \        val mangos_percentage = mangos_sum / mangos_count * 100\n        val\
    \ apples_percentage_rounded = math.round(apples_percentage)\n        val oranges_percentage_rounded\
    \ = math.round(oranges_percentage)\n        val mangos_percentage_rounded = math.round(mangos_percentage)\n\
    \        val apples_percentage_rounded_rounded = math.round(apples_percentage_rounded)\n\
    \        val oranges_percentage_rounded_rounded = math.round(oranges_percentage_rounded)\n\
    \        val mangos_percentage_rounded_rounded = math.round(mangos_percentage_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded)\n\
    \        val mangos_percentage_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded_rounded)\n\
    \        val mangos_percentage_rounded_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded_rounded)\n\
    \        val mangos_percentage_rounded_rounded_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_roun", "        val apples\
    \ = s.split(\"apples\")(0).toLong\n        val oranges = s.split(\"oranges\")(0).toLong\n\
    \        val mangos = s.split(\"mangos\")(0).toLong\n        val basket = new\
    \ mutable.HashMap[String, Long]()\n        basket.put(\"apples\", apples)\n  \
    \      basket.put(\"oranges\", oranges)\n        basket.put(\"mangos\", mangos)\n\
    \        val total = apples + oranges + mangos\n        val fruits = basket.filter(_._2\
    \ > 0).map(_._1).sum\n        fruits - mangos - total - apples - oranges", " \
    \       val apples = s.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = n - apples - oranges\n        val apples_count = apples.toInt\n        val\
    \ oranges_count = oranges.toInt\n        val mangos_count = mangos.toInt\n   \
    \     val apples_count = apples_count - oranges_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - apples_count\
    \ - oranges_count\n        apples_count + oranges_count + mangos_count", "   \
    \     val apples = s.split(\"apples and \").map(_.toInt)\n        val oranges\
    \ = s.split(\"oranges and \").map(_.toInt)\n        val mangos = s.split(\"mango\
    \ and \").map(_.toInt)\n        val apples_count = apples.sum\n        val oranges_count\
    \ = oranges.sum\n        val mangos_count = mangos.sum\n        val total_count\
    \ = apples_count + oranges_count + mangos_count\n        val apples_percent =\
    \ apples.map(x => x / total_count).sum\n        val oranges_percent = oranges.map(x\
    \ => x / total_count).sum\n        val mangos_percent = mangos.map(x => x / total_count).sum\n\
    \        val total_percent = apples_percent + oranges_percent + mangos_percent\n\
    \        val total_percent = total_percent * 100\n        val apples_percent =\
    \ apples_percent * 100\n        val oranges_percent = oranges_percent * 100\n\
    \        val mangos_percent = mangos_percent * 100\n        val total_percent\
    \ = total_percent * 100\n        val apples_percent = apples_percent * 100\n \
    \       val oranges_percent = oranges_percent * 100\n        val mangos_percent\
    \ = mangos_percent * 100\n        val total_percent = total_percent * 100\n  \
    \      val apples_percent = apples_percent * 100\n        val oranges_percent\
    \ = oranges_percent * 100\n        val mangos_percent = mangos_percent * 100\n\
    \        val total_percent = total_percent * 100\n        val apples_percent =\
    \ apples_percent * 100\n        val oranges_percent = oranges_percent * 100\n\
    \        val mangos_percent = mangos_percent * 100\n        val total_percent\
    \ = total_percent * 100\n        val apples_percent = apples_percent * 100\n \
    \       val oranges_percent = oranges_percent * 100\n        val mangos_percent\
    \ = mangos_percent * 100\n        val total_percent = total_percent * 100\n  \
    \      val apples_percent = apples_percent * 100\n        val oranges_percent\
    \ = oranges_percent * 100\n        val mangos_percent = mangos_percent * 100\n\
    \        val total_percent = total_percent * 100\n        val apples_percent =\
    \ apples_percent * 100\n        val oranges_percent = oranges_percent * 100\n\
    \        val mangos_percent = mangos_percent * 100\n        val total_percent\
    \ = total_percent * 100\n        val apples_percent = apples_percent * 100\n \
    \       val oranges_percent = oranges_percent * 100\n        ", "        val apples\
    \ = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos = fruits.filter(_\
    \ % 2 == 0)\n        val mangos_count = mangos.sum\n        val total_count =\
    \ apples_count + oranges_count + mangos_count\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val mangos_count = mangos.sum\n        val total_count = apples_count + oranges_count\
    \ + mangos_count\n        val mangos_count = mangos.sum\n        val total_count\
    \ = apples_count + oranges_count + mangos_count\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val mangos_count = mangos.sum\n        val total_count = apples_count + oranges_count\
    \ + mangos_count\n        val mangos_count = mangos.sum\n        val total_count\
    \ = apples_count + oranges_count + mangos_count\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val mangos_count = mangos.sum\n        val total_count = apples_count + oranges_count\
    \ + mangos_count\n        val mangos_count = mangos.sum\n        val total_count\
    \ = apples_count + oranges_count + mangos_count\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val mangos_count = mangos.sum\n        val total_count = apples_count + oranges_count\
    \ + mangos_count\n        val mangos_count = mangos.sum\n        val total_count\
    \ = apples_count + oranges_count + mangos_count\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val mangos_count = mangos.sum\n        val total_count = apples_count + oranges_count\
    \ + mangos_count\n        val mangos_count = mangos.sum\n        val total_count\
    \ = apples_count + oranges_count + mangos_count\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val mangos_count = mangos.sum\n        val total_count = apples_count + oranges_",
  "        val apples = s.split(\"apples and \")\n        val oranges = s.split(\"\
    oranges and \")\n        val mangos = s.split(\"mango and \")\n        val fruits\
    \ = s.split(\"fruits in the basket\")\n        val apples_count = apples(0).trim().toInt\n\
    \        val oranges_count = oranges(0).trim().toInt\n        val mangos_count\
    \ = mangos(0).trim().toInt\n        val fruits_count = fruits(0).trim().toInt\n\
    \        val total_apples = apples_count + oranges_count + mangos_count\n    \
    \    val total_fruits = fruits_count + apples_count + oranges_count + mangos_count\n\
    \        val apples_percentage = apples_count / total_apples * 100\n        val\
    \ oranges_percentage = oranges_count / total_oranges * 100\n        val mangos_percentage\
    \ = mangos_count / total_mangos * 100\n        val fruits_percentage = fruits_count\
    \ / total_fruits * 100\n        val total_percentage = apples_percentage + oranges_percentage\
    \ + mangos_percentage + fruits_percentage\n        val total_percentage_rounded\
    \ = total_percentage.roundToInt\n        val total_percentage_rounded_rounded\
    \ = total_percentage_rounded + 1\n        val total_percentage_rounded_rounded_rounded\
    \ = total_percentage_rounded_rounded + 1\n        val total_percentage_rounded_rounded_rounded_rounded\
    \ = total_percentage_rounded_rounded_rounded + 1\n        val total_percentage_rounded_rounded_rounded_rounded_rounded\
    \ = total_percentage_rounded_rounded_rounded_rounded + 1\n        val total_percentage_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = total_percentage_rounded_rounded_rounded_rounded_rounded + 1\n        val\
    \ total_percentage_rounded_rounded_rounded_rounded_rounded_rounded_rounded = total_percentage_rounded_rounded_rounded_rounded_rounded_rounded\
    \ + 1\n        val total_percentage_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = total_percentage_rounded_rounded_rounded_rounded_rounded_rounded + 1\n   \
    \     val total_percentage_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = total_percentage_rounded_rounded_rounded_rounded_rounded_rounded + 1\n   \
    \     val total_percentage_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = total_percentage_rounded_rounded_rounded_rounded_rounded_rounded_rounded +\
    \ 1\n        val total_percentage_rounded_rounded_rounded_roun", "        val\
    \ apples = n.toInt\n        val oranges = s.toInt\n        val fruits = apples\
    \ + oranges\n        val mangos = fruits - apples - oranges\n        mangos",
  "        val arr = s.split(\" \")\n        val apples = arr.head.toLong\n      \
    \  val oranges = arr.last.toLong\n        val fruits = apples + oranges\n    \
    \    val mangoes = n - fruits\n        mangoes", "        val apples = s.split(\"\
    apples\")(0).toLong\n        val oranges = s.split(\"oranges\")(0).toLong\n  \
    \      val mangos = s.split(\"mango\")(0).toLong\n        val total = apples +\
    \ oranges + mangos\n        val basket = new mutable.HashMap[String, Long]()\n\
    \        basket.put(\"apples\", apples)\n        basket.put(\"oranges\", oranges)\n\
    \        basket.put(\"mangos\", mangos)\n        basket.put(\"total\", total)\n\
    \        val result = basket.getOrElse(\"mangos\", 0)\n        result - n", " \
    \       val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\"\
    \ \")(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n        val mangos\
    \ = n - apples - oranges - fruits\n        mangos", "        val arr = s.split(\"\
    \ \")\n        val apples = arr.map(_.toInt)\n        val oranges = arr.filter(_.toString.contains(\"\
    oranges\")).map(_.toInt)\n        val mangoes = arr.filter(_.toString.contains(\"\
    mango\")).map(_.toInt)\n        val total = apples.sum + oranges.sum + mangoes.sum\n\
    \        val result = total - apples.sum - oranges.sum - mangoes.sum\n       \
    \ result", "        val apples = s.toInt\n        val oranges = s.toInt\n    \
    \    val mangos = s.toInt\n        val basket = new mutable.HashMap[String, Int]()\n\
    \        basket.put(\"apples\", apples)\n        basket.put(\"oranges\", oranges)\n\
    \        basket.put(\"mangos\", mangos)\n        val totalFruits = apples + oranges\
    \ + mangos\n        val fruitsInBasket = basket.filter(_._2 > 0).map(_._1).sum\n\
    \        val mangoFruits = fruitsInBasket - mangos\n        fruitsInBasket - mangos",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = s.toInt\n        val apples_count = apples + oranges\n        val oranges_count\
    \ = apples - oranges\n        val mangos = n - apples_count - oranges_count\n\
    \        fruits - mangos", "        val apples = s.split(\"apples\")(0).toLong\n\
    \        val oranges = s.split(\"oranges\")(0).toLong\n        val mangos = s.split(\"\
    mango\")(0).toLong\n        val fruit = apples + oranges + mangos\n        fruit\
    \ - n", "        val fruits = s.split(\" \")\n        val apples = fruits(0).toLong\n\
    \        val oranges = fruits(1).toLong\n        val mangoes = n - apples - oranges\n\
    \        fruits.last.toLong - apples - oranges", "        val apples = s.split(\"\
    apples\")(1).trim\n        val oranges = s.split(\"oranges\")(1).trim\n      \
    \  val mangos = s.split(\"mango\")(1).trim\n        val fruits = s.split(\"fruits\"\
    )(1).trim\n        val basket = fruits.split(\" \").map(_.toInt)\n        val\
    \ totalApples = apples.toInt\n        val totalOranges = oranges.toInt\n     \
    \   val totalMangos = mangos.toInt\n        val totalFruits = fruits.toInt\n \
    \       val totalBasket = basket.toInt\n        val totalFruitsInBasket = totalBasket\
    \ - totalApples - totalOranges - totalMangos\n        val totalMangoInBasket =\
    \ totalFruitsInBasket - totalFruits\n        totalMangoInBasket.toLong", "   \
    \     val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangos = n - fruits\n        fruits + mangos",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val fruits = apples ++ oranges ++ mangos\n        val totalFruits = fruits.sum\n\
    \        val totalApples = apples.sum\n        val totalOranges = oranges.sum\n\
    \        val totalMangos = mangos.sum\n        val totalFruitsPerApple = totalFruits\
    \ / totalApples\n        val totalFruitsPerOrange = totalFruits / totalOranges\n\
    \        val totalFruitsPerMango = totalFruits / totalMangos\n        val totalFruitsPerAppleAndOrange\
    \ = totalFruitsPerApple * totalFruitsPerOrange\n        val totalFruitsPerAppleAndMango\
    \ = totalFruitsPerApple * totalFruitsPerMango\n        val totalFruitsPerOrangeAndMango\
    \ = totalFruitsPerOrange * totalFruitsPerMango\n        val totalFruitsPerAppleAndOrangeAndMango\
    \ = totalFruitsPerAppleAndOrange * totalFruitsPerMango\n        val totalFruitsPerAppleAndOrangeAndMangoAndTotal\
    \ = totalFruitsPerAppleAndOrangeAndMango * totalFruits\n        totalFruitsPerAppleAndOrangeAndMangoAndTotal",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges\n        val mangoes\
    \ = fruits.filter(x => x % 2 == 0)\n        fruits.size - mangoes.size", "   \
    \     val arr = s.split(\" \")\n        val apples = arr.filter(_.toString.toInt\
    \ > 0).length\n        val oranges = arr.filter(_.toString.toInt < 0).length\n\
    \        val mangoes = arr.filter(_.toString.toInt == 0).length\n        val total\
    \ = apples + oranges + mangoes\n        val apples_count = apples + mangoes\n\
    \        val oranges_count = oranges + mangoes\n        val mangoes_count = mangoes\n\
    \        val apples_percentage = (apples_count * 100) / total\n        val oranges_percentage\
    \ = (oranges_count * 100) / total\n        val mangoes_percentage = (mangoes_count\
    \ * 100) / total\n        val apples_percentage_rounded = Math.round(apples_percentage)\n\
    \        val oranges_percentage_rounded = Math.round(oranges_percentage)\n   \
    \     val mangoes_percentage_rounded = Math.round(mangoes_percentage)\n      \
    \  val apples_percentage_rounded_rounded = Math.round(apples_percentage_rounded)\n\
    \        val oranges_percentage_rounded_rounded = Math.round(oranges_percentage_rounded)\n\
    \        val mangoes_percentage_rounded_rounded = Math.round(mangoes_percentage_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded = Math.round(apples_percentage_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded = Math.round(oranges_percentage_rounded_rounded)\n\
    \        val mangoes_percentage_rounded_rounded_rounded = Math.round(mangoes_percentage_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded = Math.round(apples_percentage_rounded_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded = Math.round(oranges_percentage_rounded_rounded_rounded)\n\
    \        val mangoes_percentage_rounded_rounded_rounded_rounded = Math.round(mangoes_percentage_rounded_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded_rounded = Math.round(apples_percentage_rounded_rounded_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded_rounded = Math.round(oranges_percentage_rounded_rounded_rounded_rounded)\n\
    \        val mangoes_percentage_rounded_rounded_rounded_rounded_rounded = Math.round(mangoes_percentage_rounded_rounded_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = Math.round(apples_", "        val apples = s.toInt\n        val oranges =\
    \ s.toInt\n        val mangos = n - apples - oranges\n        val apples_count\
    \ = apples.toInt\n        val oranges_count = oranges.toInt\n        val mangos_count\
    \ = mangos.toInt\n        val apples_count = apples_count - oranges_count\n  \
    \      val oranges_count = oranges_count - apples_count\n        val mangos_count\
    \ = mangos_count - apples_count - oranges_count\n        val apples_count = apples_count\
    \ - oranges_count - mangos_count\n        val oranges_count = oranges_count -\
    \ apples_count - mangos_count\n        val mangos_count = mangos_count - apples_count\
    \ - oranges_count - apples_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count - oranges_count\n        val oranges_count = oranges_count -\
    \ apples_count - mangos_count - apples_count - mangos_count\n        val mangos_count\
    \ = mangos_count - apples_count - oranges_count - apples_count - oranges_count\
    \ - mangos_count\n        val apples_count = apples_count - oranges_count - mangos_count\
    \ - oranges_count - mangos_count - apples_count\n        val oranges_count = oranges_count\
    \ - apples_count - mangos_count - oranges_count - mangos_count - apples_count\
    \ - mangos_count\n        val mangos_count = mangos_count - apples_count - oranges_count\
    \ - apples_count - oranges_count - mangos_count - apples_count - mangos_count\
    \ - oranges_count\n        val apples_count = apples_count - oranges_count - mangos_count\
    \ - oranges_count - mangos_count - apples_count - mangos_count - oranges_count\
    \ - mangos_count\n        val oranges_count = oranges_count - apples_count - mangos_count\
    \ - oranges_count - mangos_count - apples_count - mangos_count - oranges_count\
    \ - mangos_count - apples_count\n        val mangos_count = mangos_count - apples_count\
    \ - oranges_count - apples_count - oranges_count - mangos_count - apples_count\
    \ - mangos_count - oranges_count - mangos_count - apples_count\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count - oranges_count - mangos_count\
    \ - apples_count - mangos_count - oranges_count - mangos_count - apples_count\
    \ - mangos_count - oranges_count\n        val ", "        val apples = s.split(\"\
    \ \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n      \
    \  val fruits = apples ++ oranges\n        val totalApples = apples.sum\n    \
    \    val totalOranges = oranges.sum\n        val totalFruits = fruits.sum\n  \
    \      val mangos = totalFruits - totalApples - totalOranges\n        mangos",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = s.toInt\n        val mangos = n - apples - oranges - fruits\n        fruits",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangos = n - fruits\n        mangos", "    \
    \    val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\" \"\
    )(1).toLong\n        val mangos = s.split(\" \")(2).toLong\n        val total\
    \ = apples + oranges + mangos\n        val apples_count = apples.toInt\n     \
    \   val oranges_count = oranges.toInt\n        val mangos_count = mangos.toInt\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - mangos_count\n        val mangos_count = mangos_count - apples_count\n\
    \        val apples_count = apples_count - oranges_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val oranges_count\
    \ = oranges_count - apples_count\n        val mangos_count = mangos_count - orange",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges\n        val mangos\
    \ = fruits.filter(_ % 2 == 0)\n        fruits.length - mangos.length", "     \
    \   val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\" \"\
    )(1).toLong\n        val mangos = s.split(\" \")(2).toLong\n        val totalFruits\
    \ = apples + oranges + mangos\n        val fruitsInBasket = n - totalFruits\n\
    \        val mangoFruits = fruitsInBasket - mangos\n        mangoFruits", "  \
    \      val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges\n        val totalFruits\
    \ = fruits.sum\n        val mangoFruits = totalFruits - fruits\n        mangoFruits",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val fruits = apples ++ oranges ++ mangos\n        val basket = fruits.toSet\n\
    \        val count = fruits.count(_ == n)\n        fruits.count(_ == n) - count",
  "        val apples = s.split(\"apples\")(0).trim().toInt\n        val oranges =\
    \ s.split(\"oranges\")(0).trim().toInt\n        val mangos = s.split(\"mango\"\
    )(0).trim().toInt\n        val fruits = apples + oranges + mangos\n        fruits.toLong\
    \ - n - mangos", "        val apples = s.split(\" \").map(_.toInt)\n        val\
    \ oranges = s.split(\"and\").map(_.toInt)\n        val fruits = apples ++ oranges\n\
    \        val total = fruits.sum\n        val mango = n - total\n        mango",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val basket = new mutable.HashMap[String, Int]()\n        basket.put(\"apples\"\
    , apples.sum)\n        basket.put(\"oranges\", oranges.sum)\n        basket.put(\"\
    mangos\", mangos.sum)\n        val totalFruits = apples.sum + oranges.sum + mangos.sum\n\
    \        val totalFruitsCount = apples.sum + oranges.sum + mangos.sum\n      \
    \  val totalFruitsCount2 = apples.sum + oranges.sum + mangos.sum\n        val\
    \ totalFruitsCount3 = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount4\
    \ = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount5 = apples.sum\
    \ + oranges.sum + mangos.sum\n        val totalFruitsCount6 = apples.sum + oranges.sum\
    \ + mangos.sum\n        val totalFruitsCount7 = apples.sum + oranges.sum + mangos.sum\n\
    \        val totalFruitsCount8 = apples.sum + oranges.sum + mangos.sum\n     \
    \   val totalFruitsCount9 = apples.sum + oranges.sum + mangos.sum\n        val\
    \ totalFruitsCount10 = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount11\
    \ = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount12 = apples.sum\
    \ + oranges.sum + mangos.sum\n        val totalFruitsCount13 = apples.sum + oranges.sum\
    \ + mangos.sum\n        val totalFruitsCount14 = apples.sum + oranges.sum + mangos.sum\n\
    \        val totalFruitsCount15 = apples.sum + oranges.sum + mangos.sum\n    \
    \    val totalFruitsCount16 = apples.sum + oranges.sum + mangos.sum\n        val\
    \ totalFruitsCount17 = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount18\
    \ = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount19 = apples.sum\
    \ + oranges.sum + mangos.sum\n        val totalFruitsCount20 = apples.", "   \
    \     val apples = s.split(\"apples\")(0).toLong\n        val oranges = s.split(\"\
    oranges\")(0).toLong\n        val mangos = s.split(\"mango\")(0).toLong\n    \
    \    val totalFruits = apples + oranges + mangos\n        val totalFruitsCount\
    \ = totalFruits - apples - oranges - mangos\n        val totalFruitsCountInBasket\
    \ = totalFruitsCount / n\n        val mangoFruitsCount = totalFruitsCount - totalFruitsCountInBasket\n\
    \        mangoFruitsCount", "        val apples = s.split(\"apples\")(0).toLong\n\
    \        val oranges = s.split(\"oranges\")(0).toLong\n        val mangos = s.split(\"\
    mango\")(0).toLong\n        val fruits = apples + oranges + mangos\n        fruits.toLong\
    \ - n - mangos", "        val apples = s.split(\"apples\")(0).toLong\n       \
    \ val oranges = s.split(\"oranges\")(0).toLong\n        val mangos = s.split(\"\
    mango\")(0).toLong\n        val fruits = apples + oranges + mangos\n        fruits\
    \ - n", "        val apples = s.toInt\n        val oranges = s.toInt\n       \
    \ val fruits = s.toInt\n        val mangos = n - apples - oranges - fruits\n \
    \       mangos", "        val fruits = s.split(\" \")\n        val apples = fruits(0).toLong\n\
    \        val oranges = fruits(1).toLong\n        val mangoes = n - apples - oranges\n\
    \        fruits.last.toLong - apples - oranges", "        val apples = s.toInt\n\
    \        val oranges = s.toInt\n        val mangos = s.toInt\n        val fruits\
    \ = apples + oranges + mangos\n        val basket = fruits.toLong\n        val\
    \ apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n \
    \       val mangos_count = mangos.toLong\n        val apples_count = apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val apples_count = apples_count - mangos_count\n   \
    \     val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val apples_count = apples_count - mangos_count\n   \
    \     val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val apples_count = apples_count - mangos_count\n   \
    \     val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val apples_count = apples_count - mangos_count\n   \
    \     val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val apples_count = apples_count - mangos_count\n   \
    \     val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val apples_count = apples_count - mangos_count\n   \
    \     val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\
    \ - mangos_count\n        val apples_count = apples_count - mangos_count\n   \
    \     val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_", "        val apples = s.split(\"apples and \")\n\
    \        val oranges = s.split(\"oranges and \")\n        val mangos = s.split(\"\
    mango and \")\n        val apples_count = apples.map(_.toInt).sum\n        val\
    \ oranges_count = oranges.map(_.toInt).sum\n        val mangos_count = mangos.map(_.toInt).sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.map(_.toInt).sum\n        val oranges_count = oranges.map(_.toInt).sum\n\
    \        val mangos_count = mangos.map(_.toInt).sum\n        val total_count =\
    \ apples_count + oranges_count + mangos_count\n        val apples_count = apples.map(_.toInt).sum\n\
    \        val oranges_count = oranges.map(_.toInt).sum\n        val mangos_count\
    \ = mangos.map(_.toInt).sum\n        val total_count = apples_count + oranges_count\
    \ + mangos_count\n        val apples_count = apples.map(_.toInt).sum\n       \
    \ val oranges_count = oranges.map(_.toInt).sum\n        val mangos_count = mangos.map(_.toInt).sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.map(_.toInt).sum\n        val oranges_count = oranges.map(_.toInt).sum\n\
    \        val mangos_count = mangos.map(_.toInt).sum\n        val total_count =\
    \ apples_count + oranges_count + mangos_count\n        val apples_count = apples.map(_.toInt).sum\n\
    \        val oranges_count = oranges.map(_.toInt).sum\n        val mangos_count\
    \ = mangos.map(_.toInt).sum\n        val total_count = apples_count + oranges_count\
    \ + mangos_count\n        val apples_count = apples.map(_.toInt).sum\n       \
    \ val oranges_count = oranges.map(_.toInt).sum\n        val mangos_count = mangos.map(_.toInt).sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.map(_.toInt).sum\n        val oranges_count = oranges.map(_.toInt).sum\n\
    \        val mangos_count = mangos.map(_.toInt).sum\n        val total_count =\
    \ apples_count + oranges_count + mangos_count\n        val apples_count = apples.map(_.toInt).sum\n\
    \        val oranges_count = ", "        val apples = s.toInt\n        val oranges\
    \ = s.toInt\n        val fruits = s.toInt\n        val mangos = n - apples - oranges\
    \ - fruits\n        mangos", "        val apples = n.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = apples - oranges\n        val fruits = apples\
    \ + oranges + mangos\n        fruits", "        val apples = s.toInt\n       \
    \ val oranges = s.toInt\n        val mangos = n - apples - oranges\n        val\
    \ fruits = apples + oranges + mangos\n        fruits", "        val apples = s.toInt\n\
    \        val oranges = s.toInt\n        val mangos = s.toInt\n        val fruits\
    \ = apples + oranges + mangos\n        val basket = fruits.toLong\n        val\
    \ apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n \
    \       val mangos_count = mangos.toLong\n        val apples_count = apples_count\
    \ - oranges_count - mangos_count\n        val mangos_count = apples_count - oranges_count\
    \ - mangos_count\n        val mangos_count = apples_count - oranges_count - mangos_count\n\
    \        val mangos_count = apples_count - oranges_count - mangos_count\n    \
    \    val mangos_count = apples_count - oranges_count - mangos_count\n        val\
    \ mangos_count = apples_count - oranges_count - mangos_count\n        val mangos_count\
    \ = apples_count - oranges_count - mangos_count\n        val mangos_count = apples_count\
    \ - oranges_count - mangos_count\n        val mangos_count = apples_count - oranges_count\
    \ - mangos_count\n        val mangos_count = apples_count - oranges_count - mangos_count\n\
    \        val mangos_count = apples_count - oranges_count - mangos_count\n    \
    \    val mangos_count = apples_count - oranges_count - mangos_count\n        val\
    \ mangos_count = apples_count - oranges_count - mangos_count\n        val mangos_count\
    \ = apples_count - oranges_count - mangos_count\n        val mangos_count = apples_count\
    \ - oranges_count - mangos_count\n        val mangos_count = apples_count - oranges_count\
    \ - mangos_count\n        val mangos_count = apples_count - oranges_count - mangos_count\n\
    \        val mangos_count = apples_count - oranges_count - mangos_count\n    \
    \    val mangos_count = apples_count - oranges_count - mangos_count\n        val\
    \ mangos_count = apples_count - oranges_count - mangos_count\n        val mangos_count\
    \ = apples_count - oranges_count - mangos_count\n        val mangos_count = apples_count\
    \ - oranges_count - mangos_count\n        val mangos_count = apples_count - oranges_count\
    \ - mangos_count\n        val mangos_count = apples_count - oranges_count - mangos_count\n\
    \        val mangos_count = apples_count - oranges_count - mangos_count\n    \
    \    val mangos_count = apples_count - oranges_count - ", "        val apples\
    \ = s.toInt\n        val oranges = s.toInt\n        val mangos = n - apples -\
    \ oranges\n        val fruits = apples + oranges + mangos\n        fruits", " \
    \       val apples = n.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = apples - oranges\n        fruitsDistribution(apples, oranges, mangos)", " \
    \       val apples = n.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangos = fruits - apples - oranges\n       \
    \ mangos", "        val apples = s.split(\"apples\")(0).toLong\n        val oranges\
    \ = s.split(\"oranges\")(0).toLong\n        val mangos = s.split(\"mango\")(0).toLong\n\
    \        val fruits = apples + oranges + mangos\n        fruits.toLong - n - mangos",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = s.toInt\n        val basket = new mutable.HashMap[String, Int]()\n       \
    \ basket.put(\"apples\", apples)\n        basket.put(\"oranges\", oranges)\n \
    \       basket.put(\"mangos\", mangos)\n        val totalFruits = apples + oranges\
    \ + mangos\n        val fruits = basket.filter(_._2 > 0)\n        val totalFruitsCount\
    \ = fruits.filter(_._2 > 0).size\n        val mangoFruitsCount = fruits.filter(_._2\
    \ == 1).size\n        val mangoFruitsCount = fruits.filter(_._2 == 1).size\n \
    \       val mangoFruitsCount = fruits.filter(_._2 == 1).size\n        val mangoFruitsCount\
    \ = fruits.filter(_._2 == 1).size\n        val mangoFruitsCount = fruits.filter(_._2\
    \ == 1).size\n        val mangoFruitsCount = fruits.filter(_._2 == 1).size\n \
    \       val mangoFruitsCount = fruits.filter(_._2 == 1).size\n        val mangoFruitsCount\
    \ = fruits.filter(_._2 == 1).size\n        val mangoFruitsCount = fruits.filter(_._2\
    \ == 1).size\n        val mangoFruitsCount = fruits.filter(_._2 == 1).size\n \
    \       val mangoFruitsCount = fruits.filter(_._2 == 1).size\n        val mangoFruitsCount\
    \ = fruits.filter(_._2 == 1).size\n        val mangoFruitsCount = fruits.filter(_._2\
    \ == 1).size\n        val mangoFruitsCount = fruits.filter(_._2 == 1).size\n \
    \       val mangoFruitsCount = fruits.filter(_._2 == 1).size\n        val mangoFruitsCount\
    \ = fruits.filter(_._2 == 1).size\n        val mangoFruitsCount = fruits.filter(_._2\
    \ == 1).size\n        val mangoFruitsCount = fruits.filter(_._2 == 1).size\n \
    \       val mangoFruitsCount = fruits.filter(_._2 == 1).size\n        val mangoFruitsCount\
    \ = fruits.filter(_._2 == 1).size\n        val mangoFruitsCount = fruits.filter(_._2\
    \ == 1).size\n        val mangoFruitsCount = fruits.filter(_._2 == 1).size\n \
    \       val mangoFruitsCount = fruits.filter(_._2 == 1).size\n        val mang",
  "        val apples = s.split(\" \")(0).toLong\n        val oranges = s.split(\"\
    \ \")(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n        val apples_oranges\
    \ = apples + oranges\n        val fruits_apples = fruits + apples\n        val\
    \ mangos = fruits_apples - oranges\n        mangos", "        val apples = s.split(\"\
    apples and \")\n        val oranges = s.split(\"oranges and \")\n        val mangos\
    \ = s.split(\"mango and \")\n        val apples_count = apples.map(_.toInt).sum\n\
    \        val oranges_count = oranges.map(_.toInt).sum\n        val mangos_count\
    \ = mangos.map(_.toInt).sum\n        val apples_total = apples_count + apples.map(_.toInt).sum\n\
    \        val oranges_total = oranges_count + oranges.map(_.toInt).sum\n      \
    \  val mangos_count = mangos_count + mangos.map(_.toInt).sum\n        val apples_percent\
    \ = apples_count / apples_total * 100\n        val oranges_percent = oranges_count\
    \ / oranges_total * 100\n        val mangos_percent = mangos_count / mangos_total\
    \ * 100\n        val apples_percent = apples_percent.toInt\n        val oranges_percent\
    \ = oranges_percent.toInt\n        val mangos_percent = mangos_percent.toInt\n\
    \        val apples_count = apples_count - apples.map(_.toInt).sum\n        val\
    \ oranges_count = oranges_count - oranges.map(_.toInt).sum\n        val mangos_count\
    \ = mangos_count - mangos.map(_.toInt).sum\n        val apples_total = apples_total\
    \ - apples.map(_.toInt).sum\n        val oranges_total = oranges_total - oranges.map(_.toInt).sum\n\
    \        val mangos_count = mangos_count - mangos.map(_.toInt).sum\n        val\
    \ apples_percent = apples_percent - apples.map(_.toInt).sum\n        val oranges_percent\
    \ = oranges_percent - oranges.map(_.toInt).sum\n        val mangos_percent = mangos_percent\
    \ - mangos.map(_.toInt).sum\n        val apples_count = apples_count + apples.map(_.toInt).sum\n\
    \        val oranges_count = oranges_count + oranges.map(_.toInt).sum\n      \
    \  val mangos_count = mangos_count + mangos.map(_.toInt).sum\n        val apples_percent\
    \ = apples_count / apples_total * 100\n        val oranges_percent = oranges_count\
    \ / oranges_total * 100\n        val mangos_percent = mangos_count / mangos_total\
    \ * 100\n        val apples_percent = apples_percent.toInt\n        val oranges_percent\
    \ = oranges_percent.toInt\n        val mangos_percent = mangos_percent.toInt\n",
  "        val apples = s.split(\"apples\")(0).toInt\n        val oranges = s.split(\"\
    oranges\")(0).toInt\n        val mangos = s.split(\"mango\")(0).toInt\n      \
    \  val fruits = apples + oranges + mangos\n        fruits.toLong - n - mangos",
  "        val fruits = s.split(\" \")\n        val apples = fruits(0).toLong\n  \
    \      val oranges = fruits(1).toLong\n        val mango = fruits(2).toLong\n\
    \        val total = apples + oranges + mango\n        val basket = fruits(3).toLong\n\
    \        total - basket", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val fruits = apples ++ oranges ++ mangos\n       \
    \ val apples_count = apples.sum\n        val oranges_count = oranges.sum\n   \
    \     val mangos_count = mangos.sum\n        val apples_total = apples_count +\
    \ apples_count - oranges_count - mangos_count\n        val oranges_total = oranges_count\
    \ + mangos_count\n        val mangos_total = apples_total + oranges_total\n  \
    \      val mangos_count = fruits.filter(_ % 2 == 0).length\n        mangos_count",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val fruits = apples ++ oranges ++ mangos\n        val apples_count = apples.sum\n\
    \        val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.sum\n        val oranges_count = oranges.sum\n \
    \       val mangos_count = mangos.sum\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.sum\n    \
    \    val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.sum\n        val oranges_count = oranges.sum\n \
    \       val mangos_count = mangos.sum\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.sum\n    \
    \    val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.sum\n        val oranges_count = oranges.sum\n \
    \       val mangos_count = mangos.sum\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.sum\n    \
    \    val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.sum\n        val oranges_count = oranges.sum\n \
    \       val mangos_count = mangos.sum\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.sum\n    \
    \    val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.sum\n        val oranges_count = oranges.sum\n \
    \       val mangos_count = mangos.sum\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.sum\n    \
    \    val oranges_count = oranges.sum\n        val mangos_count = mangos.sum\n\
    \        ", "        val apples = s.split(\"apples\")(1).trim\n        val oranges\
    \ = s.split(\"oranges\")(1).trim\n        val mangos = s.split(\"mango\")(1).trim\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val basket_count = n - apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples.toLong\n \
    \       val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val basket_count = n - apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val basket_count = n - apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples.toLong\n \
    \       val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val basket_count = n - apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val basket_count = n - apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples.toLong\n \
    \       val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val basket_count = n - apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val basket_count = n - apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples.toLong\n \
    \       val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val basket_count = n - apples_count - oranges_count - mangos_count\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val basket_count = n - apples_count\
    \ - oranges_count - mangos_count\n        val apples_count = apples.toLong\n \
    \       val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val basket_", "        val apples = s.toInt\n        val oranges = s.toInt\n\
    \        val fruits = s.toInt\n        val mangos = n - apples - oranges - fruits\n\
    \        mangos", "        val apples = s.split(\" \")(0)\n        val oranges\
    \ = s.split(\" \")(1)\n        val mangos = s.split(\" \")(2)\n        val apples_count\
    \ = apples.toInt\n        val oranges_count = oranges.toInt\n        val mangos_count\
    \ = mangos.toInt\n        val apples_sum = apples_count + oranges_count + mangos_count\n\
    \        val oranges_sum = oranges_count + mangos_count\n        val mangos_sum\
    \ = mangos_count\n        val apples_percentage = apples_sum / apples_count *\
    \ 100\n        val oranges_percentage = oranges_sum / oranges_count * 100\n  \
    \      val mangos_percentage = mangos_sum / mangos_count * 100\n        val apples_percentage_rounded\
    \ = math.round(apples_percentage)\n        val oranges_percentage_rounded = math.round(oranges_percentage)\n\
    \        val mangos_percentage_rounded = math.round(mangos_percentage)\n     \
    \   val apples_percentage_rounded_rounded = math.round(apples_percentage_rounded)\n\
    \        val oranges_percentage_rounded_rounded = math.round(oranges_percentage_rounded)\n\
    \        val mangos_percentage_rounded_rounded = math.round(mangos_percentage_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded)\n\
    \        val mangos_percentage_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded_rounded)\n\
    \        val mangos_percentage_rounded_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded_rounded)\n\
    \        val mangos_percentage_rounded_rounded_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded_rounded_", "  \
    \      val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = s.toInt\n        val mangos = n - apples - oranges - fruits\n        mangos",
  "        val apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\"\
    \ \").map(_.toInt)\n        val mangos = s.split(\" \").map(_.toInt)\n       \
    \ val basket = new mutable.HashMap[String, Int]()\n        basket.put(\"apples\"\
    , apples.sum)\n        basket.put(\"oranges\", oranges.sum)\n        basket.put(\"\
    mangos\", mangos.sum)\n        val totalFruits = apples.sum + oranges.sum + mangos.sum\n\
    \        val totalApples = apples.sum\n        val totalOranges = oranges.sum\n\
    \        val totalMangos = mangos.sum\n        val totalBasket = basket.size\n\
    \        val totalFruitsInBasket = basket.get(\"apples\").get + basket.get(\"\
    oranges\").get + basket.get(\"mangos\").get \n        val totalApplesInBasket\
    \ = basket.get(\"apples\").get \n        val totalOrangesInBasket = basket.get(\"\
    oranges\").get \n        val totalMangosInBasket = basket.get(\"mangos\").get\
    \ \n        val totalFruitsWithApples = totalFruits - totalApples - totalOranges\
    \ - totalMangos\n        val totalFruitsWithOranges = totalFruits - totalApples\
    \ - totalOranges + totalMangos\n        val totalFruitsWithMangos = totalFruits\
    \ - totalApples + totalOranges - totalMangos\n        val totalFruitsWithApplesAndOranges\
    \ = totalFruits - totalApples - totalOranges + totalMangos\n        val totalFruitsWithApplesAndMangos\
    \ = totalFruits - totalApples + totalOranges - totalMangos\n        val totalFruitsWithApplesAndOrangesAndMangos\
    \ = totalFruits - totalApples - totalOranges + totalMangos\n        val totalFruitsWithApplesAndOrangesAndMangosInBasket\
    \ = totalFruitsInBasket - totalApplesInBasket - totalOrangesInBasket - totalMangosInBasket\n\
    \        val totalFruitsWithApplesAndOrangesAndMangosInBasket = totalFruitsWithApplesAndOrangesAndMangos\
    \ - totalFruitsWithApplesAndOrangesAndM", "        val apples = s.toInt\n    \
    \    val oranges = s.toInt\n        val mangos = n - apples - oranges\n      \
    \  val fruits = apples + oranges + mangos\n        fruits", "        val apples\
    \ = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val fruits = apples ++ oranges\n        val totalFruits = fruits.sum\n\
    \        val mangoFruits = totalFruits - fruits.filter(_ > 0).sum\n        mangoFruits",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangoes = n - fruits\n        fruits - mangoes",
  "        val fruits = s.split(\" \")\n        val apples = fruits(0).toLong\n  \
    \      val oranges = fruits(1).toLong\n        val mangoes = n - apples - oranges\n\
    \        fruits(2).toLong - fruits(0).toLong - fruits(1).toLong - fruits(2).toLong",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = n - apples - oranges\n        val apples_count = apples.toInt\n        val\
    \ oranges_count = oranges.toInt\n        val mangos_count = n - apples_count -\
    \ oranges_count\n        val apples_count = apples_count.toInt\n        val oranges_count\
    \ = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n     \
    \   val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val mangos_count = mangos_count.toInt\n        val apples_count = apples_count.toInt\n\
    \        val oranges_count = oranges_count.toInt\n        val mangos_count = mangos_count.toInt\n\
    \        val apples_count = apples_count.toInt\n        val oranges_count = oranges_count.toInt\n\
    \        val ", "        val apples = s.toInt\n        val oranges = s.toInt\n\
    \        val mangos = s.toInt\n        val basket = new mutable.HashMap[String,\
    \ Int]()\n        basket.put(\"apples\", apples)\n        basket.put(\"oranges\"\
    , oranges)\n        basket.put(\"mangos\", mangos)\n        val totalFruits =\
    \ apples + oranges + mangos\n        val fruitsInBasket = basket.filter(_._2 >\
    \ 0).map(_._1).sum\n        val mangoFruits = fruitsInBasket - mangos\n      \
    \  fruitsInBasket - mangoFruits", "        val apples = s.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = s.toInt\n        val basket = new mutable.HashMap[String,\
    \ Int]()\n        basket.put(\"apples\", apples)\n        basket.put(\"oranges\"\
    , oranges)\n        basket.put(\"mangos\", mangos)\n        val totalFruits =\
    \ apples + oranges + mangos\n        val fruitsInBasket = basket.filter(_._2 >\
    \ 0).map(_._1).sum\n        fruitsInBasket - mangos", "        val apples = s.split(\"\
    \ \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n      \
    \  val fruits = apples ++ oranges\n        val mangos = fruits.filter(x => x %\
    \ 2 == 0)\n        fruits.size - mangos.size", "        val apples = s.split(\"\
    \ \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n        val fruits\
    \ = s.split(\" \")(2).toLong\n        val mangos = n - apples - oranges - fruits\n\
    \        mangos", "        val apples = s.split(\" \")(0).toLong\n        val\
    \ oranges = s.split(\" \")(1).toLong\n        val fruits = s.split(\" \")(2).toLong\n\
    \        val mangos = n - apples - oranges - fruits\n        mangos", "      \
    \  val apples = s.split(\"apples\")(0)\n        val oranges = s.split(\"oranges\"\
    )(0)\n        val mangos = s.split(\"mango\")(0)\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val oranges_count = oranges_count - apples_count\n        val mangos_count\
    \ = mangos_count - apples_count\n        val apples_count = apples_count + oranges_count\
    \ + mangos_count\n        apples_count - mangos_count", "        val apples =\
    \ s.split(\"apples and \")\n        val oranges = s.split(\"oranges and \")\n\
    \        val mangos = s.split(\"mango and \")\n        val apples_count = apples(0).split(\"\
    \ \").map(_.toInt)\n        val oranges_count = oranges(0).split(\" \").map(_.toInt)\n\
    \        val mangos_count = mangos(0).split(\" \").map(_.toInt)\n        val apples_total\
    \ = apples(1).split(\" \").map(_.toInt)\n        val oranges_total = oranges(1).split(\"\
    \ \").map(_.toInt)\n        val mangos_total = mangos(1).split(\" \").map(_.toInt)\n\
    \        val apples_count = apples_count.sum\n        val oranges_count = oranges_count.sum\n\
    \        val mangos_count = mangos_count.sum\n        val apples_total = apples_total.sum\n\
    \        val oranges_total = oranges_total.sum\n        val mangos_total = mangos_total.sum\n\
    \        val apples_total = apples_total - apples_count\n        val oranges_total\
    \ = oranges_total - oranges_count\n        val mangos_total = mangos_total - mangos_count\n\
    \        val apples_total = apples_total - apples_count.sum\n        val oranges_total\
    \ = oranges_total - oranges_count.sum\n        val mangos_total = mangos_total\
    \ - mangos_count.sum\n        val apples_total = apples_total - apples_total.sum\n\
    \        val oranges_total = oranges_total - oranges_total.sum\n        val mangos_total\
    \ = mangos_total - mangos_total.sum\n        val apples_total = apples_total -\
    \ apples_total.sum\n        val oranges_total = oranges_total - oranges_total.sum\n\
    \        val mangos_total = mangos_total - mangos_total.sum\n        val apples_total\
    \ = apples_total - apples_total.sum\n        val oranges_total = oranges_total\
    \ - oranges_total.sum\n        val mangos_total = mangos_total - mangos_total.sum\n\
    \        val apples_total = apples_total - apples_total.sum\n        val oranges_total\
    \ = oranges_total - oranges_total.sum\n        val mangos_total = mangos_total\
    \ - mangos_total.sum\n        val apples_total = apples_total - apples_total.sum\n\
    \        val oranges_total = oranges_total - oranges_total.sum\n        val mangos_total\
    \ = mangos_total - mangos_total.sum\n        val apple", "        val apples =\
    \ s.toInt\n        val oranges = s.toInt\n        val mangos = s.toInt\n     \
    \   val basket = new mutable.HashMap[String, Int]()\n        basket.put(\"apples\"\
    , apples)\n        basket.put(\"oranges\", oranges)\n        basket.put(\"mangos\"\
    , mangos)\n        val total = apples + oranges + mangos\n        val count =\
    \ basket.filter(_._2 > 0).map(_._2).sum\n        val mangos = total - count\n\
    \        val apples = total - mangos\n        apples + mangos", "        val apples\
    \ = s.split(\"apples and \")\n        val oranges = s.split(\"oranges and \")\n\
    \        val fruits = s.split(\"fruits and \")\n        val apples_count = apples.map(_.toInt).sum\n\
    \        val oranges_count = oranges.map(_.toInt).sum\n        val fruits_count\
    \ = fruits.map(_.toInt).sum\n        val mangos = n - apples_count - oranges_count\
    \ - fruits_count\n        mangos", "        val apples = s.toInt\n        val\
    \ oranges = s.toInt\n        val fruits = s.toInt\n        val mangos = n - apples\
    \ - oranges - fruits\n        mangos", "        val apples = s.toInt\n       \
    \ val oranges = s.toInt\n        val mangos = s.toInt\n        val basket = new\
    \ mutable.ListBuffer[String]()\n        var count = 0\n        var apples_count\
    \ = 0\n        var oranges_count = 0\n        var mangos_count = 0\n        for(i\
    \ <- 0 until n){\n            val fruit = s.substring(i, i+1)\n            if(fruit\
    \ == \"apples\"){\n                apples_count += 1\n                basket +=\
    \ fruit\n            }else if(fruit == \"oranges\"){\n                oranges_count\
    \ += 1\n                basket += fruit\n            }else if(fruit == \"mangos\"\
    ){\n                mangos_count += 1\n                basket += fruit\n     \
    \       }\n        }\n        apples_count = apples - apples_count\n        oranges_count\
    \ = oranges - oranges_count\n        mangos_count = mangos - mangos_count\n  \
    \      count = apples_count + oranges_count + mangos_count\n        count - mangos",
  "        val apples = s.split(\"apples\")(0)\n        val oranges = s.split(\"oranges\"\
    )(0)\n        val mangos = s.split(\"mango\")(0)\n        val fruits = s.split(\"\
    fruits\")(0)\n        val apples_count = apples.toInt\n        val oranges_count\
    \ = oranges.toInt\n        val mangos_count = mangos.toInt\n        val fruits_count\
    \ = fruits.toInt\n        val apples_sum = apples_count * apples_count * apples_count\n\
    \        val oranges_sum = oranges_count * oranges_count * oranges_count\n   \
    \     val mangos_count = mangos_count * mangos_count\n        val fruits_count\
    \ = fruits_count * fruits_count\n        val total_sum = apples_sum + oranges_sum\
    \ + mangos_count + fruits_count\n        val apples_percent = apples_count / total_sum\
    \ * 100\n        val oranges_percent = oranges_count / total_sum * 100\n     \
    \   val mangos_percent = mangos_count / total_sum * 100\n        val fruits_percent\
    \ = fruits_count / total_sum * 100\n        val total_percent = apples_percent\
    \ + oranges_percent + mangos_percent + fruits_percent\n        val total_count\
    \ = apples_count + oranges_count + mangos_count + fruits_count\n        val total_percent\
    \ = total_percent / total_count * 100\n        val total_sum = total_sum * total_count\n\
    \        val total_percent = total_percent / total_sum * 100\n        val total_count\
    \ = total_count * total_sum\n        val total_percent = total_percent / total_count\
    \ * 100\n        val total_count = total_count * total_sum\n        val total_percent\
    \ = total_percent / total_count * 100\n        val total_count = total_count *\
    \ total_sum\n        val total_percent = total_percent / total_count * 100\n \
    \       val total_count = total_count * total_sum\n        val total_percent =\
    \ total_percent / total_count * 100\n        val total_count = total_count * total_sum\n\
    \        val total_percent = total_percent / total_count * 100\n        val total_count\
    \ = total_count * total_sum\n        val total_percent = total_percent / total_count\
    \ * 100\n        val total_count = total_count * total_sum\n        val total_percent\
    \ = total_percent / total_count * 100\n        val total_count = total_count *\
    \ total_sum\n        val total_percent = total_percent / total_count * 100\n \
    \       val total_count = total_count * total_sum\n        val total_percent =\
    \ total_percent / total_count * 100\n        val total_count = total_count * total_sum\n\
    \        val total_percent = ", "        val apples = s.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = s.toInt\n        val fruits = apples + oranges\
    \ + mangos\n        val totalFruits = fruits.toLong\n        val applesAndOranges\
    \ = apples + oranges\n        val mangoFruits = mangos - applesAndOranges\n  \
    \      val applesAndOrangesAndMangoFruits = applesAndOranges + mangoFruits\n \
    \       val applesAndOrangesAndMangoFruitsPerAppleAndOrange = mangoFruits / applesAndOranges\n\
    \        val applesAndOrangesAndMangoFruitsPerOrange = applesAndOranges / mangos\n\
    \        val applesAndOrangesAndMangoFruitsPerMango = applesAndOranges / fruits\n\
    \        val applesAndOrangesAndMangoFruitsPerAppleAndOrangeAndMango = applesAndOrangesAndMangoFruitsPerAppleAndOrange\
    \ * applesAndOrangesAndMangoFruitsPerOrange * applesAndOrangesAndMangoFruitsPerMango\n\
    \        val applesAndOrangesAndMangoFruitsPerAppleAndOrangeAndMangoPerAppleAndOrangeAndMango\
    \ = applesAndOrangesAndMangoFruitsPerAppleAndOrange * applesAndOrangesAndMangoFruitsPerOrange\
    \ * applesAndOrangesAndMangoFruitsPerMango\n        val applesAndOrangesAndMangoFruitsPerAppleAndOrangeAndMangoPerAppleAndOrangeAndMangoPerAppleAndOrangeAndMango\
    \ = applesAndOrangesAndMangoFruitsPerAppleAndOrange * applesAndOrangesAndMangoFruitsPerOrange\
    \ * applesAndOrangesAndMangoFruitsPerMango\n        val applesAndOrangesAndMangoFruitsPerAppleAndOrangeAndMangoPerAppleAndOrangeAndMangoPerAppleAndOrangeAndMangoPerAppleAndOrangeAndMango\
    \ = applesAndOrangesAndMangoFruitsPerAppleAndOrange * applesAndOrangesAndMangoFruitsPerOrange\
    \ * applesAndOrangesAndMangoFruitsPerMang", "        val apples = s.split(\" \"\
    ).map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n        val\
    \ fruits = apples ++ oranges\n        val totalFruits = fruits.sum\n        val\
    \ mangoFruits = fruits.filter(_ % 2 == 1).sum\n        mangoFruits", "       \
    \ val apples = s.toInt\n        val oranges = s.toInt\n        val mangos = s.toInt\n\
    \        val fruits = apples + oranges + mangos\n        val basket = fruits.toLong\n\
    \        val total = fruits.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_count = apples.toLong\n", "        val arr = s.split(\" \"\
    )\n        val apples = arr.map(_.toInt)\n        val oranges = arr.filter(_.toInt\
    \ % 2 == 0).map(_.toInt)\n        val mangoes = arr.filter(_.toInt % 2 == 1).map(_.toInt)\n\
    \        val apples_count = apples.sum\n        val oranges_count = oranges.sum\n\
    \        val mangoes_count = mangoes.sum\n        val apples_sum = apples.sum\n\
    \        val oranges_sum = oranges.sum\n        val mangoes_sum = mangoes.sum\n\
    \        val apples_prod = apples.product\n        val oranges_prod = oranges.product\n\
    \        val mangoes_prod = mangoes.product\n        val apples_prod_sum = apples_prod.sum\n\
    \        val oranges_prod_sum = oranges_prod.sum\n        val mangoes_prod_sum\
    \ = mangoes_prod.sum\n        val apples_prod_prod = apples_prod.product\n   \
    \     val oranges_prod_prod = oranges_prod.product\n        val mangoes_prod_prod\
    \ = mangoes_prod.product\n        val apples_prod_prod_sum = apples_prod_prod.sum\n\
    \        val oranges_prod_prod_sum = oranges_prod_prod.sum\n        val mangoes_prod_prod_sum\
    \ = mangoes_prod_prod.sum\n        val apples_prod_prod_prod = apples_prod_prod.product\n\
    \        val oranges_prod_prod_prod = oranges_prod_prod.product\n        val mangoes_prod_prod_prod\
    \ = mangoes_prod_prod.product\n        val apples_prod_prod_prod_sum = apples_prod_prod_prod.sum\n\
    \        val oranges_prod_prod_prod_sum = oranges_prod_prod_prod.sum\n       \
    \ val mangoes_prod_prod_prod_sum = mangoes_prod_prod_prod.sum\n        val apples_prod_prod_prod_prod\
    \ = apples_prod_prod_prod.product\n        val oranges_prod_prod_prod_prod = oranges_prod_prod_prod.product\n\
    \        val mangoes_prod_prod_prod_prod = mangoes_prod_prod_prod.product\n  \
    \      val apples_prod_prod_prod_prod_sum = apples_prod_prod_prod_prod.sum\n \
    \       val oranges_prod_prod_prod_prod_sum = oranges_prod_prod_prod_prod.sum\n\
    \        val mangoes_prod_prod_prod_prod_sum = mangoes_prod_prod_prod_prod.sum\n\
    \        val apples_prod_prod_prod_prod_prod = apples_prod_prod_prod_prod.product\n\
    \        val oranges_prod_prod_prod_prod_prod = oranges_prod_prod_prod_", "  \
    \      val apples = s.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = s.toInt\n        val basket = new mutable.HashMap[String, Int]()\n       \
    \ basket.put(\"apples\", apples)\n        basket.put(\"oranges\", oranges)\n \
    \       basket.put(\"mangos\", mangos)\n        val totalFruits = apples + oranges\
    \ + mangos\n        val fruits = basket.filter(_._2 > 0)\n        val fruitCount\
    \ = fruits.map(_._2).sum\n        fruitCount - mangos", "        val apples =\
    \ n.toInt\n        val oranges = s.toInt\n        val fruits = apples + oranges\n\
    \        val mangos = fruits - apples - oranges\n        mangos", "        val\
    \ apples = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val mangos = s.split(\" \").map(_.toInt)\n        val basket = new mutable.ListBuffer[String]()\n\
    \        basket += apples.mkString(\" \")\n        basket += oranges.mkString(\"\
    \ \")\n        basket += mangos.mkString(\" \")\n        val totalApples = apples.sum\n\
    \        val totalOranges = oranges.sum\n        val totalMangos = mangos.sum\n\
    \        val totalFruits = totalApples + totalOranges + totalMangos\n        val\
    \ appleFruits = apples.sum\n        val orangeFruits = oranges.sum\n        val\
    \ mangoFruits = mangos.sum\n        val fruits = appleFruits + orangeFruits +\
    \ mangoFruits\n        val totalFruits = appleFruits + orangeFruits + mangoFruits\n\
    \        val appleFruits = apples.sum\n        val orangeFruits = oranges.sum\n\
    \        val mangoFruits = mangos.sum\n        val fruits = appleFruits + orangeFruits\
    \ + mangoFruits\n        val totalFruits = appleFruits + orangeFruits + mangoFruits\n\
    \        val appleFruits = apples.sum\n        val orangeFruits = oranges.sum\n\
    \        val mangoFruits = mangos.sum\n        val fruits = appleFruits + orangeFruits\
    \ + mangoFruits\n        val totalFruits = appleFruits + orangeFruits + mangoFruits\n\
    \        val appleFruits = apples.sum\n        val orangeFruits = oranges.sum\n\
    \        val mangoFruits = mangos.sum\n        val fruits = appleFruits + orangeFruits\
    \ + mangoFruits\n        val totalFruits = appleFruits + orangeFruits + mangoFruits\n\
    \        val appleFruits = apples.sum\n        val orangeFruits = oranges.sum\n\
    \        val mangoFruits = mangos.sum\n        val fruits = appleFruits + orangeFruits\
    \ + mangoFruits\n        val totalFruits = appleFruits + ", "        val apples\
    \ = s.split(\" \").map(_.toInt).sum\n        val oranges = s.split(\" \").map(_.toInt).sum\n\
    \        val mangos = s.split(\" \").map(_.toInt).sum\n        val apples_oranges\
    \ = apples + oranges\n        val apples_mangos = apples - mangos\n        val\
    \ oranges_mangos = oranges - mangos\n        val apples_oranges_mangos = apples_oranges\
    \ + oranges_mangos\n        val apples_oranges_mangos_sum = apples_oranges_mangos\
    \ + mangos\n        val apples_oranges_mangos_sum_minus_apples = apples_oranges_mangos_sum\
    \ - apples\n        val apples_oranges_mangos_sum_minus_oranges = apples_oranges_mangos_sum_minus_apples\
    \ - oranges\n        val apples_oranges_mangos_sum_minus_mangos = apples_oranges_mangos_sum_minus_oranges\
    \ - mangos\n        val apples_oranges_mangos_sum_minus_apples_oranges_mangos\
    \ = apples_oranges_mangos_sum_minus_mangos - apples_oranges_mangos\n        val\
    \ apples_oranges_mangos_sum_minus_apples_oranges_mangos_sum = apples_oranges_mangos_sum_minus_apples_oranges_mangos\
    \ - apples_oranges_mangos_sum\n        val apples_oranges_mangos_sum_minus_apples_oranges_mangos_sum_minus_apples\
    \ = apples_oranges_mangos_sum_minus_apples_oranges_mangos_sum - apples_oranges_mangos_sum_minus_apples\n\
    \        val apples_oranges_mangos_sum_minus_apples_oranges_mangos_sum_minus_oranges\
    \ = apples_oranges_mangos_sum_minus_apples_oranges_mangos_sum_minus_oranges -\
    \ apples_oranges_mangos_sum_minus_oranges\n        val apples_oranges_mangos_sum_minus_apples_oranges_mangos_sum_minus_mangos\
    \ = apples_oranges_mangos_sum_minus_apples_oranges_mangos_sum_minus_mangos - apples_oranges_mangos_sum_minus_mangos\n\
    \        val apples_oranges_mangos_sum_minus_apples_oranges_mangos_sum_minus_apples_oranges_mangos\
    \ = apples_oranges_mangos_sum_minus_apples_oranges_mangos_sum_minus_apples_oranges_mangos\
    \ - apples_oranges_mangos_sum_minus_apples_oranges_mangos\n        val apples_oranges_mangos_sum_",
  "        val apples = s.split(\"apples\")(0).trim().toInt\n        val oranges =\
    \ s.split(\"oranges\")(0).trim().toInt\n        val mangos = s.split(\"mangos\"\
    )(0).trim().toInt\n        val fruits = apples + oranges + mangos\n        val\
    \ apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n \
    \       val mangos_count = mangos.toLong\n        val apples_sum = apples_count.toLong\n\
    \        val oranges_sum = oranges_count.toLong\n        val mangos_sum = mangos_count.toLong\n\
    \        val apples_percentage = apples_sum.toDouble / fruits.toDouble\n     \
    \   val oranges_percentage = oranges_sum.toDouble / fruits.toDouble\n        val\
    \ mangos_percentage = mangos_sum.toDouble / fruits.toDouble\n        val apples_percentage_rounded\
    \ = math.round(apples_percentage*100).toInt\n        val oranges_percentage_rounded\
    \ = math.round(oranges_percentage*100).toInt\n        val mangos_percentage_rounded\
    \ = math.round(mangos_percentage*100).toInt\n        val apples_percentage_rounded_rounded\
    \ = math.round(apples_percentage_rounded*100).toInt\n        val oranges_percentage_rounded_rounded\
    \ = math.round(oranges_percentage_rounded*100).toInt\n        val mangos_percentage_rounded_rounded\
    \ = math.round(mangos_percentage_rounded*100).toInt\n        val apples_percentage_rounded_rounded_rounded\
    \ = math.round(apples_percentage_rounded_rounded*100).toInt\n        val oranges_percentage_rounded_rounded_rounded\
    \ = math.round(oranges_percentage_rounded_rounded*100).toInt\n        val mangos_percentage_rounded_rounded_rounded\
    \ = math.round(mangos_percentage_rounded_rounded*100).toInt\n        val apples_percentage_rounded_rounded_rounded_rounded\
    \ = math.round(apples_percentage_rounded_rounded_rounded*100).toInt\n        val\
    \ oranges_percentage_rounded_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded_rounded*100).toInt\n\
    \        val mangos_percentage_rounded_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded_rounded*100).toInt\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded_rounded_rounded*100).toInt\n\
    \        val oranges_percentage_rounded_roun", "        val apples = s.split(\"\
    \ \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n      \
    \  val mangos = s.split(\" \").map(_.toInt)\n        val fruits = apples ++ oranges\
    \ ++ mangos\n        val basket = fruits.toSet\n        val totalFruits = fruits.toSet.size\n\
    \        val totalApples = apples.toSet.size\n        val totalOranges = oranges.toSet.size\n\
    \        val totalMangos = mangos.toSet.size\n        val totalBasket = basket.size\n\
    \        val totalFruitsPerBasket = fruits.toSet.size / basket.size\n        val\
    \ totalApplesPerBasket = apples.toSet.size / basket.size\n        val totalOrangesPerBasket\
    \ = oranges.toSet.size / basket.size\n        val totalMangosPerBasket = mangos.toSet.size\
    \ / basket.size\n        val totalBasketPerFruit = fruits.toSet.size / fruits.size\n\
    \        val totalApplesPerFruit = apples.toSet.size / fruits.size\n        val\
    \ totalOrangesPerFruit = oranges.toSet.size / fruits.size\n        val totalMangosPerFruit\
    \ = mangos.toSet.size / fruits.size\n        val totalFruitsPerFruit = fruits.toSet.size\
    \ / fruits.size\n        val totalApplesPerFruitPerBasket = apples.toSet.size\
    \ / fruits.size / basket.size\n        val totalOrangesPerFruitPerBasket = oranges.toSet.size\
    \ / fruits.size / basket.size\n        val totalMangosPerFruitPerBasket = mangos.toSet.size\
    \ / fruits.size / basket.size\n        val totalBasketPerFruitPerFruit = fruits.toSet.size\
    \ / fruits.size / fruits.size\n        val totalApplesPerFruitPerFruit = apples.toSet.size\
    \ / fruits.size / fruits.size\n        val totalOrangesPerFruitPerFruit = oranges.toSet.size\
    \ / fruits.size / fruits.size\n        val totalMangosPerFruitPerFruit = mangos.toSet.size\
    \ / fruits.size / fruits.size\n        val totalBasketPerFruitPerFruitPerBasket\
    \ = fruits.toSet.size / fruits.size / fruits.size / basket.size\n        val totalApplesPerFruitPerFru",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = n - apples - oranges\n        val fruits = apples + oranges + mangos\n   \
    \     fruits", "        val apples = s.toInt\n        val oranges = s.toInt\n\
    \        val fruits = apples + oranges\n        val mangos = n - fruits\n    \
    \    fruits + mangos", "        val apples = s.split(\" \")\n        val oranges\
    \ = s.split(\" \")\n        val fruits = s.split(\" \")\n        val apples_count\
    \ = apples.map(_.toInt).sum\n        val oranges_count = oranges.map(_.toInt).sum\n\
    \        val fruits_count = fruits.map(_.toInt).sum\n        val mangos = n -\
    \ apples_count - oranges_count - fruits_count\n        mangos", "        val apples\
    \ = s.split(\" \")(0).toLong\n        val oranges = s.split(\" \")(1).toLong\n\
    \        val mangos = s.split(\" \")(2).toLong\n        val total = apples + oranges\
    \ + mangos\n        val apples_count = apples.toLong\n        val oranges_count\
    \ = oranges.toLong\n        val mangos_count = mangos.toLong\n        val apples_count\
    \ = apples_count - oranges_count - mangos_count\n        val apples_count = apples_count\
    \ - mangos_count\n        val apples_count = apples_count - oranges_count\n  \
    \      val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count\n        val apples_count\
    \ = apples_count - mangos_count\n        val apples_count = apples_count - oranges_count\n\
    \        val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n", "        val apples = s.split(\"apples\"\
    )(0).toInt\n        val oranges = s.split(\"oranges\")(0).toInt\n        val mangos\
    \ = s.split(\"mango\")(0).toInt\n        val total = apples + oranges + mangos\n\
    \        val apples_count = apples / total\n        val oranges_count = oranges\
    \ / total\n        val mangos_count = mangos / total\n        val apples_remain\
    \ = apples % total\n        val oranges_remain = oranges % total\n        val\
    \ mangos_remain = mangos % total\n        val apples_count = apples_remain + apples_count\n\
    \        val oranges_count = oranges_remain + oranges_count\n        val mangos_count\
    \ = mangos_remain + mangos_count\n        apples_count * oranges_count * mangos_count",
  "        val apples = s.split(\" \")(0)\n        val oranges = s.split(\" \")(1)\n\
    \        val mangos = s.split(\" \")(2)\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val apples_total = apples_count + oranges_count + mangos_count\n    \
    \    val oranges_total = apples_count - mangos_count\n        val mangos_total\
    \ = oranges_count - apples_count\n        val apples_percentage = apples_count\
    \ / apples_total\n        val oranges_percentage = oranges_count / oranges_total\n\
    \        val mangos_percentage = mangos_count / mangos_total\n        val apples_percentage_rounded\
    \ = math.round(apples_percentage * 100).toInt\n        val oranges_percentage_rounded\
    \ = math.round(oranges_percentage * 100).toInt\n        val mangos_percentage_rounded\
    \ = math.round(mangos_percentage * 100).toInt\n        val apples_percentage_rounded_rounded\
    \ = math.round(apples_percentage_rounded * 100).toInt\n        val oranges_percentage_rounded_rounded\
    \ = math.round(oranges_percentage_rounded * 100).toInt\n        val mangos_percentage_rounded_rounded\
    \ = math.round(mangos_percentage_rounded * 100).toInt\n        val apples_percentage_rounded_rounded_rounded\
    \ = math.round(apples_percentage_rounded_rounded * 100).toInt\n        val oranges_percentage_rounded_rounded_rounded\
    \ = math.round(oranges_percentage_rounded_rounded * 100).toInt\n        val mangos_percentage_rounded_rounded_rounded\
    \ = math.round(mangos_percentage_rounded_rounded * 100).toInt\n        val apples_percentage_rounded_rounded_rounded_rounded\
    \ = math.round(apples_percentage_rounded_rounded_rounded * 100).toInt\n      \
    \  val oranges_percentage_rounded_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded_rounded\
    \ * 100).toInt\n        val mangos_percentage_rounded_rounded_rounded_rounded\
    \ = math.round(mangos_percentage_rounded_rounded_rounded * 100).toInt\n      \
    \  val apples_percentage_rounded_rounded_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded_rounded_rounded\
    \ * 100).toInt\n        val oranges_percentage_rounded_rounded_rounded_rounded_rounded\
    \ = math.round(oranges_percentage_rounded_rounded_rounded_rounded * 100).toInt\n\
    \        val mangos_percentage_rounded_rounded_rounded_rounded_rounded = math.round(mang",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val mangos\
    \ = s.toInt\n        val basket = new mutable.HashMap[String, Int]()\n       \
    \ basket.put(\"apples\", apples)\n        basket.put(\"oranges\", oranges)\n \
    \       basket.put(\"mangos\", mangos)\n        val totalFruits = apples + oranges\
    \ + mangos\n        val totalFruitsCount = apples + oranges + mangos\n       \
    \ val fruitsInBasket = basket.filter(_._2 > 0).map(_._1).sum\n        val mangoFruits\
    \ = fruitsInBasket - fruitsInBasket.filter(_._2 == 1).map(_._1).sum\n        mangoFruits",
  "        val apples = s.split(\"apples\")(0)\n        val oranges = s.split(\"oranges\"\
    )(0)\n        val mangos = s.split(\"mango\")(0)\n        val apples_count = apples.toLong\n\
    \        val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.toLong\n \
    \       val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.toLong\n \
    \       val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.toLong\n \
    \       val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.toLong\n \
    \       val oranges_count = oranges.toLong\n        val mangos_count = mangos.toLong\n\
    \        val total_count = apples_count + oranges_count + mangos_count\n     \
    \   val apples_count = apples.toLong\n        val oranges_count = oranges.toLong\n\
    \        val mangos_count = mangos.toLong\n        val total_count = apples_count\
    \ + oranges_count + mangos_count\n        val apples_count = apples.toLong\n \
    \       val oranges_count = oranges.toLong\n        val ", "        val apples\
    \ = s.toInt\n        val oranges = s.toInt\n        val fruits = apples + oranges\n\
    \        val mangos = n - fruits\n        fruits + mangos", "        val apples\
    \ = s.toInt\n        val oranges = s.toInt\n        val fruits = apples + oranges\n\
    \        val mangos = n - fruits\n        mangos", "        val apples = n.toInt\n\
    \        val oranges = s.toInt\n        val fruits = apples + oranges\n      \
    \  val mangos = fruits - apples - oranges\n        mangos", "        val apples\
    \ = s.split(\" \").map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n\
    \        val mangos = s.split(\" \").map(_.toInt)\n        val basket = new mutable.HashMap[String,\
    \ Int]()\n        basket.put(\"apples\", apples.sum)\n        basket.put(\"oranges\"\
    , oranges.sum)\n        basket.put(\"mangos\", mangos.sum)\n        val totalFruits\
    \ = apples.sum + oranges.sum + mangos.sum\n        val totalFruitsCount = apples.sum\
    \ + oranges.sum + mangos.sum\n        val mangoFruits = totalFruits - totalFruitsCount\n\
    \        val mangoFruitsCount = totalFruitsCount - apples.sum - oranges.sum\n\
    \        val mangoFruitsCount2 = totalFruitsCount - apples.sum - oranges.sum -\
    \ mangos.sum\n        val mangoFruitsCount3 = totalFruitsCount - apples.sum -\
    \ oranges.sum - mangos.sum - basket.get(\"mangos\")\n        val mangoFruitsCount4\
    \ = totalFruitsCount - apples.sum - oranges.sum - mangos.sum - basket.get(\"mangos\"\
    ) - basket.get(\"apples\")\n        val mangoFruitsCount5 = totalFruitsCount -\
    \ apples.sum - oranges.sum - mangos.sum - basket.get(\"mangos\") - basket.get(\"\
    oranges\")\n        val mangoFruitsCount6 = totalFruitsCount - apples.sum - oranges.sum\
    \ - mangos.sum - basket.get(\"mangos\") - basket.get(\"oranges\") - basket.get(\"\
    apples\")\n        val mangoFruitsCount7 = totalFruitsCount - apples.sum - oranges.sum\
    \ - mangos.sum - basket.get(\"mangos\") - basket.get(\"oranges\") - basket.get(\"\
    apples\") - basket.get(\"mangos\")\n        val mangoFruitsCount8 = totalFruitsCount\
    \ - apples.sum - oranges.sum - mangos.sum - basket.get(\"mangos\") - basket.get(\"\
    oranges\") - basket.get(\"apples\") - basket.get(\"mangos\") - basket.get(\"oranges\"\
    )\n        val mangoFruitsCount9 = totalFruitsCount - apples.sum - oranges.",
  "        val apples = s.split(\"apples\")(0).toLong\n        val oranges = s.split(\"\
    oranges\")(0).toLong\n        val mangos = s.split(\"mango\")(0).toLong\n    \
    \    val fruits = apples + oranges + mangos\n        fruits.toLong - n - mangos",
  "        val apples = s.split(\"apples\")(1).trim\n        val oranges = s.split(\"\
    oranges\")(1).trim\n        val mangos = s.split(\"mango\")(1).trim\n        val\
    \ apples_count = apples.toInt\n        val oranges_count = oranges.toInt\n   \
    \     val mangos_count = mangos.toInt\n        val apples_total = apples_count\
    \ + oranges_count + mangos_count\n        val oranges_total = apples_count - mangos_count\n\
    \        val mangos_total = apples_total - oranges_count\n        val apples_percentage\
    \ = apples_total / apples_count * 100\n        val oranges_percentage = oranges_total\
    \ / oranges_count * 100\n        val mangos_percentage = mangos_total / mangos_count\
    \ * 100\n        val apples_percentage_rounded = math.round(apples_percentage)\n\
    \        val oranges_percentage_rounded = math.round(oranges_percentage)\n   \
    \     val mangos_percentage_rounded = math.round(mangos_percentage)\n        val\
    \ apples_percentage_rounded_rounded = math.round(apples_percentage_rounded)\n\
    \        val oranges_percentage_rounded_rounded = math.round(oranges_percentage_rounded)\n\
    \        val mangos_percentage_rounded_rounded = math.round(mangos_percentage_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded)\n\
    \        val mangos_percentage_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded_rounded)\n\
    \        val mangos_percentage_rounded_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded_rounded)\n\
    \        val apples_percentage_rounded_rounded_rounded_rounded_rounded = math.round(apples_percentage_rounded_rounded_rounded_rounded)\n\
    \        val oranges_percentage_rounded_rounded_rounded_rounded_rounded = math.round(oranges_percentage_rounded_rounded_rounded_rounded)\n\
    \        val mangos_percentage_rounded_rounded_rounded_rounded_rounded = math.round(mangos_percentage_rounded_rounded_rounded_rounded)",
  "        val arr = s.split(\" \")\n        val apples = arr.map(_.toInt)\n     \
    \   val oranges = arr.filter(_.toString.contains(\"oranges\")).map(_.toInt)\n\
    \        val mangoes = arr.filter(_.toString.contains(\"mango\")).map(_.toInt)\n\
    \        val totalApples = apples.sum\n        val totalOranges = oranges.sum\n\
    \        val totalMangoes = mangoes.sum\n        val totalFruits = totalApples\
    \ + totalOranges + totalMangoes\n        val appleFruits = apples.sum\n      \
    \  val orangeFruits = oranges.sum\n        val mangoFruits = mangoes.sum\n   \
    \     val fruits = appleFruits + orangeFruits + mangoFruits\n        val appleFruitsPerApple\
    \ = appleFruits / totalApples\n        val orangeFruitsPerOrange = orangeFruits\
    \ / totalOranges\n        val mangoFruitsPerMango = mangoFruits / totalMangoes\n\
    \        val fruitPerApple = appleFruitsPerApple * n\n        val fruitPerOrange\
    \ = orangeFruitsPerOrange * n\n        val fruitPerMango = mangoFruitsPerMango\
    \ * n\n        fruitPerApple + fruitPerOrange + fruitPerMango", "        val apples\
    \ = s.toInt\n        val oranges = s.toInt\n        val mangos = s.toInt\n   \
    \     val fruits = apples + oranges + mangos\n        val apples_count = apples.toInt\n\
    \        val oranges_count = oranges.toInt\n        val mangos_count = mangos.toInt\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count - oranges_count - mangos_count\n    \
    \    val apples_count = apples_count - mangos_count\n        val apples_count\
    \ = apples_count - oranges_count\n        val apples_count = apples_count - mangos_count\n\
    \        val apples_count = apples_count ", "        val apples = s.split(\" \"\
    ).map(_.toInt)\n        val oranges = s.split(\" \").map(_.toInt)\n        val\
    \ fruits = apples ++ oranges\n        val mangoes = fruits.filter(_ % 2 == 0)\n\
    \        fruits.size - mangoes.size", "        val apples = s.split(\" \").map(_.toInt)\n\
    \        val oranges = s.split(\" \").map(_.toInt)\n        val mangos = s.split(\"\
    \ \").map(_.toInt)\n        val apples_count = apples.sum\n        val oranges_count\
    \ = oranges.sum\n        val mangos_count = mangos.sum\n        val apples_total\
    \ = apples_count + apples_count - 1\n        val oranges_total = oranges_count\
    \ + oranges_count - 1\n        val mangos_total = mangos_count + mangos_count\
    \ - 1\n        val apples_distribution = apples.map(x => (x/apples_total).toInt)\n\
    \        val oranges_distribution = oranges.map(x => (x/oranges_total).toInt)\n\
    \        val mangos_distribution = mangos.map(x => (x/mangos_total).toInt)\n \
    \       val apples_distribution_sum = apples_distribution.sum\n        val oranges_distribution_sum\
    \ = oranges_distribution.sum\n        val mangos_distribution_sum = mangos_distribution.sum\n\
    \        val apples_distribution_sum_2 = apples_distribution_sum * apples_distribution_sum\n\
    \        val oranges_distribution_sum_2 = oranges_distribution_sum * oranges_distribution_sum\n\
    \        val mangos_distribution_sum_2 = mangos_distribution_sum * mangos_distribution_sum\n\
    \        val apples_distribution_sum_3 = apples_distribution_sum * apples_distribution_sum\
    \ * apples_distribution_sum\n        val oranges_distribution_sum_3 = oranges_distribution_sum\
    \ * oranges_distribution_sum * oranges_distribution_sum\n        val mangos_distribution_sum_3\
    \ = mangos_distribution_sum * mangos_distribution_sum * mangos_distribution_sum\n\
    \        val apples_distribution_sum_4 = apples_distribution_sum * apples_distribution_sum\
    \ * apples_distribution_sum * apples_distribution_sum\n        val oranges_distribution_sum_4\
    \ = oranges_distribution_sum * oranges_distribution_sum * oranges_distribution_sum\
    \ * oranges_distribution_sum\n        val mangos_distribution_sum_4 = mangos_distribution_sum\
    \ * mangos_distribution_sum * mangos_distribution_sum * mangos_distribution_sum\n\
    \        val apples_distribution_sum_5 = apples_distribution_sum * apples_distribution_sum\
    \ * apples_distribution_sum * apples_distribution_sum * apples_distribution_sum\n\
    \        val oranges_distribution_sum_5 = oranges_distribution_sum * oranges_distribution_sum\
    \ * oranges_distribution_sum * oranges_distribution_sum * oranges_distribution",
  "        val apples = s.toInt\n        val oranges = s.toInt\n        val fruits\
    \ = apples + oranges\n        val mangos = n - fruits\n        fruits + mangos",
  "        val apples = s.split(\"apples and \")\n        val oranges = s.split(\"\
    oranges and \")\n        val fruits = s.split(\"fruits in basket \")\n       \
    \ val apples_count = apples(0).split(\" \").map(_.toInt)\n        val oranges_count\
    \ = oranges(0).split(\" \").map(_.toInt)\n        val fruits_count = fruits(0).split(\"\
    \ \").map(_.toInt)\n        val apples_sum = apples_count.sum\n        val oranges_sum\
    \ = oranges_count.sum\n        val fruits_sum = fruits_count.sum\n        val\
    \ mango_count = fruits_sum - apples_sum - oranges_sum\n        fruits_sum - apples_sum\
    \ - oranges_sum - mango_count", "        val apples = s.toInt\n        val oranges\
    \ = s.toInt\n        val mangos = n - apples - oranges\n        val apples_count\
    \ = apples.toInt\n        val oranges_count = oranges.toInt\n        val mangos_count\
    \ = mangos.toInt\n        val apples_sum = apples_count.toInt\n        val oranges_sum\
    \ = oranges_count.toInt\n        val mangos_sum = mangos_count.toInt\n       \
    \ val apples_percent = apples_sum.toDouble / apples_count.toDouble\n        val\
    \ oranges_percent = oranges_sum.toDouble / oranges_count.toDouble\n        val\
    \ mangos_percent = mangos_sum.toDouble / mangos_count.toDouble\n        val apples_percent\
    \ = apples_sum.toDouble / apples_count.toDouble\n        val oranges_percent =\
    \ oranges_sum.toDouble / oranges_count.toDouble\n        val mangos_percent =\
    \ mangos_sum.toDouble / mangos_count.toDouble\n        val apples_percent = apples_sum.toDouble\
    \ / apples_count.toDouble\n        val oranges_percent = oranges_sum.toDouble\
    \ / oranges_count.toDouble\n        val mangos_percent = mangos_sum.toDouble /\
    \ mangos_count.toDouble\n        val apples_percent = apples_sum.toDouble / apples_count.toDouble\n\
    \        val oranges_percent = oranges_sum.toDouble / oranges_count.toDouble\n\
    \        val mangos_percent = mangos_sum.toDouble / mangos_count.toDouble\n  \
    \      val apples_percent = apples_sum.toDouble / apples_count.toDouble\n    \
    \    val oranges_percent = oranges_sum.toDouble / oranges_count.toDouble\n   \
    \     val mangos_percent = mangos_sum.toDouble / mangos_count.toDouble\n     \
    \   val apples_percent = apples_sum.toDouble / apples_count.toDouble\n       \
    \ val oranges_percent = oranges_sum.toDouble / oranges_count.toDouble\n      \
    \  val mangos_percent = mangos_sum.toDouble / mangos_count.toDouble\n        val\
    \ apples_percent = apples_sum.toDouble / apples_count.toDouble\n        val oranges_percent\
    \ = oranges_sum.toDouble / oranges_count.toDouble\n        val mangos_percent\
    \ = mangos_sum.toDouble / mangos_count.toDouble\n        val apples_percent =\
    \ apples_sum.toDouble / apples_count.toDouble\n        val oranges_", "      \
    \  val apples = s.split(\"apples and \")\n        val oranges = s.split(\"oranges\
    \ and \")\n        val fruits = s.split(\"fruits and \")\n        val apples_count\
    \ = apples(0).split(\"and\").length\n        val oranges_count = oranges(0).split(\"\
    and\").length\n        val fruits_count = fruits(0).split(\"and\").length\n  \
    \      val apples_total = apples(1).split(\"and\").length\n        val oranges_total\
    \ = oranges(1).split(\"and\").length\n        val fruits_total = fruits(1).split(\"\
    and\").length\n        val apples_remain = n - apples_count - apples_total - apples_remain\n\
    \        val oranges_remain = n - oranges_count - oranges_total - oranges_remain\n\
    \        val fruits_remain = n - fruits_count - fruits_total - fruits_remain\n\
    \        fruits_remain - fruits_count - fruits_total", "        val fruits = s.split(\"\
    \ \")\n        val apples = fruits(0).toLong\n        val oranges = fruits(1).toLong\n\
    \        val mangoes = n - apples - oranges\n        fruits.last.toLong - fruits(0).toLong\
    \ - fruits(1).toLong", "        val apples = s.split(\"apples\")(0).toInt\n  \
    \      val oranges = s.split(\"oranges\")(0).toInt\n        val mangos = s.split(\"\
    mango\")(0).toInt\n        val basket = new mutable.HashMap[String, Int]()\n \
    \       basket.put(\"apples\", apples)\n        basket.put(\"oranges\", oranges)\n\
    \        basket.put(\"mango\", mangos)\n        val totalFruits = apples + oranges\
    \ + mangos\n        val fruitsInBasket = basket.filter(_._2 > 0).map(_._1).sum\n\
    \        fruitsInBasket - mangos", "        val apples = s.split(\"apples\")(0).trim\n\
    \        val oranges = s.split(\"oranges\")(0).trim\n        val mangos = s.split(\"\
    mangos\")(0).trim\n        val apples_count = apples.toInt\n        val oranges_count\
    \ = oranges.toInt\n        val mangos_count = mangos.toInt\n        val apples_total\
    \ = apples_count + oranges_count + mangos_count\n        val oranges_total = apples_count\
    \ - mangos_count\n        val mangos_total = apples_count - oranges_count\n  \
    \      val apples_percentage = apples_count / apples_total\n        val oranges_percentage\
    \ = oranges_count / oranges_total\n        val mangos_percentage = mangos_count\
    \ / mangos_total\n        val apples_percentage_of_total = apples_percentage *\
    \ apples_total\n        val oranges_percentage_of_total = oranges_percentage *\
    \ oranges_total\n        val mangos_percentage_of_total = mangos_percentage *\
    \ mangos_total\n        val apples_percentage_of_total_with_mangos = apples_percentage_of_total\
    \ + mangos_percentage_of_total\n        val oranges_percentage_of_total_with_mangos\
    \ = oranges_percentage_of_total + mangos_percentage_of_total\n        val mangos_percentage_of_total_with_mangos\
    \ = mangos_percentage_of_total + mangos_percentage_of_total\n        val apples_percentage_of_total_with_mangos_with_mangos\
    \ = apples_percentage_of_total_with_mangos + mangos_percentage_of_total_with_mangos\n\
    \        val oranges_percentage_of_total_with_mangos_with_mangos = oranges_percentage_of_total_with_mangos\
    \ + mangos_percentage_of_total_with_mangos\n        val mangos_percentage_of_total_with_mangos_with_mangos\
    \ = mangos_percentage_of_total_with_mangos + mangos_percentage_of_total_with_mangos\n\
    \        val apples_percentage_of_total_with_mangos_with_mangos_with_mangos =\
    \ apples_percentage_of_total_with_mangos_with_mangos + mangos_percentage_of_total_with_mangos_with_mangos\n\
    \        val oranges_percentage_of_total_with_mangos_with_mangos_with_mangos =\
    \ oranges_percentage_of_total_with_mangos_with_mangos + mangos_percentage_of_total_with_mangos_with_mangos\n\
    \        val mangos_percentage_of_total_with_mangos_with_mangos_with_mangos =\
    \ mangos_percentage_of_total_with_mangos_with_mangos + mangos_percentage_of_total_with_mangos_with_mangos\n\
    \        ", "        val fruits = s.split(\" \")\n        val apples = fruits(0).toLong\n\
    \        val oranges = fruits(1).toLong\n        val mangos = n - apples - oranges\n\
    \        fruits match {\n            case Array(a,b,c) =>\n                if(a>b)\
    \ fruitDistribution(s.replaceAll(\"apples\", \"oranges\"), n)\n              \
    \  else fruitDistribution(s.replaceAll(\"oranges\", \"apples\"), n)\n        \
    \    case Array(a,b,c,d) =>\n                if(a>b) fruitDistribution(s.replaceAll(\"\
    apples\", \"mangoes\"), n)\n                else fruitDistribution(s.replaceAll(\"\
    mangoes\", \"apples\"), n)\n            case Array(a,b,c,d,e) =>\n           \
    \     if(a>b) fruitDistribution(s.replaceAll(\"apples\", \"mangoes\"), n)\n  \
    \              else fruitDistribution(s.replaceAll(\"mangoes\", \"apples\"), n)\n\
    \            case Array(a,b,c,d,e,f) =>\n                if(a>b) fruitDistribution(s.replaceAll(\"\
    apples\", \"mangoes\"), n)\n                else fruitDistribution(s.replaceAll(\"\
    mangoes\", \"apples\"), n)\n            case Array(a,b,c,d,e,f,g) =>\n       \
    \         if(a>b) fruitDistribution(s.replaceAll(\"apples\", \"mangoes\"), n)\n\
    \                else fruitDistribution(s.replaceAll(\"mangoes\", \"apples\"),\
    \ n)\n            case Array(a,b,c,d,e,f,g,h) =>\n                if(a>b) fruitDistribution(s.replaceAll(\"\
    apples\", \"mangoes\"), n)\n                else fruitDistribution(s.replaceAll(\"\
    mangoes\", \"apples\"), n)\n            case Array(a,b,c,d,e,f,g,h,i) =>\n   \
    \             if(a>b) fruitDistribution(s.replaceAll(\"apples\", \"mangoes\"),\
    \ n)\n                else fruitDistribution(s.replaceAll(\"mangoes\", \"apples\"\
    ), n)\n            case Array(a,b,c,d,e,f,g,h,i,j) =>\n                if(a>b)\
    \ fruitDistribution(s.replaceAll(\"apples\", \"mangoes\"), n)\n              \
    \  else fruitDistribution(s.replaceAll(\"mangoes\", \"apples\"), n)\n        \
    \    case Array(a,b,c,d,e,f,g,h,i,j,k) =>\n                if(a>b) fruitDistribution(s.replaceAll(\"\
    apples\", \"mangoes\"), n)\n                else fruitDistribution(s.replaceAll(\"\
    mangoes\", \"apples\"), n)\n            case Array(a,b,c,d,e,f,g,h,i,j,k,l) "]
stop_tokens:
- "\n    }\n"

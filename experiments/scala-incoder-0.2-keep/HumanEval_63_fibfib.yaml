name: HumanEval_63_fibfib
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) == 0\n   \
  \ // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  \    // Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n    // >>> fibfib(1)\n    // 0\n    // >>> fibfib(5)\n    //\
  \ 4\n    // >>> fibfib(8)\n    // 24\n    def fibfib(n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fibfib((2l)) == (1l));\n\
  \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
  \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n\
  \    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
completions: ["        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0,\
    \ 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib.put(n,\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n        fibfib.get(n)", "        val\
    \ fibfibs = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n\
    \        fibfib(n) match {\n            case 0 => 0L\n            case 1 => fibfib.get(n-1)\
    \ + fibfib.get(n-2) + fibfib.get(n-3)\n            case 2 => fibfib.get(n-1) +\
    \ fibfib.get(n-2)\n            case n => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n\
    \        }", "        val fibfib = new mutable.Array[Long](n)\n        fibfib(0)\
    \ = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.clear()\n        fibfib.add(0)\n        fibfib.add(1)\n      \
    \  fibfib(n-1).foreach(x => fibfib.add(x+fibfib(n-2)))\n        fibfib(n-1).foreach(x\
    \ => fibfib.add(x+fibfib(n-3)))\n        fibfib(n-1)", "        val fibfib = new\
    \ mutable.HashSet[Long]()\n        fibfib.add(0)\n        fibfib.add(1)\n    \
    \    fibfib.add(2)\n        fibfib(n) {\n            fibfib.add(fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3))\n        }\n        fibfib(n)", "        if (n <=\
    \ 0) 0\n        else if (n <= 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        val fibfib = new mutable.HashSet[Long]()\n        fibfib.add(0)\n     \
    \   fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) {\n            fibfib.add(_\
    \ + _ + _)\n        }\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2,\
    \ 1L)\n        fibfib(n) match {\n            case 0 => 0L\n            case 1\
    \ => fibfib.get(1L)\n            case 2 => fibfib.get(2L) + fibfib.get(1L) + fibfib.get(0L)\n\
    \            case n => fibfib.get(n - 3L) + fibfib.get(n - 2L) + fibfib.get(n\
    \ - 1L)\n        }", "        val fibfibs = mutable.ArrayBuffer(0)\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfib", "        if (n == 0)\
    \ 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibArray(0) = 0\n        fibfibArray(1) = 0\n        fibfibArray(2)\
    \ = 1\n        fibfibArray(n) = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n\
    \        fibfibArray(n)", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(1)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.Array[Long](5)\n        fibfib(0) = 0\n     \
    \   fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.clear()\n        fibfib.push(0L)\n        fibfib.push(1L)\n  \
    \      fibfib.push(2L)\n        fibfib(n) match {\n            case 0 => 0\n \
    \           case 1 => 0\n            case 2 => 1\n            case n => {\n  \
    \              fibfib(n-1) match {\n                    case 0 => 0\n        \
    \            case 1 => 0\n                    case 2 => 1\n                  \
    \  case n => {\n                        fibfib(n-2) match {\n                \
    \            case 0 => 0\n                            case 1 => 0\n          \
    \                  case 2 => 1\n                            case n => {\n    \
    \                            fibfib(n-3) match {\n                           \
    \         case 0 => 0\n                                    case 1 => 0\n     \
    \                               case 2 => 1\n                                \
    \    case n => {\n                                        fibfib(n) match {\n\
    \                                            case 0 => 0\n                   \
    \                         case 1 => 0\n                                      \
    \      case 2 => 1\n                                            case n => {\n\
    \                                                fibfib(n-1) match {\n       \
    \                                             case 0 => 0\n                  \
    \                                  case 1 => 0\n                             \
    \                       case 2 => 1\n                                        \
    \            case n => {\n                                                   \
    \     fibfib(n-2) match {\n                                                  \
    \          case 0 => 0\n                                                     \
    \       case 1 => 0\n                                                        \
    \    case 2 => 1\n                                                           \
    \ case n => {\n                                                              \
    \  fibfib(n-3) match {\n                                                     \
    \               case 0 => 0\n                                                \
    \                    case 1 => 0\n                                           \
    \                         case 2 => 1\n                                      \
    \                              case n => {\n                                 \
    \                                       fibfib(n) match {\n                  \
    \                                                          case 0 => 0\n     \
    \                                                                       case 1\
    \ => 0\n                                                                     \
    \       case 2 => 1\n                                                        \
    \                    case n => n\n                                           \
    \                             }\n                                            \
    \                        }\n                                                 \
    \               }\n                                                          \
    \  }\n                                                        }\n            \
    \                                        }\n                                 \
    \               }\n                                            }\n           \
    \                             }\n                                    }\n     \
    \                           }\n                            }\n               \
    \         }\n                    }\n                }\n            }\n       \
    \ }", "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.clear()\n\
    \        fibfib(0)\n        fibfib(1)\n        fibfib(2)\n        fibfib(n) {\n\
    \            fibfib(n-1)\n            fibfib(n-2)\n            fibfib(n-3)\n \
    \       }\n        fibfib.last", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList.empty\n        var i : Long = 1\n        while (i <= n)\
    \ {\n            fib += i\n            i += 2\n        }\n        fib(0)", " \
    \       var fib : mutable.MutableList[Long] = mutable.MutableList(1)\n       \
    \ var fibfib : mutable.MutableList[Long] = mutable.MutableList(1)\n        fibfib(0)\
    \ = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        if (n == 0) 0\n  \
    \      else if (n == 1) 1\n        else if (n == 2) 1\n        else if (n > 2)\
    \ fibfib(n-1) + fibfib(n-2)\n        else fibfib(n-1) + fibfib(n-2)", "      \
    \  val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0L)\n\
    \        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer(0)\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 1\n        fibfibs\
    \ += 2\n        fibfibs += 3\n        fibfibs += 4\n        fibfibs += 5\n   \
    \     fibfibs += 6\n        fibfibs += 7\n        fibfibs += 8\n        fibfibs\
    \ += 9\n        fibfibs += 10\n        fibfibs += 11\n        fibfibs += 12\n\
    \        fibfibs += 13\n        fibfibs += 14\n        fibfibs += 15\n       \
    \ fibfibs += 16\n        fibfibs += 17\n        fibfibs += 18\n        fibfibs\
    \ += 19\n        fibfibs += 20\n        fibfibs += 21\n        fibfibs += 22\n\
    \        fibfibs += 23\n        fibfibs += 24\n        fibfibs += 25\n       \
    \ fibfibs += 26\n        fibfibs += 27\n        fibfibs += 28\n        fibfibs\
    \ += 29\n        fibfibs += 30\n        fibfibs += 31\n        fibfibs += 32\n\
    \        fibfibs += 33\n        fibfibs += 34\n        fibfibs += 35\n       \
    \ fibfibs += 36\n        fibfibs += 37\n        fibfibs += 38\n        fibfibs\
    \ += 39\n        fibfibs += 40\n        fibfibs += 41\n        fibfibs += 42\n\
    \        fibfibs += 43\n        fibfibs += 44\n        fibfibs += 45\n       \
    \ fibfibs += 46\n        fibfibs += 47\n        fibfibs += 48\n        fibfibs\
    \ += 49\n        fibfibs += 50\n        fibfibs += 51\n        fibfibs += 52\n\
    \        fibfibs += 53\n        fibfibs += 54\n        fibfibs += 55\n       \
    \ fibfibs += 56\n        fibfibs += 57\n        fibfibs += 58\n        fibfibs\
    \ += 59\n        fibfibs += 60\n        fibfibs += 61\n        fibfibs += 62\n\
    \        fibfibs += 63\n        fibfibs += 64\n        fibfibs += 65\n       \
    \ fibfibs += 66\n        fibfibs += 67\n        fibfibs += 68\n        fibfibs\
    \ += 69\n        fibfibs += 70\n        fibfibs += 71\n        fibfibs += 72\n\
    \        fibfibs += 73\n        fibfibs += 74\n        fibfibs += 75\n       \
    \ fibfibs += 76\n        fibfibs += 77\n        fibfibs += 78\n        fibfibs\
    \ += 79\n        fibfibs += 80\n        fibfibs += 81\n        fibfib", "    \
    \    if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n \
    \       else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfibs =\
    \ mutable.ArrayBuffer(0, 1).withDefaultValue(0)\n        fibfibs(n)", "      \
    \  val fibfibs = mutable.ListBuffer[Long]()\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 1\n        fibfibs += 2\n        fibfibs += 3\n   \
    \     fibfibs += 4\n        fibfibs += 5\n        fibfibs += 6\n        fibfibs\
    \ += 7\n        fibfibs += 8\n        fibfibs += 9\n        fibfibs += 10\n  \
    \      fibfibs += 11\n        fibfibs += 12\n        fibfibs += 13\n        fibfibs\
    \ += 14\n        fibfibs += 15\n        fibfibs += 16\n        fibfibs += 17\n\
    \        fibfibs += 18\n        fibfibs += 19\n        fibfibs += 20\n       \
    \ fibfibs += 21\n        fibfibs += 22\n        fibfibs += 23\n        fibfibs\
    \ += 24\n        fibfibs += 25\n        fibfibs += 26\n        fibfibs += 27\n\
    \        fibfibs += 28\n        fibfibs += 29\n        fibfibs += 30\n       \
    \ fibfibs += 31\n        fibfibs += 32\n        fibfibs += 33\n        fibfibs\
    \ += 34\n        fibfibs += 35\n        fibfibs += 36\n        fibfibs += 37\n\
    \        fibfibs += 38\n        fibfibs += 39\n        fibfibs += 40\n       \
    \ fibfibs += 41\n        fibfibs += 42\n        fibfibs += 43\n        fibfibs\
    \ += 44\n        fibfibs += 45\n        fibfibs += 46\n        fibfibs += 47\n\
    \        fibfibs += 48\n        fibfibs += 49\n        fibfibs += 50\n       \
    \ fibfibs += 51\n        fibfibs += 52\n        fibfibs += 53\n        fibfibs\
    \ += 54\n        fibfibs += 55\n        fibfibs += 56\n        fibfibs += 57\n\
    \        fibfibs += 58\n        fibfibs += 59\n        fibfibs += 60\n       \
    \ fibfibs += 61\n        fibfibs += 62\n        fibfibs += 63\n        fibfibs\
    \ += 64\n        fibfibs += 65\n        fibfibs += 66\n        fibfibs += 67\n\
    \        fibfibs += 68\n        fibfibs += 69\n        fibfibs += 70\n       \
    \ fibfibs += 71\n        fibfibs += 72\n        fibfibs += 73\n        fibfibs\
    \ += 74\n        fibfibs += 75\n        fibfibs += 76\n        fibfibs += 77\n\
    \        fibfibs += 78\n        fibfibs += 79\n        fibfibs += 80\n       \
    \ fibfibs += 81\n", "        val fibfib = new mutable.MutableList[Long]()\n  \
    \      fibfib.clear()\n        fibfib.add(0)\n        fibfib.add(1)\n        fibfib(n).foreach(fibfib(n)\
    \ += fibfib(n-1))\n        fibfib(n).foreach(fibfib(n) += fibfib(n-2))\n     \
    \   fibfib(n).foreach(fibfib(n) += fibfib(n-3))\n        fibfib(n)", "       \
    \ val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0L)\n\
    \        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        if (n == 0) 0\n  \
    \      else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        var fib : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib1 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib2 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib3 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib4 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib5 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib6 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib7 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib8 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib9 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib10 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib11 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib12 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib13 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib14 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib15 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib16 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib17 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib18 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib19 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib20 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib21 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib22 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib23 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib24 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib25 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib26 : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var fibfib27 : mutable.MutableList[Long] = mutable.Mutable", "      \
    \  val fibfibArray = mutable.ArrayBuffer(0)\n        fibfibArray(0) = 0\n    \
    \    fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n) =\
    \ fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfibArray = mutable.ArrayBuffer(0)\n        fibfibArray += 0\n  \
    \      fibfibArray += 0\n        fibfibArray += 1\n        fibfibArray += 2\n\
    \        fibfibArray += 3\n        fibfibArray += 4\n        fibfibArray += 5\n\
    \        fibfibArray += 6\n        fibfibArray += 7\n        fibfibArray += 8\n\
    \        fibfibArray += 9\n        fibfibArray += 10\n        fibfibArray += 11\n\
    \        fibfibArray += 12\n        fibfibArray += 13\n        fibfibArray +=\
    \ 14\n        fibfibArray += 15\n        fibfibArray += 16\n        fibfibArray\
    \ += 17\n        fibfibArray += 18\n        fibfibArray += 19\n        fibfibArray\
    \ += 20\n        fibfibArray += 21\n        fibfibArray += 22\n        fibfibArray\
    \ += 23\n        fibfibArray += 24\n        fibfibArray += 25\n        fibfibArray\
    \ += 26\n        fibfibArray += 27\n        fibfibArray += 28\n        fibfibArray\
    \ += 29\n        fibfibArray += 30\n        fibfibArray += 31\n        fibfibArray\
    \ += 32\n        fibfibArray += 33\n        fibfibArray += 34\n        fibfibArray\
    \ += 35\n        fibfibArray += 36\n        fibfibArray += 37\n        fibfibArray\
    \ += 38\n        fibfibArray += 39\n        fibfibArray += 40\n        fibfibArray\
    \ += 41\n        fibfibArray += 42\n        fibfibArray += 43\n        fibfibArray\
    \ += 44\n        fibfibArray += 45\n        fibfibArray += 46\n        fibfibArray\
    \ += 47\n        fibfibArray += 48\n        fibfibArray += 49\n        fibfibArray\
    \ += 50\n        fibfibArray += 51\n        fibfibArray += 52\n        fibfibArray\
    \ += 53\n        fibfibArray += 54\n        fibfibArray += 55\n        fibfibArray\
    \ += 56\n        fibfibArray += 57\n        fibfibArray += 58\n        fibfibArray\
    \ += 59\n        fibfibArray += 60\n        fibfibArray += 61\n        fibfibArray\
    \ += 62\n        fibfibArray += 63\n        fibfibArray += 64\n        fibfibArray\
    \ += 65\n        fibfibArray += 66\n        fibfibArray += 67\n        fibfibArray\
    \ += 68\n        fibfibArray += 69\n        fibfibArray ", "        val fibfib\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib(n-2)", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList()\n        var i : Long = 1\n        while (i < n) {\n\
    \            fib += i\n            i += 1\n        }\n        fib(0)", "     \
    \   val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0L)\n\
    \        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib.put(n, fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\n        fibfib.get(n)", "        val fibfibs =\
    \ mutable.ArrayBuffer(0)\n        fibfibs += 0\n        fibfibs += 0\n       \
    \ fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfib", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(0,0)\n\
    \        fibfib(0)\n        fibfib(1)\n        fibfib(2)\n        fibfib(n) match\
    \ {\n            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n\
    \            case n => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        }", " \
    \       val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n).foreach(fibfib(n)\
    \ += fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n        fibfib(n)", "        if\
    \ (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n       \
    \ else if (n <= 3) fibfib(n-1) + fibfib(n-2)\n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        fibfib.add(0)\n        fibfib.add(1)\n        fibfib.add(2)\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.MutableList[Long]()\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) {\n         \
    \   fibfib.add(fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n        }\n        fibfib(n)",
  "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(0,1)\n   \
    \     fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n  \
    \          case 2 => 1\n            case _ => {\n                fibfib(n-1) match\
    \ {\n                    case 0 => 0\n                    case 1 => 1\n      \
    \              case 2 => fibfib(n-2) + fibfib(n-3)\n                    case _\
    \ => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n                }\n            }\n\
    \        }", "        if (n == 0) 0\n        else if (n == 1) 1\n        else\
    \ if (n == 2) 1\n        else if (n == 3) return 1\n        else fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)", "        if (n == 0) 0\n        else if (n == 1)\
    \ 1\n        else if (n == 2) 1\n        else if (n % 2 == 0) fibfib(n-1) + fibfib(n-2)\n\
    \        else fibfib(n-1) + fibfib(n-2)", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibArray(0) = 0\n        fibfibArray(1) = 0\n        fibfibArray(2)\
    \ = 1\n        fibfibArray(n) = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n\
    \        fibfibArray(n)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.clear()\n        fibfib.push(0L)\n        fibfib.push(1L)\n  \
    \      fibfib.push(2L)\n        fibfib(n) match {\n            case 0 => 0\n \
    \           case 1 => 0\n            case 2 => 1\n            case _ => {\n  \
    \              val fibfib2 = fibfib.toList\n                fibfib2.remove(fibfib2.length\
    \ - 2)\n                fibfib2.remove(fibfib2.length - 1)\n                fibfib2.last\n\
    \            }\n        }", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n     \
    \   fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n\
    \        var fibfibArrayIndex = 0\n        var fibfibArrayIndex2 = 0\n       \
    \ var fibfibArrayIndex3 = 0\n        var fibfibArrayIndex4 = 0\n        var fibfibArrayIndex5\
    \ = 0\n        var fibfibArrayIndex6 = 0\n        var fibfibArrayIndex7 = 0\n\
    \        var fibfibArrayIndex8 = 0\n        var fibfibArrayIndex9 = 0\n      \
    \  var fibfibArrayIndex10 = 0\n        var fibfibArrayIndex11 = 0\n        var\
    \ fibfibArrayIndex12 = 0\n        var fibfibArrayIndex13 = 0\n        var fibfibArrayIndex14\
    \ = 0\n        var fibfibArrayIndex15 = 0\n        var fibfibArrayIndex16 = 0\n\
    \        var fibfibArrayIndex17 = 0\n        var fibfibArrayIndex18 = 0\n    \
    \    var fibfibArrayIndex19 = 0\n        var fibfibArrayIndex20 = 0\n        var\
    \ fibfibArrayIndex21 = 0\n        var fibfibArrayIndex22 = 0\n        var fibfibArrayIndex23\
    \ = 0\n        var fibfibArrayIndex24 = 0\n        var fibfibArrayIndex25 = 0\n\
    \        var fibfibArrayIndex26 = 0\n        var fibfibArrayIndex27 = 0\n    \
    \    var fibfibArrayIndex28 = 0\n        var fibfibArrayIndex29 = 0\n        var\
    \ fibfibArrayIndex30 = 0\n        var fibfibArrayIndex31 = 0\n        var fibfibArrayIndex32\
    \ = 0\n        var fibfibArrayIndex33 = 0\n        var fibfibArrayIndex34 = 0\n\
    \        var fibfibArrayIndex35 = 0\n        var fibfibArrayIndex36 = 0\n    \
    \    var fibfibArrayIndex37 = 0\n        var fibfibArrayIndex38 = 0\n        var\
    \ fibfibArrayIndex39 = 0\n        var fibfibArrayIndex40 = 0\n        var fibfibArrayIndex41\
    \ = 0\n        var fibfibArrayIndex42 = 0\n        var fibfibArrayIndex43 = 0\n\
    \        var fibfibArrayIndex44 = 0\n        var fibfibArrayIndex45 = 0\n    \
    \    var fibfibArrayIndex46 = 0\n        var fibfibArrayIndex47 = 0\n        var\
    \ fibfibArrayIndex48 = 0\n        var fibfibArrayIndex49 = 0\n        var fibfibArrayIndex50\
    \ = 0\n        var fibfibArrayIndex51 = 0\n        var fibfibArrayIndex52 = 0\n\
    \        var fibfibArrayIndex53 = 0\n        var fibfibArrayIndex54 = 0\n    \
    \    var fibfibArrayIndex55 = 0\n        var fibfibArrayIndex56 = 0\n        var\
    \ fibfibArrayIndex57 = 0\n        var fibfibArrayIndex58 = 0\n        var fibfibArrayIndex59\
    \ = 0\n        var fibfibArrayIndex60 = 0\n        var fibfibArrayIndex61 = 0\n\
    \        var fibfibArrayIndex62 = 0\n        var fib", "        val fibfib = new\
    \ mutable.HashSet[Long]()\n        fibfib.add(0)\n        fibfib.add(1)\n    \
    \    fibfib.add(2)\n        fibfib(n) {\n            fibfib.add(_)\n         \
    \   fibfib(n-1)\n            fibfib(n-2)\n            fibfib(n-3)\n        }",
  "        val fibfib = new mutable.HashSet[Long]()\n        fibfib.add(0)\n     \
    \   fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer(0)\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfib", "       \
    \ val fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n        fibfib(1)\
    \ = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n        fibfib(n)", "        val fibfibArray = mutable.ArrayBuffer(0)\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfib", "      \
    \  val fibfibArray = Array(0, 1, 1, 2, 3)\n        val fibfibArrayLength = fibfibArray.length\n\
    \        val fibfibArrayIndex = (n - 1).toInt\n        val fibfibArrayElement\
    \ = fibfibArray(fibfibArrayIndex)\n        fibfibArrayElement", "        var fib\
    \ : mutable.MutableList[Long] = mutable.MutableList[Long]()\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n", "        val fibfib = new\
    \ mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0L)\n        fibfib.put(1,\
    \ 0L)\n        fibfib.put(2, 1L)\n        fibfib.put(n, n)\n        fibfib(n).map(_\
    \ + fibfib(n-1) + fibfib(n-2) + fibfib(n-3)).head", "        val fibfib = new\
    \ mutable.Array[Long](n)\n        fibfib(0) = 0\n        fibfib(1) = 0\n     \
    \   fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        if (n == 0) 0\n        else if (n == 1) 1\n    \
    \    else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0)\
    \ = 0\n        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0L)\n\
    \        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n).foreach(fibfib(n) += fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    \        fibfib(n).last", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n\
    \        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)",
  "        val fibfibs = mutable.ArrayBuffer(0)\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 1\n        fibfibs += 2\n        fibfibs += 3\n   \
    \     fibfibs += 4\n        fibfibs += 5\n        fibfibs += 6\n        fibfibs\
    \ += 7\n        fibfibs += 8\n        fibfibs += 9\n        fibfibs += 10\n  \
    \      fibfibs += 11\n        fibfibs += 12\n        fibfibs += 13\n        fibfibs\
    \ += 14\n        fibfibs += 15\n        fibfibs += 16\n        fibfibs += 17\n\
    \        fibfibs += 18\n        fibfibs += 19\n        fibfibs += 20\n       \
    \ fibfibs += 21\n        fibfibs += 22\n        fibfibs += 23\n        fibfibs\
    \ += 24\n        fibfibs += 25\n        fibfibs += 26\n        fibfibs += 27\n\
    \        fibfibs += 28\n        fibfibs += 29\n        fibfibs += 30\n       \
    \ fibfibs += 31\n        fibfibs += 32\n        fibfibs += 33\n        fibfibs\
    \ += 34\n        fibfibs += 35\n        fibfibs += 36\n        fibfibs += 37\n\
    \        fibfibs += 38\n        fibfibs += 39\n        fibfibs += 40\n       \
    \ fibfibs += 41\n        fibfibs += 42\n        fibfibs += 43\n        fibfibs\
    \ += 44\n        fibfibs += 45\n        fibfibs += 46\n        fibfibs += 47\n\
    \        fibfibs += 48\n        fibfibs += 49\n        fibfibs += 50\n       \
    \ fibfibs += 51\n        fibfibs += 52\n        fibfibs += 53\n        fibfibs\
    \ += 54\n        fibfibs += 55\n        fibfibs += 56\n        fibfibs += 57\n\
    \        fibfibs += 58\n        fibfibs += 59\n        fibfibs += 60\n       \
    \ fibfibs += 61\n        fibfibs += 62\n        fibfibs += 63\n        fibfibs\
    \ += 64\n        fibfibs += 65\n        fibfibs += 66\n        fibfibs += 67\n\
    \        fibfibs += 68\n        fibfibs += 69\n        fibfibs += 70\n       \
    \ fibfibs += 71\n        fibfibs += 72\n        fibfibs += 73\n        fibfibs\
    \ += 74\n        fibfibs += 75\n        fibfibs += 76\n        fibfibs += 77\n\
    \        fibfibs += 78\n        fibfibs += 79\n        fibfibs += 80\n       \
    \ fibfibs += 81\n        fibfib", "        if (n <= 0) 0\n        else if (n <=\
    \ 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib\
    \ = new mutable.MutableList[Long]()\n        fibfib.append(0)\n        fibfib.append(0)\n\
    \        fibfib.append(1)\n        fibfib(n) match {\n            case 0 => fibfib(0)\n\
    \            case 1 => fibfib(1)\n            case 2 => fibfib(2)\n          \
    \  case _ => {\n                val fibfib1 = fibfib(n-1)\n                val\
    \ fibfib2 = fibfib(n-2)\n                val fibfib3 = fibfib(n-3)\n         \
    \       fibfib(n) = fibfib1 + fibfib2 + fibfib3\n            }\n        }", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0,\
    \ 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib(n)\
    \ match {\n            case 0 => 0L\n            case 1 => fibfib.get(n-1) + fibfib.get(n-2)\
    \ + fibfib.get(n-3)\n            case 2 => fibfib.get(n-1) + fibfib.get(n-2)\n\
    \            case n => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \       }", "        if (n == 0) 0\n        else if (n == 1) 1\n        else if\
    \ (n == 2) 1\n        else if (n >= 3) fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList(0,1)\n        var fibfib : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib1 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib2 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib3 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib4 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib5 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib6 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib7 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib8 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib9 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib10 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib11 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib12 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib13 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib14 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib15 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib16 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib17 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib18 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib19 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib20 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib21 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib22 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib23 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib24 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib25 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib26 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0,1)\n        var fibfib27 : mutable.MutableList[Long] =\
    \ mutable.Mutable", "        val fibfib = new mutable.MutableList[Long]()\n  \
    \      fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => fibfib(0)\n            case\
    \ 1 => fibfib(1)\n            case 2 => fibfib(2)\n            case _ => {\n \
    \               fibfib(n) match {\n                    case 0 => fibfib(0)\n \
    \                   case 1 => fibfib(1)\n                    case 2 => fibfib(2)\n\
    \                    case _ => {\n                        fibfib(n) match {\n\
    \                            case 0 => fibfib(0)\n                           \
    \ case 1 => fibfib(1)\n                            case 2 => fibfib(2)\n     \
    \                       case _ => {\n                                fibfib(n)\
    \ match {\n                                    case 0 => fibfib(0)\n         \
    \                           case 1 => fibfib(1)\n                            \
    \        case 2 => fibfib(2)\n                                    case _ => {\n\
    \                                        fibfib(n) match {\n                 \
    \                           case 0 => fibfib(0)\n                            \
    \                case 1 => fibfib(1)\n                                       \
    \     case 2 => fibfib(2)\n                                            case _\
    \ => {\n                                                fibfib(n) match {\n  \
    \                                                  case 0 => fibfib(0)\n     \
    \                                               case 1 => fibfib(1)\n        \
    \                                            case 2 => fibfib(2)\n           \
    \                                         case _ => {\n                      \
    \                                  fibfib(n) match {\n                       \
    \                                     case 0 => fibfib(0)\n                  \
    \                                          case 1 => fibfib(1)\n             \
    \                                               case 2 => fibfib(2)\n        \
    \                                                    case _ => {\n           \
    \                                                     fibfib(n) match {\n    \
    \                                                                case 0 => fibfib(0)\n\
    \                                                                    case 1 =>\
    \ fibfib(1)\n                                                                \
    \    case 2 => fibfib(2)\n                                                   \
    \                 case _ => {\n                                              \
    \                          fibfib(n) match {\n                               \
    \                                             case 0 => fibfib(0)\n          \
    \                                                                  case 1 => fibfib(1)\n\
    \                                                                            case\
    \ 2 => fibfib(2)\n                                                           \
    \                 case _ => {\n                                              \
    \                                  fibfib(n) match {\n                       \
    \                                                             case 0 => fibfib(0)\n\
    \                                                                            \
    \        case 1 => fibfib(1)\n                                               \
    \                                     case 2 => fibfib(2)\n                  \
    \                                                                  case _ => {\n\
    \                                                                            \
    \            fibfib(n) match {\n                                             \
    \                                               case 0 => fibfib(0)\n        \
    \                                                                            \
    \        case 1 => fibfib(1)\n                                               \
    \                                             case 2 => fibfib(2)\n          \
    \                                                                            \
    \      case _ => {\n                                                         \
    \                                       fibfib(n) match {\n                  \
    \                                                                            \
    \      case 0 => fibfib(0)\n                                                 \
    \                                                   case 1 => fibfib(1)\n    \
    \                                                                            \
    \                    case 2 => fibfib(2)\n                                   \
    \                                                                 case _ => {\n\
    \                                                                            \
    \                            fibfib(n) match {\n                             \
    \                                                                            \
    \   case 0 => fibfib(0)\n                                                    \
    \                                                        case 1 => fibfib(1)",
  "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.clear()\n\
    \        fibfib(0)\n        fibfib(1)\n        fibfib(2)\n        fibfib(n) {\n\
    \            fibfib(n-1)\n            fibfib(n-2)\n            fibfib(n-3)\n \
    \       }\n        fibfib(n-1)", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        fib.clear()\n        fibfib.clear()\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        if (n <= 0) 0\n\
    \        else if (n <= 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        val fibfibs = mutable.ListBuffer[Long]()\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 1\n        fibfibs += 2\n        fibfibs +=\
    \ 3\n        fibfibs += 4\n        fibfibs += 5\n        fibfibs += 6\n      \
    \  fibfibs += 7\n        fibfibs += 8\n        fibfibs += 9\n        fibfibs +=\
    \ 10\n        fibfibs += 11\n        fibfibs += 12\n        fibfibs += 13\n  \
    \      fibfibs += 14\n        fibfibs += 15\n        fibfibs += 16\n        fibfibs\
    \ += 17\n        fibfibs += 18\n        fibfibs += 19\n        fibfibs += 20\n\
    \        fibfibs += 21\n        fibfibs += 22\n        fibfibs += 23\n       \
    \ fibfibs += 24\n        fibfibs += 25\n        fibfibs += 26\n        fibfibs\
    \ += 27\n        fibfibs += 28\n        fibfibs += 29\n        fibfibs += 30\n\
    \        fibfibs += 31\n        fibfibs += 32\n        fibfibs += 33\n       \
    \ fibfibs += 34\n        fibfibs += 35\n        fibfibs += 36\n        fibfibs\
    \ += 37\n        fibfibs += 38\n        fibfibs += 39\n        fibfibs += 40\n\
    \        fibfibs += 41\n        fibfibs += 42\n        fibfibs += 43\n       \
    \ fibfibs += 44\n        fibfibs += 45\n        fibfibs += 46\n        fibfibs\
    \ += 47\n        fibfibs += 48\n        fibfibs += 49\n        fibfibs += 50\n\
    \        fibfibs += 51\n        fibfibs += 52\n        fibfibs += 53\n       \
    \ fibfibs += 54\n        fibfibs += 55\n        fibfibs += 56\n        fibfibs\
    \ += 57\n        fibfibs += 58\n        fibfibs += 59\n        fibfibs += 60\n\
    \        fibfibs += 61\n        fibfibs += 62\n        fibfibs += 63\n       \
    \ fibfibs += 64\n        fibfibs += 65\n        fibfibs += 66\n        fibfibs\
    \ += 67\n        fibfibs += 68\n        fibfibs += 69\n        fibfibs += 70\n\
    \        fibfibs += 71\n        fibfibs += 72\n        fibfibs += 73\n       \
    \ fibfibs += 74\n        fibfibs += 75\n        fibfibs += 76\n        fibfibs\
    \ += 77\n        fibfibs += 78\n        fibfibs += 79\n        fibfibs += 80\n\
    \        fibfibs += 81\n", "        if (n <= 0) 0\n        else if (n <= 2) 1\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib =\
    \ new mutable.MutableList[Long]()\n        fibfib.append(0)\n        fibfib.append(0)\n\
    \        fibfib.append(1)\n        fibfib(n) match {\n            case 0 => fibfib(0)\n\
    \            case 1 => fibfib(1)\n            case _ => {\n                fibfib(n-1)\
    \ match {\n                    case 0 => fibfib(n-1)\n                    case\
    \ 1 => fibfib(n-1) + fibfib(n-2)\n                    case _ => fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n                }\n            }\n        }", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0,\
    \ 0)\n        fibfib.put(1, 0)\n        fibfib.put(2, 1)\n        fibfib.put(n,\
    \ n)\n        fibfib(n) match {\n            case 0 => 0\n            case 1 =>\
    \ fibfib.get(n-1)\n            case 2 => fibfib.get(n-1) + fibfib.get(n-2)\n \
    \           case _ => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n  \
    \      }", "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0,\
    \ 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib(n)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        if (n\
    \ == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n        else\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0,\
    \ 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib.put(n,\
    \ n)\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        if (n == 0) 0\n\
    \        else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        var fib : mutable.MutableList[Long] =\
    \ mutable.MutableList()\n        var i : Long = 1\n        while (i < n) {\n \
    \           fib += i\n            i += 2\n        }\n        fib(0)", "      \
    \  val fibfibs = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0\n     \
    \   fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n", "        val fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList(0,0)\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2,\
    \ 1L)\n        fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n      \
    \  fibfib.get(n)", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                fibfib(n-1)\
    \ match {\n                    case 0 => 0\n                    case 1 => 0\n\
    \                    case 2 => 1\n                    case _ => {\n          \
    \              fibfib(n-2) match {\n                            case 0 => 0\n\
    \                            case 1 => 0\n                            case 2 =>\
    \ 1\n                            case _ => {\n                               \
    \ fibfib(n-3) match {\n                                    case 0 => 0\n     \
    \                               case 1 => 0\n                                \
    \    case 2 => 1\n                                    case _ => {\n          \
    \                              fibfib(n-4) match {\n                         \
    \                   case 0 => 0\n                                            case\
    \ 1 => 0\n                                            case 2 => 1\n          \
    \                                  case _ => {\n                             \
    \                   fibfib(n-5) match {\n                                    \
    \                case 0 => 0\n                                               \
    \     case 1 => 0\n                                                    case 2\
    \ => 1\n                                                    case _ => {\n    \
    \                                                    fibfib(n-6) match {\n   \
    \                                                         case 0 => 0\n      \
    \                                                      case 1 => 0\n         \
    \                                                   case 2 => 1\n            \
    \                                                case _ => {\n               \
    \                                                 fibfib(n-7) match {\n      \
    \                                                              case 0 => 0\n \
    \                                                                   case 1 =>\
    \ 0\n                                                                    case\
    \ 2 => 1\n                                                                   \
    \ case _ => {\n                                                              \
    \          fibfib(n-8) match {\n                                             \
    \                               case 0 => 0\n                                \
    \                                            case 1 => 0\n                   \
    \                                                         case 2 => 1\n      \
    \                                                                      case _\
    \ => {\n                                                                     \
    \           fibfib(n-9) match {\n                                            \
    \                                        case 0 => 0\n                       \
    \                                                             case 1 => 0\n  \
    \                                                                            \
    \      case 2 => 1\n                                                         \
    \                           case _ => {\n                                    \
    \                                                    fibfib(n-10) match {\n  \
    \                                                                            \
    \              case 0 => 0\n                                                 \
    \                                           case 1 => 0\n                    \
    \                                                                        case\
    \ 2 => 1\n                                                                   \
    \                         case _ => {\n                                      \
    \                                                          fibfib(n-11) match\
    \ {\n                                                                        \
    \                            case 0 => 0\n                                   \
    \                                                                 case 1 => 0\n\
    \                                                                            \
    \                        case 2 => 1\n                                       \
    \                                                             case _ => {\n  \
    \                                                                            \
    \                          fibfib(n-12) match {\n                            \
    \                                                                            \
    \    case 0 => 0\n                                                           \
    \                                                 case 1 => 0\n              \
    \                                                                            \
    \                  case 2 => 1\n                                             \
    \                                                               case _ => {\n\
    \                                                                            \
    \                                    fibfib(n-13) match {\n                  \
    \                                                                            \
    \                      case 0 => 0\n                                         \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                                                 case 2 => 1\n              \
    \                                                                            \
    \                          case _ => {\n                                     \
    \                                                                            \
    \       fibfib(n-14) match {\n", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList()\n        fib += 0\n        fib += 0\n        fib +=\
    \ 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += ", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => fibfib(0)\n            case\
    \ 1 => fibfib(1)\n            case 2 => fibfib(2)\n            case _ => {\n \
    \               val n1 = fibfib(n-1)\n                val n2 = fibfib(n-2)\n \
    \               val n3 = fibfib(n-3)\n                fibfib.append(n1 + n2 +\
    \ n3)\n            }\n        }", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2,\
    \ 1L)\n        fibfib(n) match {\n            case 0 => 0L\n            case 1\
    \ => 0L\n            case 2 => 1L\n            case _ => {\n                val\
    \ fibfib2 = fibfib.toSeq.sortBy(_._1).reverse\n                fibfib2.head._2\
    \ + fibfib2.tail.head._2\n            }\n        }", "        val fibfib = new\
    \ mutable.Array[Long](5)\n        fibfib(0) = 0\n        fibfib(1) = 0\n     \
    \   fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        var fib : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n   \
    \     var i : Long = 1\n        while (i <= n) {\n            fib.add(i)\n   \
    \         fibfib.add(fibfib(i-1) + fibfib(i-2) + fibfib(i-3))\n            i +=\
    \ 1\n        }\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2,\
    \ 1L)\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)",
  "        val fibfibs = mutable.ListBuffer[Long]()\n        var fibfib = 0\n    \
    \    fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n\
    \        fibfibs += fibfib\n        fibfib", "        if (n == 0) 0\n        else\
    \ if (n == 1) 1\n        else if (n == 2) 1\n        else if (n > 2) fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        else 0", "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibs(0) = 0\n        fibfibs(1) = 0\n        fibfibs(2) = 1\n    \
    \    fibfibs(n) = fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)",
  "        val fibfibs = mutable.ArrayBuffer(0)\n        var fibfib = 0\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n        fibfibs += fibfib\n        fibfibs\
    \ += fibfib\n        fibfibs += fibfib\n", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2,\
    \ 1L)\n        fibfib(n) {\n            fibfib.put(n, fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3))\n        }\n        fibfib(n)", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var i : Long = 1\n        while (i <=\
    \ n) {\n            fib.append(i)\n            i = fib(i-1) + fib(i-2) + fib(i-3)\n\
    \        }\n        fib.last", "        val fibfibs = mutable.ArrayBuffer(0)\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfib", "       \
    \ val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0) =\
    \ 0\n        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib =\
    \ new mutable.Array[Long](n)\n        fibfib(0) = 0\n        fibfib(1) = 0\n \
    \       fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        if (n == 0) 0\n        else if (n == 1) 1\n    \
    \    else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        val fibfibArray = mutable.ArrayBuffer(0)\n        fibfibArray(0) = 0\n\
    \        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfibArray = mutable.ArrayBuffer(0)\n        var fibfibArrayIndex\
    \ = 0\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex\
    \ += 1\n        fibfibArrayIndex += 1\n        fibfibArrayIndex += 1\n       \
    \ fibfib", "        val fibfibs = mutable.ArrayBuffer(0)\n        fibfibs += 0\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfib", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => fibfib(0)\n            case\
    \ 1 => fibfib(1)\n            case 2 => fibfib(2)\n            case _ => {\n \
    \               val n1 = fibfib(n-1)\n                val n2 = fibfib(n-2)\n \
    \               val n3 = fibfib(n-3)\n                fibfib.append(n1 + n2 +\
    \ n3)\n            }\n        }", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n).foreach(x => fibfib.append(fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n\
    \        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer(0)\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfib", "        val fibfib\
    \ = new mutable.Array[Long](5)\n        fibfib(0) = 0\n        fibfib(1) = 0\n\
    \        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        val fibfib = new mutable.HashSet[Long]()\n     \
    \   fibfib.add(0)\n        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n)\
    \ match {\n            case 0 => 0\n            case 1 => 0\n            case\
    \ 2 => 1\n            case _ => {\n                val fibfib2 = new mutable.HashSet[Long]()\n\
    \                fibfib2.add(0)\n                fibfib2.add(1)\n            \
    \    fibfib2.add(2)\n                fibfib2.add(3)\n                fibfib2.add(4)\n\
    \                fibfib2.add(5)\n                fibfib2.add(6)\n            \
    \    fibfib2.add(7)\n                fibfib2.add(8)\n                fibfib2.add(9)\n\
    \                fibfib2.add(10)\n                fibfib2.add(11)\n          \
    \      fibfib2.add(12)\n                fibfib2.add(13)\n                fibfib2.add(14)\n\
    \                fibfib2.add(15)\n                fibfib2.add(16)\n          \
    \      fibfib2.add(17)\n                fibfib2.add(18)\n                fibfib2.add(19)\n\
    \                fibfib2.add(20)\n                fibfib2.add(21)\n          \
    \      fibfib2.add(22)\n                fibfib2.add(23)\n                fibfib2.add(24)\n\
    \                fibfib2.add(25)\n                fibfib2.add(26)\n          \
    \      fibfib2.add(27)\n                fibfib2.add(28)\n                fibfib2.add(29)\n\
    \                fibfib2.add(30)\n                fibfib2.add(31)\n          \
    \      fibfib2.add(32)\n                fibfib2.add(33)\n                fibfib2.add(34)\n\
    \                fibfib2.add(35)\n                fibfib2.add(36)\n          \
    \      fibfib2.add(37)\n                fibfib2.add(38)\n                fibfib2.add(39)\n\
    \                fibfib2.add(40)\n                fibfib2.add(41)\n          \
    \      fibfib2.add(42)\n                fibfib2.add(43)\n                fibfib2.add(44)\n\
    \                fibfib2.add(45)\n                fibfib2.add(46)\n          \
    \      fibfib2.add(47)\n                fibfib2.add(48)\n                fibfib2.add(49)\n\
    \                fibfib2.add(50)\n                fibfib2.add(51)\n          \
    \      fibfib2.add(52)\n                fibfib2.add(53)\n                fibfib2.add(54)\n\
    \                fibfib2.add(55)\n                fibfib2.add(56)\n          \
    \      fibfib2.add(57)\n", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        fibfib(0)\n        fibfib(1)\n        fibfib(2)\n        fibfib(n) match\
    \ {\n            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n\
    \            case n => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        }", " \
    \       val fibfibs = mutable.ArrayBuffer(0)\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 1\n        fibfibs += 2\n        fibfibs += 3\n   \
    \     fibfibs += 4\n        fibfibs += 5\n        fibfibs += 6\n        fibfibs\
    \ += 7\n        fibfibs += 8\n        fibfibs += 9\n        fibfibs += 10\n  \
    \      fibfibs += 11\n        fibfibs += 12\n        fibfibs += 13\n        fibfibs\
    \ += 14\n        fibfibs += 15\n        fibfibs += 16\n        fibfibs += 17\n\
    \        fibfibs += 18\n        fibfibs += 19\n        fibfibs += 20\n       \
    \ fibfibs += 21\n        fibfibs += 22\n        fibfibs += 23\n        fibfibs\
    \ += 24\n        fibfibs += 25\n        fibfibs += 26\n        fibfibs += 27\n\
    \        fibfibs += 28\n        fibfibs += 29\n        fibfibs += 30\n       \
    \ fibfibs += 31\n        fibfibs += 32\n        fibfibs += 33\n        fibfibs\
    \ += 34\n        fibfibs += 35\n        fibfibs += 36\n        fibfibs += 37\n\
    \        fibfibs += 38\n        fibfibs += 39\n        fibfibs += 40\n       \
    \ fibfibs += 41\n        fibfibs += 42\n        fibfibs += 43\n        fibfibs\
    \ += 44\n        fibfibs += 45\n        fibfibs += 46\n        fibfibs += 47\n\
    \        fibfibs += 48\n        fibfibs += 49\n        fibfibs += 50\n       \
    \ fibfibs += 51\n        fibfibs += 52\n        fibfibs += 53\n        fibfibs\
    \ += 54\n        fibfibs += 55\n        fibfibs += 56\n        fibfibs += 57\n\
    \        fibfibs += 58\n        fibfibs += 59\n        fibfibs += 60\n       \
    \ fibfibs += 61\n        fibfibs += 62\n        fibfibs += 63\n        fibfibs\
    \ += 64\n        fibfibs += 65\n        fibfibs += 66\n        fibfibs += 67\n\
    \        fibfibs += 68\n        fibfibs += 69\n        fibfibs += 70\n       \
    \ fibfibs += 71\n        fibfibs += 72\n        fibfibs += 73\n        fibfibs\
    \ += 74\n        fibfibs += 75\n        fibfibs += 76\n        fibfibs += 77\n\
    \        fibfibs += 78\n        fibfibs += 79\n        fibfibs += 80\n       \
    \ fibfibs += 81\n        fibfib", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var i : Long = 1\n        var j : Long\
    \ = 1\n        while (i <= n) {\n            fib.append(i)\n            fibfib.append(j)\n\
    \            i = i + 1\n            j = j + 2\n        }\n        fibfib(n) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfibs\
    \ = mutable.ArrayBuffer(0)\n        fibfibs += 0\n        fibfibs += 0\n     \
    \   fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfib", "        val fibfibs = mutable.ArrayBuffer(0)\n     \
    \   fibfibs(0) = 0\n        fibfibs(1) = 0\n        fibfibs(2) = 1\n        fibfibs(n)\
    \ = fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)", "       \
    \ val fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n        fibfib(1)\
    \ = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n", "        if (n == 0) 0\n\
    \        else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.Array[Long](5)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n     \
    \   fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        val fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList(0,1)\n        fibfib.foreach { x => fibfib.add(fibfib(x-1)\
    \ + fibfib(x-2) + fibfib(x-3))}\n        fibfib(n)", "        val fibfib = new\
    \ mutable.MutableList[Long]()\n        fibfib.append(0)\n        fibfib.append(0)\n\
    \        fibfib.append(1)\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer(0)\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfib", "        if (n <= 0)\
    \ 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2,\
    \ 1L)\n        fibfib(n) match {\n            case 0 => 0L\n            case 1\
    \ => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n            case 2 =>\
    \ fibfib.get(n-1) + fibfib.get(n-2)\n            case 3 => fibfib.get(n-1)\n \
    \           case 4 => 0L\n            case 5 => fibfib.get(n-1) + fibfib.get(n-2)\
    \ + fibfib.get(n-3)\n            case 6 => fibfib.get(n-1) + fibfib.get(n-2)\n\
    \            case 7 => fibfib.get(n-1)\n            case 8 => 0L\n           \
    \ case 9 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n            case\
    \ 10 => fibfib.get(n-1) + fibfib.get(n-2)\n            case 11 => fibfib.get(n-1)\n\
    \            case 12 => 0L\n            case 13 => fibfib.get(n-1) + fibfib.get(n-2)\
    \ + fibfib.get(n-3)\n            case 14 => fibfib.get(n-1) + fibfib.get(n-2)\n\
    \            case 15 => fibfib.get(n-1)\n            case 16 => 0L\n         \
    \   case 17 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n         \
    \   case 18 => fibfib.get(n-1) + fibfib.get(n-2)\n            case 19 => fibfib.get(n-1)\n\
    \            case 20 => 0L\n            case 21 => fibfib.get(n-1) + fibfib.get(n-2)\
    \ + fibfib.get(n-3)\n            case 22 => fibfib.get(n-1) + fibfib.get(n-2)\n\
    \            case 23 => fibfib.get(n-1)\n            case 24 => 0L\n         \
    \   case 25 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n         \
    \   case 26 => fibfib.get(n-1) + fibfib.get(n-2)\n            case 27 => fibfib.get(n-1)\n\
    \            case 28 => 0L\n            case 29 => fibfib.get(n-1) + fibfib.get(n-2)\
    \ + fibfib.get(n-3)\n            case 30 => fibfib.get(n-1) + fibfib.get(n-2)\n\
    \            case 31 => fibfib.get(n-1)\n            case 32 => 0L\n         \
    \   case 33 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n         \
    \   case 34 => fibfib.get(n-1) + ", "        val fibfib = new mutable.ListBuffer[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib.append(1)\n        fibfib(n) match {\n            case 0 => fibfib(0)\n\
    \            case 1 => fibfib(1)\n            case 2 => fibfib(2)\n          \
    \  case _ => {\n                val temp = fibfib(n-1)\n                fibfib(n)\
    \ = fibfib(n-1) + fibfib(n-2) + temp\n                fibfib(n)\n            }\n\
    \        }", "        if (n == 0) 0\n        else if (n == 1) 1\n        else\
    \ if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    \
    \    var fib : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var\
    \ fibfib : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib1\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib2\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib3\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib4\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib5\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib6\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib7\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib8\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib9\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib10\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib11\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib12\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib13\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib14\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib15\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib16\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib17\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib18\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib19\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib20\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib21\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib22\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib23\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib24\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib25\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib26\
    \ : mutable.MutableList[Long] = mutable.MutableList(0,1)\n        var fibfib27\
    \ : mutable.MutableList[Long] = mutable.Mutable", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2,\
    \ 1L)\n        fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n      \
    \  fibfib.get(n)", "        if (n == 0) 0\n        else if (n == 1) 1\n      \
    \  else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(0,1)\n   \
    \     fibfib.foreach(x => fibfib.add(x+fibfib.get(x-1) + fibfib.get(x-2) + fibfib.get(x-3)))\n\
    \        fibfib(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n\
    \        fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n        fibfib.get(n)",
  "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0\n \
    \       fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n", "        if (n == 0) 0\n        else if (n ==\
    \ 1) 1\n        else if (n == 2) 1\n        else if (n <= 3) fibfib(n-1) + fibfib(n-2)\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfibs =\
    \ mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0\n        fibfibs += 0\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n", "        val fibfib = new mutable.HashSet[Long]()\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) {\n         \
    \   fibfib.add(_ + _ + _)\n        }\n        fibfib(n)._1", "        var fib\
    \ : mutable.MutableList[Long] = mutable.MutableList.empty\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib", "        if (n\
    \ == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n        else\
    \ if (n > 2) fibfib(n-1) + fibfib(n-2)\n        else fibfib(n-1) + fibfib(n-3)",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib =\
    \ new mutable.Array[Long](n)\n        fibfib(0) = 0\n        fibfib(1) = 0\n \
    \       fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        if (n <= 0) 0\n        else if (n <= 2) 1\n    \
    \    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfibs = mutable.ArrayBuffer(0)\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfib", "       \
    \ val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0L)\n\
    \        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib.put(n, n)\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfibArray =\
    \ mutable.ArrayBuffer(0)\n        fibfibArray(0) = 0\n        fibfibArray(1) =\
    \ 0\n        fibfibArray(2) = 1\n        fibfibArray(n) = fibfibArray(n-1) + fibfibArray(n-2)\
    \ + fibfibArray(n-3)\n        fibfibArray(n)", "        val fibfibs = mutable.ArrayBuffer(0)\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfib", "       \
    \ val fibfib = new mutable.Array[Long](n to 0)\n        fibfib(0) = 0\n      \
    \  fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashSet[Long]()\n\
    \        fibfib.add(0)\n        fibfib.add(1)\n        fibfib.add(2)\n       \
    \ fibfib.add(3)\n        fibfib.add(4)\n        fibfib.add(5)\n        fibfib.add(6)\n\
    \        fibfib.add(7)\n        fibfib.add(8)\n        fibfib(n)", "        val\
    \ fibfib = new mutable.MutableList[Long]()\n        fibfib.clear()\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib(n) match {\n            case 0 => 0\n \
    \           case 1 => 1\n            case _ => {\n                fibfib(n-1)\
    \ match {\n                    case 0 => 1\n                    case 1 => fibfib(n-2)\
    \ + fibfib(n-3)\n                    case _ => {\n                        fibfib(n-2)\
    \ match {\n                            case 0 => fibfib(n-3) + fibfib(n-4)\n \
    \                           case 1 => fibfib(n-3)\n                        }\n\
    \                    }\n                }\n            }\n        }", "      \
    \  val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n  \
    \      fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => fibfib(n-1)\n            case\
    \ 2 => fibfib(n-1) + fibfib(n-2)\n            case _ => fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        }", "        if (n == 0) 0\n        else if (n == 1)\
    \ 1\n        else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        var fib : mutable.MutableList[Long] = mutable.MutableList[Long]()\n   \
    \     fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n       \
    \ fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n", "    \
    \    val fibfibArray = mutable.ArrayBuffer(0)\n        fibfibArray += 0\n    \
    \    fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n  \
    \      fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfib", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       if (n <= 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList.empty\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfibs = mutable.ArrayBuffer(0)\n        fibfibs(0) = 0\n       \
    \ fibfibs(1) = 0\n        fibfibs(2) = 1\n        fibfibs(n) = fibfibs(n-1) +\
    \ fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)", "        if (n == 0) 0\n \
    \       else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        if (n == 0) 0\n        else if (n ==\
    \ 1) 1\n        else if (n == 2) 1\n        else if (n % 2 == 0) fibfib(n-1) +\
    \ fibfib(n-2)\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "      \
    \  val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0L)\n\
    \        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib.put(n, fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\n        fibfib.get(n)", "        val fibfib =\
    \ new mutable.MutableList[Long]()\n        fibfib.append(0)\n        fibfib.append(0)\n\
    \        fibfib.append(1)\n        fibfib(n).foreach(x => fibfib.append(fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n)", "        val fibfib = new\
    \ mutable.MutableList[Long]()\n        fibfib.append(0)\n        fibfib.append(0)\n\
    \        fibfib.append(1)\n        fibfib(n) match {\n            case 0 => 0\n\
    \            case 1 => 0\n            case 2 => 1\n            case _ => {\n \
    \               fibfib(n-1) match {\n                    case 0 => 0\n       \
    \             case 1 => 0\n                    case 2 => 1\n                 \
    \   case _ => {\n                        fibfib(n-2) match {\n               \
    \             case 0 => 0\n                            case 1 => 0\n         \
    \                   case 2 => 1\n                            case _ => {\n   \
    \                             fibfib(n-3) match {\n                          \
    \          case 0 => 0\n                                    case 1 => 0\n    \
    \                                case 2 => 1\n                               \
    \     case _ => {\n                                        fibfib(n-4) match {\n\
    \                                            case 0 => 0\n                   \
    \                         case 1 => 0\n                                      \
    \      case 2 => 1\n                                            case _ => {\n\
    \                                                fibfib(n-5) match {\n       \
    \                                             case 0 => 0\n                  \
    \                                  case 1 => 0\n                             \
    \                       case 2 => 1\n                                        \
    \            case _ => {\n                                                   \
    \     fibfib(n-6) match {\n                                                  \
    \          case 0 => 0\n                                                     \
    \       case 1 => 0\n                                                        \
    \    case 2 => 1\n                                                           \
    \ case _ => {\n                                                              \
    \  fibfib(n-7) match {\n                                                     \
    \               case 0 => 0\n                                                \
    \                    case 1 => 0\n                                           \
    \                         case 2 => 1\n                                      \
    \                              case _ => {\n                                 \
    \                                       fibfib(n-8) match {\n                \
    \                                                            case 0 => 0\n   \
    \                                                                         case\
    \ 1 => 0\n                                                                   \
    \         case 2 => 1\n                                                      \
    \                      case _ => {\n                                         \
    \                                       fibfib(n-9) match {\n                \
    \                                                                    case 0 =>\
    \ 0\n                                                                        \
    \            case 1 => 0\n                                                   \
    \                                 case 2 => 1\n                              \
    \                                                      case _ => {\n         \
    \                                                                            \
    \   fibfib(n-10) match {\n                                                   \
    \                                         case 0 => 0\n                      \
    \                                                                      case 1\
    \ => 0\n                                                                     \
    \                       case 2 => 1\n                                        \
    \                                                    case _ => {\n           \
    \                                                                            \
    \         fibfib(n-11) match {\n                                             \
    \                                                       case 0 => 0\n        \
    \                                                                            \
    \                case 1 => 0\n                                               \
    \                                                     case 2 => 1\n          \
    \                                                                            \
    \              case _ => {\n                                                 \
    \                                                       fibfib(n-12) match {\n\
    \                                                                            \
    \                                case 0 => 0\n                               \
    \                                                                            \
    \ case 1 => 0\n                                                              \
    \                                              case 2 => 1\n                 \
    \                                                                            \
    \               case _ => {\n                                                \
    \                                                                fibfib(n-13)\
    \ match {\n                                                                  \
    \                                                  case 0 => 0\n             \
    \                                                                            \
    \                           case 1 => 0\n                                    \
    \                                                                            \
    \    case 2 => 1\n                                                           \
    \                                                         case _ => {\n      \
    \                                                                            \
    \                                      fibfib(n-14) match {\n                \
    \                                                                            \
    \                                case 0 ", "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibs(0) = 0\n        fibfibs(1) = 0\n        fibfibs(2) = 1\n    \
    \    fibfibs(n) = fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)",
  "        val fibfibs = mutable.ListBuffer[Long]()\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n", "        val fibfibs = mutable.ArrayBuffer(0)\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfib", "       \
    \ val fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n        fibfib(1)\
    \ = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2,\
    \ 1L)\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)",
  "        if (n <= 0) 0\n        else if (n == 1) 1\n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "        val fibfib = new mutable.HashMap[Long, Long]()\n  \
    \      fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n\
    \        fibfib(n) {\n            fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    \        }\n        fibfib.get(n)", "        if (n == 0) 0\n        else if (n\
    \ == 1) 1\n        else if (n == 2) 1\n        else if (n > 2) fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        else 0", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       var fib : mutable.MutableList[Long] = mutable.MutableList(0)\n       \
    \ fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0,\
    \ 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib(n)\
    \ match {\n            case 0 => 0\n            case 1 => fibfib.get(n-1) + fibfib.get(n-2)\
    \ + fibfib.get(n-3)\n            case 2 => fibfib.get(n-1) + fibfib.get(n-2)\n\
    \            case 3 => fibfib.get(n-1)\n            case 4 => fibfib.get(n-1)\
    \ + fibfib.get(n-2) + fibfib.get(n-3)\n            case 5 => fibfib.get(n-1) +\
    \ fibfib.get(n-2) + fibfib.get(n-3)\n            case 6 => fibfib.get(n-1) + fibfib.get(n-2)\
    \ + fibfib.get(n-3)\n            case 7 => fibfib.get(n-1) + fibfib.get(n-2) +\
    \ fibfib.get(n-3)\n            case 8 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n\
    \            case 9 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 10 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 11 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 12 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 13 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 14 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 15 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 16 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 17 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 18 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 19 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 20 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 21 => fibfib.get(n-1) + fibfib.get(n-2) + fibfib.get(n-3)\n \
    \           case 22 => fibfib.get(n-1) + fibfib.get(n-2", "        if (n == 0)\
    \ 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.clear()\n        fibfib(0) = 0\n        fibfib(1) = 0\n      \
    \  fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        val fibfib = new mutable.Array[Long](n)\n      \
    \  fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        var\
    \ fib : mutable.MutableList[Long] = mutable.MutableList.empty\n        var i :\
    \ Long = 1\n        while (i <= n) {\n            fib += i\n            i += 1\n\
    \        }\n        fib.head", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2,\
    \ 1L)\n        fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n      \
    \  fibfib.get(n)", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(0,0)\n\
    \        fibfib(0)\n        fibfib(1)\n        fibfib(2)\n        fibfib(n) match\
    \ {\n            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n\
    \            case n => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        }", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0,\
    \ 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2, 1L)\n        fibfib.put(n,\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n        fibfib.get(n)", "        val\
    \ fibfibs = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n", "        var fib : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n   \
    \     var fibfib2 : mutable.MutableList[Long] = mutable.MutableList(0)\n     \
    \   var fibfib3 : mutable.MutableList[Long] = mutable.MutableList(0)\n       \
    \ var fibfib4 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fibfib5 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib6\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib7 :\
    \ mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib8 : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fibfib9 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0)\n        var fibfib10 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fibfib11 : mutable.MutableList[Long] = mutable.MutableList(0)\n \
    \       var fibfib12 : mutable.MutableList[Long] = mutable.MutableList(0)\n  \
    \      var fibfib13 : mutable.MutableList[Long] = mutable.MutableList(0)\n   \
    \     var fibfib14 : mutable.MutableList[Long] = mutable.MutableList(0)\n    \
    \    var fibfib15 : mutable.MutableList[Long] = mutable.MutableList(0)\n     \
    \   var fibfib16 : mutable.MutableList[Long] = mutable.MutableList(0)\n      \
    \  var fibfib17 : mutable.MutableList[Long] = mutable.MutableList(0)\n       \
    \ var fibfib18 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fibfib19 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib20\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib21 :\
    \ mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib22 : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fibfib23 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0)\n        var fibfib24 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fibfib25 : mutable.MutableList[Long] = mutable.MutableList(0)\n \
    \       var fibfib26 : mutable.MutableList[Long] = mutable.MutableList(0)\n  \
    \      var fibfib27 : mutable.MutableList[Long] = mutable.MutableList(0)\n   \
    \     var fibfib28 : mutable.MutableList[Long] = mutable.MutableList(0)\n    \
    \    var fibfib29 : mutable.MutableList[Long] = mutable.MutableList(0)\n     \
    \   var fibfib30 : mutable.", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibArray(0) = 0\n        fibfibArray(1) = 0\n        fibfibArray(2)\
    \ = 1\n        fibfibArray(n) = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n\
    \        fibfibArray(n)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.clear()\n        fibfib.append(0)\n        fibfib.append(0)\n\
    \        fibfib.append(1)\n        fibfib(n) match {\n            case 0 => fibfib(0)\n\
    \            case 1 => fibfib(1)\n            case 2 => fibfib(2)\n          \
    \  case _ => {\n                val fibfib1 = fibfib(n-1)\n                val\
    \ fibfib2 = fibfib(n-2)\n                val fibfib3 = fibfib(n-3)\n         \
    \       fibfib(n) = fibfib1 + fibfib2 + fibfib3\n            }\n        }", " \
    \       if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n\
    \        else if (n <= 3) fibfib(n-1) + fibfib(n-2)\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0L)\n        fibfib.put(1, 0L)\n        fibfib.put(2,\
    \ 1L)\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)",
  "        val fibfibs = mutable.ArrayBuffer(0)\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 1\n        fibfibs += 1\n        fibfibs += 2\n   \
    \     fibfibs += 2\n        fibfibs += 3\n        fibfibs += 3\n        fibfibs\
    \ += 4\n        fibfibs += 4\n        fibfibs += 5\n        fibfibs += 5\n   \
    \     fibfibs += 6\n        fibfibs += 6\n        fibfibs += 7\n        fibfibs\
    \ += 7\n        fibfibs += 8\n        fibfibs += 8\n        fibfibs += 9\n   \
    \     fibfibs += 9\n        fibfibs += 10\n        fibfibs += 10\n        fibfibs\
    \ += 11\n        fibfibs += 11\n        fibfibs += 12\n        fibfibs += 12\n\
    \        fibfibs += 13\n        fibfibs += 13\n        fibfibs += 14\n       \
    \ fibfibs += 14\n        fibfibs += 15\n        fibfibs += 15\n        fibfibs\
    \ += 16\n        fibfibs += 16\n        fibfibs += 17\n        fibfibs += 17\n\
    \        fibfibs += 18\n        fibfibs += 18\n        fibfibs += 19\n       \
    \ fibfibs += 19\n        fibfibs += 20\n        fibfibs += 20\n        fibfibs\
    \ += 21\n        fibfibs += 21\n        fibfibs += 22\n        fibfibs += 22\n\
    \        fibfibs += 23\n        fibfibs += 23\n        fibfibs += 24\n       \
    \ fibfibs += 24\n        fibfibs += 25\n        fibfibs += 25\n        fibfibs\
    \ += 26\n        fibfibs += 26\n        fibfibs += 27\n        fibfibs += 27\n\
    \        fibfibs += 28\n        fibfibs += 28\n        fibfibs += 29\n       \
    \ fibfibs += 29\n        fibfibs += 30\n        fibfibs += 30\n        fibfibs\
    \ += 31\n        fibfibs += 31\n        fibfibs += 32\n        fibfibs += 32\n\
    \        fibfibs += 33\n        fibfibs += 33\n        fibfibs += 34\n       \
    \ fibfibs += 34\n        fibfibs += 35\n        fibfibs += 35\n        fibfibs\
    \ += 36\n        fibfibs += 36\n        fibfibs += 37\n        fibfibs += 37\n\
    \        fibfibs += 38\n        fibfibs += 38\n        fibfibs += 39\n       \
    \ fibfibs += 39\n        fibfibs += 40\n        fibfibs += 40\n        fibfibs\
    \ += 41\n        fibfib", "        val fibfib = new mutable.Array[Long](n)\n \
    \       fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val\
    \ fibfibs = mutable.ArrayBuffer(0)\n        fibfibs += 0\n        fibfibs += 0\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfib", "        val fibfibArray = mutable.ArrayBuffer(0)\n \
    \       fibfibArray(0) = 0\n        fibfibArray(1) = 0\n        fibfibArray(2)\
    \ = 1\n        fibfibArray(n) = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n\
    \        fibfibArray(n)", "        var fib : mutable.MutableList[Long] = mutable.MutableList(0,1)\n\
    \        var i : Long = 1\n        while (i <= n) {\n            fib.add(i)\n\
    \            fib += fib\n            i += 1\n        }\n        fib(n-1)", " \
    \       val fibfib : mutable.MutableList[Long] = mutable.MutableList(0,1)\n  \
    \      fibfib.tail.foreach(fibfib += _)\n        fibfib(n).asInstanceOf[Long]",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n\
    \        else if (n <= 3) fibfib(n-1) + fibfib(n-2)\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        if (n <= 0) 0\n        else if (n <=\
    \ 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfibs\
    \ = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n", "        if (n == 0) 0\n        else if (n == 1) 1\n     \
    \   else if (n == 2) 1\n        else if (n <= 3) fibfib(n-1) + fibfib(n-2)\n \
    \       else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new\
    \ mutable.MutableList[Long]()\n        fibfib.append(0)\n        fibfib.append(0)\n\
    \        fibfib.append(1)\n        fibfib(n) match {\n            case 0 => fibfib(0)\n\
    \            case 1 => fibfib(1)\n            case 2 => fibfib(2)\n          \
    \  case _ => {\n                val fibfib2 = new mutable.MutableList[Long]()\n\
    \                fibfib2.append(fibfib(n-1))\n                fibfib2.append(fibfib(n-2))\n\
    \                fibfib2.append(fibfib(n-3))\n                fibfib2.last\n \
    \           }\n        }", "        var fibfib : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib1 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib2 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib3 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib4 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib5 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib6 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib7 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib8 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib9 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib10 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib11 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib12 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib13 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib14 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib15 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib16 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib17 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib18 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib19 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib20 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib21 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib22 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib23 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib24 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib25 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib26 : mutable.MutableList[Long] = mutable.MutableList[Long]()\n\
    \        var fibfib", "        var fib : mutable.MutableList[Long] = mutable.MutableList()\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += "]
stop_tokens:
- "\n    }\n"

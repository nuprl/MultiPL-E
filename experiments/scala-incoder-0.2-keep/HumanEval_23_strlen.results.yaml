language: scala
name: HumanEval_23_strlen
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += string.charAt(i).toChar\n        length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqbbykemz.scala:17)\n\tat Problem.main(tmpqbbykemz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.foldLeft(0)(_ + _.length)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpge0fm3gi.scala:10:33 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        string.foldLeft(\e[31m0\e[0m)(_ + _.length)\n\
    \e[31m\e[31m   |\e[0m                               ^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                               value length is not a member of Char\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fu8l819.scala:17)\n\tat Problem.main(tmp9fu8l819.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = 0\n        for\
    \ (i <- 0 until charArray.length)\n            length += charArray(i).length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv36mjdgw.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += charArray(i).length\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean length.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpv36mjdgw.scala:13:35 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m            length += charArray(i).length\n\e[31m\e[31m   |\e[0m          \
    \            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      value\
    \ length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fu8l819.scala:17)\n\tat Problem.main(tmp9fu8l819.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fu8l819.scala:17)\n\tat Problem.main(tmp9fu8l819.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0L\n        for(i <- 0 until string.length)\n          \
    \  length += 1L\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx4d06xvg.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1L\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = charArray.length\n\
    \        charArray.length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        val result = new mutable.HashMap[String,\
    \ Long]()\n        for(i <- 0 until length){\n            val char = string.charAt(i)\n\
    \            val count = result.getOrElse(char, 0)\n            result.put(char,\
    \ count + 1)\n        }\n        val maxCount = result.values.max\n        val\
    \ maxKey = result.keys.max\n        val maxValue = result.values.max\n       \
    \ val maxKey = result.keys.max\n        val maxValue = result.values.max\n   \
    \     val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val maxKey = result.keys.max\n        val maxValue = result.values.max\n\
    \        val max\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqowb18h4.scala:75:4 ----------------------------\e\
    [0m\e[0m\n\e[31m75 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqowb18h4.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxKey\e[0m = result.keys.max\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxKey is already defined as \e[33mvalue\e[0m \e[35mmaxKey\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqowb18h4.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxValue\e[0m = result.values.max\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mmaxValue is already defined as \e[33mvalue\e[0m \e[35mmaxValue\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpqowb18h4.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxKey\e[0m = result.keys.max\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmaxKey is\
    \ already defined as \e[33mvalue\e[0m \e[35mmaxKey\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqowb18h4.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxValue\e[0m = result.values.max\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxValue is already defined as \e[33mvalue\e[0m \e[35mmaxValue\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqowb18h4.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxKey\e[0m = result.keys.ma"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length : Long = 0\n        for(i <- 0 until string.length)\n    \
    \        length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb_f1i3n7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ val result = new mutable.HashMap[Char, Long]()\n        for(i <- 0 until length)\
    \ {\n            val c = chars(i)\n            val count = result.getOrElse(c,\
    \ 0L)\n            val newCount = count + 1\n            result.put(c, newCount)\n\
    \        }\n        val sum = 0L\n        for(i <- 0 until result.size) {\n  \
    \          val count = result.get(i)\n            sum += count\n        }\n  \
    \      sum\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8w_rz_pu.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp8w_rz_pu.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp8w_rz_pu.scala:14:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e\
    [0m \e[36mc\e[0m = chars(i)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    \e[33mvalue\e[0m \e[35mchars\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8w_rz_pu.scala:22:16\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            sum += count\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.foldLeft(0)((acc, c) => acc + c.length)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpapxlc29z.scala:10:47 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        string.foldLeft(\e[31m0\e[0m)((\e[36macc\e[0m,\
    \ \e[36mc\e[0m) => acc + c.length)\n\e[31m\e[31m   |\e[0m                    \
    \                         ^^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \               value length is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        val result = new mutable.HashMap[String,\
    \ Long]()\n        for (i <- 0 until length) {\n            val char = string.charAt(i)\n\
    \            val count = result.getOrElse(char, 0)\n            result.put(char,\
    \ count + 1)\n        }\n        result.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplzw1vtu3.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793216
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        if (len > 0) len else 0\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n   \
    \ assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for (i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toInt + 1\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpm8n13nvd.scala:17)\n\tat Problem.main(tmpm8n13nvd.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += 1\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp02w8i64_.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toInt + 1\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprifh16oz.scala:17)\n\tat Problem.main(tmprifh16oz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0L\n        for(i <- 0 until string.length)\n          \
    \  length += 1L\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx4d06xvg.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1L\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        if (length == 0) 0 else length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = 0L\n        for (i <-\
    \ 0 until chars.length)\n            length += chars(i).length\n        length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3ebe45c7.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until chars.length)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp3ebe45c7.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += chars(i).length\n\e[31m\e[31m \
    \  |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Long - did you mean length.!=?\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmp3ebe45c7.scala:13:22 -----------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m            length += chars(i).length\n\e[31m\e[31m   |\e[0m         \
    \             ^^^^^\e[0m\n\e[31m   |\e[0m                      \e[33mvalue\e[0m\
    \ \e[35mchars\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0L\n        for(i <- 0 until string.length)\n          \
    \  length += 1L\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx4d06xvg.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1L\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = 0\n        for\
    \ (i <- 0 until charArray.length)\n            length += charArray(i).length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv36mjdgw.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += charArray(i).length\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean length.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpv36mjdgw.scala:13:35 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m            length += charArray(i).length\n\e[31m\e[31m   |\e[0m          \
    \            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      value\
    \ length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        val chars = string.chars\n      \
    \  val charsLength = chars.length\n        var count = 0\n        for(i <- 0 until\
    \ charsLength) {\n            val char = chars(i)\n            if(char == '\\\
    r') {\n                count += 1\n            } else if(char == '\\n') {\n  \
    \              count += 1\n            } else if(char == '\\t') {\n          \
    \      count += 1\n            } else if(char == '\\b') {\n                count\
    \ += 1\n            } else if(char == '\\f') {\n                count += 1\n \
    \           } else if(char == '\\v') {\n                count += 1\n         \
    \   } else if(char == '\\f') {\n                count += 1\n            } else\
    \ if(char == '\\r') {\n                count += 1\n            } else if(char\
    \ == '\\n') {\n                count += 1\n            } else if(char == '\\r')\
    \ {\n                count += 1\n            } else if(char == '\\n') {\n    \
    \            count += 1\n            } else if(char == '\\t') {\n            \
    \    count += 1\n            } else if(char == '\\b') {\n                count\
    \ += 1\n            } else if(char == '\\f') {\n                count += 1\n \
    \           } else if(char == '\\v') {\n                count += 1\n         \
    \   } else if(char == '\\f') {\n                count += 1\n            } else\
    \ if(char == '\\r') {\n                count += 1\n            } else if(char\
    \ == '\\n') {\n                count += 1\n            } else if(char == '\\r')\
    \ {\n                count += 1\n            } else if(char == '\\n') {\n    \
    \            count += 1\n            } else if(char == '\\t') {\n            \
    \    count += 1\n            } else if(char == '\\b') {\n                count\
    \ += 1\n            } else if(char == '\\f') {\n                count += 1\n \
    \           } else if(char == '\\v') {\n                count += 1\n         \
    \   } else if(char == '\\f') {\n                count += 1\n            } else\
    \ if(char == '\\r') {\n                count += 1\n            } else if(char\
    \ == '\\n') {\n                count += 1\n            } else if(char == '\\r')\
    \ {\n                count += 1\n            } else if(char == '\\n') {\n    \
    \            count += 1\n            } else if(char == '\\t') {\n            \
    \    count += 1\n            } else if(char == '\\b') {\n                count\
    \ += 1\n            } else if(char == '\\f') {\n                count += 1\n \
    \           } else if(char == '\\v') {\n                count += 1\n         \
    \   } else if(char == '\\f') {\n                count += 1\n            } else\
    \ if(char == '\\r') {\n                count += 1\n            } else if(char\
    \ == '\\n') {\n                count += 1\n            } else if(char == '\\r')\
    \ {\n                count += 1\n            } else if(char == '\\n') {\n    \
    \            count += 1\n            } else if(char == '\\t') {\n            \
    \    count += 1\n            } else if(char == '\\b') {\n                count\
    \ += 1\n            } else if(char == '\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmplqukq39z.scala:26:32 -----------------------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            } \e[33melse\e[0m \e[33mif\e[0m(char == \e\
    [31m'\\v'\e[0m) {\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\
    \e[31m   |\e[0m                                invalid escape character\n\e[31m\e\
    [31m-- Error: /tmp/tmplqukq39z.scala:44:32 -----------------------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m            } \e[33melse\e[0m \e[33mif\e[0m(char == \e\
    [31m'\\v'\e[0m) {\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\
    \e[31m   |\e[0m                                invalid escape character\n\e[31m\e\
    [31m-- Error: /tmp/tmplqukq39z.scala:62:32 -----------------------------------------\e\
    [0m\e[0m\n\e[31m62 |\e[0m            } \e[33melse\e[0m \e[33mif\e[0m(char == \e\
    [31m'\\v'\e[0m) {\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\
    \e[31m   |\e[0m                                invalid escape character\n\e[31m\e\
    [31m-- Error: /tmp/tmplqukq39z.scala:80:32 -----------------------------------------\e\
    [0m\e[0m\n\e[31m80 |\e[0m            } \e[33melse\e[0m \e[33mif\e[0m(char == \e\
    [31m'\\v'\e[0m) {\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\
    \e[31m   |\e[0m                                invalid escape character\n\e[31m\e\
    [31m-- Error: /tmp/tmplqukq39z.scala:96:30 -----------------------------------------\e\
    [0m\e[0m\n\e[31m96 |\e[0m            } \e[33melse\e[0m \e[33mif\e[0m(char == '\n\
    \e[31m\e[31m   |\e[0m                              ^\e[0m\n\e[31m   |\e[0m   \
    \                           unclosed character literal\n\e[31m\e[31m-- [E040]\
    \ Syntax Error: /tmp/tmplqukq39z.scala:105:0 ---------------------------\e[0m\e\
    [0m\n\e[31m105 |\e[0m\n\e[31m\e[31m    |\e[0m^\e[0m\n\e[31m    |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplqukq39z.scala:12:32\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mcharsLength\e[0m = chars.length\n\e[31m\e[31m   |\e[0m                   \
    \       ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              value length is not a\
    \ member of java.util.stream.IntStream\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmplqukq39z.scal"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.foldLeft(0)(_ + _.length)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpge0fm3gi.scala:10:33 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        string.foldLeft(\e[31m0\e[0m)(_ + _.length)\n\
    \e[31m\e[31m   |\e[0m                               ^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                               value length is not a member of Char\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.foldLeft(0)((acc, c) => acc + c.length)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphy9uxlsb.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmphy9uxlsb.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.foldLeft(\e[31m0\e[0m)((\e[36macc\e\
    [0m, \e[36mc\e[0m) => acc + c.length)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        value toList is not a member of java.util.stream.IntStream\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length : Long = charArray.length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.map(_.toInt).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        if (len == 0) 0 else len\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n  \
    \  assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        if (len == 0) 0\n        else len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val str = new StringBuilder()\n        str.append(string)\n        str.result()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxbhi35z5.scala:12:18\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        str.result()\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    String\n\
    \e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793223
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val strLen = string.length\n        val strLenLen = strLen.length\n \
    \       val strLenLenLen = strLenLen.length\n        val strLenLenLenLen = strLenLenLen.length\n\
    \        val strLenLenLenLenLen = strLenLenLenLen.length\n        val strLenLenLenLenLenLen\
    \ = strLenLenLenLenLen.length\n        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \        val strLen\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp39k3o4tn.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp39k3o4tn.scala:11:31\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLen\e[0m = strLen.length\n\e[31m\e[31m   |\e[0m                    \
    \    ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                        value length is\
    \ not a member of Int\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp39k3o4tn.scala:16:39\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLen.length\n\e[31m\e\
    [31m   |\e[0m                                       ^\e[0m\n\e[31m   |\e[0m  \
    \                   Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp39k3o4tn.scala:25:69\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp39k3o4tn.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLen.length\n\
    \e[31m\e[31m   |\e[0m                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: strLenLenLenLenLenLenLenLenLenLenLenLen\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compili"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.map(_.toInt).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val str = new StringBuilder()\n        str.append(string)\n        str.result()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxbhi35z5.scala:12:18\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        str.result()\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    String\n\
    \e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793223
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for (i <- 0 until string.length)\n            len\
    \ += string(i).length\n        len\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb071rr51.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += string(i).length\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb071rr51.scala:12:29\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m            len += string(i).length\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                   value length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.foldLeft(0)((sum, char) => sum + char.length)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvn5xuhtk.scala:10:53 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        string.foldLeft(\e[31m0\e[0m)((\e[36msum\e[0m,\
    \ \e[36mchar\e[0m) => sum + char.length)\n\e[31m\e[31m   |\e[0m              \
    \                                  ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \                           value length is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = 0\n        for\
    \ (i <- 0 until charArray.length) {\n            length += 1\n        }\n    \
    \    length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb6uujk7h.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793223
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.foldLeft(0L)((sum, char) => sum + char.length)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_2gop73u.scala:10:54 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        string.foldLeft(\e[31m0L\e[0m)((\e[36msum\e[0m,\
    \ \e[36mchar\e[0m) => sum + char.length)\n\e[31m\e[31m   |\e[0m              \
    \                                   ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                            value length is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793224
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.foldLeft(0)(_ + _)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp261076ll.scala:14)\n\tat Problem.main(tmp261076ll.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val count = chars.length\n        chars.toList.map(_.toInt).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb_ajs2rk.scala:11:26 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \            value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpb_ajs2rk.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0L\n        for(i <- 0 until string.length) length += string.charAt(i).toChar\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpw4or_ssx.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until string.length)\
    \ length += string.charAt(i).toChar\n\e[31m\e[31m   |\e[0m                   \
    \                     ^^^^^^^^^\e[0m\n\e[31m   |\e[0m              value += is\
    \ not a member of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val strLen = string.length\n        for(i <- 0 until strLen) yield {\n\
    \            val c = string.charAt(i)\n            if(c == '\\n') 1 // return\
    \ 1 when encounter \\n\n            else if(c == '\\t') 2 // return 2 when encounter\
    \ \\t\n            else if(c == '\\r') 3 // return 3 when encounter \\r\n    \
    \        else if(c == '\\v') 4 // return 4 when encounter \\v\n            else\
    \ if(c == '\\f') 5 // return 5 when encounter \\f\n            else if(c == '\\\
    e') 6 // return 6 when encounter \\e\n            else if(c == '\\a') 7 // return\
    \ 7 when encounter \\a\n            else if(c == '\\v') 8 // return 8 when encounter\
    \ \\v\n            else if(c == '\\e') 9 // return 9 when encounter \\e\n    \
    \        else if(c == '\\a') 10 // return 10 when encounter \\a\n            else\
    \ if(c == '\\v') 11 // return 11 when encounter \\v\n            else if(c ==\
    \ '\\e') 12 // return 12 when encounter \\e\n            else if(c == '\\a') 13\
    \ // return 13 when encounter \\a\n            else if(c == '\\v') 14 // return\
    \ 14 when encounter \\v\n            else if(c == '\\e') 15 // return 15 when\
    \ encounter \\e\n            else if(c == '\\a') 16 // return 16 when encounter\
    \ \\a\n            else if(c == '\\v') 17 // return 17 when encounter \\v\n  \
    \          else if(c == '\\e') 18 // return 18 when encounter \\e\n          \
    \  else if(c == '\\a') 19 // return 19 when encounter \\a\n            else if(c\
    \ == '\\v') 20 // return 20 when encounter \\v\n            else if(c == '\\e')\
    \ 21 // return 21 when encounter \\e\n            else if(c == '\\a') 22 // return\
    \ 22 when encounter \\a\n            else if(c == '\\v') 23 // return 23 when\
    \ encounter \\v\n            else if(c == '\\e') 24 // return 24 when encounter\
    \ \\e\n            else if(c == '\\a') 25 // return 25 when encounter \\a\n  \
    \          else if(c == '\\v') 26 // return 26 when encounter \\v\n          \
    \  else if(c == '\\e') 27 // return 27 when encounter \\e\n            else if(c\
    \ == '\\a') 28 // return 28 when encounter \\a\n            else if(c == '\\v')\
    \ 29 // return 29 when encounter \\v\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpz3qk0dqc.scala:16:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\\
    v'\e[0m) \e[31m4\e[0m \e[34m// return 4 when encounter \\v\e[0m\n\e[31m\e[31m\
    \   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m                 \
    \          invalid escape character\n\e[31m\e[31m-- Error: /tmp/tmpz3qk0dqc.scala:18:27\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m18 |\e[0m       \
    \     \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\e'\e[0m) \e[31m6\e[0m \e[34m//\
    \ return 6 when encounter \\e\e[0m\n\e[31m\e[31m   |\e[0m                    \
    \       ^\e[0m\n\e[31m   |\e[0m                           invalid escape character\n\
    \e[31m\e[31m-- Error: /tmp/tmpz3qk0dqc.scala:19:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\\
    a'\e[0m) \e[31m7\e[0m \e[34m// return 7 when encounter \\a\e[0m\n\e[31m\e[31m\
    \   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m                 \
    \          invalid escape character\n\e[31m\e[31m-- Error: /tmp/tmpz3qk0dqc.scala:20:27\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m20 |\e[0m       \
    \     \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\v'\e[0m) \e[31m8\e[0m \e[34m//\
    \ return 8 when encounter \\v\e[0m\n\e[31m\e[31m   |\e[0m                    \
    \       ^\e[0m\n\e[31m   |\e[0m                           invalid escape character\n\
    \e[31m\e[31m-- Error: /tmp/tmpz3qk0dqc.scala:21:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\\
    e'\e[0m) \e[31m9\e[0m \e[34m// return 9 when encounter \\e\e[0m\n\e[31m\e[31m\
    \   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m                 \
    \          invalid escape character\n\e[31m\e[31m-- Error: /tmp/tmpz3qk0dqc.scala:22:27\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m22 |\e[0m       \
    \     \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\a'\e[0m) \e[31m10\e[0m \e[34m//\
    \ return 10 when encounter \\a\e[0m\n\e[31m\e[31m   |\e[0m                   \
    \        ^\e[0m\n\e[31m   |\e[0m                           invalid escape character\n\
    \e[31m\e[31m-- Error: /tmp/tmpz3"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        var length = 0\n        for\
    \ (i <- 0 until charArray.length)\n            length += charArray(i).length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcq6nl9rw.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += charArray(i).length\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpcq6nl9rw.scala:13:35 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m            length += charArray(i).length\n\e[31m\e[31m   |\e[0m          \
    \            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      value\
    \ length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        val result = new mutable.ListBuffer[Long]()\n\
    \        for(i <- 0 until length){\n            result += math.abs(string.charAt(i)\
    \ - 'a')\n        }\n        result.toList.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3z_nt5la.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793222
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ val result = new mutable.ListBuffer[Long]()\n        for (i <- 0 until length)\
    \ {\n            val c = chars(i)\n            if (c == '.') {\n             \
    \   result.add(0)\n            } else {\n                result.add(c == '-' ?\
    \ 1 : 0)\n            }\n        }\n        result.toList.sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqcu6p09m.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpqcu6p09m.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpqcu6p09m.scala:14:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e\
    [0m \e[36mc\e[0m = chars(i)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    \e[33mvalue\e[0m \e[35mchars\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val strLen = string.length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n        val charLen = string.toCharArray().length\n\
    \        val charLen = string.toCharArray().length\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpk1wby09r.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcharLen\e[0m = string.toCharArray().length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mcharLen is already defined as \e[33mvalue\e[0m \e[35mcharLen\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpk1wby09r.scala:13:12 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36mcharLen\e[0m = string.toCharArray().length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mcharLen is already defined as \e[33mvalue\e[0m \e[35mcharLen\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpk1wby09r.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mcharLen\e[0m = string.toCharArray().length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mcharLen is already defined as \e[33mvalue\e[0m \e[35mcharLen\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpk1wby09r.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mcharLen\e[0m = string.toCharArray().length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mcharLen is already defined as \e[33mvalue\e[0m \e[35mcharLen\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpk1wby09r.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mcharLen\e[0m = string.toCharArray().length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mcha"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.foldLeft(0)((acc, c) => acc + c.length)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsjaa0dkl.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsjaa0dkl.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.foldLeft(\e[31m0\e[0m)((\e[36macc\e[0m,\
    \ \e[36mc\e[0m) => acc + c.length)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        value foldLeft is not a member of java.util.stream.IntStream\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += 1\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp02w8i64_.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for (i <- 0 until string.length)\n            len\
    \ += (string.charAt(i).toInt - 'a'.toInt)\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpghca9p5j.scala:17)\n\tat Problem.main(tmpghca9p5j.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val strLen = string.foldLeft(0)((acc, c) => acc + c.length)\n       \
    \ return strLen\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxgw3jcb3.scala:10:60 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mstrLen\e[0m = string.foldLeft(\e\
    [31m0\e[0m)((\e[36macc\e[0m, \e[36mc\e[0m) => acc + c.length)\n\e[31m\e[31m  \
    \ |\e[0m                                                          ^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                    value length is not a member\
    \ of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        len.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        return len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkwx5oidt.scala:17)\n\tat Problem.main(tmpkwx5oidt.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793225
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for(i <- 0 until string.length){\n          \
    \  length += 1\n        }\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        val result = new mutable.MutableList[Long]()\n\
    \        for(i <- 0 until length){\n            val digit = string.charAt(i)\n\
    \            val digitValue = digit.toInt\n            val digitValueInt = digitValue.toLong\n\
    \            val digitValueLong = digitValueInt.toLong\n            val digitValueLongInt\
    \ = digitValueLong.toInt\n            val digitValueLongLong = digitValueLongInt.toLong\n\
    \            val digitValueLongLongInt = digitValueLongLong.toInt\n          \
    \  val digitValueLongLongLong = digitValueLongLongInt.toLong\n            val\
    \ digitValueLongLongLongInt = digitValueLongLongLong.toInt\n            val digitValueLongLongLongLong\
    \ = digitValueLongLongLongInt.toLong\n            val digitValueLongLongLongLongInt\
    \ = digitValueLongLongLongLong.toInt\n            val digitValueLongLongLongLongLong\
    \ = digitValueLongLongLongLongInt.toLong\n            val digitValueLongLongLongLongLongInt\
    \ = digitValueLongLongLongLongLong.toInt\n            val digitValueLongLongLongLongLongLong\
    \ = digitValueLongLongLongLongLongInt.toLong\n            val digitValueLongLongLongLongLongLongInt\
    \ = digitValueLongLongLongLongLongLongLong.toInt\n            val digitValueLongLongLongLongLongLongLong\
    \ = digitValueLongLongLongLongLongLongLongInt.toLong\n            val digitValueLongLongLongLongLongLongLongInt\
    \ = digitValueLongLongLongLongLongLongLongLongLong.toInt\n            val digitValueLongLongLongLongLongLongLongLong\
    \ = digitValueLongLongLongLongLongLongLongLongLongInt.toLong\n            val\
    \ digitValueLongLongLongLongLongLongLongLongInt = digitValueLongLongLongLongLongLongLongLongLongLong.toInt\n\
    \            val digitValueLongLongLongLongLongLongLongLongLong = digitValueLongLongLongLongLongLongLongLongLongLongInt.toLong\n\
    \            val digitValueLongLongLongLongLongLongLongLongLongInt = digitValueLongLongLongLongLongLongLongLongLongLongLongLong.toInt\n\
    \            val digitValueLongLongLongLongLongLongLongLongLongLong = digitValueLongLongLongLongLongLongLongLongLongLongLongLongInt.toLong\n\
    \            val digitValueLongLongLongLongLongLongLongLongLongLongInt = digitValueLongLongLongLongLongLongLongLongLongLongLongLongLong.toInt\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmph8482y6t.scala:44:0 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph8482y6t.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mresult\e[0m = \e[33mnew\e[0m mutable.MutableList[\e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmph8482y6t.scala:35:72 ------------------------\e[0m\e[0m\n\e[31m35 |\e\
    [0m            \e[33mval\e[0m \e[36mdigitValueLongLongLongLongLongLongLongLongLongLongInt\e\
    [0m = digitValueLongLongLongLongLongLongLongLongLongLongLongLongLong.toInt\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: digitValueLongLongLongLongLongLongLongLongLongLongLongLongLong\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph8482y6t.scala:33:68\
    \ ------------------------\e[0m\e[0m\n\e[31m33 |\e[0m            \e[33mval\e[0m\
    \ \e[36mdigitValueLongLongLongLongLongLongLongLongLongInt\e[0m = digitValueLongLongLongLongLongLongLongLongLongLongLongLong.toInt\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m   Not found: digitValueLongLongLongLongLongLongLongLongLongLongLongLong\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph8482y6t.scala:34:69\
    \ ------------------------\e[0m\e[0m\n\e[31m34 |\e[0m            \e[33mval\e[0m\
    \ \e[36mdigitValueLongLongLongLongLongLongLongLongLongLong\e[0m = digitValueLongLongLongLongLongLongLongLongLongLongLongLongInt.toLong\n\
    \e[31m\e[31m  "
  stdout: ''
  timestamp: 1659793225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.map(_.toInt).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val strArray = string.split(\"\")\n        val strArrayLength = strArray.length\n\
    \        strArrayLength\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpaoogex53.scala:15)\n\tat Problem.main(tmpaoogex53.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793225
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val count = chars.count\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793227
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0\n        for(i <- 0 until string.length) length += string.charAt(i).toInt\
    \ + 1\n        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2jv_dt81.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until string.length)\
    \ length += string.charAt(i).toInt + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \                                   ^^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \     value += is not a member of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793227
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += (string.charAt(i).toChar).asInstanceOf[Int]\n        len\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2v1jmca5.scala:17)\n\tat Problem.main(tmp2v1jmca5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length : Long = 0\n        for(i <- 0 until string.length)\n    \
    \        length += 1\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb_f1i3n7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for (char <- string) {\n            length +=\
    \ 1\n        }\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        chars.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphkjki8b3.scala:11:14 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        chars.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        value length is not a member of java.util.stream.IntStream\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.map(_.toInt).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += 1\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.map(_.toInt).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        chars.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphkjki8b3.scala:11:14 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        chars.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        value length is not a member of java.util.stream.IntStream\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.map(_.toInt).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        val chars = string.chars\n      \
    \  val charsLength = chars.length\n        var count = 0\n        for(i <- 0 until\
    \ length) {\n            count += chars(i).length\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7yq3_dez.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcharsLength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp7yq3_dez.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            count += chars(i).length\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp7yq3_dez.scala:15:21\
    \ -----------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            count +=\
    \ chars(i).length\n\e[31m\e[31m   |\e[0m                     ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     \e[33mvalue\e[0m \e[35mchars\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        var count = 0\n        for\
    \ (i <- 0 until charArray.length)\n            count += charArray(i)\n       \
    \ count\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\"\
    )) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpg_oypcgf.scala:18)\n\tat Problem.main(tmpg_oypcgf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.map(_.toInt).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for (c <- string) {\n            len += 1\n    \
    \    }\n        return len\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"\
    asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fu8l819.scala:17)\n\tat Problem.main(tmp9fu8l819.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val count = chars.length\n        chars.toList.map(_.toInt).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb_ajs2rk.scala:11:26 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \            value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpb_ajs2rk.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ val result = new mutable.ListBuffer[Long]()\n        for (i <- 0 until length)\
    \ {\n            val c = chars(i)\n            if (c == '.') {\n             \
    \   result += 0\n            } else {\n                result += 1\n         \
    \   }\n        }\n        result.toList.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps5jgfjtj.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmps5jgfjtj.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmps5jgfjtj.scala:14:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e\
    [0m \e[36mc\e[0m = chars(i)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    \e[33mvalue\e[0m \e[35mchars\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ val sum = 0L\n        for(i <- 0 until length){\n            sum += chars(i).length\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptv8xo_dz.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmptv8xo_dz.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            sum += chars(i).length\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmptv8xo_dz.scala:14:19\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            sum += chars(i).length\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^\e[0m\n\e[31m   |\e[0m          \
    \         \e[33mvalue\e[0m \e[35mchars\e[0m does not take parameters\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659793229
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        return len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkwx5oidt.scala:17)\n\tat Problem.main(tmpkwx5oidt.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0L\n        for(i <- 0 until string.length)\n          \
    \  length += 1\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj_y3ro71.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val str = new StringBuilder(string)\n        str.deleteCharAt(str.length-1)\n\
    \        str.length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: index -1, length 0\n\tat java.base/java.lang.String.checkIndex(String.java:4563)\n\
    \tat java.base/java.lang.AbstractStringBuilder.deleteCharAt(AbstractStringBuilder.java:970)\n\
    \tat java.base/java.lang.StringBuilder.deleteCharAt(StringBuilder.java:298)\n\t\
    at scala.collection.mutable.StringBuilder.deleteCharAt(StringBuilder.scala:395)\n\
    \tat Problem$.strlen(tmppv_49jdw.scala:11)\n\tat Problem$.main(tmppv_49jdw.scala:15)\n\
    \tat Problem.main(tmppv_49jdw.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.foldLeft(0) { (sum, char) =>\n            sum + (if (char == '\\n') 1\
    \ else 0)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpstbdq9yk.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpstbdq9yk.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.foldLeft(\e[31m0\e[0m) { (\e[36msum\e[0m,\
    \ \e[36mchar\e[0m) =>\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m        value foldLeft is not a member of java.util.stream.IntStream\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += string.charAt(i).toChar\n        length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqbbykemz.scala:17)\n\tat Problem.main(tmpqbbykemz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        len.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793224
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fu8l819.scala:17)\n\tat Problem.main(tmp9fu8l819.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val strLen = string.length\n        for(i <- 0 until strLen) yield {\n\
    \            val c = string.charAt(i)\n            if(c == '.') return strLen\
    \ - i\n            else if(c == '-') return strLen - i\n            else if(c\
    \ == '+') return strLen - i\n            else if(c == '/') return strLen - i\n\
    \            else if(c == '*') return strLen - i\n            else if(c == '(')\
    \ return strLen - i\n            else if(c == ')') return strLen - i\n       \
    \     else if(c == '+') return strLen - i\n            else if(c == '-') return\
    \ strLen - i\n            else if(c == '*') return strLen - i\n            else\
    \ if(c == '/') return strLen - i\n            else if(c == '.') return strLen\
    \ - i\n            else if(c == '-') return strLen - i\n            else if(c\
    \ == '+') return strLen - i\n            else if(c == '/') return strLen - i\n\
    \            else if(c == '*') return strLen - i\n            else if(c == '(')\
    \ return strLen - i\n            else if(c == ')') return strLen - i\n       \
    \     else if(c == '+') return strLen - i\n            else if(c == '-') return\
    \ strLen - i\n            else if(c == '*') return strLen - i\n            else\
    \ if(c == '/') return strLen - i\n            else if(c == '.') return strLen\
    \ - i\n            else if(c == '-') return strLen - i\n            else if(c\
    \ == '+') return strLen - i\n            else if(c == '/') return strLen - i\n\
    \            else if(c == '*') return strLen - i\n            else if(c == '(')\
    \ return strLen - i\n            else if(c == ')') return strLen - i\n       \
    \     else if(c == '+') return strLen - i\n            else if(c == '-') return\
    \ strLen - i\n            else if(c == '*') return strLen - i\n            else\
    \ if(c == '/') return strLen - i\n            else if(c == '.') return strLen\
    \ - i\n            else if(c == '-') return strLen - i\n            else if(c\
    \ == '+') return strLen - i\n            else if(c == '/') return strLen - i\n\
    \            else if(c == '*') return strLen - i\n            else if(c == '(')\
    \ return strLen - i\n            else if(c == ')') return strLen - i\n       \
    \     else if(c == '+') return strLen \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx9gvijki.scala:62:0 ----------------------------\e\
    [0m\e[0m\n\e[31m62 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpx9gvijki.scala:61:1\
    \ ---------------------\e[0m\e[0m\n\e[31m61 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e\
    [0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m   |\e[0m Required: Long\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[33m\e[33m-- Warning: /tmp/tmpx9gvijki.scala:55:4 ----------------------------------------\e\
    [0m\e[0m\n\e[33m55 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m\
    \   |\e[0m    Line is indented too far to the left, or a `}` is missing\n1 warning\
    \ found\n2 errors found\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0L\n        for(i <- 0 until string.length)\n          \
    \  length += string.charAt(i).toChar\n        length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5h8h0ql6.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += string.charAt(i).toChar\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.map(_.toInt).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = 0\n        for\
    \ (i <- 0 until charArray.length)\n            length += charArray(i).length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv36mjdgw.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += charArray(i).length\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean length.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpv36mjdgw.scala:13:35 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m            length += charArray(i).length\n\e[31m\e[31m   |\e[0m          \
    \            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      value\
    \ length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var count = 0\n        for(i <- 0 until string.length)\n            count\
    \ += string.charAt(i).toString.length\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val str = new StringBuilder(string).reverse\n        str.takeWhile(_\
    \ != '\\0').length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp14mimzjm.scala:11:28 -----------------------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        str.takeWhile(_ != \e[31m'\\0'\e[0m).length\n\
    \e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m     \
    \          octal escape literals are unsupported: use \\u0000 instead\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793228
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.foldLeft(0)((sum, char) => sum + char.asInstanceOf[Int])\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2f8h7tsn.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2f8h7tsn.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.foldLeft(\e[31m0\e[0m)((\e[36msum\e\
    [0m, \e[36mchar\e[0m) => sum + char.asInstanceOf[\e[35mInt\e[0m])\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fu8l819.scala:17)\n\tat Problem.main(tmp9fu8l819.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        if (len == 0) 0 else len\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n  \
    \  assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = charArray.length\n\
    \        val sum = 0L\n        for (i <- 0 until length) {\n            sum +=\
    \ charArray(i)\n        }\n        length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprljb3cpu.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            sum += charArray(i)\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += 1\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp02w8i64_.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for (i <- 0 until string.length)\n            len\
    \ += string(i)\n        len\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n   \
    \ assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxwpqlrtn.scala:17)\n\tat Problem.main(tmpxwpqlrtn.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793231
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.foldLeft(0)((sum, char) => sum + char.length)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvn5xuhtk.scala:10:53 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        string.foldLeft(\e[31m0\e[0m)((\e[36msum\e[0m,\
    \ \e[36mchar\e[0m) => sum + char.length)\n\e[31m\e[31m   |\e[0m              \
    \                                  ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \                           value length is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val strLen = string.length\n        val charLen = string.toCharArray.length\n\
    \        val strLen = strLen.toLong\n        val charLen = charLen.toLong\n  \
    \      val result = strLen + charLen\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphm9qr2f5.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mstrLen\e[0m = strLen.toLong\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mstrLen\
    \ is already defined as \e[33mvalue\e[0m \e[35mstrLen\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmphm9qr2f5.scala:13:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36mcharLen\e[0m = charLen.toLong\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcharLen is already defined as \e[33mvalue\e[0m \e[35mcharLen\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659793229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.foldLeft(0L){\n            (a,b) => a + b.length\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp00u0tgc2.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            (\e[36ma\e[0m,\e[36mb\e[0m) => a + b.length\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                        value length is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for (i <- 0 until string.length)\n            len\
    \ += (string.charAt(i).toInt * (string.length.toDouble / string.length.toInt))\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxv0y1rus.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            len += (string.charAt(i).toInt * (string.length.toDouble\
    \ / string.length.toInt))\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            value += is not a member of Int - did you mean Int.!=?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793232
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.map(_.toInt).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = 0\n        for\
    \ (i <- 0 until charArray.length)\n            length += charArray(i).length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv36mjdgw.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += charArray(i).length\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean length.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpv36mjdgw.scala:13:35 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m            length += charArray(i).length\n\e[31m\e[31m   |\e[0m          \
    \            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      value\
    \ length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        if (length == 0)\n            return\
    \ 0\n        else\n            return length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793232
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var count = 0\n        for(i <- 0 until string.length)\n            count\
    \ += string.charAt(i).toChar\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6nbrj8fq.scala:17)\n\tat Problem.main(tmp6nbrj8fq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793235
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var count = 0\n        for(i <- 0 until string.length)\n            count\
    \ += string.charAt(i).toChar\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6nbrj8fq.scala:17)\n\tat Problem.main(tmp6nbrj8fq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793235
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += string.charAt(i).toChar\n        length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqbbykemz.scala:17)\n\tat Problem.main(tmpqbbykemz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        len.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        for(i <- 0 until length) yield {\n\
    \            val c = string.charAt(i)\n            if(c == '.') return length\n\
    \            else if(c == '-') return length\n            else if(c == '+') return\
    \ length\n            else if(c == '/') return length\n            else if(c ==\
    \ '*') return length\n            else if(c == '%') return length\n          \
    \  else if(c == '!') return length\n            else if(c == '?') return length\n\
    \            else if(c == '(') return length\n            else if(c == ')') return\
    \ length\n            else if(c == '[') return length\n            else if(c ==\
    \ ']') return length\n            else if(c == '{') return length\n          \
    \  else if(c == '}') return length\n            else if(c == '=') return length\n\
    \            else if(c == '<') return length\n            else if(c == '>') return\
    \ length\n            else if(c == '|') return length\n            else if(c ==\
    \ '~') return length\n            else if(c == '^') return length\n          \
    \  else if(c == '&') return length\n            else if(c == '$') return length\n\
    \            else if(c == '@') return length\n            else if(c == '!') return\
    \ length\n            else if(c == '#') return length\n            else if(c ==\
    \ '$') return length\n            else if(c == '%') return length\n          \
    \  else if(c == '&') return length\n            else if(c == '*') return length\n\
    \            else if(c == '+') return length\n            else if(c == '-') return\
    \ length\n            else if(c == '.') return length\n            else if(c ==\
    \ '/') return length\n            else if(c == '?') return length\n          \
    \  else if(c == '!') return length\n            else if(c == '(') return length\n\
    \            else if(c == ')') return length\n            else if(c == '[') return\
    \ length\n            else if(c == ']') return length\n            else if(c ==\
    \ '{') return length\n            else if(c == '}') return length\n          \
    \  else if(c == '=') return length\n            else if(c == '<') return length\n\
    \            else if(c == '>') return length\n            else if(c == '|') return\
    \ length\n            else if(c == '~') return length\n            else if(c ==\
    \ '^') return length\n            else if(c == '&') return length\n          \
    \  else if(c == '$') return length\n            else if(c == '@') return length\n\
    \            else if(c == '!') return length\n            else if(c == '#') return\
    \ length\n            else if(c == '$') return length\n            else if(c ==\
    \ '%') return length\n            else if(c == '&') return length\n          \
    \  else \n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\"\
    )) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp_bziul8w.scala:68:16 ---------------------------\e\
    [0m\e[0m\n\e[31m68 |\e[0m            \e[33melse\e[0m \n\e[31m\e[31m   |\e[0m \
    \               ^\e[0m\n\e[31m   |\e[0m                expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_bziul8w.scala:77:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m77 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmp_bziul8w.scala:76:1 ---------------------\e[0m\e[0m\n\
    \e[31m76 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:    Unit\n\
    \e[31m   |\e[0m Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[33m\e[33m-- Warning: /tmp/tmp_bziul8w.scala:70:4\
    \ ----------------------------------------\e[0m\e[0m\n\e[33m70 |\e[0m    \e[33mdef\e\
    [0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e[0m[\e[35mString\e[0m]) = {\n\
    \e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m    Line is indented too far to\
    \ the left, or a `}` is missing\n1 warning found\n3 errors found\n"
  stdout: ''
  timestamp: 1659793235
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val str = new StringBuilder(string)\n        str.deleteCharAt(str.length-1)\n\
    \        str.length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: index -1, length 0\n\tat java.base/java.lang.String.checkIndex(String.java:4563)\n\
    \tat java.base/java.lang.AbstractStringBuilder.deleteCharAt(AbstractStringBuilder.java:970)\n\
    \tat java.base/java.lang.StringBuilder.deleteCharAt(StringBuilder.java:298)\n\t\
    at scala.collection.mutable.StringBuilder.deleteCharAt(StringBuilder.scala:395)\n\
    \tat Problem$.strlen(tmppv_49jdw.scala:11)\n\tat Problem$.main(tmppv_49jdw.scala:15)\n\
    \tat Problem.main(tmppv_49jdw.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        chars.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphkjki8b3.scala:11:14 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        chars.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        value length is not a member of java.util.stream.IntStream\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = 0\n        for\
    \ (i <- 0 until charArray.length)\n            length += charArray(i)\n      \
    \  length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1cd7mg0i.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += charArray(i)\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        val result = new mutable.MutableList[Int]()\n\
    \        var i = 0\n        while (i < length) {\n            val c = string.charAt(i)\n\
    \            if (c == '.') {\n                result += new mutable.MutableList[Int]()\n\
    \            }\n            result += c\n            i += 1\n        }\n     \
    \   val result = new mutable.MutableList[Int]()\n        var i = 0\n        while\
    \ (i < length) {\n            val c = string.charAt(i)\n            if (c == '.')\
    \ {\n                result += new mutable.MutableList[Int]()\n            }\n\
    \            result += c\n            i += 1\n        }\n        val result =\
    \ new mutable.MutableList[Int]()\n        var i = 0\n        while (i < length)\
    \ {\n            val c = string.charAt(i)\n            if (c == '.') {\n     \
    \           result += new mutable.MutableList[Int]()\n            }\n        \
    \    result += c\n            i += 1\n        }\n        val result = new mutable.MutableList[Int]()\n\
    \        var i = 0\n        while (i < length) {\n            val c = string.charAt(i)\n\
    \            if (c == '.') {\n                result += new mutable.MutableList[Int]()\n\
    \            }\n            result += c\n            i += 1\n        }\n     \
    \   val result = new mutable.MutableList[Int]()\n        var i = 0\n        while\
    \ (i < length) {\n            val c = string.charAt(i)\n            if (c == '.')\
    \ {\n                result += new mutable.MutableList[Int]()\n            }\n\
    \            result += c\n            i += 1\n        }\n        val result =\
    \ new mutable.MutableList[Int]()\n        var i = 0\n        while (i < length)\
    \ {\n            val c = string.charAt(i)\n            if (c == '.') {\n     \
    \           result += new mutable.MutableList[Int]()\n            }\n        \
    \    result += c\n            i += 1\n        }\n        val result = new mutable.MutableList[Int]()\n\
    \        var i = 0\n        while (i < length) {\n            val c = string.charAt(i)\n\
    \            if (c == '.') {\n                result += new mutable.MutableList[Int]()\n\
    \            }\n            result += c\n            i += 1\n        }\n     \
    \   val result = new mutable.MutableList[Int]()\n        var i = 0\n        while\
    \ (i < length) {\n            val c = string.charAt(i)\n            if (c == '.')\
    \ {\n                result += new mutable.MutableList[Int]()\n            }\n\
    \            result += c\n            i += 1\n        }\n        val result =\
    \ new mutable.MutableList[Int]()\n        var i = 0\n        while (i < length)\
    \ {\n            val c = string.charAt(i)\n            if (c == '.') {\n     \
    \           result += new mutable.MutableList[Int]()\n            }\n        \
    \    result += c\n            i += 1\n        }\n        val result = new mutable.MutableList[Int]()\n\
    \        var i = 0\n        while (i < length) {\n            \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjqa1vuy6.scala:113:0 ---------------------------\e\
    [0m\e[0m\n\e[31m113 |\e[0m\n\e[31m\e[31m    |\e[0m^\e[0m\n\e[31m    |\e[0m'}'\
    \ expected, but eof found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjqa1vuy6.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mresult\e[0m = \e[33mnew\e[0m mutable.MutableList[\e[35mInt\e[0m]()\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mresult is already defined as \e[33mvalue\e[0m \e[35mresult\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpjqa1vuy6.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mvar\e[0m \e[36mi\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mi is already defined as \e[33mvariable\e\
    [0m \e[35mi\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpjqa1vuy6.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.MutableList[\e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mresult is already defined as \e[33mvalue\e[0m \e[35mresult\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjqa1vuy6.scala:32:12 ---------------------------\e[0m\e[0m\n\e\
    [31m32 |\e[0m        \e[33mvar\e[0m \e[36mi\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mi is already defined as \e[33mvariable\e\
    [0m \e[35mi\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpjqa1vuy6.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.Mut"
  stdout: ''
  timestamp: 1659793235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.map(_.toInt).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ chars.toList.map(_.toInt).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2b2jcyln.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        chars.toList.map(_.toInt).sum\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of java.util.stream.IntStream\n2 errors found\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        var count = 0\n        for\
    \ (i <- 0 until charArray.length)\n            count += charArray(i)\n       \
    \ count\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\"\
    )) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpg_oypcgf.scala:18)\n\tat Problem.main(tmpg_oypcgf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        len.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = charArray.length\n\
    \        val sum = 0L\n        for (i <- 0 until length) {\n            sum +=\
    \ math.pow(charArray(i).asInstanceOf[Int], 2)\n        }\n        sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl5sh311w.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            sum += math.pow(charArray(i).asInstanceOf[\e\
    [35mInt\e[0m], \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e\
    [31m   |\e[0m            value += is not a member of Long - did you mean sum.!=?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val strLen = string.size\n        val strLenLen = strLen.toString.length\n\
    \        val strLenLenLen = strLenLen.toString.length\n        val strLenLenLenLen\
    \ = strLenLenLen.toString.length\n        val strLenLenLenLenLen = strLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n    \
    \    val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n  \
    \      val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n \
    \   assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbhorm2rh.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbhorm2rh.scala:18:45\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                             ^\e[0m\n\e[31m\
    \   |\e[0m               Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbhorm2rh.scala:19:48\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^\e[0m\n\e\
    [31m   |\e[0m            Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbhorm2rh.scala:20:54\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                      ^\e\
    [0m\n\e[31m   |\e[0m      Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbhorm2rh.scala:26:81\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                      "
  stdout: ''
  timestamp: 1659793235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ val result = new mutable.ListBuffer[Long]()\n        for(i <- 0 until length){\n\
    \            result += chars(i).length\n        }\n        result.toList.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpp00vcppq.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpp00vcppq.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793235
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fu8l819.scala:17)\n\tat Problem.main(tmp9fu8l819.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        val result = new mutable.ListBuffer[Long]()\n\
    \        for(i <- 0 until length){\n            result += i.toLong\n        }\n\
    \        result.toList.length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpei91lpwf.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793233
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        len.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val str = new StringBuilder(string)\n        var count = 0\n        str.foreach\
    \ { c =>\n            if (c == '\\0') count += 1\n            else count += 1\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpmv37mje2.scala:13:22 -----------------------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mif\e[0m (c == \e[31m'\\0'\e[0m) count\
    \ += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m               octal escape literals are unsupported: use \\u0000 instead\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0L\n        for(i <- 0 until string.length)\n          \
    \  length += 1\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj_y3ro71.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += 1\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        len.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793224
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val strLen = string.length\n        val charLen = string.toCharArray().length\n\
    \        val result = strLen + charLen\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt08o9cw0.scala:17)\n\tat Problem.main(tmpt08o9cw0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        val chars = string.chars\n      \
    \  val charsLength = chars.length\n        var sum = 0\n        var i = 0\n  \
    \      while (i < charsLength) {\n            val char = chars(i)\n          \
    \  sum += char.asInstanceOf[Char].toInt\n            i += 1\n        }\n     \
    \   sum\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\"\
    )) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpk52lr11_.scala:12:32 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcharsLength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              value length is not a member of java.util.stream.IntStream\n\e\
    [31m\e[31m-- [E050] Type Error: /tmp/tmpk52lr11_.scala:16:23 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[36mchar\e[0m = chars(i)\n\
    \e[31m\e[31m   |\e[0m                       ^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                 \e[33mvalue\e[0m \e[35mchars\e[0m does not take parameters\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793235
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val strArray = string.split(\"\")\n        val strLen = strArray.length\n\
    \        return strLen\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5nzut5bl.scala:15)\n\tat Problem.main(tmp5nzut5bl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ val sum = 0\n        for (i <- 0 until length) {\n            sum += chars(i).length\n\
    \        }\n        length\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"\
    asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmply4ax5bn.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmply4ax5bn.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            sum += chars(i).length\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmply4ax5bn.scala:14:19\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            sum += chars(i).length\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^\e[0m\n\e[31m   |\e[0m          \
    \         \e[33mvalue\e[0m \e[35mchars\e[0m does not take parameters\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659793236
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fu8l819.scala:17)\n\tat Problem.main(tmp9fu8l819.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        for(i <- 0 until length) yield {\n\
    \            val c = string.charAt(i)\n            if(c == '\\'') 1\n        \
    \    else if(c == '\\\\') 2\n            else if(c == '\\n') 3\n            else\
    \ if(c == '\\r') 4\n            else if(c == '\\t') 5\n            else if(c ==\
    \ '\\b') 6\n            else if(c == '\\v') 7\n            else if(c == '\\a')\
    \ 8\n            else if(c == '\\e') 9\n            else if(c == '\\U') 10\n \
    \           else if(c == '\\L') 11\n            else if(c == '\\P') 12\n     \
    \       else if(c == '\\C') 13\n            else if(c == '\\G') 14\n         \
    \   else if(c == '\\M') 15\n            else if(c == '\\N') 16\n            else\
    \ if(c == '\\Z') 17\n            else if(c == '\\E') 18\n            else if(c\
    \ == '\\a') 19\n            else if(c == '\\e') 20\n            else if(c == '\\\
    U') 21\n            else if(c == '\\L') 22\n            else if(c == '\\P') 23\n\
    \            else if(c == '\\C') 24\n            else if(c == '\\G') 25\n    \
    \        else if(c == '\\M') 26\n            else if(c == '\\N') 27\n        \
    \    else if(c == '\\Z') 28\n            else if(c == '\\E') 29\n            else\
    \ if(c == '\\a') 30\n            else if(c == '\\e') 31\n            else if(c\
    \ == '\\U') 32\n            else if(c == '\\L') 33\n            else if(c == '\\\
    P') 34\n            else if(c == '\\C') 35\n            else if(c == '\\G') 36\n\
    \            else if(c == '\\M') 37\n            else if(c == '\\N') 38\n    \
    \        else if(c == '\\Z') 39\n            else if(c == '\\E') 40\n        \
    \    else if(c == '\\a') 41\n            else if(c == '\\e') 42\n            else\
    \ if(c == '\\U') 43\n            else if(c == '\\L') 44\n            else if(c\
    \ == '\\P') 45\n            else if(c == '\\C') 46\n            else if(c == '\\\
    G') 47\n            else if(c == '\\M') 48\n            else if(c == '\\N') 49\n\
    \            else if(c == '\\Z') 50\n            else if(c == '\\E') 51\n    \
    \        else if(c == '\\a') 52\n            else if(c == '\\e') 53\n        \
    \    else if(c == '\\U') 54\n            else if(c == '\\L') \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpcpw1hgcp.scala:19:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\\
    v'\e[0m) \e[31m7\e[0m\n\e[31m\e[31m   |\e[0m                           ^\e[0m\n\
    \e[31m   |\e[0m                           invalid escape character\n\e[31m\e[31m--\
    \ Error: /tmp/tmpcpw1hgcp.scala:20:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\\
    a'\e[0m) \e[31m8\e[0m\n\e[31m\e[31m   |\e[0m                           ^\e[0m\n\
    \e[31m   |\e[0m                           invalid escape character\n\e[31m\e[31m--\
    \ Error: /tmp/tmpcpw1hgcp.scala:21:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\\
    e'\e[0m) \e[31m9\e[0m\n\e[31m\e[31m   |\e[0m                           ^\e[0m\n\
    \e[31m   |\e[0m                           invalid escape character\n\e[31m\e[31m--\
    \ Error: /tmp/tmpcpw1hgcp.scala:22:28 -----------------------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\\
    U'\e[0m) \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m                            ^\e[0m\n\
    \e[31m   |\e[0m                            invalid character in unicode escape\
    \ sequence\n\e[31m\e[31m-- Error: /tmp/tmpcpw1hgcp.scala:23:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\\
    L'\e[0m) \e[31m11\e[0m\n\e[31m\e[31m   |\e[0m                           ^\e[0m\n\
    \e[31m   |\e[0m                           invalid escape character\n\e[31m\e[31m--\
    \ Error: /tmp/tmpcpw1hgcp.scala:24:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\\
    P'\e[0m) \e[31m12\e[0m\n\e[31m\e[31m   |\e[0m                           ^\e[0m\n\
    \e[31m   |\e[0m                           invalid escape character\n\e[31m\e[31m--\
    \ Error: /tmp/tmpcpw1hgcp.scala:25:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(c == \e[31m'\\\
    C'\e[0m) \e[31m13\e[0m\n\e[31m\e[31m   |\e[0m                           ^\e[0m\n\
    \e[31m   "
  stdout: ''
  timestamp: 1659793236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val str = new StringBuilder()\n        str.append(string)\n        str.result()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxbhi35z5.scala:12:18\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        str.result()\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    String\n\
    \e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793223
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        if (len == 0) 0 else len\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n  \
    \  assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fu8l819.scala:17)\n\tat Problem.main(tmp9fu8l819.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for (c <- string) {\n            length += 1\n\
    \        }\n        length\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"\
    asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793128
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ val result = new Array[Long](length)\n        for(i <- 0 until length) result(i)\
    \ = chars(i).length\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpljfdzb20.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E050] Type Error: /tmp/tmpljfdzb20.scala:13:45 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until length)\
    \ result(i) = chars(i).length\n\e[31m\e[31m   |\e[0m                         \
    \                    ^^^^^\e[0m\n\e[31m   |\e[0m                             \
    \       \e[33mvalue\e[0m \e[35mchars\e[0m does not take parameters\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpljfdzb20.scala:14:8 ---------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        result\n\e[31m\e[31m   |\e[0m        ^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    (result : Array[Long])\n\e[31m   |\e[0m\
    \        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        chars.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphkjki8b3.scala:11:14 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        chars.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        value length is not a member of java.util.stream.IntStream\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ val result = new mutable.ListBuffer[Long]()\n        for (i <- 0 until length)\
    \ {\n            val c = chars(i)\n            result += c.length\n        }\n\
    \        result.toList.sum\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"\
    asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpht5yqkm7.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpht5yqkm7.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpht5yqkm7.scala:14:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e\
    [0m \e[36mc\e[0m = chars(i)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    \e[33mvalue\e[0m \e[35mchars\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length) len += string.charAt(i).toChar\n\
    \        len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv6pzoxej.scala:16)\n\tat Problem.main(tmpv6pzoxej.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += 1\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp02w8i64_.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length) len += string.charAt(i).toChar\n\
    \        return len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5qk_gslx.scala:16)\n\tat Problem.main(tmp5qk_gslx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ val result = new mutable.ListBuffer[Long]()\n        for (i <- 0 until length)\
    \ {\n            val c = chars(i)\n            if (c == '.') {\n             \
    \   result.add(0)\n            } else {\n                result.add(1)\n     \
    \       }\n        }\n        result.toList.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgoqyrok8.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpgoqyrok8.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpgoqyrok8.scala:14:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e\
    [0m \e[36mc\e[0m = chars(i)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    \e[33mvalue\e[0m \e[35mchars\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659793236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += 1\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp02w8i64_.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val str = new StringBuilder(string)\n        str.deleteCharAt(str.length-1)\n\
    \        str.length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: index -1, length 0\n\tat java.base/java.lang.String.checkIndex(String.java:4563)\n\
    \tat java.base/java.lang.AbstractStringBuilder.deleteCharAt(AbstractStringBuilder.java:970)\n\
    \tat java.base/java.lang.StringBuilder.deleteCharAt(StringBuilder.java:298)\n\t\
    at scala.collection.mutable.StringBuilder.deleteCharAt(StringBuilder.scala:395)\n\
    \tat Problem$.strlen(tmppv_49jdw.scala:11)\n\tat Problem$.main(tmppv_49jdw.scala:15)\n\
    \tat Problem.main(tmppv_49jdw.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        if (len == 0) 0 else len\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n  \
    \  assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val str = new StringBuilder(string)\n        str.deleteCharAt(str.length-1)\n\
    \        str.length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: index -1, length 0\n\tat java.base/java.lang.String.checkIndex(String.java:4563)\n\
    \tat java.base/java.lang.AbstractStringBuilder.deleteCharAt(AbstractStringBuilder.java:970)\n\
    \tat java.base/java.lang.StringBuilder.deleteCharAt(StringBuilder.java:298)\n\t\
    at scala.collection.mutable.StringBuilder.deleteCharAt(StringBuilder.scala:395)\n\
    \tat Problem$.strlen(tmppv_49jdw.scala:11)\n\tat Problem$.main(tmppv_49jdw.scala:15)\n\
    \tat Problem.main(tmppv_49jdw.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length : Long = charArray.length\n\
    \        return length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = string.length\n        val result = new mutable.HashMap[String,\
    \ Long]()\n        for (i <- 0 until length) {\n            val char = string.charAt(i)\n\
    \            val count = result.getOrElse(char, 0)\n            val newCount =\
    \ count + 1\n            result.put(char, newCount)\n        }\n        result.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpghndmh0d.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val strLen = string.length\n        val strLenLen = strLen.toString.length\n\
    \        val strLenLenLen = strLenLen.toString.length\n        val strLenLenLenLen\
    \ = strLenLenLen.toString.length\n        val strLenLenLenLenLen = strLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n    \
    \    val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n  \
    \      val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpw7vcaw2g.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpw7vcaw2g.scala:18:45\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                             ^\e[0m\n\e[31m\
    \   |\e[0m               Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpw7vcaw2g.scala:19:48\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                ^\e[0m\n\e\
    [31m   |\e[0m            Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpw7vcaw2g.scala:20:54\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mstrLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                      ^\e\
    [0m\n\e[31m   |\e[0m      Recursive \e[33mvalue\e[0m \e[35mstrLenLenLenLenLenLenLenLenLenLenLenLen\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw7vcaw2g.scala:23:66\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e\
    [36mstrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\e[0m = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \          ^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659793237
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        return len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkwx5oidt.scala:17)\n\tat Problem.main(tmpkwx5oidt.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793225
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fu8l819.scala:17)\n\tat Problem.main(tmp9fu8l819.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        charArray.length\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793237
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string.charAt(i).toChar\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9fu8l819.scala:17)\n\tat Problem.main(tmp9fu8l819.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length)\n            len\
    \ += string(i)\n        len\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n   \
    \ assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjlnec8ze.scala:17)\n\tat Problem.main(tmpjlnec8ze.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793238
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += string.charAt(i).toChar\n        length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqbbykemz.scala:17)\n\tat Problem.main(tmpqbbykemz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += string.charAt(i).toChar\n        length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqbbykemz.scala:17)\n\tat Problem.main(tmpqbbykemz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length) len += string.charAt(i).toChar\n\
    \        return len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5qk_gslx.scala:16)\n\tat Problem.main(tmp5qk_gslx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val length = chars.length\n       \
    \ val result = new mutable.HashMap[Char, Long]()\n        for (i <- 0 until length)\
    \ {\n            val c = chars(i)\n            val count = result.getOrElse(c,\
    \ 0L)\n            result(c) = (count + 1L)\n        }\n        val sum = 0L\n\
    \        for (i <- 0 until result.size) {\n            val c = chars(i)\n    \
    \        val count = result.getOrElse(c, 0L)\n            sum += count\n     \
    \   }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd6kg05yl.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlength\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \             value length is not a member of java.util.stream.IntStream\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpd6kg05yl.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpd6kg05yl.scala:14:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e\
    [0m \e[36mc\e[0m = chars(i)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    \e[33mvalue\e[0m \e[35mchars\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpd6kg05yl.scala:20:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m20 |\e[0m            \e[33mval\e\
    [0m \e[36mc\e[0m = chars(i)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    \e[33mvalue\e[0m \e[35mchars\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd6kg05yl.scala:22:16\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            sum += count\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1659793238
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        if (len == 0) 0 else len\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n  \
    \  assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = 0\n        for\
    \ (i <- 0 until charArray.length)\n            length += charArray(i).length\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv36mjdgw.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += charArray(i).length\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean length.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpv36mjdgw.scala:13:35 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m            length += charArray(i).length\n\e[31m\e[31m   |\e[0m          \
    \            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      value\
    \ length is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val length = 0\n        for(i <- 0 until string.length)\n           \
    \ length += 1\n        length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp02w8i64_.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for (i <- 0 until string.length)\n            len\
    \ += (string.charAt(i).toInt - 'a'.toInt)\n        len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpghca9p5j.scala:17)\n\tat Problem.main(tmpghca9p5j.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = 0L\n       \
    \ for (i <- 0 until charArray.length)\n            length += charArray(i).asInstanceOf[Int]\n\
    \        length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5ywzhheu.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += charArray(i).asInstanceOf[\e[35mInt\e\
    [0m]\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \     value += is not a member of Long - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793238
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        if (len > 0) {\n            len\n  \
    \      } else {\n            0\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793238
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val charArray = string.toCharArray\n        val length = 0\n        for\
    \ (i <- 0 until charArray.length) {\n            length += 1\n        }\n    \
    \    length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb6uujk7h.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            length += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean length.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793223
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        len\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793238
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for(i <- 0 until string.length) len += (string.charAt(i).toChar\
    \ == '_' ? 1 : 0)\n        len\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplchbw950.scala:11:44 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until string.length)\
    \ len += (string.charAt(i).toChar == \e[31m'_'\e[0m ? \e[31m1\e[0m : \e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                        ^^^^^^\e[0m\n\
    \e[31m   |\e[0m                  value += is not a member of Int - did you mean\
    \ Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplchbw950.scala:11:79\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i\
    \ <- \e[31m0\e[0m until string.length) len += (string.charAt(i).toChar == \e[31m'_'\e\
    [0m ? \e[31m1\e[0m : \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                    \
    \                                                       ^^^^^\e[0m\n\e[31m   |\e\
    [0m                                         value ? is not a member of Char\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793238
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val str = new StringBuilder()\n        str.append(string)\n        str.length()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793238
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        val len = chars.length\n        len\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecwt__lk.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mlen\e[0m = chars.length\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \          value length is not a member of java.util.stream.IntStream\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val chars = string.chars\n        chars.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphkjki8b3.scala:11:14 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        chars.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        value length is not a member of java.util.stream.IntStream\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793229

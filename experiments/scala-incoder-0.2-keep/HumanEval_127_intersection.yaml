name: HumanEval_127_intersection
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given two intervals,\n    // where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n    // The given intervals are\
  \ closed which means that the interval (start, end)\n    // includes both start\
  \ and end.\n    // For each given interval, it is assumed that its start is less\
  \ or equal its end.\n    // Your task is to determine whether the length of intersection\
  \ of these two \n    // intervals is a prime number.\n    // Example, the intersection\
  \ of the intervals (1, 3), (2, 4) is (2, 3)\n    // which its length is 1, which\
  \ not a prime number.\n    // If the length of the intersection is a prime number,\
  \ return \"YES\",\n    // otherwise, return \"NO\".\n    // If the two intervals\
  \ don't intersect, return \"NO\".\n    // [input/output] samples:\n    // intersection((1,\
  \ 2), (2, 3)) ==> \"NO\"\n    // intersection((-1, 1), (0, 4)) ==> \"NO\"\n    //\
  \ intersection((-3, -1), (-5, 5)) ==> \"YES\"\n    def intersection(interval1 :\
  \ Tuple2[Long, Long], interval2 : Tuple2[Long, Long]) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(intersection(((1l,\
  \ 2l)), ((2l, 3l))).equals((\"NO\")));\n    assert(intersection(((-1l, 1l)), ((0l,\
  \ 4l))).equals((\"NO\")));\n    assert(intersection(((-3l, -1l)), ((-5l, 5l))).equals((\"\
  YES\")));\n    assert(intersection(((-2l, 2l)), ((-4l, 0l))).equals((\"YES\")));\n\
  \    assert(intersection(((-11l, 2l)), ((-1l, -1l))).equals((\"NO\")));\n    assert(intersection(((1l,\
  \ 2l)), ((3l, 5l))).equals((\"NO\")));\n    assert(intersection(((1l, 2l)), ((1l,\
  \ 2l))).equals((\"NO\")));\n    assert(intersection(((-2l, -2l)), ((-3l, -2l))).equals((\"\
  NO\")));\n    }\n\n}\n"
completions: ["        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMinusEnd = start - end\n        val start2MinusEnd2 = start2 - end2\n \
    \       if (startMinusEnd < 0 || start2MinusEnd2 < 0 || start2MinusEnd2 > startMinusEnd)\
    \ {\n            return \"NO\"\n        }\n        if (startMinusEnd < start2MinusEnd2)\
    \ {\n            return \"NO\"\n        }\n        if (startMinusEnd > start2MinusEnd2)\
    \ {\n            return \"NO\"\n        }\n        if (startMinusEnd == start2MinusEnd2)\
    \ {\n            if (start < end) {\n                return \"YES\"\n        \
    \    }\n            else {\n                return \"NO\"\n            }\n   \
    \     }\n        if (start2MinusEnd2 == 0) {\n            return \"NO\"\n    \
    \    }\n        if (start2MinusEnd2 == 1) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 2) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 3) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 4) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 5) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 6) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 7) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 8) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 9) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 10) {\n            return \"YES\"\n   \
    \     }\n        if (start2MinusEnd2 == 11) {\n            return \"YES\"\n  \
    \      }\n        if (start2MinusEnd2 == 12) {\n            return \"YES\"\n \
    \       }\n        if (start2MinusEnd2 == 13) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 14) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 15) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 16) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 17) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 18) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 19) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 20) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 21) {\n            return \"YES\"\n\
    \        }\n        if (start2Min", "        val start = interval1._1\n      \
    \  val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0) {\n            if (length == 0) {\n    \
    \            return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length2 > length) {\n            return\
    \ \"NO\"\n        }\n        if (length2 < length) {\n            return \"YES\"\
    \n        }\n        if (length == length2) {\n            if (length == 1) {\n\
    \                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        val mid = length / 2\n        val\
    \ mid2 = length2 / 2\n        val mid3 = length3 / 2\n        val mid4 = length4\
    \ / 2\n        val mid5 = length5 / 2\n        val mid6 = length6 / 2\n      \
    \  val mid7 = length7 / 2\n        val mid8 = length8 / 2\n        val mid9 =\
    \ length9 / 2\n        val mid10 = length10 / 2\n        val mid11 = length11\
    \ / 2\n        val mid12 = length12 / 2\n        val mid13 = length13 / 2\n  \
    \      val mid14 = length14 / 2\n        val mid15 = length15 / 2\n        val\
    \ mid16 = length16 / 2\n        val mid17 = length17 / 2\n        val mid18 =\
    \ length18 / 2\n        val mid19 = length19 / 2\n        val mid20 = length20\
    \ / 2\n        val mid21 = length21 / 2\n        val mid22 = length22 / 2\n  \
    \      val mid23 = length23 / 2\n        val mid24 = length24 / 2\n        val\
    \ mid25 = length25 / 2\n        val mid26 = length26 / 2\n        val mid27 =\
    \ length27 / 2\n        val mid28 = length28 / 2\n        val mid29 = length29\
    \ / 2\n        val mid30 = length30 / 2\n        val mid31 = length31 / 2\n  \
    \      val mid32 = length32 / 2\n        val mid33 = length33 / 2\n        val\
    \ mid34 = length34 / 2\n        val mid35 = length35 / 2\n        val mid36 =\
    \ length36 / 2\n        val mid37 = length37 / 2\n        val mid38 = length38\
    \ / 2\n        val mid39 = length39 / 2\n        val mid40 = length40 / 2\n  \
    \      val mid41 = length", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\"\n        else if (length == 1) \"\
    YES\"\n        else if (length2 == 1) \"YES\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start\n     \
    \   val end4 = end\n        val start5 = start3\n        val end5 = end3\n   \
    \     val start6 = start4\n        val end6 = end4\n        val start7 = start5\n\
    \        val end7 = end5\n        val start8 = start6\n        val end8 = end6\n\
    \        val start9 = start7\n        val end9 = end7\n        val start10 = start8\n\
    \        val end10 = end8\n        val start11 = start9\n        val end11 = end9\n\
    \        val start12 = start10\n        val end12 = end10\n        val start13\
    \ = start11\n        val end13 = end11\n        val start14 = start12\n      \
    \  val end14 = end12\n        val start15 = start13\n        val end15 = end13\n\
    \        val start16 = start14\n        val end16 = end14\n        val start17\
    \ = start15\n        val end17 = end15\n        val start18 = start16\n      \
    \  val end18 = end16\n        val start19 = start17\n        val end19 = end17\n\
    \        val start20 = start18\n        val end20 = end18\n        val start21\
    \ = start19\n        val end21 = end19\n        val start22 = start20\n      \
    \  val end22 = end20\n        val start23 = start21\n        val end23 = end21\n\
    \        val start24 = start22\n        val end24 = end22\n        val start25\
    \ = start23\n        val end25 = end23\n        val start26 = start24\n      \
    \  val end26 = end24\n        val start27 = start25\n        val end27 = end25\n\
    \        val start28 = start26\n        val end28 = end26\n        val start29\
    \ = start27\n        val end29 = end27\n        val start30 = start28\n      \
    \  val end30 = end28\n        val start31 = start29\n        val end31 = end29\n\
    \        val start32 = start30\n        val end32 = end30\n        val start33\
    \ = start31\n        val end33 = end31\n        val start34 = start32\n", "  \
    \      val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start3 = start2\n\
    \        val end3 = end2\n        val start4 = start\n        val end4 = end\n\
    \        val start5 = start3\n        val end5 = end3\n        val start6 = start4\n\
    \        val end6 = end4\n        val start7 = start5\n        val end7 = end5\n\
    \        val start8 = start6\n        val end8 = end6\n        val start9 = start7\n\
    \        val end9 = end7\n        val start10 = start8\n        val end10 = end8\n\
    \        val start11 = start9\n        val end11 = end9\n        val start12 =\
    \ start10\n        val end12 = end10\n        val start13 = start11\n        val\
    \ end13 = end11\n        val start14 = start12\n        val end14 = end12\n  \
    \      val start15 = start13\n        val end15 = end13\n        val start16 =\
    \ start14\n        val end16 = end14\n        val start17 = start15\n        val\
    \ end17 = end15\n        val start18 = start16\n        val end18 = end16\n  \
    \      val start19 = start17\n        val end19 = end17\n        val start20 =\
    \ start18\n        val end20 = end18\n        val start21 = start19\n        val\
    \ end21 = end19\n        val start22 = start20\n        val end22 = end20\n  \
    \      val start23 = start21\n        val end23 = end21\n        val start24 =\
    \ start22\n        val end24 = end22\n        val start25 = start23\n        val\
    \ end25 = end23\n        val start26 = start24\n        val end26 = end24\n  \
    \      val start27 = start25\n        val end27 = end25\n        val start28 =\
    \ start26\n        val end28 = end26\n        val start29 = start27\n        val\
    \ end29 = end27\n        val start30 = start28\n        val end30 = end28\n  \
    \      val start31 = start29\n        val end31 = end29\n        val start32 =\
    \ start30\n        val end32 = end30\n        val start33 = start31\n        val\
    \ end33 = end31\n        val start34 = start32\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length2 == 1) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 == 2) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ > 2) {\n            if (length == 0) {\n                return \"NO\"\n    \
    \        } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 > 3) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length2 > 4) {\n            if (length == 0) {\n     \
    \           return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length2 > 5) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 > 6) {\n   \
    \         if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ > 7) {\n            if (length == 0) {\n                return \"NO\"\n    \
    \        } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 > 8) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length2 > 9) {\n            if (length == 0) {\n     \
    \           return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length2 > 10) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 > 11) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ > 12) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 > 13) {\n            if (length == 0) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (length2 > 14) {\n            if (length == 0)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length2 > 15) {\n           \
    \ if (length == 0) {\n                return \"NO\"\n            } else {\n  \
    \              return \"YES\"\n            }\n        }\n        if (length2 >\
    \ 16) {\n            if (length == 0) {\n                return \"NO\"\n     \
    \       } else {", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n      \
    \  else if (length == 1) \"NO\"\n        else if (length2 == length) \"YES\"\n\
    \        else if (length2 == length / 2) \"YES\"\n        else if (length2 ==\
    \ length / 2) \"NO\"\n        else if (length2 == length / 3) \"NO\"\n       \
    \ else if (length2 == length / 3) \"YES\"\n        else if (length2 == length\
    \ / 4) \"NO\"\n        else if (length2 == length / 4) \"YES\"\n        else if\
    \ (length2 == length / 5) \"NO\"\n        else if (length2 == length / 5) \"YES\"\
    \n        else if (length2 == length / 6) \"NO\"\n        else if (length2 ==\
    \ length / 6) \"YES\"\n        else if (length2 == length / 7) \"NO\"\n      \
    \  else if (length2 == length / 7) \"YES\"\n        else if (length2 == length\
    \ / 8) \"NO\"\n        else if (length2 == length / 8) \"YES\"\n        else if\
    \ (length2 == length / 9) \"NO\"\n        else if (length2 == length / 9) \"YES\"\
    \n        else if (length2 == length / 10) \"NO\"\n        else if (length2 ==\
    \ length / 10) \"YES\"\n        else if (length2 == length / 11) \"NO\"\n    \
    \    else if (length2 == length / 11) \"YES\"\n        else if (length2 == length\
    \ / 12) \"NO\"\n        else if (length2 == length / 12) \"YES\"\n        else\
    \ if (length2 == length / 13) \"NO\"\n        else if (length2 == length / 13)\
    \ \"YES\"\n        else if (length2 == length / 14) \"NO\"\n        else if (length2\
    \ == length / 14) \"YES\"\n        else if (length2 == length / 15) \"NO\"\n \
    \       else if (length2 == length / 15) \"YES\"\n        else if (length2 ==\
    \ length / 16) \"NO\"\n        else if (length2 == length / 16) \"YES\"\n    \
    \    else if (length2 == length / 17) \"NO\"\n        else if (length2 == length\
    \ / 17) \"YES\"\n        else if (length2 == length / 18) \"NO\"\n        else\
    \ if (length2 == length / 18) \"YES\"\n        else if (length2 == length / 19)\
    \ \"NO\"\n        else if (length2 == length / 19) \"YES\"\n        else if (length2\
    \ == length / 20) \"NO\"\n        else if (length2 == length / 20) \"YES\"\n \
    \       else if (length2 == length / 21) \"NO\"\n        else if (length2 == length\
    \ / 21) \"YES\"\n        else if (length2 == length / 22) \"NO\"\n        else\
    \ if (length2 == length / 22) \"YES\"\n        else if (length2 == length / 23)\
    \ \"NO\"\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 1) {\n            if (length2 == 1) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        val mid = (start + end) / 2\n        val mid2 = start2 + end2\n     \
    \   val mid3 = mid / 2\n        val mid4 = mid3 / 2\n        val mid5 = mid4 /\
    \ 2\n        val mid6 = mid5 / 2\n        val mid7 = mid6 / 2\n        val mid8\
    \ = mid7 / 2\n        val mid9 = mid8 / 2\n        val mid10 = mid9 / 2\n    \
    \    val mid11 = mid10 / 2\n        val mid12 = mid11 / 2\n        val mid13 =\
    \ mid12 / 2\n        val mid14 = mid13 / 2\n        val mid15 = mid14 / 2\n  \
    \      val mid16 = mid15 / 2\n        val mid17 = mid16 / 2\n        val mid18\
    \ = mid17 / 2\n        val mid19 = mid18 / 2\n        val mid20 = mid19 / 2\n\
    \        val mid21 = mid20 / 2\n        val mid22 = mid21 / 2\n        val mid23\
    \ = mid22 / 2\n        val mid24 = mid23 / 2\n        val mid25 = mid24 / 2\n\
    \        val mid26 = mid25 / 2\n        val mid27 = mid26 / 2\n        val mid28\
    \ = mid27 / 2\n        val mid29 = mid28 / 2\n        val mid30 = mid29 / 2\n\
    \        val mid31 = mid30 / 2\n        val mid32 = mid31 / 2\n        val mid33\
    \ = mid32 / 2\n        val mid34 = mid33 / 2\n        val mid35 = mid34 / 2\n\
    \        val mid36 = mid35 / 2\n        val mid37 = mid36 / 2\n        val mid38\
    \ = mid37 / 2\n        val mid39 = mid38 / 2\n        val mid40 = mid39 / 2\n\
    \        val mid41 = mid40 / 2\n        val mid42 = mid41 / 2\n        val mid43\
    \ = mid42 / 2", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 > length) {\n            return \"NO\"\n        }\n     \
    \   if (length2 < length) {\n            return \"YES\"\n        }\n        if\
    \ (length2 == length) {\n            if (length == 1) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 1) {\n            if (length == 1) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length2 > 1) {\n            if (length\
    \ == 1) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 < 1) {\n   \
    \         if (length == 1) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 1) {\n            if (length == 1) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 > 1) {\n            if (length == 1) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 < 1) {\n            if (length == 1) {\n     \
    \           return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length2 == 1) {\n            if (length\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length2 > 1) {\n   \
    \         if (length == 1) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ < 1) {\n            if (length == 1) {\n                return \"YES\"\n   \
    \         } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 1) {\n            if (length == 1) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length2 > 1) {\n            if (length == 1)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length2 < 1) {\n            if\
    \ (length == 1) {\n                return \"NO\"\n            } else {\n     \
    \           return \"YES\"\n            }\n        }\n        if (length2 == 1)\
    \ {\n            if (length == 1) {\n                return \"YES\"\n        \
    \    } else {\n                return \"NO\"\n            }\n        }\n     \
    \   if (length2 > 1) {\n            if (length == 1) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length2 < 1) {\n            if (length == 1) {\n     \
    \           return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        val primes = mutable.Set[Long]()\n        val primes2 = mutable.Set[Long]()\n\
    \        val primes3 = mutable.Set[Long]()\n        val primes4 = mutable.Set[Long]()\n\
    \        val primes5 = mutable.Set[Long]()\n        val primes6 = mutable.Set[Long]()\n\
    \        val primes7 = mutable.Set[Long]()\n        val primes8 = mutable.Set[Long]()\n\
    \        val primes9 = mutable.Set[Long]()\n        val primes10 = mutable.Set[Long]()\n\
    \        val primes11 = mutable.Set[Long]()\n        val primes12 = mutable.Set[Long]()\n\
    \        val primes13 = mutable.Set[Long]()\n        val primes14 = mutable.Set[Long]()\n\
    \        val primes15 = mutable.Set[Long]()\n        val primes16 = mutable.Set[Long]()\n\
    \        val primes17 = mutable.Set[Long]()\n        val primes18 = mutable.Set[Long]()\n\
    \        val primes19 = mutable.Set[Long]()\n        val primes20 = mutable.Set[Long]()\n\
    \        val primes21 = mutable.Set[Long]()\n        val primes22 = mutable.Set[Long]()\n\
    \        val primes23 = mutable.Set[Long]()\n        val primes24 = mutable.Set[Long]()\n\
    \        val primes25 = mutable.Set[Long]()\n        val primes26 = mutable.Set[Long]()\n\
    \        val primes27 = mutable.Set[Long]()\n        val primes28 = mutable.Set[Long]()\n\
    \        val primes29 = mutable.Set[Long]()\n        val primes30 = mutable.Set[Long]()\n\
    \        val primes31 = mutable.Set[Long]()\n        val primes32 = mutable.Set[Long]()\n\
    \        val primes33 = mutable.Set[", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else if (length2\
    \ > length) \"YES\"\n        else intersection2(length, length2)", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"YES\"\n        }\n        if (start == start2\
    \ && end > end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end == end2) {\n            return \"NO\"\n        }\n        if (start\
    \ > start2 && end > end2) {\n            val temp = start\n            start =\
    \ start2\n            start2 = temp\n            temp = end\n            end =\
    \ end2\n            end2 = temp\n        }\n        if (start == start2 && end\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end == end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end > end2) {\n            val temp = start\n            start = start2\n\
    \            start2 = temp\n            temp = end\n            end = end2\n \
    \           end2 = temp\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end ==\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n            temp = end\n            end = end2\n   \
    \         end2 = temp\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end ==\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n            temp = end\n            end = end2\n   \
    \         end2 = temp\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end ==\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n            temp = end\n            end = end2\n   \
    \         end2 = temp\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end ==\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n            temp = end\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length2 == 1) \"YES\"\n        else if (length == 1) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else intersection(interval2, interval1)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length2 == 1) \"YES\"\n        else if (length == 1) \"NO\"\n        else\
    \ if (length2 % length == 0) \"YES\"\n        else intersection(interval1, interval2)",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            \"NO\"\n        } else {\n\
    \            val isPrime = length2 % length == 0 \n            if (isPrime) {\n\
    \                \"YES\"\n            } else {\n                \"NO\"\n     \
    \       }\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        val isPrime\
    \ = length == 2 || length == 3 && length == math.ceil(length / 2)\n        if\
    \ (isPrime) {\n            return \"YES\"\n        }\n        return \"NO\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\"\n        else if (length2 == 1 && length == 1) \"YES\"\n      \
    \  else if (length2 == 1 && length != 1) \"NO\"\n        else if (length2 != 1\
    \ && length == 1) \"NO\"\n        else if (length2 != 1 && length != 1) \"NO\"\
    \n        else if (length2 == 1 && length == length2) \"YES\"\n        else if\
    \ (length2 != 1 && length == length2) \"NO\"\n        else if (length2 != 1 &&\
    \ length != length2) \"NO\"\n        else if (length2 == length) \"YES\"\n   \
    \     else if (length2 != length) \"NO\"\n        else if (length2 != length2)\
    \ \"NO\"\n        else if (length2 == length2) \"YES\"\n        else if (length2\
    \ != length2) \"NO\"\n        else if (length2 != length2) \"NO\"\n        else\
    \ if (length2 == length) \"YES\"\n        else if (length2 != length) \"NO\"\n\
    \        else if (length2 != length) \"NO\"\n        else if (length2 != length)\
    \ \"NO\"\n        else if (length2 == length) \"YES\"\n        else if (length2\
    \ != length) \"NO\"\n        else if (length2 != length) \"NO\"\n        else\
    \ if (length2 != length) \"NO\"\n        else if (length2 == length) \"YES\"\n\
    \        else if (length2 != length) \"NO\"\n        else if (length2 != length)\
    \ \"NO\"\n        else if (length2 != length) \"NO\"\n        else if (length2\
    \ == length) \"YES\"\n        else if (length2 != length) \"NO\"\n        else\
    \ if (length2 != length) \"NO\"\n        else if (length2 != length) \"NO\"\n\
    \        else if (length2 == length) \"YES\"\n        else if (length2 != length)\
    \ \"NO\"\n        else if (length2 != length) \"NO\"\n        else if (length2\
    \ != length) \"NO\"\n        else if (length2 != length) \"NO\"\n        else\
    \ if (length2 == length) \"YES\"\n        else if (length2 != length) \"NO\"\n\
    \        else if (length2 != length) \"NO\"\n        else if (length2 != length)\
    \ \"NO\"\n        else if (length2 != length) \"NO\"\n        else if (length2\
    \ == length) \"YES\"\n        else if (length2 != length) \"NO\"\n        else\
    \ if (length2 != length) \"NO\"\n        else if (length2 != length) \"NO\"\n\
    \        else if (length2 != length) \"NO\"\n        else if (length2 == length)\
    \ \"YES\"\n        else if (length2 != length) \"NO\"\n        else if (length2\
    \ != length) \"NO\"\n        else if (length2 != length) \"NO\"\n        else\
    \ if (length2 != length) \"NO\"\n"]
stop_tokens:
- "\n    }\n"

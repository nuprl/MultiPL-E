name: HumanEval_127_intersection
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given two intervals,\n    // where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n    // The given intervals are\
  \ closed which means that the interval (start, end)\n    // includes both start\
  \ and end.\n    // For each given interval, it is assumed that its start is less\
  \ or equal its end.\n    // Your task is to determine whether the length of intersection\
  \ of these two \n    // intervals is a prime number.\n    // Example, the intersection\
  \ of the intervals (1, 3), (2, 4) is (2, 3)\n    // which its length is 1, which\
  \ not a prime number.\n    // If the length of the intersection is a prime number,\
  \ return \"YES\",\n    // otherwise, return \"NO\".\n    // If the two intervals\
  \ don't intersect, return \"NO\".\n    // [input/output] samples:\n    // intersection((1,\
  \ 2), (2, 3)) ==> \"NO\"\n    // intersection((-1, 1), (0, 4)) ==> \"NO\"\n    //\
  \ intersection((-3, -1), (-5, 5)) ==> \"YES\"\n    def intersection(interval1 :\
  \ Tuple2[Long, Long], interval2 : Tuple2[Long, Long]) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(intersection(((1l,\
  \ 2l)), ((2l, 3l))).equals((\"NO\")));\n    assert(intersection(((-1l, 1l)), ((0l,\
  \ 4l))).equals((\"NO\")));\n    assert(intersection(((-3l, -1l)), ((-5l, 5l))).equals((\"\
  YES\")));\n    assert(intersection(((-2l, 2l)), ((-4l, 0l))).equals((\"YES\")));\n\
  \    assert(intersection(((-11l, 2l)), ((-1l, -1l))).equals((\"NO\")));\n    assert(intersection(((1l,\
  \ 2l)), ((3l, 5l))).equals((\"NO\")));\n    assert(intersection(((1l, 2l)), ((1l,\
  \ 2l))).equals((\"NO\")));\n    assert(intersection(((-2l, -2l)), ((-3l, -2l))).equals((\"\
  NO\")));\n    }\n\n}\n"
completions: ["        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMinusEnd = start - end\n        val start2MinusEnd2 = start2 - end2\n \
    \       if (startMinusEnd < 0 || start2MinusEnd2 < 0 || start2MinusEnd2 > startMinusEnd)\
    \ {\n            return \"NO\"\n        }\n        if (startMinusEnd < start2MinusEnd2)\
    \ {\n            return \"NO\"\n        }\n        if (startMinusEnd > start2MinusEnd2)\
    \ {\n            return \"NO\"\n        }\n        if (startMinusEnd == start2MinusEnd2)\
    \ {\n            if (start < end) {\n                return \"YES\"\n        \
    \    }\n            else {\n                return \"NO\"\n            }\n   \
    \     }\n        if (start2MinusEnd2 == 0) {\n            return \"NO\"\n    \
    \    }\n        if (start2MinusEnd2 == 1) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 2) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 3) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 4) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 5) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 6) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 7) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 8) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 9) {\n            return \"YES\"\n    \
    \    }\n        if (start2MinusEnd2 == 10) {\n            return \"YES\"\n   \
    \     }\n        if (start2MinusEnd2 == 11) {\n            return \"YES\"\n  \
    \      }\n        if (start2MinusEnd2 == 12) {\n            return \"YES\"\n \
    \       }\n        if (start2MinusEnd2 == 13) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 14) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 15) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 16) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 17) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 18) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 19) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 20) {\n            return \"YES\"\n\
    \        }\n        if (start2MinusEnd2 == 21) {\n            return \"YES\"\n\
    \        }\n        if (start2Min", "        val start = interval1._1\n      \
    \  val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0) {\n            if (length == 0) {\n    \
    \            return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length2 > length) {\n            return\
    \ \"NO\"\n        }\n        if (length2 < length) {\n            return \"YES\"\
    \n        }\n        if (length == length2) {\n            if (length == 1) {\n\
    \                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        val mid = length / 2\n        val\
    \ mid2 = length2 / 2\n        val mid3 = length3 / 2\n        val mid4 = length4\
    \ / 2\n        val mid5 = length5 / 2\n        val mid6 = length6 / 2\n      \
    \  val mid7 = length7 / 2\n        val mid8 = length8 / 2\n        val mid9 =\
    \ length9 / 2\n        val mid10 = length10 / 2\n        val mid11 = length11\
    \ / 2\n        val mid12 = length12 / 2\n        val mid13 = length13 / 2\n  \
    \      val mid14 = length14 / 2\n        val mid15 = length15 / 2\n        val\
    \ mid16 = length16 / 2\n        val mid17 = length17 / 2\n        val mid18 =\
    \ length18 / 2\n        val mid19 = length19 / 2\n        val mid20 = length20\
    \ / 2\n        val mid21 = length21 / 2\n        val mid22 = length22 / 2\n  \
    \      val mid23 = length23 / 2\n        val mid24 = length24 / 2\n        val\
    \ mid25 = length25 / 2\n        val mid26 = length26 / 2\n        val mid27 =\
    \ length27 / 2\n        val mid28 = length28 / 2\n        val mid29 = length29\
    \ / 2\n        val mid30 = length30 / 2\n        val mid31 = length31 / 2\n  \
    \      val mid32 = length32 / 2\n        val mid33 = length33 / 2\n        val\
    \ mid34 = length34 / 2\n        val mid35 = length35 / 2\n        val mid36 =\
    \ length36 / 2\n        val mid37 = length37 / 2\n        val mid38 = length38\
    \ / 2\n        val mid39 = length39 / 2\n        val mid40 = length40 / 2\n  \
    \      val mid41 = length", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\"\n        else if (length == 1) \"\
    YES\"\n        else if (length2 == 1) \"YES\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start\n     \
    \   val end4 = end\n        val start5 = start3\n        val end5 = end3\n   \
    \     val start6 = start4\n        val end6 = end4\n        val start7 = start5\n\
    \        val end7 = end5\n        val start8 = start6\n        val end8 = end6\n\
    \        val start9 = start7\n        val end9 = end7\n        val start10 = start8\n\
    \        val end10 = end8\n        val start11 = start9\n        val end11 = end9\n\
    \        val start12 = start10\n        val end12 = end10\n        val start13\
    \ = start11\n        val end13 = end11\n        val start14 = start12\n      \
    \  val end14 = end12\n        val start15 = start13\n        val end15 = end13\n\
    \        val start16 = start14\n        val end16 = end14\n        val start17\
    \ = start15\n        val end17 = end15\n        val start18 = start16\n      \
    \  val end18 = end16\n        val start19 = start17\n        val end19 = end17\n\
    \        val start20 = start18\n        val end20 = end18\n        val start21\
    \ = start19\n        val end21 = end19\n        val start22 = start20\n      \
    \  val end22 = end20\n        val start23 = start21\n        val end23 = end21\n\
    \        val start24 = start22\n        val end24 = end22\n        val start25\
    \ = start23\n        val end25 = end23\n        val start26 = start24\n      \
    \  val end26 = end24\n        val start27 = start25\n        val end27 = end25\n\
    \        val start28 = start26\n        val end28 = end26\n        val start29\
    \ = start27\n        val end29 = end27\n        val start30 = start28\n      \
    \  val end30 = end28\n        val start31 = start29\n        val end31 = end29\n\
    \        val start32 = start30\n        val end32 = end30\n        val start33\
    \ = start31\n        val end33 = end31\n        val start34 = start32\n", "  \
    \      val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start3 = start2\n\
    \        val end3 = end2\n        val start4 = start\n        val end4 = end\n\
    \        val start5 = start3\n        val end5 = end3\n        val start6 = start4\n\
    \        val end6 = end4\n        val start7 = start5\n        val end7 = end5\n\
    \        val start8 = start6\n        val end8 = end6\n        val start9 = start7\n\
    \        val end9 = end7\n        val start10 = start8\n        val end10 = end8\n\
    \        val start11 = start9\n        val end11 = end9\n        val start12 =\
    \ start10\n        val end12 = end10\n        val start13 = start11\n        val\
    \ end13 = end11\n        val start14 = start12\n        val end14 = end12\n  \
    \      val start15 = start13\n        val end15 = end13\n        val start16 =\
    \ start14\n        val end16 = end14\n        val start17 = start15\n        val\
    \ end17 = end15\n        val start18 = start16\n        val end18 = end16\n  \
    \      val start19 = start17\n        val end19 = end17\n        val start20 =\
    \ start18\n        val end20 = end18\n        val start21 = start19\n        val\
    \ end21 = end19\n        val start22 = start20\n        val end22 = end20\n  \
    \      val start23 = start21\n        val end23 = end21\n        val start24 =\
    \ start22\n        val end24 = end22\n        val start25 = start23\n        val\
    \ end25 = end23\n        val start26 = start24\n        val end26 = end24\n  \
    \      val start27 = start25\n        val end27 = end25\n        val start28 =\
    \ start26\n        val end28 = end26\n        val start29 = start27\n        val\
    \ end29 = end27\n        val start30 = start28\n        val end30 = end28\n  \
    \      val start31 = start29\n        val end31 = end29\n        val start32 =\
    \ start30\n        val end32 = end30\n        val start33 = start31\n        val\
    \ end33 = end31\n        val start34 = start32\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length2 == 1) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 == 2) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ > 2) {\n            if (length == 0) {\n                return \"NO\"\n    \
    \        } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 > 3) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length2 > 4) {\n            if (length == 0) {\n     \
    \           return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length2 > 5) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 > 6) {\n   \
    \         if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ > 7) {\n            if (length == 0) {\n                return \"NO\"\n    \
    \        } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 > 8) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length2 > 9) {\n            if (length == 0) {\n     \
    \           return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length2 > 10) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 > 11) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ > 12) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 > 13) {\n            if (length == 0) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (length2 > 14) {\n            if (length == 0)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length2 > 15) {\n           \
    \ if (length == 0) {\n                return \"NO\"\n            } else {\n  \
    \              return \"YES\"\n            }\n        }\n        if (length2 >\
    \ 16) {\n            if (length == 0) {\n                return \"NO\"\n     \
    \       } else {", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n      \
    \  else if (length == 1) \"NO\"\n        else if (length2 == length) \"YES\"\n\
    \        else if (length2 == length / 2) \"YES\"\n        else if (length2 ==\
    \ length / 2) \"NO\"\n        else if (length2 == length / 3) \"NO\"\n       \
    \ else if (length2 == length / 3) \"YES\"\n        else if (length2 == length\
    \ / 4) \"NO\"\n        else if (length2 == length / 4) \"YES\"\n        else if\
    \ (length2 == length / 5) \"NO\"\n        else if (length2 == length / 5) \"YES\"\
    \n        else if (length2 == length / 6) \"NO\"\n        else if (length2 ==\
    \ length / 6) \"YES\"\n        else if (length2 == length / 7) \"NO\"\n      \
    \  else if (length2 == length / 7) \"YES\"\n        else if (length2 == length\
    \ / 8) \"NO\"\n        else if (length2 == length / 8) \"YES\"\n        else if\
    \ (length2 == length / 9) \"NO\"\n        else if (length2 == length / 9) \"YES\"\
    \n        else if (length2 == length / 10) \"NO\"\n        else if (length2 ==\
    \ length / 10) \"YES\"\n        else if (length2 == length / 11) \"NO\"\n    \
    \    else if (length2 == length / 11) \"YES\"\n        else if (length2 == length\
    \ / 12) \"NO\"\n        else if (length2 == length / 12) \"YES\"\n        else\
    \ if (length2 == length / 13) \"NO\"\n        else if (length2 == length / 13)\
    \ \"YES\"\n        else if (length2 == length / 14) \"NO\"\n        else if (length2\
    \ == length / 14) \"YES\"\n        else if (length2 == length / 15) \"NO\"\n \
    \       else if (length2 == length / 15) \"YES\"\n        else if (length2 ==\
    \ length / 16) \"NO\"\n        else if (length2 == length / 16) \"YES\"\n    \
    \    else if (length2 == length / 17) \"NO\"\n        else if (length2 == length\
    \ / 17) \"YES\"\n        else if (length2 == length / 18) \"NO\"\n        else\
    \ if (length2 == length / 18) \"YES\"\n        else if (length2 == length / 19)\
    \ \"NO\"\n        else if (length2 == length / 19) \"YES\"\n        else if (length2\
    \ == length / 20) \"NO\"\n        else if (length2 == length / 20) \"YES\"\n \
    \       else if (length2 == length / 21) \"NO\"\n        else if (length2 == length\
    \ / 21) \"YES\"\n        else if (length2 == length / 22) \"NO\"\n        else\
    \ if (length2 == length / 22) \"YES\"\n        else if (length2 == length / 23)\
    \ \"NO\"\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 1) {\n            if (length2 == 1) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        val mid = (start + end) / 2\n        val mid2 = start2 + end2\n     \
    \   val mid3 = mid / 2\n        val mid4 = mid3 / 2\n        val mid5 = mid4 /\
    \ 2\n        val mid6 = mid5 / 2\n        val mid7 = mid6 / 2\n        val mid8\
    \ = mid7 / 2\n        val mid9 = mid8 / 2\n        val mid10 = mid9 / 2\n    \
    \    val mid11 = mid10 / 2\n        val mid12 = mid11 / 2\n        val mid13 =\
    \ mid12 / 2\n        val mid14 = mid13 / 2\n        val mid15 = mid14 / 2\n  \
    \      val mid16 = mid15 / 2\n        val mid17 = mid16 / 2\n        val mid18\
    \ = mid17 / 2\n        val mid19 = mid18 / 2\n        val mid20 = mid19 / 2\n\
    \        val mid21 = mid20 / 2\n        val mid22 = mid21 / 2\n        val mid23\
    \ = mid22 / 2\n        val mid24 = mid23 / 2\n        val mid25 = mid24 / 2\n\
    \        val mid26 = mid25 / 2\n        val mid27 = mid26 / 2\n        val mid28\
    \ = mid27 / 2\n        val mid29 = mid28 / 2\n        val mid30 = mid29 / 2\n\
    \        val mid31 = mid30 / 2\n        val mid32 = mid31 / 2\n        val mid33\
    \ = mid32 / 2\n        val mid34 = mid33 / 2\n        val mid35 = mid34 / 2\n\
    \        val mid36 = mid35 / 2\n        val mid37 = mid36 / 2\n        val mid38\
    \ = mid37 / 2\n        val mid39 = mid38 / 2\n        val mid40 = mid39 / 2\n\
    \        val mid41 = mid40 / 2\n        val mid42 = mid41 / 2\n        val mid43\
    \ = mid42 / 2", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 > length) {\n            return \"NO\"\n        }\n     \
    \   if (length2 < length) {\n            return \"YES\"\n        }\n        if\
    \ (length2 == length) {\n            if (length == 1) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 1) {\n            if (length == 1) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length2 > 1) {\n            if (length\
    \ == 1) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 < 1) {\n   \
    \         if (length == 1) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 1) {\n            if (length == 1) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 > 1) {\n            if (length == 1) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 < 1) {\n            if (length == 1) {\n     \
    \           return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length2 == 1) {\n            if (length\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length2 > 1) {\n   \
    \         if (length == 1) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ < 1) {\n            if (length == 1) {\n                return \"YES\"\n   \
    \         } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 1) {\n            if (length == 1) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length2 > 1) {\n            if (length == 1)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length2 < 1) {\n            if\
    \ (length == 1) {\n                return \"NO\"\n            } else {\n     \
    \           return \"YES\"\n            }\n        }\n        if (length2 == 1)\
    \ {\n            if (length == 1) {\n                return \"YES\"\n        \
    \    } else {\n                return \"NO\"\n            }\n        }\n     \
    \   if (length2 > 1) {\n            if (length == 1) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length2 < 1) {\n            if (length == 1) {\n     \
    \           return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        val primes = mutable.Set[Long]()\n        val primes2 = mutable.Set[Long]()\n\
    \        val primes3 = mutable.Set[Long]()\n        val primes4 = mutable.Set[Long]()\n\
    \        val primes5 = mutable.Set[Long]()\n        val primes6 = mutable.Set[Long]()\n\
    \        val primes7 = mutable.Set[Long]()\n        val primes8 = mutable.Set[Long]()\n\
    \        val primes9 = mutable.Set[Long]()\n        val primes10 = mutable.Set[Long]()\n\
    \        val primes11 = mutable.Set[Long]()\n        val primes12 = mutable.Set[Long]()\n\
    \        val primes13 = mutable.Set[Long]()\n        val primes14 = mutable.Set[Long]()\n\
    \        val primes15 = mutable.Set[Long]()\n        val primes16 = mutable.Set[Long]()\n\
    \        val primes17 = mutable.Set[Long]()\n        val primes18 = mutable.Set[Long]()\n\
    \        val primes19 = mutable.Set[Long]()\n        val primes20 = mutable.Set[Long]()\n\
    \        val primes21 = mutable.Set[Long]()\n        val primes22 = mutable.Set[Long]()\n\
    \        val primes23 = mutable.Set[Long]()\n        val primes24 = mutable.Set[Long]()\n\
    \        val primes25 = mutable.Set[Long]()\n        val primes26 = mutable.Set[Long]()\n\
    \        val primes27 = mutable.Set[Long]()\n        val primes28 = mutable.Set[Long]()\n\
    \        val primes29 = mutable.Set[Long]()\n        val primes30 = mutable.Set[Long]()\n\
    \        val primes31 = mutable.Set[Long]()\n        val primes32 = mutable.Set[Long]()\n\
    \        val primes33 = mutable.Set[", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else if (length2\
    \ > length) \"YES\"\n        else intersection2(length, length2)", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"YES\"\n        }\n        if (start == start2\
    \ && end > end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end == end2) {\n            return \"NO\"\n        }\n        if (start\
    \ > start2 && end > end2) {\n            val temp = start\n            start =\
    \ start2\n            start2 = temp\n            temp = end\n            end =\
    \ end2\n            end2 = temp\n        }\n        if (start == start2 && end\
    \ > end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end == end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end > end2) {\n            val temp = start\n            start = start2\n\
    \            start2 = temp\n            temp = end\n            end = end2\n \
    \           end2 = temp\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end ==\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n            temp = end\n            end = end2\n   \
    \         end2 = temp\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end ==\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n            temp = end\n            end = end2\n   \
    \         end2 = temp\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end ==\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n            temp = end\n            end = end2\n   \
    \         end2 = temp\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end ==\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end > end2) {\n            val temp = start\n            start = start2\n  \
    \          start2 = temp\n            temp = end\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length2 == 1) \"YES\"\n        else if (length == 1) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else intersection(interval2, interval1)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length2 == 1) \"YES\"\n        else if (length == 1) \"NO\"\n        else\
    \ if (length2 % length == 0) \"YES\"\n        else intersection(interval1, interval2)",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            \"NO\"\n        } else {\n\
    \            val isPrime = length2 % length == 0 \n            if (isPrime) {\n\
    \                \"YES\"\n            } else {\n                \"NO\"\n     \
    \       }\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        val isPrime\
    \ = length == 2 || length == 3 && length == math.ceil(length / 2)\n        if\
    \ (isPrime) {\n            return \"YES\"\n        }\n        return \"NO\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\"\n        else if (length2 == 1 && length == 1) \"YES\"\n      \
    \  else if (length2 == 1 && length != 1) \"NO\"\n        else if (length2 != 1\
    \ && length == 1) \"NO\"\n        else if (length2 != 1 && length != 1) \"NO\"\
    \n        else if (length2 == 1 && length == length2) \"YES\"\n        else if\
    \ (length2 != 1 && length == length2) \"NO\"\n        else if (length2 != 1 &&\
    \ length != length2) \"NO\"\n        else if (length2 == length) \"YES\"\n   \
    \     else if (length2 != length) \"NO\"\n        else if (length2 != length2)\
    \ \"NO\"\n        else if (length2 == length2) \"YES\"\n        else if (length2\
    \ != length2) \"NO\"\n        else if (length2 != length2) \"NO\"\n        else\
    \ if (length2 == length) \"YES\"\n        else if (length2 != length) \"NO\"\n\
    \        else if (length2 != length) \"NO\"\n        else if (length2 != length)\
    \ \"NO\"\n        else if (length2 == length) \"YES\"\n        else if (length2\
    \ != length) \"NO\"\n        else if (length2 != length) \"NO\"\n        else\
    \ if (length2 != length) \"NO\"\n        else if (length2 == length) \"YES\"\n\
    \        else if (length2 != length) \"NO\"\n        else if (length2 != length)\
    \ \"NO\"\n        else if (length2 != length) \"NO\"\n        else if (length2\
    \ == length) \"YES\"\n        else if (length2 != length) \"NO\"\n        else\
    \ if (length2 != length) \"NO\"\n        else if (length2 != length) \"NO\"\n\
    \        else if (length2 == length) \"YES\"\n        else if (length2 != length)\
    \ \"NO\"\n        else if (length2 != length) \"NO\"\n        else if (length2\
    \ != length) \"NO\"\n        else if (length2 != length) \"NO\"\n        else\
    \ if (length2 == length) \"YES\"\n        else if (length2 != length) \"NO\"\n\
    \        else if (length2 != length) \"NO\"\n        else if (length2 != length)\
    \ \"NO\"\n        else if (length2 != length) \"NO\"\n        else if (length2\
    \ == length) \"YES\"\n        else if (length2 != length) \"NO\"\n        else\
    \ if (length2 != length) \"NO\"\n        else if (length2 != length) \"NO\"\n\
    \        else if (length2 != length) \"NO\"\n        else if (length2 == length)\
    \ \"YES\"\n        else if (length2 != length) \"NO\"\n        else if (length2\
    \ != length) \"NO\"\n        else if (length2 != length) \"NO\"\n        else\
    \ if (length2 != length) \"NO\"\n", "        val start = interval1._1\n      \
    \  val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0) \"NO\" else if (length == 1) \"YES\" else\
    \ \"NO\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) \"NO\" else \"YES\"\n        } else if\
    \ (length2 == 1) {\n            if (length == 1) \"YES\" else \"NO\"\n       \
    \ } else if (length == 1) {\n            if (length2 == 1) \"YES\" else \"NO\"\
    \n        } else {\n            val mid = (start + end) / 2\n            val mid2\
    \ = start2 + end2\n            val mid3 = mid / 2\n            val mid4 = mid3\
    \ / 2\n            val mid5 = mid4 / 2\n            val mid6 = mid5 / 2\n    \
    \        val mid7 = mid6 / 2\n            val mid8 = mid7 / 2\n            val\
    \ mid9 = mid8 / 2\n            val mid10 = mid9 / 2\n            val mid11 = mid10\
    \ / 2\n            val mid12 = mid11 / 2\n            val mid13 = mid12 / 2\n\
    \            val mid14 = mid13 / 2\n            val mid15 = mid14 / 2\n      \
    \      val mid16 = mid15 / 2\n            val mid17 = mid16 / 2\n            val\
    \ mid18 = mid17 / 2\n            val mid19 = mid18 / 2\n            val mid20\
    \ = mid19 / 2\n            val mid21 = mid20 / 2\n            val mid22 = mid21\
    \ / 2\n            val mid23 = mid22 / 2\n            val mid24 = mid23 / 2\n\
    \            val mid25 = mid24 / 2\n            val mid26 = mid25 / 2\n      \
    \      val mid27 = mid26 / 2\n            val mid28 = mid27 / 2\n            val\
    \ mid29 = mid28 / 2\n            val mid30 = mid29 / 2\n            val mid31\
    \ = mid30 / 2\n            val mid32 = mid31 / 2\n            val mid33 = mid32\
    \ / 2\n            val mid34 = mid33 / 2\n            val mid35 = mid34 / 2\n\
    \            val mid36 = mid35 / 2\n            val mid37 = mid36 / 2\n      \
    \      val mid38 = mid37 / 2\n            val mid39 = mid38 / 2\n            val\
    \ mid40 = mid39 / 2\n            val mid41 = mid40 / 2\n            val mid42\
    \ = mid41 / 2\n            val mid43 = mid42 / 2\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMinusEnd = start - end\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0) {\n            if (length == 0) {\n    \
    \            return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length2 == 1) {\n            if (length\
    \ == 1) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 == 2) {\n  \
    \          if (length == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 3) {\n            if (length == 1) {\n                return \"YES\"\n  \
    \          } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 4) {\n            if (length == 1) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length2 == 5) {\n            if (length == 1)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 6) {\n            if\
    \ (length == 1) {\n                return \"YES\"\n            } else {\n    \
    \            return \"NO\"\n            }\n        }\n        if (length2 == 7)\
    \ {\n            if (length == 1) {\n                return \"YES\"\n        \
    \    } else {\n                return \"NO\"\n            }\n        }\n     \
    \   if (length2 == 8) {\n            if (length == 1) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length2 == 9) {\n            if (length == 1) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length2 == 10) {\n            if (length\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length2 == 11) {\n \
    \           if (length == 1) {\n                return \"YES\"\n            }\
    \ else {\n                return \"NO\"\n            }\n        }\n        if\
    \ (length2 == 12) {\n            if (length == 1) {\n                return \"\
    YES\"\n            } else {\n                return \"NO\"\n            }\n  \
    \      }\n        if (length2 == 13) {\n            if (length == 1) {\n     \
    \           return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length2 == 14) {\n            if (length\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length2 == 15) {\n \
    \           if (length == 1) {\n                return \"YES\"\n            }\
    \ else {\n                return \"NO\"\n            }\n        }\n        if\
    \ (length2 == 16) {\n            if (length == 1) {\n                return \"\
    YES\"\n            } else {\n                return \"NO\"\n            }\n  \
    \      }\n        if (length2 == 17) {\n            if (length == 1) {\n     \
    \           return \"YES", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n       \
    \ else if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\
    \n        else intersection(interval1, interval2)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start < end2 && start2 < end) \n          \
    \  val length = end - start\n            val length2 = end2 - start2\n       \
    \     if (length == length2) \"YES\" else \"NO\"\n            else intersection(interval1,\
    \ interval2)\n        else \n            \"NO\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = math.max(start, start2)\n        val\
    \ end3 = math.min(end, end2)\n        val start4 = math.max(start, start3)\n \
    \       val end4 = math.min(end, end3)\n        val start5 = math.max(start, start4)\n\
    \        val end5 = math.min(end, end4)\n        val start6 = math.max(start,\
    \ start5)\n        val end6 = math.min(end, end5)\n        val start7 = math.max(start,\
    \ start6)\n        val end7 = math.min(end, end6)\n        val start8 = math.max(start,\
    \ start7)\n        val end8 = math.min(end, end7)\n        val start9 = math.max(start,\
    \ start8)\n        val end9 = math.min(end, end8)\n        val start10 = math.max(start,\
    \ start9)\n        val end10 = math.min(end, end9)\n        val start11 = math.max(start,\
    \ start10)\n        val end11 = math.min(end, end10)\n        val start12 = math.max(start,\
    \ start11)\n        val end12 = math.min(end, end11)\n        val start13 = math.max(start,\
    \ start12)\n        val end13 = math.min(end, end12)\n        val start14 = math.max(start,\
    \ start13)\n        val end14 = math.min(end, end13)\n        val start15 = math.max(start,\
    \ start14)\n        val end15 = math.min(end, end14)\n        val start16 = math.max(start,\
    \ start15)\n        val end16 = math.min(end, end15)\n        val start17 = math.max(start,\
    \ start16)\n        val end17 = math.min(end, end16)\n        val start18 = math.max(start,\
    \ start17)\n        val end18 = math.min(end, end17)\n        val start19 = math.max(start,\
    \ start18)\n        val end19 = math.min(end, end18)\n        val start20 = math.max(start,\
    \ start19)\n        val end20 = math.min(end, end19)\n        val start21 = math.max(start,\
    \ start20)\n        val end21 = math.min(end, end20)\n        val start22 = math.max(start,\
    \ start21)\n        val end22 = math.min(end, end21)\n        val start23 = math.max(start,\
    \ start22)\n        val end23 = math.min(end, end22)\n        val start24 = math.max(start,\
    \ start23)\n        val end24 = math.min(end, end23)\n        val start25 = math.max(start,\
    \ start24)\n        val end", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMin = math.min(start, start2)\n        val startMax = math.max(start,\
    \ start2)\n        val endMin = math.min(end, end2)\n        val endMax = math.max(end,\
    \ end2)\n        val startIntersect = startMin <= endMax\n        val endIntersect\
    \ = startMin <= endMax\n        if (startIntersect && endIntersect) {\n      \
    \      if (startMin <= endMax) {\n                if (start <= end) {\n      \
    \              if (start <= end2) {\n                        if (start2 <= end)\
    \ {\n                            if (start2 <= end2) {\n                     \
    \           if (start <= end2) {\n                                    if (start\
    \ <= end2) {\n                                        return \"YES\"\n       \
    \                             } else {\n                                     \
    \   return \"NO\"\n                                    }\n                   \
    \             } else {\n                                    return \"NO\"\n  \
    \                              }\n                            } else {\n     \
    \                           return \"NO\"\n                            }\n   \
    \                     } else {\n                            return \"NO\"\n  \
    \                      }\n                    } else {\n                     \
    \   return \"NO\"\n                    }\n                } else {\n         \
    \           return \"NO\"\n                }\n            } else {\n         \
    \       return \"NO\"\n            }\n        } else {\n            return \"\
    NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            if (start < start2) {\n      \
    \          if (end < end2) {\n                    if (start <= end) {\n      \
    \                  if (end <= end2) {\n                            if (start <=\
    \ start2) {\n                                if (end <= end2) {\n            \
    \                        if (start <= end) {\n                               \
    \         if (end <= end2) {\n                                            return\
    \ \"YES\"\n                                        } else {\n                \
    \                            return \"NO\"\n                                 \
    \       }\n                                    } else {\n                    \
    \                    return \"NO\"\n                                    }\n  \
    \                              } else {\n                                    return\
    \ \"NO\"\n                                }\n                            } else\
    \ {\n                                return \"NO\"\n                         \
    \   }\n                        } else {\n                            return \"\
    NO\"\n                        }\n                    } else {\n              \
    \          return \"NO\"\n                    }\n                } else {\n  \
    \                  return \"NO\"\n                }\n            } else {\n  \
    \              return \"NO\"\n            }\n        } else {\n            return\
    \ \"NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length2 == 1 && length == 1) \"\
    YES\"\n        else if (length2 == 1 && length != 1) \"NO\"\n        else if (length\
    \ != 1) \"NO\"\n        else if (length2 == 1 && length == 1) \"YES\"\n      \
    \  else if (length2 == 1 && length != 1) \"NO\"\n        else if (length != 1)\
    \ \"NO\"\n        else if (length2 == 1 && length == 1) \"YES\"\n        else\
    \ if (length2 == 1 && length != 1) \"NO\"\n        else if (length != 1) \"NO\"\
    \n        else if (length2 == 1 && length == 1) \"YES\"\n        else if (length2\
    \ == 1 && length != 1) \"NO\"\n        else if (length != 1) \"NO\"\n        else\
    \ if (length2 == 1 && length == 1) \"YES\"\n        else if (length2 == 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1) \"NO\"\n        else if (length2\
    \ == 1 && length == 1) \"YES\"\n        else if (length2 == 1 && length != 1)\
    \ \"NO\"\n        else if (length != 1) \"NO\"\n        else if (length2 == 1\
    \ && length == 1) \"YES\"\n        else if (length2 == 1 && length != 1) \"NO\"\
    \n        else if (length != 1) \"NO\"\n        else if (length2 == 1 && length\
    \ == 1) \"YES\"\n        else if (length2 == 1 && length != 1) \"NO\"\n      \
    \  else if (length != 1) \"NO\"\n        else if (length2 == 1 && length == 1)\
    \ \"YES\"\n        else if (length2 == 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1) \"NO\"\n        else if (length2 == 1 && length == 1) \"YES\"\
    \n        else if (length2 == 1 && length != 1) \"NO\"\n        else if (length\
    \ != 1) \"NO\"\n        else if (length2 == 1 && length == 1) \"YES\"\n      \
    \  else if (length2 == 1 && length != 1) \"NO\"\n        else if (length != 1)\
    \ \"NO\"\n        else if (length2 == 1 && length == 1) \"YES\"\n        else\
    \ if (length2 == 1 && length != 1) \"NO\"\n        else if (length != 1) \"NO\"\
    \n        else if (length2 == 1 && length == 1) \"YES\"\n        else if (length2\
    \ == 1 && length != 1) \"NO\"\n        else if (length != 1) \"NO\"\n        else\
    \ if (length2 == 1 && length == 1) \"YES\"\n        else if (length2 == 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1) \"NO\"\n        else if (length2\
    \ == 1 && length == 1) \"YES\"\n        else if (length2 == 1 && length != 1)\
    \ \"NO\"\n        else if (length != 1) \"NO\"\n        else if (length2 == 1\
    \ && length == ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\"\n        else if (length == 1) \"YES\"\n        else if (length2\
    \ == 1) \"YES\"\n        else if (length == length2) \"YES\"\n        else if\
    \ (length < length2) \"NO\"\n        else intersection(interval2, interval1)",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) \"NO\" else \"YES\"\n        } else if (length ==\
    \ 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.max(start, start2)\n        val end = math.min(end,\
    \ end2)\n        val length = end - start\n        if (length == 0) \"NO\"\n \
    \       else if (length == 1) \"YES\"\n        else if (length == 2) \"YES\"\n\
    \        else if (length == 3) \"YES\"\n        else if (length == 4) \"YES\"\n\
    \        else if (length == 5) \"YES\"\n        else if (length == 6) \"YES\"\n\
    \        else if (length == 7) \"YES\"\n        else if (length == 8) \"YES\"\n\
    \        else if (length == 9) \"YES\"\n        else if (length == 10) \"YES\"\
    \n        else if (length == 11) \"YES\"\n        else if (length == 12) \"YES\"\
    \n        else if (length == 13) \"YES\"\n        else if (length == 14) \"YES\"\
    \n        else if (length == 15) \"YES\"\n        else if (length == 16) \"YES\"\
    \n        else if (length == 17) \"YES\"\n        else if (length == 18) \"YES\"\
    \n        else if (length == 19) \"YES\"\n        else if (length == 20) \"YES\"\
    \n        else if (length == 21) \"YES\"\n        else if (length == 22) \"YES\"\
    \n        else if (length == 23) \"YES\"\n        else if (length == 24) \"YES\"\
    \n        else if (length == 25) \"YES\"\n        else if (length == 26) \"YES\"\
    \n        else if (length == 27) \"YES\"\n        else if (length == 28) \"YES\"\
    \n        else if (length == 29) \"YES\"\n        else if (length == 30) \"YES\"\
    \n        else if (length == 31) \"YES\"\n        else if (length == 32) \"YES\"\
    \n        else if (length == 33) \"YES\"\n        else if (length == 34) \"YES\"\
    \n        else if (length == 35) \"YES\"\n        else if (length == 36) \"YES\"\
    \n        else if (length == 37) \"YES\"\n        else if (length == 38) \"YES\"\
    \n        else if (length == 39) \"YES\"\n        else if (length == 40) \"YES\"\
    \n        else if (length == 41) \"YES\"\n        else if (length == 42) \"YES\"\
    \n        else if (length == 43) \"YES\"\n        else if (length == 44) \"YES\"\
    \n        else if (length == 45) \"YES\"\n        else if (length == 46) \"YES\"\
    \n        else if (length == 47) \"YES\"\n        else if (length == 48) \"YES\"\
    \n        else if (length == 49) \"YES\"\n        else if (length == 50) \"YES\"\
    \n        else if (length == 51) \"YES\"\n        else if (length == 52) \"YES\"\
    \n        else if (length == 53) \"YES\"\n        else if (length == 54) \"YES\"\
    \n        else if (length == 55) \"YES\"\n        else if (length == 56) \"YES\"\
    \n        else if (length == 57) \"YES\"\n        else if (length == 58) \"YES\"\
    \n        else if (", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMinusEnd = start - end\n        val start2MinusEnd2 = start2 - end2\n \
    \       val startMinusEnd2 = start2 - end2\n        val startMinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start < end2 && start2 < end) {\n            if\
    \ (start < start2) {\n                val temp = start\n                start\
    \ = start2\n                start2 = temp\n            }\n            if (end\
    \ < end2) {\n                val temp = end\n                end = end2\n    \
    \            end2 = temp\n            }\n            val length = end - start\n\
    \            val length2 = end2 - start2\n            if (length == length2) {\n\
    \                if (length == 1) {\n                    return \"YES\"\n    \
    \            } else {\n                    return \"NO\"\n                }\n\
    \            } else {\n                return \"NO\"\n            }\n        }\
    \ else {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length == 1) {\n            if (length2\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length2 == 1) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length == 1) {\n            if (length2 == 0) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (length2 == 1) {\n            if (length == 0)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length == 2) {\n            if\
    \ (length2 == 0) {\n                return \"NO\"\n            } else {\n    \
    \            return \"YES\"\n            }\n        }\n        if (length2 ==\
    \ 2) {\n            if (length == 0) {\n                return \"NO\"\n      \
    \      } else {\n                return \"YES\"\n            }\n        }\n  \
    \      if (length == 2) {\n            if (length2 == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length == 2) {\n            if (length2 == 0) {\n    \
    \            return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length == 2) {\n            if (length2\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length == 2) {\n   \
    \         if (length2 == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 2) {\n            if (length2 == 0) {\n                return \"NO\"\n  \
    \          } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length == 2) {\n            if (length2 == 0) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (length == 2) {\n            if (length2 == 0)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length == 2) {\n            if\
    \ (length2 == 0) {\n                return \"NO\"\n            } else {\n    \
    \            return \"YES\"\n            }\n        }\n        if (length == 2)\
    \ {\n            if (length2 == 0) {\n                return \"NO\"\n        \
    \    } else {\n                return \"YES\"\n            }\n        }\n    \
    \    if (length == 2) {\n            if (length2 == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length == 2) {", "        val start = interval1._1\n \
    \       val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length == 1) {\n            if (length2\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length2 == 1) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 2) {\n            if (length2 == 2) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length == 2) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length == 2) {\n            if (length == 0) {\n     \
    \           return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length == 2) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length == 2) {\n   \
    \         if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 2) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length == 2) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length == 2) {\n            if (length == 0) {\n     \
    \           return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length == 2) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length == 2) {\n   \
    \         if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 2) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length == 2) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length == 2) {\n            if (length == 0) {\n     \
    \           return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        if (length == 2) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length == 2) {\n   \
    \         if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 2) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            \"NO\"\n        } else if (length2 == 1)\
    \ {\n            if (length == 1) {\n                \"YES\"\n            } else\
    \ {\n                \"NO\"\n            }\n        } else {\n            val\
    \ start3 = start + length\n            val end3 = end2 + length2\n           \
    \ val start4 = start2 + length2\n            val end4 = end2 + length\n      \
    \      val start5 = start2 + length\n            val end5 = end2 + length2\n \
    \           val start6 = start2 + length2\n            val end6 = end2 + length\n\
    \            val start7 = start2 + length\n            val end7 = end2 + length2\n\
    \            val start8 = start2 + length2\n            val end8 = end2 + length\n\
    \            val start9 = start2 + length\n            val end9 = end2 + length2\n\
    \            val start10 = start2 + length2\n            val end10 = end2 + length\n\
    \            val start11 = start2 + length\n            val end11 = end2 + length2\n\
    \            val start12 = start2 + length2\n            val end12 = end2 + length\n\
    \            val start13 = start2 + length\n            val end13 = end2 + length2\n\
    \            val start14 = start2 + length2\n            val end14 = end2 + length\n\
    \            val start15 = start2 + length\n            val end15 = end2 + length2\n\
    \            val start16 = start2 + length2\n            val end16 = end2 + length\n\
    \            val start17 = start2 + length\n            val end17 = end2 + length2\n\
    \            val start18 = start2 + length2\n            val end18 = end2 + length\n\
    \            val start19 = start2 + length\n            val end19 = end2 + length2\n\
    \            val start20 = start2 + length2\n            val end20 = end2 + length\n\
    \            val start21 = start2 + length2\n            val end21 = end2 + length2\n\
    \            val start22 = start2 + length\n            val end22 = end2 + length2\n\
    \            val start23 = start2 + length2\n            val end23 = end2 + length\n\
    \            val start24 = start2 + length2\n            val end24 = end2 + length2\n\
    \            val start25 = start2 + length\n            val end25 = end2 + length2\n\
    \            val start26 = start2 + length2\n            val end", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else (length == length2\
    \ ? \"YES\" : \"NO\")", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n      \
    \  else if (length == 1) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else intersection(interval2,\
    \ interval1)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length == 1) \"YES\"\n       \
    \ else if (length2 == 1) \"YES\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else intersection(interval2,\
    \ interval1)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.max(start, start2)\n        val end = math.min(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\"\n        else\
    \ if (length == 1) \"YES\"\n        else if (length == 2 && start <= end) \"YES\"\
    \n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else if (length\
    \ == 2 && start < end) \"NO\"\n        else if (length == 2 && start == end) \"\
    YES", "        val start = interval1._1\n        val end = interval1._2\n    \
    \    val start2 = interval2._1\n        val end2 = interval2._2\n        val length\
    \ = end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ \"NO\" else length == length2 ? \"YES\" : \"NO\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start > end) {\n            val temp = start\n\
    \            start = end\n            end = temp\n        }\n        if (start2\
    \ > end2) {\n            val temp = start2\n            start2 = end2\n      \
    \      end2 = temp\n        }\n        if (start == start2 && end == end2) {\n\
    \            return \"NO\"\n        }\n        val length = end - start\n    \
    \    val length2 = end2 - start2\n        if (length2 == 0) {\n            return\
    \ \"NO\"\n        }\n        if (length == 1) {\n            return \"YES\"\n\
    \        }\n        if (length2 == 1) {\n            return \"YES\"\n        }\n\
    \        if (length == length2) {\n            return \"YES\"\n        }\n   \
    \     if (length < length2) {\n            return \"NO\"\n        }\n        if\
    \ (length2 < length) {\n            return \"NO\"\n        }\n        if (length\
    \ == length2) {\n            return \"YES\"\n        }\n        if (length < length2)\
    \ {\n            return \"NO\"\n        }\n        if (length2 < length) {\n \
    \           return \"NO\"\n        }\n        if (length == length2) {\n     \
    \       return \"YES\"\n        }\n        if (length < length2) {\n         \
    \   return \"NO\"\n        }\n        if (length2 < length) {\n            return\
    \ \"NO\"\n        }\n        if (length == length2) {\n            return \"YES\"\
    \n        }\n        if (length < length2) {\n            return \"NO\"\n    \
    \    }\n        if (length2 < length) {\n            return \"NO\"\n        }\n\
    \        if (length == length2) {\n            return \"YES\"\n        }\n   \
    \     if (length < length2) {\n            return \"NO\"\n        }\n        if\
    \ (length2 < length) {\n            return \"NO\"\n        }\n        if (length\
    \ == length2) {\n            return \"YES\"\n        }\n        if (length < length2)\
    \ {\n            return \"NO\"\n        }\n        if (length2 < length) {\n \
    \           return \"NO\"\n        }\n        if (length == length2) {\n     \
    \       return \"YES\"\n        }\n        if (length < length2) {\n         \
    \   return \"NO\"\n        }\n        if (length2 < length) {\n            return\
    \ \"NO\"\n        }\n        if (length == length2) {\n            return \"YES\"\
    \n        }\n        if (length < length2) {\n            return \"NO\"\n    \
    \    }\n        if (length2 < length) {\n            return \"NO\"\n        }\n\
    \        if (length == length2) {\n            return \"YES\"\n        }\n   \
    \     if (length < length2) {\n            return \"NO\"\n        }\n        if\
    \ (length2 < length) {\n            return \"NO\"\n        }\n        if (length\
    \ == length2) {\n            return \"YES\"\n        }\n        if (length < length2)\
    \ {\n            return \"NO\"\n        }\n        if (length2 < length) {\n \
    \           return \"NO\"\n        }\n        if (length == length2) {\n     \
    \       return \"YES\"\n        }\n        if (length < length2) {\n         \
    \   return \"NO\"\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            val start3 = start2\n        \
    \    val end3 = end2\n            val start4 = start\n            val end4 = end\n\
    \            val start5 = start3\n            val end5 = end3\n            val\
    \ start6 = start4\n            val end6 = end4\n            val start7 = start5\n\
    \            val end7 = end5\n            val start8 = start6\n            val\
    \ end8 = end6\n            val start9 = start7\n            val end9 = end7\n\
    \            val start10 = start8\n            val end10 = end8\n            val\
    \ start11 = start9\n            val end11 = end9\n            val start12 = start10\n\
    \            val end12 = end10\n            val start13 = start11\n          \
    \  val end13 = end11\n            val start14 = start12\n            val end14\
    \ = end12\n            val start15 = start13\n            val end15 = end13\n\
    \            val start16 = start14\n            val end16 = end14\n          \
    \  val start17 = start15\n            val end17 = end15\n            val start18\
    \ = start16\n            val end18 = end16\n            val start19 = start17\n\
    \            val end19 = end17\n            val start20 = start18\n          \
    \  val end20 = end18\n            val start21 = start19\n            val end21\
    \ = end19\n            val start22 = start20\n            val end22 = end20\n\
    \            val start23 = start21\n            val end23 = end21\n          \
    \  val start24 = start22\n            val end24 = end22\n            val start25\
    \ = start23\n            val end25 = end23\n            val start26 = start24\n\
    \            val end26 = end24\n            val start27 = start25\n          \
    \  val end27 = end25\n            val start28 = start26\n            val end28\
    \ = end26\n            val start29 = start27\n            val end29 = end27\n\
    \            val start30 = start28\n            val end30 = end28\n          \
    \  val start31 = start29\n            val end31 = end29\n            val start32\
    \ = start30\n            val end32 = end30\n            val start33 = start31\n\
    \            val end33 = end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\"\n        else if (length == 1) \"\
    YES\"\n        else if (length == 2) \"YES\"\n        else if (length == 3) \"\
    YES\"\n        else if (length == length2) \"YES\"\n        else if (length ==\
    \ length2 + 1) \"YES\"\n        else if (length == length2 + 2) \"YES\"\n    \
    \    else if (length == length2 + 3) \"YES\"\n        else if (length == length2\
    \ + 4) \"YES\"\n        else if (length == length2 + 5) \"YES\"\n        else\
    \ if (length == length2 + 6) \"YES\"\n        else if (length == length2 + 7)\
    \ \"YES\"\n        else if (length == length2 + 8) \"YES\"\n        else if (length\
    \ == length2 + 9) \"YES\"\n        else if (length == length2 + 10) \"YES\"\n\
    \        else if (length == length2 + 11) \"YES\"\n        else if (length ==\
    \ length2 + 12) \"YES\"\n        else if (length == length2 + 13) \"YES\"\n  \
    \      else if (length == length2 + 14) \"YES\"\n        else if (length == length2\
    \ + 15) \"YES\"\n        else if (length == length2 + 16) \"YES\"\n        else\
    \ if (length == length2 + 17) \"YES\"\n        else if (length == length2 + 18)\
    \ \"YES\"\n        else if (length == length2 + 19) \"YES\"\n        else if (length\
    \ == length2 + 20) \"YES\"\n        else if (length == length2 + 21) \"YES\"\n\
    \        else if (length == length2 + 22) \"YES\"\n        else if (length ==\
    \ length2 + 23) \"YES\"\n        else if (length == length2 + 24) \"YES\"\n  \
    \      else if (length == length2 + 25) \"YES\"\n        else if (length == length2\
    \ + 26) \"YES\"\n        else if (length == length2 + 27) \"YES\"\n        else\
    \ if (length == length2 + 28) \"YES\"\n        else if (length == length2 + 29)\
    \ \"YES\"\n        else if (length == length2 + 30) \"YES\"\n        else if (length\
    \ == length2 + 31) \"YES\"\n        else if (length == length2 + 32) \"YES\"\n\
    \        else if (length == length2 + 33) \"YES\"\n        else if (length ==\
    \ length2 + 34) \"YES\"\n        else if (length == length2 + 35) \"YES\"\n  \
    \      else if (length == length2 + 36) \"YES\"\n        else if (length == length2\
    \ + 37) \"YES\"\n        else if (length == length2 + 38) \"YES\"\n        else\
    \ if (length == length2 + 39) \"YES\"\n        else if (length == length2 + 40)\
    \ \"YES\"\n        else if (length == length2 + 41) \"YES\"\n        else if (length\
    \ == length2 + 42) \"YES\"\n        else if (", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length2 > length) \"YES\"\n        else intersection2(interval1, interval2)",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\"\n        else if (length2 > length) \"YES\"\n        else if (length2\
    \ < length) \"NO\"\n        else if (length == 1) \"YES\"\n        else if (length2\
    \ == 1) \"YES\"\n        else if (length == 2) \"YES\"\n        else if (length2\
    \ == 2) \"YES\"\n        else if (length == 3) \"YES\"\n        else if (length2\
    \ == 3) \"YES\"\n        else if (length == 4) \"YES\"\n        else if (length2\
    \ == 4) \"YES\"\n        else if (length == 5) \"YES\"\n        else if (length2\
    \ == 5) \"YES\"\n        else if (length == 6) \"YES\"\n        else if (length2\
    \ == 6) \"YES\"\n        else if (length == 7) \"YES\"\n        else if (length2\
    \ == 7) \"YES\"\n        else if (length == 8) \"YES\"\n        else if (length2\
    \ == 8) \"YES\"\n        else if (length == 9) \"YES\"\n        else if (length2\
    \ == 9) \"YES\"\n        else if (length == 10) \"YES\"\n        else if (length2\
    \ == 10) \"YES\"\n        else if (length == 11) \"YES\"\n        else if (length2\
    \ == 11) \"YES\"\n        else if (length == 12) \"YES\"\n        else if (length2\
    \ == 12) \"YES\"\n        else if (length == 13) \"YES\"\n        else if (length2\
    \ == 13) \"YES\"\n        else if (length == 14) \"YES\"\n        else if (length2\
    \ == 14) \"YES\"\n        else if (length == 15) \"YES\"\n        else if (length2\
    \ == 15) \"YES\"\n        else if (length == 16) \"YES\"\n        else if (length2\
    \ == 16) \"YES\"\n        else if (length == 17) \"YES\"\n        else if (length2\
    \ == 17) \"YES\"\n        else if (length == 18) \"YES\"\n        else if (length2\
    \ == 18) \"YES\"\n        else if (length == 19) \"YES\"\n        else if (length2\
    \ == 19) \"YES\"\n        else if (length == 20) \"YES\"\n        else if (length2\
    \ == 20) \"YES\"\n        else if (length == 21) \"YES\"\n        else if (length2\
    \ == 21) \"YES\"\n        else if (length == 22) \"YES\"\n        else if (length2\
    \ == 22) \"YES\"\n        else if (length == 23) \"YES\"\n        else if (length2\
    \ == 23) \"YES\"\n        else if (length == 24) \"YES\"\n        else if (length2\
    \ == 24) \"YES\"\n        else if (length == 25) \"YES\"\n        else if (length2\
    \ == 25) \"YES\"\n        else if (length == 26) \"YES\"\n        else if (length2\
    \ == 26) \"YES\"\n        else if (length == 27) \"YES\"\n        else if (length2\
    \ == 27) \"YES\"\n        else if (length == 28) \"YES\"\n        else if (length2\
    \ == 28) \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n      \
    \  else if (length == 1) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        val primes = mutable.Set[Long]()\n        val primes2 = mutable.Set[Long]()\n\
    \        val primes3 = mutable.Set[Long]()\n        val primes4 = mutable.Set[Long]()\n\
    \        val primes5 = mutable.Set[Long]()\n        val primes6 = mutable.Set[Long]()\n\
    \        val primes7 = mutable.Set[Long]()\n        val primes8 = mutable.Set[Long]()\n\
    \        val primes9 = mutable.Set[Long]()\n        val primes10 = mutable.Set[Long]()\n\
    \        val primes11 = mutable.Set[Long]()\n        val primes12 = mutable.Set[Long]()\n\
    \        val primes13 = mutable.Set[Long]()\n        val primes14 = mutable.Set[Long]()\n\
    \        val primes15 = mutable.Set[Long]()\n        val primes16 = mutable.Set[Long]()\n\
    \        val primes17 = mutable.Set[Long]()\n        val primes18 = mutable.Set[Long]()\n\
    \        val primes19 = mutable.Set[Long]()\n        val primes20 = mutable.Set[Long]()\n\
    \        val primes21 = mutable.Set[Long]()\n        val primes22 = mutable.Set[Long]()\n\
    \        val primes23 = mutable.Set[Long]()\n        val primes24 = mutable.Set[Long]()\n\
    \        val primes25 = mutable.Set[Long]()\n        val primes26 = mutable.Set[Long]()\n\
    \        val primes27 = mutable.Set[Long]()\n        val primes28 = mutable.Set[Long]()\n\
    \        val primes29 = mutable.Set[Long]()\n        val primes30 = mutable.Set[Long]()\n\
    \        val primes31 = mutable.Set[Long]()\n        val primes32 = mutable.Set[Long]()\n\
    \        val primes33 = mutable.Set[", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start < end2 && start2 < end) {\n            val\
    \ start3 = start2\n            val end3 = end2\n            val start4 = start\n\
    \            val end4 = end\n            val start5 = start3\n            val\
    \ end5 = end3\n            val start6 = start4\n            val end6 = end4\n\
    \            val start7 = start5\n            val end7 = end5\n            val\
    \ start8 = start6\n            val end8 = end6\n            val start9 = start7\n\
    \            val end9 = end7\n            val start10 = start8\n            val\
    \ end10 = end8\n            val start11 = start9\n            val end11 = end9\n\
    \            val start12 = start10\n            val end12 = end10\n          \
    \  val start13 = start11\n            val end13 = end11\n            val start14\
    \ = start12\n            val end14 = end12\n            val start15 = start13\n\
    \            val end15 = end13\n            val start16 = start14\n          \
    \  val end16 = end14\n            val start17 = start15\n            val end17\
    \ = end15\n            val start18 = start16\n            val end18 = end16\n\
    \            val start19 = start17\n            val end19 = end17\n          \
    \  val start20 = start18\n            val end20 = end18\n            val start21\
    \ = start19\n            val end21 = end19\n            val start22 = start20\n\
    \            val end22 = end20\n            val start23 = start21\n          \
    \  val end23 = end21\n            val start24 = start22\n            val end24\
    \ = end22\n            val start25 = start23\n            val end25 = end23\n\
    \            val start26 = start24\n            val end26 = end24\n          \
    \  val start27 = start25\n            val end27 = end25\n            val start28\
    \ = start26\n            val end28 = end26\n            val start29 = start27\n\
    \            val end29 = end27\n            val start30 = start28\n          \
    \  val end30 = end28\n            val start31 = start29\n            val end31\
    \ = end29\n            val start32 = start30\n            val end32 = end30\n\
    \            val start33 = start31\n            val end33 = end", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length == 0 || length2 == 0) {\n      \
    \      \"NO\"\n        } else if (length2 == 1) {\n            if (length == 1)\
    \ {\n                \"YES\"\n            } else {\n                \"NO\"\n \
    \           }\n        } else if (length2 == 2) {\n            if (length == 1)\
    \ {\n                \"NO\"\n            } else if (length == 2) {\n         \
    \       \"YES\"\n            } else {\n                \"NO\"\n            }\n\
    \        } else {\n            val mid = (start + end) / 2\n            val mid2\
    \ = start2 + end2\n            if (mid == mid2) {\n                \"NO\"\n  \
    \          } else if (mid < mid2) {\n                intersection(interval1, interval2)\n\
    \            } else {\n                intersection(interval2, interval1)\n  \
    \          }\n        }", "        val start = interval1._1\n        val end =\
    \ interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) {\n            if (length == 0) \"NO\" else \"YES\"\n  \
    \      } else {\n            val prime = length / length2\n            if (prime\
    \ == 0) \"NO\" else \"YES\"\n        }", "        val start = interval1._1\n \
    \       val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        val prime = length * length2\n        if (prime == 0)\
    \ \"NO\" else \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ start - end\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ > length) {\n            return \"NO\"\n        }\n        if (length2 < length)\
    \ {\n            return \"YES\"\n        }\n        var flag = false\n       \
    \ var flag2 = false\n        var flag3 = false\n        var flag4 = false\n  \
    \      var flag5 = false\n        var flag6 = false\n        var flag7 = false\n\
    \        var flag8 = false\n        var flag9 = false\n        var flag10 = false\n\
    \        var flag11 = false\n        var flag12 = false\n        var flag13 =\
    \ false\n        var flag14 = false\n        var flag15 = false\n        var flag16\
    \ = false\n        var flag17 = false\n        var flag18 = false\n        var\
    \ flag19 = false\n        var flag20 = false\n        var flag21 = false\n   \
    \     var flag22 = false\n        var flag23 = false\n        var flag24 = false\n\
    \        var flag25 = false\n        var flag26 = false\n        var flag27 =\
    \ false\n        var flag28 = false\n        var flag29 = false\n        var flag30\
    \ = false\n        var flag31 = false\n        var flag32 = false\n        var\
    \ flag33 = false\n        var flag34 = false\n        var flag35 = false\n   \
    \     var flag36 = false\n        var flag37 = false\n        var flag38 = false\n\
    \        var flag39 = false\n        var flag40 = false\n        var flag41 =\
    \ false\n        var flag42 = false\n        var flag43 = false\n        var flag44\
    \ = false\n        var flag45 = false\n        var flag46 = false\n        var\
    \ flag47 = false\n        var flag48 = false\n        var flag49 = false\n   \
    \     var flag50 = false\n        var flag51 = false\n        var flag52 = false\n\
    \        var flag53 = false\n        var flag54 = false\n        var flag55 =\
    \ false\n        var flag56 = false\n        var flag57 = false\n        var flag58\
    \ = false\n        var flag59 = false\n        var flag60 = false\n        var\
    \ flag61 = false\n        var flag62 = false\n        var flag63 = false\n   \
    \     var flag64 = false\n        var flag65 = false\n        var flag66 = false\n\
    \        var flag67 = false\n        var flag68 = false\n        var flag69 =\
    \ false\n        var flag70 = false\n        var flag71 = false\n        var flag72\
    \ = false\n        var flag73 = false\n        var flag74 = false\n        var\
    \ flag75 = false\n        var flag76 = false\n        var flag77 = false\n   \
    \     var flag78 = false\n        var flag79 = false\n        var flag80 = false\n\
    \        var flag8", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\"\n        else if (length2 == 1) \"\
    YES\"\n        else if (length == 1) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length2 == 1) \"YES\"\n        else if (length == 1) \"NO\"\n        else\
    \ if (length2 % length == 0) \"YES\"\n        else intersection(interval1, interval2)",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ start - end\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) \"NO\"\
    \n        else if (length == 1) \"YES\"\n        else if (length == length2) \"\
    YES\"\n        else intersection(interval1, interval2)", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n \
    \       else if (length == 1) \"YES\"\n        else if (length2 == 1) \"YES\"\n\
    \        else if (length2 > length) \"YES\"\n        else if (length2 < length)\
    \ \"NO\"\n        else if (length2 > length2 && length < length2) \"YES\"\n  \
    \      else if (length2 < length2 && length < length2) \"NO\"\n        else if\
    \ (length2 > length2 && length == length2) \"YES\"\n        else if (length2 <\
    \ length2 && length == length2) \"NO\"\n        else if (length2 > length2 &&\
    \ length < length2) \"NO\"\n        else if (length2 < length2 && length == length2)\
    \ \"NO\"\n        else if (length2 > length2 && length < length2) \"NO\"\n   \
    \     else if (length2 < length2 && length == length2) \"NO\"\n        else if\
    \ (length2 > length2 && length < length2) \"NO\"\n        else if (length2 < length2\
    \ && length == length2) \"NO\"\n        else if (length2 > length2 && length <\
    \ length2) \"NO\"\n        else if (length2 < length2 && length == length2) \"\
    NO\"\n        else if (length2 > length2 && length < length2) \"NO\"\n       \
    \ else if (length2 < length2 && length == length2) \"NO\"\n        else if (length2\
    \ > length2 && length < length2) \"NO\"\n        else if (length2 < length2 &&\
    \ length == length2) \"NO\"\n        else if (length2 > length2 && length < length2)\
    \ \"NO\"\n        else if (length2 < length2 && length == length2) \"NO\"\n  \
    \      else if (length2 > length2 && length < length2) \"NO\"\n        else if\
    \ (length2 < length2 && length == length2) \"NO\"\n        else if (length2 >\
    \ length2 && length < length2) \"NO\"\n        else if (length2 < length2 && length\
    \ == length2) \"NO\"\n        else if (length2 > length2 && length < length2)\
    \ \"NO\"\n        else if (length2 < length2 && length == length2) \"NO\"\n  \
    \      else if (length2 > length2 && length < length2) \"NO\"\n        else if\
    \ (length2 < length2 && length == length2) \"NO\"\n        else if (length2 >\
    \ length2 && length < length2) \"NO\"\n        else if (length2 < length2 && length\
    \ == length2) \"NO\"\n        else if (length2 > length2 && length < length2)\
    \ \"NO\"\n        else if (length2 < length2 && length == length2) \"NO\"\n  \
    \      else if (length2 > length2 && length < length2) \"NO\"\n        else if\
    \ (length2 < length", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n      \
    \  else if (length == 1) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length != length2) \"NO\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        val isPrime\
    \ = length == 2 || length2 == 2\n        if (isPrime) {\n            return \"\
    YES\"\n        }\n        else {\n            return \"NO\"\n        }", "   \
    \     val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\"\n        else if (length2 == 1) \"\
    YES\"\n        else if (length == 1) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else intersection(interval1, interval2)", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"NO\"\n        }\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length == 0 || length2\
    \ == 0) {\n            return \"NO\"\n        }\n        if (length == 1) {\n\
    \            return \"YES\"\n        }\n        val prime = length / length2\n\
    \        if (prime == 0 || prime == 1) {\n            return \"NO\"\n        }\n\
    \        if (prime == 2) {\n            return \"YES\"\n        }\n        if\
    \ (prime % 2 == 0) {\n            return \"NO\"\n        }\n        val prime2\
    \ = prime - 1\n        val prime3 = prime2\n        val prime4 = prime3\n    \
    \    val prime5 = prime4\n        val prime6 = prime5\n        val prime7 = prime6\n\
    \        val prime8 = prime7\n        val prime9 = prime8\n        val prime10\
    \ = prime9\n        val prime11 = prime10\n        val prime12 = prime11\n   \
    \     val prime13 = prime12\n        val prime14 = prime13\n        val prime15\
    \ = prime14\n        val prime16 = prime15\n        val prime17 = prime16\n  \
    \      val prime18 = prime17\n        val prime19 = prime18\n        val prime20\
    \ = prime19\n        val prime21 = prime20\n        val prime22 = prime21\n  \
    \      val prime23 = prime22\n        val prime24 = prime23\n        val prime25\
    \ = prime24\n        val prime26 = prime25\n        val prime27 = prime26\n  \
    \      val prime28 = prime27\n        val prime29 = prime28\n        val prime30\
    \ = prime29\n        val prime31 = prime30\n        val prime32 = prime31\n  \
    \      val prime33 = prime32\n        val prime34 = prime33\n        val prime35\
    \ = prime34\n        val prime36 = prime35\n        val prime37 = prime36\n  \
    \      val prime38 = prime37\n        val prime39 = prime38\n        val prime40\
    \ = prime39\n        val prime41 = prime40\n        val prime42 = prime41\n  \
    \      val prime43 = prime42\n        val prime44 = prime43\n        ", "    \
    \    val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start > end) {\n\
    \            val temp = start\n            start = end\n            end = temp\n\
    \        }\n        if (start2 > end2) {\n            val temp = start2\n    \
    \        start2 = end2\n            end2 = temp\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start == start2 && end == end2) {\n            return \"NO\"\n\
    \        }\n        if (start > start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start == start2 && end == end2) {\n         \
    \   return \"NO\"\n        }\n        if (start > start2 && end < end2) {\n  \
    \          return \"NO\"\n        }\n        if (start < start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end > end2) {\n            return \"NO\"\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start == start2 && end == end2) {\n            return \"NO\"\n\
    \        }\n        if (start > start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start == start2 && end == end2) {\n         \
    \   return \"NO\"\n        }\n        if (start > start2 && end < end2) {\n  \
    \          return \"NO\"\n        }\n        if (start < start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end > end2) {\n            return \"NO\"\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start == start", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start == start2 && end > end2) {\n          \
    \  return \"NO\"\n        }\n        if (start > start2 && end == end2) {\n  \
    \          return \"NO\"\n        }\n        if (start > start2 && end > end2)\
    \ {\n            val temp = start\n            start = start2\n            start2\
    \ = temp\n            temp = end\n            end = end2\n            end2 = temp\n\
    \        }\n        if (start == start2 && end > end2) {\n            return \"\
    NO\"\n        }\n        if (start > start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end > end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \          temp = end\n            end = end2\n            end2 = temp\n     \
    \   }\n        if (start == start2 && end > end2) {\n            return \"NO\"\
    \n        }\n        if (start > start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end > end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \          temp = end\n            end = end2\n            end2 = temp\n     \
    \   }\n        if (start == start2 && end > end2) {\n            return \"NO\"\
    \n        }\n        if (start > start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end > end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \          temp = end\n            end = end2\n            end2 = temp\n     \
    \   }\n        if (start == start2 && end > end2) {\n            return \"NO\"\
    \n        }\n        if (start > start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end > end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \          temp = end\n            end = end2\n            end2 = temp\n     \
    \   }\n        if (start == start2 && end > end2) {\n            return \"NO\"\
    \n        }\n        if (start > start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end > end2) {\n           \
    \ val temp = start\n            start = start2\n            start2 = temp\n  \
    \          temp = end\n", "        val start = interval1._1\n        val end =\
    \ interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMinusEnd = start - end\n        val start2MinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd\
    \ = start - end\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start - end2\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start - end2\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd\
    \ = start - end\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start - end2\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd = start - end\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start - end2\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd\
    \ = start - end\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start - end2\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd = start - end\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start - end2\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd\
    \ = start - end\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start - end2\n        val startMinusEnd2 = start - end2\n        val start2Min",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 1) {\n            if (length == 1) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        val length = length / 2\n        val length2 = length2 / 2\n        val\
    \ length3 = length * length2\n        val length4 = length3 * length\n       \
    \ val length5 = length4 * length\n        val length6 = length5 * length\n   \
    \     val length7 = length6 * length\n        val length8 = length7 * length\n\
    \        val length9 = length8 * length\n        val length10 = length9 * length\n\
    \        val length11 = length10 * length\n        val length12 = length11 * length\n\
    \        val length13 = length12 * length\n        val length14 = length13 * length\n\
    \        val length15 = length14 * length\n        val length16 = length15 * length\n\
    \        val length17 = length16 * length\n        val length18 = length17 * length\n\
    \        val length19 = length18 * length\n        val length20 = length19 * length\n\
    \        val length21 = length20 * length\n        val length22 = length21 * length\n\
    \        val length23 = length22 * length\n        val length24 = length23 * length\n\
    \        val length25 = length24 * length\n        val length26 = length25 * length\n\
    \        val length27 = length26 * length\n        val length28 = length27 * length\n\
    \        val length29 = length28 * length\n        val length30 = length29 * length\n\
    \        val length31 = length30 * length\n        val length32 = length31 * length\n\
    \        val length33 = length32 * length\n        val length34 = length33 * length\n\
    \        val length35 = length34 * length\n        val length36 = length35 * length\n\
    \        val length37 = length36 * length\n        val length38 = length37 * length\n\
    \        val length39 = length38 * length\n        val length40 = length39 * length\n\
    \        val length41 = length40 * length\n        val length42 = length41 * length\n\
    \        val length43 = length42 * length\n        val length44 = length", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ {\n            if (length == 0) \"NO\" else \"YES\"\n        } else {\n    \
    \        val prime = length * length2\n            if (prime == 0) \"NO\" else\
    \ \"YES\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ start - end\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) \"NO\"\
    \ else \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            \"NO\"\n        } else {\n            val\
    \ prime = length / length2\n            if (prime == 1) {\n                \"\
    YES\"\n            } else {\n                \"NO\"\n            }\n        }",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ start - end\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.max(start,\
    \ start2)\n        val end = math.min(end, end2)\n        val length = end - start\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primes2 = mutable.ListBuffer[Long]()\n\
    \        val primes3 = mutable.ListBuffer[Long]()\n        val primes4 = mutable.ListBuffer[Long]()\n\
    \        val primes5 = mutable.ListBuffer[Long]()\n        val primes6 = mutable.ListBuffer[Long]()\n\
    \        val primes7 = mutable.ListBuffer[Long]()\n        val primes8 = mutable.ListBuffer[Long]()\n\
    \        val primes9 = mutable.ListBuffer[Long]()\n        val primes10 = mutable.ListBuffer[Long]()\n\
    \        val primes11 = mutable.ListBuffer[Long]()\n        val primes12 = mutable.ListBuffer[Long]()\n\
    \        val primes13 = mutable.ListBuffer[Long]()\n        val primes14 = mutable.ListBuffer[Long]()\n\
    \        val primes15 = mutable.ListBuffer[Long]()\n        val primes16 = mutable.ListBuffer[Long]()\n\
    \        val primes17 = mutable.ListBuffer[Long]()\n        val primes18 = mutable.ListBuffer[Long]()\n\
    \        val primes19 = mutable.ListBuffer[Long]()\n        val primes20 = mutable.ListBuffer[Long]()\n\
    \        val primes21 = mutable.ListBuffer[Long]()\n        val primes22 = mutable.ListBuffer[Long]()\n\
    \        val primes23 = mutable.ListBuffer[Long]()\n        val primes24 = mutable.ListBuffer[Long]()\n\
    \        val primes25 = mutable.ListBuffer[Long]()\n        val primes26 = mutable.ListBuffer[Long]()\n\
    \        val primes27 = mutable.ListBuffer[Long]()\n        val primes28 = mutable.ListBuffer[Long]()\n\
    \        val primes29 = mutable.ListBuffer[Long]()\n        val primes30 = mutable.ListBuffer[Long]()\n\
    \        val primes31 = mutable.ListBuffer[Long]()\n        val primes32 = mutable.List",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length == 0 || length2\
    \ == 0) {\n            \"NO\"\n        } else if (length == 1) {\n           \
    \ \"YES\"\n        } else if (length2 == 1) {\n            \"NO\"\n        } else\
    \ if (length2 > length) {\n            \"NO\"\n        } else if (length2 < length)\
    \ {\n            \"YES\"\n        } else {\n            val a = length\n     \
    \       val b = length2\n            val c = a * b\n            val d = c / 2\n\
    \            val e = c % 2\n            val f = d * d\n            val g = f *\
    \ d\n            val h = g * d\n            val i = h / 2\n            val j =\
    \ h % 2\n            val k = i * i\n            val l = j * j\n            val\
    \ m = k * j\n            val n = l * l\n            val o = n * l\n          \
    \  val p = m * l\n            val q = p * l\n            val r = q * l\n     \
    \       val s = r * l\n            val t = s * l\n            val u = t * l\n\
    \            val v = u * l\n            val w = v * l\n            val x = w *\
    \ l\n            val y = x * l\n            val z = y * l\n            val a =\
    \ z * l\n            val b = a * l\n            val c = b * l\n            val\
    \ d = c * l\n            val e = d * l\n            val f = e * l\n          \
    \  val g = f * l\n            val h = g * l\n            val i = h * l\n     \
    \       val j = i * l\n            val k = j * l\n            val l = k * l\n\
    \            val m = l * l\n            val n = m * l\n            val o = n *\
    \ l\n            val p = o * l\n            val q = p * l\n            val r =\
    \ q * l\n            val s = r * l\n            val t = s * l\n            val\
    \ u = t * l\n            val v = u * l\n            val w = v * l\n          \
    \  val x = w * l\n            val y = x * l\n            val z = y * l\n     \
    \       val a = z * l\n            val b = a * l\n            val c = b * l\n\
    \            val d = c * l\n            val e = d * l\n            val f = e *\
    \ l\n            val g = f * l\n            val h = g * l\n            val i =\
    \ h * l\n            val j = i * l\n            val k = j * l\n            val\
    \ l = k * l\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            val start3 = start2\n        \
    \    val end3 = end2\n            val start4 = start\n            val end4 = end\n\
    \            val start5 = start3\n            val end5 = end3\n            val\
    \ start6 = start4\n            val end6 = end4\n            val start7 = start5\n\
    \            val end7 = end5\n            val start8 = start6\n            val\
    \ end8 = end6\n            val start9 = start7\n            val end9 = end7\n\
    \            val start10 = start8\n            val end10 = end8\n            val\
    \ start11 = start9\n            val end11 = end9\n            val start12 = start10\n\
    \            val end12 = end10\n            val start13 = start11\n          \
    \  val end13 = end11\n            val start14 = start12\n            val end14\
    \ = end12\n            val start15 = start13\n            val end15 = end13\n\
    \            val start16 = start14\n            val end16 = end14\n          \
    \  val start17 = start15\n            val end17 = end15\n            val start18\
    \ = start16\n            val end18 = end16\n            val start19 = start17\n\
    \            val end19 = end17\n            val start20 = start18\n          \
    \  val end20 = end18\n            val start21 = start19\n            val end21\
    \ = end19\n            val start22 = start20\n            val end22 = end20\n\
    \            val start23 = start21\n            val end23 = end21\n          \
    \  val start24 = start22\n            val end24 = end22\n            val start25\
    \ = start23\n            val end25 = end23\n            val start26 = start24\n\
    \            val end26 = end24\n            val start27 = start25\n          \
    \  val end27 = end25\n            val start28 = start26\n            val end28\
    \ = end26\n            val start29 = start27\n            val end29 = end27\n\
    \            val start30 = start28\n            val end30 = end28\n          \
    \  val start31 = start29\n            val end31 = end29\n            val start32\
    \ = start30\n            val end32 = end30\n            val start33 = start31\n\
    \            val end33 = end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   val result = length * length2\n        if (result % 2 == 0) {\n          \
    \  if (length == length2) {\n                if (length == 1) {\n            \
    \        return \"YES\"\n                } else {\n                    return\
    \ \"NO\"\n                }\n            } else {\n                return \"NO\"\
    \n            }\n        } else {\n            return \"NO\"\n        }", "  \
    \      val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) \"NO\"\
    \ else length == length2 ? \"YES\" : \"NO\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start > end) {\n            val temp = start\n\
    \            start = end\n            end = temp\n        }\n        if (start2\
    \ > end2) {\n            val temp = start2\n            start2 = end2\n      \
    \      end2 = temp\n        }\n        if (start == start2 && end == end2) {\n\
    \            return \"NO\"\n        }\n        val length = end - start\n    \
    \    val length2 = end2 - start2\n        if (length == length2) {\n         \
    \   return \"YES\"\n        }\n        val length3 = length / length2\n      \
    \  if (length3 == 1) {\n            return \"YES\"\n        }\n        val length4\
    \ = length3 / 2\n        if (length4 == 1) {\n            return \"YES\"\n   \
    \     }\n        val length5 = length3 / length4\n        if (length5 == 1) {\n\
    \            return \"YES\"\n        }\n        return \"NO\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length == 0 || length2 == 0) \"NO\"\n \
    \       else if (length == length2) \"YES\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            \"NO\"\n        } else if (length == length2)\
    \ {\n            \"YES\"\n        } else {\n            val prime = length / length2\n\
    \            val prime2 = length2 / length\n            val prime3 = prime * prime2\n\
    \            val prime4 = prime3 * prime\n            val prime5 = prime4 * prime\n\
    \            val prime6 = prime5 * prime\n            val prime7 = prime6 * prime\n\
    \            val prime8 = prime7 * prime\n            val prime9 = prime8 * prime\n\
    \            val prime10 = prime9 * prime\n            val prime11 = prime10 *\
    \ prime\n            val prime12 = prime11 * prime\n            val prime13 =\
    \ prime12 * prime\n            val prime14 = prime13 * prime\n            val\
    \ prime15 = prime14 * prime\n            val prime16 = prime15 * prime\n     \
    \       val prime17 = prime16 * prime\n            val prime18 = prime17 * prime\n\
    \            val prime19 = prime18 * prime\n            val prime20 = prime19\
    \ * prime\n            val prime21 = prime20 * prime\n            val prime22\
    \ = prime21 * prime\n            val prime23 = prime22 * prime\n            val\
    \ prime24 = prime23 * prime\n            val prime25 = prime24 * prime\n     \
    \       val prime26 = prime25 * prime\n            val prime27 = prime26 * prime\n\
    \            val prime28 = prime27 * prime\n            val prime29 = prime28\
    \ * prime\n            val prime30 = prime29 * prime\n            val prime31\
    \ = prime30 * prime\n            val prime32 = prime31 * prime\n            val\
    \ prime33 = prime32 * prime\n            val prime34 = prime33 * prime\n     \
    \       val prime35 = prime34 * prime\n            val prime36 = prime35 * prime\n\
    \            val prime37 = prime36 * prime\n            val prime38 = prime37\
    \ * prime\n            val prime39 = prime38 * prime\n            val prime40\
    \ = prime39 * prime\n            val prime41 = prime40 * prime\n            val\
    \ prime42 = prime41 * prime\n            val prime43 = prime42 * prime\n     \
    \       val prime44 = prime43 * prime\n            val prime45 = prime44 * prime\n\
    \            val prime46 = prime45 * prime\n            ", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length2 == 1) {\n            if (length == 1) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (length2 > 1) {\n            val list1 = ListBuffer[Long]()\n\
    \            val list2 = ListBuffer[Long]()\n            val list3 = ListBuffer[Long]()\n\
    \            val list4 = ListBuffer[Long]()\n            val list5 = ListBuffer[Long]()\n\
    \            val list6 = ListBuffer[Long]()\n            val list7 = ListBuffer[Long]()\n\
    \            val list8 = ListBuffer[Long]()\n            val list9 = ListBuffer[Long]()\n\
    \            val list10 = ListBuffer[Long]()\n            val list11 = ListBuffer[Long]()\n\
    \            val list12 = ListBuffer[Long]()\n            val list13 = ListBuffer[Long]()\n\
    \            val list14 = ListBuffer[Long]()\n            val list15 = ListBuffer[Long]()\n\
    \            val list16 = ListBuffer[Long]()\n            val list17 = ListBuffer[Long]()\n\
    \            val list18 = ListBuffer[Long]()\n            val list19 = ListBuffer[Long]()\n\
    \            val list20 = ListBuffer[Long]()\n            val list21 = ListBuffer[Long]()\n\
    \            val list22 = ListBuffer[Long]()\n            val list23 = ListBuffer[Long]()\n\
    \            val list24 = ListBuffer[Long]()\n            val list25 = ListBuffer[Long]()\n\
    \            val list26 = ListBuffer[Long]()\n            val list27 = ListBuffer[Long]()\n\
    \            val list28 = ListBuffer[Long]()\n            val list29 = ListBuffer[Long]()\n\
    \            val list30 = ListBuffer[Long]()\n            val list31 = ListBuffer[Long]()\n\
    \            val list32 = ListBuffer[Long]()\n            val list33 = ListBuffer[Long]()\n\
    \            val list34 = ListBuffer[Long]()\n            val list35 = ListBuffer[Long]()\n\
    \            val ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else if (length == 1) \"YES\" else \"NO\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start3 = start2\n        val end3\
    \ = end2\n        val start4 = start\n        val end4 = end\n        val start5\
    \ = start3\n        val end5 = end3\n        val start6 = start4\n        val\
    \ end6 = end4\n        val start7 = start5\n        val end7 = end5\n        val\
    \ start8 = start6\n        val end8 = end6\n        val start9 = start7\n    \
    \    val end9 = end7\n        val start10 = start8\n        val end10 = end8\n\
    \        val start11 = start9\n        val end11 = end9\n        val start12 =\
    \ start10\n        val end12 = end10\n        val start13 = start11\n        val\
    \ end13 = end11\n        val start14 = start12\n        val end14 = end12\n  \
    \      val start15 = start13\n        val end15 = end13\n        val start16 =\
    \ start14\n        val end16 = end14\n        val start17 = start15\n        val\
    \ end17 = end15\n        val start18 = start16\n        val end18 = end16\n  \
    \      val start19 = start17\n        val end19 = end17\n        val start20 =\
    \ start18\n        val end20 = end18\n        val start21 = start19\n        val\
    \ end21 = end19\n        val start22 = start20\n        val end22 = end20\n  \
    \      val start23 = start21\n        val end23 = end21\n        val start24 =\
    \ start22\n        val end24 = end22\n        val start25 = start23\n        val\
    \ end25 = end23\n        val start26 = start24\n        val end26 = end24\n  \
    \      val start27 = start25\n        val end27 = end25\n        val start28 =\
    \ start26\n        val end28 = end26\n        val start29 = start27\n        val\
    \ end29 = end27\n        val start30 = start28\n        val end30 = end28\n  \
    \      val start31 = start29\n        val end31 = end29\n        val start32 =\
    \ start30\n        val end32 = end30\n        val start33 = start31\n        val\
    \ end33 = end31\n        val start34 = start32\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        val isPrime = length2 % length == 0 //\
    \ check whether length2 is a prime number\n        if (isPrime) {\n          \
    \  return \"YES\"\n        } else {\n            return \"NO\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0 ||\
    \ length == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n        else if\
    \ (length == 1) \"YES\"\n        else if (length2 % length == 0) \"YES\"\n   \
    \     else intersection(interval1, interval2)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        val isPrime\
    \ = length == 2 || length == 3 && length == start % length\n        if (isPrime)\
    \ {\n            \"YES\"\n        } else {\n            \"NO\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        val isPrime = length2\
    \ % length == 0\n        if(isPrime) {\n            return \"YES\"\n        }\n\
    \        else {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ start - end\n        val start2MinusEnd2 = start2 - end2\n        if (startMinusEnd\
    \ < 0 || start2MinusEnd2 < 0 || start2MinusEnd2 > startMinusEnd) {\n         \
    \   return \"NO\"\n        }\n        if (start2MinusEnd2 == 0) {\n          \
    \  return \"NO\"\n        }\n        val start2MinusEnd2MinusEnd = start2MinusEnd2\
    \ - startMinusEnd\n        if (start2MinusEnd2MinusEnd % 2 == 0) {\n         \
    \   return \"NO\"\n        }\n        if (start2MinusEnd2MinusEnd < 2) {\n   \
    \         return \"NO\"\n        }\n        val start2MinusEnd2MinusEnd2 = start2MinusEnd2MinusEnd\
    \ / 2\n        val start2MinusEnd2MinusEnd3 = start2MinusEnd2MinusEnd2 * start2MinusEnd2MinusEnd2\n\
    \        val start2MinusEnd2MinusEnd4 = start2MinusEnd2MinusEnd3 * start2MinusEnd2MinusEnd3\n\
    \        val start2MinusEnd2MinusEnd5 = start2MinusEnd2MinusEnd4 * start2MinusEnd2MinusEnd4\n\
    \        val start2MinusEnd2MinusEnd6 = start2MinusEnd2MinusEnd5 * start2MinusEnd2MinusEnd5\n\
    \        val start2MinusEnd2MinusEnd7 = start2MinusEnd2MinusEnd6 * start2MinusEnd2MinusEnd6\n\
    \        val start2MinusEnd2MinusEnd8 = start2MinusEnd2MinusEnd7 * start2MinusEnd2MinusEnd7\n\
    \        val start2MinusEnd2MinusEnd9 = start2MinusEnd2MinusEnd8 * start2MinusEnd2MinusEnd8\n\
    \        val start2MinusEnd2MinusEnd10 = start2MinusEnd2MinusEnd9 * start2MinusEnd2MinusEnd9\n\
    \        val start2MinusEnd2MinusEnd11 = start2MinusEnd2MinusEnd10 * start2MinusEnd2MinusEnd10\n\
    \        val start2MinusEnd2MinusEnd12 = start2MinusEnd2MinusEnd11 * start2Min",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ > length) {\n            return \"NO\"\n        }\n        if (length2 < length)\
    \ {\n            return \"NO\"\n        }\n        if (length == 1) {\n      \
    \      if (length2 == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 1) {\n            return \"NO\"\n        }\n        if (length == 2) {\n\
    \            if (length2 == 2) {\n                return \"YES\"\n           \
    \ } else {\n                return \"NO\"\n            }\n        }\n        if\
    \ (length == 2) {\n            return \"NO\"\n        }\n        if (length ==\
    \ 3) {\n            if (length2 == 3) {\n                return \"YES\"\n    \
    \        } else {\n                return \"NO\"\n            }\n        }\n \
    \       if (length == 3) {\n            return \"NO\"\n        }\n        if (length\
    \ == 4) {\n            if (length2 == 4) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length == 4) {\n            return \"NO\"\n        }\n        if\
    \ (length == 5) {\n            if (length2 == 5) {\n                return \"\
    YES\"\n            } else {\n                return \"NO\"\n            }\n  \
    \      }\n        if (length == 5) {\n            return \"NO\"\n        }\n \
    \       if (length == 6) {\n            if (length2 == 6) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length == 6) {\n            return \"NO\"\n        }\n\
    \        if (length == 7) {\n            if (length2 == 7) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length == 7) {\n            return \"NO\"\n \
    \       }\n        if (length == 8) {\n            if (length2 == 8) {\n     \
    \           return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length == 8) {\n            return \"\
    NO\"\n        }\n        if (length == 9) {\n            if (length2 == 9) {\n\
    \                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 9) {\n            return\
    \ \"NO\"\n        }\n        if (length == 10) {\n            if (length2 == 10)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 10) {\n            return\
    \ \"NO\"\n        }\n        if (length == 11) {\n            if (length2 == 11)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 11) {\n            return\
    \ \"NO\"\n        }\n        if (length == 12) {", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length == 1) \"YES\"\n        else if (length == length2) \"YES\"\n    \
    \    else if (length2 % length == 0) \"YES\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length2 == 1 && length == 1) \"\
    YES\"\n        else if (length2 == 1 && length != 1) \"NO\"\n        else if (length\
    \ != 1 && length2 == 1) \"NO\"\n        else if (length2 != 1 && length != 1)\
    \ \"NO\"\n        else if (length2 == 1 && length == 1) \"YES\"\n        else\
    \ if (length != 1 && length2 == 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length != 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length != 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length != 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length != 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length != 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length != 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length != 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length != 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length != 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length != 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length != 1) \"NO\"\n        else if (length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        val result\
    \ = length * length2\n        if (result < 2) \"NO\"\n        else if (result\
    \ % 2 == 0) \"YES\"\n        else intersection(interval2, interval1)", "     \
    \   val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        val isPrime = length2 %\
    \ length == 0\n        if (isPrime) {\n            return \"YES\"\n        } else\
    \ {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.max(start, start2)\n        val end = math.min(end,\
    \ end2)\n        val length = end - start\n        val isPrime = length == 2 ||\
    \ length == 3 && start % length == 0 && end % length == 0\n        if (isPrime)\
    \ {\n            \"YES\"\n        } else {\n            \"NO\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ \"NO\" else length2.isPrime", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) \n            if (start < start2 &&\
    \ end < end2) \"YES\" else \"NO\"\n            else intersection(interval1, interval2)\n\
    \        else intersection(interval2, interval1)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else intersection(interval1, interval2)",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) \"NO\" else \"YES\"\n        } else {\n          \
    \  val m = length / length2\n            if (m == 0) \"NO\" else \"YES\"\n   \
    \     }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length2 == 1 && length == 1) \"\
    YES\"\n        else if (length2 == 1 && length != 1) \"NO\"\n        else if (length\
    \ != 1) \"NO\"\n        else intersection(interval1, interval2)", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n \
    \       else if (length2 == 1) \"YES\"\n        else if (length == 1) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else intersection(interval1, interval2)", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n \
    \       else if (length == 1) \"YES\"\n        else if (length2 == 1) \"YES\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length2 % length\
    \ == 0) \"YES\"\n        else intersection(interval1, interval2)", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start < end2 && start2 < end) {\n\
    \            val start3 = start2\n            val end3 = end2\n            val\
    \ start4 = start\n            val end4 = end\n            val start5 = start3\n\
    \            val end5 = end3\n            val start6 = start4\n            val\
    \ end6 = end4\n            val start7 = start5\n            val end7 = end5\n\
    \            val start8 = start6\n            val end8 = end6\n            val\
    \ start9 = start7\n            val end9 = end7\n            val start10 = start8\n\
    \            val end10 = end8\n            val start11 = start9\n            val\
    \ end11 = end9\n            val start12 = start10\n            val end12 = end10\n\
    \            val start13 = start11\n            val end13 = end11\n          \
    \  val start14 = start12\n            val end14 = end12\n            val start15\
    \ = start13\n            val end15 = end13\n            val start16 = start14\n\
    \            val end16 = end14\n            val start17 = start15\n          \
    \  val end17 = end15\n            val start18 = start16\n            val end18\
    \ = end16\n            val start19 = start17\n            val end19 = end17\n\
    \            val start20 = start18\n            val end20 = end18\n          \
    \  val start21 = start19\n            val end21 = end19\n            val start22\
    \ = start20\n            val end22 = end20\n            val start23 = start21\n\
    \            val end23 = end21\n            val start24 = start22\n          \
    \  val end24 = end22\n            val start25 = start23\n            val end25\
    \ = end23\n            val start26 = start24\n            val end26 = end24\n\
    \            val start27 = start25\n            val end27 = end25\n          \
    \  val start28 = start26\n            val end28 = end26\n            val start29\
    \ = start27\n            val end29 = end27\n            val start30 = start28\n\
    \            val end30 = end28\n            val start31 = start29\n          \
    \  val end31 = end29\n            val start32 = start30\n            val end32\
    \ = end30\n            val start33 = start31\n            val end33 = end", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ \"NO\" else \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length == 1) {\n            if (length2 == 0) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (length == 2) {\n            if (length2 == 1)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 2) {\n            if\
    \ (length2 == 1) {\n                return \"YES\"\n            } else {\n   \
    \             return \"NO\"\n            }\n        }\n        if (length == 2)\
    \ {\n            if (length2 == 1) {\n                return \"YES\"\n       \
    \     } else {\n                return \"NO\"\n            }\n        }\n    \
    \    if (length == 2) {\n            if (length2 == 1) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length == 2) {\n            if (length2 == 1) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length == 2) {\n            if (length2\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length == 2) {\n   \
    \         if (length2 == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length\
    \ == 2) {\n            if (length2 == 1) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length == 2) {\n            if (length2 == 1) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length == 2) {\n            if (length2 == 1)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == 2) {\n            if\
    \ (length2 == 1) {\n                return \"YES\"\n            } else {\n   \
    \             return \"NO\"\n            }\n        }\n        if (length == 2)\
    \ {\n            if (length2 == 1) {\n                return \"YES\"\n       \
    \     } else {\n                return \"NO\"\n            }\n        }\n    \
    \    if (length == 2) {\n            if (length2 == 1) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length == 2) {\n            if (length2 == 1) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length == 2) {\n            if (length2\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length == 2) {\n   \
    \         if (length2 == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start < end2 && start2 < end) \n\
    \            if (start < start2 && end < end2) \"YES\" else \"NO\"\n         \
    \   else intersection(interval2, interval1)\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length2 == 1 && length == 1) \"\
    YES\"\n        else if (length2 == 1 && length != 1) \"NO\"\n        else if (length\
    \ != 1) \"NO\"\n        else if (length2 != 1) \"NO\"\n        else if (length\
    \ == 1) \"YES\"\n        else if (length == 2) \"YES\"\n        else if (length\
    \ == 3) \"YES\"\n        else if (length == 4) \"YES\"\n        else if (length\
    \ == 5) \"YES\"\n        else if (length == 6) \"YES\"\n        else if (length\
    \ == 7) \"YES\"\n        else if (length == 8) \"YES\"\n        else if (length\
    \ == 9) \"YES\"\n        else if (length == 10) \"YES\"\n        else if (length\
    \ == 11) \"YES\"\n        else if (length == 12) \"YES\"\n        else if (length\
    \ == 13) \"YES\"\n        else if (length == 14) \"YES\"\n        else if (length\
    \ == 15) \"YES\"\n        else if (length == 16) \"YES\"\n        else if (length\
    \ == 17) \"YES\"\n        else if (length == 18) \"YES\"\n        else if (length\
    \ == 19) \"YES\"\n        else if (length == 20) \"YES\"\n        else if (length\
    \ == 21) \"YES\"\n        else if (length == 22) \"YES\"\n        else if (length\
    \ == 23) \"YES\"\n        else if (length == 24) \"YES\"\n        else if (length\
    \ == 25) \"YES\"\n        else if (length == 26) \"YES\"\n        else if (length\
    \ == 27) \"YES\"\n        else if (length == 28) \"YES\"\n        else if (length\
    \ == 29) \"YES\"\n        else if (length == 30) \"YES\"\n        else if (length\
    \ == 31) \"YES\"\n        else if (length == 32) \"YES\"\n        else if (length\
    \ == 33) \"YES\"\n        else if (length == 34) \"YES\"\n        else if (length\
    \ == 35) \"YES\"\n        else if (length == 36) \"YES\"\n        else if (length\
    \ == 37) \"YES\"\n        else if (length == 38) \"YES\"\n        else if (length\
    \ == 39) \"YES\"\n        else if (length == 40) \"YES\"\n        else if (length\
    \ == 41) \"YES\"\n        else if (length == 42) \"YES\"\n        else if (length\
    \ == 43) \"YES\"\n        else if (length == 44) \"YES\"\n        else if (length\
    \ == 45) \"YES\"\n        else if (length == 46) \"YES\"\n        else if (length\
    \ == 47) \"YES\"\n        else if (length == 48) \"YES\"\n        else if (length\
    \ == 49) \"YES\"\n        else if (length == 50) \"YES\"\n        else if (length\
    \ == 51) \"YES\"\n        else if (length == 52) \"YES\"\n        else if (length\
    \ == 53) \"YES\"\n        else if (length == 54) \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else (length == length2\
    \ ? \"YES\" : \"NO\")", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\"\n        else if (length == 1) \"YES\"\n        else if (length2\
    \ % length == 0) \"YES\"\n        else intersection(interval1, interval2)", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        val isPrime = length2\
    \ % length == 0\n        if (isPrime) {\n            return \"YES\"\n        }\
    \ else {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        val isPrime = length2 % length == 0\n     \
    \   if (isPrime) {\n            return \"YES\"\n        } else {\n           \
    \ return \"NO\"\n        }", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   val isPrime = length2 % length == 0\n        if (isPrime) {\n            \"\
    YES\"\n        } else {\n            \"NO\"\n        }", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start < end2 && start2 < end) {\n\
    \            val start3 = start2\n            val end3 = end2\n            val\
    \ start4 = start\n            val end4 = end\n            val start5 = start3\n\
    \            val end5 = end3\n            val start6 = start4\n            val\
    \ end6 = end4\n            val start7 = start5\n            val end7 = end5\n\
    \            val start8 = start6\n            val end8 = end6\n            val\
    \ start9 = start7\n            val end9 = end7\n            val start10 = start8\n\
    \            val end10 = end8\n            val start11 = start9\n            val\
    \ end11 = end9\n            val start12 = start10\n            val end12 = end10\n\
    \            val start13 = start11\n            val end13 = end11\n          \
    \  val start14 = start12\n            val end14 = end12\n            val start15\
    \ = start13\n            val end15 = end13\n            val start16 = start14\n\
    \            val end16 = end14\n            val start17 = start15\n          \
    \  val end17 = end15\n            val start18 = start16\n            val end18\
    \ = end16\n            val start19 = start17\n            val end19 = end17\n\
    \            val start20 = start18\n            val end20 = end18\n          \
    \  val start21 = start19\n            val end21 = end19\n            val start22\
    \ = start20\n            val end22 = end20\n            val start23 = start21\n\
    \            val end23 = end21\n            val start24 = start22\n          \
    \  val end24 = end22\n            val start25 = start23\n            val end25\
    \ = end23\n            val start26 = start24\n            val end26 = end24\n\
    \            val start27 = start25\n            val end27 = end25\n          \
    \  val start28 = start26\n            val end28 = end26\n            val start29\
    \ = start27\n            val end29 = end27\n            val start30 = start28\n\
    \            val end30 = end28\n            val start31 = start29\n          \
    \  val end31 = end29\n            val start32 = start30\n            val end32\
    \ = end30\n            val start33 = start31\n            val end33 = end", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start <\
    \ end2 && start2 < end) {\n            val start3 = start2\n            val end3\
    \ = end2\n            val start4 = start\n            val end4 = end\n       \
    \     if (start3 < end4 && start4 < end3) {\n                val start5 = start3\n\
    \                val end5 = end3\n                val start6 = start4\n      \
    \          val end6 = end4\n                if (start5 < end6 && start6 < end5)\
    \ {\n                    val start7 = start5\n                    val end7 = end5\n\
    \                    val start8 = start6\n                    val end8 = end6\n\
    \                    if (start7 < end8 && start8 < end7) {\n                 \
    \       val start9 = start7\n                        val end9 = end7\n       \
    \                 val start10 = start8\n                        val end10 = end8\n\
    \                        if (start9 < end10 && start10 < end9) {\n           \
    \                 val start11 = start9\n                            val end11\
    \ = end9\n                            val start12 = start10\n                \
    \            val end12 = end10\n                            if (start11 < end12\
    \ && start12 < end11) {\n                                val start13 = start11\n\
    \                                val end13 = end11\n                         \
    \       val start14 = start12\n                                val end14 = end12\n\
    \                                if (start13 < end14 && start14 < end13) {\n \
    \                                   val start15 = start13\n                  \
    \                  val end15 = end13\n                                    val\
    \ start16 = start14\n                                    val end16 = end14\n \
    \                                   if (start15 < end16 && start16 < end15) {\n\
    \                                        val start17 = start15\n             \
    \                           val end17 = end15\n                              \
    \          val start18 = start16\n                                        val\
    \ end18 = end16\n                                        if (start17 < end18 &&\
    \ start18 < end17) {\n                                            return \"YES\"\
    \n                                        } else {\n                         \
    \                   return \"NO\"\n                                        }\n\
    \                                    } else {\n                              \
    \          return \"NO\"\n                                    }\n            \
    \                    } else {\n                                    return \"NO\"\
    \n                                }\n                            } else {\n  \
    \                              return \"NO\"\n                            }\n\
    \                        } else {\n                            return \"NO\"\n\
    \                        }\n                    } else {\n                   \
    \     return \"NO\"\n                    }\n                } else {\n       \
    \             return \"NO\"\n                }\n            } else {\n       \
    \         return \"NO\"\n            }\n        } else {\n            return \"\
    NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         }\n            else {\n                return \"YES\"\n            }\n\
    \        }\n        val isPrime = length2 % length == 0\n        if (isPrime)\
    \ {\n            return \"YES\"\n        }\n        else {\n            return\
    \ \"NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.max(start, start2)\n        val end = math.min(end,\
    \ end2)\n        val length = end - start\n        val isPrime = length == 2 ||\
    \ length == 3 && start % length == 0 && end % length == 0\n        if (isPrime)\
    \ {\n            \"YES\"\n        } else {\n            \"NO\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ \"NO\"\n        else if (length == 1) \"YES\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            val start3 = start2\n        \
    \    val end3 = end2\n            val start4 = start\n            val end4 = end\n\
    \            val start5 = start3\n            val end5 = end3\n            val\
    \ start6 = start4\n            val end6 = end4\n            val start7 = start5\n\
    \            val end7 = end5\n            val start8 = start6\n            val\
    \ end8 = end6\n            val start9 = start7\n            val end9 = end7\n\
    \            val start10 = start8\n            val end10 = end8\n            val\
    \ start11 = start9\n            val end11 = end9\n            val start12 = start10\n\
    \            val end12 = end10\n            val start13 = start11\n          \
    \  val end13 = end11\n            val start14 = start12\n            val end14\
    \ = end12\n            val start15 = start13\n            val end15 = end13\n\
    \            val start16 = start14\n            val end16 = end14\n          \
    \  val start17 = start15\n            val end17 = end15\n            val start18\
    \ = start16\n            val end18 = end16\n            val start19 = start17\n\
    \            val end19 = end17\n            val start20 = start18\n          \
    \  val end20 = end18\n            val start21 = start19\n            val end21\
    \ = end19\n            val start22 = start20\n            val end22 = end20\n\
    \            val start23 = start21\n            val end23 = end21\n          \
    \  val start24 = start22\n            val end24 = end22\n            val start25\
    \ = start23\n            val end25 = end23\n            val start26 = start24\n\
    \            val end26 = end24\n            val start27 = start25\n          \
    \  val end27 = end25\n            val start28 = start26\n            val end28\
    \ = end26\n            val start29 = start27\n            val end29 = end27\n\
    \            val start30 = start28\n            val end30 = end28\n          \
    \  val start31 = start29\n            val end31 = end29\n            val start32\
    \ = start30\n            val end32 = end30\n            val start33 = start31\n\
    \            val end33 = end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start == start2 && end == end2) \"NO\"\n        else if\
    \ (start == start2 && end > end2) \"YES\"\n        else if (start > start2 &&\
    \ end == end2) \"YES\"\n        else if (start > start2 && end > end2) \"NO\"\n\
    \        else intersection(interval1, interval2)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length2 == 1) {\n            if (length\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length2 > 1) {\n   \
    \         val mid = (start + end2) / 2\n            val mid2 = start2 + end2\n\
    \            if (mid == mid2) {\n                return \"YES\"\n            }\
    \ else {\n                return \"NO\"\n            }\n        }", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length == 0 || length2 == 0) {\n      \
    \      \"NO\"\n        } else if (length == length2) {\n            \"YES\"\n\
    \        } else {\n            val start3 = start2 + length\n            val end3\
    \ = end2 + length\n            val start4 = start2 + length2\n            val\
    \ end4 = end2 + length2\n            if (start3 <= start4 && end3 >= end4) {\n\
    \                if (start3 <= end4 && end3 >= start4) {\n                   \
    \ \"YES\"\n                } else {\n                    \"NO\"\n            \
    \    }\n            } else {\n                \"NO\"\n            }\n        }",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        val primes\
    \ = mutable.Set[Long]()\n        val primes2 = mutable.Set[Long]()\n        val\
    \ primes3 = mutable.Set[Long]()\n        val primes4 = mutable.Set[Long]()\n \
    \       val primes5 = mutable.Set[Long]()\n        val primes6 = mutable.Set[Long]()\n\
    \        val primes7 = mutable.Set[Long]()\n        val primes8 = mutable.Set[Long]()\n\
    \        val primes9 = mutable.Set[Long]()\n        val primes10 = mutable.Set[Long]()\n\
    \        val primes11 = mutable.Set[Long]()\n        val primes12 = mutable.Set[Long]()\n\
    \        val primes13 = mutable.Set[Long]()\n        val primes14 = mutable.Set[Long]()\n\
    \        val primes15 = mutable.Set[Long]()\n        val primes16 = mutable.Set[Long]()\n\
    \        val primes17 = mutable.Set[Long]()\n        val primes18 = mutable.Set[Long]()\n\
    \        val primes19 = mutable.Set[Long]()\n        val primes20 = mutable.Set[Long]()\n\
    \        val primes21 = mutable.Set[Long]()\n        val primes22 = mutable.Set[Long]()\n\
    \        val primes23 = mutable.Set[Long]()\n        val primes24 = mutable.Set[Long]()\n\
    \        val primes25 = mutable.Set[Long]()\n        val primes26 = mutable.Set[Long]()\n\
    \        val primes27 = mutable.Set[Long]()\n        val primes28 = mutable.Set[Long]()\n\
    \        val primes29 = mutable.Set[Long]()\n        val primes30 = mutable.Set[Long]()\n\
    \        val primes31 = mutable.Set[Long]()\n        val primes32 = mutable.Set[Long]()\n\
    \        val primes33 = mutable.Set[", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = math.min(start, start2)\n        val end\
    \ = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        val length1 = end - start\n        val length2 =\
    \ end2 - start2\n        if (length1 == 0 || length2 == 0) {\n            return\
    \ \"NO\"\n        }\n        val length = length1 * length2\n        if (length\
    \ == 1) {\n            return \"YES\"\n        }\n        if (length == 2) {\n\
    \            if (start < start2) {\n                return \"YES\"\n         \
    \   }\n            if (end > end2) {\n                return \"YES\"\n       \
    \     }\n        }\n        if (length == 3) {\n            if (start < start2)\
    \ {\n                return \"YES\"\n            }\n            if (end < end2)\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 5) {\n            if (start < start2) {\n                return \"YES\"\n\
    \            }\n            if (end < end2) {\n                return \"YES\"\n\
    \            }\n        }\n        if (length == 7) {\n            if (start <\
    \ start2) {\n                return \"YES\"\n            }\n            if (end\
    \ < end2) {\n                return \"YES\"\n            }\n        }\n      \
    \  if (length == 9) {\n            if (start < start2) {\n                return\
    \ \"YES\"\n            }\n            if (end < end2) {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length == 11) {\n           \
    \ if (start < start2) {\n                return \"YES\"\n            }\n     \
    \       if (end < end2) {\n                return \"YES\"\n            }\n   \
    \     }\n        if (length13 == 13) {\n            if (start < start2) {\n  \
    \              return \"YES\"\n            }\n            if (end < end2) {\n\
    \                return \"YES\"\n            }\n        }\n        if (length17\
    \ == 17) {\n            if (start < start2) {\n                return \"YES\"\n\
    \            }\n            if (end < end2) {\n                return \"YES\"\n\
    \            }\n        }\n        if (length19 == 19) {\n            if (start\
    \ < start2) {\n                return \"YES\"\n            }\n            if (end\
    \ < end2) {\n                return \"YES\"\n            }\n        }\n      \
    \  if (length23 == 23) {\n            if (start < start2) {\n                return\
    \ \"YES\"\n            }\n            if (end < end2) {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length29 == 29) {\n         \
    \   if (start < start2) {\n                return \"YES\"\n            }\n   \
    \         if (end < end2) {\n                return \"YES\"\n            }\n",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\"\n        else if (length2 == 1) \"YES\"\n        else if (length\
    \ == 1) \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else intersection(interval2, interval1)", "     \
    \   val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start == end) {\n            if (start2 == end2) {\n \
    \               return \"YES\"\n            } else {\n                return \"\
    NO\"\n            }\n        }\n        val start3 = start2\n        val end3\
    \ = end2\n        val start4 = start\n        val end4 = end\n        val start5\
    \ = start3\n        val end5 = end3\n        val start6 = start4\n        val\
    \ end6 = end4\n        val start7 = start5\n        val end7 = end5\n        val\
    \ start8 = start6\n        val end8 = end6\n        val start9 = start7\n    \
    \    val end9 = end7\n        val start10 = start8\n        val end10 = end8\n\
    \        val start11 = start9\n        val end11 = end9\n        val start12 =\
    \ start10\n        val end12 = end10\n        val start13 = start11\n        val\
    \ end13 = end11\n        val start14 = start12\n        val end14 = end12\n  \
    \      val start15 = start13\n        val end15 = end13\n        val start16 =\
    \ start14\n        val end16 = end14\n        val start17 = start15\n        val\
    \ end17 = end15\n        val start18 = start16\n        val end18 = end16\n  \
    \      val start19 = start17\n        val end19 = end17\n        val start20 =\
    \ start18\n        val end20 = end18\n        val start21 = start19\n        val\
    \ end21 = end19\n        val start22 = start20\n        val end22 = end20\n  \
    \      val start23 = start21\n        val end23 = end21\n        val start24 =\
    \ start22\n        val end24 = end22\n        val start25 = start23\n        val\
    \ end25 = end23\n        val start26 = start24\n        val end26 = end24\n  \
    \      val start27 = start25\n        val end27 = end25\n        val start28 =\
    \ start26\n        val end28 = end26\n        val start29 = start27\n        val\
    \ end29 = end", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length2 == 1 && length == 1) \"\
    YES\"\n        else if (length2 == 1 && length != 1) \"NO\"\n        else if (length\
    \ != 1 && length2 == 1) \"NO\"\n        else if (length != 1 && length2 != 1)\
    \ \"NO\"\n        else if (length != 1 && length2 == 1 && length != 1) \"NO\"\n\
    \        else if (length != 1 && length2 != 1 && length == 1) \"NO\"\n       \
    \ else if (length != 1 && length2 != 1 && length != 1) \"NO\"\n        else if\
    \ (length != 1 && length2 != 1 && length == 1 && length != 1) \"NO\"\n       \
    \ else if (length != 1 && length2 != 1 && length != 1 && length == 1) \"NO\"\n\
    \        else if (length != 1 && length2 != 1 && length != 1 && length != 1) \"\
    NO\"\n        else if (length != 1 && length2 != 1 && length != 1 && length ==\
    \ 1 && length != 1) \"NO\"\n        else if (length != 1 && length2 != 1 && length\
    \ != 1 && length != 1 && length == 1) \"NO\"\n        else if (length != 1 &&\
    \ length2 != 1 && length != 1 && length != 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length2 != 1 && length != 1 && length != 1 && length == 1\
    \ && length != 1) \"NO\"\n        else if (length != 1 && length2 != 1 && length\
    \ != 1 && length != 1 && length != 1 && length == 1) \"NO\"\n        else if (length\
    \ != 1 && length2 != 1 && length != 1 && length != 1 && length != 1 && length\
    \ != 1) \"NO\"\n        else if (length != 1 && length2 != 1 && length != 1 &&\
    \ length != 1 && length != 1 && length == 1 && length != 1) \"NO\"\n        else\
    \ if (length != 1 && length2 != 1 && length != 1 && length != 1 && length != 1\
    \ && length != 1 && length == 1) \"NO\"\n        else if (length != 1 && length2\
    \ != 1 && length != 1 && length != 1 && length != 1 && length != 1 && length !=\
    \ 1) \"NO\"\n        else if (length != 1 && length2 != 1 && length != 1 && length\
    \ != 1 && length != 1 && length != 1 && length == 1 && length != 1) \"NO\"\n \
    \       else if (length != 1 && length2 != 1 && length != 1 && length != 1 &&\
    \ length != 1 && length != 1 && length != 1 && length == 1) \"NO\"\n        else\
    \ if (length != 1 && length2 != 1 && length != 1 && length != 1 && length != 1\
    \ && length != 1 && length != 1 && length != 1) \"NO\"\n        else if (length\
    \ != 1 && length2 != ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            \"NO\"\n        } else if (length2 == 1)\
    \ {\n            if (length == 1) {\n                \"YES\"\n            } else\
    \ {\n                \"NO\"\n            }\n        } else {\n            if (length\
    \ == 1) {\n                \"NO\"\n            } else {\n                val mid\
    \ = (start + end) / 2\n                val mid2 = start2 + end2\n            \
    \    if (mid == mid2) {\n                    \"YES\"\n                } else {\n\
    \                    \"NO\"\n                }\n            }\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length == 0 ||\
    \ length2 == 0) \"NO\"\n        else if (length == 1) \"YES\"\n        else if\
    \ (length2 == 1) \"YES\"\n        else if (length == length2) \"YES\"\n      \
    \  else if (length < length2) \"NO\"\n        else if (length2 < length) \"NO\"\
    \n        else intersection(interval1, interval2)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        val isPrime = length2 %\
    \ length == 0\n        if (isPrime) {\n            return \"YES\"\n        } else\
    \ {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length2 > length) {\n           \
    \ return \"NO\"\n        }\n        if (length2 < length) {\n            return\
    \ \"YES\"\n        }\n        if (length == 1) {\n            if (length2 == 1)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 1) {\n            return\
    \ \"NO\"\n        }\n        if (length == 2) {\n            if (length2 == 2)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 2) {\n            return\
    \ \"NO\"\n        }\n        if (length == 3) {\n            if (length2 == 3)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 3) {\n            return\
    \ \"NO\"\n        }\n        if (length == 4) {\n            if (length2 == 4)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 4) {\n            return\
    \ \"NO\"\n        }\n        if (length == 5) {\n            if (length2 == 5)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 5) {\n            return\
    \ \"NO\"\n        }\n        if (length == 6) {\n            if (length2 == 6)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 6) {\n            return\
    \ \"NO\"\n        }\n        if (length == 7) {\n            if (length2 == 7)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 7) {\n            return\
    \ \"NO\"\n        }\n        if (length == 8) {\n            if (length2 == 8)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 8) {\n            return\
    \ \"NO\"\n        }\n        if (length == 9) {\n            if (length2 == 9)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 9) {\n            return\
    \ \"NO\"\n        }\n        if (length == 10) {\n            if (length2 == 10)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 10) {\n           \
    \ return \"NO\"\n        }\n        if (length == 11) {\n            if (length2\
    \ == 11) {\n                return \"YES\"\n            } else {\n           \
    \     return \"NO\"\n            }\n        }\n        if (length2 == 11) {\n\
    \            return \"NO", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\"\n        else if (length == 1) \"YES\"\n        else\
    \ intersection(interval1, interval2)", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0) \"NO\" else (length == length2 ? \"YES\"\
    \ : \"NO\")", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMinusEnd = end - start\n        val start2MinusEnd2 = end2 - start2\n \
    \       val startMinusEnd2 = start2 - start\n        val startMinusEnd2MinusEnd\
    \ = start2MinusEnd2 - startMinusEnd\n        val startMinusEnd2MinusEnd2 = startMinusEnd2\
    \ - start2MinusEnd\n        val startMinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd\
    \ - startMinusEnd2MinusEnd\n        val startMinusEnd2MinusEnd2MinusEnd2 = startMinusEnd2MinusEnd2\
    \ - startMinusEnd2MinusEnd2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd - startMinusEnd2MinusEnd2MinusEnd2\n     \
    \   val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2 = startMinusEnd2MinusEnd2MinusEnd2\
    \ - startMinusEnd2MinusEnd2MinusEnd2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2Min", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        val isPrime = length == length2\n        if\
    \ (isPrime) {\n            return \"YES\"\n        } else {\n            return\
    \ \"NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        val isPrime\
    \ = length == 2 || length2 == 2\n        if(isPrime) {\n            return \"\
    YES\"\n        }\n        else {\n            return \"NO\"\n        }", "   \
    \     val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMinusEnd = start - end\n        val start2MinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else if (length\
    \ == 1) \"YES\"\n        else if (length2 == 1) \"YES\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ intersection(interval1, interval2)", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else if (length2\
    \ == 1) \"YES\"\n        else if (length == 1) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ intersection(interval1, interval2)", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        val isPrime = length == 2 || length2 == 2\n        if (isPrime)\
    \ {\n            \"YES\"\n        } else {\n            \"NO\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length == 0 ||\
    \ length2 == 0) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else intersection(interval2, interval1)",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 1) {\n            if (length2 == 1) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length == 2) {\n            if (length2 == 2) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length == -1) {\n            if (length2 == -1)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == -2) {\n            if\
    \ (length2 == -2) {\n                return \"YES\"\n            } else {\n  \
    \              return \"NO\"\n            }\n        }\n        if (length ==\
    \ -3) {\n            if (length2 == -3) {\n                return \"YES\"\n  \
    \          } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length == -4) {\n            if (length2 == -4) {\n             \
    \   return \"YES\"\n            } else {\n                return \"NO\"\n    \
    \        }\n        }\n        if (length == -5) {\n            if (length2 ==\
    \ -5) {\n                return \"YES\"\n            } else {\n              \
    \  return \"NO\"\n            }\n        }\n        if (length == -6) {\n    \
    \        if (length2 == -6) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length\
    \ == -7) {\n            if (length2 == -7) {\n                return \"YES\"\n\
    \            } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length == -8) {\n            if (length2 == -8) {\n             \
    \   return \"YES\"\n            } else {\n                return \"NO\"\n    \
    \        }\n        }\n        if (length == 9) {\n            if (length2 ==\
    \ 9) {\n                return \"YES\"\n            } else {\n               \
    \ return \"NO\"\n            }\n        }\n        if (length == -10) {\n    \
    \        if (length2 == -10) {\n                return \"YES\"\n            }\
    \ else {\n                return \"NO\"\n            }\n        }\n        if\
    \ (length == -11) {\n            if (length2 == -11) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (length == -12) {\n            if (length2 == -12) {\n\
    \                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length == -13) {\n           \
    \ if (length2 == -13) {\n                return \"YES\"\n            } else {\n\
    \                return \"NO\"\n            }\n        }\n        if (length ==\
    \ -14) {\n            if (length2 == -14) {\n                return \"YES\"\n\
    \            } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length == 1) \"YES\"\n       \
    \ else if (length2 == 1) \"YES\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"", "        val start = interval1._1\n       \
    \ val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length == 0 || length2 == 0) {\n            \"NO\"\n \
    \       } else if (length == length2) {\n            \"YES\"\n        } else {\n\
    \            val start3 = math.max(start, start2)\n            val end3 = math.min(end,\
    \ end2)\n            val start4 = math.max(start, start3)\n            val end4\
    \ = math.min(end, end3)\n            val length3 = end4 - start4\n           \
    \ if (length3 == 1) {\n                \"YES\"\n            } else if (length3\
    \ == 2) {\n                if (length % 2 == 0) {\n                    \"YES\"\
    \n                } else {\n                    \"NO\"\n                }\n  \
    \          } else {\n                if (length3 == 3) {\n                   \
    \ if (length % 2 == 0) {\n                        \"YES\"\n                  \
    \  } else {\n                        \"NO\"\n                    }\n         \
    \       } else {\n                    if (length3 == 5) {\n                  \
    \      if (length % 2 == 0) {\n                            \"YES\"\n         \
    \               } else {\n                            \"NO\"\n               \
    \         }\n                    } else {\n                        if (length3\
    \ == 7) {\n                            if (length % 2 == 0) {\n              \
    \                  \"YES\"\n                            } else {\n           \
    \                     \"NO\"\n                            }\n                \
    \        } else {\n                            if (length3 == 11) {\n        \
    \                        if (length % 2 == 0) {\n                            \
    \        \"YES\"\n                                } else {\n                 \
    \                   \"NO\"\n                                }\n              \
    \              } else {\n                                if (length3 == 13) {\n\
    \                                    if (length % 2 == 0) {\n                \
    \                        \"YES\"\n                                    } else {\n\
    \                                        \"NO\"\n                            \
    \        }\n                                } else {\n                       \
    \             if (length3 == 17) {\n                                        if\
    \ (length % 2 == 0) {\n                                            \"YES\"\n \
    \                                       } else {\n                           \
    \                 \"NO\"\n                                        }\n        \
    \                            } else {\n                                      \
    \  if (length3 == 19) {\n                                            if (length\
    \ % 2 == 0) {\n                                                \"YES\"\n     \
    \                                       } else {\n                           \
    \                     \"NO\"\n                                            }\n\
    \                                        } else {\n                          \
    \                  if (length3 == 23) {\n                                    \
    \            if (length % 2 == 0) {\n                                        \
    \            \"YES\"\n                                                } else {\n\
    \                                                    \"NO\"\n                \
    \                                }\n                                         \
    \   } else {\n                                                if (length3 == 29)\
    \ {\n                                                    if (length % 2 == 0)\
    \ {\n                                                        \"YES\"\n       \
    \                                             } else {\n                     \
    \                                   \"NO\"\n                                 \
    \                   }\n                                                } else\
    \ {\n                                                    if (length3 == 31) {\n\
    \                                                        if (length % 2 == 0)\
    \ {\n                                                            \"YES\"\n   \
    \                                                     } else {\n             \
    \                                               \"NO\"\n                     \
    \                                   }\n                                      \
    \              } else {\n                                                    \
    \    if (length3 == 37) {\n                                                  \
    \          if (length % 2 == 0) {\n                                          \
    \                      \"YES\"\n                                             \
    \               } else {\n                                                   \
    \             \"NO\"\n                                                       \
    \     }\n                                                        } else {\n  \
    \                                                          if (length3 == 43)\
    \ {\n                                                                if (length\
    \ % 2 == 0) {\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start < end2 && start2 < end) {\n            val start3 = start2\n        \
    \    val end3 = end2\n            val start4 = start\n            val end4 = end\n\
    \            val start5 = start3\n            val end5 = end3\n            val\
    \ start6 = start4\n            val end6 = end4\n            val start7 = start5\n\
    \            val end7 = end5\n            val start8 = start6\n            val\
    \ end8 = end6\n            val start9 = start7\n            val end9 = end7\n\
    \            val start10 = start8\n            val end10 = end8\n            val\
    \ start11 = start9\n            val end11 = end9\n            val start12 = start10\n\
    \            val end12 = end10\n            val start13 = start11\n          \
    \  val end13 = end11\n            val start14 = start12\n            val end14\
    \ = end12\n            val start15 = start13\n            val end15 = end13\n\
    \            val start16 = start14\n            val end16 = end14\n          \
    \  val start17 = start15\n            val end17 = end15\n            val start18\
    \ = start16\n            val end18 = end16\n            val start19 = start17\n\
    \            val end19 = end17\n            val start20 = start18\n          \
    \  val end20 = end18\n            val start21 = start19\n            val end21\
    \ = end19\n            val start22 = start20\n            val end22 = end20\n\
    \            val start23 = start21\n            val end23 = end21\n          \
    \  val start24 = start22\n            val end24 = end22\n            val start25\
    \ = start23\n            val end25 = end23\n            val start26 = start24\n\
    \            val end26 = end24\n            val start27 = start25\n          \
    \  val end27 = end25\n            val start28 = start26\n            val end28\
    \ = end26\n            val start29 = start27\n            val end29 = end27\n\
    \            val start30 = start28\n            val end30 = end28\n          \
    \  val start31 = start29\n            val end31 = end29\n            val start32\
    \ = start30\n            val end32 = end30\n            val start33 = start31\n\
    \            val end33 = end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end < end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start2 && end > end2) {\n    \
    \        return \"NO\"\n        }\n        if (start < start2 && end < end2) {\n\
    \            return \"YES\"\n        }\n        if (start > start2 && end > end2)\
    \ {\n            return \"YES\"\n        }\n        if (start > start2 && end\
    \ > end2) {\n            return \"YES\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        val isPrime = length == length2\n        if (isPrime)\
    \ {\n            \"YES\"\n        } else {\n            \"NO\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0 ||\
    \ length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length == 0 ||\
    \ length2 == 0) {\n            \"NO\"\n        } else if (length2 == 1) {\n  \
    \          if (length == 0) {\n                \"NO\"\n            } else if (start\
    \ < end2) {\n                \"NO\"\n            } else {\n                \"\
    YES\"\n            }\n        } else {\n            if (length == 0) {\n     \
    \           \"NO\"\n            } else if (length2 == 1) {\n                if\
    \ (start < end2) {\n                    \"NO\"\n                } else {\n   \
    \                 \"YES\"\n                }\n            } else {\n         \
    \       if (length == 1) {\n                    if (start < end2) {\n        \
    \                \"NO\"\n                    } else {\n                      \
    \  \"YES\"\n                    }\n                } else {\n                \
    \    if (start < end2) {\n                        \"NO\"\n                   \
    \ } else if (length == 2) {\n                        if (start == end2) {\n  \
    \                          \"YES\"\n                        } else {\n       \
    \                     \"NO\"\n                        }\n                    }\
    \ else if (length == 2) {\n                        if (start == end2) {\n    \
    \                        \"NO\"\n                        } else {\n          \
    \                  \"YES\"\n                        }\n                    } else\
    \ if (length == 2) {\n                        if (start == end2) {\n         \
    \                   \"YES\"\n                        } else {\n              \
    \              \"NO\"\n                        }\n                    } else if\
    \ (length == 2) {\n                        if (start == end2) {\n            \
    \                \"NO\"\n                        } else {\n                  \
    \          \"YES\"\n                        }\n                    } else if (length\
    \ == 2) {\n                        if (start == end2) {\n                    \
    \        \"YES\"\n                        } else {\n                         \
    \   \"NO\"\n                        }\n                    } else if (length ==\
    \ 2) {\n                        if (start == end2) {\n                       \
    \     \"NO\"\n                        } else {\n                            \"\
    YES\"\n                        }\n                    } else if (length == 2)\
    \ {\n                        if (start == end2) {\n                          \
    \  \"YES\"\n                        } else {\n                            \"NO\"\
    \n                        }\n                    } else if (length == 2) {\n \
    \                       if (start == end2) {\n                            \"NO\"\
    \n                        } else {\n                            \"YES\"\n    \
    \                    }\n                    } else if (length == 2) {\n      \
    \                  if (start == end2) {\n                            \"YES\"\n\
    \                        } else {\n                            \"NO\"\n      \
    \                  }\n                    } else if (length == 2) {\n        \
    \                if (start == end2) {\n                            \"NO\"\n  \
    \                      } else {\n                            \"YES\"\n       \
    \                 }\n                    } else if (length == 2) {\n         \
    \               if (start == end2) {\n                            \"YES\"\n  \
    \                      } else {\n                            \"NO\"\n        \
    \                }\n                    } else if (length == 2) {\n          \
    \              if (start == end2) {\n                            \"NO\"\n    \
    \                    } else {\n                            \"YES\"\n         \
    \               }\n                    } else if (length == 2) {\n           \
    \             if (start == end2) {\n                            \"YES\"\n    \
    \                    } else {\n                            \"NO\"\n          \
    \              }\n                    } else if (length == 2) {\n            \
    \            if (start == end2) {\n                            \"NO\"\n      \
    \                  } else {\n                            \"YES\"\n           \
    \             }\n                    } else if (length", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start <\
    \ end2 && start2 < end) {\n            val start3 = start2\n            val end3\
    \ = end2\n            val start4 = start\n            val end4 = end\n       \
    \     val start5 = start3\n            val end5 = end3\n            val start6\
    \ = start4\n            val end6 = end4\n            val start7 = start5\n   \
    \         val end7 = end5\n            val start8 = start6\n            val end8\
    \ = end6\n            val start9 = start7\n            val end9 = end7\n     \
    \       val start10 = start8\n            val end10 = end8\n            val start11\
    \ = start9\n            val end11 = end9\n            val start12 = start10\n\
    \            val end12 = end10\n            val start13 = start11\n          \
    \  val end13 = end11\n            val start14 = start12\n            val end14\
    \ = end12\n            val start15 = start13\n            val end15 = end13\n\
    \            val start16 = start14\n            val end16 = end14\n          \
    \  val start17 = start15\n            val end17 = end15\n            val start18\
    \ = start16\n            val end18 = end16\n            val start19 = start17\n\
    \            val end19 = end17\n            val start20 = start18\n          \
    \  val end20 = end18\n            val start21 = start19\n            val end21\
    \ = end19\n            val start22 = start20\n            val end22 = end20\n\
    \            val start23 = start21\n            val end23 = end21\n          \
    \  val start24 = start22\n            val end24 = end22\n            val start25\
    \ = start23\n            val end25 = end23\n            val start26 = start24\n\
    \            val end26 = end24\n            val start27 = start25\n          \
    \  val end27 = end25\n            val start28 = start26\n            val end28\
    \ = end26\n            val start29 = start27\n            val end29 = end27\n\
    \            val start30 = start28\n            val end30 = end28\n          \
    \  val start31 = start29\n            val end31 = end29\n            val start32\
    \ = start30\n            val end32 = end30\n            val start33 = start31\n\
    \            val end33 = end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else intersection(interval2,\
    \ interval1)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length == 0 || length2\
    \ == 0) \"NO\"\n        else if (length == length2) \"YES\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        if (start == start2 && end == end2) {\n            return \"NO\"\n  \
    \      }\n        if (start > start2 && end < end2) {\n            return \"NO\"\
    \n        }\n        if (start < start2 && end > end2) {\n            return \"\
    NO\"\n        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end < end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start2 && end > end2) {\n    \
    \        return \"NO\"\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start < start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start == start2\
    \ && end == end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end < end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start == start2 && end == end2) {\n            return \"NO\"\n        }\n \
    \       if (start > start2 && end < end2) {\n            return \"NO\"\n     \
    \   }\n        if (start < start2 && end > end2) {\n            return \"NO\"\n\
    \        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end < end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start2 && end > end2) {\n    \
    \        return \"NO\"\n        }\n        if (start == start2 && end == end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start < start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start == start2\
    \ && end == end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end < end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start == start2 && end == end2) {\n            return \"NO\"\n        }\n \
    \       if (start > start2 && end < end2) {\n            return \"NO\"\n     \
    \   }\n        if (start < start2 && end > end2) {\n            return \"NO\"\n\
    \        }\n        if (start == start", "        val start = interval1._1\n \
    \       val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) {\n            return\
    \ \"NO\"\n        }\n        val prime = length / length2\n        if (prime ==\
    \ 1) {\n            return \"YES\"\n        }\n        val prime2 = length2 /\
    \ length\n        if (prime2 == 1) {\n            return \"YES\"\n        }\n\
    \        if (prime == prime2) {\n            return \"YES\"\n        }\n     \
    \   return \"NO\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            \"NO\"\n        } else if (length == length2)\
    \ {\n            \"YES\"\n        } else {\n            val m = length / length2\n\
    \            val n = length % length2\n            val start = start + m * n\n\
    \            val end = end + m * n\n            val start2 = start2 + m * n\n\
    \            val end2 = end2 + m * n\n            val length = end - start\n \
    \           val length2 = end2 - start2\n            if (length == 0 || length2\
    \ == 0) {\n                \"NO\"\n            } else if (length == length2) {\n\
    \                \"YES\"\n            } else {\n                val m = length\
    \ / length2\n                val n = length % length2\n                val start\
    \ = start + m * n\n                val end = end + m * n\n                val\
    \ start2 = start2 + m * n\n                val end2 = end2 + m * n\n         \
    \       val length = end - start\n                val length2 = end2 - start2\n\
    \                if (length == 0 || length2 == 0) {\n                    \"NO\"\
    \n                } else if (length == length2) {\n                    \"YES\"\
    \n                } else {\n                    val m = length / length2\n   \
    \                 val n = length % length2\n                    val start = start\
    \ + m * n\n                    val end = end + m * n\n                    val\
    \ start2 = start2 + m * n\n                    val end2 = end2 + m * n\n     \
    \               val length = end - start\n                    val length2 = end2\
    \ - start2\n                    if (length == 0 || length2 == 0) {\n         \
    \               \"NO\"\n                    } else if (length == length2) {\n\
    \                        \"YES\"\n                    } else {\n             \
    \           val m = length / length2\n                        val n = length %\
    \ length2\n                        val start = start + m * n\n               \
    \         val end = end + m * n\n                        val start2 = start2 +\
    \ m * n\n                        val end2 = end2 + m * n\n                   \
    \     val length = end - start\n                        val length2 = end2 - start2\n\
    \                        if (length == 0 || length2 == 0) {\n                \
    \            \"NO\"\n                        } else if (length == length2) {\n\
    \                            \"YES\"\n                        } else {\n     \
    \                       val m = length / length2\n                           \
    \ val n = length % length2\n                            val start = start + m\
    \ * n\n                            val end = end + m * n\n                   \
    \         val start2 = start2 + m * n\n                            val end2 =\
    \ end2 + m * n\n                            val length = end - start\n       \
    \                     val length2 = end2 - start2\n                          \
    \  if (length", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) \"NO\"\n        else if (length == 1) \"YES\"\n      \
    \  else if (length2 == 1) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else length2.isPrime", "        val start = interval1._1\n    \
    \    val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val startMinusEnd = start - end\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else if (length2\
    \ > length) \"YES\"\n        else if (length2 < length) \"NO\"\n        else if\
    \ (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n   \
    \     else intersection(interval1, interval2)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length == 1) {\n            if (length2\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        val prime = length / length2\n\
    \        if (prime == 1) {\n            return \"NO\"\n        }\n        if (prime\
    \ == 0) {\n            return \"YES\"\n        }\n        if (prime == -1) {\n\
    \            return \"NO\"\n        }\n        if (prime == -2) {\n          \
    \  return \"YES\"\n        }\n        if (prime == -3) {\n            return \"\
    NO\"\n        }\n        if (prime == -4) {\n            return \"YES\"\n    \
    \    }\n        if (prime == -5) {\n            return \"NO\"\n        }\n   \
    \     if (prime == -6) {\n            return \"YES\"\n        }\n        if (prime\
    \ == -7) {\n            return \"NO\"\n        }\n        if (prime == -8) {\n\
    \            return \"YES\"\n        }\n        if (prime == -9) {\n         \
    \   return \"NO\"\n        }\n        if (prime == -10) {\n            return\
    \ \"YES\"\n        }\n        if (prime == -11) {\n            return \"NO\"\n\
    \        }\n        if (prime == -12) {\n            return \"YES\"\n        }\n\
    \        if (prime == -13) {\n            return \"NO\"\n        }\n        if\
    \ (prime == -14) {\n            return \"YES\"\n        }\n        if (prime ==\
    \ -15) {\n            return \"NO\"\n        }\n        if (prime == -16) {\n\
    \            return \"YES\"\n        }\n        if (prime == -17) {\n        \
    \    return \"NO\"\n        }\n        if (prime == -18) {\n            return\
    \ \"YES\"\n        }\n        if (prime == -19) {\n            return \"NO\"\n\
    \        }\n        if (prime == -20) {\n            return \"YES\"\n        }\n\
    \        if (prime == -21) {\n            return \"NO\"\n        }\n        if\
    \ (prime == -22) {\n            return \"YES\"\n        }\n        if (prime ==\
    \ -23) {\n            return \"NO\"\n        }\n        if (prime == -24) {\n\
    \            return \"YES\"\n        }\n        if (prime == -25) {\n        \
    \    return \"NO\"\n        }\n        if (prime == -26) {\n            return\
    \ \"YES\"\n        }\n        if (prime == -27) {\n            return \"NO\"\n\
    \        }\n        if (prime == -28) {\n            return \"YES\"\n        }\n\
    \        if (prime == -29) {\n            return \"NO\"\n        }\n        if\
    \ (prime == -30) {\n            return \"YES\"\n        }\n        if (prime ==\
    \ -31) {\n            return \"NO\"\n        }\n        if (prime == -32", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0 ||\
    \ length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0) {\n            if (length == 0) {\n    \
    \            return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        val primes = mutable.Set[Long]()\n       \
    \ val primes2 = mutable.Set[Long]()\n        val primes3 = mutable.Set[Long]()\n\
    \        val primes4 = mutable.Set[Long]()\n        val primes5 = mutable.Set[Long]()\n\
    \        val primes6 = mutable.Set[Long]()\n        val primes7 = mutable.Set[Long]()\n\
    \        val primes8 = mutable.Set[Long]()\n        val primes9 = mutable.Set[Long]()\n\
    \        val primes10 = mutable.Set[Long]()\n        val primes11 = mutable.Set[Long]()\n\
    \        val primes12 = mutable.Set[Long]()\n        val primes13 = mutable.Set[Long]()\n\
    \        val primes14 = mutable.Set[Long]()\n        val primes15 = mutable.Set[Long]()\n\
    \        val primes16 = mutable.Set[Long]()\n        val primes17 = mutable.Set[Long]()\n\
    \        val primes18 = mutable.Set[Long]()\n        val primes19 = mutable.Set[Long]()\n\
    \        val primes20 = mutable.Set[Long]()\n        val primes21 = mutable.Set[Long]()\n\
    \        val primes22 = mutable.Set[Long]()\n        val primes23 = mutable.Set[Long]()\n\
    \        val primes24 = mutable.Set[Long]()\n        val primes25 = mutable.Set[Long]()\n\
    \        val primes26 = mutable.Set[Long]()\n        val primes27 = mutable.Set[Long]()\n\
    \        val primes28 = mutable.Set[Long]()\n        val primes29 = mutable.Set[Long]()\n\
    \        val primes30 = mutable.Set[Long]()\n        val primes31 = mutable.Set[Long]()\n\
    \        val primes32 = mutable.Set[Long]()\n        val primes33 = mutable.Set[",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start < end2 &&\
    \ start2 < end) {\n            if (start < start2) {\n                val temp\
    \ = start\n                start = start2\n                start2 = temp\n   \
    \         }\n            if (end < end2) {\n                val temp = end\n \
    \               end = end2\n                end2 = temp\n            }\n     \
    \       if (start < end2 && end < start2) {\n                val temp = start\n\
    \                start = end2\n                end2 = temp\n            }\n  \
    \          if (start < start2 && end < end2) {\n                val temp = end\n\
    \                end = start2\n                start2 = temp\n            }\n\
    \            if (start < start2 && start2 < end2) {\n                val temp\
    \ = start\n                start = end2\n                end2 = temp\n       \
    \     }\n            if (end < end2 && end < start2) {\n                val temp\
    \ = end\n                end = start2\n                start2 = temp\n       \
    \     }\n            if (start < end2 && start2 < end2) {\n                val\
    \ temp = start\n                start = end2\n                end2 = temp\n  \
    \          }\n            if (start < start2 && end < end2) {\n              \
    \  val temp = end\n                end = start2\n                start2 = temp\n\
    \            }\n            if (end < end2 && end < start2) {\n              \
    \  val temp = end\n                end = start2\n                start2 = temp\n\
    \            }\n            if (start < end2 && start2 < end2) {\n           \
    \     val temp = start\n                start = end2\n                end2 = temp\n\
    \            }\n            if (start < start2 && end < end2) {\n            \
    \    val temp = end\n                end = start2\n                start2 = temp\n\
    \            }\n            if (end < end2 && end < start2) {\n              \
    \  val temp = end\n                end = start2\n                start2 = temp\n\
    \            }\n            if (start < end2 && start2 < end2) {\n           \
    \     val temp = start\n                start = end2\n                end2 = temp\n\
    \            }\n            if (start < start2 && end < end2) {\n            \
    \    val temp = end\n                end = start2\n                start2 = temp\n\
    \            }\n            if (end < end2 && end < start2) {\n              \
    \  val temp = end\n                end = start2\n                start2 = temp\n\
    \            }\n            if (start < end2 && start2 < end2) {\n           \
    \     val temp = start\n                start = end2\n                end2 = temp\n\
    \            }\n            if (start < start2 && end < end2) {\n            \
    \    val temp = end\n                end = start2\n                start2 = temp\n\
    \            }\n            if (end < end2 && end < start2) {\n              \
    \  val temp = end\n                end = start2\n                ", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else (length == length2\
    \ ? \"YES\" : \"NO\")", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\"\n        else if (length == 1) \"YES\"\n       \
    \ else if (length2 == 1) \"YES\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\"\n        else if (length ==\
    \ 1) \"YES\"\n        else if (length == 2) \"YES\"\n        else if (length ==\
    \ 3) \"YES\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else intersection(interval1, interval2)", "     \
    \   val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\"\n        else if (length2 % length == 0) \"YES\"\n        else\
    \ intersection(interval1, interval2)", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length == 0 || length2 == 0) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length / 2) \"YES\"\n        else if (length == length / 2) \"\
    YES\"\n        else if (length < length / 2) \"NO\"\n        else intersection(interval1,\
    \ interval2)", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else intersection(interval1, interval2)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMin = math.min(start, start2)\n      \
    \  val startMax = math.max(start, start2)\n        val endMin = math.min(end,\
    \ end2)\n        val endMax = math.max(end, end2)\n        val startIntersection\
    \ = math.max(startMin, endMin)\n        val endIntersection = math.min(endMax,\
    \ startMax)\n        val length = endIntersection - startIntersection\n      \
    \  if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length == 1) {\n            if (length2\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length2 == 1) {\n  \
    \          return \"NO\"\n        }\n        val m = length / length2\n      \
    \  val n = length / length\n        val k = length2 / length\n        val l1 =\
    \ (m - 1) * k\n        val l2 = n * k\n        val l3 = m * k\n        val l4\
    \ = n * m\n        val l5 = m * n\n        val l6 = m * m\n        val l7 = n\
    \ * n\n        val l8 = m * n\n        val l9 = m * m\n        val l10 = m * n\n\
    \        val l11 = m * m\n        val l12 = m * n\n        val l13 = m * m\n \
    \       val l14 = m * n\n        val l15 = m * m\n        val l16 = m * n\n  \
    \      val l17 = m * m\n        val l18 = m * n\n        val l19 = m * m\n   \
    \     val l20 = m * n\n        val l21 = m * m\n        val l22 = m * n\n    \
    \    val l23 = m * m\n        val l24 = m * n\n        val l25 = m * m\n     \
    \   val l26 = m * n\n        val l27 = m * m\n        val l28 = m * n\n      \
    \  val l29 = m * m\n        val l30 = m * n\n        val l31 = m * m\n       \
    \ val l32 = m * n\n        val l33 = m * m\n        val l34 = m * n\n        val\
    \ l35 = m * m\n        val l36 = m * n\n        val l37 = m * m\n        val l38\
    \ = m * n\n        val l39 = m * m\n        val l40 = m * n\n        val l41 =\
    \ m * m\n        val l42 = m * n\n        val l43 = m * m\n        val l44 = m\
    \ * n\n        val l45 = m * m\n        val l46 = m * n\n        val l47 = m *\
    \ m\n        val l", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        if (start == end) {\n            if (start2 == end2) {\n            \
    \    return \"YES\"\n            } else {\n                return \"NO\"\n   \
    \         }\n        }\n        val startPrime = start % 2 == 0\n        val endPrime\
    \ = end % 2 == 0\n        val start2Prime = start2 % 2 == 0\n        val end2Prime\
    \ = end2 % 2 == 0\n        if (startPrime && endPrime) {\n            if (start2Prime\
    \ && end2Prime) {\n                if (start == start2) {\n                  \
    \  if (end == end2) {\n                        return \"YES\"\n              \
    \      } else {\n                        return \"NO\"\n                    }\n\
    \                } else {\n                    if (end == end2) {\n          \
    \              return \"NO\"\n                    } else {\n                 \
    \       return \"YES\"\n                    }\n                }\n           \
    \ } else {\n                if (end == end2) {\n                    return \"\
    YES\"\n                } else {\n                    return \"NO\"\n         \
    \       }\n            }\n        } else if (startPrime && !endPrime) {\n    \
    \        if (start2Prime && end2Prime) {\n                if (start == start2)\
    \ {\n                    if (end == end2) {\n                        return \"\
    YES\"\n                    } else {\n                        return \"NO\"\n \
    \                   }\n                } else {\n                    if (end ==\
    \ end2) {\n                        return \"NO\"\n                    } else {\n\
    \                        return \"YES\"\n                    }\n             \
    \   }\n            } else {\n                if (end == end2) {\n            \
    \        return \"YES\"\n                } else {\n                    return\
    \ \"NO\"\n                }\n            }\n        } else if (!startPrime &&\
    \ endPrime) {\n            if (start2Prime && end2Prime) {\n                if\
    \ (start == start2) {\n                    if (end == end2) {\n              \
    \          return \"YES\"\n                    } else {\n                    \
    \    return \"NO\"\n                    }\n                } else {\n        \
    \            if (end == end2) {\n                        return \"NO\"\n     \
    \               } else {\n                        return \"YES\"\n           \
    \         }\n                }\n            } else {\n                if (end\
    \ == end2) {\n                    return \"YES\"\n                } else {\n \
    \                   return \"NO\"\n                }\n            }\n        }\
    \ else {\n            if (start2Prime && end2Prime) {\n                if (start\
    \ == start2) {\n                    if (end == end2) {\n                     \
    \   return \"YES\"\n                    } else {\n                        return\
    \ \"NO\"\n                    }\n                } else {\n                  \
    \  if (end == end2) {\n                        return \"NO\"\n               \
    \     } else {\n                        return \"YES\"\n                    }\n\
    \                }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMin = math.min(start, start2)\n        val startMax = math.max(start, start2)\n\
    \        val endMin = math.min(end, end2)\n        val endMax = math.max(end,\
    \ end2)\n        val startMin2 = math.min(start2, end2)\n        val startMax2\
    \ = math.max(start2, end2)\n        val endMin2 = math.min(end2, start2)\n   \
    \     val endMax2 = math.max(end2, start2)\n        val startMin3 = math.min(start2,\
    \ end2)\n        val startMax3 = math.max(start2, end2)\n        val endMin3 =\
    \ math.min(end2, start2)\n        val endMax3 = math.max(end2, start2)\n     \
    \   val startMin4 = math.min(start2, end2)\n        val startMax4 = math.max(start2,\
    \ end2)\n        val endMin4 = math.min(end2, start2)\n        val endMax4 = math.max(end2,\
    \ start2)\n        val startMin5 = math.min(start2, end2)\n        val startMax5\
    \ = math.max(start2, end2)\n        val endMin5 = math.min(end2, start2)\n   \
    \     val endMax5 = math.max(end2, start2)\n        val startMin6 = math.min(start2,\
    \ end2)\n        val startMax6 = math.max(start2, end2)\n        val endMin6 =\
    \ math.min(end2, start2)\n        val endMax6 = math.max(end2, start2)\n     \
    \   val startMin7 = math.min(start2, end2)\n        val startMax7 = math.max(start2,\
    \ end2)\n        val endMin7 = math.min(end2, start2)\n        val endMax7 = math.max(end2,\
    \ start2)\n        val startMin8 = math.min(start2, end2)\n        val startMax8\
    \ = math.max(start2, end2)\n        val endMin8 = math.min(end2, start2)\n   \
    \     val endMax8 = math.max(end2, start2)\n        val startMin9 = math.min(start2,\
    \ end2)\n        val startMax9 = math.max(start2, end2)\n        val endMin9 =\
    \ math.min(end2, start2)\n        val endMax9 = math.max(end2, start2)\n     \
    \   val startMin10 = math.min(start2, end2)\n        val startMax10 = math.max(start2,\
    \ end2)\n        val endMin10 = math.min(end2, start2)\n        val endMax10 =\
    \ math.max(end2, start2)\n        val startMin11 = math.", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n \
    \       else if (length2 == 1 && length == 1) \"YES\"\n        else if (length2\
    \ == 1 && length != 1) \"NO\"\n        else if (length != 1 && length2 == 1) \"\
    NO\"\n        else if (length != 1 && length2 != 1) \"NO\"\n        else if (length\
    \ == 1 && length2 == 1) \"YES\"\n        else if (length != 1 && length2 != 1)\
    \ \"NO\"\n        else if (length != 1 && length2 == 1) \"NO\"\n        else if\
    \ (length != 1 && length2 != 1) \"NO\"\n        else if (length == 1 && length2\
    \ != 1) \"NO\"\n        else if (length != 1 && length2 != 1) \"NO\"\n       \
    \ else if (length != 1 && length2 == 1) \"NO\"\n        else if (length != 1 &&\
    \ length2 != 1) \"NO\"\n        else if (length == 1 && length2 != 1) \"NO\"\n\
    \        else if (length != 1 && length2 == 1) \"NO\"\n        else if (length\
    \ != 1 && length2 != 1) \"NO\"\n        else if (length != 1 && length2 == 1)\
    \ \"NO\"\n        else if (length != 1 && length2 != 1) \"NO\"\n        else if\
    \ (length == 1 && length2 != 1) \"NO\"\n        else if (length != 1 && length2\
    \ == 1) \"NO\"\n        else if (length != 1 && length2 != 1) \"NO\"\n       \
    \ else if (length != 1 && length2 == 1) \"NO\"\n        else if (length != 1 &&\
    \ length2 != 1) \"NO\"\n        else if (length == 1 && length2 != 1) \"NO\"\n\
    \        else if (length != 1 && length2 == 1) \"NO\"\n        else if (length\
    \ != 1 && length2 != 1) \"NO\"\n        else if (length != 1 && length2 == 1)\
    \ \"NO\"\n        else if (length != 1 && length2 != 1) \"NO\"\n        else if\
    \ (length == 1 && length2 != 1) \"NO\"\n        else if (length != 1 && length2\
    \ == 1) \"NO\"\n        else if (length != 1 && length2 != 1) \"NO\"\n       \
    \ else if (length != 1 && length2 == 1) \"NO\"\n        else if (length != 1 &&\
    \ length2 != 1) \"NO\"\n        else if (length == 1 && length2 != 1) \"NO\"\n\
    \        else if (length != 1 && length2 == 1) \"NO\"\n        else if (length\
    \ != 1 && length2 != 1) \"NO\"\n        else if (length != 1 && length2 == 1)\
    \ \"NO\"\n        else if (length != 1 && length2 != 1) \"NO\"\n        else if\
    \ (length == 1 && length2 != 1) \"NO\"\n        else if (length != 1 && length2\
    \ == 1) \"NO\"\n        else if (length != 1 && length", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start < end2 && start2 < end) {\n\
    \            val start3 = start2\n            val end3 = end2\n            val\
    \ start4 = start\n            val end4 = end\n            val start5 = start3\n\
    \            val end5 = end3\n            val start6 = start4\n            val\
    \ end6 = end4\n            val start7 = start5\n            val end7 = end5\n\
    \            val start8 = start6\n            val end8 = end6\n            val\
    \ start9 = start7\n            val end9 = end7\n            val start10 = start8\n\
    \            val end10 = end8\n            val start11 = start9\n            val\
    \ end11 = end9\n            val start12 = start10\n            val end12 = end10\n\
    \            val start13 = start11\n            val end13 = end11\n          \
    \  val start14 = start12\n            val end14 = end12\n            val start15\
    \ = start13\n            val end15 = end13\n            val start16 = start14\n\
    \            val end16 = end14\n            val start17 = start15\n          \
    \  val end17 = end15\n            val start18 = start16\n            val end18\
    \ = end16\n            val start19 = start17\n            val end19 = end17\n\
    \            val start20 = start18\n            val end20 = end18\n          \
    \  val start21 = start19\n            val end21 = end19\n            val start22\
    \ = start20\n            val end22 = end20\n            val start23 = start21\n\
    \            val end23 = end21\n            val start24 = start22\n          \
    \  val end24 = end22\n            val start25 = start23\n            val end25\
    \ = end23\n            val start26 = start24\n            val end26 = end24\n\
    \            val start27 = start25\n            val end27 = end25\n          \
    \  val start28 = start26\n            val end28 = end26\n            val start29\
    \ = start27\n            val end29 = end27\n            val start30 = start28\n\
    \            val end30 = end28\n            val start31 = start29\n          \
    \  val end31 = end29\n            val start32 = start30\n            val end32\
    \ = end30\n            val start33 = start31\n            val end33 = end", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd\
    \ = end - start\n        val start2MinusEnd2 = end2 - start2\n        val startMinusEnd2\
    \ = start2 - start\n        val startMinusEnd2MinusEnd = start2MinusEnd2 - startMinusEnd\n\
    \        val startMinusEnd2MinusEnd2 = startMinusEnd2 - start2MinusEnd\n     \
    \   val startMinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd - startMinusEnd2MinusEnd\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2 = startMinusEnd2MinusEnd2 - startMinusEnd2MinusEnd2\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd2MinusEnd\
    \ - startMinusEnd2MinusEnd2MinusEnd2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2\
    \ = startMinusEnd2MinusEnd2MinusEnd2 - startMinusEnd2MinusEnd2MinusEnd2\n    \
    \    val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2Minus", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n \
    \       else if (length2 == 1) \"YES\"\n        else if (length == 1) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else intersection(interval1, interval2)", "     \
    \   val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length2\
    \ == 1) {\n            if (length == 1) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        val isPrime = length2 % length == 0 // if length2 is prime then length\
    \ is also prime\n        if (isPrime) {\n            return \"YES\"\n        }\
    \ else {\n            return \"NO\"\n        }"]
stop_tokens:
- "\n    }\n"

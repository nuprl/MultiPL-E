language: scala
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val result = mutable.ListBuffer.empty[Long]\n        for (i\
    \ <- 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n\
    \                result += s.charAt(i) - 'A'\n        result.toList.length\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps81y8902.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795118
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n        \
    \    sum += s.charAt(i).toString.toInt\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3e6mxsky.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toString.toInt\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzznon0bw.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m7pp23a.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6m7pp23a.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5zff8cqa.scala:23)\n\tat Problem.main(tmp5zff8cqa.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val result = mutable.ArrayBuffer.empty[Long]\n        for\
    \ (i <- 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <=\
    \ 'Z')\n                result += s.charAt(i) - 'A'\n        return result.toList.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxe7i29vs.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795119
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 10\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp97f803xb.scala:25)\n\tat Problem.main(tmp97f803xb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n        \
    \    if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9my0pl2w.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp9my0pl2w.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n        \
    \    sum += s.charAt(i).toString.toInt\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3e6mxsky.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toString.toInt\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val chars = mutable.ListBuffer[Char]()\n        for(i <- 0\
    \ until s.length){\n            chars += s.charAt(i)\n        }\n        chars.toList.map(_.toInt).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpys_q3yqk.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mchars\e[0m = mutable.ListBuffer[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795118
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n        \
    \    sum += s.charAt(i).toString.toInt\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3e6mxsky.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toString.toInt\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for(i <- 0 until s.length)\n       \
    \     if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpnqnrtcoy.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpnqnrtcoy.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m7pp23a.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6m7pp23a.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcobzvgug.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpcobzvgug.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val chars = s.toCharArray\n        val sum = 0\n        for(i\
    \ <- 0 until chars.length)\n            if(chars(i) >= 'a' && chars(i) <= 'z')\n\
    \                sum += chars(i) - 'a'\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmh88xu0q.scala:19:20 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                sum += chars(i) - \e[31m'a'\e[0m\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \  value += is not a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795121
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgl8186cj.scala:23)\n\tat Problem.main(tmpgl8186cj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val result = mutable.ListBuffer.empty[Long]\n        for (i\
    \ <- 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n\
    \                result += s.charAt(i) - 'A'\n        result.toList.length\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps81y8902.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795118
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m7pp23a.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6m7pp23a.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgl8186cj.scala:23)\n\tat Problem.main(tmpgl8186cj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7xcwyg72.scala:22)\n\tat Problem.main(tmp7xcwyg72.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m7pp23a.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6m7pp23a.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphd_aibc4.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        var lastChar = s.charAt(s.length-1)\n\
    \        var lastCharCode = lastChar.toInt\n        var lastCharCode = lastCharCode\
    \ + lastCharCode % 10\n        var lastCharCode = lastCharCode / 10\n        var\
    \ lastCharCode = lastCharCode + lastCharCode % 10\n        var lastCharCode =\
    \ lastCharCode / 10\n        var lastCharCode = lastCharCode + lastCharCode %\
    \ 10\n        var lastCharCode = lastCharCode / 10\n        var lastCharCode =\
    \ lastCharCode + lastCharCode % 10\n        var lastCharCode = lastCharCode /\
    \ 10\n        var lastCharCode = lastCharCode + lastCharCode % 10\n        var\
    \ lastCharCode = lastCharCode / 10\n        var lastCharCode = lastCharCode +\
    \ lastCharCode % 10\n        var lastCharCode = lastCharCode / 10\n        var\
    \ lastCharCode = lastCharCode + lastCharCode % 10\n        var lastCharCode =\
    \ lastCharCode / 10\n        var lastCharCode = lastCharCode + lastCharCode %\
    \ 10\n        var lastCharCode = lastCharCode / 10\n        var lastCharCode =\
    \ lastCharCode + lastCharCode % 10\n        var lastCharCode = lastCharCode /\
    \ 10\n        var lastCharCode = lastCharCode + lastCharCode % 10\n        var\
    \ lastCharCode = lastCharCode / 10\n        var lastCharCode = lastCharCode +\
    \ lastCharCode % 10\n        var lastCharCode = lastCharCode / 10\n        var\
    \ lastCharCode = lastCharCode + lastCharCode % 10\n        var lastCharCode =\
    \ lastCharCode / 10\n        var lastCharCode = lastCharCode + lastCharCode %\
    \ 10\n        var lastCharCode = lastCharCode / 10\n        var lastCharCode =\
    \ lastCharCode + lastCharCode % 10\n        var lastCharCode = lastCharCode /\
    \ 10\n        var lastCharCode = lastCharCode + lastCharCode % 10\n        var\
    \ lastCharCode = lastCharCode / 10\n        var lastCharCode = lastCharCode +\
    \ lastCharCode % 10\n        var lastCharCode = lastCharCode / 10\n        var\
    \ lastCharCode = lastCharCode + lastCharCode % 10\n        var lastCharCode =\
    \ lastCharCode / 10\n        var lastCharCode = lastCharCode + lastCharCode %\
    \ 10\n        var lastCharCode = lastCharCode / 10\n        var lastCharCode =\
    \ lastCharCode + lastCharCode % 10\n        var lastCharCode = lastCharCode /\
    \ 10\n        var lastCharCode = lastCharCode + lastCharCode % 10\n        var\
    \ lastCharCode = lastCharCode / 10\n        var lastCharCode = lastCharCode +\
    \ lastChar\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpe6c71da4.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m \e[36mlastCharCode\e[0m = lastCharCode\
    \ + lastCharCode % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlastCharCode is already defined as \e[33mvariable\e[0m \e\
    [35mlastCharCode\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpe6c71da4.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m \e[36mlastCharCode\e[0m = lastCharCode\
    \ / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlastCharCode is already defined as \e[33mvariable\e[0m \e\
    [35mlastCharCode\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpe6c71da4.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mvar\e[0m \e[36mlastCharCode\e[0m = lastCharCode\
    \ + lastCharCode % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlastCharCode is already defined as \e[33mvariable\e[0m \e\
    [35mlastCharCode\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpe6c71da4.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mvar\e[0m \e[36mlastCharCode\e[0m = lastCharCode\
    \ / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlastCharCode is already defined as \e[33mvariable\e[0m \e\
    [35mlastCharCode\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpe6c71da4.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mvar\e[0m \e[36mlastCharCode\e[0m = las"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toInt * (s.charAt(i) - 'A' + 1)\n        sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqweyqwfw.scala:22)\n\tat Problem.main(tmpqweyqwfw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      sum += s.charAt(i).asDigit\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv6hw1n_1.scala:22)\n\tat Problem.main(tmpv6hw1n_1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for(i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphnky3r87.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Long - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwmc7x9q5.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Long - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcobzvgug.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpcobzvgug.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val chars = mutable.ListBuffer[Char]()\n        for (c <-\
    \ s) {\n            if (c.isDigit) {\n                chars += c\n           \
    \ }\n        }\n        chars.toList.map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmafqv12f.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mchars\e[0m = mutable.ListBuffer[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795125
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgl8186cj.scala:23)\n\tat Problem.main(tmpgl8186cj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m7pp23a.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6m7pp23a.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val chars = mutable.ListBuffer[Char]()\n        for (c <-\
    \ s) {\n            if (c.isUpper) {\n                chars += c\n           \
    \ }\n        }\n        chars.toList.foldLeft(0)((acc, c) => acc + c.toInt)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvo79il28.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mchars\e[0m = mutable.ListBuffer[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795125
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val result = mutable.ArrayBuffer.empty[Int]\n        for (i\
    \ <- 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n\
    \                result += s.charAt(i) - 'A'\n        result.toList.sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplj95ylxq.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795127
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m7pp23a.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6m7pp23a.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n        \
    \    if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9yvf4gm8.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659795131
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpu396kmpk.scala:25)\n\tat Problem.main(tmpu396kmpk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795132
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n        \
    \    sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpccaihebn.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795131
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n        \
    \    if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9my0pl2w.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp9my0pl2w.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyfv3htdl.scala:23)\n\tat Problem.main(tmpyfv3htdl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val result = mutable.Long.empty\n        for (i <- 0 until\
    \ s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n     \
    \           result += s.charAt(i) - 'A' + 1\n        return result\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0h3g56sk.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n        \
    \    sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpccaihebn.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795131
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val chars = mutable.ListBuffer[Char]()\n        for (c <-\
    \ s) {\n            if (c.isLetter) chars += c\n        }\n        chars.toList.map(_.toInt).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1v45k0r4.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mchars\e[0m = mutable.ListBuffer[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795130
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') {\n           \
    \     sum += s.charAt(i) - 'a'\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3br8e1ez.scala:27)\n\tat Problem.main(tmp3br8e1ez.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795132
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        var i = 0\n        while (i < s.length){\n\
    \            sum += s.charAt(i).toInt\n            i += 1\n        }\n       \
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"\
    )) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzpcl383a.scala:25)\n\tat Problem.main(tmpzpcl383a.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795132
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpu396kmpk.scala:25)\n\tat Problem.main(tmpu396kmpk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795132
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyfv3htdl.scala:23)\n\tat Problem.main(tmpyfv3htdl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c.isDigit) {\n         \
    \       sum += c.toLong\n            }\n            i += 1\n        }\n      \
    \  sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"\
    )) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_nkzjhk1.scala:28)\n\tat Problem.main(tmp_nkzjhk1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795132
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toString.toInt\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyx5wteco.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toString.toInt\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795132
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyfv3htdl.scala:23)\n\tat Problem.main(tmpyfv3htdl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toString.toInt\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.NumberFormatException: For input string: \"a\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat scala.collection.StringOps$.toInt$extension(StringOps.scala:915)\n\tat Problem$.digitSum$$anonfun$1(tmpyd_cq9m_.scala:17)\n\
    \tat scala.runtime.java8.JFunction1$mcVI$sp.apply(JFunction1$mcVI$sp.scala:18)\n\
    \tat scala.collection.immutable.Range.foreach(Range.scala:190)\n\tat Problem$.digitSum(tmpyd_cq9m_.scala:17)\n\
    \tat Problem$.main(tmpyd_cq9m_.scala:22)\n\tat Problem.main(tmpyd_cq9m_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzznon0bw.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcobzvgug.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpcobzvgug.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            val code = c.toInt\n       \
    \     if (code >= '0' && code <= '9') {\n                sum += code\n       \
    \     }\n            i += 1\n        }\n        return sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6xo020ld.scala:29)\n\tat Problem.main(tmp6xo020ld.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795132
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplbdgcqyk.scala:25)\n\tat Problem.main(tmplbdgcqyk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzznon0bw.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val result = mutable.MutableList[Long]()\n        for (i <-\
    \ 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n\
    \                result += s.charAt(i) - 'A'\n        val sum = result.reduceLeft(_\
    \ + _)\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp51ma5lx.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.MutableList[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcobzvgug.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpcobzvgug.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpu396kmpk.scala:25)\n\tat Problem.main(tmpu396kmpk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795132
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyfv3htdl.scala:23)\n\tat Problem.main(tmpyfv3htdl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val result = mutable.ListBuffer[Int]()\n        for (i <-\
    \ 0 until s.length)\n            if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n\
    \                result += s.charAt(i) - 'a'\n        result.toList.sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe6kvdad0.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795131
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length){\n\
    \            sum += s.charAt(i).toInt\n            i += 1\n        }\n       \
    \ return sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpp9a_6qwe.scala:25)\n\tat Problem.main(tmpp9a_6qwe.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp14jwcavy.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 10\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbmhlcyz9.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpbmhlcyz9.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m7pp23a.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6m7pp23a.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val result = mutable.ArrayBuffer.empty[Long]\n        for\
    \ (i <- 0 until s.length)\n            if (s(i) >= 'A' && s(i) <= 'Z')\n     \
    \           result += s(i) - 'A'\n        result.toList.length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnt80vnts.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795131
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcobzvgug.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpcobzvgug.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m7pp23a.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6m7pp23a.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7xcwyg72.scala:22)\n\tat Problem.main(tmp7xcwyg72.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val result = mutable.Long.empty\n        for(i <- 0 until\
    \ s.length){\n            val c = s.charAt(i)\n            if(c == 'A' || c ==\
    \ 'a') result += c.toLong\n        }\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptdsv67m_.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795131
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val chars = mutable.ListBuffer[Char]()\n        for (c <-\
    \ s) {\n            if (c.isDigit) {\n                chars += c\n           \
    \ }\n        }\n        chars.toList.foldLeft(0)((acc, c) => acc + c.toInt)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ns4dzwu.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mchars\e[0m = mutable.ListBuffer[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795132
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyfv3htdl.scala:23)\n\tat Problem.main(tmpyfv3htdl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpiyid5xl9.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795135
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp14jwcavy.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptfr_9jk6.scala:23)\n\tat Problem.main(tmptfr_9jk6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795137
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwmc7x9q5.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Long - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzznon0bw.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      sum += s.charAt(i).toString.toUpperCase.charAt(0).toLong\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9uziwruh.scala:22)\n\tat Problem.main(tmp9uziwruh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795138
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).asDigit\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpsfzhhb5u.scala:22)\n\tat Problem.main(tmpsfzhhb5u.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795138
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1rjwky0t.scala:22)\n\tat Problem.main(tmp1rjwky0t.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795138
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n        \
    \    sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpccaihebn.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795131
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m7pp23a.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6m7pp23a.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\n\
    \            else\n                sum += s.charAt(i) - 'a'\n        sum\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4qqsbsfd.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp4qqsbsfd.scala:20:20 ------------------------\e[0m\e[0m\n\e[31m20 |\e\
    [0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795138
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m7pp23a.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6m7pp23a.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6m7pp23a.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6m7pp23a.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprcdc3drk.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795138
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpoggs3r3u.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7xcwyg72.scala:22)\n\tat Problem.main(tmp7xcwyg72.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplbdgcqyk.scala:25)\n\tat Problem.main(tmplbdgcqyk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n        \
    \    if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9yvf4gm8.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659795131
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        return\
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"\
    )) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp10boz86n.scala:25)\n\tat Problem.main(tmp10boz86n.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795139
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpu396kmpk.scala:25)\n\tat Problem.main(tmpu396kmpk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795132
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val result = mutable.ListBuffer[Int]()\n        for (i <-\
    \ 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n\
    \                result += s.charAt(i) - 'A' + 1\n        result.toList.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq2ija63y.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795136
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val chars = mutable.ListBuffer[Char]()\n        for (c <-\
    \ s) {\n            if (c.isDigit) {\n                chars += c\n           \
    \ }\n        }\n        chars.toList.map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmafqv12f.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mchars\e[0m = mutable.ListBuffer[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795125
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf09gy57p.scala:25)\n\tat Problem.main(tmpf09gy57p.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795138
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzznon0bw.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795122
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gkj3vk.scala:25)\n\tat Problem.main(tmpc7gkj3vk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= '0' && c <= '9') {\n\
    \                sum += c - '0'\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6o2mxxow.scala:28)\n\tat Problem.main(tmp6o2mxxow.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795138
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5zff8cqa.scala:23)\n\tat Problem.main(tmp5zff8cqa.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcobzvgug.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpcobzvgug.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcobzvgug.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpcobzvgug.scala:20:20 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n\
    \                sum += c - 'a'\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplx4lkvds.scala:28)\n\tat Problem.main(tmplx4lkvds.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795138
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgl8186cj.scala:23)\n\tat Problem.main(tmpgl8186cj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length){\n\
    \            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z'){\n                sum\
    \ = sum + s.charAt(i) - 'A' + 1\n            }\n            i = i + 1\n      \
    \  }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplrh5ldyy.scala:27)\n\tat Problem.main(tmplrh5ldyy.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795138
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n      \
    \      if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5zff8cqa.scala:23)\n\tat Problem.main(tmp5zff8cqa.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n            else\n                sum += s.charAt(i)\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplbdgcqyk.scala:25)\n\tat Problem.main(tmplbdgcqyk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795133
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n        \
    \    if(s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpja2va682.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795138
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n       \
    \     if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpvv1bhauo.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795123

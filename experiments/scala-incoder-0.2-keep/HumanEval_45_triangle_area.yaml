name: HumanEval_45_triangle_area
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given length of a side and high return area for a triangle.\n    // >>>\
  \ triangle_area(5, 3)\n    // 7.5\n    def triangleArea(a : Long, h : Long) : Float\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
  \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
  \ (8l)) == (40.0f));\n    }\n\n}\n"
completions: ["        val area = h * h / 2\n        val area = area * a / 2\n   \
    \     area", "        val area = h * h / 2\n        val area = area / Math.sqrt(a\
    \ * a)\n        area", "        val area = scala.math.pow((scala.math.pow(a, 2)\
    \ + (scala.math.pow(h,2))), 0.5)\n        area", "        val area = a / 2.0\n\
    \        val h2 = h * h\n        val a2 = a * a\n        val h3 = h2 * h2\n  \
    \      val a3 = a2 * a\n        val h4 = h3 * h3\n        val a4 = a3 * a\n  \
    \      val h5 = h4 * h4\n        val a5 = a4 * a\n        val h6 = h5 * h5\n \
    \       val a6 = a6 * a\n        val h7 = h6 * h6\n        val a7 = a7 * a\n \
    \       val h8 = h7 * h7\n        val a8 = a8 * a\n        val h9 = h8 * h8\n\
    \        val a9 = a9 * a\n        val h10 = h9 * h9\n        val a10 = a10 * a\n\
    \        val h11 = h10 * h10\n        val a11 = a11 * a\n        val h12 = h11\
    \ * h11\n        val a12 = a12 * a\n        val h13 = h12 * h12\n        val a13\
    \ = a13 * a\n        val h14 = h13 * h13\n        val a14 = a14 * a\n        val\
    \ h15 = h14 * h14\n        val a15 = a15 * a\n        val h16 = h15 * h15\n  \
    \      val a16 = a16 * a\n        val h17 = h16 * h16\n        val a17 = a17 *\
    \ a\n        val h18 = h17 * h17\n        val a18 = a18 * a\n        val h19 =\
    \ h18 * h18\n        val a19 = a19 * a\n        val h20 = h19 * h19\n        val\
    \ a20 = a20 * a\n        val h21 = h20 * h20\n        val a21 = a21 * a\n    \
    \    val h22 = h21 * h21\n        val a22 = a22 * a\n        val h23 = h22 * h22\n\
    \        val a23 = a23 * a\n        val h24 = h23 * h23\n        val a24 = a24\
    \ * a\n        val h25 = h24 * h24\n        val a25 = a25 * a\n        val h26\
    \ = h25 * h25\n        val a26 = a26 * a\n        val h27 = h26 * h26\n      \
    \  val a27 = a27 * a\n        val h28 = h27 * h27\n        val a28 = a28 * a\n\
    \        val h29 = h28 * h28\n        val a29 = a29 * a\n        val h30 = h29\
    \ * h29\n        val a30 = a30 * a\n        ", "        val area = h * h / 2 *\
    \ a\n        area", "        val area = a * h / 2\n        area", "        val\
    \ area = h * h\n        val side = math.sqrt(a * a)\n        area / side", " \
    \       val area = h * a * 0.5\n        area", "        val area = scala.math.pow((scala.math.pow(a,\
    \ 2) + (scala.math.pow(h, 2))), 0.5)\n        area", "        val area = scala.math.pow((scala.math.pow(a,\
    \ 2) / h), 0.5)\n        area", "        val area = a / 2.0\n        val b = (h\
    \ * h) / 4.0\n        val c = (a * b) / 2.0\n        val s = (a + b + c) / 2.0\n\
    \        area * s", "        val area = a * h / 2\n        area", "        val\
    \ area = h * h\n        val side = math.sqrt(a * a)\n        area / side", " \
    \       val area = scala.math.pow((scala.math.pow(a, 2) + (scala.math.pow(h,2))),\
    \ 0.5)\n        area", "        val area = scala.math.pow((scala.math.pow(a, 2)\
    \ + (scala.math.pow(h,2))), 0.5)\n        area", "        val area = scala.math.pow((scala.math.pow(a,\
    \ 2) + (scala.math.pow(h,2))), 0.5)\n        area", "        val area = a / 2\n\
    \        val b = h / 2\n        val c = math.sqrt(b * b - 4 * a * c)\n       \
    \ area / c", "        val area = h * h / 2\n        val side = math.sqrt(a * a\
    \ + h * h)\n        area / side", "        val area = Float(a * h) / 2\n     \
    \   area", "        val area = h * h / 2\n        val area = area + a * a\n  \
    \      area / 2"]
stop_tokens:
- "\n    }\n"

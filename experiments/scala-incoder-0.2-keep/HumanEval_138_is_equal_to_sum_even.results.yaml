language: scala
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.Set[Long]()\n\
    \        val sumEvenSum = mutable.Set[Long]()\n        val sumEvenSumSum = mutable.Set[Long]()\n\
    \        val sumEvenSumSumSum = mutable.Set[Long]()\n        val sumEvenSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSum = mutable.Set[Long]()\n\
    \        val sumEvenSumSumSumSumSum = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSum = mutable.Set[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSum = mutable.Set[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.Set[Long]()\n      \
    \  val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.Set[Long]()\n        val\
    \ sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumSumSumSum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdwdjj085.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdwdjj085.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e[0m \e\
    [35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpdwdjj085.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdwdjj085.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSumSum\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdwdjj085.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSumSumSumSumSumSum\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0"
  stdout: ''
  timestamp: 1659799958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer(0)\n\
    \        var sum = 0\n        while(n > 0){\n            sum += n\n          \
    \  sumEven.append(sum)\n            n -= 1\n        }\n        sumEven.size ==\
    \ 4 && sumEven.forall(x => x % 2 == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8fvzhbt6.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp8fvzhbt6.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            sum += n\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8fvzhbt6.scala:15:14\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            n -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumOdd = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n    \
    \    val sumEvenSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2v_5ao10.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2v_5ao10.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                           "
  stdout: ''
  timestamp: 1659799958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer(0)\n\
    \        for(i <- 0 until n){\n            if((i%2) == 0){\n                sumEven\
    \ += i\n            }\n        }\n        sumEven.length == 4\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnsd8q7hx.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpnsd8q7hx.scala:11:25 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        sumEven.clear()\n        sumEven.takeWhile(x => x % 2 == 0).foreach(x\
    \ => sumEven.append(x))\n        sumEven.takeWhile(x => x % 2 == 0).length ==\
    \ 4\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvw9dgnm8.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799953
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        sumEven.+=(n/2) // first even number\n        sumEven.+=(n/2) // second\
    \ even number\n        sumEven.+=(n/2) // third even number\n        sumEven.+=(n/2)\
    \ // fourth even number\n        sumEven.sum == n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplrintapt.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799954
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        sumEven.push(2)\n        sumEven.push(4)\n        sumEven.push(6)\n \
    \       sumEven.push(8)\n        sumEven.push(10)\n        sumEven.push(12)\n\
    \        sumEven.push(14)\n        sumEven.push(16)\n        sumEven.push(18)\n\
    \        sumEven.push(20)\n        sumEven.push(22)\n        sumEven.push(24)\n\
    \        sumEven.push(26)\n        sumEven.push(28)\n        sumEven.push(30)\n\
    \        sumEven.push(32)\n        sumEven.push(34)\n        sumEven.push(36)\n\
    \        sumEven.push(38)\n        sumEven.push(40)\n        sumEven.push(42)\n\
    \        sumEven.push(44)\n        sumEven.push(46)\n        sumEven.push(48)\n\
    \        sumEven.push(50)\n        sumEven.push(52)\n        sumEven.push(54)\n\
    \        sumEven.push(56)\n        sumEven.push(58)\n        sumEven.push(60)\n\
    \        sumEven.push(62)\n        sumEven.push(64)\n        sumEven.push(66)\n\
    \        sumEven.push(68)\n        sumEven.push(70)\n        sumEven.push(72)\n\
    \        sumEven.push(74)\n        sumEven.push(76)\n        sumEven.push(78)\n\
    \        sumEven.push(80)\n        sumEven.push(82)\n        sumEven.push(84)\n\
    \        sumEven.push(86)\n        sumEven.push(88)\n        sumEven.push(90)\n\
    \        sumEven.push(92)\n        sumEven.push(94)\n        sumEven.push(96)\n\
    \        sumEven.push(98)\n        sumEven.push(100)\n        sumEven.push(102)\n\
    \        sumEven.push(104)\n        sumEven.push(106)\n        sumEven.push(108)\n\
    \        sumEven.push(110)\n        sumEven.push(112)\n        sumEven.push(114)\n\
    \        sumEven.push(116)\n        sumEven.push(118)\n        sumEven.push(120)\n\
    \        sumEven.push(122)\n        sumEven.push(124)\n        sumEven.push(126)\n\
    \        sumEven.push(128)\n        sumEven.push(130)\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpas8c_4sv.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799954
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum = mutable.ListBuffer[Long]()\n        val sumEvenSum2\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum3 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum4 = mutable.ListBuffer[Long]()\n        val sumEvenSum5\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum6 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum7 = mutable.ListBuffer[Long]()\n        val sumEvenSum8\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum9 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum10 = mutable.ListBuffer[Long]()\n        val sumEvenSum11\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum12 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum13 = mutable.ListBuffer[Long]()\n        val sumEvenSum14\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum15 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum16 = mutable.ListBuffer[Long]()\n        val sumEvenSum17\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum18 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum19 = mutable.ListBuffer[Long]()\n        val sumEvenSum20\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum21 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum22 = mutable.ListBuffer[Long]()\n        val sumEvenSum23\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum24 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum25 = mutable.ListBuffer[Long]()\n        val sumEvenSum26\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum27 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum28 = mutable.ListBuffer[Long]()\n        val sumEvenSum29\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum30 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum31 = mutable.ListBuffer[Long]()\n        val sumEvenSum32\
    \ = mutable.ListBuffer[Long]\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:12:26 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:15:26 ------------------------\e\
    [0"
  stdout: ''
  timestamp: 1659799958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven += i\n            }\n        }\n        sumEven.size == 4\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5n0nafby.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp5n0nafby.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Long\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp12dgrhe7.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp12dgrhe7.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m          "
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquares\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRoots = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquares = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquareRoots = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquareRootsOfSquares = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRoots = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquares = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots =\
    \ mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquares\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquares\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquares\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ = mutable.ArrayBuffer.empty[Int\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgxb5jteg.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpgxb5jteg.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpgxb5jteg.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  sumEvenSumOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRootsOfSquareRoots\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgxb5jteg.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      No"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven.append(i)\n            }\n        }\n        sumEven.length == 4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ed3dxd3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp0ed3dxd3.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n     \
    \   val sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n      \
    \  val sumEvenSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumSum =\
    \ mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumCount =\
    \ mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumCount = mutable.Array\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3b4ljg2j.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0msumEvenSumSumSumSumCount is already defined as \e[33mvalue\e[0m \e[35msumEvenSumSumSumSumCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3b4ljg2j.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3b4ljg2j.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumCount is already defined as \e[33mvalue\e[0m \e\
    [35msumEvenSumSumSumSumSumCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3b4ljg2j.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumSum is already defined as \e[33mvalue\e[0m \e\
    [35msumEvenSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloade"
  stdout: ''
  timestamp: 1659799958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven += i\n            }\n        }\n        sumEven.length == 4\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp076h9lmr.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp076h9lmr.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0L\n        for(i <- 0 until n) {\n            val x = i\n\
    \            val y = x - 1\n            val z = y - 1\n            val w = z -\
    \ 1\n            val t = x + y + z + w\n            val s = if (t % 2 == 0) t\
    \ / 2 else t / 2 + 1\n            sum += s\n            evens += s\n        }\n\
    \        evens.size == 4\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplq94vowk.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmplq94vowk.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplq94vowk.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            sum += s\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        var sum = 0\n        for(i <- 0 until n){\n            sum += i\n   \
    \         if(sum == 4){\n                sumEven.append(i)\n            }\n  \
    \      }\n        sumEven.length == n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr8rq05fq.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpr8rq05fq.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Int]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven += i\n            }\n        }\n        sumEven.length == 4\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsn66h9jh.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpsn66h9jh.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Long\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp12dgrhe7.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp12dgrhe7.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m          "
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n) {\n            val x = i\n\
    \            val y = n - i\n            val z = (x + y) / 2\n            val z2\
    \ = z * z\n            val z3 = z2 * z\n            val z4 = z3 * z\n        \
    \    val z5 = z4 * z\n            val z6 = z5 * z\n            val z7 = z6 * z\n\
    \            val z8 = z7 * z\n            val z9 = z8 * z\n            val z10\
    \ = z9 * z\n            val z11 = z10 * z\n            val z12 = z11 * z\n   \
    \         val z13 = z12 * z\n            val z14 = z13 * z\n            val z15\
    \ = z14 * z\n            val z16 = z15 * z\n            val z17 = z16 * z\n  \
    \          val z18 = z17 * z\n            val z19 = z18 * z\n            val z20\
    \ = z19 * z\n            val z21 = z20 * z\n            val z22 = z21 * z\n  \
    \          val z23 = z22 * z\n            val z24 = z23 * z\n            val z25\
    \ = z24 * z\n            val z26 = z25 * z\n            val z27 = z26 * z\n  \
    \          val z28 = z27 * z\n            val z29 = z28 * z\n            val z30\
    \ = z29 * z\n            val z31 = z30 * z\n            val z32 = z31 * z\n  \
    \          val z33 = z32 * z\n            val z34 = z33 * z\n            val z35\
    \ = z34 * z\n            val z36 = z35 * z\n            val z37 = z36 * z\n  \
    \          val z38 = z37 * z\n            val z39 = z38 * z\n            val z40\
    \ = z39 * z\n            val z41 = z40 * z\n            val z42 = z41 * z\n  \
    \          val z43 = z42 * z\n            val z44 = z43 * z\n            val z45\
    \ = z44 * z\n            val z46 = z45 * z\n            val z47 = z46 * z\n  \
    \          val z48 = z47 * z\n            val z49 = z48 * z\n            val z50\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgf5kn1t8.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgf5kn1t8.scala:78:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m78 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpgf5kn1t8.scala:10:20 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpgf5kn1t8.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgf5kn1t8.scala:77:1\
    \ ---------------------\e[0m\e[0m\n\e[31m77 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e\
    [0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m   |\e[0m Required: Boolean\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[33m\e[33m-- Warning: /tmp/tmpgf5kn1t8.scala:66:4 ----------------------------------------\e\
    [0m\e[0m\n\e[33m66 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m\
    \   |\e[0m    Line is indented too far to the left, or a `}` is missing\n1 warning\
    \ found\n5 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven += i\n            }\n        }\n        sumEven.length == 4\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl1k70jmq.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpl1k70jmq.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            sumEven += i\n        }\n        sumEven.size\
    \ == 4 && sumEven.forall(x => x % 2 == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplqi0f1fd.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmplqi0f1fd.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSum = 0\n        val evenSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsCount = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount2\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount3 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsCount4 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsCount7 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount8\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount9 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsCount10 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsCount13 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsCount16 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsCount19 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount20\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount21 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsCount22 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsCount25 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsCount28 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsCount29\
    \ = mutable.ArrayBuffer.empty[Long]\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg4ot2p15.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpg4ot2p15.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mevenSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpg4ot2p15.scala:13:28 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mevenSumsCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpg4ot2p15.scala:14:29 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenSumsCount2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                             Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpg4ot2p15.scala:15:29 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mevenSumsCount3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                             Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpg4ot2p15.sc"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            if (n % i == 0) {\n                sumEven.append(i)\n\
    \            }\n        }\n        sumEven.size == 4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpufbj6pt1.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpufbj6pt1.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        sumEven.clear()\n        sumEven.push(n)\n        val sumEvenCount =\
    \ sumEven.count(_ % 2 == 0)\n        sumEvenCount <= 4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_a4xpz0m.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799954
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.Set[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            if(i % 2 == 0){\n\
    \                evens += i\n                sum += i\n            }\n       \
    \ }\n        evens.size == 4 && sum == n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdov_n9i3.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpdov_n9i3.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdov_n9i3.scala:15:20\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799967
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven.append(i)\n            }\n        }\n        sumEven.size == 4\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp848izor3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp848izor3.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799967
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenEven = mutable.ListBuffer[Long]()\n        val sumEvenOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumOdd = mutable.ListBuffer[Long]()\n\
    \        val sumOddEven = mutable.ListBuffer[Long]()\n        val sumOddOdd =\
    \ mutable.ListBuffer[Long]()\n        val sumEvenEvenEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenEvenOdd = mutable.ListBuffer[Long]()\n        val sumEvenOddEven\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenOddOdd = mutable.ListBuffer[Long]()\n\
    \        val sumOddEvenEven = mutable.ListBuffer[Long]()\n        val sumOddEvenOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumOddOddEven = mutable.ListBuffer[Long]()\n\
    \        val sumOddOddOdd = mutable.ListBuffer[Long]()\n        val sumEvenEvenEvenEven\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenEvenEvenOdd = mutable.ListBuffer[Long]()\n\
    \        val sumEvenOddEvenEven = mutable.ListBuffer[Long]()\n        val sumEvenOddEvenOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenEvenOddEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenOddEvenOdd = mutable.ListBuffer[Long]()\n        val sumEvenEvenOddOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumOddEvenEvenEven = mutable.ListBuffer[Long]()\n\
    \        val sumOddEvenEvenOdd = mutable.ListBuffer[Long]()\n        val sumOddOddEvenEven\
    \ = mutable.ListBuffer[Long]()\n        val sumOddOddEvenOdd = mutable.ListBuffer[Long]()\n\
    \        val sumEvenEvenEvenEvenEven = mutable.ListBuffer[Long]()\n        val\
    \ sumEvenEvenEvenEvenOdd = mutable.ListBuffer[Long]()\n        val sumEvenOddEvenEvenEven\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenOddEvenEvenOdd = mutable.ListBuffer[Long]()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwtj0048q.scala:29:12 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36msumEvenOddEvenOdd\e[0m =\
    \ mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenOddEvenOdd is already defined as \e[33mvalue\e[0m \e\
    [35msumEvenOddEvenOdd\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwtj0048q.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwtj0048q.scala:11:26 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwtj0048q.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumEvenOdd\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwtj0048q.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumOdd\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m"
  stdout: ''
  timestamp: 1659799966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOdd = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n   \
    \     val sumEvenSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpz_dalyxq.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e\
    [31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpz_dalyxq.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \                       "
  stdout: ''
  timestamp: 1659799966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i\n \
    \           val y = x - 1\n            val z = y - 1\n            val w = z -\
    \ 1\n            val t = x + y + z + w\n            val s = if (t % 2 == 0) t\
    \ / 2 else t / 2 + 1\n            sum += s\n            evens += s\n        }\n\
    \        evens.size == 4\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw4rtjv4n.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpw4rtjv4n.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpw4rtjv4n.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            sum += s\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Int\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqgavnqoe.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqgavnqoe.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m               "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        val sumOdd = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n    \
    \    val sumEvenSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n  \
    \      val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy64x970f.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpy64x970f.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                           "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumOdd = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n    \
    \    val sumEvenSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2v_5ao10.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2v_5ao10.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                           "
  stdout: ''
  timestamp: 1659799958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.Set[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i % 2\n\
    \            val y = i / 2\n            sum += x\n            if(sum > 4){\n \
    \               evens += y\n                sum = 0\n            }\n        }\n\
    \        evens.size == n\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4i3xj3th.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp4i3xj3th.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4i3xj3th.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            sum += x\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmp4i3xj3th.scala:18:20 -----------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m                sum = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m            \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val sum\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659799971
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = mutable.ListBuffer[Long]()\n        val evenSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum = mutable.ListBuffer[Long]()\n        val evenSumsSum2\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSum3 = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum4 = mutable.ListBuffer[Long]()\n        val evenSumsSum5\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSum6 = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum7 = mutable.ListBuffer[Long]()\n        val evenSumsSum8\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSum9 = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum10 = mutable.ListBuffer[Long]()\n        val evenSumsSum11\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSum12 = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum13 = mutable.ListBuffer[Long]()\n        val evenSumsSum14\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSum15 = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum16 = mutable.ListBuffer[Long]()\n        val evenSumsSum17\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSum18 = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum19 = mutable.ListBuffer[Long]()\n        val evenSumsSum20\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSum21 = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum22 = mutable.ListBuffer[Long]()\n        val evenSumsSum23\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSum24 = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum25 = mutable.ListBuffer[Long]()\n        val evenSumsSum26\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSum27 = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum28 = mutable.ListBuffer[Long]()\n        val evenSumsSum29\
    \ = mut\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk1zrfkd8.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpk1zrfkd8.scala:11:18 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpk1zrfkd8.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mevenSums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpk1zrfkd8.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSum\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpk1zrfkd8.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSum2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpk1zrfkd8.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mv"
  stdout: ''
  timestamp: 1659799970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer(2,\
    \ 4)\n        val sumOdd = mutable.ArrayBuffer(3, 6)\n        val sumEvenSumOdd\
    \ = sumEven.zip(sumOdd)\n        val sumEvenSumOddSum = sumEvenSumOdd.map(x =>\
    \ x._1 + x._2)\n        val sumEvenSumOddSumSum = sumEvenSumOddSum.map(x => x\
    \ * x)\n        val sumEvenSumOddSumSumSum = sumEvenSumOddSumSum.map(x => x *\
    \ x)\n        val sumEvenSumOddSumSumSumSum = sumEvenSumOddSumSumSum.map(x =>\
    \ x * x)\n        val sumEvenSumOddSumSumSumSumSum = sumEvenSumOddSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp522sqnc7.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumSumSumSumSumSumSumSumSumSum\e\
    [0m = sumEvenSumOddSumSumSumSumSumSumSumSumSumSum.map(\e[36mx\e[0m => x * x)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumOddSumSumSumSumSumSumSumSumSumSum is already defined\
    \ as \e[33mvalue\e[0m \e[35msumEvenSumOddSumSumSumSumSumSumSumSumSumSum\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp522sqnc7.scala:25:12 ---------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum\e\
    [0m = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum.map(\e[36mx\e[0m => x\
    \ * x)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum is already\
    \ defined as \e[33mvalue\e[0m \e[35msumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp522sqnc7.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m4\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp522sqnc7.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumOdd\e[0m = mutable.ArrayBuffer(\e\
    [31m3\e[0m, \e[31m6\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        sumEven.clear()\n        sumEven.push(2)\n        sumEven.push(3)\n \
    \       sumEven.push(4)\n        sumEven.push(5)\n        sumEven.push(6)\n  \
    \      sumEven.push(7)\n        sumEven.push(8)\n        sumEven.push(9)\n   \
    \     sumEven.push(10)\n        sumEven.push(11)\n        sumEven.push(12)\n \
    \       sumEven.push(13)\n        sumEven.push(14)\n        sumEven.push(15)\n\
    \        sumEven.push(16)\n        sumEven.push(17)\n        sumEven.push(18)\n\
    \        sumEven.push(19)\n        sumEven.push(20)\n        sumEven.push(21)\n\
    \        sumEven.push(22)\n        sumEven.push(23)\n        sumEven.push(24)\n\
    \        sumEven.push(25)\n        sumEven.push(26)\n        sumEven.push(27)\n\
    \        sumEven.push(28)\n        sumEven.push(29)\n        sumEven.push(30)\n\
    \        sumEven.push(31)\n        sumEven.push(32)\n        sumEven.push(33)\n\
    \        sumEven.push(34)\n        sumEven.push(35)\n        sumEven.push(36)\n\
    \        sumEven.push(37)\n        sumEven.push(38)\n        sumEven.push(39)\n\
    \        sumEven.push(40)\n        sumEven.push(41)\n        sumEven.push(42)\n\
    \        sumEven.push(43)\n        sumEven.push(44)\n        sumEven.push(45)\n\
    \        sumEven.push(46)\n        sumEven.push(47)\n        sumEven.push(48)\n\
    \        sumEven.push(49)\n        sumEven.push(50)\n        sumEven.push(51)\n\
    \        sumEven.push(52)\n        sumEven.push(53)\n        sumEven.push(54)\n\
    \        sumEven.push(55)\n        sumEven.push(56)\n        sumEven.push(57)\n\
    \        sumEven.push(58)\n        sumEven.push(59)\n        sumEven.push(60)\n\
    \        sumEven.push(61)\n        sumEven.push(62)\n        sumEven.push(63)\n\
    \        sumEven.push(64)\n        sumEven.push(65)\n        sumEven.push(66)\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppc83541w.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = mutable.ListBuffer[Long]()\n        val evenSum = mutable.ListBuffer[Long]()\n\
    \        val evenSums = mutable.ListBuffer[Long]()\n        val evenSumsSum =\
    \ mutable.ListBuffer[Long]()\n        val evenSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSum = mutable.ListBuffer[Long]()\n        val evenSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSums = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n      \
    \  val evenSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n        val\
    \ evenSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSums\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwsdqq33_.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwsdqq33_.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwsdqq33_.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSums is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwsdqq33_.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwsdqq33_.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSum"
  stdout: ''
  timestamp: 1659799970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n) {\n            val x = i %\
    \ 2\n            val y = i / 2\n            sum += x\n            evens += y\n\
    \        }\n        evens.size == 4 && sum == n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp30anjy4y.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp30anjy4y.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp30anjy4y.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            sum += x\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799971
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evens = mutable.ArrayBuffer.empty[Long]\n        val evenSum = 0\n\
    \        val evenSums = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum\
    \ = 0\n        val evenSumsSums = mutable.ArrayBuffer.empty[Long]\n        val\
    \ evenSumsSumsSum = 0\n        val evenSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSum =\
    \ 0\n        val evenSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = 0\n        val evenSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = 0\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = 0\n        val\
    \ evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = 0\n   \
    \     val evenSumsSumsSumsSumsSumsSums\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp50orkc79.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp50orkc79.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp50orkc79.scala:11:20\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp50orkc79.scala:13:23\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSums\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m \
    \  |\e[0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp50orkc79.scala:15:27 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36mevenSumsSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp50orkc79.scala:17:31 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumsSums\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m          \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     "
  stdout: ''
  timestamp: 1659799970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.Set[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n) {\n            val x = i\n\
    \            val y = n - i\n            val z = x + y\n            val z2 = z\
    \ * z\n            val z3 = z2 * z\n            val z4 = z3 * z\n            val\
    \ z5 = z4 * z\n            val z6 = z5 * z\n            val z7 = z6 * z\n    \
    \        val z8 = z7 * z\n            val z9 = z8 * z\n            val z10 = z9\
    \ * z\n            val z11 = z10 * z\n            val z12 = z11 * z\n        \
    \    val z13 = z12 * z\n            val z14 = z13 * z\n            val z15 = z14\
    \ * z\n            val z16 = z15 * z\n            val z17 = z16 * z\n        \
    \    val z18 = z17 * z\n            val z19 = z18 * z\n            val z20 = z19\
    \ * z\n            val z21 = z20 * z\n            val z22 = z21 * z\n        \
    \    val z23 = z22 * z\n            val z24 = z23 * z\n            val z25 = z24\
    \ * z\n            val z26 = z25 * z\n            val z27 = z26 * z\n        \
    \    val z28 = z27 * z\n            val z29 = z28 * z\n            val z30 = z29\
    \ * z\n            val z31 = z30 * z\n            val z32 = z31 * z\n        \
    \    val z33 = z32 * z\n            val z34 = z33 * z\n            val z35 = z34\
    \ * z\n            val z36 = z35 * z\n            val z37 = z36 * z\n        \
    \    val z38 = z37 * z\n            val z39 = z38 * z\n            val z40 = z39\
    \ * z\n            val z41 = z40 * z\n            val z42 = z41 * z\n        \
    \    val z43 = z42 * z\n            val z44 = z43 * z\n            val z45 = z44\
    \ * z\n            val z46 = z45 * z\n            val z47 = z46 * z\n        \
    \    val z48 = z47 * z\n            val z49 = z48 * z\n            val z50 = z49\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqc7v1w5k.scala:78:0 ----------------------------\e\
    [0m\e[0m\n\e[31m78 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqc7v1w5k.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m       \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqc7v1w5k.scala:12:25\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpqc7v1w5k.scala:77:1 ---------------------\e[0m\e\
    [0m\n\e[31m77 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:  \
    \  Unit\n\e[31m   |\e[0m Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[33m\e[33m-- Warning:\
    \ /tmp/tmpqc7v1w5k.scala:66:4 ----------------------------------------\e[0m\e\
    [0m\n\e[33m66 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e\
    [0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m\
    \    Line is indented too far to the left, or a `}` is missing\n1 warning found\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659799971
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        var sum = 0\n        for(i <- 0 until n){\n            sum += i\n   \
    \         if(sum % 2 == 0){\n                sumEven.append(sum)\n           \
    \ }\n        }\n        sumEven.size == 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp5cmaxyn.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpp5cmaxyn.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Int\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqgavnqoe.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqgavnqoe.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m               "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Int]\n\
    \        val sum = 0\n        for(i <- 0 until n){\n            val x = i\n  \
    \          val y = n - i\n            val z = (x + y) / 2\n            val k =\
    \ z % 2 == 0\n            val v = if (k) x else y\n            evens.append(v)\n\
    \            sum += v\n        }\n        evens.size == 4 && sum == n\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmu1_yyej.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpmu1_yyej.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmu1_yyej.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            sum += v\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799971
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Int]\n\
    \        val sum = mutable.ArrayBuffer.empty[Int]\n        val n = n.toInt\n \
    \       val evenSum = mutable.ArrayBuffer.empty[Int]\n        val evenSums = mutable.ArrayBuffer.empty[Int]\n\
    \        val evenSumsSum = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val evenSumsSumsSums = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSums = mutable.ArrayBuffer.empty[Int]\n\
    \        val evenSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Int]\n      \
    \  val evenSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Int]\n        val\
    \ evenSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mut\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmplyak1ear.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSumsSum is already defined\
    \ as \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmplyak1ear.scala:32:12 ---------------------------\e[0m\e[0m\n\e[31m32\
    \ |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSums\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSumsSums is already defined\
    \ as \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmplyak1ear.scala:10:20 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e\
    [0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmplyak1ear.scala:11:18 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E045]\
    \ Cyclic Error: /tmp/tmplyak1ear.scala:12:16 ---------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m  "
  stdout: ''
  timestamp: 1659799970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val evens = mutable.ArrayBuffer.empty[Int]\n        val evensSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEven = mutable.ArrayBuffer.empty[Int]\n        val evensSumEvenSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evensSumEvenSumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEvenSumEvenSum = mutable.ArrayBuffer.empty[Int]\n       \
    \ val evensSumEvenSumEvenSumEven = mutable.ArrayBuffer.empty[Int]\n        val\
    \ evensSumEvenSumEvenSumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val\
    \ evensSumEvenSumEvenSumEvenSumEven = mutable.ArrayBuffer.empty[Int]\n       \
    \ val evensSumEvenSumEvenSumEvenSumEvenSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEvenSumEvenSumEvenSumEvenSumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEvenSumEvenSumEvenSumEvenSumEvenSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEvenSumEvenSumEvenSumEvenSumEvenSumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEvenSumEvenSumEvenSumEvenSumEvenSumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val evensSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evensSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEven\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evensSumEven\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyx9qadu7.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyx9qadu7.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevensSumEvenSumEvenSumEvenSumEvenSumEvenSumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevensSumEvenSumEvenSumEvenSumEvenSumEvenSumEven is already\
    \ defined as \e[33mvalue\e[0m \e[35mevensSumEvenSumEvenSumEvenSumEvenSumEvenSumEven\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpyx9qadu7.scala:29:12 ---------------------------\e[0m\e[0m\n\e\
    [31m29 |\e[0m        \e[33mval\e[0m \e[36mevensSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEven\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevensSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEven\
    \ is already defined as \e[33mvalue\e[0m \e[35mevensSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEvenSumEven\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpyx9qadu7.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpyx9qadu7.scala:11:20 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty"
  stdout: ''
  timestamp: 1659799970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        val sumOdd = mutable.ListBuffer[Long]()\n        val sumEvenSumOdd =\
    \ mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOdd = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ListBuffer[Long]()\n        val\
    \ sumEvenSumOddSumOddSumOddSumOdd = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpreurwatd.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpreurwatd.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpreurwatd.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpreurwatd.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m \
    \  |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpreurwatd.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpreurwatd.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \                             ^^^^^^^\e[0m\n\e["
  stdout: ''
  timestamp: 1659799970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Long\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp12dgrhe7.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp12dgrhe7.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m          "
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n        val\
    \ sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumSumSumSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpzeedwemq.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzeedwemq.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzeedwemq.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzeedwemq.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSumSumSumSumSumSum is already defined as\
    \ \e[33mvalue\e[0m \e[35msumEvenSumSumSumSumSumSumSumSumSumSum\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzeedwemq.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSumSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty"
  stdout: ''
  timestamp: 1659799971
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        var sum = 0L\n        for(i <- 0 until n){\n            sum += i\n  \
    \          if(sum == 4){\n                sumEven.append(i)\n            }\n \
    \       }\n        sumEven.length == n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpezvgf2ez.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpezvgf2ez.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799971
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            if(i % 2 == 0){\n\
    \                evens += i\n                sum += i\n            }\n       \
    \ }\n        evens.size == 4\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkc70x8va.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpkc70x8va.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkc70x8va.scala:15:20\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799971
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Int]\n\
    \        val sum = mutable.ArrayBuffer.empty[Int]\n        val n = n.toInt\n \
    \       for(i <- 0 until n) {\n            val x = i\n            val y = n -\
    \ i\n            val z = x + y\n            val a = z.toInt\n            val b\
    \ = z - a\n            val c = b + a\n            val d = c + a\n            val\
    \ e = d + a\n            val f = e + a\n            val g = f + a\n          \
    \  val h = g + a\n            val i = h + a\n            val j = i + a\n     \
    \       val k = j + a\n            val l = k + a\n            val m = l + a\n\
    \            val n = m + a\n            val o = n + a\n            val p = o +\
    \ a\n            val q = p + a\n            val r = q + a\n            val s =\
    \ r + a\n            val t = s + a\n            val u = t + a\n            val\
    \ v = u + a\n            val w = v + a\n            val x = w + a\n          \
    \  val y = x + a\n            val z = y + a\n            val a = z.toInt\n   \
    \         val b = z - a\n            val c = b + a\n            val d = c + a\n\
    \            val e = d + a\n            val f = e + a\n            val g = f +\
    \ a\n            val h = g + a\n            val i = h + a\n            val j =\
    \ i + a\n            val k = j + a\n            val l = k + a\n            val\
    \ m = l + a\n            val n = m + a\n            val o = n + a\n          \
    \  val p = o + a\n            val q = p + a\n            val r = q + a\n     \
    \       val s = r + a\n            val t = s + a\n            val u = t + a\n\
    \            val v = u + a\n            val w = v + a\n            val x = w +\
    \ a\n            val y = x + a\n            val z = y + a\n            val a =\
    \ z.toInt\n            val b = z - a\n            val c = b + a\n            val\
    \ d = c + a\n            val e = d + a\n            val f = e + a\n          \
    \  val g = f + a\n            val h = g + a\n            val i = h + a\n     \
    \       val j = i + a\n            val k = j + a\n            val l = k + a\n\
    \            val m = l + a\n            val n = m + a\n            val o = n +\
    \ a\n            val p = o + a\n            val q = p + a\n            val r =\
    \ q + a\n            val s = r + a\n            val t = s + a\n            val\
    \ u = t + a\n            val \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp5e_ddt81.scala:90:15 ---------------------------\e\
    [0m\e[0m\n\e[31m90 |\e[0m            \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m  \
    \             ^\e[0m\n\e[31m   |\e[0m               pattern expected\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5e_ddt81.scala:104:0 ---------------------------\e\
    [0m\e[0m\n\e[31m104 |\e[0m\n\e[31m\e[31m    |\e[0m^\e[0m\n\e[31m    |\e[0m'}'\
    \ expected, but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5e_ddt81.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5e_ddt81.scala:11:18\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m\
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp5e_ddt81.scala:12:16\
    \ ---------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = n.toInt\n\e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m\
    \   |\e[0m                Recursive \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5e_ddt81.scala:103:1\
    \ --------------------\e[0m\e[0m\n\e[31m103 |\e[0m}\n\e[31m\e[31m    |\e[0m ^\e\
    [0m\n\e[31m    |\e[0m Found:    Unit\n\e[31m    |\e[0m Required: Boolean\n\e[31m\
    \    |\e[0m\n\e[31m    |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[33m\e[33m-- Warning: /tmp/tmp5e_ddt81.scala:92:4 ----------------------------------------\e\
    [0m\e[0m\n\e[33m92 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36marg"
  stdout: ''
  timestamp: 1659799979
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven += i\n            }\n        }\n        sumEven.size == 4\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppi1efido.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmppi1efido.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799979
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Int\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqgavnqoe.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqgavnqoe.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m               "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount2\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount3 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount4 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount7 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount8\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount9 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount10 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount13 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount16 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount19 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount20\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount21 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount22 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount25 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount28 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount29\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount30 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount31 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount32\
    \ = mutable.ArrayBuffer.empty[Long]\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcgyzy_zn.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpcgyzy_zn.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpcgyzy_zn.scala:12:28 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpcgyzy_zn.scala:13:28 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpcgyzy_zn.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tm"
  stdout: ''
  timestamp: 1659799978
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i\n \
    \           val y = n - i\n            val z = x + y\n            val z2 = z *\
    \ z\n            val z3 = z2 * z\n            val z4 = z3 * z\n            val\
    \ z5 = z4 * z\n            val z6 = z5 * z\n            val z7 = z6 * z\n    \
    \        val z8 = z7 * z\n            val z9 = z8 * z\n            val z10 = z9\
    \ * z\n            val z11 = z10 * z\n            val z12 = z11 * z\n        \
    \    val z13 = z12 * z\n            val z14 = z13 * z\n            val z15 = z14\
    \ * z\n            val z16 = z15 * z\n            val z17 = z16 * z\n        \
    \    val z18 = z17 * z\n            val z19 = z18 * z\n            val z20 = z19\
    \ * z\n            val z21 = z20 * z\n            val z22 = z21 * z\n        \
    \    val z23 = z22 * z\n            val z24 = z23 * z\n            val z25 = z24\
    \ * z\n            val z26 = z25 * z\n            val z27 = z26 * z\n        \
    \    val z28 = z27 * z\n            val z29 = z28 * z\n            val z30 = z29\
    \ * z\n            val z31 = z30 * z\n            val z32 = z31 * z\n        \
    \    val z33 = z32 * z\n            val z34 = z33 * z\n            val z35 = z34\
    \ * z\n            val z36 = z35 * z\n            val z37 = z36 * z\n        \
    \    val z38 = z37 * z\n            val z39 = z38 * z\n            val z40 = z39\
    \ * z\n            val z41 = z40 * z\n            val z42 = z41 * z\n        \
    \    val z43 = z42 * z\n            val z44 = z43 * z\n            val z45 = z44\
    \ * z\n            val z46 = z45 * z\n            val z47 = z46 * z\n        \
    \    val z48 = z47 * z\n            val z49 = z48 * z\n            val z50 = \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp74pomq4p.scala:64:21 ---------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m            \e[33mval\e[0m \e[36mz50\e[0m = \n\e[31m\e\
    [31m   |\e[0m                     ^\e[0m\n\e[31m   |\e[0m                    \
    \ expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E040] Syntax Error: /tmp/tmp74pomq4p.scala:78:0 ----------------------------\e\
    [0m\e[0m\n\e[31m78 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp74pomq4p.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp74pomq4p.scala:12:25\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp74pomq4p.scala:77:1 ---------------------\e[0m\e\
    [0m\n\e[31m77 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:  \
    \  Unit\n\e[31m   |\e[0m Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[33m\e[33m-- Warning:\
    \ /tmp/tmp74pomq4p.scala:66:4 ----------------------------------------\e[0m\e\
    [0m\n\e[33m66 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e\
    [0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m\
    \    Line is indented too far to the left, or a `}` is missing\n1 warning found\n\
    5 errors found\n"
  stdout: ''
  timestamp: 1659799981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum = mutable.ListBuffer[Long]()\n        val sumEvenSum2\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum3 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum4 = mutable.ListBuffer[Long]()\n        val sumEvenSum5\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum6 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum7 = mutable.ListBuffer[Long]()\n        val sumEvenSum8\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum9 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum10 = mutable.ListBuffer[Long]()\n        val sumEvenSum11\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum12 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum13 = mutable.ListBuffer[Long]()\n        val sumEvenSum14\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum15 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum16 = mutable.ListBuffer[Long]()\n        val sumEvenSum17\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum18 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum19 = mutable.ListBuffer[Long]()\n        val sumEvenSum20\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum21 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum22 = mutable.ListBuffer[Long]()\n        val sumEvenSum23\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum24 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum25 = mutable.ListBuffer[Long]()\n        val sumEvenSum26\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum27 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum28 = mutable.ListBuffer[Long]()\n        val sumEvenSum29\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum30 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum31 = mutable.ListBuffer[Long]()\n        val sumEvenSum32\
    \ = mutable.ListBuffer[Long]\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:12:26 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:15:26 ------------------------\e\
    [0"
  stdout: ''
  timestamp: 1659799958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Long\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp12dgrhe7.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp12dgrhe7.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m          "
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evens = mutable.ArrayBuffer.empty[Long]\n        val evensSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evensSumEven = mutable.ArrayBuffer.empty[Long]\n        val evensSumEvenEven\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evensSumEvenEvenEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evensSumEvenEvenEvenEven = mutable.ArrayBuffer.empty[Long]\n    \
    \    val evensSumEvenEvenEvenEvenEven = mutable.ArrayBuffer.empty[Long]\n    \
    \    val evensSumEvenEvenEvenEvenEvenEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evensSumEvenEvenEvenEvenEvenEvenEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evensSumEvenEvenEvenEvenEvenEvenEvenEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evensSumEvenEvenEvenEvenEvenEvenEvenEvenEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpo2ua4ffw.scala:32:4 ----------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo2ua4ffw.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  evensSumEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEvenEven\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpo2ua4ffw.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpo2ua4ffw.scala:11:20 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpo2ua4ffw.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mevensSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[3"
  stdout: ''
  timestamp: 1659799980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (n % 2 == 0 && sumEven.contains(i)\
    \ == false) {\n                sumEven.append(i)\n            }\n        }\n \
    \       sumEven.length == 4\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpplfwbbz8.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpplfwbbz8.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenEven = mutable.ListBuffer[Long]()\n        val sumEvenOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumOdd = mutable.ListBuffer[Long]()\n\
    \        val sumEvenEvenOdd = mutable.ListBuffer[Long]()\n        val sumEvenOddOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumOddOdd = mutable.ListBuffer[Long]()\n\
    \        val sumEvenEvenOddOdd = mutable.ListBuffer[Long]()\n        val sumEvenOddOddOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumOddOddOdd = mutable.ListBuffer[Long]()\n\
    \        val sumEvenEvenOddOddOdd = mutable.ListBuffer[Long]()\n        val sumEvenOddOddOddOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumOddOddOddOdd = mutable.ListBuffer[Long]()\n\
    \        val sumEvenEvenOddOddOddOdd = mutable.ListBuffer[Long]()\n        val\
    \ sumEvenOddOddOddOddOdd = mutable.ListBuffer[Long]()\n        val sumOddOddOddOddOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenEvenOddOddOddOddOdd = mutable.ListBuffer[Long]()\n\
    \        val sumEvenOddOddOddOddOddOdd = mutable.ListBuffer[Long]()\n        val\
    \ sumOddOddOddOddOddOdd = mutable.ListBuffer[Long]()\n        val sumEvenEvenOddOddOddOddOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenOddOddOddOddOddOdd = mutable.ListBuffer[Long]()\n\
    \        val sumOddOddOddOddOddOdd = mutable.ListBuffer[Long]()\n        val sumEvenEvenOddOddOddOddOddOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenOddOddOddOddOddOddOdd = mutable.ListBuffer[Long]()\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq00pymh7.scala:29:12 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36msumEvenEvenOddOddOddOddOdd\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenEvenOddOddOddOddOdd is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenEvenOddOddOddOddOdd\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq00pymh7.scala:30:12 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36msumEvenOddOddOddOddOddOdd\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenOddOddOddOddOddOdd is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenOddOddOddOddOddOdd\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpq00pymh7.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36msumOddOddOddOddOddOdd\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumOddOddOddOddOddOdd is already defined as \e[33mvalue\e\
    [0m \e[35msumOddOddOddOddOddOdd\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq00pymh7.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpq00pymh7.scala:11:26 ------------------------\e\
    [0m\e[0m\n\e[31m11"
  stdout: ''
  timestamp: 1659799980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.Set[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n) {\n            val remainder\
    \ = n % i\n            sum += i\n            if(remainder == 0) {\n          \
    \      evens += i\n            }\n        }\n        evens.size == 4\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc0qgsvk2.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpc0qgsvk2.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc0qgsvk2.scala:14:16\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            sum += i\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven += i\n            }\n        }\n        sumEven.length == 4\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu52w9t2c.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpu52w9t2c.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evens = mutable.ArrayBuffer.empty[Long]\n        val evenSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum2\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum3 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum4 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum7 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum8\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum9 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum10 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum13 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum16 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum19 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum20\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum21 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum22 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum25 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum28 = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum29\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi6qcuyus.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi6qcuyus.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi6qcuyus.scala:11:20\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi6qcuyus.scala:12:23\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSums\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m \
    \  |\e[0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpi6qcuyus.scala:13:26 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36mevenSumsSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpi6qcuyus.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not f"
  stdout: ''
  timestamp: 1659799981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer(2,\
    \ 4)\n        val sumOdd = mutable.ArrayBuffer(3, 6)\n        val sumEvenSumOdd\
    \ = sumEven.zip(sumOdd)\n        val sumEvenSumOddSum = sumEvenSumOdd.map(x =>\
    \ x._1 + x._2)\n        val sumEvenSumOddSumSum = sumEvenSumOddSum.map(x => x\
    \ * x)\n        val sumEvenSumOddSumSumSum = sumEvenSumOddSumSum.map(x => x *\
    \ x)\n        val sumEvenSumOddSumSumSumSum = sumEvenSumOddSumSumSum.map(x =>\
    \ x * x)\n        val sumEvenSumOddSumSumSumSumSum = sumEvenSumOddSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp522sqnc7.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumSumSumSumSumSumSumSumSumSum\e\
    [0m = sumEvenSumOddSumSumSumSumSumSumSumSumSumSum.map(\e[36mx\e[0m => x * x)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumOddSumSumSumSumSumSumSumSumSumSum is already defined\
    \ as \e[33mvalue\e[0m \e[35msumEvenSumOddSumSumSumSumSumSumSumSumSumSum\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp522sqnc7.scala:25:12 ---------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum\e\
    [0m = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum.map(\e[36mx\e[0m => x\
    \ * x)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum is already\
    \ defined as \e[33mvalue\e[0m \e[35msumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp522sqnc7.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m4\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp522sqnc7.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumOdd\e[0m = mutable.ArrayBuffer(\e\
    [31m3\e[0m, \e[31m6\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSum = 0\n        val evenSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum = 0\n        val evenSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSum = 0\n        val evenSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSum =\
    \ 0\n        val evenSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = 0\n        val evenSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = 0\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = 0\n        val\
    \ evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = 0\n   \
    \     val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSums = \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmptidk0asu.scala:34:70 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSums\e\
    [0m = \n\e[31m\e[31m   |\e[0m                                                \
    \                      ^\e[0m\n\e[31m   |\e[0m                               \
    \        expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmptidk0asu.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmptidk0asu.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mevenSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmptidk0asu.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmptidk0asu.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumsSums\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m          \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                          \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compilin"
  stdout: ''
  timestamp: 1659799981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer(0)\n\
    \        val sumOdd = mutable.ListBuffer(0)\n        val sumEvenSumOdd = mutable.ListBuffer(0)\n\
    \        val sumEvenSumOddSumOdd = mutable.ListBuffer(0)\n        val sumEvenSumOddSumOddSumOdd\
    \ = mutable.ListBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOdd = mutable.ListBuffer(0)\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer(0)\n \
    \       val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer(0)\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer(0)\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer(0)\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer(0)\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaooizl6l.scala:27:4 ----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaooizl6l.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaooizl6l.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ListBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaooizl6l.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ListBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e\
    [0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpaooizl6l.scala:13:34 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaooizl6l.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ListBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m              "
  stdout: ''
  timestamp: 1659799981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Int]\n\
    \        val sumEvenIter = mutable.ListIterator.empty[Int]\n        sumEvenIter.push(2)\n\
    \        sumEvenIter.push(4)\n        sumEvenIter.push(6)\n        sumEvenIter.push(8)\n\
    \        sumEvenIter.push(10)\n        sumEvenIter.push(12)\n        sumEvenIter.push(14)\n\
    \        sumEvenIter.push(16)\n        sumEvenIter.push(18)\n        sumEvenIter.push(20)\n\
    \        sumEvenIter.push(22)\n        sumEvenIter.push(24)\n        sumEvenIter.push(26)\n\
    \        sumEvenIter.push(28)\n        sumEvenIter.push(30)\n        sumEvenIter.push(32)\n\
    \        sumEvenIter.push(34)\n        sumEvenIter.push(36)\n        sumEvenIter.push(38)\n\
    \        sumEvenIter.push(40)\n        sumEvenIter.push(42)\n        sumEvenIter.push(44)\n\
    \        sumEvenIter.push(46)\n        sumEvenIter.push(48)\n        sumEvenIter.push(50)\n\
    \        sumEvenIter.push(52)\n        sumEvenIter.push(54)\n        sumEvenIter.push(56)\n\
    \        sumEvenIter.push(58)\n        sumEvenIter.push(60)\n        sumEvenIter.push(62)\n\
    \        sumEvenIter.push(64)\n        sumEvenIter.push(66)\n        sumEvenIter.push(68)\n\
    \        sumEvenIter.push(70)\n        sumEvenIter.push(72)\n        sumEvenIter.push(74)\n\
    \        sumEvenIter.push(76)\n        sumEvenIter.push(78)\n        sumEvenIter.push(80)\n\
    \        sumEvenIter.push(82)\n        sumEvenIter.push(84)\n        sumEvenIter.push(86)\n\
    \        sumEvenIter.push(88)\n        sumEvenIter.push(90)\n        sumEvenIter.push(92)\n\
    \        sumEvenIter.push(94)\n        sumEvenIter.push(96)\n        sumEvenIter.push(98)\n\
    \        sumEvenIter.push(100)\n        sumEvenIter.push(102)\n        sumEvenIter.push(104)\n\
    \        sumEvenIter.push(106)\n        sumEvenIter.push(108)\n        sumEvenIter.push(110)\n\
    \        sumEvenIter.push(112)\n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9trxqcnn.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp9trxqcnn.scala:11:26 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenIter\e[0m = mutable.ListIterator.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799976
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ListBuffer.empty[Long]\n        val sumEvenSum2\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum3 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum4 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum5\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum6 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum7 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum8\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum9 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum10 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum11\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum12 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum13 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum14\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum15 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum16 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum17\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum18 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum19 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum20\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum21 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum22 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum23\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum24 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum25 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum26\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum27 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum28 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum29\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum30 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum31 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum32\
    \ = mutable.ListBuffer.empty[Long\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7c4m8p1p.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7c4m8p1p.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7c4m8p1p.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp7c4m8p1p.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp7c4m8p1p.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp7c4m8p1p.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m               "
  stdout: ''
  timestamp: 1659799981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        sumEven.clear()\n        var sum = 0\n        var even = 1\n        while\
    \ (even <= n) {\n            sum += even\n            even *= 2\n        }\n \
    \       sumEven.clear()\n        while (sumEven.size < 4) {\n            sumEven.append(sum)\n\
    \            sum += even\n            even *= 2\n        }\n        sumEven.size\
    \ == 4\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8apl4kw1.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799979
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven.append(i)\n            }\n        }\n        sumEven.size == 4\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp848izor3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp848izor3.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799967
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer(2L,\
    \ 4L, 6L, 8L)\n        evens.takeWhile(_ < n).forall(n => n % _ == 0)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0kld5u8t.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer(\e\
    [31m2L\e[0m, \e[31m4L\e[0m, \e[31m6L\e[0m, \e[31m8L\e[0m)\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799977
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Int\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqgavnqoe.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqgavnqoe.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m               "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        for(i <- 0 until n){\n            if((i%2) == 0){\n                sumEven.append(i)\n\
    \            }\n        }\n        sumEven.size == 4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwppzfz65.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpwppzfz65.scala:11:25 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799982
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount2\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount3 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount4 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount7 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount8\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount9 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount10 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount13 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount16 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount19 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount20\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount21 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount22 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount25 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount28 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount29\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount30 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount31 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenCount32\
    \ = mutable.ArrayBuffer.empty[Long]\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcgyzy_zn.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpcgyzy_zn.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpcgyzy_zn.scala:12:28 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpcgyzy_zn.scala:13:28 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpcgyzy_zn.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tm"
  stdout: ''
  timestamp: 1659799978
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        var sum = 0\n        while (sum < n) {\n            sum += 2\n      \
    \      sumEven.append(sum)\n        }\n        sumEven.size == 4\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzwxeg0m9.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799978
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n){\n            if((i%2) == 0){\n                sumEven.append(i)\n\
    \            }\n        }\n        sumEven.size == 4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppwd_eu3m.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmppwd_eu3m.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799982
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n     \
    \   val sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n        val\
    \ sumEvenSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumSumSumSumCount =\
    \ mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n     \
    \   val sumEvenSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n    \
    \    val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n    \
    \    val sumEvenSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n   \
    \     val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n   \
    \     val sumEvenSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n  \
    \      val sumEvenSumSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumCount = mut\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpm2rmrkm5.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0msumEvenSumSumSumSumCount is already defined as \e[33mvalue\e[0m \e[35msumEvenSumSumSumSumCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpm2rmrkm5.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpm2rmrkm5.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumCount is already defined as \e[33mvalue\e[0m \e\
    [35msumEvenSumSumSumSumSumCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpm2rmrkm5.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumSum is already defined as \e[33mvalue\e[0m \e\
    [35msumEvenSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overl"
  stdout: ''
  timestamp: 1659799981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n     \
    \   val sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n      \
    \  val sumEvenSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumSum =\
    \ mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumCount =\
    \ mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumCount = mut\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpz7rjm3w7.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0msumEvenSumSumSumSumCount is already defined as \e[33mvalue\e[0m \e[35msumEvenSumSumSumSumCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpz7rjm3w7.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpz7rjm3w7.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumCount is already defined as \e[33mvalue\e[0m \e\
    [35msumEvenSumSumSumSumSumCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpz7rjm3w7.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumSum is already defined as \e[33mvalue\e[0m \e\
    [35msumEvenSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloade"
  stdout: ''
  timestamp: 1659799983
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.Set[Long]()\n\
    \        val evenSum = mutable.Set[Long]()\n        val evenSums = mutable.Set[Long]()\n\
    \        val evenSumsSet = mutable.Set[Long]()\n        val evenSumsSet2 = mutable.Set[Long]()\n\
    \        val evenSumsSet3 = mutable.Set[Long]()\n        val evenSumsSet4 = mutable.Set[Long]()\n\
    \        val evenSumsSet5 = mutable.Set[Long]()\n        val evenSumsSet6 = mutable.Set[Long]()\n\
    \        val evenSumsSet7 = mutable.Set[Long]()\n        val evenSumsSet8 = mutable.Set[Long]()\n\
    \        val evenSumsSet9 = mutable.Set[Long]()\n        val evenSumsSet10 = mutable.Set[Long]()\n\
    \        val evenSumsSet11 = mutable.Set[Long]()\n        val evenSumsSet12 =\
    \ mutable.Set[Long]()\n        val evenSumsSet13 = mutable.Set[Long]()\n     \
    \   val evenSumsSet14 = mutable.Set[Long]()\n        val evenSumsSet15 = mutable.Set[Long]()\n\
    \        val evenSumsSet16 = mutable.Set[Long]()\n        val evenSumsSet17 =\
    \ mutable.Set[Long]()\n        val evenSumsSet18 = mutable.Set[Long]()\n     \
    \   val evenSumsSet19 = mutable.Set[Long]()\n        val evenSumsSet20 = mutable.Set[Long]()\n\
    \        val evenSumsSet21 = mutable.Set[Long]()\n        val evenSumsSet22 =\
    \ mutable.Set[Long]()\n        val evenSumsSet23 = mutable.Set[Long]()\n     \
    \   val evenSumsSet24 = mutable.Set[Long]()\n        val evenSumsSet25 = mutable.Set[Long]()\n\
    \        val evenSumsSet26 = mutable.Set[Long]()\n        val evenSumsSet27 =\
    \ mutable.Set[Long]()\n        val evenSumsSet28 = mutable.Set[Long]()\n     \
    \   val evenSumsSet29 = mutable.Set[Long]()\n        val evenSumsSet30 = mutable.Set[Long]()\n\
    \        val evenSumsSet\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmprqjtc18r.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprqjtc18r.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m       \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprqjtc18r.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprqjtc18r.scala:12:23\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSums\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m    \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprqjtc18r.scala:13:26\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSumsSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprqjtc18r.scala:14:27\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSumsSet2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation"
  stdout: ''
  timestamp: 1659799982
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        val evenSum = 0L\n        val evenSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum = 0L\n        val evenSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSum = 0L\n        val evenSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSum = 0L\n        val evenSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSum = 0L\n        val evenSumsSumsSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSum = 0L\n\
    \        val evenSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n     \
    \   val evenSumsSumsSumsSumsSumsSumsSum = 0L\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = 0L\n        val evenSumsSumsSumsSumsSumsSumsSumsSum = 0L\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = 0L\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = 0L\n       \
    \ val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = 0L\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = 0L\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum =\
    \ 0L\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = 0L\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = 0L\n        val evenSumsSumsSumsSumsSumsSums\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbzl63lwt.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbzl63lwt.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = \e[31m0L\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as \e[33mvalue\e\
    [0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbzl63lwt.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbzl63lwt.scala:13:23\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSums\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbzl63lwt.scala:15:27\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSumsSums\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  \
    \ |\e[0m                           ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpbzl63lwt.scala:17:31 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m        \e[33mval\e[0m \e[36mevenSumsSumsSums\e[0m = mutable.ListBuffer[\e\
    [3"
  stdout: ''
  timestamp: 1659799982
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        val sumOdd = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n    \
    \    val sumEvenSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n  \
    \      val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy64x970f.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpy64x970f.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                           "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum = mutable.ListBuffer[Long]()\n        val sumEvenSumSum\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSum = mutable.ListBuffer[Long]()\n        val sumEvenSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n        val\
    \ sumEvenSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n        val sumEvenSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumSumSumSumSumSumSumSum =\
    \ mutable.ListBuffer[Long]()\n        val sumEvenSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdlxnxjxj.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdlxnxjxj.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSum\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdlxnxjxj.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdlxnxjxj.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSumSum\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdlxnxjxj.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSumSumSumSumSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659799989
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumOdd = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n    \
    \    val sumEvenSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2v_5ao10.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2v_5ao10.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2v_5ao10.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                           "
  stdout: ''
  timestamp: 1659799958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 1 to n) {\n            val x = i\n   \
    \         val y = x - 1\n            val z = y - 1\n            val w = z - 1\n\
    \            val s = x + y + z + w\n            if(s % 2 == 0) {\n           \
    \     evens += s\n                sum += s\n            }\n        }\n       \
    \ evens.size == 4 && sum == n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpptuihwqq.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpptuihwqq.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpptuihwqq.scala:20:20\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                sum += s\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799990
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.Set[Long]()\n\
    \        val sum = mutable.Set[Long]()\n        val evenSums = mutable.Set[Long]()\n\
    \        val evenSumsSum = mutable.Set[Long]()\n        val evenSumsSum2 = mutable.Set[Long]()\n\
    \        val evenSumsSum3 = mutable.Set[Long]()\n        val evenSumsSum4 = mutable.Set[Long]()\n\
    \        val evenSumsSum5 = mutable.Set[Long]()\n        val evenSumsSum6 = mutable.Set[Long]()\n\
    \        val evenSumsSum7 = mutable.Set[Long]()\n        val evenSumsSum8 = mutable.Set[Long]()\n\
    \        val evenSumsSum9 = mutable.Set[Long]()\n        val evenSumsSum10 = mutable.Set[Long]()\n\
    \        val evenSumsSum11 = mutable.Set[Long]()\n        val evenSumsSum12 =\
    \ mutable.Set[Long]()\n        val evenSumsSum13 = mutable.Set[Long]()\n     \
    \   val evenSumsSum14 = mutable.Set[Long]()\n        val evenSumsSum15 = mutable.Set[Long]()\n\
    \        val evenSumsSum16 = mutable.Set[Long]()\n        val evenSumsSum17 =\
    \ mutable.Set[Long]()\n        val evenSumsSum18 = mutable.Set[Long]()\n     \
    \   val evenSumsSum19 = mutable.Set[Long]()\n        val evenSumsSum20 = mutable.Set[Long]()\n\
    \        val evenSumsSum21 = mutable.Set[Long]()\n        val evenSumsSum22 =\
    \ mutable.Set[Long]()\n        val evenSumsSum23 = mutable.Set[Long]()\n     \
    \   val evenSumsSum24 = mutable.Set[Long]()\n        val evenSumsSum25 = mutable.Set[Long]()\n\
    \        val evenSumsSum26 = mutable.Set[Long]()\n        val evenSumsSum27 =\
    \ mutable.Set[Long]()\n        val evenSumsSum28 = mutable.Set[Long]()\n     \
    \   val evenSumsSum29 = mutable.Set[Long]()\n        val evenSumsSum30 = mutable.Set[Long]()\n\
    \        val evenSumsSum31 = \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3mzpxqs7.scala:43:27 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSum31\e[0m = \n\e\
    [31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m        \
    \                   expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3mzpxqs7.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3mzpxqs7.scala:11:18 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3mzpxqs7.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mevenSums\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3mzpxqs7.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSum\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp3mzpxqs7.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSum2\e[0m = mutable.Set[\e"
  stdout: ''
  timestamp: 1659799990
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i % 2\n\
    \            val y = i / 2\n            sum += x\n            evens += y\n   \
    \     }\n        evens.size == 4 && sum == n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyaqtm66b.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpyaqtm66b.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyaqtm66b.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            sum += x\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer(4,\
    \ 6, 8)\n        sumEven.takeWhile(_ < n).forall(n => n % _ == 0)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6u4t6cae.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer(\e\
    [31m4\e[0m, \e[31m6\e[0m, \e[31m8\e[0m)\n\e[31m\e[31m   |\e[0m               \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799986
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSquare = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSquareSumCount = mutable.ArrayBuffer.empty[Int]\n     \
    \   val sumEvenSumSquareSumSquare = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSquareSumSquareCount = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSquareSumSquareSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquare\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSumSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSumSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSumSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSumSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSquareSumSquareSumSquareSumSum\
    \ = mutable.ArrayBuffer.empty\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9cujr88f.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSquareSumSquareSumSquareSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSquareSumSquareSumSquareSum is already defined as\
    \ \e[33mvalue\e[0m \e[35msumEvenSumSquareSumSquareSumSquareSum\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9cujr88f.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSquareSumSquareSumSquareSumCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSquareSumSquareSumSquareSumCount is already defined\
    \ as \e[33mvalue\e[0m \e[35msumEvenSumSquareSumSquareSumSquareSumCount\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp9cujr88f.scala:29:12 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSquareSumSquareSumSquareSumCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSquareSumSquareSumSquareSumCount is already defined\
    \ as \e[33mvalue\e[0m \e[35msumEvenSumSquareSumSquareSumSquareSumCount\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp9cujr88f.scala:30:12 ---------------------------\e[0m\e[0m\n\e[31m30\
    \ |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSquareSumSquareSumSquareSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659799990
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                sumEven.append(i)\n\
    \            }\n        }\n        sumEven.size == 4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6btf21ym.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp6btf21ym.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.Set[Long]()\n\
    \        val sum = mutable.Set[Long]()\n        val evenSum = mutable.Set[Long]()\n\
    \        val evenSums = mutable.Set[Long]()\n        val evenSumsSum = mutable.Set[Long]()\n\
    \        val evenSumsSums = mutable.Set[Long]()\n        val evenSumsSumsSum =\
    \ mutable.Set[Long]()\n        val evenSumsSumsSums = mutable.Set[Long]()\n  \
    \      val evenSumsSumsSumsSum = mutable.Set[Long]()\n        val evenSumsSumsSumsSums\
    \ = mutable.Set[Long]()\n        val evenSumsSumsSumsSumsSum = mutable.Set[Long]()\n\
    \        val evenSumsSumsSumsSumsSums = mutable.Set[Long]()\n        val evenSumsSumsSumsSumsSumsSum\
    \ = mutable.Set[Long]()\n        val evenSumsSumsSumsSumsSumsSums = mutable.Set[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSum = mutable.Set[Long]()\n        val\
    \ evenSumsSumsSumsSumsSumsSumsSums = mutable.Set[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.Set[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSums = mutable.Set[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.Set[Long]()\n \
    \       val evenSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.Set[Long]()\n \
    \       val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.Set[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.Set[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.Set[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvd_4o18d.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvd_4o18d.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m       \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvd_4o18d.scala:11:18\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m         \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvd_4o18d.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvd_4o18d.scala:13:23\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSums\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m    \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvd_4o18d.scala:14:26\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSumsSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling w"
  stdout: ''
  timestamp: 1659799991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSum = 0\n        val evenSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSum = 0\n        val evenSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSum = 0\n        val evenSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSum =\
    \ 0\n        val evenSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = 0\n        val evenSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum = 0\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = 0\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = 0\n        val\
    \ evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = 0\n       \
    \ val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqnbeebr4.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpqnbeebr4.scala:10:20 ------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpqnbeebr4.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mevenSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpqnbeebr4.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqnbeebr4.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumsSums\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m          \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                          \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqnbeebr4.scala:18:35 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mevenSumsSumsSumsSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                   ^"
  stdout: ''
  timestamp: 1659799991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i\n \
    \           val y = n - i\n            val sum = x + y\n            val even =\
    \ if (sum % 2 == 0) sum else sum - 1\n            evens += even\n        }\n \
    \       evens.size == 4\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsie2byke.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpsie2byke.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799992
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i\n \
    \           val y = x + 1\n            val z = y + 1\n            val w = z +\
    \ 1\n            val t = w + 1 \n            evens += x\n            evens +=\
    \ y\n            evens += z\n            evens += w\n            evens += t\n\
    \            sum += x\n            sum += y\n            sum += z\n          \
    \  sum += w\n            sum += t\n        }\n        evens.size == 4 && sum ==\
    \ n\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpilr73sho.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpilr73sho.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpilr73sho.scala:23:16\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m            sum += x\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpilr73sho.scala:24:16 ------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m            sum += y\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e\
    [31m   |\e[0m            value += is not a member of Long - did you mean sum.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpilr73sho.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            sum += z\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Long -\
    \ did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpilr73sho.scala:26:16\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m            sum += w\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpilr73sho.scala:27:16 ------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m            sum += t\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e\
    [31m   |\e[0m            value += is not a member of Long - did you mea"
  stdout: ''
  timestamp: 1659799993
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i\n \
    \           val y = x + 1\n            val z = y + 1\n            val w = z +\
    \ 1\n            val a = x + y + z + w\n            evens.add(a)\n           \
    \ sum += a\n        }\n        evens.size == 4 && sum == n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8_ykzjt_.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp8_ykzjt_.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8_ykzjt_.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            sum += a\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799993
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Int\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqgavnqoe.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqgavnqoe.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m               "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = mutable.ArrayBuffer.empty[Long]\n        val evenSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSums = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n        val\
    \ evenSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSum =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSums\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjegsma9a.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSums is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0"
  stdout: ''
  timestamp: 1659799991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0\n        for(i <- 1 to n){\n            val x = i\n     \
    \       val y = x - 1\n            val z = y - 1\n            val w = z - 1\n\
    \            val t = x * y * z * w\n            if(t % 2 == 0){\n            \
    \    evens += t\n            }\n            sum += t\n        }\n        evens.size\
    \ == 4\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbnqw1iak.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpbnqw1iak.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbnqw1iak.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += t\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799993
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer(0)\n\
    \        val sumEvenSum = mutable.ListBuffer(0)\n        val sumEvenSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSum = mutable.ListBuffer(0)\n        val sumEvenSumSumSumSum\
    \ = mutable.ListBuffer(0)\n        val sumEvenSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSum = mutable.ListBuffer(0)\n        val sumEvenSumSumSumSumSumSum\
    \ = mutable.ListBuffer(0)\n        val sumEvenSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n       \
    \ val sumEvenSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n        val sumEvenSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer(0)\n        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n \
    \       val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ListBuffer(0)\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp919h2r53.scala:36:11 ---------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp919h2r53.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSum\e\
    [0m = mutable.ListBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp919h2r53.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSumSum\e\
    [0m = mutable.ListBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp919h2r53.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSumSumSumSum\e[0m = mutable.ListBuffer(\e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp919h2r53.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSum"
  stdout: ''
  timestamp: 1659799992
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n) {\n            if(i % 2 ==\
    \ 0) {\n                evens += i\n                sum += i\n            }\n\
    \        }\n        evens.size == 4 && sum == n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc37fsojg.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpc37fsojg.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc37fsojg.scala:15:20\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799994
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        var sum = 0\n        for(i <- 0 until n){\n            sum += i\n   \
    \         if(sumEven.contains(sum) && sumEven.size < 4){\n                sumEven.append(sum)\n\
    \            }\n        }\n        sumEven.size == 4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8r8yubxj.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp8r8yubxj.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799994
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val evensSum = mutable.ListBuffer[Long]()\n        val evensSumSum =\
    \ mutable.ListBuffer[Long]()\n        val evensSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val evensSumSumSumSum = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n\
    \        val evensSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n       \
    \ val evensSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n        val\
    \ evensSumSumSumSumSumSumSumSumSum = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val evensSumSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = mutable.ListBuffer[Long\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp48dkvtvz.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp48dkvtvz.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevensSumSumSumSumSumSumSumSumSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevensSumSumSumSumSumSumSumSumSum is already defined as \e\
    [33mvalue\e[0m \e[35mevensSumSumSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp48dkvtvz.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevensSumSumSumSumSumSumSumSumSumSumSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevensSumSumSumSumSumSumSumSumSumSumSum is already defined\
    \ as \e[33mvalue\e[0m \e[35mevensSumSumSumSumSumSumSumSumSumSumSum\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp48dkvtvz.scala:24:12 ---------------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mval\e[0m \e[36mevensSumSumSumSumSumSumSumSumSumSumSum\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevensSumSumSumSumSumSumSumSumSumSumSum is already defined\
    \ as \e[33mvalue\e[0m \e[35mevensSumSumSumSumSumSumSumSumSumSumSum\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp48dkvtvz.scala:25:12 ---------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mval\e[0m \e[36mevensSumSumSumS"
  stdout: ''
  timestamp: 1659799993
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i % 2\n\
    \            val y = i / 2\n            sum += x\n            if(sum == 4){\n\
    \                evens += y\n            }\n        }\n        evens.size == n\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpibawfcv6.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpibawfcv6.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpibawfcv6.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            sum += x\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659799994
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOdd = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n   \
    \     val sumEvenSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpz_dalyxq.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e\
    [31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpz_dalyxq.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \                       "
  stdout: ''
  timestamp: 1659799966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.Set[Long]()\n\
    \        val sumEvenSum = mutable.Set[Long]()\n        val sumEvenSumOfSquares\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSum = mutable.Set[Long]()\n\
    \        val sumEvenSumOfSquareSumOfSquares = mutable.Set[Long]()\n        val\
    \ sumEvenSumOfSquareSumOfSquareSum = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSum\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.Set[Long]()\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOf\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp50hqe913.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp50hqe913.scala:26:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp50hqe913.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp50hqe913.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp50hqe913.scala:12:34 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOfSquares\e[0m\
    \ = mutable.Set[\e[35mLong\e"
  stdout: ''
  timestamp: 1659799994
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n     \
    \   val sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n      \
    \  val sumEvenSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumSum =\
    \ mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumCount =\
    \ mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumSumCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumCount = mut\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpz7rjm3w7.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0msumEvenSumSumSumSumCount is already defined as \e[33mvalue\e[0m \e[35msumEvenSumSumSumSumCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpz7rjm3w7.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpz7rjm3w7.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumCount is already defined as \e[33mvalue\e[0m \e\
    [35msumEvenSumSumSumSumSumCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpz7rjm3w7.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumSum is already defined as \e[33mvalue\e[0m \e\
    [35msumEvenSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloade"
  stdout: ''
  timestamp: 1659799983
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Int\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqgavnqoe.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqgavnqoe.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m               "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n        val\
    \ sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumSumSumSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpff4otw1y.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpff4otw1y.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpff4otw1y.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpff4otw1y.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpff4otw1y.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m     "
  stdout: ''
  timestamp: 1659799994
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer(0)\n\
    \        for(i <- 0 until n){\n            sumEven.updated(i, sumEven(i) + i)\n\
    \        }\n        sumEven.size == 4 && sumEven.forall(x => x % 2 == 0)\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6qspo1zb.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6qspo1zb.scala:11:25 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799994
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven.append(i)\n            }\n        }\n        sumEven.size == 4\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpntkkfzd7.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpntkkfzd7.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799994
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven += i\n            }\n        }\n        sumEven.size == 4\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppi1efido.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmppi1efido.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799979
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer(0)\n\
    \        for(i <- 0 until n){\n            sumEven += i\n        }\n        sumEven.size\
    \ == 4 && sumEven.forall(x => x % 2 == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5t4f3ycn.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5t4f3ycn.scala:11:25 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799998
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        val sumOdd = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n    \
    \    val sumEvenSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n  \
    \      val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy64x970f.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpy64x970f.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                           "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        for(i <- 0 until n){\n            sumEven.append(i)\n        }\n    \
    \    sumEven.forall(x => x % 2 == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpinujnezf.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpinujnezf.scala:11:25 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800001
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer(4,\
    \ 6, 8)\n        sumEven.takeWhile(x => x <= n).forall(x => n % x == 0)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1whidu6k.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer(\e\
    [31m4\e[0m, \e[31m6\e[0m, \e[31m8\e[0m)\n\e[31m\e[31m   |\e[0m               \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799997
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.Set[Long]()\n\
    \        val sumEvenIter = mutable.Set[Long]()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sumEvenIter.clear()\n\
    \        sumEvenIter.clear()\n        sumEvenIter.clear()\n        sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp40g_ufp6.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp40g_ufp6.scala:11:26 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenIter\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp40g_ufp6.scala:81:8 -------------------------\e\
    [0m\e[0m\n\e[31m81 |\e[0m        sum\n\e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e\
    [31m   |\e[0m        Not found: sum\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799997
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        sumEven.+=(n/2)\n        sumEven.+=(n/4)\n        sumEven.+=(n/8)\n \
    \       sumEven.+=(n/16)\n        sumEven.+=(n/32)\n        sumEven.+=(n/64)\n\
    \        sumEven.+=(n/128)\n        sumEven.+=(n/256)\n        sumEven.+=(n/512)\n\
    \        sumEven.+=(n/1024)\n        sumEven.+=(n/2048)\n        sumEven.+=(n/4096)\n\
    \        sumEven.+=(n/8192)\n        sumEven.+=(n/16384)\n        sumEven.+=(n/32768)\n\
    \        sumEven.+=(n/65536)\n        sumEven.+=(n/131072)\n        sumEven.+=(n/262144)\n\
    \        sumEven.+=(n/524288)\n        sumEven.+=(n/1048576)\n        sumEven.+=(n/2097152)\n\
    \        sumEven.+=(n/4194304)\n        sumEven.+=(n/8388608)\n        sumEven.+=(n/16777216)\n\
    \        sumEven.+=(n/33554432)\n        sumEven.+=(n/67108864)\n        sumEven.+=(n/134217728)\n\
    \        sumEven.+=(n/268435456)\n        sumEven.+=(n/536870912)\n        sumEven.+=(n/1073741824)\n\
    \        sumEven.+=(n/2147483648)\n        sumEven.+=(n/4294967296)\n        sumEven.+=(n/8589934592)\n\
    \        sumEven.+=(n/17179869184)\n        sumEven.+=(n/34359738368)\n      \
    \  sumEven.+=(n/68719476736)\n        sumEven.+=(n/137438953472)\n        sumEven.+=(n/274877906944)\n\
    \        sumEven.+=(n/53687091232)\n        sumEven.+=(n/107374182432)\n     \
    \   sumEven.+=(n/214748364800)\n        sumEven.+=(n/429496729632)\n        sumEven.+=(n/858993459216)\n\
    \        sumEven.\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx351lqvg.scala:55:4 ----------------------------\e\
    [0m\e[0m\n\e[31m55 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpx351lqvg.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799997
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        sumEven.clear()\n        for(i <- 0 until n) {\n            if(i % 2\
    \ == 0) {\n                sumEven.append(i)\n            }\n        }\n     \
    \   sumEven.size == 4\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb6cbd8ms.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpb6cbd8ms.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800002
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.Set[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i\n \
    \           val y = n - i\n            val z = x + y\n            val z2 = z *\
    \ z\n            val z3 = z2 * z\n            val z4 = z3 * z\n            val\
    \ z5 = z4 * z\n            val z6 = z5 * z\n            val z7 = z6 * z\n    \
    \        val z8 = z7 * z\n            val z9 = z8 * z\n            val z10 = z9\
    \ * z\n            val z11 = z10 * z\n            val z12 = z11 * z\n        \
    \    val z13 = z12 * z\n            val z14 = z13 * z\n            val z15 = z14\
    \ * z\n            val z16 = z15 * z\n            val z17 = z16 * z\n        \
    \    val z18 = z17 * z\n            val z19 = z18 * z\n            val z20 = z19\
    \ * z\n            val z21 = z20 * z\n            val z22 = z21 * z\n        \
    \    val z23 = z22 * z\n            val z24 = z23 * z\n            val z25 = z24\
    \ * z\n            val z26 = z25 * z\n            val z27 = z26 * z\n        \
    \    val z28 = z27 * z\n            val z29 = z28 * z\n            val z30 = z29\
    \ * z\n            val z31 = z30 * z\n            val z32 = z31 * z\n        \
    \    val z33 = z32 * z\n            val z34 = z33 * z\n            val z35 = z34\
    \ * z\n            val z36 = z35 * z\n            val z37 = z36 * z\n        \
    \    val z38 = z37 * z\n            val z39 = z38 * z\n            val z40 = z39\
    \ * z\n            val z41 = z40 * z\n            val z42 = z41 * z\n        \
    \    val z43 = z42 * z\n            val z44 = z43 * z\n            val z45 = z44\
    \ * z\n            val z46 = z45 * z\n            val z47 = z46 * z\n        \
    \    val z48 = z47 * z\n            val z49 = z48 * z\n            val z50 = z\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpeo8ercj4.scala:78:0 ----------------------------\e\
    [0m\e[0m\n\e[31m78 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeo8ercj4.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m       \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpeo8ercj4.scala:12:25\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpeo8ercj4.scala:77:1 ---------------------\e[0m\e\
    [0m\n\e[31m77 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:  \
    \  Unit\n\e[31m   |\e[0m Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[33m\e[33m-- Warning:\
    \ /tmp/tmpeo8ercj4.scala:66:4 ----------------------------------------\e[0m\e\
    [0m\n\e[33m66 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e\
    [0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m\
    \    Line is indented too far to the left, or a `}` is missing\n1 warning found\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmppmowt48i.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmppmowt48i.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmppmowt48i.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e[0m\
    \ \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmppmowt48i.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSumSumSumSumSumSum is already defined as\
    \ \e[33mvalue\e[0m \e[35msumEvenSumSumSumSumSumSumSumSumSumSum\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmppmowt48i.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSumSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35m"
  stdout: ''
  timestamp: 1659800002
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = mutable.ListBuffer[Long]()\n        val evenSum = mutable.ListBuffer[Long]()\n\
    \        val evenSums = mutable.ListBuffer[Long]()\n        val evenSumsSum =\
    \ mutable.ListBuffer[Long]()\n        val evenSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSum = mutable.ListBuffer[Long]()\n        val evenSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSums = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n      \
    \  val evenSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n        val\
    \ evenSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSums\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwsdqq33_.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwsdqq33_.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwsdqq33_.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSums is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwsdqq33_.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwsdqq33_.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSum"
  stdout: ''
  timestamp: 1659799970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                sumEven.append(i)\n\
    \            }\n        }\n        sumEven.size == 4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6btf21ym.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp6btf21ym.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n        val\
    \ sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumSumSumSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Long\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpff4otw1y.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpff4otw1y.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpff4otw1y.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpff4otw1y.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpff4otw1y.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m     "
  stdout: ''
  timestamp: 1659799994
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        val sumOdd = mutable.ListBuffer[Long]()\n        val sumEvenEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenOdd = mutable.ListBuffer[Long]()\n        val sumOddEven =\
    \ mutable.ListBuffer[Long]()\n        val sumOddOdd = mutable.ListBuffer[Long]()\n\
    \        val sumEvenEvenEven = mutable.ListBuffer[Long]()\n        val sumEvenEvenOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenOddEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenOddOdd = mutable.ListBuffer[Long]()\n        val sumOddEvenEven\
    \ = mutable.ListBuffer[Long]()\n        val sumOddEvenOdd = mutable.ListBuffer[Long]()\n\
    \        val sumOddOddEven = mutable.ListBuffer[Long]()\n        val sumOddOddOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenEvenEvenEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenEvenEvenOdd = mutable.ListBuffer[Long]()\n        val sumEvenEvenOddEven\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenOddEvenEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenOddEvenOdd = mutable.ListBuffer[Long]()\n        val sumEvenOddOddEven\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenOddOddOdd = mutable.ListBuffer[Long]()\n\
    \        val sumOddEvenEvenEvenEven = mutable.ListBuffer[Long]()\n        val\
    \ sumOddEvenEvenOdd = mutable.ListBuffer[Long]()\n        val sumOddEvenOddEven\
    \ = mutable.ListBuffer[Long]()\n        val sumOddEvenOddOdd = mutable.ListBuffer[Long]()\n\
    \        val sumOddOddEvenEven = mutable.ListBuffer[Long]()\n        val sumOddOddEvenOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumOddOddOddEven = mutable.ListBuffer[Long]()\n\
    \        val sumOddOddOddOdd = mutable.\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmps31d39xg.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmps31d39xg.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmps31d39xg.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumOdd\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmps31d39xg.scala:12:26 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumEvenEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmps31d39xg.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenOdd\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmps31d39xg.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumOddEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutabl"
  stdout: ''
  timestamp: 1659800002
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (n % 2 == 0) {\n             \
    \   sumEven.append(i)\n            }\n        }\n        sumEven.size == 4\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3d5r0gt1.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp3d5r0gt1.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800002
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer(2L).reverse.foldLeft(0L)\
    \ { (sum, next) =>\n            val cur = sum + next\n            if (cur % 2\
    \ == 0) cur else sum\n        }\n        sumEven == n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk4evg5t7.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer(\e\
    [31m2L\e[0m).reverse.foldLeft(\e[31m0L\e[0m) { (\e[36msum\e[0m, \e[36mnext\e[0m)\
    \ =>\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799998
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenCount = mutable.ListBuffer[Long]()\n        val evenSum =\
    \ mutable.ListBuffer[Long]()\n        val evenSumCount = mutable.ListBuffer[Long]()\n\
    \        val evenSumCount2 = mutable.ListBuffer[Long]()\n        val evenSumCount3\
    \ = mutable.ListBuffer[Long]()\n        val evenSumCount4 = mutable.ListBuffer[Long]()\n\
    \        val evenSumCount5 = mutable.ListBuffer[Long]()\n        val evenSumCount6\
    \ = mutable.ListBuffer[Long]()\n        val evenSumCount7 = mutable.ListBuffer[Long]()\n\
    \        val evenSumCount8 = mutable.ListBuffer[Long]()\n        val evenSumCount9\
    \ = mutable.ListBuffer[Long]()\n        val evenSumCount10 = mutable.ListBuffer[Long]()\n\
    \        val evenSumCount11 = mutable.ListBuffer[Long]()\n        val evenSumCount12\
    \ = mutable.ListBuffer[Long]()\n        val evenSumCount13 = mutable.ListBuffer[Long]()\n\
    \        val evenSumCount14 = mutable.ListBuffer[Long]()\n        val evenSumCount15\
    \ = mutable.ListBuffer[Long]()\n        val evenSumCount16 = mutable.ListBuffer[Long]()\n\
    \        val evenSumCount17 = mutable.ListBuffer[Long]()\n        val evenSumCount18\
    \ = mutable.ListBuffer[Long]()\n        val evenSumCount19 = mutable.ListBuffer[Long]()\n\
    \        val evenSumCount20 = mutable.ListBuffer[Long]()\n        val evenSumCount21\
    \ = mutable.ListBuffer[Long]()\n        val evenSumCount22 = mutable.ListBuffer[Long]()\n\
    \        val evenSumCount23 = mutable.ListBuffer[Long]()\n        val evenSumCount24\
    \ = mutable.ListBuffer[Long]()\n        val evenSumCount25 = mutable.ListBuffer[Long]()\n\
    \        val evenSumCount26 = mutable.ListBuffer[Long]()\n        val evenSumCount27\
    \ = mutable.ListBuffer[Long]()\n        val evenSumCount28 = mutable.ListBuffer[Long]()\n\
    \        val evenSumCount29 = mutable.ListBuffer[Long]()\n        val evenSumCount30\
    \ = mutable.ListBuffer[Long]()\n        val even\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqg7r7v1l.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqg7r7v1l.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqg7r7v1l.scala:11:27\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenCount\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  \
    \ |\e[0m                           ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqg7r7v1l.scala:12:22 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36mevenSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpqg7r7v1l.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mevenSumCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqg7r7v1l.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mevenSumCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not fo"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n   \
    \     val sumEvenSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmps6hdhjt9.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmps6hdhjt9.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmps6hdhjt9.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e[0m\
    \ \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmps6hdhjt9.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e[0m\
    \ \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmps6hdhjt9.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        val sumOdd = mutable.ListBuffer[Long]()\n        val sumEvenSumOdd =\
    \ mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOdd = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ListBuffer[Long]()\n        val\
    \ sumEvenSumOddSumOddSumOddSumOdd = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpreurwatd.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpreurwatd.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpreurwatd.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpreurwatd.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m \
    \  |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpreurwatd.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpreurwatd.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m           \
    \                             ^^^^^^^\e[0m\n\e["
  stdout: ''
  timestamp: 1659799970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n) {\n            val x = i\n\
    \            val y = n - i\n            val z = x + y\n            val a = z %\
    \ 2\n            val b = z / 2\n            val c = z / 4\n            val d =\
    \ z / 8\n            val e = z / 16\n            val f = z / 32\n            val\
    \ g = z / 64\n            val h = z / 128\n            val i = z / 256\n     \
    \       val j = z / 512\n            val k = z / 1024\n            val l = z /\
    \ 2048\n            val m = z / 4096\n            val n = z / 8192\n         \
    \   val o = z / 16384\n            val p = z / 32768\n            val q = z /\
    \ 65536\n            val r = z / 131072\n            val s = z / 262144\n    \
    \        val t = z / 524288\n            val u = z / 1048576\n            val\
    \ v = z / 2097152\n            val w = z / 4194304\n            val x = z / 8388608\n\
    \            val y = z / 16777216\n            val z = z / 33554432\n        \
    \    val a = z % 2\n            val b = z / 2\n            val c = z / 4\n   \
    \         val d = z / 8\n            val e = z / 16\n            val f = z / 32\n\
    \            val g = z / 64\n            val h = z / 128\n            val i =\
    \ z / 256\n            val j = z / 512\n            val k = z / 1024\n       \
    \     val l = z / 2048\n            val m = z / 4096\n            val n = z /\
    \ 8192\n            val o = z / 16384\n            val p = z / 32768\n       \
    \     val q = z / 65536\n            val r = z / 131072\n            val s = z\
    \ / 262144\n            val t = z / 524288\n            val u = z / 1048576\n\
    \            val v = z / 2097152\n            val w = z / 4194304\n          \
    \  val x = z / 8388608\n            val y = z / 16777216\n            val z =\
    \ z / 33554432\n            val a = z % 2\n            val b = z / 2\n       \
    \     val c = z / 4\n            val d = z / 8\n            val e = z / 16\n \
    \           val f = z / 32\n            val g = z / 64\n            val h = z\
    \ / 128\n            val i = z\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9b1ay54p.scala:90:0 ----------------------------\e\
    [0m\e[0m\n\e[31m90 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9b1ay54p.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9b1ay54p.scala:12:25\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp9b1ay54p.scala:89:1 ---------------------\e[0m\e\
    [0m\n\e[31m89 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:  \
    \  Unit\n\e[31m   |\e[0m Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[33m\e[33m-- Warning:\
    \ /tmp/tmp9b1ay54p.scala:78:4 ----------------------------------------\e[0m\e\
    [0m\n\e[33m78 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e\
    [0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m\
    \    Line is indented too far to the left, or a `}` is missing\n1 warning found\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659800005
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        val sumOdd = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n    \
    \    val sumEvenSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n  \
    \      val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy64x970f.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpy64x970f.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                           "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        sumEven.clear()\n        sumEven.push(2)\n        sumEven.push(4)\n \
    \       sumEven.push(6)\n        sumEven.push(8)\n        sumEven.push(10)\n \
    \       sumEven.push(12)\n        sumEven.push(14)\n        sumEven.push(16)\n\
    \        sumEven.push(18)\n        sumEven.push(20)\n        sumEven.push(22)\n\
    \        sumEven.push(24)\n        sumEven.push(26)\n        sumEven.push(28)\n\
    \        sumEven.push(30)\n        sumEven.push(32)\n        sumEven.push(34)\n\
    \        sumEven.push(36)\n        sumEven.push(38)\n        sumEven.push(40)\n\
    \        sumEven.push(42)\n        sumEven.push(44)\n        sumEven.push(46)\n\
    \        sumEven.push(48)\n        sumEven.push(50)\n        sumEven.push(52)\n\
    \        sumEven.push(54)\n        sumEven.push(56)\n        sumEven.push(58)\n\
    \        sumEven.push(60)\n        sumEven.push(62)\n        sumEven.push(64)\n\
    \        sumEven.push(66)\n        sumEven.push(68)\n        sumEven.push(70)\n\
    \        sumEven.push(72)\n        sumEven.push(74)\n        sumEven.push(76)\n\
    \        sumEven.push(78)\n        sumEven.push(80)\n        sumEven.push(82)\n\
    \        sumEven.push(84)\n        sumEven.push(86)\n        sumEven.push(88)\n\
    \        sumEven.push(90)\n        sumEven.push(92)\n        sumEven.push(94)\n\
    \        sumEven.push(96)\n        sumEven.push(98)\n        sumEven.push(100)\n\
    \        sumEven.push(102)\n        sumEven.push(104)\n        sumEven.push(106)\n\
    \        sumEven.push(108)\n        sumEven.push(110)\n        sumEven.push(112)\n\
    \        sumEven.push(114)\n        sumEven.push(116)\n        sumEven.push(118)\n\
    \        sumEven.push(120)\n        sumEven.push(122)\n        sumEven.push(124)\n\
    \        sumEven.push(126)\n        sumEven.push(128)\n        sumEven\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppau7lkit.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659800000
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Int\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqgavnqoe.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqgavnqoe.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m               "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        var sum = 0\n        for(i <- 0 until n){\n            if(i % 2 == 0){\n\
    \                sum += i\n            }\n        }\n        sumEven.append(sum)\n\
    \        sumEven.takeWhile(x => x % 2 == 0).length == 4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm09ygnaz.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpm09ygnaz.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven.append(i)\n            }\n        }\n        sumEven.size == 4\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp848izor3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp848izor3.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799967
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.Set[Long]()\n\
    \        val evens_sum = mutable.Set[Long]()\n        val evens_sum_2 = mutable.Set[Long]()\n\
    \        val evens_sum_3 = mutable.Set[Long]()\n        val evens_sum_4 = mutable.Set[Long]()\n\
    \        val evens_sum_5 = mutable.Set[Long]()\n        val evens_sum_6 = mutable.Set[Long]()\n\
    \        val evens_sum_7 = mutable.Set[Long]()\n        val evens_sum_8 = mutable.Set[Long]()\n\
    \        val evens_sum_9 = mutable.Set[Long]()\n        val evens_sum_10 = mutable.Set[Long]()\n\
    \        val evens_sum_11 = mutable.Set[Long]()\n        val evens_sum_12 = mutable.Set[Long]()\n\
    \        val evens_sum_13 = mutable.Set[Long]()\n        val evens_sum_14 = mutable.Set[Long]()\n\
    \        val evens_sum_15 = mutable.Set[Long]()\n        val evens_sum_16 = mutable.Set[Long]()\n\
    \        val evens_sum_17 = mutable.Set[Long]()\n        val evens_sum_18 = mutable.Set[Long]()\n\
    \        val evens_sum_19 = mutable.Set[Long]()\n        val evens_sum_20 = mutable.Set[Long]()\n\
    \        val evens_sum_21 = mutable.Set[Long]()\n        val evens_sum_22 = mutable.Set[Long]()\n\
    \        val evens_sum_23 = mutable.Set[Long]()\n        val evens_sum_24 = mutable.Set[Long]()\n\
    \        val evens_sum_25 = mutable.Set[Long]()\n        val evens_sum_26 = mutable.Set[Long]()\n\
    \        val evens_sum_27 = mutable.Set[Long]()\n        val evens_sum_28 = mutable.Set[Long]()\n\
    \        val evens_sum_29 = mutable.Set[Long]()\n        val evens_sum_30 = mutable.Set[Long]()\n\
    \        val evens_sum_31 = mutable.Set[Long]()\n        val evens_sum_32 = mutable.Set[Long]()\n\
    \        val evens_sum_33 = mutable.Set[Long]()\n        val evens_sum_34 = mutable.Set[Long]()\n\
    \        val even\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpc2k5uas9.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc2k5uas9.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m       \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc2k5uas9.scala:11:24\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mevens_sum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc2k5uas9.scala:12:26\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mevens_sum_2\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc2k5uas9.scala:13:26\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mevens_sum_3\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc2k5uas9.scala:14:26\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mevens_sum_4\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.Set[Long]()\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven.add(i)\n            }\n        }\n        sumEven.size == 4\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvdnu2w2k.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvdnu2w2k.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800005
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        val sumOdd = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n    \
    \    val sumEvenSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n  \
    \      val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy64x970f.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpy64x970f.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                           "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        for(i <- 0 until n){\n            val x = i\n            val y = n -\
    \ i\n            val z = (x * x) + y\n            sumEven.append(z)\n        }\n\
    \        sumEven.size == 4\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo5c5_fhg.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpo5c5_fhg.scala:11:25 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val evenSum = mutable.ListBuffer[Long]()\n        val evenSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum = mutable.ListBuffer[Long]()\n        val evenSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSums = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n        val\
    \ evenSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n  \
    \      val evenSumsSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n   \
    \     val evenSumsSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n \
    \       val evenSumsSumsSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSums\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx18ahgal.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx18ahgal.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSumsSum is already defined\
    \ as \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpx18ahgal.scala:30:12 ---------------------------\e[0m\e[0m\n\e[31m30\
    \ |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSums\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSumsSums is already defined\
    \ as \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpx18ahgal.scala:10:20 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \             Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpx18ahgal.scala:11:22 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m        \e[33mval\e[0m \e[36mevenSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |"
  stdout: ''
  timestamp: 1659800005
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        sumEven.clear()\n        sumEven.push(n)\n        while(sumEven.nonEmpty)\
    \ {\n            val n = sumEven.head\n            sumEven.tail.foreach(x => sumEven.push(n+x))\n\
    \        }\n        sumEven.size == 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9c6ykr8_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659800001
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOdd = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n   \
    \     val sumEvenSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpz_dalyxq.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e\
    [31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpz_dalyxq.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \                       "
  stdout: ''
  timestamp: 1659799966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0\n        for(i <- 1 to n){\n            val x = i % 2\n \
    \           sum += x\n            if(sum == 4){\n                evens += i\n\
    \            }\n        }\n        evens.size == n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgpmchicf.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpgpmchicf.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgpmchicf.scala:14:16\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            sum += x\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659800006
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        var sum = 0\n        while(n > 0) {\n            sum += n\n         \
    \   sumEven.append(sum)\n            n -= n % 4\n        }\n        sumEven.size\
    \ == 4 && sumEven.forall(x => x % 2 == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4otq4317.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp4otq4317.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            sum += n\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4otq4317.scala:15:14\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            n -= n % \e[31m4\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659800006
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven.append(i)\n            }\n        }\n        sumEven.size == 4\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphgvvogox.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphgvvogox.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800009
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val evenSum = mutable.ListBuffer[Long]()\n        val evenSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSum = mutable.ListBuffer[Long]()\n        val evenSumsSums\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSums = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n        val\
    \ evenSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val evenSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n  \
    \      val evenSumsSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n   \
    \     val evenSumsSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n \
    \       val evenSumsSumsSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val evenSumsSumsSumsSums\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx18ahgal.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx18ahgal.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSumsSum is already defined\
    \ as \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpx18ahgal.scala:30:12 ---------------------------\e[0m\e[0m\n\e[31m30\
    \ |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSums\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSumsSums is already defined\
    \ as \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpx18ahgal.scala:10:20 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \             Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpx18ahgal.scala:11:22 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m        \e[33mval\e[0m \e[36mevenSum\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |"
  stdout: ''
  timestamp: 1659800005
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer(2,\
    \ 4)\n        val sum = mutable.ArrayBuffer(n)\n        val evenSum = mutable.ArrayBuffer(n)\n\
    \        val evenSums = mutable.ArrayBuffer(n)\n        val evenSumsSum = mutable.ArrayBuffer(n)\n\
    \        val evenSumsSums = mutable.ArrayBuffer(n)\n        val evenSumsSumsSum\
    \ = mutable.ArrayBuffer(n)\n        val evenSumsSumsSums = mutable.ArrayBuffer(n)\n\
    \        val evenSumsSumsSumsSum = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSums\
    \ = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSumsSum = mutable.ArrayBuffer(n)\n\
    \        val evenSumsSumsSumsSumsSums = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer(n)\n\
    \        val evenSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer(n)\n      \
    \  val evenSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer(n)\n        val\
    \ evenSumsSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer(n)\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer(n)\n        val evenSums\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgkgsm1eh.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpgkgsm1eh.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ArrayBuffer(n)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSumsSum is already defined\
    \ as \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpgkgsm1eh.scala:33:12 ---------------------------\e[0m\e[0m\n\e[31m33\
    \ |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSumsSums\e\
    [0m = mutable.ArrayBuffer(n)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSumsSumsSums is already defined\
    \ as \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpgkgsm1eh.scala:10:20 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer(\e[31m2\e[0m,\
    \ \e[31m4\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgkgsm1eh.scala:11:18 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = mutable.ArrayBuffer(n)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available w"
  stdout: ''
  timestamp: 1659800009
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            sumEven += i\n        }\n        sumEven.size\
    \ == 4 && sumEven.forall(x => x % 2 == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplqi0f1fd.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmplqi0f1fd.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                sumEven.append(i)\n\
    \            }\n        }\n        sumEven.size == 4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6btf21ym.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp6btf21ym.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = mutable.ListBuffer[Long]()\n        for(i <- 0 until n){\n\
    \            if(i % 2 == 0){\n                evens += i\n            }\n    \
    \        sum += i\n        }\n        evens.size == sum.size && evens.forall(x\
    \ => sum.contains(x))\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8ule3uct.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp8ule3uct.scala:11:18 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp8ule3uct.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659800010
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquare = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSquareCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumSquareSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareCount = mutable.ArrayBuffer.empty[Long]\n \
    \       val sumEvenSumSquareSquareSquare = mutable.ArrayBuffer.empty[Long]\n \
    \       val sumEvenSumSquareSquareSquareCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumSquareSquareSquareSquareCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEven\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpzhag0gvf.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzhag0gvf.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSquareSquareSquareCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSquareSquareSquareCount is already defined as \e\
    [33mvalue\e[0m \e[35msumEvenSumSquareSquareSquareCount\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzhag0gvf.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSquareSquareSquareSquare\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSquareSquareSquareSquare is already defined as \e\
    [33mvalue\e[0m \e[35msumEvenSumSquareSquareSquareSquare\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzhag0gvf.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSquareSquareSquareSquareCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSquareSquareSquareSquareCount is already defined\
    \ as \e[33mvalue\e[0m \e[35msumEvenSumSquareSquareSquareSquareCount\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpzhag0gvf.scala:26:12 ---------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m        \e[33mval\e[0"
  stdout: ''
  timestamp: 1659800010
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val evenSum = 0\n        for (i <- 1 to n) {\n            if (i % 2 ==\
    \ 0) {\n                evenSum += i\n                evens += i\n           \
    \ }\n        }\n        evenSum == 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpntrzpbue.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpntrzpbue.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpntrzpbue.scala:14:24\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                evenSum +=\
    \ i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \           value += is not a member of Int - did you mean evenSum.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659800010
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        var sum = 0\n        var i = 0\n        while (i < n) {\n           \
    \ if (n % 2 == 0) {\n                sum += n\n                sumEven.append(sum)\n\
    \            }\n            i += 1\n        }\n        val evenSum = sumEven.sum\n\
    \        val evenSum2 = sumEven.sum\n        val evenSum3 = sumEven.sum\n    \
    \    val evenSum4 = sumEven.sum\n        val evenSum5 = sumEven.sum\n        val\
    \ evenSum6 = sumEven.sum\n        val evenSum7 = sumEven.sum\n        val evenSum8\
    \ = sumEven.sum\n        val evenSum9 = sumEven.sum\n        val evenSum10 = sumEven.sum\n\
    \        val evenSum11 = sumEven.sum\n        val evenSum12 = sumEven.sum\n  \
    \      val evenSum13 = sumEven.sum\n        val evenSum14 = sumEven.sum\n    \
    \    val evenSum15 = sumEven.sum\n        val evenSum16 = sumEven.sum\n      \
    \  val evenSum17 = sumEven.sum\n        val evenSum18 = sumEven.sum\n        val\
    \ evenSum19 = sumEven.sum\n        val evenSum20 = sumEven.sum\n        val evenSum21\
    \ = sumEven.sum\n        val evenSum22 = sumEven.sum\n        val evenSum23 =\
    \ sumEven.sum\n        val evenSum24 = sumEven.sum\n        val evenSum25 = sumEven.sum\n\
    \        val evenSum26 = sumEven.sum\n        val evenSum27 = sumEven.sum\n  \
    \      val evenSum28 = sumEven.sum\n        val evenSum29 = sumEven.sum\n    \
    \    val evenSum30 = sumEven.sum\n        val evenSum31 = sumEven.sum\n      \
    \  val evenSum32 = sumEven.sum\n        val evenSum33 = sumEven.sum\n        val\
    \ evenSum34 = sumEven.sum\n        val evenSum35 = sumEven.sum\n        val evenSum36\
    \ = sumEven.sum\n        val evenSum37 = sumEven.sum\n        val evenSum38 =\
    \ sumEven.sum\n        val evenSum39 = sumEven.sum\n        val evenSum40 = sumEven.sum\n\
    \        val evenSum41 = sumEven.sum\n        val evenSum42 = sumEven.sum\n  \
    \      val evenSum43 = sumEven.sum\n        val even\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp78pznqwr.scala:64:4 ----------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp78pznqwr.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp78pznqwr.scala:15:20\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                sum += n\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp78pznqwr.scala:64:5 ---------------------\e[0m\e\
    [0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m \
    \    Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659800014
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Int\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqgavnqoe.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqgavnqoe.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgavnqoe.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m               "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        sumEven.clear()\n        sumEven.takeWhile(_ < n).foreach(x => sumEven.append(x))\n\
    \        sumEven.takeWhile(_ > 0).foreach(x => sumEven.append(x))\n        sumEven.takeWhile(_\
    \ < n).takeWhile(_ < n).foreach(x => sumEven.append(x))\n        sumEven.takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).foreach(x => sumEven.append(x))\n   \
    \     sumEven.takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ <\
    \ n).foreach(x => sumEven.append(x))\n        sumEven.takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).foreach(x => sumEven.append(x))\n\
    \        sumEven.takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).foreach(x => sumEven.append(x))\n   \
    \     sumEven.takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ <\
    \ n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).foreach(x => sumEven.append(x))\n\
    \        sumEven.takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).foreach(x\
    \ => sumEven.append(x))\n        sumEven.takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).foreach(x => sumEven.append(x))\n        sumEven.takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).foreach(x\
    \ => sumEven.append(x))\n        sumEven.takeWhile(_ < n).takeWhile(_ < \n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpdt30m3z4.scala:23:46 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        sumEven.takeWhile(_ < n).takeWhile(_ < \n\e[31m\e\
    [31m   |\e[0m                                              ^\e[0m\n\e[31m   |\e\
    [0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt30m3z4.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800008
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquares = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSumOfSquares = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSumOfSquareSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquares = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares =\
    \ mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquare\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp20p4h39e.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp20p4h39e.scala:26:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquares\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp20p4h39e.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp20p4h39e.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp20p4h39e.scala:12:34 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOfSquares\e[0m\
    \ = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659800011
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSum = 0\n        for(i <- 0 until n){\n            if((i%2) ==\
    \ 0){\n                evenSum += i\n                evens += i\n            }\n\
    \        }\n        evenSum == n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr53cz7x6.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpr53cz7x6.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr53cz7x6.scala:14:24\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                evenSum +=\
    \ i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \           value += is not a member of Int - did you mean evenSum.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659800015
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Int]\n\
    \        val sum = 0\n        for(i <- 0 until n){\n            if(i % 2 == 0){\n\
    \                evens += i\n                sum += i\n            }\n       \
    \ }\n        evens.size == 4\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1kp4ifk2.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp1kp4ifk2.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1kp4ifk2.scala:15:20\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659800014
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum2\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum3 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum4 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum7 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum8\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum9 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum10 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum13 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum16 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum19 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum20\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum21 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum22 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum25 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum28 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum29\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum30 = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum31 = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSum32\
    \ = mutable.ArrayBuffer.empty[Long\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp12dgrhe7.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp12dgrhe7.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp12dgrhe7.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m          "
  stdout: ''
  timestamp: 1659799959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSum = mutable.ArrayBuffer.empty[Long]\n        val evenSums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSums = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n        val\
    \ evenSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n \
    \       val evenSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n \
    \       val evenSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSums\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpip84w5z7.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpip84w5z7.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSumsSum is already defined\
    \ as \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpip84w5z7.scala:30:12 ---------------------------\e[0m\e[0m\n\e[31m30\
    \ |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSums\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSumsSums is already defined\
    \ as \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpip84w5z7.scala:10:20 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpip84w5z7.scala:11:22 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mevenSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: m"
  stdout: ''
  timestamp: 1659800014
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 0 until n) {\n            sumEven += i\n        }\n        sumEven.forall(i\
    \ => i % 2 == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9v9aq02i.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp9v9aq02i.scala:11:25 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800013
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        val sumOdd = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n    \
    \    val sumEvenSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n  \
    \      val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy64x970f.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpy64x970f.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                           "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOdd = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n   \
    \     val sumEvenSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpz_dalyxq.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e\
    [31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpz_dalyxq.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_dalyxq.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \                       "
  stdout: ''
  timestamp: 1659799966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0\n        for (i <- 1 to n) {\n            if (i % 2 == 0)\
    \ {\n                sum += i\n                evens += i\n            }\n   \
    \     }\n        evens.size == 4\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp64jh4jis.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp64jh4jis.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp64jh4jis.scala:14:20\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659800017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        var sum = 0\n        for(i <- 0 until n) {\n            sum += i\n  \
    \          if(sumEven.contains(sum)) {\n                return false\n       \
    \     }\n            sumEven.append(sum)\n        }\n        return true\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsvr7twsj.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpsvr7twsj.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800014
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenIter = mutable.ListIterator.empty[Long]\n        val sumEvenSum\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumIter = mutable.ListIterator.empty[Long]\n\
    \        val sumEvenSumSum = mutable.ListBuffer.empty[Long]\n        val sumEvenSumSumIter\
    \ = mutable.ListIterator.empty[Long]\n        val sumEvenSumSumSum = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumIter = mutable.ListIterator.empty[Long]\n       \
    \ val sumEvenSumSumSumSum = mutable.ListBuffer.empty[Long]\n        val sumEvenSumSumSumSumIter\
    \ = mutable.ListIterator.empty[Long]\n        val sumEvenSumSumSumSumSum = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumIter = mutable.ListIterator.empty[Long]\n \
    \       val sumEvenSumSumSumSumSumSum = mutable.ListBuffer.empty[Long]\n     \
    \   val sumEvenSumSumSumSumSumSumIter = mutable.ListIterator.empty[Long]\n   \
    \     val sumEvenSumSumSumSumSumSumSum = mutable.ListBuffer.empty[Long]\n    \
    \    val sumEvenSumSumSumSumSumSumIter = mutable.ListIterator.empty[Long]\n  \
    \      val sumEvenSumSumSumSumSumSumSum = mutable.ListBuffer.empty[Long]\n   \
    \     val sumEvenSumSumSumSumSumSumSumIter = mutable.ListIterator.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumIter = mutable.ListIterator.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumIter = mutable.ListIterator.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumIter = mutable.ListIterator.empty[Long]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumSumSumSum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqst7jk0y.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqst7jk0y.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSumSumIter\e[0m = mutable.ListIterator.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSumSumIter is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumIter\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqst7jk0y.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e[0m\
    \ \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqst7jk0y.scala:30:12 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSumSumSum\e\
    [0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0msumEvenSumSumSumSumSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqst7jk0y.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSumSumSumSumIter\e[0m = mutable.ListI"
  stdout: ''
  timestamp: 1659800016
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i\n \
    \           val y = n - i\n            val z = x + y\n            val z2 = z *\
    \ z\n            val z3 = z2 * z\n            val z4 = z3 * z\n            val\
    \ z5 = z4 * z\n            val z6 = z5 * z\n            val z7 = z6 * z\n    \
    \        val z8 = z7 * z\n            val z9 = z8 * z\n            val z10 = z9\
    \ * z\n            val z11 = z10 * z\n            val z12 = z11 * z\n        \
    \    val z13 = z12 * z\n            val z14 = z13 * z\n            val z15 = z14\
    \ * z\n            val z16 = z15 * z\n            val z17 = z16 * z\n        \
    \    val z18 = z17 * z\n            val z19 = z18 * z\n            val z20 = z19\
    \ * z\n            val z21 = z20 * z\n            val z22 = z21 * z\n        \
    \    val z23 = z22 * z\n            val z24 = z23 * z\n            val z25 = z24\
    \ * z\n            val z26 = z25 * z\n            val z27 = z26 * z\n        \
    \    val z28 = z27 * z\n            val z29 = z28 * z\n            val z30 = z29\
    \ * z\n            val z31 = z30 * z\n            val z32 = z31 * z\n        \
    \    val z33 = z32 * z\n            val z34 = z33 * z\n            val z35 = z34\
    \ * z\n            val z36 = z35 * z\n            val z37 = z36 * z\n        \
    \    val z38 = z37 * z\n            val z39 = z38 * z\n            val z40 = z39\
    \ * z\n            val z41 = z40 * z\n            val z42 = z41 * z\n        \
    \    val z43 = z42 * z\n            val z44 = z43 * z\n            val z45 = z44\
    \ * z\n            val z46 = z45 * z\n            val z47 = z46 * z\n        \
    \    val z48 = z47 * z\n            val z49 = z48 * z\n            val z50 = \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpav5jv70n.scala:64:21 ---------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m            \e[33mval\e[0m \e[36mz50\e[0m = \n\e[31m\e\
    [31m   |\e[0m                     ^\e[0m\n\e[31m   |\e[0m                    \
    \ expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E040] Syntax Error: /tmp/tmpav5jv70n.scala:78:0 ----------------------------\e\
    [0m\e[0m\n\e[31m78 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpav5jv70n.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpav5jv70n.scala:12:25\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpav5jv70n.scala:77:1 ---------------------\e[0m\e\
    [0m\n\e[31m77 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:  \
    \  Unit\n\e[31m   |\e[0m Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[33m\e[33m-- Warning:\
    \ /tmp/tmpav5jv70n.scala:66:4 ----------------------------------------\e[0m\e\
    [0m\n\e[33m66 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e\
    [0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m\
    \    Line is indented too far to the left, or a `}` is missing\n1 warning found\n\
    5 errors found\n"
  stdout: ''
  timestamp: 1659800017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIter = mutable.ArrayBuffer.empty[Long]\n        val sumEvenIterIter\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n     \
    \   val sumEvenIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n  \
    \      val sumEvenIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIterIterIterIterIterIterIterIterIterIterIter = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenIterIter\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfevqtx0b.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfevqtx0b.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenIterIterIterIterIterIter\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenIterIterIterIterIterIter is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenIterIterIterIterIterIter\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfevqtx0b.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenIterIterIterIterIterIterIter\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenIterIterIterIterIterIterIter is already defined as\
    \ \e[33mvalue\e[0m \e[35msumEvenIterIterIterIterIterIterIter\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfevqtx0b.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenIterIterIterIterIterIterIterIterIter\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenIterIterIterIterIterIterIterIterIter is already defined\
    \ as \e[33mvalue\e[0m \e[35msumEvenIterIterIterIterIterIterIterIterIter\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpfevqtx0b.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m       "
  stdout: ''
  timestamp: 1659800015
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer(2,\
    \ 4)\n        val sum = 0\n        while (n > 0) {\n            sum += n % 2\n\
    \            n /= 2\n        }\n        evens.takeWhile(x => sum % x == 0).length\
    \ == 4\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsusc9c3t.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m4\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpsusc9c3t.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            sum += n % \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsusc9c3t.scala:14:14\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            n /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ /= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659800017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        sumEven.clear()\n        for(i <- 0 until n) {\n            if((i%2)\
    \ == 0) {\n                sumEven.append(i)\n            }\n        }\n     \
    \   sumEven.size == 4\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqxlt69c0.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpqxlt69c0.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800015
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer(0)\n\
    \        val sumOdd = mutable.ArrayBuffer(0)\n        val sumEvenSumOdd = mutable.ArrayBuffer(0)\n\
    \        val sumEvenSumOddSumOdd = mutable.ArrayBuffer(0)\n        val sumEvenSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer(0)\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer(0)\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer(0)\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer(0)\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer(0)\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ArrayBuffer(0)\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ArrayBuffer(0)\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi6yr2mum.scala:27:4 ----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi6yr2mum.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi6yr2mum.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi6yr2mum.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e\
    [0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpi6yr2mum.scala:13:34 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi6yr2mum.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ArrayBuffer(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m               \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m         "
  stdout: ''
  timestamp: 1659800017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = mutable.ArrayBuffer.empty[Long]\n        val evenSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSums = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n        val\
    \ evenSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSum =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSums\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjegsma9a.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSums is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0"
  stdout: ''
  timestamp: 1659799991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val\
    \ sumEvenSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n \
    \       val sumEvenSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n  \
    \      val sumEvenSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSumSumSumSumSumSumSumSumSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenSumSumSumSumSum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdml72i5t.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdml72i5t.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSum is already defined as \e[33mvalue\e\
    [0m \e[35msumEvenSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdml72i5t.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msumEvenSumSumSumSumSumSumSum is already defined as \e[33mvalue\e[0m\
    \ \e[35msumEvenSumSumSumSumSumSumSum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdml72i5t.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumSumSumSumSumSumSumSumSumSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumSumSumSumSumSumSumSumSumSum is already defined as\
    \ \e[33mvalue\e[0m \e[35msumEvenSumSumSumSumSumSumSumSumSumSum\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdml72i5t.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumEvenSumSumSumSumSumSumSumSumSumSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35m"
  stdout: ''
  timestamp: 1659800017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (i % 2 == 0) {\n             \
    \   sumEven += i\n            }\n        }\n        sumEven.size == 4\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppi1efido.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmppi1efido.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799979
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquare\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSumOfSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSumOfSquareSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquare = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquare =\
    \ mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquare\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquare\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquare\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val sumEvenSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquareSumOfSquare\
    \ = mutable.Array\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvf5oz0wc.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpvf5oz0wc.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpvf5oz0wc.scala:12:33 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOfSquare\e[0m\
    \ = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpvf5oz0wc.scala:13:36 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSumOfSquareSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                    Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvf5oz0wc.scala:14:44\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOfSquareSumOfSquare\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                                            ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                            Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation avai"
  stdout: ''
  timestamp: 1659800016
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = mutable.ArrayBuffer.empty[Long]\n        val evenSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSums = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n        val\
    \ evenSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSum =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSums\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjegsma9a.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSums is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjegsma9a.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0"
  stdout: ''
  timestamp: 1659799991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer(2,\
    \ 4)\n        val sumOdd = mutable.ArrayBuffer(2, 3)\n        val sumEvenSumOdd\
    \ = sumEven.zip(sumOdd)\n        val sumEvenSumOddSum = sumEvenSumOdd.map(x =>\
    \ x._1 + x._2)\n        val sumEvenSumOddSumSum = sumEvenSumOddSum.map(x => x\
    \ * x)\n        val sumEvenSumOddSumSumSum = sumEvenSumOddSumSum.map(x => x *\
    \ x)\n        val sumEvenSumOddSumSumSumSum = sumEvenSumOddSumSumSum.map(x =>\
    \ x * x)\n        val sumEvenSumOddSumSumSumSumSum = sumEvenSumOddSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum.map(x\
    \ => x * x)\n        val sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSumSum\
    \ = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpj55x4jov.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum\e\
    [0m = sumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum.map(\e[36mx\e[0m => x\
    \ * x)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum is already\
    \ defined as \e[33mvalue\e[0m \e[35msumEvenSumOddSumSumSumSumSumSumSumSumSumSumSumSum\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpj55x4jov.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m4\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpj55x4jov.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumOdd\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m, \e[31m3\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj55x4jov.scala:27:5 ---------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659800019
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        for(i <- 0 until n){\n            sumEven += i\n            if(sumEven.sum\
    \ == 4){\n                return true\n            }\n        }\n        return\
    \ false\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwfcmyos1.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpwfcmyos1.scala:11:25 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800019
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        sumEven.push(2)\n        sumEven.push(4)\n        sumEven.push(6)\n \
    \       sumEven.push(8)\n        sumEven.push(10)\n        sumEven.push(12)\n\
    \        sumEven.push(14)\n        sumEven.push(16)\n        sumEven.push(18)\n\
    \        sumEven.push(20)\n        sumEven.push(22)\n        sumEven.push(24)\n\
    \        sumEven.push(26)\n        sumEven.push(28)\n        sumEven.push(30)\n\
    \        sumEven.push(32)\n        sumEven.push(34)\n        sumEven.push(36)\n\
    \        sumEven.push(38)\n        sumEven.push(40)\n        sumEven.push(42)\n\
    \        sumEven.push(44)\n        sumEven.push(46)\n        sumEven.push(48)\n\
    \        sumEven.push(50)\n        sumEven.push(52)\n        sumEven.push(54)\n\
    \        sumEven.push(56)\n        sumEven.push(58)\n        sumEven.push(60)\n\
    \        sumEven.push(62)\n        sumEven.push(64)\n        sumEven.push(66)\n\
    \        sumEven.push(68)\n        sumEven.push(70)\n        sumEven.push(72)\n\
    \        sumEven.push(74)\n        sumEven.push(76)\n        sumEven.push(78)\n\
    \        sumEven.push(80)\n        sumEven.push(82)\n        sumEven.push(84)\n\
    \        sumEven.push(86)\n        sumEven.push(88)\n        sumEven.push(90)\n\
    \        sumEven.push(92)\n        sumEven.push(94)\n        sumEven.push(96)\n\
    \        sumEven.push(98)\n        sumEven.push(100)\n        sumEven.push(102)\n\
    \        sumEven.push(104)\n        sumEven.push(106)\n        sumEven.push(108)\n\
    \        sumEven.push(110)\n        sumEven.push(112)\n        sumEven.push(114)\n\
    \        sumEven.push(116)\n        sumEven.push(118)\n        sumEven.push(120)\n\
    \        sumEven.push(122)\n        sumEven.push(124)\n        sumEven.push(126)\n\
    \        sumEven.push(128)\n        sumEven.push(130)\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpas8c_4sv.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799954
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.Set[Long]()\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                sumEven.add(i)\n\
    \            }\n        }\n        sumEven.size == 4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnixlphom.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnixlphom.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800020
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        sumEven.clear()\n        var sum = 0\n        for(i <- 1 to n) {\n  \
    \          sum += i\n            if(sumEven.contains(sum)) {\n               \
    \ return false\n            }\n            sumEven.append(sum)\n        }\n  \
    \      return true\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr_s3vnlv.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpr_s3vnlv.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800021
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = mutable.ArrayBuffer.empty[Long]\n        val evenSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSums = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n        val\
    \ evenSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSum =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp696ga7s_.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp696ga7s_.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSumsSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSumsSums is already defined\
    \ as \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp696ga7s_.scala:10:20 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp696ga7s_.scala:11:18 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp696ga7s_.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33"
  stdout: ''
  timestamp: 1659800022
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val evenSum = 0\n        for(i <- 1 to n){\n            val x = i\n \
    \           val y = n - i\n            val z = x + y\n            val z2 = z *\
    \ z\n            val z3 = z2 * z\n            val z4 = z3 * z\n            val\
    \ z5 = z4 * z\n            val z6 = z5 * z\n            val z7 = z6 * z\n    \
    \        val z8 = z7 * z\n            val z9 = z8 * z\n            val z10 = z9\
    \ * z\n            val z11 = z10 * z\n            val z12 = z11 * z\n        \
    \    val z13 = z12 * z\n            val z14 = z13 * z\n            val z15 = z14\
    \ * z\n            val z16 = z15 * z\n            val z17 = z16 * z\n        \
    \    val z18 = z17 * z\n            val z19 = z18 * z\n            val z20 = z19\
    \ * z\n            val z21 = z20 * z\n            val z22 = z21 * z\n        \
    \    val z23 = z22 * z\n            val z24 = z23 * z\n            val z25 = z24\
    \ * z\n            val z26 = z25 * z\n            val z27 = z26 * z\n        \
    \    val z28 = z27 * z\n            val z29 = z28 * z\n            val z30 = z29\
    \ * z\n            val z31 = z30 * z\n            val z32 = z31 * z\n        \
    \    val z33 = z32 * z\n            val z34 = z33 * z\n            val z35 = z34\
    \ * z\n            val z36 = z35 * z\n            val z37 = z36 * z\n        \
    \    val z38 = z37 * z\n            val z39 = z38 * z\n            val z40 = z39\
    \ * z\n            val z41 = z40 * z\n            val z42 = z41 * z\n        \
    \    val z43 = z42 * z\n            val z44 = z43 * z\n            val z45 = z44\
    \ * z\n            val z46 = z45 * z\n            val z47 = z46 * z\n        \
    \    val z48 = z47 * z\n            val z49 = z48 * z\n            val z50 = z\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpu183suky.scala:78:0 ----------------------------\e\
    [0m\e[0m\n\e[31m78 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu183suky.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu183suky.scala:12:22\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpu183suky.scala:77:1 ---------------------\e[0m\e[0m\n\e[31m77\
    \ |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m\
    \   |\e[0m Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[33m\e[33m-- Warning: /tmp/tmpu183suky.scala:66:4\
    \ ----------------------------------------\e[0m\e[0m\n\e[33m66 |\e[0m    \e[33mdef\e\
    [0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e[0m[\e[35mString\e[0m]) = {\n\
    \e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m    Line is indented too far to\
    \ the left, or a `}` is missing\n1 warning found\n4 errors found\n"
  stdout: ''
  timestamp: 1659800023
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Int]\n\
    \        for (i <- 0 until n) {\n            if (n % 2 == 0 && sumEven.sum + i\
    \ > 4) {\n                sumEven.append(i)\n            }\n        }\n      \
    \  sumEven.size == 4\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbj0wisgh.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbj0wisgh.scala:11:26 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800022
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = mutable.ListBuffer[Long]()\n        for(i <- 1 to n) {\n  \
    \          if(i % 2 == 0) {\n                evens += i\n            }\n     \
    \       sum += i\n        }\n        evens.size == sum.size && evens.forall(x\
    \ => sum.contains(x))\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6g5yfmtp.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp6g5yfmtp.scala:11:18 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6g5yfmtp.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659800023
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            sumEven += i\n            if(sumEven.sum\
    \ == 4)\n                return false\n        }\n        return true\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps1t4zpz9.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmps1t4zpz9.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800024
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum = mutable.ListBuffer.empty[Long]\n        val sumEvenSum2\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum3 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum4 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum5\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum6 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum7 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum8\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum9 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum10 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum11\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum12 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum13 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum14\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum15 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum16 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum17\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum18 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum19 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum20\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum21 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum22 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum23\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum24 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum25 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum26\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum27 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum28 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum29\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSum30 = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSum31 = mutable.ListBuffer.empty[Long]\n        val sumEvenSum32\
    \ = mutable.ListBuffer.empty[Long\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7c4m8p1p.scala:43:4 ----------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7c4m8p1p.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7c4m8p1p.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSum\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp7c4m8p1p.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp7c4m8p1p.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp7c4m8p1p.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m               "
  stdout: ''
  timestamp: 1659799981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.Set[Long]()\n\
    \        val sum = mutable.Set[Long]()\n        val evenSums = mutable.Set[Long]()\n\
    \        val evenSumsSum = mutable.Set[Long]()\n        val evenSumsSumOfEvens\
    \ = mutable.Set[Long]()\n        val evenSumsSumOfEvensSum = mutable.Set[Long]()\n\
    \        val evenSumsSumOfEvensSumOfEvens = mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSum\
    \ = mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSumOfEvens =\
    \ mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSumOfEvensSum =\
    \ mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvens\
    \ = mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSum\
    \ = mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvens\
    \ = mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvens\
    \ = mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvensSum\
    \ = mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvens\
    \ = mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvens\
    \ = mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvensSum\
    \ = mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvens\
    \ = mutable.Set[Long]()\n        val evenSumsSumOfEvensSumOfEvensSum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8_jh0s7j.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8_jh0s7j.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvens\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvens\
    \ is already defined as \e[33mvalue\e[0m \e[35mevenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvens\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp8_jh0s7j.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36mevenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvens\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvens\
    \ is already defined as \e[33mvalue\e[0m \e[35mevenSumsSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvensSumOfEvens\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp8_jh0s7j.scala:10:20 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp8_jh0s7j.scala:11:18 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = mutable.Set[\e[35"
  stdout: ''
  timestamp: 1659800024
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumEvenCount = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount2\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount3 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount4 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount5\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount6 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount7 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount8\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount9 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount10 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount11\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount12 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount13 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount14\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount15 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount16 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount17\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount18 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount19 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount20\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount22 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount23\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount24 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount25 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount26\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount27 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount28 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount29\
    \ = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount30 = mutable.ArrayBuffer.empty[Int]\n\
    \        val sumEvenCount31 = mutable.ArrayBuffer.empty[Int]\n        val sumEvenCount32\
    \ = mutable.ArrayBuffer.empty[Int]\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxu99r58q.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxu99r58q.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpxu99r58q.scala:12:28 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpxu99r58q.scala:13:28 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpxu99r58q.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenCount4\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpxu9"
  stdout: ''
  timestamp: 1659800024
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        sumEven.clear()\n        for(i <- 0 until n){\n            if((i%2) ==\
    \ 0){\n                sumEven.append(i)\n            }\n        }\n        sumEven.size\
    \ == 4\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2o1paqun.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2o1paqun.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800024
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i % 2\n\
    \            val y = i / 2\n            if(x != y){\n                sum += x\n\
    \                evens += y\n            }\n        }\n        evens.size == 4\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_dy3liuo.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp_dy3liuo.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_dy3liuo.scala:16:20\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m                sum += x\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659800025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val sum = 0L\n        for(i <- 0 until n){\n            val x = i\n \
    \           val y = x - 1\n            val z = y - 1\n            val w = z -\
    \ 1\n            val t = x + y + z + w\n            evens += t\n            sum\
    \ += t\n        }\n        evens.size == 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbg998q0q.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpbg998q0q.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbg998q0q.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            sum += t\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659800025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer(2L).takeWhile(_\
    \ < n).filter(_ % 2 == 0).sum\n        sumEven == n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgli7ssx1.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer(\e\
    [31m2L\e[0m).takeWhile(_ < n).filter(_ % \e[31m2\e[0m == \e[31m0\e[0m).sum\n\e\
    [31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659800021
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        var sum = 0\n        while (sum < n) {\n            sum += 2\n      \
    \      sumEven += sum\n        }\n        sumEven.size == n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphljqinym.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659800023
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum = mutable.ListBuffer[Long]()\n        val sumEvenSum2\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum3 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum4 = mutable.ListBuffer[Long]()\n        val sumEvenSum5\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum6 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum7 = mutable.ListBuffer[Long]()\n        val sumEvenSum8\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum9 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum10 = mutable.ListBuffer[Long]()\n        val sumEvenSum11\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum12 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum13 = mutable.ListBuffer[Long]()\n        val sumEvenSum14\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum15 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum16 = mutable.ListBuffer[Long]()\n        val sumEvenSum17\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum18 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum19 = mutable.ListBuffer[Long]()\n        val sumEvenSum20\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum21 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum22 = mutable.ListBuffer[Long]()\n        val sumEvenSum23\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum24 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum25 = mutable.ListBuffer[Long]()\n        val sumEvenSum26\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum27 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum28 = mutable.ListBuffer[Long]()\n        val sumEvenSum29\
    \ = mutable.ListBuffer[Long]()\n        val sumEvenSum30 = mutable.ListBuffer[Long]()\n\
    \        val sumEvenSum31 = mutable.ListBuffer[Long]()\n        val sumEvenSum32\
    \ = mutable.ListBuffer[Long]\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isEqualToSumEven((4l)) == (false));\n    assert(isEqualToSumEven((6l))\
    \ == (false));\n    assert(isEqualToSumEven((8l)) == (true));\n    assert(isEqualToSumEven((10l))\
    \ == (true));\n    assert(isEqualToSumEven((11l)) == (false));\n    assert(isEqualToSumEven((12l))\
    \ == (true));\n    assert(isEqualToSumEven((13l)) == (false));\n    assert(isEqualToSumEven((16l))\
    \ == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:12:26 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSum4\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdl9rprc_.scala:15:26 ------------------------\e\
    [0"
  stdout: ''
  timestamp: 1659799958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.Set[Long]()\n\
    \        sumEven.add(0)\n        sumEven.add(2)\n        sumEven.add(4)\n    \
    \    sumEven.add(6)\n        sumEven.add(8)\n        sumEven.add(10)\n       \
    \ sumEven.add(12)\n        sumEven.add(14)\n        sumEven.add(16)\n        sumEven.add(18)\n\
    \        sumEven.add(20)\n        sumEven.add(22)\n        sumEven.add(24)\n \
    \       sumEven.add(26)\n        sumEven.add(28)\n        sumEven.add(30)\n  \
    \      sumEven.add(32)\n        sumEven.add(34)\n        sumEven.add(36)\n   \
    \     sumEven.add(38)\n        sumEven.add(40)\n        sumEven.add(42)\n    \
    \    sumEven.add(44)\n        sumEven.add(46)\n        sumEven.add(48)\n     \
    \   sumEven.add(50)\n        sumEven.add(52)\n        sumEven.add(54)\n      \
    \  sumEven.add(56)\n        sumEven.add(58)\n        sumEven.add(60)\n       \
    \ sumEven.add(62)\n        sumEven.add(64)\n        sumEven.add(66)\n        sumEven.add(68)\n\
    \        sumEven.add(70)\n        sumEven.add(72)\n        sumEven.add(74)\n \
    \       sumEven.add(76)\n        sumEven.add(78)\n        sumEven.add(80)\n  \
    \      sumEven.add(82)\n        sumEven.add(84)\n        sumEven.add(86)\n   \
    \     sumEven.add(88)\n        sumEven.add(90)\n        sumEven.add(92)\n    \
    \    sumEven.add(94)\n        sumEven.add(96)\n        sumEven.add(98)\n     \
    \   sumEven.add(100)\n        sumEven.add(102)\n        sumEven.add(104)\n   \
    \     sumEven.add(106)\n        sumEven.add(108)\n        sumEven.add(110)\n \
    \       sumEven.add(112)\n        sumEven.add(114)\n        sumEven.add(116)\n\
    \        sumEven.add(118)\n        sumEven.add(120)\n        sumEven.add(122)\n\
    \        sumEven.add(124)\n        sumEven.add(126)\n        sumEven.add(128)\n\
    \        sumEven.add(130)\n        sumEven.add(132)\n        sumEven.add(134)\n\
    \        sumEven.add(136)\n        sumEven.add(138)\n        sumEven.add(140)\n\
    \        sumEven.add(142)\n        sumEven.add(144)\n        sumEven.add(146)\n\
    \        sumEven.add(14\n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdqplbdj5.scala:86:4 ----------------------------\e\
    [0m\e[0m\n\e[31m86 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdqplbdj5.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800023
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Long]\n\
    \        val evens = mutable.ArrayBuffer.empty[Long]\n        val evenSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSums = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n        val\
    \ evenSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSum =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumsSums\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l)) == (false));\n\
    \    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptb8mmjs5.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptb8mmjs5.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptb8mmjs5.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSums is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSums\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptb8mmjs5.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumsSumsSumsSumsSumsSumsSumsSum is already defined as\
    \ \e[33mvalue\e[0m \e[35mevenSumsSumsSumsSumsSumsSumsSumsSum\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptb8mmjs5.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0"
  stdout: ''
  timestamp: 1659800025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ListBuffer.empty[Long]\n\
    \        val sumOdd = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n    \
    \    val sumEvenSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n  \
    \      val sumEvenSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd = mutable.ListBuffer.empty[Long]\n\
    \        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\
    \ = mutable.ListBuffer.empty[Long]\n        val sumEvenSumOddSumOddSumOddSumOddSumOddSumOddSumOddSumOdd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy64x970f.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36msumEven\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:12:28\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36msumEvenSumOdd\e[0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpy64x970f.scala:13:34 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOdd\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy64x970f.scala:14:40 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumEvenSumOddSumOddSumOdd\e\
    [0m = mutable.ListBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                           "
  stdout: ''
  timestamp: 1659799969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val sumEven = mutable.ArrayBuffer.empty[Int]\n\
    \        var sum = 0\n        for(i <- 0 until n) {\n            sum += i\n  \
    \          if(sumEven.contains(sum)) {\n                return false\n       \
    \     }\n            sumEven.append(sum)\n        }\n        return true\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoeldntg9.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msumEven\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpoeldntg9.scala:12:25 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659800025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.ArrayBuffer.empty[Int]\n\
    \        val sum = mutable.ArrayBuffer.empty[Int]\n        val n = n.toInt\n \
    \       val evenSum = mutable.ArrayBuffer.empty[Int]\n        val evenSums = mutable.ArrayBuffer.empty[Int]\n\
    \        val evenSumsSum = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSum = mutable.ArrayBuffer.empty[Int]\n\
    \        val evenSumsSumsSums = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSums = mutable.ArrayBuffer.empty[Int]\n\
    \        val evenSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Int]\n      \
    \  val evenSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Int]\n        val\
    \ evenSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Int]\n        val evenSumsSumsSumsSumsSumsSumsSumsSumsSum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaadtcfxv.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaadtcfxv.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaadtcfxv.scala:11:18\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m\
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpaadtcfxv.scala:12:16\
    \ ---------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = n.toInt\n\e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m\
    \   |\e[0m                Recursive \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaadtcfxv.scala:13:22\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSum\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaadtcfxv.scala:14:23\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mevenSums\e[0m = mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available w"
  stdout: ''
  timestamp: 1659800025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
    \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
    \    def isEqualToSumEven(n : Long) : Boolean = {\n        val evens = mutable.Set[Long]()\n\
    \        val sum = 0L\n        for(i <- 1 to n){\n            val x = i\n    \
    \        val y = x - 1\n            val z = x - 2\n            val w = x - 3\n\
    \            val v = x - 4\n            val s = x + 1\n            val t = x +\
    \ 2\n            val u = x + 3\n            val m = x + 4\n            val l =\
    \ x + 5\n            val k = x + 6\n            val j = x + 7\n            val\
    \ f = x + 8\n            val g = x + 9\n            val b = x + 10\n         \
    \   val a = x + 11\n            val m = x + 12\n            val l = x + 13\n \
    \           val k = x + 14\n            val j = x + 15\n            val f = x\
    \ + 16\n            val g = x + 17\n            val b = x + 18\n            val\
    \ a = x + 19\n            val m = x + 20\n            val l = x + 21\n       \
    \     val k = x + 22\n            val j = x + 23\n            val f = x + 24\n\
    \            val g = x + 25\n            val b = x + 26\n            val a = x\
    \ + 27\n            val m = x + 28\n            val l = x + 29\n            val\
    \ k = x + 30\n            val j = x + 31\n            val f = x + 32\n       \
    \     val g = x + 33\n            val b = x + 34\n            val a = x + 35\n\
    \            val m = x + 36\n            val l = x + 37\n            val k = x\
    \ + 38\n            val j = x + 39\n            val f = x + 40\n            val\
    \ g = x + 41\n            val b = x + 42\n            val a = x + 43\n       \
    \     val m = x + 44\n            val l = x + 45\n            val k = x + 46\n\
    \            val j = x + 47\n            val f = x + 48\n            val g = x\
    \ + 49\n            val b = x + 50\n            val a = x + 51\n            val\
    \ m = x + 52\n            val l = x + 53\n            val k = x + 54\n       \
    \     val j = x + 55\n            val f = x + 56\n            val g = x + 57\n\
    \            val b = x + 58\n            val a = x + 59\n            val m = x\
    \ + 60\n            val l = x + 61\n            val k = x + 62\n            val\
    \ j = x + 63\n            val f = x + 64\n            val g = x + 65\n       \
    \     val b = x + 66\n            val a = x + 67\n            val m = x + 68\n\
    \            val l = x + 69\n            val k = x + 70\n            val j = x\
    \ + 71\n            val f = x + 72\n            val g = x + 73\n            val\
    \ b = x + 74\n            val a = x + 75\n            val m = x + 76\n       \
    \     \n    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
    \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
    \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
    \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
    \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3n3pu8ql.scala:108:0 ---------------------------\e\
    [0m\e[0m\n\e[31m108 |\e[0m\n\e[31m\e[31m    |\e[0m^\e[0m\n\e[31m    |\e[0m'}'\
    \ expected, but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3n3pu8ql.scala:10:20\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mevens\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m       \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3n3pu8ql.scala:12:22\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp3n3pu8ql.scala:29:16 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m            \e[33mval\e[0m \e[36mm\e[0m = x + \e[31m12\e[0m\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mm is already defined\
    \ as \e[33mvalue\e[0m \e[35mm\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3n3pu8ql.scala:30:16 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m            \e[33mval\e[0m \e[36ml\e[0m = x + \e[31m13\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0ml is\
    \ already defined as \e[33mvalue\e[0m \e[35ml\e[0m\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3n3pu8ql.scala:31:16\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m            \e[33mval\e\
    [0m \e[36mk\e[0m = x + \e[31m14\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mk is already defined as \e[33mvalue\e[0m \e[35mk\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote t"
  stdout: ''
  timestamp: 1659800026

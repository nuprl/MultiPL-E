name: HumanEval_24_largest_divisor
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // For a given number n, find the largest number that divides n evenly, smaller\
  \ than n\n    // >>> largest_divisor(15)\n    // 5\n    def largestDivisor(n : Long)\
  \ : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
  \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
  \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
  \ == (7l));\n    }\n\n}\n"
completions: ["        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(103)\n        divisors.add(107)\n        divisors.add(109)\n\
    \        divisors.add(111)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(139)\n        divisors.add(149)\n\
    \        divisors.add(151)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(273)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(365)\n\
    \        divisors.add(367)\n        divisors.add(369)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(383)\n        divisors.add(389)\n",
  "        val divisors = mutable.HashSet[Long]()\n        divisors.add(1)\n     \
    \   divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n      \
    \  divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n     \
    \   divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n   \
    \     divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n \
    \       divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(101)\n        divisors.add(103)\n        divisors.add(107)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(139)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(251)\n        divisors.add(253)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(273)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(287)\n        divisors.add(293)\n\
    \        divisors.add(297)\n        divisors.add(301)\n        divisors.add(303)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(323)\n        divisors.add(329)\n\
    \        divisors.add(337)\n        divisors.add(341)\n        divisors.add(347)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(365)\n        divisors.add(367)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(38",
  "        val divisors = mutable.ListBuffer[Long]()\n        for (d <- 1 until n\
    \ by 2)\n            if (n % d == 0)\n                divisors += d\n        divisors.max",
  "        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n        divisors.add(2)\n\
    \        divisors.add(3)\n        divisors.add(5)\n        divisors.add(7)\n \
    \       divisors.add(11)\n        divisors.add(13)\n        divisors.add(17)\n\
    \        divisors.add(19)\n        divisors.add(23)\n        divisors.add(29)\n\
    \        divisors.add(31)\n        divisors.add(37)\n        divisors.add(43)\n\
    \        divisors.add(49)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(103)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(139)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(251)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(269)\n        divisors.add(271)\n        divisors.add(273)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(287)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(333)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(365)\n        divisors.add(367)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(381)\n        divisors.add(383)\n\
    \        divisors.add(383)\n        divisors.add(383)\n        divisors.add(383)\n\
    \        divisors.add(383)\n        divisors.add(383)", "        val divisors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to n by 2) {\n      \
    \      if (n % d == 0) {\n                divisors += d\n            }\n     \
    \   }\n        divisors.max", "        val divisors = mutable.HashSet[Long]()\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max", "        val divisors = mutable.HashSet[Long]()\n\
    \        divisors.update(0, n)\n        divisors.update(1, n-1)\n        divisors.update(n/2,\
    \ n/2)\n        divisors.update(n/3, n/3)\n        divisors.update(n/4, n/4)\n\
    \        divisors.update(n/5, n/5)\n        divisors.update(n/6, n/6)\n      \
    \  divisors.update(n/7, n/7)\n        divisors.update(n/8, n/8)\n        divisors.update(n/9,\
    \ n/9)\n        divisors.update(n/10, n/10)\n        divisors.update(n/11, n/11)\n\
    \        divisors.update(n/12, n/12)\n        divisors.update(n/13, n/13)\n  \
    \      divisors.update(n/14, n/14)\n        divisors.update(n/15, n/15)\n    \
    \    divisors.update(n/16, n/16)\n        divisors.update(n/17, n/17)\n      \
    \  divisors.update(n/18, n/18)\n        divisors.update(n/19, n/19)\n        divisors.update(n/20,\
    \ n/20)\n        divisors.update(n/21, n/21)\n        divisors.update(n/22, n/22)\n\
    \        divisors.update(n/23, n/23)\n        divisors.update(n/24, n/24)\n  \
    \      divisors.update(n/25, n/25)\n        divisors.update(n/26, n/26)\n    \
    \    divisors.update(n/27, n/27)\n        divisors.update(n/28, n/28)\n      \
    \  divisors.update(n/29, n/29)\n        divisors.update(n/30, n/30)\n        divisors.update(n/31,\
    \ n/31)\n        divisors.update(n/32, n/32)\n        divisors.update(n/33, n/33)\n\
    \        divisors.update(n/34, n/34)\n        divisors.update(n/35, n/35)\n  \
    \      divisors.update(n/36, n/36)\n        divisors.update(n/37, n/37)\n    \
    \    divisors.update(n/38, n/38)\n        divisors.update(n/39, n/39)\n      \
    \  divisors.update(n/40, n/40)\n        divisors.update(n/41, n/41)\n        divisors.update(n/42,\
    \ n/42)\n        divisors.update(n/43, n/43)\n        divisors.update(n/44, n/44)\n\
    \        divisors.update(n/45, n/45)\n        divisors.update(n/46, n/46", " \
    \       val divisors = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to\
    \ n by 2)\n            if (n % i == 0)\n                divisors += i\n      \
    \  divisors.max", "        val divisors = mutable.HashSet[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(103)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(143)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(251)\n        divisors.add(253)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(273)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(287)\n        divisors.add(293)\n\
    \        divisors.add(297)\n        divisors.add(301)\n        divisors.add(303)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(323)\n        divisors.add(327)\n\
    \        divisors.add(331)\n        divisors.add(333)\n        divisors.add(337)\n\
    \        divisors.add(347)\n        divisors.add(349)\n        divisors.add(353)\n\
    \        divisors.add(359)\n        divisors.add(361)\n        divisors.add(363)\n\
    \        divisors.add(365)\n        divisors.add(367)\n        divisors.add(37",
  "        val divisors = mutable.HashSet[Long]()\n        divisors += 2\n       \
    \ divisors += 3\n        divisors += 5\n        divisors += 7\n        divisors\
    \ += 11\n        divisors += 13\n        divisors += 17\n        divisors += 19\n\
    \        divisors += 23\n        divisors += 29\n        divisors += 31\n    \
    \    divisors += 37\n        divisors += 41\n        divisors += 43\n        divisors\
    \ += 47\n        divisors += 53\n        divisors += 59\n        divisors += 61\n\
    \        divisors += 67\n        divisors += 71\n        divisors += 73\n    \
    \    divisors += 79\n        divisors += 83\n        divisors += 89\n        divisors\
    \ += 97\n        divisors += 101\n        divisors += 103\n        divisors +=\
    \ 107\n        divisors += 109\n        divisors += 113\n        divisors += 127\n\
    \        divisors += 131\n        divisors += 137\n        divisors += 139\n \
    \       divisors += 147\n        divisors += 151\n        divisors += 157\n  \
    \      divisors += 163\n        divisors += 167\n        divisors += 173\n   \
    \     divisors += 179\n        divisors += 181\n        divisors += 191\n    \
    \    divisors += 193\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 253\n        divisors += 257\n        divisors +=\
    \ 263\n        divisors += 269\n        divisors += 271\n        divisors += 277\n\
    \        divisors += 281\n        divisors += 283\n        divisors += 293\n \
    \       divisors += 307\n        divisors += 311\n        divisors += 313\n  \
    \      divisors += 317\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 343\n    \
    \    divisors += 347\n        divisors += 353\n        divisors += 359\n     \
    \   divisors += 363\n        divisors += 369\n        divisors += 373\n      \
    \  divisors += 379\n        divisors += 383\n        divisors += 389\n       \
    \ divisors += 397\n        divisors += 401\n        divisors += 407\n        divisors\
    \ += 413\n        divisors += 421\n        divisors += 431\n        divisors +=\
    \ 437\n        divisors += 443\n        divisors += 449\n        divisors += 457\n\
    \        divisors += ", "        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 247\n        divisors += 251\n        divisors += 257\n \
    \       divisors += 263\n        divisors += 269\n        divisors += 271\n  \
    \      divisors += 277\n        divisors += 281\n        divisors += 283\n   \
    \     divisors += 293\n        divisors += 307\n        divisors += 311\n    \
    \    divisors += 313\n        divisors += 317\n        divisors += 323\n     \
    \   divisors += 329\n        divisors += 331\n        divisors += 337\n      \
    \  divisors += 341\n        divisors += 347\n        divisors += 353\n       \
    \ divisors += 359\n        divisors += 363\n        divisors += 369\n        divisors\
    \ += 373\n        divisors += 379\n        divisors += 383\n        divisors +=\
    \ 389\n        divisors += 397\n        divisors += 401\n        divisors += 407\n\
    \        divisors += 411\n        divisors += 413\n        divisors += 417\n \
    \       divisors += 419\n        divisors += 421\n        divisors += 423\n  \
    \      divisors += 427\n        divisors += 431\n        divisors += 433\n   \
    \     divisors += 439\n        divisors += 443", "        val divisors = mutable.HashSet[Long]()\n\
    \        var maxDivisor = 0L\n        for(i <- 1 to n by 2){\n            val\
    \ div = i / 2\n            if(divisors.contains(div)){\n                maxDivisor\
    \ = div\n            }\n            divisors += div\n        }\n        maxDivisor",
  "        val divisors = mutable.ArrayBuffer.empty[Long]\n        for (d <- 1 to\
    \ n by 2)\n            if (n % d == 0)\n                divisors += d\n      \
    \  divisors.max", "        val divisors = mutable.HashSet[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 257\n        divisors += 263\n        divisors += 269\n  \
    \      divisors += 271\n        divisors += 277\n        divisors += 281\n   \
    \     divisors += 283\n        divisors += 293\n        divisors += 307\n    \
    \    divisors += 311\n        divisors += 313\n        divisors += 317\n     \
    \   divisors += 319\n        divisors += 323\n        divisors += 329\n      \
    \  divisors += 331\n        divisors += 337\n        divisors += 341\n       \
    \ divisors += 343\n        divisors += 347\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 397\n        divisors += 401\n        divisors += 407\n \
    \       divisors += 411\n        divisors += 413\n        divisors += 417\n  \
    \      divisors += 419\n        divisors += 421\n        divisors += 423\n   \
    \     divisors += 427\n        divisors += 4", "        val divisors = mutable.HashSet[Long]()\n\
    \        divisors += 2\n        divisors += 3\n        divisors += 5\n       \
    \ divisors += 7\n        divisors += 11\n        divisors += 13\n        divisors\
    \ += 17\n        divisors += 19\n        divisors += 23\n        divisors += 29\n\
    \        divisors += 31\n        divisors += 37\n        divisors += 41\n    \
    \    divisors += 43\n        divisors += 47\n        divisors += 53\n        divisors\
    \ += 59\n        divisors += 61\n        divisors += 67\n        divisors += 71\n\
    \        divisors += 73\n        divisors += 79\n        divisors += 83\n    \
    \    divisors += 89\n        divisors += 97\n        divisors += 101\n       \
    \ divisors += 103\n        divisors += 107\n        divisors += 109\n        divisors\
    \ += 113\n        divisors += 127\n        divisors += 131\n        divisors +=\
    \ 137\n        divisors += 139\n        divisors += 147\n        divisors += 151\n\
    \        divisors += 157\n        divisors += 163\n        divisors += 167\n \
    \       divisors += 173\n        divisors += 179\n        divisors += 181\n  \
    \      divisors += 191\n        divisors += 193\n        divisors += 197\n   \
    \     divisors += 199\n        divisors += 211\n        divisors += 223\n    \
    \    divisors += 227\n        divisors += 229\n        divisors += 233\n     \
    \   divisors += 239\n        divisors += 241\n        divisors += 243\n      \
    \  divisors += 247\n        divisors += 251\n        divisors += 253\n       \
    \ divisors += 257\n        divisors += 263\n        divisors += 269\n        divisors\
    \ += 271\n        divisors += 277\n        divisors += 281\n        divisors +=\
    \ 283\n        divisors += 293\n        divisors += 307\n        divisors += 311\n\
    \        divisors += 313\n        divisors += 317\n        divisors += 319\n \
    \       divisors += 323\n        divisors += 327\n        divisors += 331\n  \
    \      divisors += 337\n        divisors += 343\n        divisors += 347\n   \
    \     divisors += 351\n        divisors += 353\n        divisors += 359\n    \
    \    divisors += 363\n        divisors += 367\n        divisors += 373\n     \
    \   divisors += 379\n        divisors += 383\n        divisors += 389\n      \
    \  divisors += 397\n        divisors += 401\n        divisors += 403\n       \
    \ divisors += 407\n        divisors += 411\n        divisors += 413\n        divisors\
    \ += 417\n        divisors += 419\n        divisors += 423", "        val divisors\
    \ = mutable.HashSet[Long]()\n        for (d <- 1 to n by 2)\n            if (n\
    \ % d == 0)\n                divisors += d\n        divisors.max", "        val\
    \ divisors = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n\
    \        divisors += 5\n        divisors += 7\n        divisors += 11\n      \
    \  divisors += 13\n        divisors += 17\n        divisors += 19\n        divisors\
    \ += 23\n        divisors += 29\n        divisors += 31\n        divisors += 37\n\
    \        divisors += 41\n        divisors += 43\n        divisors += 47\n    \
    \    divisors += 53\n        divisors += 59\n        divisors += 61\n        divisors\
    \ += 67\n        divisors += 71\n        divisors += 73\n        divisors += 79\n\
    \        divisors += 83\n        divisors += 89\n        divisors += 97\n    \
    \    divisors += 101\n        divisors += 103\n        divisors += 107\n     \
    \   divisors += 109\n        divisors += 113\n        divisors += 127\n      \
    \  divisors += 131\n        divisors += 137\n        divisors += 139\n       \
    \ divisors += 147\n        divisors += 151\n        divisors += 157\n        divisors\
    \ += 163\n        divisors += 167\n        divisors += 173\n        divisors +=\
    \ 179\n        divisors += 181\n        divisors += 191\n        divisors += 197\n\
    \        divisors += 199\n        divisors += 211\n        divisors += 223\n \
    \       divisors += 227\n        divisors += 229\n        divisors += 233\n  \
    \      divisors += 239\n        divisors += 241\n        divisors += 243\n   \
    \     divisors += 247\n        divisors += 251\n        divisors += 257\n    \
    \    divisors += 263\n        divisors += 269\n        divisors += 271\n     \
    \   divisors += 277\n        divisors += 281\n        divisors += 283\n      \
    \  divisors += 293\n        divisors += 307\n        divisors += 311\n       \
    \ divisors += 313\n        divisors += 317\n        divisors += 323\n        divisors\
    \ += 329\n        divisors += 331\n        divisors += 337\n        divisors +=\
    \ 343\n        divisors += 349\n        divisors += 353\n        divisors += 359\n\
    \        divisors += 363\n        divisors += 369\n        divisors += 373\n \
    \       divisors += 379\n        divisors += 383\n        divisors += 389\n  \
    \      divisors += 397\n        divisors += 401\n        divisors += 407\n   \
    \     divisors += 413\n        divisors += 421\n        divisors += 423\n    \
    \    divisors += 429\n        divisors += 433\n        divisors += 439\n     \
    \   divisors += 443\n        divisors += 449\n        divisors += 457\n      \
    \  divisors += 461", "        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max", "        val divisors\
    \ = mutable.ListBuffer[Long]()\n        for (d <- 1 until n by 2)\n          \
    \  if (n % d == 0)\n                divisors += d\n        divisors.max", "  \
    \      val divisors = mutable.HashSet[Long]()\n        divisors += 2\n       \
    \ divisors += 3\n        divisors += 5\n        divisors += 7\n        divisors\
    \ += 11\n        divisors += 13\n        divisors += 17\n        divisors += 19\n\
    \        divisors += 23\n        divisors += 29\n        divisors += 31\n    \
    \    divisors += 37\n        divisors += 41\n        divisors += 43\n        divisors\
    \ += 47\n        divisors += 53\n        divisors += 59\n        divisors += 61\n\
    \        divisors += 67\n        divisors += 71\n        divisors += 73\n    \
    \    divisors += 79\n        divisors += 83\n        divisors += 89\n        divisors\
    \ += 97\n        divisors += 101\n        divisors += 103\n        divisors +=\
    \ 107\n        divisors += 109\n        divisors += 113\n        divisors += 127\n\
    \        divisors += 131\n        divisors += 137\n        divisors += 139\n \
    \       divisors += 147\n        divisors += 151\n        divisors += 157\n  \
    \      divisors += 163\n        divisors += 167\n        divisors += 173\n   \
    \     divisors += 179\n        divisors += 181\n        divisors += 191\n    \
    \    divisors += 193\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 253\n        divisors += 257\n        divisors +=\
    \ 263\n        divisors += 269\n        divisors += 271\n        divisors += 277\n\
    \        divisors += 281\n        divisors += 283\n        divisors += 293\n \
    \       divisors += 307\n        divisors += 311\n        divisors += 313\n  \
    \      divisors += 317\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 343\n    \
    \    divisors += 347\n        divisors += 353\n        divisors += 359\n     \
    \   divisors += 363\n        divisors += 369\n        divisors += 373\n      \
    \  divisors += 379\n        divisors += 383\n        divisors += 389\n       \
    \ divisors += 397\n        divisors += 401\n        divisors += 407\n        divisors\
    \ += 413\n        divisors += 417\n        divisors += 423\n        divisors +=\
    \ 429\n        divisors += 431\n        divisors += 437\n        divisors += 443\n\
    \        divisors += "]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            } else {\n         \
    \       seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz48vo3ey.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz48vo3ey.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            } else {\n              \
    \  seen += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprp2xgee6.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmprp2xgee6.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val result = numbers.foldLeft(List[Long]())((acc,\
    \ x) => {\n            if (acc.contains(x)) {\n                acc\n         \
    \   } else {\n                acc :+ x\n            }\n        })\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1c58qbvl.scala:21)\n\tat Problem.main(tmp1c58qbvl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val counts = numbers.groupBy(x => x).mapValues(_.size)\n\
    \        val result = numbers.filter(x => counts(x) > 1)\n        counts.toList.sortBy(_._1).reverse.map(x\
    \ => x._2)\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpff8zntlt.scala:15)\n\tat Problem.main(tmpff8zntlt.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            } else {\n         \
    \       seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz48vo3ey.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz48vo3ey.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen.add(n))\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpviyogray.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpviyogray.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen.add(n))\n\e[31m\e\
    [31m   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen\
    \ += n)\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpok06odez.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpok06odez.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen += n)\n\e[31m\e[31m\
    \   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            } else {\n              \
    \  seen += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprp2xgee6.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmprp2xgee6.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen\
    \ += n)\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpok06odez.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpok06odez.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen += n)\n\e[31m\e[31m\
    \   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(numbers.indexOf(n)))\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt42kpbuc.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpt42kpbuc.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(numbers.indexOf(n)))\n\e[31m\e[31m   |\e[0m\
    \                                                   ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.filter(x => !seen.contains(x)).sortWith(_ < _)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd542z36c.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            } else {\n              \
    \  seen += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprp2xgee6.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmprp2xgee6.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => {\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        })\n        numbers\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiaphrpop.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpiaphrpop.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val counts = numbers.groupBy(x => x).mapValues(_.size)\n\
    \        val toRemove = counts.map(_._2).filter(_ > 1)\n        numbers.filterNot(x\
    \ => toRemove.contains(x))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5xtjiwwe.scala:11:40 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        numbers.filterNot(\e[36mx\e[0m => toRemove.contains(x))\n\
    \e[31m\e[31m   |\e[0m                               ^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m            value contains is not a member of scala.collection.View[Int]\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            } else {\n         \
    \       seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz48vo3ey.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz48vo3ey.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers -= n\n            } else {\n                seen += n\n    \
    \        }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgb_28zut.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpgb_28zut.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(x => if (seen.contains(x)) numbers.remove(x))\n     \
    \   numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuogj7osr.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpuogj7osr.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mx\e[0m => \e[33mif\e[0m\
    \ (seen.contains(x)) numbers.remove(x))\n\e[31m\e[31m   |\e[0m               \
    \                                    ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ remove is not a member of List[Long] - did you mean numbers.reduce?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            } else {\n         \
    \       seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz48vo3ey.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz48vo3ey.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.filter(x => !seen.contains(x)).sortBy(x => x).reverse\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv8f9n0bk.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers -= n\n            }\n            else {\n                seen\
    \ += n\n            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi0_dpfv.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi0_dpfv.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            } else {\n         \
    \       seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz48vo3ey.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz48vo3ey.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers -= n\n            }\n            else {\n                seen\
    \ += n\n            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi0_dpfv.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi0_dpfv.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            } else {\n              \
    \  seen += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprp2xgee6.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmprp2xgee6.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            }\n            else {\n             \
    \   seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3atmntxs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3atmntxs.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3ffz6ra8.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3ffz6ra8.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3ffz6ra8.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3ffz6ra8.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => {\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        })\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnz6rdy08.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpnz6rdy08.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers -= n\n            } else {\n                seen += n\n    \
    \        }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgb_28zut.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpgb_28zut.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3ffz6ra8.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3ffz6ra8.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(x => if (seen.add(x)) x else ())\n        numbers.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz4rjvne5.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val result = new mutable.ListBuffer[Long]()\n\
    \        numbers.foreach(number => if (result.contains(number)) else result +=\
    \ number)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpe7l54ume.scala:10:63 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mnumber\e[0m => \e[33mif\e\
    [0m (result.contains(number)) \e[33melse\e[0m result += number)\n\e[31m\e[31m\
    \   |\e[0m                                                               ^^^^\e\
    [0m\n\e[31m   |\e[0m                                       'then' expected, but\
    \ 'else' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe7l54ume.scala:9:25\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mresult\e[0m = \e[33mnew\e[0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e\
    [31m  |\e[0m                         ^^^^^^^\e[0m\n\e[31m  |\e[0m            \
    \             Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[33m\e[33m-- [E129] Potential Issue\
    \ Warning: /tmp/tmpe7l54ume.scala:10:84 ----------------\e[0m\e[0m\n\e[33m10 |\e\
    [0m        numbers.foreach(\e[36mnumber\e[0m => \e[33mif\e[0m (result.contains(number))\
    \ \e[33melse\e[0m result += number)\n\e[33m\e[33m   |\e[0m                   \
    \                                                                 ^\e[0m\n\e[33m\
    \   |\e[0mA pure expression does nothing in statement position; you may be omitting\
    \ necessary parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 warning found\n2 errors found\n"
  stdout: ''
  timestamp: 1659794700
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val result = numbers.foldLeft(List[Long]())((acc,\
    \ x) => {\n            if (acc.contains(x)) {\n                acc\n         \
    \   } else {\n                acc :+ x\n            }\n        })\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1c58qbvl.scala:21)\n\tat Problem.main(tmp1c58qbvl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen\
    \ += n)\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpok06odez.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpok06odez.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen += n)\n\e[31m\e[31m\
    \   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers -= number\n            } else {\n                seen\
    \ += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvovl4pg.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpgvovl4pg.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= number\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen.add(n))\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpviyogray.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpviyogray.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen.add(n))\n\e[31m\e\
    [31m   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen\
    \ += n)\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpok06odez.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpok06odez.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen += n)\n\e[31m\e[31m\
    \   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            } else {\n         \
    \       seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz48vo3ey.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz48vo3ey.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.filter(x => !seen.contains(x)).sortBy(x => x).reverse\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv8f9n0bk.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            }\n            else {\n             \
    \   seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3atmntxs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3atmntxs.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(numbers.indexOf(n)))\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt42kpbuc.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpt42kpbuc.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(numbers.indexOf(n)))\n\e[31m\e[31m   |\e[0m\
    \                                                   ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            } else {\n              \
    \  seen += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprp2xgee6.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmprp2xgee6.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val result = numbers.foldLeft(List[Long]())((acc,\
    \ x) => {\n            if (acc.contains(x)) {\n                acc\n         \
    \   } else {\n                acc :+ x\n            }\n        })\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1c58qbvl.scala:21)\n\tat Problem.main(tmp1c58qbvl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            } else {\n              \
    \  seen += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprp2xgee6.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmprp2xgee6.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            } else {\n              \
    \  seen += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprp2xgee6.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmprp2xgee6.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(x => if (seen.contains(x)) numbers.remove(x))\n     \
    \   numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuogj7osr.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpuogj7osr.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mx\e[0m => \e[33mif\e[0m\
    \ (seen.contains(x)) numbers.remove(x))\n\e[31m\e[31m   |\e[0m               \
    \                                    ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ remove is not a member of List[Long] - did you mean numbers.reduce?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            } else {\n              \
    \  seen += number\n            }\n        }\n        numbers.toList\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuctr4c5o.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpuctr4c5o.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val counts = numbers.groupBy(x => x).mapValues(_.size)\n\
    \        val result = counts.filter(_._2 > 1).map(_._1)\n        result\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwskktit6.scala:11:8\
    \ ---------------------\e[0m\e[0m\n\e[31m11 |\e[0m        result\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (result : scala.collection.View[Long])\n\
    \e[31m   |\e[0m        Required: List[Long]\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => {\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        })\n        numbers\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiaphrpop.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpiaphrpop.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val result = numbers.groupBy(x => x).mapValues(_.size)\n\
    \        val filtered = result.filter(_._2 > 1).map(_._1)\n        filtered.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpq2tkasr0.scala:15)\n\tat Problem.main(tmpq2tkasr0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.filter(x => !seen.contains(x)).sortBy(x => x).reverse\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv8f9n0bk.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers -= n\n            }\n            else {\n                seen\
    \ += n\n            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi0_dpfv.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi0_dpfv.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val result = new mutable.ListBuffer[Long]()\n\
    \        numbers.foreach { number =>\n            if (result.contains(number))\
    \ {\n                result -= number\n            } else {\n                result\
    \ += number\n            }\n        }\n        result.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsez7ehgi.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m              \
    \           ^^^^^^^\e[0m\n\e[31m  |\e[0m                         Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.filter(x => !seen.add(x))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplomx61qu.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers -= n\n            } else {\n                seen += n\n    \
    \        }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgb_28zut.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpgb_28zut.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen\
    \ += n)\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpok06odez.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpok06odez.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen += n)\n\e[31m\e[31m\
    \   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers -= n\n            }\n            else {\n                seen\
    \ += n\n            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi0_dpfv.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi0_dpfv.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(x => if (seen.add(x)) x else ())\n        numbers.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz4rjvne5.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(x => if (seen.add(x)) x else ())\n        numbers.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz4rjvne5.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.filter(x => !seen.contains(x)).sortWith(_ < _).reverse\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwtpl8d0j.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            }\n            else {\n             \
    \   seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3atmntxs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3atmntxs.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \        else seen.add(n))\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvctbio1a.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpvctbio1a.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\e[31m\e[31m   |\e[0m\
    \                                                   ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers -= n\n            } else {\n                seen += n\n    \
    \        }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgb_28zut.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpgb_28zut.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val result = numbers.groupBy(x => x).mapValues(_.size)\n\
    \        val result2 = result.filter(_._2 > 1).map(_._1)\n        result2.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvtml20jl.scala:15)\n\tat Problem.main(tmpvtml20jl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794707
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.filter(x => !seen.contains(x)).sortWith(_ < _).reverse\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwtpl8d0j.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val result = new mutable.HashSet[Long]()\n\
    \        numbers.foreach(x => if (!result.contains(x)) result += x)\n        numbers.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprkfacp4y.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                 \
    \        ^^^^^^^\e[0m\n\e[31m  |\e[0m                         Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            }\n            else {\n             \
    \   seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3atmntxs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3atmntxs.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.filter(x => !seen.add(x))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplomx61qu.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3ffz6ra8.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3ffz6ra8.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            }\n            else {\n             \
    \   seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3atmntxs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3atmntxs.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val counts = numbers.groupBy(x => x).mapValues(_.size)\n\
    \        val result = counts.filter(_._2 > 1).map(_._1)\n        result\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwskktit6.scala:11:8\
    \ ---------------------\e[0m\e[0m\n\e[31m11 |\e[0m        result\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (result : scala.collection.View[Long])\n\
    \e[31m   |\e[0m        Required: List[Long]\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen\
    \ += n)\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpok06odez.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpok06odez.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen += n)\n\e[31m\e[31m\
    \   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(x => if (seen.contains(x)) numbers.remove(x))\n     \
    \   numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuogj7osr.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpuogj7osr.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mx\e[0m => \e[33mif\e[0m\
    \ (seen.contains(x)) numbers.remove(x))\n\e[31m\e[31m   |\e[0m               \
    \                                    ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ remove is not a member of List[Long] - did you mean numbers.reduce?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen.add(n))\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpviyogray.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpviyogray.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen.add(n))\n\e[31m\e\
    [31m   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val counts = numbers.groupBy(x => x).mapValues(_.size)\n\
    \        val result = counts.mapValues(x => if (x > 1) x else 1)\n        val\
    \ result = counts.mapValues(x => if (x > 1) x else 1)\n        val result = counts.mapValues(x\
    \ => if (x > 1) x else 1)\n        val result = counts.mapValues(x => if (x >\
    \ 1) x else 1)\n        val result = counts.mapValues(x => if (x > 1) x else 1)\n\
    \        val result = counts.mapValues(x => if (x > 1) x else 1)\n        val\
    \ result = counts.mapValues(x => if (x > 1) x else 1)\n        val result = counts.mapValues(x\
    \ => if (x > 1) x else 1)\n        val result = counts.mapValues(x => if (x >\
    \ 1) x else 1)\n        val result = counts.mapValues(x => if (x > 1) x else 1)\n\
    \        val result = counts.mapValues(x => if (x > 1) x else 1)\n        val\
    \ result = counts.mapValues(x => if (x > 1) x else 1)\n        val result = counts.mapValues(x\
    \ => if (x > 1) x else 1)\n        val result = counts.mapValues(x => if (x >\
    \ 1) x else 1)\n        val result = counts.mapValues(x => if (x > 1) x else 1)\n\
    \        val result = counts.mapValues(x => if (x > 1) x else 1)\n        val\
    \ result = counts.mapValues(x => if (x > 1) x else 1)\n        val result = counts.mapValues(x\
    \ => if (x > 1) x else 1)\n        val result = counts.mapValues(x => if (x >\
    \ 1) x else 1)\n        val result = counts.mapValues(x => if (x > 1) x else 1)\n\
    \        val result = counts.mapValues(x => if (x > 1) x else 1)\n        val\
    \ result = counts.mapValues(x => if (x > 1) x else 1)\n        val result = counts.mapValues(x\
    \ => if (x > 1) x else 1)\n        val result = counts.mapValues(x => if (x >\
    \ 1) x else 1)\n        val result = counts.mapValues(x => if (x > 1) x else 1)\n\
    \        val result = counts.mapValues(x => if (x > 1) x else 1)\n        val\
    \ result = counts.mapValues(x => if (x > 1) x else 1)\n        val result = counts.mapValues(x\
    \ => if (x > 1) x else 1)\n        val result = counts.mapValues(x => if (x >\
    \ 1) x else 1)\n        val result = counts.mapValues(x => if (x > 1) x else 1)\n\
    \        val result = counts.mapValues(x => if (x > 1) x else 1)\n        val\
    \ result = counts.mapValues(x => if (x > 1) x else 1)\n        val result = counts.mapValues(x\
    \ => if (x > 1) x else 1)\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpiig4y7rk.scala:43:11 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpiig4y7rk.scala:11:12 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = counts.mapValues(\e\
    [36mx\e[0m => \e[33mif\e[0m (x > \e[31m1\e[0m) x \e[33melse\e[0m \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mresult is already defined as \e[33mvalue\e[0m \e[35mresult\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiig4y7rk.scala:12:12 ---------------------------\e[0m\e[0m\n\e\
    [31m12 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = counts.mapValues(\e[36mx\e\
    [0m => \e[33mif\e[0m (x > \e[31m1\e[0m) x \e[33melse\e[0m \e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mresult is already defined as \e[33mvalue\e[0m \e[35mresult\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiig4y7rk.scala:13:12 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = counts.mapValues(\e[36mx\e\
    [0m => \e[33mif\e[0m (x > \e[31m1\e[0m) x \e[33melse\e[0m \e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mresult is already defined as \e[33mvalue\e[0m \e[35mresult\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpiig4y7rk.scala:14:12 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = counts.mapValues(\e[36mx\e\
    [0m => \e[33mif\e[0m (x > \e[3"
  stdout: ''
  timestamp: 1659794706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpih6oy8bi.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpih6oy8bi.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val counts = mutable.HashMap.empty[Long,\
    \ Int]\n        numbers.foreach { n =>\n            counts.getOrElseUpdate(n,\
    \ 0)\n            counts.get(n) += 1\n        }\n        val result = new ListBuffer[Long]()\n\
    \        counts.foreach { case (n, count) =>\n            if (count > 1) {\n \
    \               result ++= numbers.filterNot(n => n == n)\n            }\n   \
    \     }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqk5bbsq1.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m  |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                     Not found: mutable\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => {\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            }\n            else {\n             \
    \   seen += n\n            }\n        })\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphbwopy85.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmphbwopy85.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            } else {\n              \
    \  seen += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprp2xgee6.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmprp2xgee6.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3ffz6ra8.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3ffz6ra8.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers -= n\n            }\n            else {\n                seen\
    \ += n\n            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi0_dpfv.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi0_dpfv.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            } else {\n         \
    \       seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz48vo3ey.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz48vo3ey.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(x => if (seen.add(x)) x else ())\n        numbers.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz4rjvne5.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            }\n            else {\n             \
    \   seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3atmntxs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3atmntxs.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val counts = numbers.groupBy(x => x).mapValues(_.size)\n\
    \        val filtered = counts.filter(_._2 > 1).map(_._1)\n        filtered.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8b5fg992.scala:15)\n\tat Problem.main(tmp8b5fg992.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794707
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers -= n\n            }\n            else {\n                seen\
    \ += n\n            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi0_dpfv.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi0_dpfv.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.filter(x => !seen.contains(x)).sortWith(_ < _).reverse\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwtpl8d0j.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) numbers.remove(number)\n\
    \            else seen.add(number)\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqhgw83sl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqhgw83sl.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen.add(n))\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpviyogray.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpviyogray.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen.add(n))\n\e[31m\e\
    [31m   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val counts = numbers.groupBy(x => x).mapValues(_.size)\n\
    \        val result = numbers.filter(x => counts(x) > 1)\n        result\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv53rfsa5.scala:15)\n\tat Problem.main(tmpv53rfsa5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794707
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            }\n            else {\n             \
    \   seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3atmntxs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3atmntxs.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers -= number\n            } else {\n                seen\
    \ += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvovl4pg.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpgvovl4pg.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= number\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val result = numbers.toSet.toList\n\
    \        result.sortWith(_ < _)\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpidifze2y.scala:16)\n\tat Problem.main(tmpidifze2y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794707
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen.add(n))\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpviyogray.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpviyogray.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen.add(n))\n\e[31m\e\
    [31m   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(x => if (seen.contains(x)) numbers.remove(x))\n     \
    \   numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuogj7osr.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpuogj7osr.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mx\e[0m => \e[33mif\e[0m\
    \ (seen.contains(x)) numbers.remove(x))\n\e[31m\e[31m   |\e[0m               \
    \                                    ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ remove is not a member of List[Long] - did you mean numbers.reduce?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val counts = numbers.groupBy(x => x).mapValues(_.size)\n\
    \        val toRemove = counts.map(_._2).filter(_ > 1)\n        numbers.filterNot(x\
    \ => toRemove.contains(x))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5xtjiwwe.scala:11:40 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        numbers.filterNot(\e[36mx\e[0m => toRemove.contains(x))\n\
    \e[31m\e[31m   |\e[0m                               ^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m            value contains is not a member of scala.collection.View[Int]\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val counts = numbers.groupBy(x => x).mapValues(_.size)\n\
    \        val result = counts.filter(_._2 > 1).map(_._1)\n        result\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwskktit6.scala:11:8\
    \ ---------------------\e[0m\e[0m\n\e[31m11 |\e[0m        result\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (result : scala.collection.View[Long])\n\
    \e[31m   |\e[0m        Required: List[Long]\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.filter(n => seen.add(n)).sortWith(_ < _)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdj9savjx.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            } else {\n         \
    \       seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz48vo3ey.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz48vo3ey.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            } else {\n         \
    \       seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz48vo3ey.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz48vo3ey.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            } else {\n              \
    \  seen += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprp2xgee6.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmprp2xgee6.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers -= n\n            } else {\n                seen += n\n    \
    \        }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgb_28zut.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpgb_28zut.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers -= number\n            } else {\n                seen\
    \ += number\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgvovl4pg.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpgvovl4pg.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= number\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { number =>\n            if (seen.contains(number)) {\n\
    \                numbers.remove(number)\n            }\n            else {\n \
    \               seen += number\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcab_say0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcab_say0.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(numbers.indexOf(n)))\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt42kpbuc.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpt42kpbuc.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(numbers.indexOf(n)))\n\e[31m\e[31m   |\e[0m\
    \                                                   ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(n => if (seen.contains(n)) numbers.remove(n) else seen.add(n))\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpviyogray.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpviyogray.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen.add(n))\n\e[31m\e\
    [31m   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(n)\n            } else {\n                seen += n\n\
    \            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9kr0m64m.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9kr0m64m.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach(x => if (seen.contains(x)) numbers.remove(x))\n     \
    \   numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuogj7osr.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpuogj7osr.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mx\e[0m => \e[33mif\e[0m\
    \ (seen.contains(x)) numbers.remove(x))\n\e[31m\e[31m   |\e[0m               \
    \                                    ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ remove is not a member of List[Long] - did you mean numbers.reduce?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659794702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n    // [1, 3, 4]\n    def removeDuplicates(numbers\
    \ : List[Long]) : List[Long] = {\n        val seen = mutable.HashSet[Long]()\n\
    \        numbers.foreach { n =>\n            if (seen.contains(n)) {\n       \
    \         numbers.remove(numbers.indexOf(n))\n            }\n            else\
    \ {\n                seen += n\n            }\n        }\n        numbers\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl8ocwb9u.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl8ocwb9u.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794702

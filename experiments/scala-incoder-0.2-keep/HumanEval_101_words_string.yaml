name: HumanEval_101_words_string
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You will be given a string of words separated by commas or spaces. Your\
  \ task is\n    // to split the string into words and return an array of the words.\n\
  \    // For example:\n    // words_string(\"Hi, my name is John\") == [\"Hi\", \"\
  my\", \"name\", \"is\", \"John\"]\n    // words_string(\"One, two, three, four,\
  \ five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n \
  \   def wordsString(s : String) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(wordsString((\"Hi,\
  \ my name is John\")).equals((List[String](\"Hi\", \"my\", \"name\", \"is\", \"\
  John\"))));\n    assert(wordsString((\"One, two, three, four, five, six\")).equals((List[String](\"\
  One\", \"two\", \"three\", \"four\", \"five\", \"six\"))));\n    assert(wordsString((\"\
  Hi, my name\")).equals((List[String](\"Hi\", \"my\", \"name\"))));\n    assert(wordsString((\"\
  One,, two, three, four, five, six,\")).equals((List[String](\"One\", \"two\", \"\
  three\", \"four\", \"five\", \"six\"))));\n    assert(wordsString((\"\")).equals((List[String]())));\n\
  \    assert(wordsString((\"ahmed     , gamal\")).equals((List[String](\"ahmed\"\
  , \"gamal\"))));\n    }\n\n}\n"
completions: ["        val words = s.split(\", \")\n        words.toList", "     \
    \   val words = s.split(\", \")\n        val words2 = words.map(_.trim).filter(_.nonEmpty)\n\
    \        words2.toList", "        val words = s.split(\", \")\n        words.toList",
  "        val words = s.split(\", \")\n        words.toList", "        val words\
    \ = s.split(\",\")\n        words.toList", "        val words = s.split(\",\"\
    )\n        val wordsArray = words.toList\n        wordsArray.map(_.trim).toList",
  "        val words = s.split(\", \")\n        words.toList", "        val words\
    \ = s.split(\", \")\n        val wordsArray = words.toList\n        wordsArray",
  "        val words = s.split(\"[,\\\\s]+\").map(_.trim).toList\n        words.toList",
  "        val words = s.split(\", \")\n        words.toList", "        val words\
    \ = s.split(\", \")\n        words.toList", "        val words = s.split(\"[,\
    \ ]+\")\n        words.toList", "        val words = s.split(\", \")\n       \
    \ words.toList", "        val words = s.split(\", \")\n        val words2 = words.map(_.trim).toList\n\
    \        words2.toList", "        val words = s.split(\"[, ]+\")\n        words.toList",
  "        val words = s.split(\", \")\n        val wordsArray = words.toArray\n \
    \       val wordsArray2 = words.toList\n        val wordsArray3 = words.toSeq\n\
    \        val wordsArray4 = words.toSet\n        val wordsArray5 = words.toMap\n\
    \        val wordsArray6 = words.toSeq.map(_.toUpperCase)\n        val wordsArray7\
    \ = words.toSeq.map(_.toLowerCase)\n        val wordsArray8 = words.toSeq.map(_.toUpperCase)\n\
    \        val wordsArray9 = words.toSeq.map(_.toLowerCase)\n        val wordsArray10\
    \ = words.toSeq.map(_.toUpperCase)\n        val wordsArray11 = words.toSeq.map(_.toLowerCase)\n\
    \        val wordsArray12 = words.toSeq.map(_.toUpperCase)\n        val wordsArray13\
    \ = words.toSeq.map(_.toLowerCase)\n        val wordsArray14 = words.toSeq.map(_.toUpperCase)\n\
    \        val wordsArray15 = words.toSeq.map(_.toLowerCase)\n        val wordsArray16\
    \ = words.toSeq.map(_.toUpperCase)\n        val wordsArray17 = words.toSeq.map(_.toLowerCase)\n\
    \        val wordsArray18 = words.toSeq.map(_.toUpperCase)\n        val wordsArray19\
    \ = words.toSeq.map(_.toLowerCase)\n        val wordsArray20 = words.toSeq.map(_.toUpperCase)\n\
    \        val wordsArray21 = words.toSeq.map(_.toLowerCase)\n        val wordsArray22\
    \ = words.toSeq.map(_.toUpperCase)\n        val wordsArray23 = words.toSeq.map(_.toLowerCase)\n\
    \        val wordsArray24 = words.toSeq.map(_.toUpperCase)\n        val wordsArray25\
    \ = words.toSeq.map(_.toLowerCase)\n        val wordsArray26 = words.toSeq.map(_.toUpperCase)\n\
    \        val wordsArray27 = words.toSeq.map(_.toLowerCase)\n        val wordsArray28\
    \ = words.toSeq.map(_.toUpperCase)\n        val wordsArray29 = words.toSeq.map(_.toLowerCase)\n\
    \        val wordsArray30 = words.toSeq.map(_.toUpperCase)\n        val wordsArray31\
    \ = words.toSeq.map(_.toLowerCase)\n        val wordsArray32 = words.toSeq.map(_.toUpperCase)\n\
    \        val wordsArray33 = words.toSeq.map(_.toLowerCase)\n        val wordsArray34\
    \ = words.toSeq.map(_.toUpperCase)\n        val wordsArray35 = words.toSeq.map(_.toLowerCase)\n\
    \        ", "        val words = s.split(\", \")\n        val words2 = words.map(_.trim).filter(_.nonEmpty)\n\
    \        words2.toList", "        val words = s.split(\"\\\\s*,\\\\s*\")\n   \
    \     words.toList", "        val words = s.split(\", \")\n        val words2\
    \ = words.map(_.trim).filter(_.nonEmpty)\n        words2.toList", "        val\
    \ words = s.split(\",\")\n        val wordsArray = words.toList\n        wordsArray"]
stop_tokens:
- "\n    }\n"

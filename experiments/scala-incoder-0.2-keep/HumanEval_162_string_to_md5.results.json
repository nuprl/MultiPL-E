{
  "language": "scala",
  "name": "HumanEval_162_string_to_md5",
  "results": [
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw6_4zcka.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwvtzv_xd.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val bytes = text.getBytes(\"UTF-8\")\n        val md5 = md5.getInstance\n        md5.update(bytes)\n        val md5Hash = md5.digest()\n        val md5HashString = Array[Byte](md5Hash).map(\"%02x\".format(_)).mkString\n        Option(md5HashString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmphf24d4gi.scala:10:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = md5.getInstance\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmphf24d4gi.scala:8:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798903
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8r5owv9y.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7ovi09tq.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7ovi09tq.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw6_4zcka.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmi3fl9_g.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hex)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqxq3wkvy.scala:10:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n            val hex = digest.map(x => Integer.toHexString(0xFF & x))\n            Some(hex.mkString.toLowerCase)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp1j4taly9.scala:10:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7ovi09tq.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzch0gzfd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpridn27uc.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzch0gzfd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(Digest.md5Hex(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpho1xtsq1.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(Digest.md5Hex(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: Digest\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpsxw6d4_z.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgwkcmenu.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val md5String = new String(digest)\n        val md5Hash = md5String.substring(0, 16)\n        Option(md5Hash)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpn6awh_dg.scala:8:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798902
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmphb7u5cs4.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmphb7u5cs4.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).toString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpioxhpi8n.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).toString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp24dei5um.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmp24dei5um.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798902
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8r5owv9y.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph12l1rpo.scala:10:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).take(32))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi9gdxyft.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).take(\u001b[31m32\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpridn27uc.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw6_4zcka.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(Digest.md5Hex(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpho1xtsq1.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(Digest.md5Hex(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: Digest\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8r5owv9y.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5String = digest.map(\"%02x\".format(_)).mkString\n            Some(md5String)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp738gqp6u.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(DigestUtils.md5Hex(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgswon13.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(DigestUtils.md5Hex(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: DigestUtils\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798908
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpyirvfn5o.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyirvfn5o.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798908
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hex = bytes.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsfh71gkc.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.stringToMd5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj9kbag8p.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.stringToMd5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798911
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw6_4zcka.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqxq3wkvy.scala:10:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hex = bytes.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsfh71gkc.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hex = bytes.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9uiom4iy.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798909
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpyj84eigd.scala:12:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyj84eigd.scala:10:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798908
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest\n        val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(\"%02x\".format(_)).mkString\n        Option(md5)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpgwpoh_lk.scala:10:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgwpoh_lk.scala:8:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798908
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp9wnjhvxu.scala:12:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9wnjhvxu.scala:10:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798909
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).take(32))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi9gdxyft.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).take(\u001b[31m32\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7hricfo3.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798909
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val md5 = digest.map(\"%02x\".format(_)).mkString\n        Option(md5)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp62c8prwt.scala:10:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmp62c8prwt.scala:8:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798909
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7ovi09tq.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw6_4zcka.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpafnivr0g.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798912
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hex = bytes.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsfh71gkc.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7hricfo3.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798909
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpsxw6d4_z.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(DigestUtils.md5Hex(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgswon13.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(DigestUtils.md5Hex(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: DigestUtils\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798908
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.stringToMd5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj9kbag8p.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.stringToMd5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798911
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hex = bytes.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsfh71gkc.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwf2u_4w0.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798910
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzch0gzfd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmi3fl9_g.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hex)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpcq9xgqy7.scala:10:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798911
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw6_4zcka.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(DigestUtils.md5Hex(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgswon13.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(DigestUtils.md5Hex(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: DigestUtils\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798908
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hex = bytes.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsfh71gkc.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7ovi09tq.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzch0gzfd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.stringToMd5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj9kbag8p.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.stringToMd5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798911
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprpnotwxc.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798913
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpridn27uc.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(DigestUtils.md5Hex(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgswon13.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(DigestUtils.md5Hex(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: DigestUtils\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798908
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpyj84eigd.scala:12:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyj84eigd.scala:10:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798908
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val md5String = new String(digest)\n        val md5Hash = md5String.substring(0, 8)\n        Some(md5Hash)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmprcdpsgp_.scala:8:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798911
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7ovi09tq.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw6_4zcka.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7ovi09tq.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmi3fl9_g.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hex)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmphb7u5cs4.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmphb7u5cs4.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgwkcmenu.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val buffer = new Array[Byte](1024)\n        var len : Int = 0\n        val md5Bytes = md5.digest(text.getBytes(\"UTF-8\"))\n        val md5Hex = for (i <- 0 until md5Bytes.length) yield {\n            val hex = Integer.toHexString(md5Bytes(i))\n            if (hex.length == 1) hex + 0\n            else hex\n        }\n        val md5HexString = md5Hex.mkString.reverse.mkString\n        val md5HexStringLength = md5HexString.length\n        val md5HexStringLength = md5HexString.length\n        if (md5HexStringLength > 32) None\n        else Some(md5HexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpvo1ytsfv.scala:19:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5HexStringLength\u001b[0m = md5HexString.length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5HexStringLength is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5HexStringLength\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvo1ytsfv.scala:8:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798911
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzch0gzfd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5Hex = digest.map(\"%02x\".format(_)).mkString\n            Some(md5Hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpc_keqpix.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798911
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw6_4zcka.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpcq9xgqy7.scala:10:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798911
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val bytes = text.getBytes\n        val md5 = java.security.MessageDigest.getInstance(\"MD5\")\n        md5.update(bytes)\n        val md5String = md5.digest()\n        val md5HexString = java.util.Arrays.toString(md5Hex(md5String))\n        val md5HexString = md5HexString.replaceAll(\"[\\\\[\\\\]]\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\s\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"^\\\\s\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\$\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"^\\\\$\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\+\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\-\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\*\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\?\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\!\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\(\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\)\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\[\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\]\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\{\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\}\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\|\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\^\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\~\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\!\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\@\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\#\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\$\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\%\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\^\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\&\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\*\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\(\", \"\")\n        val md5HexString = md5HexString.replaceAll(\"\\\\)\", \"\")\n        val md5Hex\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj_kx_8g6.scala:44:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpj_kx_8g6.scala:10:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = java.security.MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpj_kx_8g6.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5HexString\u001b[0m = md5HexString.replaceAll(\u001b[31m\"[\\\\[\\\\]]\"\u001b[0m, \u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5HexString is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5HexString\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpj_kx_8g6.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5HexString\u001b[0m = md5HexString.replaceAll(\u001b[31m\"\\\\s\"\u001b[0m, \u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5HexString is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5HexString\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpj_kx_8g6.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5HexString\u001b[0m = md5HexString.replaceAll(\u001b[31m\"^\\\\s\"\u001b[0m, \u001b[31m\"\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5HexString is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5HexString\u001b",
      "stdout": "",
      "timestamp": 1659798913
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8r5owv9y.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(DigestUtils.md5Hex(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgswon13.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(DigestUtils.md5Hex(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: DigestUtils\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798908
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzch0gzfd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprpnotwxc.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798913
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwf2u_4w0.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798910
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpridn27uc.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpafnivr0g.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798912
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = scala.util.hashing.Md5Hash.new\n        val bytes = text.getBytes(\"UTF-8\")\n        md5.update(bytes)\n        md5.digest()\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzsbchovm.scala:8:45 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = scala.util.hashing.Md5Hash.\u001b[33mnew\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                   an identifier expected, but 'new' found\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzsbchovm.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = scala.util.hashing.Md5Hash.\u001b[33mnew\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5Hash is not a member of scala.util.hashing\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798912
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqxq3wkvy.scala:10:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val bytes = text.getBytes(\"UTF-8\")\n        val hash = md5.digest(bytes)\n        val hexString = java.util.Arrays.toString(hash).replaceAll(\"[\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpl7aig_y9.scala:11:67 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mhexString\u001b[0m = java.util.Arrays.toString(hash).replaceAll(\"[\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\\\\p{Z}\\\\p{C}\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmpl7aig_y9.scala:13:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmpl7aig_y9.scala:8:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl7aig_y9.scala:12:5 -",
      "stdout": "",
      "timestamp": 1659798913
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7ovi09tq.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmphb7u5cs4.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmphb7u5cs4.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpafnivr0g.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798912
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgxiv4_x4.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798911
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzch0gzfd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwf2u_4w0.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798910
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpridn27uc.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7ovi09tq.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktau5yis.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: md5\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798901
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpafnivr0g.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798912
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwf2u_4w0.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798910
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hex = bytes.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsfh71gkc.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798907
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = java.security.MessageDigest.getInstance(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val md5String = digest.map(\"%02x\".format(_)).mkString\n        Option(md5String)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpj2vxioiu.scala:14)\n\tat Problem.main(tmpj2vxioiu.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659798913
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmppba69pks.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmppba69pks.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798913
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).map(_.toString))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk4qkuxzb.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).map(_.toString))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798914
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5String = new String(digest)\n            Some(md5String)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpc4qhvzsz.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798913
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwvtzv_xd.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpridn27uc.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(DigestUtils.md5Hex(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgswon13.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(DigestUtils.md5Hex(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: DigestUtils\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798908
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp24dei5um.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmp24dei5um.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798902
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpridn27uc.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest\n        val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(_ & 0xff).mkString\n        Option(md5)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpmgyttcnt.scala:10:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_ & \u001b[31m0xff\u001b[0m).mkString\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmgyttcnt.scala:8:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798913
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmi3fl9_g.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hex)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpridn27uc.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpridn27uc.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(DigestUtils.md5Hex(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgswon13.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(DigestUtils.md5Hex(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: DigestUtils\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798908
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzch0gzfd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5String = new String(digest)\n            Some(md5String)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpc4qhvzsz.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798913
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n            val md5 = digest.map(_.toHexString)\n            Some(md5.mkString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpobz9e61g.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpobz9e61g.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798913
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwvtzv_xd.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwvtzv_xd.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph1krkmix.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6b6z6821.scala:9:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798905
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp24dei5um.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmp24dei5um.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798902
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0o3w66rd.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798904
    }
  ]
}
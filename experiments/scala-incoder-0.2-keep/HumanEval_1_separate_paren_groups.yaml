name: HumanEval_1_separate_paren_groups
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input to this function is a string containing multiple groups of nested\
  \ parentheses. Your goal is to\n    // separate those group into separate strings\
  \ and return the list of those.\n    // Separate groups are balanced (each open\
  \ brace is properly closed) and not nested within each other\n    // Ignore any\
  \ spaces in the input string.\n    // >>> separate_paren_groups('( ) (( )) (( )(\
  \ ))')\n    // ['()', '(())', '(()())']\n    def separateParenGroups(paren_string\
  \ : String) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(separateParenGroups((\"\
  (()()) ((())) () ((())()())\")).equals((List[String](\"(()())\", \"((()))\", \"\
  ()\", \"((())()())\"))));\n    assert(separateParenGroups((\"() (()) ((())) (((())))\"\
  )).equals((List[String](\"()\", \"(())\", \"((()))\", \"(((())))\"))));\n    assert(separateParenGroups((\"\
  (()(())((())))\")).equals((List[String](\"(()(())((())))\"))));\n    assert(separateParenGroups((\"\
  ( ) (( )) (( )( ))\")).equals((List[String](\"()\", \"(())\", \"(()())\"))));\n\
  \    }\n\n}\n"
completions: ["        val paren_groups = paren_string.split(\"\\\\(\")\n        val\
    \ paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat3 = paren_groups_flat2.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat4 = paren_groups_flat3.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat5 = paren_groups_flat4.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat6 = paren_groups_flat5.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat7 = paren_groups_flat6.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat8 = paren_groups_flat7.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat9 = paren_groups_flat8.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat10 = paren_groups_flat9.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat11 = paren_groups_flat10.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat12 = paren_groups_flat11.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat13 = paren_groups_flat12.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat14 = paren_groups_flat13.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat15 = paren_groups_flat14.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat16 = paren_groups_flat15.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat17 = paren_groups_flat16.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat18 = paren_groups_flat17.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat19 = paren_groups_flat18.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat20 = paren_groups_flat19.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat21 = paren_groups_flat20.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat22 = paren_groups_flat21.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat23 = paren_groups_flat22.flat",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replace(\")\", \" ) \"))\n    \
    \    val paren_groups_with_spaces_sorted_with_spaces_without_spaces = paren_groups_with_spaces_sorted_with_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = ", "        val paren_groups = mutable.ListBuffer[String]()\n        var open_braces\
    \ = 0\n        var close_braces = 0\n        var open_parens = 0\n        var\
    \ close_parens = 0\n        var paren_group = \"\"\n        var paren_group_open\
    \ = false\n        var paren_group_close = false\n        var paren_group_open_brace\
    \ = false\n        var paren_group_close_brace = false\n        var paren_group_open_paren\
    \ = false\n        var paren_group_close_paren = false\n        var paren_group_open_brace_close\
    \ = false\n        var paren_group_close_brace_close = false\n        var paren_group_open_paren_close\
    \ = false\n        var paren_group_close_paren_close = false\n        var paren_group_open_brace_close_paren\
    \ = false\n        var paren_group_close_brace_close_paren = false\n        var\
    \ paren_group_open_paren_close_paren = false\n        var paren_group_close_paren_close_paren\
    \ = false\n        var paren_group_open_brace_close_paren_close = false\n    \
    \    var paren_group_close_brace_close_paren_close = false\n        var paren_group_open_paren_close_paren_close\
    \ = false\n        var paren_group_close_paren_close_paren_close = false\n   \
    \     var paren_group_open_brace_close_paren_close_paren = false\n        var\
    \ paren_group_close_brace_close_paren_close_paren = false\n        var paren_group_open_paren_close_paren_close_paren\
    \ = false\n        var paren_group_close_paren_close_paren_close_paren = false\n\
    \        var paren_group_open_brace_close_paren_close_paren_close = false\n  \
    \      var paren_group_close_brace_close_paren_close_paren_close = false\n   \
    \     var paren_group_open_paren_close_paren_close_paren_close = false\n     \
    \   var paren_group_close_paren_close_paren_close_paren_close = false\n      \
    \  var paren_group_open_brace_close_paren_close_paren_close_paren = false\n  \
    \      var paren_group_close_brace_close_paren_close_paren_close_paren = false\n\
    \        var paren_group_open_paren_close_paren_close_paren_close_paren = false\n\
    \        var paren_group_close_paren_close_paren_close_paren_close_paren = false\n\
    \        var paren_group_open_brace_close_paren_close_paren_close_paren_close\
    \ = false\n        var paren_group_close_brace_close_paren_close_paren_close_paren_close\
    \ = false\n        var paren_group_open_paren_close_paren_close_paren_close_paren_close\
    \ = false\n        var paren_group_close_paren_close_paren_close_paren_close_paren_close\
    \ = false\n        var paren_group_open_bra", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_size = paren_groups.length\n        val paren_groups_size_list\
    \ = paren_groups_size.map(x => List(x))\n        val paren_groups_size_list =\
    \ paren_groups_size.map(x => List(x))\n        val paren_groups_size_list = paren_groups_size.map(x\
    \ => List(x))\n        val paren_groups_size_list = paren_groups_size.map(x =>\
    \ List(x))\n        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n\
    \        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n  \
    \      val paren_groups_size_list = paren_groups_size.map(x => List(x))\n    \
    \    val paren_groups_size_list = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list = paren_groups_size.map(x => List(x))\n        val\
    \ paren_groups_size_list = paren_groups_size.map(x => List(x))\n        val paren_groups_size_list\
    \ = paren_groups_size.map(x => List(x))\n        val paren_groups_size_list =\
    \ paren_groups_size.map(x => List(x))\n        val paren_groups_size_list = paren_groups_size.map(x\
    \ => List(x))\n        val paren_groups_size_list = paren_groups_size.map(x =>\
    \ List(x))\n        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n\
    \        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n  \
    \      val paren_groups_size_list = paren_groups_size.map(x => List(x))\n    \
    \    val paren_groups_size_list = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list = paren_groups_size.map(x => List(x))\n        val\
    \ paren_groups_size_list = paren_groups_size.map(x => List(x))\n        val paren_groups_size_list\
    \ = paren_groups_size.map(x => List(x))\n        val paren_groups_size_list =\
    \ paren_groups_size.map(x => List(x))\n        val paren_groups_size_list = paren_groups_size.map(x\
    \ => List(x))\n        val paren_groups_size_list = paren_groups_size.map(x =>\
    \ List(x))\n        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n\
    \        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n  \
    \      val paren_groups_size_list = paren_groups_size.map(x => List(x))\n    \
    \    val paren_groups_size_list = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list = paren_groups_size.", "        val paren_groups\
    \ = mutable.ListBuffer.empty[String]\n        val paren_open = mutable.ListBuffer.empty[String]\n\
    \        val paren_close = mutable.ListBuffer.empty[String]\n        val paren_open_index\
    \ = mutable.ListBuffer.empty[Int]\n        val paren_close_index = mutable.ListBuffer.empty[Int]\n\
    \        val paren_open_index = paren_open_index.init\n        val paren_close_index\
    \ = paren_close_index.init\n        val paren_open = paren_open.init\n       \
    \ val paren_close = paren_close.init\n        val paren_groups = paren_groups.init\n\
    \        val paren_open_index = paren_open_index.init\n        val paren_close_index\
    \ = paren_close_index.init\n        val paren_open = paren_open.init\n       \
    \ val paren_close = paren_close.init\n        val paren_groups = paren_groups.init\n\
    \        val paren_open_index = paren_open_index.init\n        val paren_close_index\
    \ = paren_close_index.init\n        val paren_open = paren_open.init\n       \
    \ val paren_close = paren_close.init\n        val paren_groups = paren_groups.init\n\
    \        val paren_open_index = paren_open_index.init\n        val paren_close_index\
    \ = paren_close_index.init\n        val paren_open = paren_open.init\n       \
    \ val paren_close = paren_close.init\n        val paren_groups = paren_groups.init\n\
    \        val paren_open_index = paren_open_index.init\n        val paren_close_index\
    \ = paren_close_index.init\n        val paren_open = paren_open.init\n       \
    \ val paren_close = paren_close.init\n        val paren_groups = paren_groups.init\n\
    \        val paren_open_index = paren_open_index.init\n        val paren_close_index\
    \ = paren_close_index.init\n        val paren_open = paren_open.init\n       \
    \ val paren_close = paren_close.init\n        val paren_groups = paren_groups.init\n\
    \        val paren_open_index = paren_open_index.init\n        val paren_close_index\
    \ = paren_close_index.init\n        val paren_open = paren_open.init\n       \
    \ val paren_close = paren_close.init\n        val paren_groups = paren_groups.init\n\
    \        val paren_open_index = paren_open_index.init\n        val paren_", " \
    \       val paren_groups = paren_string.split(\"\\\\(\").map(_.trim).toList\n\
    \        val paren_groups_count = paren_groups.size\n        val paren_groups_remainder\
    \ = paren_groups_count % paren_groups_count == 0\n        val paren_groups_remainder_count\
    \ = paren_groups_count - paren_groups_remainder\n        val paren_groups_remainder_strings\
    \ = paren_groups_remainder.map(x => paren_groups(x + 1))\n        val paren_groups_remainder_strings_count\
    \ = paren_groups_remainder_strings.size\n        val paren_groups_remainder_strings_remainder\
    \ = paren_groups_remainder_strings_count % paren_groups_remainder_strings_count\
    \ == 0\n        val paren_groups_remainder_strings_remainder_count = paren_groups_remainder_strings_count\
    \ - paren_groups_remainder_strings_remainder\n        val paren_groups_remainder_strings_remainder_strings\
    \ = paren_groups_remainder_strings_remainder.map(x => paren_groups_remainder_strings(x\
    \ + 1))\n        val paren_groups_remainder_strings_remainder_strings_count =\
    \ paren_groups_remainder_strings_remainder_strings.size\n        val paren_groups_remainder_strings_remainder_strings_remainder\
    \ = paren_groups_remainder_strings_remainder_strings_count % paren_groups_remainder_strings_remainder_strings_count\
    \ == 0\n        val paren_groups_remainder_strings_remainder_strings_remainder_count\
    \ = paren_groups_remainder_strings_remainder_strings_count - paren_groups_remainder_strings_remainder_strings_remainder\n\
    \        val paren_groups_remainder_strings_remainder_strings_remainder_strings\
    \ = paren_groups_remainder_strings_remainder_strings_remainder.map(x => paren_groups_remainder_strings_remainder_strings(x\
    \ + 1))\n        val paren_groups_remainder_strings_remainder_strings_remainder_strings_count\
    \ = paren_groups_remainder_strings_remainder_strings_remainder_strings.size\n\
    \        val paren_groups_remainder_strings_remainder_strings_remainder_strings_remainder\
    \ = paren_groups_remainder_strings_remainder_strings_remainder_strings_count %\
    \ paren_groups_remainder_strings_remainder_strings_remainder_strings_count ==\
    \ 0\n        val paren_groups_remainder_strings_remainder_strings_remainder_strings_remainder_count\
    \ = paren_groups_remainder_strings_remainder_strings_remainder_strings_count -\
    \ paren_groups_remainder_strings_remainder_strings_remainder_strings_remainder_strings\n\
    \        val paren_groups_", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_with_open_braces = paren_groups.map(x => x.replace(\"\
    )\", \"\"))\n        val paren_groups_with_close_braces = paren_groups_with_open_braces.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_with_open_brace_and_close_braces\
    \ = paren_groups_with_close_braces.map(x => x.replace(\")\", \"\"))\n        val\
    \ paren_groups_with_open_brace_and_close_brace_and_spaces = paren_groups_with_open_brace_and_close_braces.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses\
    \ = paren_groups_with_open_brace_and_close_brace_and_spaces.map(x => x.replace(\"\
    )\", \"\"))\n        val paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses_and_parentheses\
    \ = paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses_and_parentheses_and_parentheses\
    \ = paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses_and_parentheses.map(x\
    \ => x.replace(\")\", \"\"))\n        val paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses_and_parentheses_and_parentheses_and_parentheses\
    \ = paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses_and_parentheses_and_parentheses.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses_and_parentheses_and_parentheses_and_parentheses_and_parentheses\
    \ = paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses_and_parentheses_and_parentheses_and_parentheses.map(x\
    \ => x.replace(\")\", \"\"))\n        val paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses_and_parentheses_and_parentheses_and_parentheses_and_parentheses\
    \ = paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses_and_parentheses_and_parentheses_and_parentheses.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses_and_parentheses_and_parentheses_and_parentheses_and_parentheses_and_parentheses\
    \ = paren_groups_with_open_brace_and_close_brace_and_spaces_and_parentheses_and_parentheses_and_parenthese",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_count\
    \ = paren_groups.length\n        val paren_group_lengths = paren_groups.map(_.length).toArray\n\
    \        val paren_group_lengths_sum = paren_group_lengths.sum\n        val paren_group_lengths_product\
    \ = paren_group_lengths.product\n        val paren_group_lengths_product2 = paren_group_lengths_product\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product3 = paren_group_lengths_product2\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product4 = paren_group_lengths_product3\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product5 = paren_group_lengths_product4\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product6 = paren_group_lengths_product5\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product7 = paren_group_lengths_product6\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product8 = paren_group_lengths_product7\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product9 = paren_group_lengths_product8\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product10 = paren_group_lengths_product9\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product11 = paren_group_lengths_product10\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product12 = paren_group_lengths_product11\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product13 = paren_group_lengths_product12\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product14 = paren_group_lengths_product13\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product15 = paren_group_lengths_product14\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product16 = paren_group_lengths_product15\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product17 = paren_group_lengths_product16\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product18 = paren_group_lengths_product17\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product19 = paren_group_lengths_product18\
    \ * paren_group_lengths_product\n        val paren_group_lengths_product", " \
    \       val paren_groups = mutable.ListBuffer[String]()\n        val paren_open\
    \ = mutable.ListBuffer[String]()\n        val paren_closed = mutable.ListBuffer[String]()\n\
    \        val paren_open_size = mutable.ListBuffer[Int]()\n        val paren_closed_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_open_depth = mutable.ListBuffer[Int]()\n\
    \        val paren_closed_depth = mutable.ListBuffer[Int]()\n        val paren_open_depth_limit\
    \ = mutable.ListBuffer[Int]()\n        val paren_closed_depth_limit = mutable.ListBuffer[Int]()\n\
    \        val paren_open_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_closed_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_open_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_closed_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_open_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_closed_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_open_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_closed_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_open_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_closed_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_open_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_closed_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_open_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_closed_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_open_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_closed_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_open_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_closed_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_open_depth_limit_reached = mutable.ListBuffer[Boolean]()\n\
    \        val paren_closed_depth_limit_", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2\
    \ = paren_groups_flat.filter(_ != \")\")\n        val paren_groups_flat3 = paren_groups_flat2.filter(_\
    \ != \")\")\n        val paren_groups_flat4 = paren_groups_flat3.filter(_ != \"\
    )\")\n        val paren_groups_flat5 = paren_groups_flat4.filter(_ != \")\")\n\
    \        val paren_groups_flat6 = paren_groups_flat5.filter(_ != \")\")\n    \
    \    val paren_groups_flat7 = paren_groups_flat6.filter(_ != \")\")\n        val\
    \ paren_groups_flat8 = paren_groups_flat7.filter(_ != \")\")\n        val paren_groups_flat9\
    \ = paren_groups_flat8.filter(_ != \")\")\n        val paren_groups_flat10 = paren_groups_flat9.filter(_\
    \ != \")\")\n        val paren_groups_flat11 = paren_groups_flat10.filter(_ !=\
    \ \")\")\n        val paren_groups_flat12 = paren_groups_flat11.filter(_ != \"\
    )\")\n        val paren_groups_flat13 = paren_groups_flat12.filter(_ != \")\"\
    )\n        val paren_groups_flat14 = paren_groups_flat13.filter(_ != \")\")\n\
    \        val paren_groups_flat15 = paren_groups_flat14.filter(_ != \")\")\n  \
    \      val paren_groups_flat16 = paren_groups_flat15.filter(_ != \")\")\n    \
    \    val paren_groups_flat17 = paren_groups_flat16.filter(_ != \")\")\n      \
    \  val paren_groups_flat18 = paren_groups_flat17.filter(_ != \")\")\n        val\
    \ paren_groups_flat19 = paren_groups_flat18.filter(_ != \")\")\n        val paren_groups_flat20\
    \ = paren_groups_flat19.filter(_ != \")\")\n        val paren_groups_flat21 =\
    \ paren_groups_flat20.filter(_ != \")\")\n        val paren_groups_flat22 = paren_groups_flat21.filter(_\
    \ != \")\")\n        val paren_groups_flat23 = paren_groups_flat22.filter(_ !=\
    \ \")\")\n        val paren_groups_flat24 = paren_groups_flat23.filter(_ != \"\
    )\")\n        val paren_groups_flat25 = paren_groups_flat24.filter(_ != \")\"\
    )\n        val paren_groups_flat26 = paren_groups_flat25.filter(_ != \")\")\n\
    \        val paren_groups_flat27 = paren_groups_flat26.filter(_ != \")\")\n  \
    \      val paren", "        val paren_groups = paren_string.split(\"\\\\(\")\n\
    \        val paren_groups_with_spaces = paren_groups.map(x => x.replace(\")\"\
    , \" ) \"))\n        val paren_groups_with_spaces_without_spaces = paren_groups_with_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces.map(x => x.replace(\"( \", \" (\"\
    ))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.filter(_\
    \ != \")\")\n        val paren_groups_flat3 = paren_groups_flat2.filter(_ != \"\
    )\")\n        val paren_groups_flat4 = paren_groups_flat3.filter(_ != \")\")\n\
    \        val paren_groups_flat5 = paren_groups_flat4.filter(_ != \")\")\n    \
    \    val paren_groups_flat6 = paren_groups_flat5.filter(_ != \")\")\n        val\
    \ paren_groups_flat7 = paren_groups_flat6.filter(_ != \")\")\n        val paren_groups_flat8\
    \ = paren_groups_flat7.filter(_ != \")\")\n        val paren_groups_flat9 = paren_groups_flat8.filter(_\
    \ != \")\")\n        val paren_groups_flat10 = paren_groups_flat9.filter(_ !=\
    \ \")\")\n        val paren_groups_flat11 = paren_groups_flat10.filter(_ != \"\
    )\")\n        val paren_groups_flat12 = paren_groups_flat11.filter(_ != \")\"\
    )\n        val paren_groups_flat13 = paren_groups_flat12.filter(_ != \")\")\n\
    \        val paren_groups_flat14 = paren_groups_flat13.filter(_ != \")\")\n  \
    \      val paren_groups_flat15 = paren_groups_flat14.filter(_ != \")\")\n    \
    \    val paren_groups_flat16 = paren_groups_flat15.filter(_ != \")\")\n      \
    \  val paren_groups_flat17 = paren_groups_flat16.filter(_ != \")\")\n        val\
    \ paren_groups_flat18 = paren_groups_flat17.filter(_ != \")\")\n        val paren_groups_flat19\
    \ = paren_groups_flat18.filter(_ != \")\")\n        val paren_groups_flat20 =\
    \ paren_groups_flat19.filter(_ != \")\")\n        val paren_groups_flat21 = paren_groups_flat20.filter(_\
    \ != \")\")\n        val paren_groups_flat22 = paren_groups_flat21.filter(_ !=\
    \ \")\")\n        val paren_groups_flat23 = paren_groups_flat22.filter(_ != \"\
    )\")\n        val paren_groups_flat24 = paren_groups_flat23.filter(_ != \")\"\
    )\n        val paren_groups_flat25 = paren_groups_flat24.filter(_ != \")\")\n\
    \        val paren_groups_flat26 = paren_groups_flat25.filter(_ != \")\")\n  \
    \      val paren_groups_flat27 = paren_groups_flat26.filter(_ != \")\")\n    \
    \    val paren", "        val paren_groups = paren_string.split(\"\\\\(\")\n \
    \       val paren_groups_with_spaces = paren_groups.map(x => x.replace(\")\",\
    \ \" ) \"))\n        val paren_groups_with_spaces_trimmed = paren_groups_with_spaces.map(x\
    \ => x.trim())\n        val paren_groups_with_spaces_trimmed_sorted = paren_groups_with_spaces_trimmed.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_trimmed_sorted_reversed = paren_groups_with_spaces_trimmed_sorted.reverse\n\
    \        val paren_groups_with_spaces_trimmed_sorted_reversed_trimmed = paren_groups_with_spaces_trimmed_sorted_reversed.map(x\
    \ => x.trim())\n        val paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted\
    \ = paren_groups_with_spaces_trimmed_sorted_reversed_trimmed.sortBy(x => x)\n\
    \        val paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed\
    \ = paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted.reverse\n\
    \        val paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed\
    \ = paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed.map(x\
    \ => x.trim())\n        val paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted\
    \ = paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted_reversed\
    \ = paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted_reversed.map(x\
    \ => x.trim())\n        val paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed\
    \ = paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted.map(x\
    \ => x.trim())\n        val paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted_reversed\
    \ = paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted.map(x\
    \ => x.trim())\n        val paren_groups_with_spaces_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted_reversed_trimmed_sorted_reversed_trim",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"( \", \" (\"))\n        val\
    \ paren_groups_with_spaces_without_spaces_without_spaces = paren_groups_with_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_size\
    \ = paren_groups.length\n        val paren_groups_size_list = paren_groups_size.map(x\
    \ => List(x))\n        val paren_groups_size_list = paren_groups_size.map(x =>\
    \ List(x))\n        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n\
    \        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n  \
    \      val paren_groups_size_list = paren_groups_size.map(x => List(x))\n    \
    \    val paren_groups_size_list = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list = paren_groups_size.map(x => List(x))\n        val\
    \ paren_groups_size_list = paren_groups_size.map(x => List(x))\n        val paren_groups_size_list\
    \ = paren_groups_size.map(x => List(x))\n        val paren_groups_size_list =\
    \ paren_groups_size.map(x => List(x))\n        val paren_groups_size_list = paren_groups_size.map(x\
    \ => List(x))\n        val paren_groups_size_list = paren_groups_size.map(x =>\
    \ List(x))\n        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n\
    \        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n  \
    \      val paren_groups_size_list = paren_groups_size.map(x => List(x))\n    \
    \    val paren_groups_size_list = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list = paren_groups_size.map(x => List(x))\n        val\
    \ paren_groups_size_list = paren_groups_size.map(x => List(x))\n        val paren_groups_size_list\
    \ = paren_groups_size.map(x => List(x))\n        val paren_groups_size_list =\
    \ paren_groups_size.map(x => List(x))\n        val paren_groups_size_list = paren_groups_size.map(x\
    \ => List(x))\n        val paren_groups_size_list = paren_groups_size.map(x =>\
    \ List(x))\n        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n\
    \        val paren_groups_size_list = paren_groups_size.map(x => List(x))\n  \
    \      val paren_groups_size_list = paren_groups_size.map(x => List(x))\n    \
    \    val paren_groups_size_list = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list = paren_groups_size.map(x => List(x))\n        val\
    \ paren_groups_size_list = paren_groups_size.map(x => List(x))\n        val paren_groups_size_list\
    \ = paren_groups_size.", "        val paren_groups = paren_string.split(\"\\\\\
    (|\\\\)\")\n        val paren_groups_set = paren_groups.toSet\n        val paren_groups_list_with_duplicates\
    \ = paren_groups.toList.distinct\n        val paren_groups_list_without_duplicates\
    \ = paren_groups_list_with_duplicates.toList\n        val paren_groups_list_without_duplicates_sorted\
    \ = paren_groups_list_without_duplicates.sortBy(_.length)\n        val paren_groups_list_without_duplicates_sorted_reversed\
    \ = paren_groups_list_without_duplicates_sorted.reverse\n        val paren_groups_list_without_duplicates_sorted_reversed_sorted\
    \ = paren_groups_list_without_duplicates_sorted_reversed.sortBy(_.length)\n  \
    \      val paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates\
    \ = paren_groups_list_without_duplicates_sorted_reversed_sorted.distinct\n   \
    \     val paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted\
    \ = paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates.sortBy(_.length)\n\
    \        val paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed\
    \ = paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted.reverse\n\
    \        val paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed_sorted\
    \ = paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed.sortBy(_.length)\n\
    \        val paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed_sorted_with_duplicates\
    \ = paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed_sorted.distinct\n\
    \        val paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed_sorted_with_duplicates_sorted\
    \ = paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed_sorted_with_duplicates.sortBy(_.length)\n\
    \        val paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed\
    \ = paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed_sorted_with_duplicates_sorted.reverse\n\
    \        val paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed_sorted\
    \ = paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed.sortBy(_.length)\n\
    \        val paren_groups_list_without_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reversed_sorted_with_duplicates_sorted_reverse",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_size\
    \ = paren_groups.length\n        val paren_groups_size_remainder = paren_groups_size\
    \ % 2\n        val paren_groups_size_remainder_size = paren_groups_size_remainder\
    \ + 1\n        val paren_groups_size_remainder_size2 = paren_groups_size_remainder_size\
    \ * 2\n        val paren_groups_size_remainder_size3 = paren_groups_size_remainder_size2\
    \ * 2\n        val paren_groups_size_remainder_size4 = paren_groups_size_remainder_size3\
    \ * 2\n        val paren_groups_size_remainder_size5 = paren_groups_size_remainder_size4\
    \ * 2\n        val paren_groups_size_remainder_size6 = paren_groups_size_remainder_size5\
    \ * 2\n        val paren_groups_size_remainder_size7 = paren_groups_size_remainder_size6\
    \ * 2\n        val paren_groups_size_remainder_size8 = paren_groups_size_remainder_size7\
    \ * 2\n        val paren_groups_size_remainder_size9 = paren_groups_size_remainder_size8\
    \ * 2\n        val paren_groups_size_remainder_size10 = paren_groups_size_remainder_size9\
    \ * 2\n        val paren_groups_size_remainder_size11 = paren_groups_size_remainder_size10\
    \ * 2\n        val paren_groups_size_remainder_size12 = paren_groups_size_remainder_size11\
    \ * 2\n        val paren_groups_size_remainder_size13 = paren_groups_size_remainder_size12\
    \ * 2\n        val paren_groups_size_remainder_size14 = paren_groups_size_remainder_size13\
    \ * 2\n        val paren_groups_size_remainder_size15 = paren_groups_size_remainder_size14\
    \ * 2\n        val paren_groups_size_remainder_size16 = paren_groups_size_remainder_size15\
    \ * 2\n        val paren_groups_size_remainder_size17 = paren_groups_size_remainder_size16\
    \ * 2\n        val paren_groups_size_remainder_size18 = paren_groups_size_remainder_size17\
    \ * 2\n        val paren_groups_size_remainder_size19 = paren_groups_size_remainder_size18\
    \ * 2\n        val paren_groups_size_remainder_size20 = paren_groups_size_remainder_size19\
    \ * 2\n        val paren_groups_size_remainder_size21 = paren_groups_", "    \
    \    val paren_groups = paren_string.split(\"\\\\(\").map(_.trim).toList\n   \
    \     val open_paren_groups = paren_groups.filter(_.startsWith(\"(\"))\n     \
    \   val close_paren_groups = paren_groups.filter(_.endsWith(\")\"))\n        val\
    \ open_paren_groups_count = open_paren_groups.length\n        val close_paren_groups_count\
    \ = close_paren_groups.length\n        val open_paren_groups_count = open_paren_groups.length\n\
    \        val close_paren_groups_count = close_paren_groups.length\n        val\
    \ open_paren_groups_count = open_paren_groups.length\n        val close_paren_groups_count\
    \ = close_paren_groups.length\n        val open_paren_groups_count = open_paren_groups.length\n\
    \        val close_paren_groups_count = close_paren_groups.length\n        val\
    \ open_paren_groups_count = open_paren_groups.length\n        val close_paren_groups_count\
    \ = close_paren_groups.length\n        val open_paren_groups_count = open_paren_groups.length\n\
    \        val close_paren_groups_count = close_paren_groups.length\n        val\
    \ open_paren_groups_count = open_paren_groups.length\n        val close_paren_groups_count\
    \ = close_paren_groups.length\n        val open_paren_groups_count = open_paren_groups.length\n\
    \        val close_paren_groups_count = close_paren_groups.length\n        val\
    \ open_paren_groups_count = open_paren_groups.length\n        val close_paren_groups_count\
    \ = close_paren_groups.length\n        val open_paren_groups_count = open_paren_groups.length\n\
    \        val close_paren_groups_count = close_paren_groups.length\n        val\
    \ open_paren_groups_count = open_paren_groups.length\n        val close_paren_groups_count\
    \ = close_paren_groups.length\n        val open_paren_groups_count = open_paren_groups.length\n\
    \        val close_paren_groups_count = close_paren_groups.length\n        val\
    \ open_paren_groups_count = open_paren_groups.length\n        val close_paren_groups_count\
    \ = close_paren_groups.length\n        val open_paren_groups_count = open_paren_groups.length\n\
    \        val close_paren_groups_count = close_paren_groups.length\n        val\
    \ open_paren_groups_count = open_paren_groups.length\n        val close_paren_groups_count\
    \ = close_paren_groups.length\n        val open_paren_groups_count = open_paren_groups.length\n\
    \        val close_paren_groups_count = close_paren_groups.length\n        val\
    \ open_paren_groups_count = open_paren_groups.length\n        val close_paren_groups_count\
    \ = close_paren_groups.length\n        val open_paren_groups_count = open_paren_groups.length\n\
    \        val ", "        val paren_groups = paren_string.split(\"\\\\(\")\n  \
    \      val paren_groups_flat = paren_groups.flatMap(x => x.split(\"\\\\)\"))\n\
    \        val paren_groups_flat2 = paren_groups_flat.flatMap(x => x.split(\"\\\\\
    )\"))\n        val paren_groups_flat3 = paren_groups_flat2.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat4 = paren_groups_flat3.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat5 = paren_groups_flat4.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat6 = paren_groups_flat5.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat7 = paren_groups_flat6.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat8 = paren_groups_flat7.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat9 = paren_groups_flat8.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat10 = paren_groups_flat9.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat11 = paren_groups_flat10.flatMap(x =>\
    \ x.split(\"\\\\)\"))\n        val paren_groups_flat12 = paren_groups_flat11.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat13 = paren_groups_flat12.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat14 = paren_groups_flat13.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat15 = paren_groups_flat14.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat16 = paren_groups_flat15.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat17 = paren_groups_flat16.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat18 = paren_groups_flat17.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat19 = paren_groups_flat18.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat20 = paren_groups_flat19.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat21 = paren_groups_flat20.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat22 = paren_groups_flat21.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n\
    \        val paren_groups_flat2 = paren_groups_flat.filterNot(_ == \")\")\n  \
    \      val paren_groups_flat3 = paren_groups_flat2.filterNot(_ == \"(\")\n   \
    \     val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \" \")\n    \
    \    val paren_groups_flat5 = paren_groups_flat4.filterNot(_ == \"\\\\\")\n  \
    \      val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"\\\"\")\n\
    \        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \"'\")\n \
    \       val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \"\\n\")\n\
    \        val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \"\\r\")\n\
    \        val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \"\\t\")\n\
    \        val paren_groups_flat11 = paren_groups_flat10.filterNot(_ == \"\\r\\\
    n\")\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \"\\\
    t\\r\")\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_ ==\
    \ \"\\r\\t\")\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_\
    \ == \"\\t\\r\\n\")\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_\
    \ == \"\\r\\t\\r\")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_\
    \ == \"\\r\\t\\r\\n\")\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_\
    \ == \"\\r\\t\\r\\t\")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_\
    \ == \"\\r\\t\\r\\t\\n\")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_\
    \ == \"\\r\\t\\r\\t\\r\")\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_\
    \ == \"\\r\\t\\r\\t\\r\\n\")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_\
    \ == \"\\r\\t\\r\\t\\r\\t\")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_\
    \ == \"\\r\\t\\r\\t\\r\\t\\n\")\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_\
    \ == \"\\r\\t\\r\\t\\r\\t\\r\")\n        val ", "        val paren_groups = mutable.ListBuffer[String]()\n\
    \        val paren_group_open = mutable.ListBuffer[String]()\n        val paren_group_closed\
    \ = mutable.ListBuffer[String]()\n        val paren_group_open_index = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closed_index = mutable.ListBuffer[Int]()\n        val\
    \ paren_group_open_index2 = mutable.ListBuffer[Int]()\n        val paren_group_closed_index2\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_index3 = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closed_index3 = mutable.ListBuffer[Int]()\n        val\
    \ paren_group_open_index4 = mutable.ListBuffer[Int]()\n        val paren_group_closed_index4\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_index5 = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closed_index5 = mutable.ListBuffer[Int]()\n        val\
    \ paren_group_open_index6 = mutable.ListBuffer[Int]()\n        val paren_group_closed_index6\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_index7 = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closed_index7 = mutable.ListBuffer[Int]()\n        val\
    \ paren_group_open_index8 = mutable.ListBuffer[Int]()\n        val paren_group_closed_index8\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_index9 = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closed_index9 = mutable.ListBuffer[Int]()\n        val\
    \ paren_group_open_index10 = mutable.ListBuffer[Int]()\n        val paren_group_closed_index10\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_index11 = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closed_index11 = mutable.ListBuffer[Int]()\n        val\
    \ paren_group_open_index12 = mutable.ListBuffer[Int]()\n        val paren_group_closed_index12\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_index13 = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closed_index13 = mutable.ListBuffer[Int]()\n        val\
    \ paren_group_open_index14 = mut", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2\
    \ = paren_groups_flat.filterNot(_ == \")\")\n        val paren_groups_flat3 =\
    \ paren_groups_flat2.filterNot(_ == \")(\")\n        val paren_groups_flat4 =\
    \ paren_groups_flat3.filterNot(_ == \")()\")\n        val paren_groups_flat5 =\
    \ paren_groups_flat4.filterNot(_ == \")()()\")\n        val paren_groups_flat6\
    \ = paren_groups_flat5.filterNot(_ == \")()()()\")\n        val paren_groups_flat7\
    \ = paren_groups_flat6.filterNot(_ == \")()()()()\")\n        val paren_groups_flat8\
    \ = paren_groups_flat7.filterNot(_ == \")()()()()()\")\n        val paren_groups_flat9\
    \ = paren_groups_flat8.filterNot(_ == \")()()()()()()\")\n        val paren_groups_flat10\
    \ = paren_groups_flat9.filterNot(_ == \")()()()()()()()()\")\n        val paren_groups_flat11\
    \ = paren_groups_flat10.filterNot(_ == \")()()()()()()()()()()\")\n        val\
    \ paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \")()()()()()()()()()()()\"\
    )\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_ == \")()()()()()()()()()()()()()\"\
    )\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_ == \")()()()()()()()()()()()()()()()\"\
    )\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_ == \")()()()()()()()()()()()()()()()()\"\
    )\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_ == \")()()()()()()()()()()()()()()()()()\"\
    )\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_ == \")()()()()()()()()()()()()()()()()()()\"\
    )\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_ == \")()()()()()()()()()()()()",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"( \", \" (\"))\n        val\
    \ paren_groups_with_spaces_without_spaces_without_spaces = paren_groups_with_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_strings\
    \ = paren_groups.map(x => x.replace(\")\", \"\"))\n        val paren_group_strings_sorted\
    \ = paren_group_strings.sortWith((x, y) => x.compareTo(y) == -1)\n        val\
    \ paren_group_strings_sorted_reversed = paren_group_strings_sorted.reverse\n \
    \       val paren_group_strings_sorted_reversed_strings = paren_group_strings_sorted_reversed.map(x\
    \ => x.toString())\n        val paren_group_strings_sorted_reversed_strings_sorted\
    \ = paren_group_strings_sorted_reversed_strings.sortWith((x, y) => x.compareTo(y)\
    \ == -1)\n        val paren_group_strings_sorted_reversed_strings_sorted_strings\
    \ = paren_group_strings_sorted_reversed_strings_sorted.map(x => x.toString())\n\
    \        val paren_group_strings_sorted_reversed_strings_sorted_strings_sorted\
    \ = paren_group_strings_sorted_reversed_strings_sorted_strings.sortWith((x, y)\
    \ => x.compareTo(y) == -1)\n        val paren_group_strings_sorted_reversed_strings_sorted_strings_sorted_strings\
    \ = paren_group_strings_sorted_reversed_strings_sorted_strings_sorted.map(x =>\
    \ x.toString())\n        val paren_group_strings_sorted_reversed_strings_sorted_strings_sorted_strings_sorted\
    \ = paren_group_strings_sorted_reversed_strings_sorted_strings_sorted_strings.sortWith((x,\
    \ y) => x.compareTo(y) == -1)\n        val paren_group_strings_sorted_reversed_strings_sorted_strings_sorted_strings_sorted_strings\
    \ = paren_group_strings_sorted_reversed_strings_sorted_strings_sorted_strings_sorted.map(x\
    \ => x.toString())\n        val paren_group_strings_sorted_reversed_strings_sorted_strings_sorted_strings_sorted_strings_sorted\
    \ = paren_group_strings_sorted_reversed_strings_sorted_strings_sorted_strings_sorted_strings.sortWith((x,\
    \ y) => x.compareTo(y) == -1)\n        val paren_group_strings_sorted_reversed_strings_sorted_strings_sorted_strings_sorted_strings_sorted_strings\
    \ = paren_group_strings_sorted_reversed_strings_sorted_strings_sorted_strings_sorted_strings_sorted.map(x\
    \ => x.toString())\n        val paren_group_strings_sorted_reversed_strings_sorted_strings_sorted_strings_sorted_strings_sorted_strings_sorted\
    \ = paren_group_strings_sorted_reversed_strings_sorted_strings_sorted_strings_sorted_strings_sorted_strings.sortWith((x,\
    \ y) => x.compareTo(y) == -1)\n        val paren_group_strings_", "        val\
    \ paren_groups = mutable.ListBuffer[String]()\n        val paren_group_size =\
    \ mutable.ListBuffer[Int]()\n        paren_string.split(\"\\\\(\").foreach(x =>\
    \ {\n            val paren_group_size = paren_group_size.updated(x.length, 1)\n\
    \            paren_groups += x\n        })\n        paren_group_size.foreach(x\
    \ => {\n            val paren_group_size = paren_group_size.updated(x, 0)\n  \
    \          paren_groups += paren_group_size.last\n        })\n        paren_groups.toList",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.filterNot(_\
    \ == \")\")\n        val paren_groups_flat3 = paren_groups_flat2.filterNot(_ ==\
    \ \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \"\
    \ \")\n        paren_groups_flat4.toList", "        val paren_groups = mutable.ListBuffer[String]()\n\
    \        val open_braces = mutable.ListBuffer[String]()\n        val close_braces\
    \ = mutable.ListBuffer[String]()\n        val open_brace_count = 0\n        val\
    \ close_brace_count = 0\n        val paren_open = mutable.ListBuffer[String]()\n\
    \        val paren_close = mutable.ListBuffer[String]()\n        val paren_open_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_close_size = mutable.ListBuffer[Int]()\n\
    \        val paren_open_count = mutable.ListBuffer[Int]()\n        val paren_close_count\
    \ = mutable.ListBuffer[Int]()\n        val paren_open_size = paren_open_size.init\n\
    \        val paren_close_size = paren_close_size.init\n        val paren_open_count\
    \ = paren_open_count.init\n        val paren_close_count = paren_close_count.init\n\
    \        val paren_open = paren_open.init\n        val paren_close = paren_close.init\n\
    \        val paren_open_count = paren_open_count.init\n        val paren_close_count\
    \ = paren_close_count.init\n        val open_braces = open_braces.init\n     \
    \   val close_braces = close_braces.init\n        val paren_groups = paren_groups.init\n\
    \        val paren_group_size = paren_groups.init\n        val paren_group_size\
    \ = paren_group_size.init\n        val paren_groups = paren_groups.init\n    \
    \    val paren_group_size = paren_groups.init\n        val paren_group_size =\
    \ paren_group_size.init\n        val paren_groups = paren_groups.init\n      \
    \  val paren_group_size = paren_groups.init\n        val paren_group_size = paren_group_size.init\n\
    \        val paren_groups = paren_groups.init\n        val paren_group_size =\
    \ paren_groups.init\n        val paren_group_size = paren_group_size.init\n  \
    \      val paren_groups = paren_groups.init\n        val paren_group_size = paren_groups.init\n\
    \        val paren_group_size = paren_group_size.init\n        val paren_groups\
    \ = paren_groups.init\n        val paren_group_size = paren_groups.init\n    \
    \    val paren_group_size = paren_group_size.init\n        val paren_groups =\
    \ paren_groups.init\n        val paren_group_size = paren_groups.init\n      \
    \  val paren_group", "        val paren_groups = paren_string.split(\"\\\\(\"\
    )\n        val paren_groups_with_spaces = paren_groups.map(x => x.replace(\")\"\
    , \" ) \"))\n        val paren_groups_with_spaces_without_spaces = paren_groups_with_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces.map(x => x.replace(\"( \", \" (\"\
    ))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_count\
    \ = paren_groups.length\n        val paren_groups_with_spaces = paren_groups.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_count =\
    \ paren_groups_with_spaces.length\n        val paren_groups_with_spaces_with_brackets\
    \ = paren_groups_with_spaces.map(x => x.replace(\"(\", \"[ \"))\n        val paren_groups_with_spaces_with_brackets_count\
    \ = paren_groups_with_spaces_with_brackets.length\n        val paren_groups_with_spaces_with_brackets_with_brackets\
    \ = paren_groups_with_spaces_with_brackets.map(x => x.replace(\"[\", \"(\"))\n\
    \        val paren_groups_with_spaces_with_brackets_with_brackets_count = paren_groups_with_spaces_with_brackets_with_brackets.length\n\
    \        val paren_groups_with_spaces_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_spaces_with_brackets_with_brackets.map(x => x.replace(\"\
    )\", \" ] \"))\n        val paren_groups_with_spaces_with_brackets_with_brackets_with_brackets_count\
    \ = paren_groups_with_spaces_with_brackets_with_brackets_with_brackets.length\n\
    \        val paren_groups_with_spaces_with_brackets_with_brackets_with_brackets_with_brackets_count\
    \ = paren_groups_with_spaces_with_brackets_with_brackets_with_brackets_with_brackets.length\n\
    \        val paren_groups_with_spaces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_count\
    \ = paren_groups_with_spaces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with",
  "        val paren_groups = mutable.ListBuffer[String]()\n        var paren_group_open\
    \ = false\n        var paren_group_closed = false\n        var paren_group_opening_paren_count\
    \ = 0\n        var paren_group_closing_paren_count = 0\n        var paren_group_opening_paren_char\
    \ = \"\"\n        var paren_group_closing_paren_char = \"\"\n        var paren_group_opening_paren_char_index\
    \ = 0\n        var paren_group_closing_paren_char_index = 0\n        var paren_group_opening_paren_char_index\
    \ = 0\n        var paren_group_closing_paren_char_index = 0\n        var paren_group_opening_paren_char\
    \ = \"\"\n        var paren_group_closing_paren_char = \"\"\n        var paren_group_opening_paren_char_index\
    \ = 0\n        var paren_group_closing_paren_char_index = 0\n        var paren_group_opening_paren_char\
    \ = \"\"\n        var paren_group_closing_paren_char = \"\"\n        var paren_group_opening_paren_char_index\
    \ = 0\n        var paren_group_closing_paren_char_index = 0\n        var paren_group_opening_paren_char\
    \ = \"\"\n        var paren_group_closing_paren_char = \"\"\n        var paren_group_opening_paren_char_index\
    \ = 0\n        var paren_group_closing_paren_char_index = 0\n        var paren_group_opening_paren_char\
    \ = \"\"\n        var paren_group_closing_paren_char = \"\"\n        var paren_group_opening_paren_char_index\
    \ = 0\n        var paren_group_closing_paren_char_index = 0\n        var paren_group_opening_paren_char\
    \ = \"\"\n        var paren_group_closing_paren_char = \"\"\n        var paren_group_opening_paren_char_index\
    \ = 0\n        var paren_group_closing_paren_char_index = 0\n        var paren_group_opening_paren_char\
    \ = \"\"\n        var paren_group_closing_paren_char = \"\"\n        var paren_group_opening_paren_char_index\
    \ = 0\n        var paren_group_closing_paren_char_index = 0\n        var paren_group_opening_paren_char\
    \ = \"\"\n        var paren_group_closing_paren_char = \"\"\n        var paren_group_opening_paren_char_index\
    \ = 0\n        var paren_group_closing_paren_char_index = 0\n        var paren_group_opening_paren_char\
    \ = \"\"\n        var paren_group_closing_paren_char = \"\"\n        var paren_group_opening_paren_char_index\
    \ = 0\n        var paren_group_closing_paren_char_index = 0\n        var paren_group_opening_paren_char\
    \ = \"\"\n        var paren_group_closing_paren_char = \"\"\n        var paren",
  "        val paren_groups = paren_string.split(\"\\\\(\").map(_.trim).toList\n \
    \       val paren_groups_with_spaces = paren_groups.map(x => x.replace(\" \",\
    \ \"\"))\n        val paren_groups_with_spaces_without_spaces = paren_groups_with_spaces.map(x\
    \ => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        paren_groups_with_spaces_without_spaces.filter(x\
    \ => !x.isEmpty)", "        val paren_groups = paren_string.split(\"\\\\(\")\n\
    \        val paren_group_count = paren_groups.length\n        val paren_group_lengths\
    \ = paren_groups.map(x => x.length)\n        val paren_group_lengths_sum = paren_group_lengths.sum\n\
    \        val paren_group_lengths_product = paren_group_lengths.product\n     \
    \   val paren_group_lengths_product2 = paren_group_lengths_product * paren_group_lengths_product\n\
    \        val paren_group_lengths_product3 = paren_group_lengths_product2 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product4 = paren_group_lengths_product3 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product5 = paren_group_lengths_product4 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product6 = paren_group_lengths_product5 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product7 = paren_group_lengths_product6 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product8 = paren_group_lengths_product7 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product9 = paren_group_lengths_product8 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product10 = paren_group_lengths_product9 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product11 = paren_group_lengths_product10 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product12 = paren_group_lengths_product11 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product13 = paren_group_lengths_product12 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product14 = paren_group_lengths_product13 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product15 = paren_group_lengths_product14 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product16 = paren_group_lengths_product15 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product17 = paren_group_lengths_product16 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product18 = paren_group_lengths_product17 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product19 = paren_group_lengths_product18 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_size = paren_groups.length\n        val paren_groups_size2\
    \ = paren_groups_size * 2\n        val paren_groups_size3 = paren_groups_size2\
    \ * 2\n        val paren_groups_size4 = paren_groups_size3 * 2\n        val paren_groups_size5\
    \ = paren_groups_size4 * 2\n        val paren_groups_size6 = paren_groups_size5\
    \ * 2\n        val paren_groups_size7 = paren_groups_size6 * 2\n        val paren_groups_size8\
    \ = paren_groups_size7 * 2\n        val paren_groups_size9 = paren_groups_size8\
    \ * 2\n        val paren_groups_size10 = paren_groups_size9 * 2\n        val paren_groups_size11\
    \ = paren_groups_size10 * 2\n        val paren_groups_size12 = paren_groups_size11\
    \ * 2\n        val paren_groups_size13 = paren_groups_size12 * 2\n        val\
    \ paren_groups_size14 = paren_groups_size13 * 2\n        val paren_groups_size15\
    \ = paren_groups_size14 * 2\n        val paren_groups_size16 = paren_groups_size15\
    \ * 2\n        val paren_groups_size17 = paren_groups_size16 * 2\n        val\
    \ paren_groups_size18 = paren_groups_size17 * 2\n        val paren_groups_size19\
    \ = paren_groups_size18 * 2\n        val paren_groups_size20 = paren_groups_size19\
    \ * 2\n        val paren_groups_size21 = paren_groups_size20 * 2\n        val\
    \ paren_groups_size22 = paren_groups_size21 * 2\n        val paren_groups_size23\
    \ = paren_groups_size22 * 2\n        val paren_groups_size24 = paren_groups_size23\
    \ * 2\n        val paren_groups_size25 = paren_groups_size24 * 2\n        val\
    \ paren_groups_size26 = paren_groups_size25 * 2\n        val paren_groups_size27\
    \ = paren_groups_size26 * 2\n        val paren_groups_size28 = paren_groups_size27\
    \ * 2\n        val paren_groups_size29 = paren_groups_size28 * 2\n        val\
    \ paren_groups_size30 = paren_groups_size29 * 2\n        val paren_groups_size31\
    \ = paren_groups_size30 * 2\n        val paren_groups_size32 = paren_groups_size31\
    \ * 2\n        val paren_groups_size33 = paren_", "        val paren_groups =\
    \ paren_string.split(\"\\\\(\")\n        val paren_groups_count = paren_groups.length\n\
    \        val paren_groups_array = paren_groups.map(x => x.trim).filter(x => x.nonEmpty)\n\
    \        val paren_groups_array_count = paren_groups_array.length\n        val\
    \ paren_groups_array_array = paren_groups_array.map(x => x.split(\"\\\\)\"))\n\
    \        val paren_groups_array_array_count = paren_groups_array_array.length\n\
    \        val paren_groups_array_array_array_count = paren_groups_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_count = paren_groups_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_count = paren_groups_array_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_array_count = paren_groups_array_array_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_array_array_count = paren_groups_array_array_array_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_array_array_array_count\
    \ = paren_groups_array_array_array_array_array_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_array_array_array_array_count\
    \ = paren_groups_array_array_array_array_array_array_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_array_array_array_array_array_count\
    \ = paren_groups_array_array_array_array_array_array_array_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_array_array_array_array_array_array_count\
    \ = paren_groups_array_array_array_array_array_array_array_array_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_array_array_array_array_array_array_array_array_count\
    \ = paren_groups_array_array_array_array_array_array_array_array_array_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_array_array_array_array_array_array_array_array_array_count\
    \ = paren_groups_array_array_array_array_array_array_array_array_array_array_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_count\
    \ = paren_groups_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_count\
    \ = paren_groups_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array.length\n\
    \        val paren_groups_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_array_",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_counts\
    \ = paren_groups.map(x => x.split(\"\\\\)\").length).toList\n        val paren_group_lengths\
    \ = paren_group_counts.map(x => x.toDouble).toList\n        val paren_group_lengths_sum\
    \ = paren_group_lengths.sum\n        val paren_group_lengths_average = paren_group_lengths_sum\
    \ / paren_group_counts.length\n        val paren_group_lengths_variance = paren_group_lengths_sum\
    \ / paren_group_counts.length - 1\n        val paren_group_lengths_standard_deviation\
    \ = math.sqrt(paren_group_lengths_variance)\n        val paren_group_lengths_min\
    \ = paren_group_lengths.min\n        val paren_group_lengths_max = paren_group_lengths.max\n\
    \        val paren_group_lengths_range = paren_group_lengths_max - paren_group_lengths_min\n\
    \        val paren_group_lengths_range_average = paren_group_lengths_range / paren_group_counts.length\n\
    \        val paren_group_lengths_range_variance = paren_group_lengths_range /\
    \ paren_group_counts.length - 1\n        val paren_group_lengths_range_standard_deviation\
    \ = math.sqrt(paren_group_lengths_range_variance)\n        val paren_group_lengths_range_min\
    \ = paren_group_lengths_range.min\n        val paren_group_lengths_range_max =\
    \ paren_group_lengths_range.max\n        val paren_group_lengths_range_range =\
    \ paren_group_lengths_range_max - paren_group_lengths_range_min\n        val paren_group_lengths_range_range_average\
    \ = paren_group_lengths_range_range / paren_group_counts.length\n        val paren_group_lengths_range_range_variance\
    \ = paren_group_lengths_range_range / paren_group_counts.length - 1\n        val\
    \ paren_group_lengths_range_range_standard_deviation = math.sqrt(paren_group_lengths_range_range_variance)\n\
    \        val paren_group_lengths_range_range_min = paren_group_lengths_range_range.min\n\
    \        val paren_group_lengths_range_range_max = paren_group_lengths_range_range.max\n\
    \        val paren_group_lengths_range_range_range = paren_group_lengths_range_range_max\
    \ - paren_group_lengths_range_range_min\n        val paren_group_lengths_range_range_range_average\
    \ = paren_group_lengths_range_range_range / paren_group_counts.length\n      \
    \  val paren_group_lengths_range_range_range_variance = paren_group_lengths_range_range_range\
    \ / paren_group_counts.length - 1\n        val paren_group_length", "        val\
    \ paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_open_braces\
    \ = paren_groups.map(x => x.replace(\")\", \"\").replace(\"(\", \"\").trim())\n\
    \        val paren_groups_with_open_braces_with_spaces = paren_groups_with_open_braces.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\").trim())\n        val paren_groups_with_open_braces_with_spaces_sorted\
    \ = paren_groups_with_open_braces_with_spaces.sortBy(x => x)\n        val paren_groups_with_open_braces_with_spaces_sorted_with_open_braces\
    \ = paren_groups_with_open_braces_with_spaces_sorted.map(x => x.replace(\")\"\
    , \"\").replace(\"(\", \"\").trim())\n        val paren_groups_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces\
    \ = paren_groups_with_open_braces_with_spaces_sorted_with_open_braces.map(x =>\
    \ x.replace(\")\", \"\").replace(\"(\", \"\").trim())\n        val paren_groups_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted\
    \ = paren_groups_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted_with_open_braces\
    \ = paren_groups_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\").trim())\n        val paren_groups_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces\
    \ = paren_groups_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted\
    \ = paren_groups_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\").trim())\n        val paren_groups_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted_with_open_braces\
    \ = paren_groups_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sorted_with_open_braces_with_spaces_sor",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val result =\
    \ mutable.ListBuffer[String]()\n        paren_groups.foreach(group => {\n    \
    \        val paren_group_string = group.trim\n            val paren_group_open\
    \ = paren_group_string.indexOf(\"(\")\n            val paren_group_close = paren_group_string.indexOf(\"\
    )\")\n            val paren_group_length = paren_group_close - paren_group_open\n\
    \            if (paren_group_length == 0) result.add(paren_group_string)\n   \
    \         else {\n                val paren_group_open_brace = paren_group_string.substring(0,\
    \ paren_group_open)\n                val paren_group_close_brace = paren_group_string.substring(paren_group_close\
    \ + 1)\n                val paren_group_open_brace_length = paren_group_open_brace.trim\n\
    \                val paren_group_close_brace_length = paren_group_close_brace.trim\n\
    \                if (paren_group_open_brace_length == paren_group_close_brace_length)\
    \ {\n                    result.add(paren_group_string)\n                }\n \
    \               else {\n                    result.add(paren_group_string.substring(0,\
    \ paren_group_open_brace_length))\n                    result.add(paren_group_string.substring(paren_group_open_brace_length\
    \ + 1))\n                }\n            }\n        })\n        result.toList",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_strings\
    \ = paren_groups.map(x => x.replace(\")\", \"\"))\n        paren_group_strings.filter(x\
    \ => x.isEmpty).map(x => x.replace(\"(\", \"\")).filter(x => x.isEmpty).map(x\
    \ => x.replace(\")\", \"\"))", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x => x.replace(\"\
    )\", \" ) \"))\n        val paren_groups_with_spaces_trimmed = paren_groups_with_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_trimmed_trimmed\
    \ = paren_groups_with_spaces_trimmed.map(x => x.replace(\") \", \" ))\")\n   \
    \     val paren_groups_with_spaces_trimmed_trimmed_trimmed = paren_groups_with_spaces_trimmed_trimmed.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed\
    \ = paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed.map(x => x.replace(\"\
    ) \", \" ))\")\n        val paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed\
    \ = paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed.map(x =>\
    \ x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed\
    \ = paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed.map(x\
    \ => x.replace(\") \", \" ))\")\n        val paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed\
    \ = paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed\
    \ = paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed.map(x\
    \ => x.replace(\") \", \" ))\")\n        val paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed\
    \ = paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed\
    \ = paren_groups_with_spaces_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trimmed_trim",
  "        val paren_groups = mutable.ListBuffer[String]()\n        val paren_open\
    \ = mutable.ListBuffer[String]()\n        val paren_close = mutable.ListBuffer[String]()\n\
    \        val paren_open_size = mutable.ListBuffer[Int]()\n        val paren_close_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_size = mutable.ListBuffer[Int]()\n\
    \        val paren_group_open = mutable.ListBuffer[Int]()\n        val paren_group_close\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_size = mutable.ListBuffer[Int]()\n\
    \        val paren_group_close_size = mutable.ListBuffer[Int]()\n        val paren_group_open_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_close_index = mutable.ListBuffer[Int]()\n\
    \        val paren_group_open_index_size = mutable.ListBuffer[Int]()\n       \
    \ val paren_group_close_index_size = mutable.ListBuffer[Int]()\n        val paren_group_open_index_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_close_index_size = mutable.ListBuffer[Int]()\n\
    \        val paren_group_open_index_size = mutable.ListBuffer[Int]()\n       \
    \ val paren_group_close_index_size = mutable.ListBuffer[Int]()\n        val paren_group_open_index_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_close_index_size = mutable.ListBuffer[Int]()\n\
    \        val paren_group_open_index_size = mutable.ListBuffer[Int]()\n       \
    \ val paren_group_close_index_size = mutable.ListBuffer[Int]()\n        val paren_group_open_index_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_close_index_size = mutable.ListBuffer[Int]()\n\
    \        val paren_group_open_index_size = mutable.ListBuffer[Int]()\n       \
    \ val paren_group_close_index_size = mutable.ListBuffer[Int]()\n        val paren_group_open_index_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_close_index_size = mutable.ListBuffer[Int]()\n\
    \        val paren_group_open_index_size = mutable.ListBuffer[Int]()\n       \
    \ val paren_group_close_index_size = mutable.ListBuffer[Int]()\n        val paren_group_open_index_size\
    \ = mutable.ListBuffer[Int]()\n        val paren", "        val paren_groups =\
    \ paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_sorted =\
    \ paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replace(\"( \", \" ( \"))\n   \
    \     val paren_groups_with_spaces_sorted_with_spaces_sorted = paren_groups_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted.map(x => x.replace(\"(\
    \ \", \" ( \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x =>\
    \ x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\"( \", \" ( \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\"( \", \" ( \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\"( \", \" ( \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_",
  "        val paren_groups = mutable.ListBuffer[String]()\n        val paren_open\
    \ = mutable.ListBuffer[String]()\n        val paren_close = mutable.ListBuffer[String]()\n\
    \        paren_string.foreach {\n            c =>\n            if (c == '(') {\n\
    \                paren_open += c\n            } else if (c == ')') {\n       \
    \         paren_close += c\n            } else if (c == ' ') {\n             \
    \   paren_groups += paren_open\n                paren_open = paren_close\n   \
    \             paren_close = mutable.ListBuffer[String]()\n            } else {\n\
    \                paren_close += c\n            }\n        }\n        paren_groups\
    \ += paren_open\n        paren_groups", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2\
    \ = paren_groups_flat.filterNot(_ == \")\")\n        val paren_groups_flat3 =\
    \ paren_groups_flat2.filterNot(_ == \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_\
    \ == \")\")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ ==\
    \ \"(\")\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"\
    )\")\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \"(\"\
    )\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \")\")\n\
    \        val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \"(\")\n \
    \       val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \")\")\n \
    \       val paren_groups_flat11 = paren_groups_flat10.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \")\")\n\
    \        val paren_groups_flat13 = paren_groups_flat12.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat14 = paren_groups_flat13.filterNot(_ == \")\")\n\
    \        val paren_groups_flat15 = paren_groups_flat14.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat16 = paren_groups_flat15.filterNot(_ == \")\")\n\
    \        val paren_groups_flat17 = paren_groups_flat16.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat18 = paren_groups_flat17.filterNot(_ == \")\")\n\
    \        val paren_groups_flat19 = paren_groups_flat18.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat20 = paren_groups_flat19.filterNot(_ == \")\")\n\
    \        val paren_groups_flat21 = paren_groups_flat20.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat22 = paren_groups_flat21.filterNot(_ == \")\")\n\
    \        val paren_groups_flat23 = paren_groups_flat22.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat24 = paren_groups_flat23.filterNot(_ == \")\")\n\
    \        val paren_groups_flat25 = paren_groups_flat24.filter", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n\
    \        val paren_groups_flat2 = paren_groups_flat.filterNot(_ == \")\")\n  \
    \      val paren_groups_flat3 = paren_groups_flat2.filterNot(_ == \"(\")\n   \
    \     val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \" \")\n    \
    \    val paren_groups_flat5 = paren_groups_flat4.filterNot(_ == \"\\\\\")\n  \
    \      val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"\\\\(\")\n\
    \        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \"\\\\)\"\
    )\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \"\\\\)\"\
    )\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \"\\\\)\"\
    )\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \"\\\\\
    )\")\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(_ == \"\\\
    \\)\")\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \"\
    \\\\)\")\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_ ==\
    \ \"\\\\)\")\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat25 = paren_groups_flat24.filter",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.filterNot(_\
    \ == \")\")\n        val paren_groups_flat3 = paren_groups_flat2.filterNot(_ ==\
    \ \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \"\
    \ \")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ == \"\"\
    )\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"\\\\\"\
    )\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \"\\\\(\"\
    )\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \"\\\\)\"\
    )\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \"\\\\)\"\
    )\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \"\\\\\
    )\")\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(_ == \"\\\
    \\)\")\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \"\
    \\\\)\")\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_ ==\
    \ \"\\\\)\")\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat25 = paren_groups_flat24.filterNo",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_strings\
    \ = paren_groups.map(x => x.replace(\")\", \"\").trim())\n        val paren_group_strings_sorted\
    \ = paren_group_strings.sortBy(x => x)\n        val paren_group_strings_sorted_reversed\
    \ = paren_group_strings_sorted.reverse\n        val paren_group_strings_sorted_reversed_distinct\
    \ = paren_group_strings_sorted_reversed.distinct\n        val paren_group_strings_sorted_reversed_distinct_sorted\
    \ = paren_group_strings_sorted_reversed_distinct.sortBy(x => x)\n        val paren_group_strings_sorted_reversed_distinct_sorted_distinct\
    \ = paren_group_strings_sorted_reversed_distinct_sorted.distinct\n        val\
    \ paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted = paren_group_strings_sorted_reversed_distinct_sorted_distinct.sortBy(x\
    \ => x)\n        val paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct\
    \ = paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted.distinct\n\
    \        val paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct_sorted\
    \ = paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct.sortBy(x\
    \ => x)\n        val paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct_sorted_distinct\
    \ = paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct_sorted.distinct\n\
    \        val paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct_sorted_distinct_sorted\
    \ = paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct_sorted_distinct.sortBy(x\
    \ => x)\n        val paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct_sorted_distinct_sorted_distinct\
    \ = paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct_sorted_distinct_sorted.distinct\n\
    \        val paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct_sorted_distinct_sorted_distinct\
    \ = paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct_sorted_distinct_sorted_distinct.sortBy(x\
    \ => x)\n        val paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct_sorted_distinct_sorted_distinct_sorted\
    \ = paren_group_strings_sorted_reversed_distinct_sorted_distinct_sorted_distinct_sorted_distinct_sorted_distinct.sortBy(x\
    \ => x)\n        val paren", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x => x.replace(\"\
    )\", \" ) \"))\n        val paren_groups_with_spaces_reversed = paren_groups_with_spaces.reverse\n\
    \        val paren_groups_with_spaces_reversed_with_spaces = paren_groups_with_spaces_reversed.map(x\
    \ => x.replace(\"(\", \" ( \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed\
    \ = paren_groups_with_spaces_reversed_with_spaces.reverse\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed.map(x => x.replace(\"\
    )\", \" ) \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces.reverse\n\
    \        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces.map(x\
    \ => x.replace(\"(\", \" ( \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces.map(x\
    \ => x.replace(\"(\", \" ( \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_count\
    \ = paren_groups.length\n        val paren_groups_remainder = paren_groups_count\
    \ % 2\n        val paren_groups_remainder_count = paren_groups_remainder + 1\n\
    \        val paren_groups_remainder_groups = paren_groups.take(paren_groups_remainder_count)\n\
    \        val paren_groups_remainder_groups_count = paren_groups_remainder_groups.length\n\
    \        val paren_groups_remainder_groups_remainder = paren_groups_remainder_groups_count\
    \ % 2\n        val paren_groups_remainder_groups_remainder_count = paren_groups_remainder_groups_remainder\
    \ + 1\n        val paren_groups_remainder_groups_remainder_groups = paren_groups_remainder_groups.take(paren_groups_remainder_groups_remainder_count)\n\
    \        val paren_groups_remainder_groups_remainder_groups_count = paren_groups_remainder_groups_remainder_groups.length\n\
    \        val paren_groups_remainder_groups_remainder_groups_remainder = paren_groups_remainder_groups_remainder_groups_count\
    \ % 2\n        val paren_groups_remainder_groups_remainder_groups_remainder_count\
    \ = paren_groups_remainder_groups_remainder_groups_remainder + 1\n        val\
    \ paren_groups_remainder_groups_remainder_groups_remainder_groups = paren_groups_remainder_groups_remainder_groups_remainder_groups.take(paren_groups_remainder_groups_remainder_groups_remainder_count)\n\
    \        val paren_groups_remainder_groups_remainder_groups_remainder_groups_count\
    \ = paren_groups_remainder_groups_remainder_groups_remainder_groups.length\n \
    \       val paren_groups_remainder_groups_remainder_groups_remainder_groups_remainder\
    \ = paren_groups_remainder_groups_remainder_groups_remainder_groups_count % 2\n\
    \        val paren_groups_remainder_groups_remainder_groups_remainder_groups_remainder_count\
    \ = paren_groups_remainder_groups_remainder_groups_remainder_groups_remainder\
    \ + 1\n        val paren_groups_remainder_groups_remainder_groups_remainder_groups_remainder_groups\
    \ = paren_groups_remainder_groups_remainder_groups_remainder_groups_remainder_groups.take(paren_groups_remainder_groups_remainder_groups_remainder_groups_remainder_count)\n\
    \        val paren_groups_remainder_groups_remainder_groups_remainder_groups_remainder_groups_count\
    \ = paren_groups_remainder_groups_remainder_groups_remainder_groups_remainder_groups.length\n\
    \        val paren_groups_remainder_groups_remainder_groups_remainder_groups_remainder_groups_remainder\
    \ = paren_groups_remainder_groups_remainder_groups_remainder_groups_remainder_groups_remainder_count\
    \ % 2\n        val paren_groups_remainder_groups_remainder_groups_", "       \
    \ val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replace(\" \", \"\"))\n       \
    \ val paren_groups_with_spaces_sorted_with_spaces_sorted = paren_groups_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted.map(x => x.replace(\" \"\
    , \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x =>\
    \ x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_count\
    \ = paren_groups.length\n        val paren_groups_count_with_paren = paren_groups_count\
    \ + 1\n        val paren_groups_count_without_paren = paren_groups_count - 1\n\
    \        val paren_groups_count_with_paren_without_paren = paren_groups_count_with_paren\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_paren =\
    \ paren_groups_count_with_paren_without_paren - 1\n        val paren_groups_count_with_paren_without_paren_without_paren_without_paren\
    \ = paren_groups_count_with_paren_without_paren_without_paren - 1\n        val\
    \ paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren\
    \ = paren_groups_count_with_paren_without_paren_without_paren_without_paren -\
    \ 1\n        val paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren_without_paren\
    \ = paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren\
    \ = paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren_without_paren\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren\
    \ = paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren\
    \ = paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren\
    \ = paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren_without_paren\
    \ = paren_groups_count_with_paren_without_paren_without_paren_without_paren_",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_size\
    \ = paren_groups.length\n        val paren_groups_size2 = paren_groups_size *\
    \ 2\n        val paren_groups_size3 = paren_groups_size2 * 2\n        val paren_groups_size4\
    \ = paren_groups_size3 * 2\n        val paren_groups_size5 = paren_groups_size4\
    \ * 2\n        val paren_groups_size6 = paren_groups_size5 * 2\n        val paren_groups_size7\
    \ = paren_groups_size6 * 2\n        val paren_groups_size8 = paren_groups_size7\
    \ * 2\n        val paren_groups_size9 = paren_groups_size8 * 2\n        val paren_groups_size10\
    \ = paren_groups_size9 * 2\n        val paren_groups_size11 = paren_groups_size10\
    \ * 2\n        val paren_groups_size12 = paren_groups_size11 * 2\n        val\
    \ paren_groups_size13 = paren_groups_size12 * 2\n        val paren_groups_size14\
    \ = paren_groups_size13 * 2\n        val paren_groups_size15 = paren_groups_size14\
    \ * 2\n        val paren_groups_size16 = paren_groups_size15 * 2\n        val\
    \ paren_groups_size17 = paren_groups_size16 * 2\n        val paren_groups_size18\
    \ = paren_groups_size17 * 2\n        val paren_groups_size19 = paren_groups_size18\
    \ * 2\n        val paren_groups_size20 = paren_groups_size19 * 2\n        val\
    \ paren_groups_size21 = paren_groups_size20 * 2\n        val paren_groups_size22\
    \ = paren_groups_size21 * 2\n        val paren_groups_size23 = paren_groups_size22\
    \ * 2\n        val paren_groups_size24 = paren_groups_size23 * 2\n        val\
    \ paren_groups_size25 = paren_groups_size24 * 2\n        val paren_groups_size26\
    \ = paren_groups_size25 * 2\n        val paren_groups_size27 = paren_groups_size26\
    \ * 2\n        val paren_groups_size28 = paren_groups_size27 * 2\n        val\
    \ paren_groups_size29 = paren_groups_size28 * 2\n        val paren_groups_size30\
    \ = paren_groups_size29 * 2\n        val paren_groups_size31 = paren_groups_size30\
    \ * 2\n        val paren_groups_size32 = paren_groups_size31 * 2\n        val\
    \ paren_groups_size33 = paren_", "        val paren_groups = paren_string.split(\"\
    \\\\(\").map(_.trim).toList\n        val paren_groups_count = paren_groups.size\n\
    \        val paren_groups_remaining = paren_groups_count - 1\n        val paren_groups_remaining_string\
    \ = paren_groups_remaining.toString\n        val paren_groups_remaining_string_reversed\
    \ = paren_groups_remaining_string.reverse\n        val paren_groups_remaining_string_reversed_reversed\
    \ = paren_groups_remaining_string_reversed.reverse\n        val paren_groups_remaining_string_reversed_reversed_reversed\
    \ = paren_groups_remaining_string_reversed_reversed.reverse\n        val paren_groups_remaining_string_reversed_reversed_reversed_reversed\
    \ = paren_groups_remaining_string_reversed_reversed_reversed.reverse\n       \
    \ val paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed\
    \ = paren_groups_remaining_string_reversed_reversed_reversed_reversed.reverse\n\
    \        val paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed.reverse\n\
    \        val paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed_reversed.reverse\n\
    \        val paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed.reverse\n\
    \        val paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed.reverse\n\
    \        val paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed.reverse\n\
    \        val paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = paren_groups_remaining_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed.reverse\n\
    \        val paren_groups_", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_size = paren_groups.length\n        val paren_groups_size2\
    \ = paren_groups_size/2\n        val paren_groups_size3 = paren_groups_size/3\n\
    \        val paren_groups_size4 = paren_groups_size/4\n        val paren_groups_size5\
    \ = paren_groups_size/5\n        val paren_groups_size6 = paren_groups_size/6\n\
    \        val paren_groups_size7 = paren_groups_size/7\n        val paren_groups_size8\
    \ = paren_groups_size/8\n        val paren_groups_size9 = paren_groups_size/9\n\
    \        val paren_groups_size10 = paren_groups_size/10\n        val paren_groups_size11\
    \ = paren_groups_size/11\n        val paren_groups_size12 = paren_groups_size/12\n\
    \        val paren_groups_size13 = paren_groups_size/13\n        val paren_groups_size14\
    \ = paren_groups_size/14\n        val paren_groups_size15 = paren_groups_size/15\n\
    \        val paren_groups_size16 = paren_groups_size/16\n        val paren_groups_size17\
    \ = paren_groups_size/17\n        val paren_groups_size18 = paren_groups_size/18\n\
    \        val paren_groups_size19 = paren_groups_size/19\n        val paren_groups_size20\
    \ = paren_groups_size/20\n        val paren_groups_size21 = paren_groups_size/21\n\
    \        val paren_groups_size22 = paren_groups_size/22\n        val paren_groups_size23\
    \ = paren_groups_size/23\n        val paren_groups_size24 = paren_groups_size/24\n\
    \        val paren_groups_size25 = paren_groups_size/25\n        val paren_groups_size26\
    \ = paren_groups_size/26\n        val paren_groups_size27 = paren_groups_size/27\n\
    \        val paren_groups_size28 = paren_groups_size/28\n        val paren_groups_size29\
    \ = paren_groups_size/29\n        val paren_groups_size30 = paren_groups_size/30\n\
    \        val paren_groups_size31 = paren_groups_size/31\n        val paren_groups_size32\
    \ = paren_groups_size/32\n        val paren_groups_size33 = paren_groups_size/33\n\
    \        val paren_groups_size34 = paren_groups_size/34\n        val paren_groups_size",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.filterNot(x\
    \ => x.contains(\"\\\\(\"))\n        val paren_groups_flat3 = paren_groups_flat2.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(x\
    \ => x.contains(\"\\\\)\\\\(\"))\n        paren_groups_flat4.toList", "      \
    \  val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_counts\
    \ = paren_groups.map(x => x.split(\"\\\\)\").length).toList\n        val paren_group_counts_sum\
    \ = paren_group_counts.sum\n        val paren_group_counts_avg = paren_group_counts.sum\
    \ / paren_group_counts_sum\n        val paren_group_counts_min = paren_group_counts.min\n\
    \        val paren_group_counts_max = paren_group_counts.max\n        val paren_group_counts_range\
    \ = paren_group_counts_max - paren_group_counts_min\n        val paren_group_counts_range_avg\
    \ = paren_group_counts_range / paren_group_counts_sum\n        val paren_group_counts_range_min\
    \ = paren_group_counts_range / paren_group_counts_avg\n        val paren_group_counts_range_max\
    \ = paren_group_counts_range / paren_group_counts_min\n        val paren_group_counts_range_max_avg\
    \ = paren_group_counts_range_max * paren_group_counts_avg\n        val paren_group_counts_range_max_min\
    \ = paren_group_counts_range_max * paren_group_counts_min\n        val paren_group_counts_range_max_min_avg\
    \ = paren_group_counts_range_max_min * paren_group_counts_avg\n        val paren_group_counts_range_max_min_min_avg\
    \ = paren_group_counts_range_max_min * paren_group_counts_min\n        val paren_group_counts_range_max_min_min_min_avg\
    \ = paren_group_counts_range_max_min * paren_group_counts_avg\n        val paren_group_counts_range_max_min_min_min_min_avg\
    \ = paren_group_counts_range_max_min * paren_group_counts_min\n        val paren_group_counts_range_max_min_min_min_min_min_avg\
    \ = paren_group_counts_range_max_min * paren_group_counts_avg\n        val paren_group_counts_range_max_min_min_min_min_min_min_avg\
    \ = paren_group_counts_range_max_min * paren_group_counts_min\n        val paren_group_counts_range_max_min_min_min_min_min_min_min_avg\
    \ = paren_group_counts_range_max_min * paren_group_counts_avg\n        val paren_group_counts_range_max_min_min_min_min_min_min_min_min_avg\
    \ = paren_group_counts_range_max_min * paren_group_counts_min\n        val paren_group_counts_range_max_min_min_min_min_min_min_min_min_min_",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_size\
    \ = paren_groups.length\n        val paren_groups_size2 = paren_groups_size/2\n\
    \        val paren_groups_size3 = paren_groups_size/3\n        val paren_groups_size4\
    \ = paren_groups_size/4\n        val paren_groups_size5 = paren_groups_size/5\n\
    \        val paren_groups_size6 = paren_groups_size/6\n        val paren_groups_size7\
    \ = paren_groups_size/7\n        val paren_groups_size8 = paren_groups_size/8\n\
    \        val paren_groups_size9 = paren_groups_size/9\n        val paren_groups_size10\
    \ = paren_groups_size/10\n        val paren_groups_size11 = paren_groups_size/11\n\
    \        val paren_groups_size12 = paren_groups_size/12\n        val paren_groups_size13\
    \ = paren_groups_size/13\n        val paren_groups_size14 = paren_groups_size/14\n\
    \        val paren_groups_size15 = paren_groups_size/15\n        val paren_groups_size16\
    \ = paren_groups_size/16\n        val paren_groups_size17 = paren_groups_size/17\n\
    \        val paren_groups_size18 = paren_groups_size/18\n        val paren_groups_size19\
    \ = paren_groups_size/19\n        val paren_groups_size20 = paren_groups_size/20\n\
    \        val paren_groups_size21 = paren_groups_size/21\n        val paren_groups_size22\
    \ = paren_groups_size/22\n        val paren_groups_size23 = paren_groups_size/23\n\
    \        val paren_groups_size24 = paren_groups_size/24\n        val paren_groups_size25\
    \ = paren_groups_size/25\n        val paren_groups_size26 = paren_groups_size/26\n\
    \        val paren_groups_size27 = paren_groups_size/27\n        val paren_groups_size28\
    \ = paren_groups_size/28\n        val paren_groups_size29 = paren_groups_size/29\n\
    \        val paren_groups_size30 = paren_groups_size/30\n        val paren_groups_size31\
    \ = paren_groups_size/31\n        val paren_groups_size32 = paren_groups_size/32\n\
    \        val paren_groups_size33 = paren_groups_size/33\n        val paren_groups_size34\
    \ = paren_groups_size/34\n        val paren_groups_size", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\").map(_.trim).toList\n        val open_braces\
    \ = paren_groups.filter(_.startsWith(\"(\"))\n        val close_braces = paren_groups.filter(_.startsWith(\"\
    )\"))\n        val unclosed_groups = paren_groups.filter(!_.startsWith(\"(\")\
    \ && !_.startsWith(\")\"))\n        val unclosed_groups_with_spaces = unclosed_groups.map(x\
    \ => \" \" + x)\n        val open_braces_with_spaces = open_braces.map(x => \"\
    \ \" + x)\n        val close_braces_with_spaces = close_braces.map(x => \" \"\
    \ + x)\n        val unclosed_groups_with_spaces_with_spaces = unclosed_groups_with_spaces.map(x\
    \ => \" \" + x)\n        val unclosed_groups_with_spaces_with_spaces_with_spaces\
    \ = unclosed_groups_with_spaces_with_spaces.map(x => \" \" + x)\n        val open_braces_with_spaces_with_spaces\
    \ = open_braces_with_spaces.map(x => \" \" + x)\n        val close_braces_with_spaces_with_spaces\
    \ = close_braces_with_spaces.map(x => \" \" + x)\n        val unclosed_groups_with_spaces_with_spaces_with_spaces\
    \ = unclosed_groups_with_spaces_with_spaces.map(x => \" \" + x)\n        val unclosed_groups_with_spaces_with_spaces_with_spaces_with_spaces\
    \ = unclosed_groups_with_spaces_with_spaces_with_spaces.map(x => \" \" + x)\n\
    \        val open_braces_with_spaces_with_spaces_with_spaces = open_braces_with_spaces_with_spaces.map(x\
    \ => \" \" + x)\n        val close_braces_with_spaces_with_spaces_with_spaces\
    \ = close_braces_with_spaces_with_spaces.map(x => \" \" + x)\n        val unclosed_groups_with_spaces_with_spaces_with_spaces_with_spaces\
    \ = unclosed_groups_with_spaces_with_spaces_with_spaces.map(x => \" \" + x)\n\
    \        val unclosed_groups_with_spaces_with_spaces_with_spaces_with_spaces_with_spaces\
    \ = unclosed_groups_with_spaces_with_spaces_with_spaces_with_spaces.map(x => \"\
    \ \" + x)\n        val open_braces_with_spaces_with_spaces_with_spaces_with_spaces\
    \ = open_braces_with_spaces_with_spaces_with_spaces.map(x => \" \" + x)\n    \
    \    val close_braces_with_spaces_with_spaces_with_spaces_with_spaces = close_braces_with_spaces_with_spaces_with_spaces.map(x\
    \ => \" \" + x)\n        val unclosed_groups_with_spaces_with_spaces_with_spaces_with_spaces_with_spaces\
    \ = unclosed_groups_with_spaces_with_spaces_with_spaces_with_spaces.map(x => \"\
    \ \" + x)\n        val unclosed_groups_with_", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x => x.trim).filter(x\
    \ => !x.isEmpty)\n        val paren_groups_with_spaces_sorted = paren_groups_with_spaces.sortWith((x,y)\
    \ => x.length <= y.length)\n        val paren_groups_with_spaces_sorted_with_paren\
    \ = paren_groups_with_spaces_sorted.map(x => x + \"(\")\n        val paren_groups_with_spaces_sorted_with_paren_sorted\
    \ = paren_groups_with_spaces_sorted_with_paren.sortWith((x,y) => x.length <= y.length)\n\
    \        val paren_groups_with_spaces_sorted_with_paren_sorted_with_paren = paren_groups_with_spaces_sorted_with_paren_sorted.map(x\
    \ => x + \"(\")\n        val paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted\
    \ = paren_groups_with_spaces_sorted_with_paren_sorted_with_paren.sortWith((x,y)\
    \ => x.length <= y.length)\n        val paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted_with_paren\
    \ = paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted.map(x\
    \ => x + \"(\")\n        val paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted\
    \ = paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted_with_paren.sortWith((x,y)\
    \ => x.length <= y.length)\n        val paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted_with_paren\
    \ = paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted_with_paren.map(x\
    \ => x + \"(\")\n        val paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted\
    \ = paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted_with_paren.sortWith((x,y)\
    \ => x.length <= y.length)\n        val paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted_with_paren\
    \ = paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted_with_paren.map(x\
    \ => x + \"(\")\n        val paren_groups_with_spaces_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted_with_paren_sorted_with_paren_sor",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_counts\
    \ = paren_groups.map(x => x.split(\"\\\\)\").length).sum\n        val paren_group_lengths\
    \ = paren_groups.map(x => x.split(\"\\\\)\").length).max\n        val paren_group_lengths_sum\
    \ = paren_group_lengths.sum\n        val paren_group_lengths_product = paren_group_lengths.product\n\
    \        val paren_group_lengths_product_sum = paren_group_lengths_product.sum\n\
    \        val paren_group_lengths_product_product = paren_group_lengths_product.product\n\
    \        val paren_group_lengths_product_product_sum = paren_group_lengths_product_product.sum\n\
    \        val paren_group_lengths_product_product_product = paren_group_lengths_product_product.product\n\
    \        val paren_group_lengths_product_product_product_sum = paren_group_lengths_product_product_product.sum\n\
    \        val paren_group_lengths_product_product_product_product = paren_group_lengths_product_product_product.product\n\
    \        val paren_group_lengths_product_product_product_product_sum = paren_group_lengths_product_product_product_product.sum\n\
    \        val paren_group_lengths_product_product_product_product_product = paren_group_lengths_product_product_product_product.product\n\
    \        val paren_group_lengths_product_product_product_product_product_sum =\
    \ paren_group_lengths_product_product_product_product_product.sum\n        val\
    \ paren_group_lengths_product_product_product_product_product_product = paren_group_lengths_product_product_product_product_product.product\n\
    \        val paren_group_lengths_product_product_product_product_product_product_sum\
    \ = paren_group_lengths_product_product_product_product_product_product.sum\n\
    \        val paren_group_lengths_product_product_product_product_product_product_product\
    \ = paren_group_lengths_product_product_product_product_product_product.product\n\
    \        val paren_group_lengths_product_product_product_product_product_product_product_sum\
    \ = paren_group_lengths_product_product_product_product_product_product_product.sum\n\
    \        val paren_group_lengths_product_product_product_product_product_product_product_product\
    \ = paren_group_lengths_product_product_product_product_product_product_product.product\n\
    \        val paren_group_lengths_product_product_product_product_product_product_product_product_sum\
    \ = paren_group_lengths_product_product_product_product_product_product_product_product.sum\n\
    \        val paren_group_lengths_product_product_product_product_product_product_product_product_product\
    \ = paren_group_lengths_product_product_product_product_product_product_product_product_product.product\n\
    \        val paren_group_lengths_product_product_product_product_product_product_product_product_product_sum\
    \ = paren_group_lengths_product_product_product_product_product_product_product_product_",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_counts\
    \ = paren_groups.map(paren_group => paren_group.split(\"\\\\)\").length)\n   \
    \     val paren_group_counts_sorted = paren_group_counts.sortBy(_ <=> -_)\n  \
    \      val paren_group_counts_sorted_with_max_count = paren_group_counts_sorted.take(paren_group_counts_sorted.length\
    \ - 1)\n        val paren_group_counts_sorted_with_max_count_sorted = paren_group_counts_sorted_with_max_count.sortBy(_\
    \ <=> -_)\n        val paren_group_counts_sorted_with_max_count_sorted_with_max_count\
    \ = paren_group_counts_sorted_with_max_count_sorted.take(paren_group_counts_sorted_with_max_count.length\
    \ - 1)\n        val paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted\
    \ = paren_group_counts_sorted_with_max_count_sorted_with_max_count.sortBy(_ <=>\
    \ -_)\n        val paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count\
    \ = paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted.take(paren_group_counts_sorted_with_max_count_sorted.length\
    \ - 1)\n        val paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted\
    \ = paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count.sortBy(_\
    \ <=> -_)\n        val paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count\
    \ = paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted.take(paren_group_counts_sorted_with_max_count_sorted.length\
    \ - 1)\n        val paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted\
    \ = paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count.sortBy(_\
    \ <=> -_)\n        val paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count\
    \ = paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted.take(paren_group_counts_sorted_with_max_count_sorted.length\
    \ - 1)\n        val paren_group_counts_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count_sorted_with_max_count\
    \ = paren_group_counts_sorted_with_max_count_", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2\
    \ = paren_groups_flat.filterNot(_ == \")\")\n        val paren_groups_flat3 =\
    \ paren_groups_flat2.filterNot(_ == \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_\
    \ == \")\")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ ==\
    \ \"(\")\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"\
    )\")\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \"(\"\
    )\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \")\")\n\
    \        val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \"(\")\n \
    \       val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \")\")\n \
    \       val paren_groups_flat11 = paren_groups_flat10.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \")\")\n\
    \        val paren_groups_flat13 = paren_groups_flat12.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat14 = paren_groups_flat13.filterNot(_ == \")\")\n\
    \        val paren_groups_flat15 = paren_groups_flat14.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat16 = paren_groups_flat15.filterNot(_ == \")\")\n\
    \        val paren_groups_flat17 = paren_groups_flat16.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat18 = paren_groups_flat17.filterNot(_ == \")\")\n\
    \        val paren_groups_flat19 = paren_groups_flat18.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat20 = paren_groups_flat19.filterNot(_ == \")\")\n\
    \        val paren_groups_flat21 = paren_groups_flat20.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat22 = paren_groups_flat21.filterNot(_ == \")\")\n\
    \        val paren_groups_flat23 = paren_groups_flat22.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat24 = paren_groups_flat23.filterNot(_ == \")\")\n\
    \        val paren_groups_flat25 = paren_groups_flat24.filter", "        val paren_groups\
    \ = mutable.ListBuffer[String]()\n        var open_braces = 0\n        var closed_braces\
    \ = 0\n        var open_parens = 0\n        var close_parens = 0\n        var\
    \ open_brackets = 0\n        var closed_brackets = 0\n        var open_curly_braces\
    \ = 0\n        var close_curly_braces = 0\n        var open_curly_brackets = 0\n\
    \        var close_curly_brackets = 0\n        var open_curly_curly_braces = 0\n\
    \        var close_curly_curly_braces = 0\n        var open_curly_curly_brackets\
    \ = 0\n        var close_curly_curly_brackets = 0\n        var open_curly_curly_curly_braces\
    \ = 0\n        var close_curly_curly_curly_braces = 0\n        var open_curly_curly_curly_brackets\
    \ = 0\n        var close_curly_curly_curly_brackets = 0\n        var open_curly_curly_curly_curly_braces\
    \ = 0\n        var close_curly_curly_curly_curly_braces = 0\n        var open_curly_curly_curly_curly_brackets\
    \ = 0\n        var close_curly_curly_curly_curly_brackets = 0\n        var open_curly_curly_curly_curly_curly_braces\
    \ = 0\n        var close_curly_curly_curly_curly_curly_braces = 0\n        var\
    \ open_curly_curly_curly_curly_curly_brackets = 0\n        var close_curly_curly_curly_curly_curly_brackets\
    \ = 0\n        var open_curly_curly_curly_curly_curly_curly_braces = 0\n     \
    \   var close_curly_curly_curly_curly_curly_curly_braces = 0\n        var open_curly_curly_curly_curly_curly_curly_brackets\
    \ = 0\n        var close_curly_curly_curly_curly_curly_curly_brackets = 0\n  \
    \      var open_curly_curly_curly_curly_curly_curly_curly_braces = 0\n       \
    \ var close_curly_curly_curly_curly_curly_curly_curly_braces = 0\n        var\
    \ open_curly_curly_curly_curly_curly_curly_curly_brackets = 0\n        var close_curly_curly_curly_curly_curly_curly_curly_brackets\
    \ = 0\n        var open_curly_curly_curly_curly_curly_curly_curly_curly_braces\
    \ = 0\n        var close_curly_curly_curly_curly_curly_curly_curly_curly_braces\
    \ = 0\n        var open_curly_curly_curly_curly_curly_curly_curly_curly_brackets\
    \ = 0\n        var close_curly_curly_curly_curly_curly_curly_curly_curly_brackets\
    \ = 0\n        var open_curly_curly_curly_curly_curly_curly_", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_set = paren_groups.toSet\n\
    \        val paren_groups_list_size = paren_groups.length\n        val paren_groups_list_size_2\
    \ = paren_groups_list_size * 2\n        val paren_groups_list_size_3 = paren_groups_list_size_2\
    \ * 2\n        val paren_groups_list_size_4 = paren_groups_list_size_3 * 2\n \
    \       val paren_groups_list_size_5 = paren_groups_list_size_4 * 2\n        val\
    \ paren_groups_list_size_6 = paren_groups_list_size_5 * 2\n        val paren_groups_list_size_7\
    \ = paren_groups_list_size_6 * 2\n        val paren_groups_list_size_8 = paren_groups_list_size_7\
    \ * 2\n        val paren_groups_list_size_9 = paren_groups_list_size_8 * 2\n \
    \       val paren_groups_list_size_10 = paren_groups_list_size_9 * 2\n       \
    \ val paren_groups_list_size_11 = paren_groups_list_size_10 * 2\n        val paren_groups_list_size_12\
    \ = paren_groups_list_size_11 * 2\n        val paren_groups_list_size_13 = paren_groups_list_size_12\
    \ * 2\n        val paren_groups_list_size_14 = paren_groups_list_size_13 * 2\n\
    \        val paren_groups_list_size_15 = paren_groups_list_size_14 * 2\n     \
    \   val paren_groups_list_size_16 = paren_groups_list_size_15 * 2\n        val\
    \ paren_groups_list_size_17 = paren_groups_list_size_16 * 2\n        val paren_groups_list_size_18\
    \ = paren_groups_list_size_17 * 2\n        val paren_groups_list_size_19 = paren_groups_list_size_18\
    \ * 2\n        val paren_groups_list_size_20 = paren_groups_list_size_19 * 2\n\
    \        val paren_groups_list_size_21 = paren_groups_list_size_20 * 2\n     \
    \   val paren_groups_list_size_22 = paren_groups_list_size_21 * 2\n        val\
    \ paren_groups_list_size_23 = paren_groups_list_size_22 * 2\n        val paren_groups_list_size_24\
    \ = paren_groups_list_size_23 * 2\n        val paren_groups_list_size_25 = paren_groups_list_size_24\
    \ * 2\n        val paren_groups_list_size_26 = paren_groups_list_size_25 * 2\n\
    \        val paren_groups_list_size_27 = paren_groups_list_size_26 * 2\n     \
    \   val paren_groups_list_size_28 = paren_groups_list_size_27 * 2\n        val\
    \ paren_groups_list_size_", "        val paren_groups = mutable.ListBuffer[String]()\n\
    \        val open_braces = mutable.ListBuffer[String]()\n        val close_braces\
    \ = mutable.ListBuffer[String]()\n        val open_brace_counts = mutable.ListBuffer[Int]()\n\
    \        val close_brace_counts = mutable.ListBuffer[Int]()\n        val paren_group_counts\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_opens = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closes = mutable.ListBuffer[Int]()\n        val paren_group_opens_sum\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_closes_sum = mutable.ListBuffer[Int]()\n\
    \        val paren_group_opens_product = mutable.ListBuffer[Int]()\n        val\
    \ paren_group_closes_product = mutable.ListBuffer[Int]()\n        val paren_group_opens_product_sum\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_closes_product_sum = mutable.ListBuffer[Int]()\n\
    \        val paren_group_opens_product_product = mutable.ListBuffer[Int]()\n \
    \       val paren_group_closes_product_product = mutable.ListBuffer[Int]()\n \
    \       val paren_group_opens_product_product_sum = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closes_product_product_sum = mutable.ListBuffer[Int]()\n\
    \        val paren_group_opens_product_product_product = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closes_product_product_product = mutable.ListBuffer[Int]()\n\
    \        val paren_group_opens_product_product_product_sum = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closes_product_product_product_sum = mutable.ListBuffer[Int]()\n\
    \        val paren_group_opens_product_product_product_product = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closes_product_product_product_product = mutable.ListBuffer[Int]()\n\
    \        val paren_group_opens_product_product_product_product_sum = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closes_product_product_product_product_sum = mutable.ListBuffer[Int]()\n\
    \        val paren_group_opens_product_product_product_product_product = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closes_product_product_product_product_product = mutable.ListBuffer",
  "        val paren_groups = paren_string.split(\"\\\\(\").map(_.trim).toList\n \
    \       val open_paren_groups = paren_groups.filter(_.contains(\"(\"))\n     \
    \   val close_paren_groups = paren_groups.filter(_.contains(\")\"))\n        val\
    \ open_paren_groups_count = open_paren_groups.length\n        val close_paren_groups_count\
    \ = close_paren_groups.length\n        val open_paren_groups_count_not_nested\
    \ = open_paren_groups_count - close_paren_groups_count\n        val close_paren_groups_count_not_nested\
    \ = close_paren_groups_count - open_paren_groups_count\n        val open_paren_groups_count_not_nested_or_zero\
    \ = open_paren_groups_count_not_nested + open_paren_groups_count - close_paren_groups_count_not_nested\n\
    \        val close_paren_groups_count_not_nested_or_zero = close_paren_groups_count_not_nested\
    \ + close_paren_groups_count - open_paren_groups_count_not_nested\n        val\
    \ open_paren_groups_count_not_nested_or_zero_or_zero = open_paren_groups_count_not_nested_or_zero\
    \ + open_paren_groups_count_not_nested + open_paren_groups_count - close_paren_groups_count_not_nested_or_zero\n\
    \        val close_paren_groups_count_not_nested_or_zero_or_zero = close_paren_groups_count_not_nested_or_zero\
    \ + close_paren_groups_count_not_nested + close_paren_groups_count - open_paren_groups_count_not_nested_or_zero\n\
    \        val open_paren_groups_count_not_nested_or_zero_or_zero_or_zero = open_paren_groups_count_not_nested_or_zero_or_zero\
    \ + open_paren_groups_count_not_nested_or_zero + open_paren_groups_count_not_nested\
    \ + open_paren_groups_count - close_paren_groups_count_not_nested_or_zero_or_zero\n\
    \        val close_paren_groups_count_not_nested_or_zero_or_zero_or_zero = close_paren_groups_count_not_nested_or_zero_or_zero\
    \ + close_paren_groups_count_not_nested_or_zero + close_paren_groups_count_not_nested\
    \ + close_paren_groups_count - open_paren_groups_count_not_nested_or_zero_or_zero\n\
    \        val open_paren_groups_count_not_nested_or_zero_or_zero_or_zero_or_zero\
    \ = open_paren_groups_count_not_nested_or_zero_or_zero_or_zero + open_paren_groups_count_not_nested_or_zero_or_zero\
    \ + open_paren_groups_count_not_nested_or_zero + open_paren_groups_count_not_nested\
    \ + open_paren_groups_count - close_paren_groups_count_not_nested_or_zero_or_zero_or_zero\n\
    \        val close_paren_groups_count_not_nested_or_zero_or_zero_or_zero_", " \
    \       val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat3 = paren_groups_flat2.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat4 = paren_groups_flat3.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat5 = paren_groups_flat4.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat6 = paren_groups_flat5.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat7 = paren_groups_flat6.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat8 = paren_groups_flat7.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat9 = paren_groups_flat8.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat10 = paren_groups_flat9.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat11 = paren_groups_flat10.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat12 = paren_groups_flat11.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat13 = paren_groups_flat12.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat14 = paren_groups_flat13.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat15 = paren_groups_flat14.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat16 = paren_groups_flat15.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat17 = paren_groups_flat16.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat18 = paren_groups_flat17.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat19 = paren_groups_flat18.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat20 = paren_groups_flat19.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat21 = paren_groups_flat20.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat22 = paren_groups_flat21.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat23 = paren_groups_flat22.flat",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.distinct\n\
    \        val paren_groups_flat3 = paren_groups_flat2.filter(_ != \"\\\\\")\n \
    \       val paren_groups_flat4 = paren_groups_flat3.filter(_ != \"\\\\\")\n  \
    \      val paren_groups_flat5 = paren_groups_flat4.filter(_ != \"\\\\\")\n   \
    \     val paren_groups_flat6 = paren_groups_flat5.filter(_ != \"\\\\\")\n    \
    \    val paren_groups_flat7 = paren_groups_flat6.filter(_ != \"\\\\\")\n     \
    \   val paren_groups_flat8 = paren_groups_flat7.filter(_ != \"\\\\\")\n      \
    \  val paren_groups_flat9 = paren_groups_flat8.filter(_ != \"\\\\\")\n       \
    \ val paren_groups_flat10 = paren_groups_flat9.filter(_ != \"\\\\\")\n       \
    \ val paren_groups_flat11 = paren_groups_flat10.filter(_ != \"\\\\\")\n      \
    \  val paren_groups_flat12 = paren_groups_flat11.filter(_ != \"\\\\\")\n     \
    \   val paren_groups_flat13 = paren_groups_flat12.filter(_ != \"\\\\\")\n    \
    \    val paren_groups_flat14 = paren_groups_flat13.filter(_ != \"\\\\\")\n   \
    \     val paren_groups_flat15 = paren_groups_flat14.filter(_ != \"\\\\\")\n  \
    \      val paren_groups_flat16 = paren_groups_flat15.filter(_ != \"\\\\\")\n \
    \       val paren_groups_flat17 = paren_groups_flat16.filter(_ != \"\\\\\")\n\
    \        val paren_groups_flat18 = paren_groups_flat17.filter(_ != \"\\\\\")\n\
    \        val paren_groups_flat19 = paren_groups_flat18.filter(_ != \"\\\\\")\n\
    \        val paren_groups_flat20 = paren_groups_flat19.filter(_ != \"\\\\\")\n\
    \        val paren_groups_flat21 = paren_groups_flat20.filter(_ != \"\\\\\")\n\
    \        val paren_groups_flat22 = paren_groups_flat21.filter(_ != \"\\\\\")\n\
    \        val paren_groups_flat23 = paren_groups_flat22.filter(_ != \"\\\\\")\n\
    \        val paren_groups_flat24 = paren_groups_flat23.filter(_ != \"\\\\\")\n\
    \        val paren_groups_flat25 = paren_groups_flat24.filter(_ != \"\\\\\")\n\
    \        val paren_groups_flat26 = paren_groups_flat25.filter(_ != \"\\\\\")\n\
    \        val paren_groups_flat27 = paren_groups_flat26.filter(_ != \"\\\\\")\n\
    \        val paren_groups_flat28", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_group_strings = paren_groups.map(x => x.replace(\"\
    )\", \"\"))\n        val paren_group_strings_sorted = paren_group_strings.sortWith((x,\
    \ y) => x.compareTo(y) == -1)\n        val paren_group_strings_sorted_with_open_braces\
    \ = paren_group_strings_sorted.map(x => x.replace(\"(\", \"{\").replace(\")\"\
    , \"}\"))\n        val paren_group_strings_sorted_with_open_braces_without_spaces\
    \ = paren_group_strings_sorted_with_open_braces.map(x => x.replace(\"{\", \"{\\\
    n\"))\n        val paren_group_strings_sorted_with_open_braces_without_spaces_without_braces\
    \ = paren_group_strings_sorted_with_open_braces_without_spaces.map(x => x.replace(\"\
    }\", \"\\n}\"))\n        val paren_group_strings_sorted_with_open_braces_without_spaces_without_braces_without_spaces\
    \ = paren_group_strings_sorted_with_open_braces_without_spaces_without_braces.map(x\
    \ => x.replace(\"{\\n\", \"\\n\"))\n        val paren_group_strings_sorted_with_open_braces_without_spaces_without_braces_without_spaces_without_braces\
    \ = paren_group_strings_sorted_with_open_braces_without_spaces_without_braces_without_spaces.map(x\
    \ => x.replace(\"\\n}\", \"\\n\"))\n        val paren_group_strings_sorted_with_open_braces_without_spaces_without_braces_without_spaces_without_braces_without_spaces\
    \ = paren_group_strings_sorted_with_open_braces_without_spaces_without_braces_without_spaces_without_braces.map(x\
    \ => x.replace(\"\\n\", \"\\n\"))\n        val paren_group_strings_sorted_with_open_braces_without_spaces_without_braces_without_spaces_without_braces_without_spaces_without_braces\
    \ = paren_group_strings_sorted_with_open_braces_without_spaces_without_braces_without_spaces_without_braces_without_spaces.map(x\
    \ => x.replace(\"\\n}\", \"\\n\"))\n        val paren_group_strings_sorted_with_open_braces_without_spaces_without_braces_without_spaces_without_braces_without_spaces_without_braces_without_spaces\
    \ = paren_group_strings_sorted_with_open_braces_without_spaces_without_braces_without_spaces_without_braces_without_spaces_without_braces.map(x\
    \ => x.replace(\"\\n\", \"\\n\"))\n        val paren_group_strings_sorted_with_open_braces_without_spaces_without_braces_without_spaces_without_braces_without_spaces_without_brace",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.filterNot(_\
    \ == \")\")\n        val paren_groups_flat3 = paren_groups_flat2.filterNot(_ ==\
    \ \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \"\
    \ \")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ == \"\\\
    \\(\")\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"\\\
    \\)\")\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \"\\\
    \\)\")\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \"\\\
    \\)\")\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \"\\\
    \\)\")\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \"\
    \\\\)\")\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(_ ==\
    \ \"\\\\)\")\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat25 = paren_groups_flat24.filter",
  "        val paren_groups = mutable.ListBuffer.empty[String]\n        val paren_group_stack\
    \ = mutable.ListBuffer.empty[String]\n        val paren_group_open = mutable.ListBuffer.empty[String]\n\
    \        val paren_group_closed = mutable.ListBuffer.empty[String]\n        paren_string.foreach\
    \ { char =>\n            if (char == '(') {\n                paren_group_open\
    \ += char\n                paren_group_stack += char\n            } else if (char\
    \ == ')') {\n                paren_group_closed += char\n                paren_group_stack\
    \ += char\n            } else if (char == ' ') {\n                paren_groups\
    \ += paren_group_open\n                paren_groups += paren_group_closed\n  \
    \              paren_group_open = paren_group_closed = paren_group_stack.empty\n\
    \                paren_groups += char\n            } else {\n                paren_groups\
    \ += char\n            }\n        }\n        paren_groups += paren_group_open\n\
    \        paren_groups += paren_group_closed\n        paren_groups", "        val\
    \ paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_trimmed\
    \ = paren_groups_with_spaces.map(x => x.trim())\n        val paren_groups_with_spaces_trimmed_flat\
    \ = paren_groups_with_spaces_trimmed.flatMap(x => x.split(\"\\\\s+\"))\n     \
    \   val paren_groups_with_spaces_trimmed_flat = paren_groups_with_spaces_trimmed.flatMap(x\
    \ => x.split(\"\\\\s+\"))\n        val paren_groups_with_spaces_trimmed_flat =\
    \ paren_groups_with_spaces_trimmed.flatMap(x => x.split(\"\\\\s+\"))\n       \
    \ val paren_groups_with_spaces_trimmed_flat = paren_groups_with_spaces_trimmed.flatMap(x\
    \ => x.split(\"\\\\s+\"))\n        val paren_groups_with_spaces_trimmed_flat =\
    \ paren_groups_with_spaces_trimmed.flatMap(x => x.split(\"\\\\s+\"))\n       \
    \ val paren_groups_with_spaces_trimmed_flat = paren_groups_with_spaces_trimmed.flatMap(x\
    \ => x.split(\"\\\\s+\"))\n        val paren_groups_with_spaces_trimmed_flat =\
    \ paren_groups_with_spaces_trimmed.flatMap(x => x.split(\"\\\\s+\"))\n       \
    \ val paren_groups_with_spaces_trimmed_flat = paren_groups_with_spaces_trimmed.flatMap(x\
    \ => x.split(\"\\\\s+\"))\n        val paren_groups_with_spaces_trimmed_flat =\
    \ paren_groups_with_spaces_trimmed.flatMap(x => x.split(\"\\\\s+\"))\n       \
    \ val paren_groups_with_spaces_trimmed_flat = paren_groups_with_spaces_trimmed.flatMap(x\
    \ => x.split(\"\\\\s+\"))\n        val paren_groups_with_spaces_trimmed_flat =\
    \ paren_groups_with_spaces_trimmed.flatMap(x => x.split(\"\\\\s+\"))\n       \
    \ val paren_groups_with_spaces_trimmed_flat = paren_groups_with_spaces_trimmed.flatMap(x\
    \ => x.split(\"\\\\s+\"))\n        val paren_groups_with_spaces_trimmed_flat =\
    \ paren_groups_with_spaces_trimmed.flatMap(x => x.split(\"\\\\s+\"))\n       \
    \ val paren_groups_with_spaces_trimmed_flat = paren_groups_with_spaces_trimmed.flatMap(x\
    \ => x.split(\"\\\\s+\"))\n        val paren_groups_with_spaces_trimmed_flat =\
    \ paren_groups_with_spaces_", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x => x.replace(\"\
    )\", \" ) \"))\n        val paren_groups_with_spaces_trimmed = paren_groups_with_spaces.map(x\
    \ => x.trim())\n        val paren_groups_with_spaces_trimmed_without_spaces =\
    \ paren_groups_with_spaces_trimmed.map(x => x.replace(\"  \", \" \"))\n      \
    \  val paren_groups_with_spaces_trimmed_without_spaces_without_spaces = paren_groups_with_spaces_trimmed_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_trimmed_without_spaces_without_spaces.map(x => x.replace(\"\
    \  \", \" \"))\n        val paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_trimmed_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat3 = paren_groups_flat2.filter(x\
    \ => x.nonEmpty)\n        paren_groups_flat3.toList", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_size = paren_groups.length\n\
    \        val paren_groups_size_reversed = paren_groups_size.reverse\n        val\
    \ paren_groups_size_reversed_size = paren_groups_size_reversed.length\n      \
    \  val paren_groups_size_reversed_size_reversed = paren_groups_size_reversed_size.reverse\n\
    \        val paren_groups_size_reversed_size_reversed_size = paren_groups_size_reversed_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed = paren_groups_size_reversed_size_reversed_size.reverse\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size = paren_groups_size_reversed_size_reversed_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size.reverse\n    \
    \    val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size.reverse\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_re",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replace(\" \", \"\"))\n       \
    \ val paren_groups_with_spaces_sorted_with_spaces_sorted = paren_groups_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted.map(x => x.replace(\" \"\
    , \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x =>\
    \ x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_open_braces\
    \ = paren_groups.map(x => x.replace(\")\", \"\").replace(\"(\", \"\"))\n     \
    \   val paren_groups_with_open_braces_with_brackets = paren_groups_with_open_braces.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\") + \"[\" + x + \"]\")\n      \
    \  val paren_groups_with_open_braces_with_brackets_with_brackets = paren_groups_with_open_braces_with_brackets.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\") + \"[\" + x + \"]\" + \"[\" +\
    \ x + \"]\")\n        val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets.map(x => x.replace(\"\
    )\", \"\").replace(\"(\", \"\") + \"[\" + x + \"]\" + \"[\" + x + \"]\" + \"[\"\
    \ + x + \"]\")\n        val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\") + \"[\" + x + \"]\" + \"[\" +\
    \ x + \"]\" + \"[\" + x + \"]\" + \"[\" + x + \"]\")\n        val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\") + \"[\" + x + \"]\" + \"[\" +\
    \ x + \"]\" + \"[\" + x + \"]\" + \"[\" + x + \"]\" + \"[\" + x + \"]\")\n   \
    \     val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets\n\
    \        val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_bracket",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_counts\
    \ = paren_groups.map(x => x.split(\"\\\\)\").length)\n        val paren_group_counts_sum\
    \ = paren_group_counts.sum\n        val paren_group_counts_product = paren_group_counts.product\n\
    \        val paren_group_counts_product2 = paren_group_counts_product * paren_group_counts_product\n\
    \        val paren_group_counts_product3 = paren_group_counts_product2 * paren_group_counts_product\n\
    \        val paren_group_counts_product4 = paren_group_counts_product3 * paren_group_counts_product\n\
    \        val paren_group_counts_product5 = paren_group_counts_product4 * paren_group_counts_product\n\
    \        val paren_group_counts_product6 = paren_group_counts_product5 * paren_group_counts_product\n\
    \        val paren_group_counts_product7 = paren_group_counts_product6 * paren_group_counts_product\n\
    \        val paren_group_counts_product8 = paren_group_counts_product7 * paren_group_counts_product\n\
    \        val paren_group_counts_product9 = paren_group_counts_product8 * paren_group_counts_product\n\
    \        val paren_group_counts_product10 = paren_group_counts_product9 * paren_group_counts_product\n\
    \        val paren_group_counts_product11 = paren_group_counts_product10 * paren_group_counts_product\n\
    \        val paren_group_counts_product12 = paren_group_counts_product11 * paren_group_counts_product\n\
    \        val paren_group_counts_product13 = paren_group_counts_product12 * paren_group_counts_product\n\
    \        val paren_group_counts_product14 = paren_group_counts_product13 * paren_group_counts_product\n\
    \        val paren_group_counts_product15 = paren_group_counts_product14 * paren_group_counts_product\n\
    \        val paren_group_counts_product16 = paren_group_counts_product15 * paren_group_counts_product\n\
    \        val paren_group_counts_product17 = paren_group_counts_product16 * paren_group_counts_product\n\
    \        val paren_group_counts_product18 = paren_group_counts_product17 * paren_group_counts_product\n\
    \        val paren_group_counts_product19 = paren_group_counts_product18 * paren_group_counts_product\n\
    \        val paren_group_counts_product20 = paren_group_counts_product19", " \
    \       val paren_groups = paren_string.split(\"\\\\(|\\\\)\")\n        val paren_group_count\
    \ = paren_groups.length\n        val paren_groups_with_open_braces = paren_groups.map(x\
    \ => if (x.contains(\"(\")) \"(\" + x else x)\n        val paren_groups_with_close_braces\
    \ = paren_groups.map(x => if (x.contains(\")\")) x + \")\" else x)\n        val\
    \ paren_groups_with_open_braces_count = paren_groups_with_open_braces.length\n\
    \        val paren_groups_with_close_braces_count = paren_groups_with_close_braces.length\n\
    \        val paren_groups_with_open_braces_not_nested = paren_groups_with_open_braces.filter(x\
    \ => !paren_groups_with_close_braces.contains(x))\n        val paren_groups_with_close_braces_not_nested\
    \ = paren_groups_with_close_braces.filter(x => !paren_groups_with_open_braces.contains(x))\n\
    \        val paren_groups_with_open_braces_not_nested_count = paren_groups_with_open_braces_not_nested.length\n\
    \        val paren_groups_with_close_braces_not_nested_count = paren_groups_with_close_braces_not_nested.length\n\
    \        val paren_groups_with_open_braces_not_nested_not_balanced = paren_groups_with_open_braces_not_nested.filter(x\
    \ => !paren_groups_with_close_braces_not_nested.contains(x))\n        val paren_groups_with_close_braces_not_nested_not_balanced\
    \ = paren_groups_with_close_braces_not_nested.filter(x => !paren_groups_with_open_braces_not_nested.contains(x))\n\
    \        val paren_groups_with_open_braces_not_nested_not_balanced_count = paren_groups_with_open_braces_not_nested_not_balanced.length\n\
    \        val paren_groups_with_close_braces_not_nested_not_balanced_count = paren_groups_with_close_braces_not_nested_not_balanced.length\n\
    \        val paren_groups_with_open_braces_not_nested_not_balanced_not_nested\
    \ = paren_groups_with_open_braces_not_nested_not_balanced.filter(x => !paren_groups_with_close_braces_not_nested_not_balanced.contains(x))\n\
    \        val paren_groups_with_close_braces_not_nested_not_balanced_not_nested\
    \ = paren_groups_with_close_braces_not_nested_not_balanced.filter(x => !paren_groups_with_open_braces_not_nested_not_balanced.contains(x))\n\
    \        val paren_groups_with_open_braces_not_nested_not_", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n\
    \        val paren_groups_flat_reversed = paren_groups_flat.reverse\n        val\
    \ paren_groups_flat_reversed_flat = paren_groups_flat_reversed.flatten\n     \
    \   val paren_groups_flat_reversed_flat_reversed = paren_groups_flat_reversed_flat.reverse\n\
    \        val paren_groups_flat_reversed_flat_reversed_flat = paren_groups_flat_reversed_flat_reversed.flatten\n\
    \        val paren_groups_flat_reversed_flat_reversed_flat_reversed = paren_groups_flat_reversed_flat_reversed_flat.reverse\n\
    \        val paren_groups_flat_reversed_flat_reversed_flat_reversed_flat = paren_groups_flat_reversed_flat_reversed_flat_reversed.flatten\n\
    \        val paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_reversed\
    \ = paren_groups_flat_reversed_flat_reversed_flat_reversed_flat.reverse\n    \
    \    val paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat\
    \ = paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat.reverse\n\
    \        val paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed\
    \ = paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat.reverse\n\
    \        val paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat\
    \ = paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat.reverse\n\
    \        val paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat\
    \ = paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat.reverse\n\
    \        val paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat\
    \ = paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat_reversed_flat.reverse\n\
    \        val paren_groups_flat_reversed_flat_reversed_flat_reversed_flat_re",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replace(\")\", \" ) \"))\n    \
    \    val paren_groups_with_spaces_sorted_with_spaces_trimmed = paren_groups_with_spaces_sorted_with_spaces.map(x\
    \ => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed.sortBy(x => x)\n     \
    \   val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted.map(x => x.replace(\"\
    )\", \" ) \"))\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces.map(x\
    \ => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted.map(x\
    \ => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_", "        val\
    \ paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.filterNot(_\
    \ == \")\")\n        val paren_groups_flat3 = paren_groups_flat2.filterNot(_ ==\
    \ \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \"\
    \ \")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ == \"\"\
    )\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \")\")\n \
    \       val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \"(\")\n  \
    \      val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \" \")\n   \
    \     val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \"\")\n    \
    \    val paren_groups_flat11 = paren_groups_flat10.filterNot(_ == \"(\")\n   \
    \     val paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \")\")\n  \
    \      val paren_groups_flat13 = paren_groups_flat12.filterNot(_ == \"(\")\n \
    \       val paren_groups_flat14 = paren_groups_flat13.filterNot(_ == \" \")\n\
    \        val paren_groups_flat15 = paren_groups_flat14.filterNot(_ == \"\")\n\
    \        val paren_groups_flat16 = paren_groups_flat15.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat17 = paren_groups_flat16.filterNot(_ == \")\")\n\
    \        val paren_groups_flat18 = paren_groups_flat17.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat19 = paren_groups_flat18.filterNot(_ == \" \")\n\
    \        val paren_groups_flat20 = paren_groups_flat19.filterNot(_ == \"\")\n\
    \        val paren_groups_flat21 = paren_groups_flat20.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat22 = paren_groups_flat21.filterNot(_ == \")\")\n\
    \        val paren_groups_flat23 = paren_groups_flat22.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat24 = paren_groups_flat23.filterNot(_ == \" \")\n\
    \        val paren_groups_flat25 = paren_groups_flat24.filterNot(_ == \"\")\n\
    \        val paren", "        val paren_groups = paren_string.split(\"\\\\(\"\
    )\n        val paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2\
    \ = paren_groups_flat.filterNot(_ == \")\")\n        val paren_groups_flat3 =\
    \ paren_groups_flat2.filterNot(_ == \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_\
    \ == \" \")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ ==\
    \ \"\\\\\")\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(_ ==\
    \ \"(\")\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \"\
    )\")\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \" \"\
    )\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \"\\\\\"\
    )\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat11 = paren_groups_flat10.filterNot(_ == \")\")\n\
    \        val paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \" \")\n\
    \        val paren_groups_flat13 = paren_groups_flat12.filterNot(_ == \"\\\\\"\
    )\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_ == \"(\"\
    )\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_ == \")\"\
    )\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_ == \" \"\
    )\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_ == \"\\\\\
    \")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_ == \"(\"\
    )\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_ == \")\"\
    )\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_ == \" \"\
    )\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_ == \"\\\\\
    \")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_ == \"(\"\
    )\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_ == \")\"\
    )\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_ == \" \"\
    )\n        val paren_groups_flat25 = paren_groups_flat24.filterNot(_ == \"\\\\\
    \")", "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_open_braces\
    \ = paren_groups.map(x => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x\
    \ => x != \"\")\n        val paren_groups_with_open_braces_with_brackets = paren_groups_with_open_braces.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n   \
    \     val paren_groups_with_open_braces_with_brackets_with_brackets = paren_groups_with_open_braces_with_brackets.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n   \
    \     val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets.map(x => x.replace(\"\
    )\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n        val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n   \
    \     val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n   \
    \     val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n   \
    \     val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_bracket",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x.length)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x + \" \")\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces.map(x => x.replaceAll(\" \", \"\
    \"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces.map(x => x.replaceAll(\"\
    \\\\(|\\\\)\", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces.map(x\
    \ => x.replaceAll(\"\\\\(|\\\\)\", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replaceAll(\"\\\\(|\\\\)\", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replaceAll(\"\\\\(|\\\\)\", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replaceAll(\"\\\\(|\\\\)\", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replaceAll(\"\\\\(|\\\\)\", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_space",
  "        val paren_groups = mutable.ListBuffer[String]()\n        val paren_open\
    \ = mutable.ListBuffer[String]()\n        val paren_close = mutable.ListBuffer[String]()\n\
    \        val paren_open_braces = mutable.ListBuffer[String]()\n        val paren_close_braces\
    \ = mutable.ListBuffer[String]()\n        val paren_open_parens = mutable.ListBuffer[String]()\n\
    \        val paren_close_parens = mutable.ListBuffer[String]()\n        val paren_open_paren_braces\
    \ = mutable.ListBuffer[String]()\n        val paren_close_paren_braces = mutable.ListBuffer[String]()\n\
    \        val paren_open_paren_parens = mutable.ListBuffer[String]()\n        val\
    \ paren_close_paren_parens = mutable.ListBuffer[String]()\n        val paren_open_paren_paren_braces\
    \ = mutable.ListBuffer[String]()\n        val paren_close_paren_paren_braces =\
    \ mutable.ListBuffer[String]()\n        val paren_open_paren_paren_parens = mutable.ListBuffer[String]()\n\
    \        val paren_close_paren_paren_parens = mutable.ListBuffer[String]()\n \
    \       val paren_open_paren_paren_paren_braces = mutable.ListBuffer[String]()\n\
    \        val paren_close_paren_paren_paren_braces = mutable.ListBuffer[String]()\n\
    \        val paren_open_paren_paren_paren_parens = mutable.ListBuffer[String]()\n\
    \        val paren_close_paren_paren_paren_parens = mutable.ListBuffer[String]()\n\
    \        val paren_open_paren_paren_paren_paren_braces = mutable.ListBuffer[String]()\n\
    \        val paren_close_paren_paren_paren_paren_braces = mutable.ListBuffer[String]()\n\
    \        val paren_open_paren_paren_paren_paren_parens = mutable.ListBuffer[String]()\n\
    \        val paren_close_paren_paren_paren_paren_parens = mutable.ListBuffer[String]()\n\
    \        val paren_open_paren_paren_paren_paren_paren_braces = mutable.ListBuffer[String]()\n\
    \        val paren_close_paren_paren_paren_paren_paren_braces = mutable.ListBuffer[String]()\n\
    \        val paren_open_paren_paren_paren_paren_", "        val paren_groups =\
    \ paren_string.split(\"\\\\(\").map(_.trim).toList\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replaceAll(\"\\\\s+\", \" \"))\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replaceAll(\"\\\\s+\", \" \"))\n\
    \        val paren_groups_with_spaces_sorted_with_spaces_sorted = paren_groups_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted.map(x => x.replaceAll(\"\
    \\\\s+\", \" \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x =>\
    \ x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replaceAll(\"\\\\s+\", \" \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replaceAll(\"\\\\s+\", \" \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replaceAll(\"\\\\s+\", \" \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_", "        val paren_groups = paren_string.split(\"\\\\\
    (\").map(_.trim).toList\n        val paren_groups_count = paren_groups.length\n\
    \        val paren_groups_remaining = paren_groups_count - 1\n        val paren_groups_remaining_list\
    \ = paren_groups.take(paren_groups_remaining).toList\n        val paren_groups_remaining_strings\
    \ = paren_groups_remaining_list.map(paren_group => paren_group + \"\\\\)\")\n\
    \        val paren_groups_remaining_strings_count = paren_groups_remaining_strings.length\n\
    \        val paren_groups_remaining_strings_remaining = paren_groups_remaining_strings_count\
    \ - 1\n        val paren_groups_remaining_strings_remaining_list = paren_groups_remaining_strings.take(paren_groups_remaining_strings_remaining).toList\n\
    \        val paren_groups_remaining_strings_remaining_strings = paren_groups_remaining_strings_remaining_list.map(paren_group\
    \ => paren_group + \"\\\\)\")\n        val paren_groups_remaining_strings_remaining_strings_count\
    \ = paren_groups_remaining_strings_remaining_strings.length\n        val paren_groups_remaining_strings_remaining_strings_remaining\
    \ = paren_groups_remaining_strings_remaining_strings_count - 1\n        val paren_groups_remaining_strings_remaining_strings_remaining_list\
    \ = paren_groups_remaining_strings_remaining_strings.take(paren_groups_remaining_strings_remaining_strings_remaining).toList\n\
    \        val paren_groups_remaining_strings_remaining_strings_remaining_strings\
    \ = paren_groups_remaining_strings_remaining_strings_remaining_list.map(paren_group\
    \ => paren_group + \"\\\\)\")\n        val paren_groups_remaining_strings_remaining_strings_remaining_strings_count\
    \ = paren_groups_remaining_strings_remaining_strings_remaining_strings.length\n\
    \        val paren_groups_remaining_strings_remaining_strings_remaining_strings_remaining\
    \ = paren_groups_remaining_strings_remaining_strings_remaining_strings_count -\
    \ 1\n        val paren_groups_remaining_strings_remaining_strings_remaining_strings_remaining_list\
    \ = paren_groups_remaining_strings_remaining_strings_remaining_strings.take(paren_groups_remaining_strings_remaining_strings_remaining_strings_remaining).toList\n\
    \        val paren_groups_remaining_strings_remaining_strings_remaining_strings_remaining_strings\
    \ = paren_groups_remaining_strings_remaining_strings_remaining_strings_remaining_list.map(paren_group\
    \ => paren_group + \"\\\\)\")", "        val paren_groups = mutable.ListBuffer[String]()\n\
    \        var paren_open_braces = 0\n        var paren_closed_braces = 0\n    \
    \    var paren_group = \"\"\n        for (c <- paren_string) {\n            if\
    \ (c == '(') {\n                paren_open_braces += 1\n            } else if\
    \ (c == ')') {\n                paren_closed_braces += 1\n            } else if\
    \ (c == ' ') {\n                if (paren_open_braces == paren_closed_braces)\
    \ {\n                    paren_group += c\n                } else {\n        \
    \            paren_groups += paren_group\n                    paren_open_braces\
    \ = 0\n                    paren_closed_braces = 0\n                    paren_group\
    \ = \"\"\n                }\n            } else {\n                paren_group\
    \ += c\n            }\n        }\n        paren_groups += paren_group\n      \
    \  paren_groups", "        val paren_groups = paren_string.split(\"\\\\(\")\n\
    \        val paren_groups_size = paren_groups.length\n        val paren_groups_sizes\
    \ = paren_groups.map(paren_group => paren_group.length)\n        val paren_groups_sizes_sum\
    \ = paren_groups_sizes.sum\n        val paren_groups_sizes_product = paren_groups_sizes.product\n\
    \        val paren_groups_sizes_product_sum = paren_groups_sizes_product.sum\n\
    \        val paren_groups_sizes_product_product = paren_groups_sizes_product.product\n\
    \        val paren_groups_sizes_product_product_sum = paren_groups_sizes_product_product.sum\n\
    \        val paren_groups_sizes_product_product_product = paren_groups_sizes_product_product.product\n\
    \        val paren_groups_sizes_product_product_product_sum = paren_groups_sizes_product_product_product.sum\n\
    \        val paren_groups_sizes_product_product_product_product = paren_groups_sizes_product_product_product.product\n\
    \        val paren_groups_sizes_product_product_product_product_sum = paren_groups_sizes_product_product_product_product.sum\n\
    \        val paren_groups_sizes_product_product_product_product_product = paren_groups_sizes_product_product_product_product.product\n\
    \        val paren_groups_sizes_product_product_product_product_product_sum =\
    \ paren_groups_sizes_product_product_product_product_product.sum\n        val\
    \ paren_groups_sizes_product_product_product_product_product_product = paren_groups_sizes_product_product_product_product_product.product\n\
    \        val paren_groups_sizes_product_product_product_product_product_product_sum\
    \ = paren_groups_sizes_product_product_product_product_product_product.sum\n \
    \       val paren_groups_sizes_product_product_product_product_product_product_product\
    \ = paren_groups_sizes_product_product_product_product_product_product.product\n\
    \        val paren_groups_sizes_product_product_product_product_product_product_product_sum\
    \ = paren_groups_sizes_product_product_product_product_product_product_product.sum\n\
    \        val paren_groups_sizes_product_product_product_product_product_product_product_product\
    \ = paren_groups_sizes_product_product_product_product_product_product_product.product\n\
    \        val paren_groups_sizes_product_product_product_product_product_product_product_product_sum\
    \ = paren_groups_sizes_product_product_product_product_product_product_product_product_product.sum\n\
    \        val paren_groups_sizes_product_product_product_product_product_product_product_product_product\
    \ = paren_groups_sizes_product_product_product_product_product_product_product_product_product_product.product\n\
    \        val paren_groups_sizes_product_product_product_product_product_product_product_product_product_sum\
    \ = paren_groups_sizes_product_product_product_product_product_product_product_product_product_product_product.sum\n\
    \        val paren_groups_", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x => x.replace(\"\
    )\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces = paren_groups_with_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces.map(x => x.replace(\"( \", \" (\"\
    ))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replace(\" \", \"\"))\n       \
    \ val paren_groups_with_spaces_sorted_with_spaces_sorted = paren_groups_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted.map(x => x.replace(\" \"\
    , \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x =>\
    \ x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_",
  "        val paren_groups = mutable.ListBuffer[String]()\n        val paren_open\
    \ = mutable.ListBuffer[String]()\n        val paren_close = mutable.ListBuffer[String]()\n\
    \        val paren_open_index = mutable.ListBuffer[Int]()\n        val paren_close_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_open_brace = mutable.ListBuffer[Int]()\n\
    \        val paren_close_brace = mutable.ListBuffer[Int]()\n        val paren_open_brace_count\
    \ = mutable.ListBuffer[Int]()\n        val paren_close_brace_count = mutable.ListBuffer[Int]()\n\
    \        val paren_open_brace_count_index = mutable.ListBuffer[Int]()\n      \
    \  val paren_close_brace_count_index = mutable.ListBuffer[Int]()\n        val\
    \ paren_open_brace_count_index_count = mutable.ListBuffer[Int]()\n        val\
    \ paren_close_brace_count_index_count = mutable.ListBuffer[Int]()\n        val\
    \ paren_open_brace_count_index_count_index = mutable.ListBuffer[Int]()\n     \
    \   val paren_close_brace_count_index_count_index = mutable.ListBuffer[Int]()\n\
    \        val paren_open_brace_count_index_count_index_count = mutable.ListBuffer[Int]()\n\
    \        val paren_close_brace_count_index_count_index_count = mutable.ListBuffer[Int]()\n\
    \        val paren_open_brace_count_index_count_index_count_index = mutable.ListBuffer[Int]()\n\
    \        val paren_close_brace_count_index_count_index_count_index = mutable.ListBuffer[Int]()\n\
    \        val paren_open_brace_count_index_count_index_count_index_count = mutable.ListBuffer[Int]()\n\
    \        val paren_close_brace_count_index_count_index_count_index_count = mutable.ListBuffer[Int]()\n\
    \        val paren_open_brace_count_index_count_index_count_index_count_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_close_brace_count_index_count_index_count_index_count_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_open_brace_count_index_count_index_count_index_count_index_count\
    \ = mutable.ListBuffer[Int]()\n        val paren_close_brace_count_index_count_index_count_index_count_index_count\
    \ = mutable.ListBuffer[Int]()\n        val paren_open_bra", "        val paren_groups\
    \ = mutable.ListBuffer[String]()\n        var open_braces = 0\n        var close_braces\
    \ = 0\n        var in_paren_group = false\n        var paren_group_open = false\n\
    \        var paren_group_close = false\n        var paren_group_opening_paren\
    \ = false\n        var paren_group_closing_paren = false\n        var paren_group_opening_paren_close\
    \ = false\n        var paren_group_closing_paren_close = false\n        var paren_group_opening_paren_close_close\
    \ = false\n        var paren_group_closing_paren_close_close = false\n       \
    \ var paren_group_opening_paren_close_close_close = false\n        var paren_group_closing_paren_close_close_close\
    \ = false\n        var paren_group_opening_paren_close_close_close_close = false\n\
    \        var paren_group_closing_paren_close_close_close_close = false\n     \
    \   var paren_group_opening_paren_close_close_close_close_close = false\n    \
    \    var paren_group_closing_paren_close_close_close_close_close = false\n   \
    \     var paren_group_opening_paren_close_close_close_close_close_close = false\n\
    \        var paren_group_closing_paren_close_close_close_close_close_close = false\n\
    \        var paren_group_opening_paren_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_closing_paren_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_opening_paren_close_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_closing_paren_close_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_opening_paren_close_close_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_closing_paren_close_close_close_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_opening_paren_close_close_close_close_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_closing_paren_close_close_close_close_close_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_opening_paren_close_close_close_close_close_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_closing_paren_close_close_close_close_close_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_opening_paren_close_close_close_close_close_close_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_closing_paren_close_close_close_close_close_close_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_opening_paren_close_close_close_close_close_close_close_close_close_close_close_close_close_close\
    \ = false\n        var paren_group_closing_paren_close_close_close_close_close_close_close_close_close_close_",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"( \", \" (\"))\n        val\
    \ paren_groups_with_spaces_without_spaces_without_spaces = paren_groups_with_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_count\
    \ = paren_groups.length\n        val paren_group_count_with_open_braces = paren_group_count\
    \ - paren_groups.length\n        val paren_group_count_with_open_braces_not_nested\
    \ = paren_group_count_with_open_braces - paren_groups.length\n        val paren_group_count_with_open_braces_not_nested_but_closed\
    \ = paren_group_count_with_open_braces_not_nested - paren_groups.length\n    \
    \    val paren_group_count_with_open_braces_not_nested_but_closed_but_not_balanced\
    \ = paren_group_count_with_open_braces_not_nested_but_closed - paren_groups.length\n\
    \        val paren_group_count_with_open_braces_not_nested_but_closed_but_not_balanced_but_not_nested\
    \ = paren_group_count_with_open_braces_not_nested_but_closed_but_not_balanced\
    \ - paren_groups.length\n        val paren_group_count_with_open_braces_not_nested_but_closed_but_not_balanced_but_not_nested_but_closed\
    \ = paren_group_count_with_open_braces_not_nested_but_closed_but_not_balanced_but_not_nested\
    \ - paren_groups.length\n        val paren_group_count_with_open_braces_not_nested_but_closed_but_not_balanced_but_not_nested_but_closed_but_not_balanced\
    \ = paren_group_count_with_open_braces_not_nested_but_closed_but_not_balanced_but_not_nested_but_closed\
    \ - paren_groups.length\n        val paren_group_count_with_open_braces_not_nested_but_closed_but_not_balanced_but_not_nested_but_closed_but_not_balanced_but_not_nested\
    \ = paren_group_count_with_open_braces_not_nested_but_closed_but_not_balanced_but_not_nested_but_closed_but_not_balanced\
    \ - paren_groups.length\n        val paren_group_count_with_open_braces_not_nested_but_closed_but_not_balanced_but_not_nested_but_closed_but_not_balanced_but_not_nested_but_closed\
    \ = paren_group_count_with_open_braces_not_nested_but_closed_but_not_balanced_but_not_nested_but_closed_but_not_balanced_but_not_nested\
    \ - paren_groups.length\n        val paren_group_count_with_open_braces_not_nested_but_closed_bu",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_strings\
    \ = paren_groups.map(x => x.replace(\")\", \"\"))\n        paren_group_strings.filter(x\
    \ => !x.isEmpty)", "        val paren_groups = paren_string.split(\"\\\\(\")\n\
    \        val paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2\
    \ = paren_groups_flat.filterNot(_ == \")\")\n        val paren_groups_flat3 =\
    \ paren_groups_flat2.filterNot(_ == \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_\
    \ == \" \")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ ==\
    \ \"\\\\\")\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(_ ==\
    \ \"\\\\(\")\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat25 = paren_groups_flat24.filter",
  "        val paren_groups = mutable.ListBuffer[String]()\n        val open_braces\
    \ = mutable.ListBuffer[String]()\n        val close_braces = mutable.ListBuffer[String]()\n\
    \        val open_brace_count = 0\n        val close_brace_count = 0\n       \
    \ val paren_count = 0\n        val paren_group = \"\"\n        val open_brace_group\
    \ = \"\"\n        val close_brace_group = \"\"\n        val open_brace_group_size\
    \ = 0\n        val close_brace_group_size = 0\n        val open_brace_group_count\
    \ = 0\n        val close_brace_group_count = 0\n        val open_brace_group_paren_count\
    \ = 0\n        val close_brace_group_paren_count = 0\n        val open_brace_group_paren_group\
    \ = \"\"\n        val close_brace_group_paren_group = \"\"\n        val open_brace_group_paren_group_size\
    \ = 0\n        val close_brace_group_paren_group_size = 0\n        val open_brace_group_paren_group_count\
    \ = 0\n        val close_brace_group_paren_group_count = 0\n        val open_brace_group_paren_group_paren_count\
    \ = 0\n        val close_brace_group_paren_group_paren_count = 0\n        val\
    \ open_brace_group_paren_group_paren_group = \"\"\n        val close_brace_group_paren_group_paren_group\
    \ = \"\"\n        val open_brace_group_paren_group_paren_group_size = 0\n    \
    \    val close_brace_group_paren_group_paren_group_size = 0\n        val open_brace_group_paren_group_paren_group_count\
    \ = 0\n        val close_brace_group_paren_group_paren_group_count = 0\n     \
    \   val open_brace_group_paren_group_paren_group_paren_count = 0\n        val\
    \ close_brace_group_paren_group_paren_group_paren_count = 0\n        val open_brace_group_paren_group_paren_group_paren_group\
    \ = \"\"\n        val close_brace_group_paren_group_paren_group_paren_group =\
    \ \"\"\n        val open_brace_group_paren_group_paren_group_paren_group_size\
    \ = 0\n        val close_brace_group_paren_group_paren_group_paren_group_size\
    \ = 0\n        val open_brace_group_paren_group_paren_group_paren_group_count\
    \ = 0\n        val close_brace_group_paren_group_paren_group_paren_group_count\
    \ = 0\n        val open_brace_group_paren_group_paren_group_paren_group_paren_count\
    \ = 0\n        val ", "        val paren_groups = mutable.ListBuffer.empty[String]\n\
    \        val paren_group_size = mutable.ListBuffer.empty[Int]\n        paren_string.split(\"\
    \\\\(\").foreach(x => {\n            val paren_group_size += x.split(\"\\\\)\"\
    ).length\n            paren_groups += x\n        })\n        paren_group_size.foreach(x\
    \ => paren_groups += \"(\" + x.toString + \")\")\n        paren_groups", "   \
    \     val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => \" \" + x + \" \")\n        val paren_groups_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted.map(x => \" \" + x + \"\
    \ \")\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x =>\
    \ x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => \" \" + x + \" \")\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => \" \" + x + \" \")\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => \" \" + x + \" \")\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sor",
  "        val paren_groups = paren_string.split(\"\\\\(|\\\\)\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortWith((x,y) => x.length <=> y.length)\n      \
    \  val paren_groups_with_spaces_sorted_with_open_braces = paren_groups_with_spaces_sorted.map(x\
    \ => x + \"{\")\n        val paren_groups_with_spaces_sorted_with_close_braces\
    \ = paren_groups_with_spaces_sorted_with_open_braces.map(x => x + \"}\")\n   \
    \     val paren_groups_with_spaces_sorted_with_open_braces_with_brackets = paren_groups_with_spaces_sorted_with_open_braces.map(x\
    \ => x + \"[\")\n        val paren_groups_with_spaces_sorted_with_close_braces_with_brackets\
    \ = paren_groups_with_spaces_sorted_with_close_braces.map(x => x + \"]\")\n  \
    \      val paren_groups_with_spaces_sorted_with_open_braces_with_brackets_with_brackets\
    \ = paren_groups_with_spaces_sorted_with_open_braces_with_brackets.map(x => x\
    \ + \"[\" + \"]\")\n        val paren_groups_with_spaces_sorted_with_close_braces_with_brackets_with_brackets\
    \ = paren_groups_with_spaces_sorted_with_close_braces_with_brackets.map(x => x\
    \ + \"]\" + \"]\")\n        val paren_groups_with_spaces_sorted_with_open_braces_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_spaces_sorted_with_open_braces_with_brackets_with_brackets.map(x\
    \ => x + \"[\" + \"]\" + \"]\" + \"]\")\n        val paren_groups_with_spaces_sorted_with_close_braces_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_spaces_sorted_with_close_braces_with_brackets_with_brackets.map(x\
    \ => x + \"]\" + \"]\" + \"]\")\n        val paren_groups_with_spaces_sorted_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_spaces_sorted_with_open_braces_with_brackets_with_brackets_with_brackets.map(x\
    \ => x + \"[\" + \"]\" + \"]\" + \"]\" + \"]", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_group_counts = paren_groups.map(x => x.split(\"\\\\\
    )\").length).sum\n        val paren_group_lengths = paren_groups.map(x => x.split(\"\
    \\\\)\").length).max\n        val paren_group_lengths_array = paren_group_lengths.toArray\n\
    \        val paren_group_lengths_array_sorted = paren_group_lengths_array.sort\n\
    \        val paren_group_lengths_array_sorted_reversed = paren_group_lengths_array_sorted.reverse\n\
    \        val paren_group_lengths_array_sorted_reversed_index = paren_group_lengths_array_sorted.length\
    \ - paren_group_lengths_array_sorted_reversed.length\n        val paren_group_lengths_array_sorted_reversed_index_minus_1\
    \ = paren_group_lengths_array_sorted_reversed_index - 1\n        val paren_group_lengths_array_sorted_reversed_index_minus_2\
    \ = paren_group_lengths_array_sorted_reversed_index_minus_1 - 1\n        val paren_group_lengths_array_sorted_reversed_index_minus_3\
    \ = paren_group_lengths_array_sorted_reversed_index_minus_2 - 1\n        val paren_group_lengths_array_sorted_reversed_index_minus_4\
    \ = paren_group_lengths_array_sorted_reversed_index_minus_3 - 1\n        val paren_group_lengths_array_sorted_reversed_index_minus_5\
    \ = paren_group_lengths_array_sorted_reversed_index_minus_4 - 1\n        val paren_group_lengths_array_sorted_reversed_index_minus_6\
    \ = paren_group_lengths_array_sorted_reversed_index_minus_5 - 1\n        val paren_group_lengths_array_sorted_reversed_index_minus_7\
    \ = paren_group_lengths_array_sorted_reversed_index_minus_6 - 1\n        val paren_group_lengths_array_sorted_reversed_index_minus_8\
    \ = paren_group_lengths_array_sorted_reversed_index_minus_7 - 1\n        val paren_group_lengths_array_sorted_reversed_index_minus_9\
    \ = paren_group_lengths_array_sorted_reversed_index_minus_8 - 1\n        val paren_group_lengths_array_sorted_reversed_index_minus_10\
    \ = paren_group_lengths_array_sorted_reversed_index_minus_9 - 1\n        val paren_group_lengths_array_sorted_reversed_index_minus_11\
    \ = paren_group_lengths_array_sorted_reversed_index_minus_10 - 1\n        val\
    \ paren_group_lengths_array_sorted_reversed_index_minus_12 = paren_group_lengths_array_sorted_reversed_index_minus_11\
    \ - 1\n        val paren_group_lengths_array_sorted_reverse", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n\
    \        val paren_groups_flat2 = paren_groups_flat.filterNot(_ == \")\")\n  \
    \      val paren_groups_flat3 = paren_groups_flat2.filterNot(_ == \"(\")\n   \
    \     val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \" \")\n    \
    \    val paren_groups_flat5 = paren_groups_flat4.filterNot(_ == \"\\\\\")\n  \
    \      val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"\\\\(\")\n\
    \        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \"\\\\)\"\
    )\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \"\\\\)\"\
    )\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \"\\\\)\"\
    )\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \"\\\\\
    )\")\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(_ == \"\\\
    \\)\")\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \"\
    \\\\)\")\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_ ==\
    \ \"\\\\)\")\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat25 = paren_groups_flat24.filter",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_open_braces\
    \ = paren_groups.map(x => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x\
    \ => x != \"\")\n        val paren_groups_with_open_braces_with_brackets = paren_groups_with_open_braces.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n   \
    \     val paren_groups_with_open_braces_with_brackets_with_brackets = paren_groups_with_open_braces_with_brackets.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n   \
    \     val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets.map(x => x.replace(\"\
    )\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n        val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n   \
    \     val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n   \
    \     val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets.map(x\
    \ => x.replace(\")\", \"\").replace(\"(\", \"\")).filter(x => x != \"\")\n   \
    \     val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets_with_bracket",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_count\
    \ = paren_groups.length\n        val paren_group_lengths = paren_groups.map(x\
    \ => x.length)\n        val paren_group_lengths_sum = paren_group_lengths.sum\n\
    \        val paren_group_lengths_product = paren_group_lengths.product\n     \
    \   val paren_group_lengths_product2 = paren_group_lengths_product * paren_group_lengths_product\n\
    \        val paren_group_lengths_product3 = paren_group_lengths_product2 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product4 = paren_group_lengths_product3 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product5 = paren_group_lengths_product4 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product6 = paren_group_lengths_product5 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product7 = paren_group_lengths_product6 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product8 = paren_group_lengths_product7 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product9 = paren_group_lengths_product8 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product10 = paren_group_lengths_product9 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product11 = paren_group_lengths_product10 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product12 = paren_group_lengths_product11 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product13 = paren_group_lengths_product12 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product14 = paren_group_lengths_product13 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product15 = paren_group_lengths_product14 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product16 = paren_group_lengths_product15 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product17 = paren_group_lengths_product16 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product18 = paren_group_lengths_product17 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product19 = paren_group_lengths_product18 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x => x.replace(\"\
    )\", \" ) \"))\n        val paren_groups_with_spaces_sorted = paren_groups_with_spaces.sortBy(x\
    \ => x.length)\n        val paren_groups_with_spaces_sorted_with_spaces = paren_groups_with_spaces_sorted.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces.map(x => x.replace(\")\", \" ))\"\
    )\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\")\", \" ))\")\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\")\", \" ))\")\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\")\", \" ))\")\n        val paren_groups_with_spaces_sorted_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_space", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_count = paren_groups.length\n        val paren_groups_remainder\
    \ = paren_groups_count % paren_groups.length\n        val paren_groups_remainder_count\
    \ = paren_groups_remainder / paren_groups.length\n        val paren_groups_remainder_count_remainder\
    \ = paren_groups_remainder % paren_groups.length\n        val paren_groups_remainder_count_remainder_count\
    \ = paren_groups_remainder_count_remainder / paren_groups.length\n        val\
    \ paren_groups_remainder_count_remainder_count_remainder = paren_groups_remainder_count_remainder\
    \ % paren_groups.length\n        val paren_groups_remainder_count_remainder_count_remainder_count\
    \ = paren_groups_remainder_count_remainder_count_remainder / paren_groups.length\n\
    \        val paren_groups_remainder_count_remainder_count_remainder_count_remainder\
    \ = paren_groups_remainder_count_remainder_count_remainder % paren_groups.length\n\
    \        val paren_groups_remainder_count_remainder_count_remainder_count_remainder_count\
    \ = paren_groups_remainder_count_remainder_count_remainder_count_remainder / paren_groups.length\n\
    \        val paren_groups_remainder_count_remainder_count_remainder_count_remainder_count_remainder\
    \ = paren_groups_remainder_count_remainder_count_remainder_count_remainder_count_remainder\
    \ % paren_groups.length\n        val paren_groups_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count\
    \ = paren_groups_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder\
    \ / paren_groups.length\n        val paren_groups_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder\
    \ = paren_groups_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder\
    \ % paren_groups.length\n        val paren_groups_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count\
    \ = paren_groups_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder\
    \ / paren_groups.length\n        val paren_groups_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count\
    \ = paren_groups_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder\
    \ % paren_groups.length\n        val paren_groups_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count_remainder_",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_counts\
    \ = paren_groups.map(x => x.split(\"\\\\)\").length).toList\n        val paren_group_counts_sum\
    \ = paren_group_counts.sum\n        val paren_group_counts_average = paren_group_counts.sum\
    \ / paren_group_counts_sum\n        val paren_group_counts_min = paren_group_counts.min\n\
    \        val paren_group_counts_max = paren_group_counts.max\n        val paren_group_counts_range\
    \ = paren_group_counts_max - paren_group_counts_min\n        val paren_group_counts_average\
    \ = paren_group_counts_average / paren_group_counts_sum\n        val paren_group_counts_range\
    \ = paren_group_counts_range / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_counts_sum\n        val paren_group_counts_range_average\
    \ = paren_group_counts_range_average / paren_group_count", "        val paren_groups\
    \ = paren_string.split(\"\\\\(|\\\\)\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => \" \" + x + \" \")\n        val paren_groups_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted.map(x => \" \" + x + \"\
    \ \")\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x =>\
    \ x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => \" \" + x + \" \")\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => \" \" + x + \" \")\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => \" \" + x + \" \")\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_",
  "        val paren_groups = mutable.ListBuffer[String]()\n        val paren_open\
    \ = mutable.ListBuffer[String]()\n        val paren_closed = mutable.ListBuffer[String]()\n\
    \        val paren_opened = mutable.ListBuffer[String]()\n        val paren_closed_in_a_row\
    \ = mutable.ListBuffer[String]()\n        val paren_closed_in_a_row_with_paren\
    \ = mutable.ListBuffer[String]()\n        val paren_opened_in_a_row = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_closed = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_closed = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open_closed = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open_open = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open_open_closed = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open_open_open = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open_open_open_closed = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open_open_open_open = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open_open_open_closed = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open_open_open_open = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open_open_open_closed = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open_open_open_open = mutable.ListBuffer[String]()\n\
    \        val paren_opened_in_a_row_with_paren_open_open_open_open_", "       \
    \ val paren_groups = paren_string.split(\"\\\\(\").map(_.trim).toList\n      \
    \  val open_paren_groups = paren_groups.filter(_.contains(\"(\"))\n        val\
    \ close_paren_groups = paren_groups.filter(_.contains(\")\"))\n        val unbalanced_groups\
    \ = open_paren_groups.filter(x => close_paren_groups.contains(x))\n        val\
    \ balanced_groups = open_paren_groups.filter(x => close_paren_groups.contains(x)\
    \ && open_paren_groups.count(_ == x) == 0)\n        val unbalanced_groups_count\
    \ = unbalanced_groups.count()\n        val balanced_groups_count = balanced_groups.count()\n\
    \        val unbalanced_groups_count_plus_one = unbalanced_groups_count + 1\n\
    \        val balanced_groups_count_plus_one = balanced_groups_count + 1\n    \
    \    val unbalanced_groups_count_minus_one = unbalanced_groups_count - 1\n   \
    \     val balanced_groups_count_minus_one = balanced_groups_count - 1\n      \
    \  val unbalanced_groups_count_plus_one_plus_one = unbalanced_groups_count_plus_one\
    \ + 1\n        val balanced_groups_count_plus_one_plus_one = balanced_groups_count_plus_one\
    \ + 1\n        val unbalanced_groups_count_minus_one_minus_one = unbalanced_groups_count_minus_one\
    \ - 1\n        val balanced_groups_count_minus_one_minus_one = balanced_groups_count_minus_one\
    \ - 1\n        val unbalanced_groups_count_plus_one_minus_one = unbalanced_groups_count_plus_one\
    \ - 1\n        val balanced_groups_count_plus_one_minus_one = balanced_groups_count_plus_one\
    \ - 1\n        val unbalanced_groups_count_minus_one_minus_one = unbalanced_groups_count_minus_one\
    \ - 1\n        val balanced_groups_count_minus_one_minus_one = balanced_groups_count_minus_one\
    \ - 1\n        val unbalanced_groups_count_plus_one_minus_one_minus_one = unbalanced_groups_count_plus_one_minus_one\
    \ - 1\n        val balanced_groups_count_plus_one_minus_one_minus_one = balanced_groups_count_plus_one_minus_one\
    \ - 1\n        val unbalanced_groups_count_minus_one_minus_one_minus_one = unbalanced_groups_count_minus_one_minus_one\
    \ - 1\n        val balanced_groups_count_minus_one_minus_one_minus_one = balanced_groups_count_minus_one_minus_one\
    \ - 1\n        val unbalanced_groups_count_plus_one_minus_one_minus_one_minus_one\
    \ = unbalanced_groups_count_plus_one_minus_one_minus_", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"( \", \" (\"))\n        val\
    \ paren_groups_with_spaces_without_spaces_without_spaces = paren_groups_with_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = mutable.ListBuffer[String]()\n        val open_braces\
    \ = mutable.ListBuffer[String]()\n        val close_braces = mutable.ListBuffer[String]()\n\
    \        val paren_open = mutable.ListBuffer[String]()\n        val paren_close\
    \ = mutable.ListBuffer[String]()\n        val paren_group_size = mutable.ListBuffer[Int]()\n\
    \        val paren_group_count = mutable.ListBuffer[Int]()\n        val paren_group_open\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_close = mutable.ListBuffer[Int]()\n\
    \        val paren_group_open_size = mutable.ListBuffer[Int]()\n        val paren_group_close_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_count = mutable.ListBuffer[Int]()\n\
    \        val paren_group_close_count = mutable.ListBuffer[Int]()\n        val\
    \ paren_group_open_count = mutable.ListBuffer[Int]()\n        val paren_group_close_count\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_count_size = mutable.ListBuffer[Int]()\n\
    \        val paren_group_close_count_size = mutable.ListBuffer[Int]()\n      \
    \  val paren_group_open_count_size = mutable.ListBuffer[Int]()\n        val paren_group_close_count_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_count_size = mutable.ListBuffer[Int]()\n\
    \        val paren_group_close_count_size = mutable.ListBuffer[Int]()\n      \
    \  val paren_group_open_count_size = mutable.ListBuffer[Int]()\n        val paren_group_close_count_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_count_size = mutable.ListBuffer[Int]()\n\
    \        val paren_group_close_count_size = mutable.ListBuffer[Int]()\n      \
    \  val paren_group_open_count_size = mutable.ListBuffer[Int]()\n        val paren_group_close_count_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_open_count_size = mutable.ListBuffer[Int]()\n\
    \        val paren_group_close_count_size = mutable.ListBuffer[Int]()\n      \
    \  val paren_group_open_count_size = mutable.ListBuffer[Int]()\n        val paren_group_close_count_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n\
    \        val paren_groups_flat2 = paren_groups_flat.filterNot(_ == \")\")\n  \
    \      val paren_groups_flat3 = paren_groups_flat2.filterNot(_ == \"(\")\n   \
    \     val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \" \")\n    \
    \    val paren_groups_flat5 = paren_groups_flat4.filterNot(_ == \"\\\\\")\n  \
    \      val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"(\")\n   \
    \     val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \")\")\n    \
    \    val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \"\\\\\")\n  \
    \      val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \" \")\n   \
    \     val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \"\\\\\")\n\
    \        val paren_groups_flat11 = paren_groups_flat10.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \")\")\n\
    \        val paren_groups_flat13 = paren_groups_flat12.filterNot(_ == \"\\\\\"\
    )\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_ == \" \"\
    )\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_ == \"\\\\\
    \")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_ == \"(\"\
    )\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_ == \")\"\
    )\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_ == \"\\\\\
    \")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_ == \" \"\
    )\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_ == \"\\\\\
    \")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_ == \"(\"\
    )\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_ == \")\"\
    )\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_ == \"\\\\\
    \")\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_ == \" \"\
    )\n        val paren_groups_flat25 = paren_groups_flat24.filterNot(_ == \"\\\\",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_strings\
    \ = paren_groups.map(x => x.replace(\")\", \"\"))\n        val paren_group_strings_sorted\
    \ = paren_group_strings.sortWith((x, y) => x.compareTo(y))\n        val paren_group_strings_sorted_without_spaces\
    \ = paren_group_strings_sorted.map(x => x.replace(\")\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces.map(x => x.replace(\"(\", \"\"))\n\
    \        val paren_group_strings_sorted_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_spaces.map(x => x.replace(\"\
    {\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"}\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"[\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"]\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"{\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"}\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_set\
    \ = paren_groups.toSet\n        val paren_groups_list_size = paren_groups.size\n\
    \        val paren_groups_list_size_2 = paren_groups_list_size / 2\n        val\
    \ paren_groups_list_size_3 = paren_groups_list_size / 3\n        val paren_groups_list_size_4\
    \ = paren_groups_list_size / 4\n        val paren_groups_list_size_5 = paren_groups_list_size\
    \ / 5\n        val paren_groups_list_size_6 = paren_groups_list_size / 6\n   \
    \     val paren_groups_list_size_7 = paren_groups_list_size / 7\n        val paren_groups_list_size_8\
    \ = paren_groups_list_size / 8\n        val paren_groups_list_size_9 = paren_groups_list_size\
    \ / 9\n        val paren_groups_list_size_10 = paren_groups_list_size / 10\n \
    \       val paren_groups_list_size_11 = paren_groups_list_size / 11\n        val\
    \ paren_groups_list_size_12 = paren_groups_list_size / 12\n        val paren_groups_list_size_13\
    \ = paren_groups_list_size / 13\n        val paren_groups_list_size_14 = paren_groups_list_size\
    \ / 14\n        val paren_groups_list_size_15 = paren_groups_list_size / 15\n\
    \        val paren_groups_list_size_16 = paren_groups_list_size / 16\n       \
    \ val paren_groups_list_size_17 = paren_groups_list_size / 17\n        val paren_groups_list_size_18\
    \ = paren_groups_list_size / 18\n        val paren_groups_list_size_19 = paren_groups_list_size\
    \ / 19\n        val paren_groups_list_size_20 = paren_groups_list_size / 20\n\
    \        val paren_groups_list_size_21 = paren_groups_list_size / 21\n       \
    \ val paren_groups_list_size_22 = paren_groups_list_size / 22\n        val paren_groups_list_size_23\
    \ = paren_groups_list_size / 23\n        val paren_groups_list_size_24 = paren_groups_list_size\
    \ / 24\n        val paren_groups_list_size_25 = paren_groups_list_size / 25\n\
    \        val paren_groups_list_size_26 = paren_groups_list_size / 26\n       \
    \ val paren_groups_list_size_27 = paren_groups_list_size / 27\n        val paren_groups_list_size_28\
    \ = paren_groups_list_size / 28\n        val paren_groups_list_size_29 = paren_groups_list_size\
    \ / 29\n        val paren_groups_list_size_30 = paren_groups_list_size / 30\n\
    \        val paren_groups_list_size_31 = paren_groups_list_size / 31\n       \
    \ val paren_groups_", "        val paren_groups = mutable.ListBuffer[String]()\n\
    \        val paren_open = mutable.ListBuffer[String]()\n        val paren_close\
    \ = mutable.ListBuffer[String]()\n        paren_string.foreach {\n           \
    \ c =>\n                if(c == '(') paren_open += c\n                if(c ==\
    \ ')') paren_close += c\n                if(c == ' ') ()\n                if(c\
    \ == '(') paren_groups += c\n                if(c == ')') paren_groups += c\n\
    \        }\n        paren_groups.toList", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_set = paren_groups.toSet\n        val paren_groups_list_with_duplicates\
    \ = paren_groups.toList.distinct\n        val paren_groups_list_without_duplicates\
    \ = paren_groups_list_with_duplicates.toList\n        val paren_groups_list_without_duplicates_set\
    \ = paren_groups_list_without_duplicates.toSet\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set.size\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_size.toInt\n        val paren_groups_list_without_duplicates_set_size\
    \ = paren_groups_list_without_duplicates_set_", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_count = paren_groups.length\n        val paren_groups_array\
    \ = new Array[String](paren_groups_count)\n        var paren_groups_index = 0\n\
    \        for(paren_group <- paren_groups) {\n            val paren_group_array\
    \ = paren_group.split(\"\\\\)\")\n            val paren_group_array_count = paren_group_array.length\n\
    \            val paren_group_array_array = new Array[String](paren_group_array_count)\n\
    \            var paren_group_array_index = 0\n            for(paren_group_array\
    \ <- paren_group_array) {\n                paren_group_array_array(paren_group_array_index)\
    \ = paren_group_array\n                paren_group_array_index += 1\n        \
    \    }\n            paren_groups_array(paren_groups_index) = paren_group_array_array\n\
    \            paren_groups_index += 1\n        }\n        paren_groups_array",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"( \", \" (\"))\n        val\
    \ paren_groups_with_spaces_without_spaces_without_spaces = paren_groups_with_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\").map(_.trim).filter(_.nonEmpty)\n\
    \        val paren_groups_with_spaces = paren_groups.map(x => x.replace(\")\"\
    , \" ) \"))\n        val paren_groups_with_spaces_without_spaces = paren_groups_with_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces.map(x => x.replace(\"( \", \" (\"\
    ))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2\
    \ = paren_groups_flat.filterNot(_ == \")\")\n        val paren_groups_flat3 =\
    \ paren_groups_flat2.filterNot(_ == \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_\
    \ == \" \")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ ==\
    \ \"\")\n        paren_groups_flat5.toList", "        val paren_groups = mutable.ListBuffer[String]()\n\
    \        val paren_group_regex = \"\"\"(?x)\n            \\((?P<paren_group>[^()]+)\\\
    )\n            |\n            \\((?P<paren_group>[^()]+)\\)\n            |\n \
    \           \\((?P<paren_group>[^()]+)\\)\n            |\n            \\((?P<paren_group>[^()]+)\\\
    )\n        \"\"\".r\n\n        paren_string.split(\"(?x)\").foreach { s =>\n \
    \           val m = paren_group_regex.findFirstMatchIn(s)\n            if (m !=\
    \ null) {\n                paren_groups += m.group(\"paren_group\")\n        \
    \    } else {\n                paren_groups += s\n            }\n        }\n \
    \       paren_groups.toList", "        val paren_groups = mutable.ListBuffer[String]()\n\
    \        val open_braces = mutable.ListBuffer[String]()\n        val close_braces\
    \ = mutable.ListBuffer[String]()\n        val spaces = mutable.ListBuffer[String]()\n\
    \        val paren_open = mutable.ListBuffer[String]()\n        val paren_close\
    \ = mutable.ListBuffer[String]()\n        val paren_space = mutable.ListBuffer[String]()\n\
    \        val paren_open_index = mutable.ListBuffer[Int]()\n        val paren_close_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_space_index = mutable.ListBuffer[Int]()\n\
    \        val paren_open_index = mutable.ListBuffer[Int]()\n        val paren_close_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_space_index = mutable.ListBuffer[Int]()\n\
    \        val paren_open_index = mutable.ListBuffer[Int]()\n        val paren_close_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_space_index = mutable.ListBuffer[Int]()\n\
    \        val paren_open_index = mutable.ListBuffer[Int]()\n        val paren_close_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_space_index = mutable.ListBuffer[Int]()\n\
    \        val paren_open_index = mutable.ListBuffer[Int]()\n        val paren_close_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_space_index = mutable.ListBuffer[Int]()\n\
    \        val paren_open_index = mutable.ListBuffer[Int]()\n        val paren_close_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_space_index = mutable.ListBuffer[Int]()\n\
    \        val paren_open_index = mutable.ListBuffer[Int]()\n        val paren_close_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_space_index = mutable.ListBuffer[Int]()\n\
    \        val paren_open_index = mutable.ListBuffer[Int]()\n        val paren_close_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_space_index = mutable.ListBuffer[Int]()\n\
    \        val paren_open_index = mutable.ListBuffer[Int]()\n        val paren_close_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_space_index = mutable.ListBuffer[Int]()\n\
    \        val paren_open", "        val paren_groups = paren_string.split(\"\\\\\
    (\")\n        val paren_group_strings = paren_groups.map(x => x.replace(\")\"\
    , \"\"))\n        val paren_group_strings_sorted = paren_group_strings.sortWith((x,\
    \ y) => x.compareTo(y) == -1)\n        val paren_group_strings_sorted_without_spaces\
    \ = paren_group_strings_sorted.map(x => x.replace(\"(\", \"\").replace(\")\",\
    \ \"\"))\n        val paren_group_strings_sorted_without_spaces_without_duplicates\
    \ = paren_group_strings_sorted_without_spaces.distinct\n        val paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_duplicates.map(x => x.replace(\"\
    (\", \"\").replace(\")\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces.map(x\
    \ => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces_without_spaces.map(x\
    \ => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        val paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_group_strings_sorted_without_spaces_without_duplicates_without_spaces_without_",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_set\
    \ = paren_groups.toSet\n        val paren_groups_list_with_duplicates = paren_groups.toList.distinct\n\
    \        val paren_groups_list_without_duplicates = paren_groups_list_with_duplicates.toList\n\
    \        val paren_groups_list_without_duplicates_sorted = paren_groups_list_without_duplicates.sortBy(x\
    \ => x)\n        val paren_groups_list_without_duplicates_sorted_with_duplicates_removed\
    \ = paren_groups_list_without_duplicates_sorted.filterNot(x => paren_groups_list_without_duplicates_sorted.contains(x))\n\
    \        val paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_removed.sortBy(x\
    \ => x)\n        val paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted.filterNot(x\
    \ => paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted.contains(x))\n\
    \        val paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed.sortBy(x\
    \ => x)\n        val paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted_with_duplicates_removed\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted_with_duplicates_removed.filterNot(x\
    \ => paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted.contains(x))\n\
    \        val paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted.sortBy(x\
    \ => x)\n        val paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted_with_duplicates_removed\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted_with_duplicates_removed.filterNot(x\
    \ => paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted.contains(x))\n\
    \        val paren_groups_list_without_duplicates_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted_with_duplicates_removed_sorted\
    \ = paren_", "        val paren_groups = paren_string.split(\"\\\\(\")\n     \
    \   val paren_groups_with_spaces = paren_groups.map(x => x.replace(\")\", \" )\
    \ \"))\n        val paren_groups_with_spaces_without_spaces = paren_groups_with_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces.map(x => x.replace(\") \", \" ))\"\
    )\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\") \", \" ))\")\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\") \", \" ))\")\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\") \", \" ))\")\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.", "        val paren_groups = paren_string.split(\"\\\\(\")\n        val\
    \ paren_groups_with_spaces = paren_groups.map(x => x.replace(\")\", \" ) \"))\n\
    \        val paren_groups_with_spaces_without_spaces = paren_groups_with_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces.map(x => x.replace(\"( \", \" (\"\
    ))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = mutable.ListBuffer[String]()\n        val paren_open\
    \ = mutable.ListBuffer[String]()\n        val paren_close = mutable.ListBuffer[String]()\n\
    \        paren_string.foreach { c =>\n            c match {\n                case\
    \ '(' -> paren_open += c\n                case ')' -> paren_close += c\n     \
    \           case _ -> paren_groups += c\n            }\n        }\n        if\
    \ (paren_open.size == paren_close.size) {\n            paren_groups\n        }\
    \ else {\n            paren_groups.toList\n        }", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_count = paren_groups.length\n\
    \        val paren_groups_count_with_paren = paren_groups_count + 1\n        val\
    \ paren_groups_count_with_paren_without_paren = paren_groups_count_with_paren\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_spaces\
    \ = paren_groups_count_with_paren_without_paren - 1\n        val paren_groups_count_with_paren_without_paren_without_spaces_without_spaces\
    \ = paren_groups_count_with_paren_without_paren_without_spaces - 1\n        val\
    \ paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_paren_without_paren_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_paren_without_paren_without_spaces_without_spaces_without_spaces_without_spaces_without_space",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replace(\" \", \"\"))\n       \
    \ val paren_groups_with_spaces_sorted_with_spaces_sorted = paren_groups_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted.map(x => x.replace(\" \"\
    , \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x =>\
    \ x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_count\
    \ = paren_groups.length\n        val paren_groups_count_with_open_braces = paren_groups_count\
    \ - paren_groups.length\n        val paren_groups_count_with_open_braces_without_spaces\
    \ = paren_groups_count_with_open_braces - 1\n        val paren_groups_count_with_open_braces_without_spaces_without_spaces\
    \ = paren_groups_count_with_open_braces_without_spaces - 1\n        val paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_open_braces_without_spaces_without_spaces - 1\n  \
    \      val paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ - 1\n        val paren_groups_count_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_space",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_count\
    \ = paren_groups_with_spaces.length\n        val paren_groups_with_spaces_count_with_paren\
    \ = paren_groups_with_spaces_count - paren_groups_with_spaces.filter(x => x.contains(\"\
    (\")).size\n        val paren_groups_with_spaces_count_without_paren = paren_groups_with_spaces_count\
    \ - paren_groups_with_spaces.filter(x => x.contains(\")\")).size\n        val\
    \ paren_groups_with_spaces_count_with_paren_and_without_paren = paren_groups_with_spaces_count_with_paren\
    \ + paren_groups_with_spaces_count_without_paren\n        val paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces\
    \ = paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces + 1\n\
    \        val paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren\
    \ = paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren\
    \ + 1\n        val paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren_and_spaces\
    \ = paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren_and_spaces\
    \ + 1\n        val paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren_and_spaces_and_paren\
    \ = paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren_and_spaces_and_paren\
    \ + 1\n        val paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren_and_spaces_and_paren_and_spaces\
    \ = paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren_and_spaces_and_paren_and_spaces\
    \ + 1\n        val paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren_and_spaces_and_paren_and_spaces_and_paren\
    \ = paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren_and_spaces_and_paren_and_spaces_and_paren\
    \ + 1\n        val paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren_and_spaces_and_paren_and_spaces_and_paren_and_spaces\
    \ = paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren_and_spaces_and_paren_and_spaces_and_paren_and_spaces\
    \ + 1\n        val paren_groups_with_spaces_count_with_paren_and_without_paren_and_spaces_and_paren_and_spaces_and_paren_and_spaces_and_paren_and_spaces_and_paren\
    \ = ", "        val paren_groups = paren_string.split(\"\\\\(|\\\\)\")\n     \
    \   val paren_group_count = paren_groups.length\n        val paren_group_lengths\
    \ = paren_groups.map(_.length).toList\n        val paren_group_lengths_sum = paren_group_lengths.sum\n\
    \        val paren_group_lengths_product = paren_group_lengths.product\n     \
    \   val paren_group_lengths_product2 = paren_group_lengths_product * paren_group_lengths_product\n\
    \        val paren_group_lengths_product3 = paren_group_lengths_product2 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product4 = paren_group_lengths_product3 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product5 = paren_group_lengths_product4 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product6 = paren_group_lengths_product5 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product7 = paren_group_lengths_product6 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product8 = paren_group_lengths_product7 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product9 = paren_group_lengths_product8 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product10 = paren_group_lengths_product9 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product11 = paren_group_lengths_product10 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product12 = paren_group_lengths_product11 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product13 = paren_group_lengths_product12 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product14 = paren_group_lengths_product13 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product15 = paren_group_lengths_product14 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product16 = paren_group_lengths_product15 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product17 = paren_group_lengths_product16 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product18 = paren_group_lengths_product17 * paren_group_lengths_product\n\
    \        val paren_group_lengths_product19 = paren_group_lengths_product18 * paren_group_lengths_product\n\
    \        val paren_group_lengths_", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2\
    \ = paren_groups_flat.filterNot(_ == \")\")\n        val paren_groups_flat3 =\
    \ paren_groups_flat2.filterNot(_ == \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_\
    \ == \" \")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ ==\
    \ \"\\\\\")\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(_ ==\
    \ \"\\\\(\")\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat25 = paren_groups_flat24.filter",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.filterNot(_\
    \ == \")\")\n        val paren_groups_flat3 = paren_groups_flat2.filterNot(_ ==\
    \ \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \"\
    \ \")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ == \"\\\
    \\\")\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"\\\
    \\(\")\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \"\\\
    \\)\")\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \"\\\
    \\)\")\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \"\\\
    \\)\")\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \"\
    \\\\)\")\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(_ ==\
    \ \"\\\\)\")\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat25 = paren_groups_flat24.filter",
  "        val paren_groups = paren_string.split(\"\\\\(\").map(_.trim).toList\n \
    \       val open_braces = paren_groups.filter(_.contains(\"{\"))\n        val\
    \ close_braces = paren_groups.filter(_.contains(\"}\"))\n        val open_brace_counts\
    \ = open_braces.map(x => x.count(\"{\") - x.count(\"}\"))\n        val close_brace_counts\
    \ = close_braces.map(x => x.count(\"{\") - x.count(\"}\"))\n        val open_brace_counts_sum\
    \ = open_brace_counts.sum\n        val close_brace_counts_sum = close_brace_counts.sum\n\
    \        val open_brace_counts_diff = open_brace_counts_sum - close_brace_counts_sum\n\
    \        val close_brace_counts_diff = close_brace_counts_sum - open_brace_counts_sum\n\
    \        val open_brace_counts_diff_percent = open_brace_counts_diff / close_brace_counts_sum\
    \ * 100\n        val close_brace_counts_diff_percent = close_brace_counts_diff\
    \ / open_brace_counts_sum * 100\n        val open_brace_counts_diff_percent_percent\
    \ = open_brace_counts_diff_percent / close_brace_counts_diff_percent * 100\n \
    \       val open_brace_counts_diff_percent_percent = open_brace_counts_diff_percent\
    \ / close_brace_counts_diff_percent * 100\n        val open_brace_counts_diff_percent_percent\
    \ = open_brace_counts_diff_percent / close_brace_counts_diff_percent * 100\n \
    \       val open_brace_counts_diff_percent_percent = open_brace_counts_diff_percent\
    \ / close_brace_counts_diff_percent * 100\n        val open_brace_counts_diff_percent_percent\
    \ = open_brace_counts_diff_percent / close_brace_counts_diff_percent * 100\n \
    \       val open_brace_counts_diff_percent_percent = open_brace_counts_diff_percent\
    \ / close_brace_counts_diff_percent * 100\n        val open_brace_counts_diff_percent_percent\
    \ = open_brace_counts_diff_percent / close_brace_counts_diff_percent * 100\n \
    \       val open_brace_counts_diff_percent_percent = open_brace_counts_diff_percent\
    \ / close_brace_counts_diff_percent * 100\n        val open_brace_counts_diff_percent_percent\
    \ = open", "        val paren_groups = paren_string.split(\"\\\\(\")\n       \
    \ val paren_group_counts = paren_groups.map(x => x.split(\"\\\\)\").length).sum\n\
    \        val paren_group_lengths = paren_groups.map(x => x.split(\"\\\\)\").length).max\n\
    \        val paren_group_lengths_plus_one = paren_group_lengths + 1\n        val\
    \ paren_group_lengths_plus_two = paren_group_lengths_plus_one * 2\n        val\
    \ paren_group_lengths_plus_three = paren_group_lengths_plus_two * 3\n        val\
    \ paren_group_lengths_plus_four = paren_group_lengths_plus_three * 4\n       \
    \ val paren_group_lengths_plus_five = paren_group_lengths_plus_four * 5\n    \
    \    val paren_group_lengths_plus_six = paren_group_lengths_plus_five * 6\n  \
    \      val paren_group_lengths_plus_seven = paren_group_lengths_plus_six * 7\n\
    \        val paren_group_lengths_plus_eight = paren_group_lengths_plus_seven *\
    \ 8\n        val paren_group_lengths_plus_nine = paren_group_lengths_plus_eight\
    \ * 9\n        val paren_group_lengths_plus_ten = paren_group_lengths_plus_nine\
    \ * 10\n        val paren_group_lengths_plus_eleven = paren_group_lengths_plus_ten\
    \ * 11\n        val paren_group_lengths_plus_twelve = paren_group_lengths_plus_eleven\
    \ * 12\n        val paren_group_lengths_plus_thirteen = paren_group_lengths_plus_twelve\
    \ * 13\n        val paren_group_lengths_plus_fourteen = paren_group_lengths_plus_thirteen\
    \ * 14\n        val paren_group_lengths_plus_fifteen = paren_group_lengths_plus_fourteen\
    \ * 15\n        val paren_group_lengths_plus_sixteen = paren_group_lengths_plus_fifteen\
    \ * 16\n        val paren_group_lengths_plus_seventeen = paren_group_lengths_plus_sixteen\
    \ * 17\n        val paren_group_lengths_plus_eighteen = paren_group_lengths_plus_seventeen\
    \ * 18\n        val paren_group_lengths_plus_nineteen = paren_group_lengths_plus_eighteen\
    \ * 19\n        val paren_group_lengths_plus_twenty = paren_group_lengths_plus_nineteen\
    \ * 20\n        val paren_group_lengths_plus_twenty_one = paren_group_lengths_plus_twenty\
    \ * ", "        val paren_groups = paren_string.split(\"\\\\(\")\n        val\
    \ paren_groups_with_open_braces = paren_groups.map(x => x.replace(\")\", \"\"\
    ).replace(\"(\", \"\"))\n        val paren_groups_with_closed_braces = paren_groups_with_open_braces.map(x\
    \ => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        val paren_groups_with_open_braces_with_brackets\
    \ = paren_groups_with_open_braces.map(x => x.replace(\"(\", \"[\").replace(\"\
    )\", \"]\"))\n        val paren_groups_with_closed_braces_with_brackets = paren_groups_with_closed_braces.map(x\
    \ => x.replace(\"[\", \"(\").replace(\"]\", \")\"))\n        val paren_groups_with_open_braces_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets.map(x => x.replace(\"[\", \"(\"\
    ).replace(\"]\", \")\"))\n        val paren_groups_with_closed_braces_with_brackets_with_brackets\
    \ = paren_groups_with_closed_braces_with_brackets.map(x => x.replace(\"(\", \"\
    [\").replace(\")\", \"]\"))\n        val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets.map(x => x.replace(\"\
    [\", \"(\").replace(\"]\", \")\"))\n        val paren_groups_with_closed_braces_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_closed_braces_with_brackets_with_brackets.map(x => x.replace(\"\
    (\", \"[\").replace(\")\", \"]\"))\n        val paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_with_brackets_with_brackets_with_brackets.map(x\
    \ => x.replace(\"[\", \"(\").replace(\"]\", \")\"))\n        val paren_groups_with_closed_braces_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_closed_braces_with_brackets_with_brackets_with_brackets.map(x\
    \ => x.replace(\"(\", \"[\").replace(\")\", \"]\"))\n        val paren_groups_with_open_braces_with_brackets_with_brackets_with_b",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"( \", \" (\"))\n        val\
    \ paren_groups_with_spaces_without_spaces_without_spaces = paren_groups_with_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"( \", \" (\"))\n        val\
    \ paren_groups_with_spaces_without_spaces_without_spaces = paren_groups_with_spaces_without_spaces.map(x\
    \ => x.replace(\") \", \" ))\")\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\") \", \" ))\")\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\") \", \" ))\")\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\") \", \" ))\")\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.", "        val paren_groups = mutable.ListBuffer[String]()\n        var\
    \ open_braces = 0\n        var closed_braces = 0\n        var paren_count = 0\n\
    \        var open_parens = 0\n        var close_parens = 0\n        for (c <-\
    \ paren_string) {\n            if (c == '(') {\n                paren_count +=\
    \ 1\n                open_parens += 1\n            } else if (c == ')') {\n  \
    \              paren_count -= 1\n                close_parens += 1\n         \
    \   } else if (c == ' ') {\n                if (paren_count == 0) {\n        \
    \            paren_groups += paren_string.substring(open_braces, close_parens)\n\
    \                    open_braces = close_parens\n                    closed_braces\
    \ = 0\n                    paren_count = 0\n                    open_parens =\
    \ 0\n                    close_parens = 0\n                }\n            } else\
    \ {\n                closed_braces += 1\n            }\n        }\n        if\
    \ (paren_count != 0) {\n            paren_groups += paren_string.substring(open_braces,\
    \ paren_string.length)\n        }\n        paren_groups.toList", "        val\
    \ paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_counts\
    \ = paren_groups.map(paren_group => paren_group.split(\"\\\\)\").size)\n     \
    \   val paren_group_counts_sum = paren_group_counts.sum\n        val paren_group_counts_average\
    \ = paren_group_counts_sum / paren_groups.length\n        val paren_group_counts_minimum\
    \ = paren_group_counts.min\n        val paren_group_counts_maximum = paren_group_counts.max\n\
    \        val paren_group_counts_average = paren_group_counts_sum / paren_groups.length\n\
    \        val paren_group_counts_minimum = paren_group_counts.min\n        val\
    \ paren_group_counts_maximum = paren_group_counts.max\n        val paren_group_counts_average\
    \ = paren_group_counts_sum / paren_groups.length\n        val paren_group_counts_minimum\
    \ = paren_group_counts.min\n        val paren_group_counts_maximum = paren_group_counts.max\n\
    \        val paren_group_counts_average = paren_group_counts_sum / paren_groups.length\n\
    \        val paren_group_counts_minimum = paren_group_counts.min\n        val\
    \ paren_group_counts_maximum = paren_group_counts.max\n        val paren_group_counts_average\
    \ = paren_group_counts_sum / paren_groups.length\n        val paren_group_counts_minimum\
    \ = paren_group_counts.min\n        val paren_group_counts_maximum = paren_group_counts.max\n\
    \        val paren_group_counts_average = paren_group_counts_sum / paren_groups.length\n\
    \        val paren_group_counts_minimum = paren_group_counts.min\n        val\
    \ paren_group_counts_maximum = paren_group_counts.max\n        val paren_group_counts_average\
    \ = paren_group_counts_sum / paren_groups.length\n        val paren_group_counts_minimum\
    \ = paren_group_counts.min\n        val paren_group_counts_maximum = paren_group_counts.max\n\
    \        val paren_group_counts_average = paren_group_counts_sum / paren_groups.length\n\
    \        val paren_group_counts_minimum = paren_group_counts.min\n        val\
    \ paren_group_counts_maximum = paren_group_counts.max\n        val paren_group_counts_average\
    \ = paren_group_counts_sum / paren_groups.length\n        val paren_group_counts_minimum\
    \ = paren_group_counts.min\n        val paren_group_counts_maximum = paren_group_counts.max\n\
    \        ", "        val paren_groups = mutable.ListBuffer[String]()\n       \
    \ val paren_open = mutable.ListBuffer[String]()\n        val paren_closed = mutable.ListBuffer[String]()\n\
    \        paren_string.foreach { c =>\n            c match {\n                case\
    \ '(' -> paren_open += c\n                case ')' -> paren_closed += c\n    \
    \            case _ =>\n            }\n        }\n        paren_open.foreach {\
    \ c =>\n            c match {\n                case ')' =>\n                 \
    \   paren_groups += paren_closed.mkString\n                    paren_closed.clear()\n\
    \                case _ =>\n            }\n        }\n        paren_groups +=\
    \ paren_closed.mkString\n        paren_groups.toList", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x\
    \ => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replace(\" \", \"\"))\n       \
    \ val paren_groups_with_spaces_sorted_with_spaces_sorted = paren_groups_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted.map(x => x.replace(\" \"\
    , \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x =>\
    \ x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.map(x\
    \ => x.replace(\")\", \"\"))\n        val paren_groups_flat3 = paren_groups_flat2.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_flat4 = paren_groups_flat3.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_flat5 = paren_groups_flat4.map(x\
    \ => x.replace(\")\", \"\"))\n        val paren_groups_flat6 = paren_groups_flat5.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_flat7 = paren_groups_flat6.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_flat8 = paren_groups_flat7.map(x\
    \ => x.replace(\")\", \"\"))\n        val paren_groups_flat9 = paren_groups_flat8.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_flat10 = paren_groups_flat9.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_flat11 = paren_groups_flat10.map(x\
    \ => x.replace(\")\", \"\"))\n        val paren_groups_flat12 = paren_groups_flat11.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_flat13 = paren_groups_flat12.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_flat14 = paren_groups_flat13.map(x\
    \ => x.replace(\")\", \"\"))\n        val paren_groups_flat15 = paren_groups_flat14.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_flat16 = paren_groups_flat15.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_flat17 = paren_groups_flat16.map(x\
    \ => x.replace(\")\", \"\"))\n        val paren_groups_flat18 = paren_groups_flat17.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_flat19 = paren_groups_flat18.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_flat20 = paren_groups_flat19.map(x\
    \ => x.replace(\")\", \"\"))\n        val paren_groups_flat21 = paren_groups_flat20.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_flat22 = paren_groups_flat21.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_flat23 = paren_groups_flat22.map(x\
    \ => x.replace(\")\", \"\"))\n        val paren_groups_flat24 = paren_groups_flat23.",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat3 = paren_groups_flat2.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat4 = paren_groups_flat3.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat5 = paren_groups_flat4.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat6 = paren_groups_flat5.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat7 = paren_groups_flat6.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat8 = paren_groups_flat7.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat9 = paren_groups_flat8.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat10 = paren_groups_flat9.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat11 = paren_groups_flat10.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat12 = paren_groups_flat11.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat13 = paren_groups_flat12.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat14 = paren_groups_flat13.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat15 = paren_groups_flat14.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat16 = paren_groups_flat15.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat17 = paren_groups_flat16.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat18 = paren_groups_flat17.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat19 = paren_groups_flat18.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat20 = paren_groups_flat19.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat21 = paren_groups_flat20.map(x\
    \ => x.replaceAll(\"\\\\)\",\"\"))\n        val paren_groups_flat22 = paren_groups_flat21.map(x\
    \ => x.", "        val paren_groups = paren_string.split(\"\\\\(\")\n        val\
    \ paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.filterNot(x\
    \ => x.contains(\"\\\\(\"))\n        val paren_groups_flat3 = paren_groups_flat2.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(x\
    \ => x.contains(\"\\\\", "        val paren_groups = paren_string.split(\"\\\\\
    (\")\n        val paren_groups_count = paren_groups.length\n        val paren_groups_remaining\
    \ = paren_groups_count - 1\n        val paren_groups_remaining_list = mutable.ListBuffer[String]()\n\
    \        val paren_groups_remaining_list_size = paren_groups_remaining\n     \
    \   val paren_groups_remaining_list_index = 0\n        val paren_groups_remaining_list_index_size\
    \ = paren_groups_remaining\n        val paren_groups_remaining_list_index_index\
    \ = 0\n        val paren_groups_remaining_list_index_index_size = paren_groups_remaining\n\
    \        val paren_groups_remaining_list_index_index_index = 0\n        val paren_groups_remaining_list_index_index_index_size\
    \ = paren_groups_remaining\n        val paren_groups_remaining_list_index_index_index_index\
    \ = 0\n        val paren_groups_remaining_list_index_index_index_index_size =\
    \ paren_groups_remaining\n        val paren_groups_remaining_list_index_index_index_index_index\
    \ = 0\n        val paren_groups_remaining_list_index_index_index_index_index_size\
    \ = paren_groups_remaining\n        val paren_groups_remaining_list_index_index_index_index_index_index\
    \ = 0\n        val paren_groups_remaining_list_index_index_index_index_index_index_size\
    \ = paren_groups_remaining\n        val paren_groups_remaining_list_index_index_index_index_index_index_index\
    \ = 0\n        val paren_groups_remaining_list_index_index_index_index_index_index_index_size\
    \ = paren_groups_remaining\n        val paren_groups_remaining_list_index_index_index_index_index_index_index_index\
    \ = 0\n        val paren_groups_remaining_list_index_index_index_index_index_index_index_index_size\
    \ = paren_groups_remaining\n        val paren_groups_remaining_list_index_index_index_index_index_index_index_index_index\
    \ = 0\n        val paren_groups_remaining_list_index_index_index_index_index_index_index_index_index_size\
    \ = paren_groups_remaining\n        val paren_groups_remaining_list_index_index_index_index_index_index_index_index_index\
    \ = 0\n        val paren_groups_remaining_list_index_index_index_index_index_index_index_index_index_size\
    \ = paren_groups_remaining\n        val paren_groups_remaining_list_index_index_index_index_index_index_index_index_index_index\
    \ = 0\n        val paren_groups_remaining_list_index_index_index_index_index_index_index_index_index_index_size\
    \ = paren_groups_remaining\n        val paren_groups_remaining_list_index_index_index_index_index_index_index_index_index_index_index\
    \ = 0\n        val paren_groups_remaining_list_index_index_index_index_index_index_index_index_index_index_index_size\
    \ = paren_groups_remaining\n        val paren_groups_", "        val paren_groups\
    \ = mutable.ListBuffer[String]()\n        var paren_open = false\n        var\
    \ paren_closed = false\n        var paren_group = \"\"\n        for (c <- paren_string)\
    \ {\n            if (c == '(') {\n                paren_open = true\n        \
    \        paren_group += c\n            } else if (c == ')') {\n              \
    \  paren_closed = true\n                paren_group += c\n            } else if\
    \ (c == ' ') {\n                if (paren_open && paren_closed) {\n          \
    \          paren_groups += paren_group\n                    paren_group = \"\"\
    \n                }\n            } else {\n                paren_group += c\n\
    \            }\n        }\n        if (paren_open && paren_closed) {\n       \
    \     paren_groups += paren_group\n        }\n        paren_groups.toList", " \
    \       val paren_groups = mutable.ListBuffer[String]()\n        val paren_group_stack\
    \ = mutable.ListBuffer[String]()\n        val paren_group_open = mutable.ListBuffer[String]()\n\
    \        val paren_group_closed = mutable.ListBuffer[String]()\n        val paren_group_open_index\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_closed_index = mutable.ListBuffer[Int]()\n\
    \        val paren_group_open_index = paren_group_open_index.init\n        val\
    \ paren_group_closed_index = paren_group_closed_index.init\n        val paren_group_open\
    \ = paren_group_open.init\n        val paren_group_closed = paren_group_closed.init\n\
    \        val paren_group_open_index = paren_group_open_index.init\n        val\
    \ paren_group_closed_index = paren_group_closed_index.init\n        val paren_group_open\
    \ = paren_group_open.init\n        val paren_group_closed = paren_group_closed.init\n\
    \        val paren_group_open_index = paren_group_open_index.init\n        val\
    \ paren_group_closed_index = paren_group_closed_index.init\n        val paren_group_open\
    \ = paren_group_open.init\n        val paren_group_closed = paren_group_closed.init\n\
    \        val paren_group_open_index = paren_group_open_index.init\n        val\
    \ paren_group_closed_index = paren_group_closed_index.init\n        val paren_group_open\
    \ = paren_group_open.init\n        val paren_group_closed = paren_group_closed.init\n\
    \        val paren_group_open_index = paren_group_open_index.init\n        val\
    \ paren_group_closed_index = paren_group_closed_index.init\n        val paren_group_open\
    \ = paren_group_open.init\n        val paren_group_closed = paren_group_closed.init\n\
    \        val paren_group_open_index = paren_group_open_index.init\n        val\
    \ paren_group_closed_index = paren_group_closed_index.init\n        val paren_group_open\
    \ = paren_group_open.init\n        val paren_group_closed = paren_group_closed.init\n\
    \        val paren_group_open_index = paren_group_open_index.init\n        val\
    \ paren_group_closed_index = paren_group_closed_index.init\n        val paren_group_open\
    \ = paren_group_open.init\n        val paren_group_closed = paren_group_closed.init\n\
    \        val paren_group_open_index = paren_group_open_index.init\n        val ",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_size\
    \ = paren_groups.length\n        val paren_groups_size_list = paren_groups_size.map(x\
    \ => List(x))\n        val paren_groups_size_list2 = paren_groups_size.map(x =>\
    \ List(x))\n        val paren_groups_size_list3 = paren_groups_size.map(x => List(x))\n\
    \        val paren_groups_size_list4 = paren_groups_size.map(x => List(x))\n \
    \       val paren_groups_size_list5 = paren_groups_size.map(x => List(x))\n  \
    \      val paren_groups_size_list6 = paren_groups_size.map(x => List(x))\n   \
    \     val paren_groups_size_list7 = paren_groups_size.map(x => List(x))\n    \
    \    val paren_groups_size_list8 = paren_groups_size.map(x => List(x))\n     \
    \   val paren_groups_size_list9 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list10 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list11 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list12 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list13 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list14 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list15 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list16 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list17 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list18 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list19 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list20 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list21 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list22 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list23 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list24 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list25 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size_list26 = paren_groups_size.map(x => List(x))\n      \
    \  val paren_groups_size", "        val paren_groups = paren_string.split(\"\\\
    \\(\")\n        val paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2\
    \ = paren_groups_flat.filterNot(_ == \")\")\n        val paren_groups_flat3 =\
    \ paren_groups_flat2.filterNot(_ == \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_\
    \ == \")\")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ ==\
    \ \"(\")\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"\
    )\")\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \"(\"\
    )\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \")\")\n\
    \        val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \"(\")\n \
    \       val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \")\")\n \
    \       val paren_groups_flat11 = paren_groups_flat10.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \")\")\n\
    \        val paren_groups_flat13 = paren_groups_flat12.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat14 = paren_groups_flat13.filterNot(_ == \")\")\n\
    \        val paren_groups_flat15 = paren_groups_flat14.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat16 = paren_groups_flat15.filterNot(_ == \")\")\n\
    \        val paren_groups_flat17 = paren_groups_flat16.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat18 = paren_groups_flat17.filterNot(_ == \")\")\n\
    \        val paren_groups_flat19 = paren_groups_flat18.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat20 = paren_groups_flat19.filterNot(_ == \")\")\n\
    \        val paren_groups_flat21 = paren_groups_flat20.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat22 = paren_groups_flat21.filterNot(_ == \")\")\n\
    \        val paren_groups_flat23 = paren_groups_flat22.filterNot(_ == \"(\")\n\
    \        val paren_groups_flat24 = paren_groups_flat23.filterNot(_ == \")\")\n\
    \        val paren_groups_flat25 = paren_groups_flat24.filter", "        val paren_groups\
    \ = mutable.ListBuffer[String]()\n        val paren_group_stack = mutable.ListBuffer[String]()\n\
    \        val paren_group_open = mutable.ListBuffer[String]()\n        val paren_group_closed\
    \ = mutable.ListBuffer[String]()\n        val paren_group_open_index = mutable.ListBuffer[Int]()\n\
    \        val paren_group_closed_index = mutable.ListBuffer[Int]()\n        val\
    \ paren_group_open_index = paren_group_open_index.init\n        val paren_group_closed_index\
    \ = paren_group_closed_index.init\n        val paren_group_open = paren_group_open.init\n\
    \        val paren_group_closed = paren_group_closed.init\n        val paren_group_open_index\
    \ = paren_group_open_index.init\n        val paren_group_closed_index = paren_group_closed_index.init\n\
    \        val paren_group_open = paren_group_open.init\n        val paren_group_closed\
    \ = paren_group_closed.init\n        val paren_group_open_index = paren_group_open_index.init\n\
    \        val paren_group_closed_index = paren_group_closed_index.init\n      \
    \  val paren_group_open = paren_group_open.init\n        val paren_group_closed\
    \ = paren_group_closed.init\n        val paren_group_open_index = paren_group_open_index.init\n\
    \        val paren_group_closed_index = paren_group_closed_index.init\n      \
    \  val paren_group_open = paren_group_open.init\n        val paren_group_closed\
    \ = paren_group_closed.init\n        val paren_group_open_index = paren_group_open_index.init\n\
    \        val paren_group_closed_index = paren_group_closed_index.init\n      \
    \  val paren_group_open = paren_group_open.init\n        val paren_group_closed\
    \ = paren_group_closed.init\n        val paren_group_open_index = paren_group_open_index.init\n\
    \        val paren_group_closed_index = paren_group_closed_index.init\n      \
    \  val paren_group_open = paren_group_open.init\n        val paren_group_closed\
    \ = paren_group_closed.init\n        val paren_group_open_index = paren_group_open_index.init\n\
    \        val paren_group_closed_index = paren_group_closed_index.init\n      \
    \  val paren_group_open = paren_group_open.init\n        val paren_group_closed\
    \ = paren_group_closed.init\n        val paren_group_open_index = paren_group_open_index.init\n\
    \        val ", "        val paren_groups = paren_string.split(\"\\\\(\")\n  \
    \      val paren_group_counts = paren_groups.map(x => x.count(\"\\\\(\") + x.count(\"\
    \\\\)\"))\n        val paren_group_lengths = paren_group_counts.map(x => x.toDouble)\n\
    \        val paren_group_lengths_sum = paren_group_lengths.sum\n        val paren_group_lengths_avg\
    \ = paren_group_lengths.sum / paren_group_lengths_sum\n        val paren_group_lengths_min\
    \ = paren_group_lengths.min\n        val paren_group_lengths_max = paren_group_lengths.max\n\
    \        val paren_group_lengths_range = paren_group_lengths_max - paren_group_lengths_min\n\
    \        val paren_group_lengths_range_avg = paren_group_lengths_range / paren_group_lengths_sum\n\
    \        val paren_group_lengths_range_min = paren_group_lengths_range / paren_group_lengths_avg\n\
    \        val paren_group_lengths_range_max = paren_group_lengths_range / paren_group_lengths_min\n\
    \        val paren_group_lengths_range_std = math.sqrt(paren_group_lengths_range_avg)\n\
    \        val paren_group_lengths_range_std_min = paren_group_lengths_range_std\
    \ * paren_group_lengths_range_min\n        val paren_group_lengths_range_std_max\
    \ = paren_group_lengths_range_std * paren_group_lengths_range_max\n        val\
    \ paren_group_lengths_range_std_avg = paren_group_lengths_range_std * paren_group_lengths_range_avg\n\
    \        val paren_group_lengths_range_std_min = paren_group_lengths_range_std\
    \ * paren_group_lengths_range_min\n        val paren_group_lengths_range_std_max\
    \ = paren_group_lengths_range_std * paren_group_lengths_range_max\n        val\
    \ paren_group_lengths_range_std_avg = paren_group_lengths_range_std * paren_group_lengths_range_avg\n\
    \        val paren_group_lengths_range_std_avg = paren_group_lengths_range_std\
    \ * paren_group_lengths_range_avg\n        val paren_group_lengths_range_std_avg\
    \ = paren_group_lengths_range_std * paren_group_lengths_range_avg\n        val\
    \ paren_group_lengths_range_std_avg = paren_group_lengths_range_std * paren_group_lengths_range_avg\n\
    \        val paren_group_lengths_range_std_avg = paren_group_lengths_range_std\
    \ * paren_group_lengths_range_avg\n        val paren_group_lengths_range_std_",
  "        val paren_groups = mutable.ListBuffer[String]()\n        val open_braces\
    \ = mutable.ListBuffer[String]()\n        val close_braces = mutable.ListBuffer[String]()\n\
    \        paren_string.foreach { c =>\n            c match {\n                case\
    \ '(' -> open_braces += c\n                case ')' -> close_braces += c\n   \
    \             case _ -> paren_groups += c\n            }\n        }\n        if\
    \ (open_braces.size == 0 && close_braces.size == 0) {\n            paren_groups\n\
    \        } else {\n            val open_brace_count = open_braces.size\n     \
    \       val close_brace_count = close_braces.size\n            val open_brace_groups\
    \ = open_braces.toList\n            val close_brace_groups = close_braces.toList\n\
    \            val open_brace_group_count = open_brace_groups.size\n           \
    \ val close_brace_group_count = close_brace_groups.size\n            val open_brace_group_sum\
    \ = 0\n            val close_brace_group_sum = 0\n            val open_brace_group_sums\
    \ = mutable.ListBuffer[Int]()\n            val close_brace_group_sums = mutable.ListBuffer[Int]()\n\
    \            val open_brace_group_sums_count = mutable.ListBuffer[Int]()\n   \
    \         val close_brace_group_sums_count = mutable.ListBuffer[Int]()\n     \
    \       val open_brace_group_sums_sum = mutable.ListBuffer[Int]()\n          \
    \  val close_brace_group_sums_sum = mutable.ListBuffer[Int]()\n            val\
    \ open_brace_group_sums_sums = mutable.ListBuffer[Int]()\n            val close_brace_group_sums_sums\
    \ = mutable.ListBuffer[Int]()\n            val open_brace_group_sums_sums_count\
    \ = mutable.ListBuffer[Int]()\n            val close_brace_group_sums_sums_count\
    \ = mutable.ListBuffer[Int]()\n            val open_brace_group_sums_sums_sum\
    \ = mutable.ListBuffer[Int]()\n            val close_brace_group_sums_sums_sum\
    \ = mutable.ListBuffer[Int]()\n            val open_brace_group_sums_sums_sums\
    \ = mutable.ListBuffer[Int]()\n            val close_brace_group_sums_sums_sums\
    \ = mutable.ListBuffer[Int]()\n            val open_brace_group_sums_sums_sums_count\
    \ = mut", "        val paren_groups = mutable.ListBuffer[String]()\n        val\
    \ open_braces = mutable.ListBuffer[String]()\n        val close_braces = mutable.ListBuffer[String]()\n\
    \        paren_string.foreach {\n            c =>\n            if (c == '(') {\n\
    \                open_braces += c\n            } else if (c == ')') {\n      \
    \          close_braces += c\n            } else if (c == ' ') {\n           \
    \     paren_groups += c\n            } else {\n                paren_groups +=\
    \ c\n            }\n        }\n        val open_braces_count = open_braces.size\n\
    \        val close_braces_count = close_braces.size\n        if (open_braces_count\
    \ != close_braces_count) {\n            throw new RuntimeException(\"Invalid paren\
    \ groups\")\n        }\n        val open_braces_index = open_braces.indexWhere(_\
    \ == '(')\n        val close_braces_index = close_braces.indexWhere(_ == ')')\n\
    \        val open_braces_count = open_braces_index - open_braces_count + 1\n \
    \       val close_braces_count = close_braces_index - close_braces_count + 1\n\
    \        val open_braces_index = open_braces.indexWhere(_ == '(')\n        val\
    \ close_braces_index = close_braces.indexWhere(_ == ')')\n        val open_braces_count\
    \ = open_braces_index - open_braces_count + 1\n        val close_braces_count\
    \ = close_braces_index - close_braces_count + 1\n        val open_braces_index\
    \ = open_braces.indexWhere(_ == '(')\n        val close_braces_index = close_braces.indexWhere(_\
    \ == ')')\n        val open_braces_count = open_braces_index - open_braces_count\
    \ + 1\n        val close_braces_count = close_braces_index - close_braces_count\
    \ + 1\n        val open_braces_index = open_braces.indexWhere(_ == '(')\n    \
    \    val close_braces_index = close_braces.indexWhere(_ == ')')\n        val open_braces_count\
    \ = open_braces_index - open_braces_count + 1\n        val close_braces_count\
    \ = close_braces_index - close_braces_count + 1\n        val open_braces_index\
    \ = open_braces.indexWhere(_ == '(')\n        val close_braces_index = close_braces.indexWhere(_\
    \ == ')')\n        val open_braces_count = open_braces_index - open_brace", " \
    \       val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_open_braces\
    \ = paren_groups.map(x => x.replace(\")\", \"\").replace(\"(\", \"\"))\n     \
    \   val paren_groups_with_closed_braces = paren_groups_with_open_braces.map(x\
    \ => x.replace(\"(\", \"\"))\n        val paren_groups_with_open_braces_and_closed_braces\
    \ = paren_groups_with_open_braces.zip(paren_groups_with_closed_braces)\n     \
    \   val paren_groups_with_open_braces_and_closed_braces_with_balanced_groups =\
    \ paren_groups_with_open_braces_and_closed_braces.filter(x => x._1.length == x._2.length)\n\
    \        val paren_groups_with_open_braces_and_closed_braces_with_balanced_groups_with_brackets\
    \ = paren_groups_with_open_braces_and_closed_braces_with_balanced_groups.map(x\
    \ => (x._1, x._2.replace(\")\", \"\").replace(\"(\", \"\")))\n        val paren_groups_with_open_braces_and_closed_braces_with_balanced_groups_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_and_closed_braces_with_balanced_groups_with_brackets.map(x\
    \ => (x._1, x._2.replace(\")\", \"\").replace(\"(\", \"\").replace(\")\", \"\"\
    )))\n        val paren_groups_with_open_braces_and_closed_braces_with_balanced_groups_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_and_closed_braces_with_balanced_groups_with_brackets_with_brackets.map(x\
    \ => (x._1, x._2.replace(\")\", \"\").replace(\"(\", \"\").replace(\")\", \"\"\
    ).replace(\")\", \"\")))\n        val paren_groups_with_open_braces_and_closed_braces_with_balanced_groups_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_and_closed_braces_with_balanced_groups_with_brackets_with_brackets_with_brackets.map(x\
    \ => (x._1, x._2.replace(\")\", \"\").replace(\"(\", \"\").replace(\")\", \"\"\
    ).replace(\")\", \"\").replace(\")\", \"\")))\n        val paren_groups_with_open_braces_and_closed_braces_with_balanced_groups_with_brackets_with_brackets_with_brackets_with_brackets_with_brackets\
    \ = paren_groups_with_open_braces_and_closed_brace", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"( \", \" (\"))\n        val\
    \ paren_groups_with_spaces_without_spaces_without_spaces = paren_groups_with_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_strings\
    \ = paren_groups.map(x => x.replace(\")\", \"\"))\n        paren_group_strings.filter(x\
    \ => !x.isEmpty)", "        val paren_groups = paren_string.split(\"\\\\(\")\n\
    \        val paren_groups_with_spaces = paren_groups.map(x => x.trim).filter(x\
    \ => !x.isEmpty)\n        val paren_groups_with_spaces_sorted = paren_groups_with_spaces.sortWith((x,\
    \ y) => x.length <= y.length)\n        val paren_groups_with_spaces_sorted_with_open_braces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replace(\")\", \"\").replace(\"\
    (\", \"\"))\n        val paren_groups_with_spaces_sorted_with_open_braces_without_spaces\
    \ = paren_groups_with_spaces_sorted_with_open_braces.map(x => x.replace(\"(\"\
    , \"\").replace(\")\", \"\"))\n        val paren_groups_with_spaces_sorted_with_open_braces_without_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_open_braces_without_spaces.sortWith((x,\
    \ y) => x.length <= y.length)\n        val paren_groups_with_spaces_sorted_with_open_braces_without_spaces_sorted_with_open_braces\
    \ = paren_groups_with_spaces_sorted_with_open_braces_without_spaces_sorted.map(x\
    \ => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        val paren_groups_with_spaces_sorted_with_open_braces_without_spaces_sorted_with_open_braces_sorted\
    \ = paren_groups_with_spaces_sorted_with_open_braces_without_spaces_sorted_with_open_braces.sortWith((x,\
    \ y) => x.length <= y.length)\n        val paren_groups_with_spaces_sorted_with_open_braces_without_spaces_sorted_with_open_braces_sorted_with_open_braces\
    \ = paren_groups_with_spaces_sorted_with_open_braces_without_spaces_sorted_with_open_braces_sorted.map(x\
    \ => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        val paren_groups_with_spaces_sorted_with_open_braces_without_spaces_sorted_with_open_braces_sorted_with_open_braces_sorted\
    \ = paren_groups_with_spaces_sorted_with_open_braces_without_spaces_sorted_with_open_braces_sorted_with_open_braces.sortWith((x,\
    \ y) => x.length <= y.length)\n        val paren_groups_with_spaces_sorted_with_open_braces_without_spaces_sorted_with_open_braces_sorted_with_open_braces_sorted_with_open_braces\
    \ = paren_groups_with_spaces_sorted_with_open_braces_without_spaces_sorted_with_open_braces_sorted_with_open_braces_sorted.map(x\
    \ => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        val paren_", "    \
    \    val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_strings\
    \ = paren_groups.map(x => x.replace(\")\", \"\"))\n        val paren_group_strings_sorted\
    \ = paren_group_strings.sortWith((x, y) => x.compareTo(y) == -1)\n        val\
    \ paren_group_strings_sorted_strings = paren_group_strings_sorted.map(x => x.replace(\"\
    (\", \"\").replace(\")\", \"\"))\n        paren_group_strings_sorted_strings.toList",
  "        val paren_groups = mutable.ListBuffer[String]()\n        val open_braces\
    \ = mutable.ListBuffer[String]()\n        val close_braces = mutable.ListBuffer[String]()\n\
    \        val spaces = mutable.ListBuffer[String]()\n        val paren_group_size\
    \ = mutable.ListBuffer[Int]()\n        val open_brace_size = mutable.ListBuffer[Int]()\n\
    \        val close_brace_size = mutable.ListBuffer[Int]()\n        val space_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_group_size_limit = mutable.ListBuffer[Int]()\n\
    \        val open_brace_size_limit = mutable.ListBuffer[Int]()\n        val close_brace_size_limit\
    \ = mutable.ListBuffer[Int]()\n        val space_size_limit = mutable.ListBuffer[Int]()\n\
    \        val paren_group_size_limit_limit = mutable.ListBuffer[Int]()\n      \
    \  val open_brace_size_limit_limit = mutable.ListBuffer[Int]()\n        val close_brace_size_limit_limit\
    \ = mutable.ListBuffer[Int]()\n        val space_size_limit_limit = mutable.ListBuffer[Int]()\n\
    \        val paren_group_size_limit_limit_limit = mutable.ListBuffer[Int]()\n\
    \        val open_brace_size_limit_limit_limit = mutable.ListBuffer[Int]()\n \
    \       val close_brace_size_limit_limit_limit = mutable.ListBuffer[Int]()\n \
    \       val space_size_limit_limit_limit = mutable.ListBuffer[Int]()\n       \
    \ val paren_group_size_limit_limit_limit_limit = mutable.ListBuffer[Int]()\n \
    \       val open_brace_size_limit_limit_limit = mutable.ListBuffer[Int]()\n  \
    \      val close_brace_size_limit_limit_limit = mutable.ListBuffer[Int]()\n  \
    \      val space_size_limit_limit_limit = mutable.ListBuffer[Int]()\n        val\
    \ paren_group_size_limit_limit_limit_limit = mutable.ListBuffer[Int]()\n     \
    \   val open_brace_size_limit_limit_limit = mutable.ListBuffer[Int]()\n      \
    \  val close_brace_size_limit_limit_limit = mutable.ListBuffer[Int]()\n      \
    \  val space_size_limit_limit_limit = mutable.ListBuffer[Int]()\n        val paren_group_size_limit_limit_limit_limit\
    \ = mutable.ListBuffer[Int]()\n        val open_brace_size_limit_limit_limit =\
    \ mutable.ListBuffer[Int]()\n        val close_brace_", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_sorted =\
    \ paren_groups_with_spaces.sortBy(x => x.length)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replace(\")\", \" ) \"))\n    \
    \    val paren_groups_with_spaces_sorted_with_spaces_sorted = paren_groups_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x.length)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted.map(x => x.replace(\")\"\
    , \" ) \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x =>\
    \ x.length)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x.length)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.sortBy(x\
    \ => x.length)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_", "      \
    \  val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_strings\
    \ = paren_groups.map(x => x.replace(\")\", \"\"))\n        val paren_group_strings_sorted\
    \ = paren_group_strings.sortBy(x => x.length)\n        val paren_group_strings_sorted_reversed\
    \ = paren_group_strings_sorted.reverse\n        val paren_group_strings_sorted_reversed_size\
    \ = paren_group_strings_sorted_reversed.size\n        val paren_group_strings_sorted_reversed_size_2\
    \ = paren_group_strings_sorted_reversed_size / 2\n        val paren_group_strings_sorted_reversed_size_3\
    \ = paren_group_strings_sorted_reversed_size_2 / 2\n        val paren_group_strings_sorted_reversed_size_4\
    \ = paren_group_strings_sorted_reversed_size_3 / 2\n        val paren_group_strings_sorted_reversed_size_5\
    \ = paren_group_strings_sorted_reversed_size_4 / 2\n        val paren_group_strings_sorted_reversed_size_6\
    \ = paren_group_strings_sorted_reversed_size_5 / 2\n        val paren_group_strings_sorted_reversed_size_7\
    \ = paren_group_strings_sorted_reversed_size_6 / 2\n        val paren_group_strings_sorted_reversed_size_8\
    \ = paren_group_strings_sorted_reversed_size_7 / 2\n        val paren_group_strings_sorted_reversed_size_9\
    \ = paren_group_strings_sorted_reversed_size_8 / 2\n        val paren_group_strings_sorted_reversed_size_10\
    \ = paren_group_strings_sorted_reversed_size_9 / 2\n        val paren_group_strings_sorted_reversed_size_11\
    \ = paren_group_strings_sorted_reversed_size_10 / 2\n        val paren_group_strings_sorted_reversed_size_12\
    \ = paren_group_strings_sorted_reversed_size_11 / 2\n        val paren_group_strings_sorted_reversed_size_13\
    \ = paren_group_strings_sorted_reversed_size_12 / 2\n        val paren_group_strings_sorted_reversed_size_14\
    \ = paren_group_strings_sorted_reversed_size_13 / 2\n        val paren_group_strings_sorted_reversed_size_15\
    \ = paren_group_strings_sorted_reversed_size_14 / 2\n        val paren_group_strings_sorted_reversed_size_16\
    \ = paren_group_strings_sorted_reversed_size_15 / 2\n        val paren_group_strings_sorted_reversed_size_17\
    \ = paren_group_strings_sorted_reversed_size_16 / 2\n        val paren_group_strings_sorted_reversed_size_18\
    \ = paren_group_string", "        val paren_groups = paren_string.split(\"\\\\\
    (|\\\\)\")\n        val paren_groups_count = paren_groups.length\n        val\
    \ paren_groups_size = (paren_groups_count * 2) - paren_groups_count\n        val\
    \ paren_groups_size_remainder = paren_groups_size % 2\n        val paren_groups_size_remainder_count\
    \ = paren_groups_size_remainder == 0 ? paren_groups_size / 2 : paren_groups_size_remainder\n\
    \        val paren_groups_size_remainder_count_remainder = paren_groups_size_remainder_count\
    \ * 2\n        val paren_groups_size_remainder_count_remainder_count = paren_groups_size_remainder_count_remainder\
    \ == 0 ? paren_groups_size_remainder / 2 : paren_groups_size_remainder_count_remainder\n\
    \        val paren_groups_size_remainder_count_remainder_count_remainder = paren_groups_size_remainder_count_remainder_count\
    \ * 2\n        val paren_groups_size_remainder_count_remainder_count_remainder_count\
    \ = paren_groups_size_remainder_count_remainder_count_remainder == 0 ? paren_groups_size_remainder_count\
    \ / 2 : paren_groups_size_remainder_count_remainder_count_remainder\n        val\
    \ paren_groups_size_remainder_count_remainder_count_remainder_count_remainder\
    \ = paren_groups_size_remainder_count_remainder_count_remainder_count * 2\n  \
    \      val paren_groups_size_remainder_count_remainder_count_remainder_count_remainder_count\
    \ = paren_groups_size_remainder_count_remainder_count_remainder_count_remainder\
    \ == 0 ? paren_groups_size_remainder_count_remainder / 2 : paren_groups_size_remainder_count_remainder_count_remainder_count_remainder\n\
    \        val paren_groups_size_remainder_count_remainder_count_remainder_count_remainder_count_remainder\
    \ = paren_groups_size_remainder_count_remainder_count_remainder_count_remainder_count_remainder\
    \ == 0 ? paren_groups_size_remainder_count_remainder_count_remainder / 2 : paren_groups_size_remainder_count_remainder_count_remainder_count_remainder_count_remainder\n\
    \        val paren_groups_size_remainder_count_remainder_count_remainder_count_remainder_count_remainder_count\
    \ = paren_groups_size_remainder_count_remainder_count_remainder_count_remainder_count_remainder\
    \ == 0 ? paren_groups_size_remainder_count_remainder_count_remainder / 2 : paren_groups_size_remainder_count_remainder_count_remainder_count_remainder_count_remainder\n\
    \        val paren_groups_size_remainder_count_remainder_", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n\
    \        val paren_groups_flat2 = paren_groups_flat.filterNot(_ == \")\")\n  \
    \      val paren_groups_flat3 = paren_groups_flat2.filterNot(_ == \"(\")\n   \
    \     val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \" \")\n    \
    \    val paren_groups_flat5 = paren_groups_flat4.filterNot(_ == \"\\\\\")\n  \
    \      val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"\\\\(\")\n\
    \        val paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \"\\\\)\"\
    )\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_ == \"\\\\)\"\
    )\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(_ == \"\\\\)\"\
    )\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(_ == \"\\\\\
    )\")\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(_ == \"\\\
    \\)\")\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(_ == \"\
    \\\\)\")\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_ ==\
    \ \"\\\\)\")\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat25 = paren_groups_flat24.filter",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_group_count\
    \ = paren_groups.length\n        val paren_groups_with_paren_count = paren_groups.map(x\
    \ => x + \"(\" + paren_group_count + \")\").mkString\n        val paren_groups_with_paren_count_with_spaces\
    \ = paren_groups_with_paren_count + \" \" + paren_groups_with_paren_count\n  \
    \      val paren_groups_with_paren_count_with_spaces_array = paren_groups_with_paren_count_with_spaces.split(\"\
    \\\\s+\")\n        val paren_groups_with_paren_count_with_spaces_array_length\
    \ = paren_groups_with_paren_count_with_spaces_array.length\n        val paren_groups_with_paren_count_with_spaces_array_with_spaces\
    \ = paren_groups_with_paren_count_with_spaces_array.map(x => x + \"(\" + paren_group_count\
    \ + \")\").mkString\n        val paren_groups_with_paren_count_with_spaces_array_with_spaces_array\
    \ = paren_groups_with_paren_count_with_spaces_array_with_spaces.split(\"\\\\s+\"\
    )\n        val paren_groups_with_paren_count_with_spaces_array_with_spaces_array_length\
    \ = paren_groups_with_paren_count_with_spaces_array_with_spaces_array.length\n\
    \        val paren_groups_with_paren_count_with_spaces_array_with_spaces_array_with_spaces\
    \ = paren_groups_with_paren_count_with_spaces_array_with_spaces_array.map(x =>\
    \ x + \"(\" + paren_group_count + \")\").mkString\n        val paren_groups_with_paren_count_with_spaces_array_with_spaces_array_with_spaces_array\
    \ = paren_groups_with_paren_count_with_spaces_array_with_spaces_array_with_spaces.split(\"\
    \\\\s+\")\n        val paren_groups_with_paren_count_with_spaces_array_with_spaces_array_with_spaces_array_length\
    \ = paren_groups_with_paren_count_with_spaces_array_with_spaces_array_with_spaces_array.length\n\
    \        val paren_groups_with_paren_count_with_spaces_array_with_spaces_array_with_spaces_array_with_spaces\
    \ = paren_groups_with_paren_count_with_spaces_array_with_spaces_array_with_spaces_array.map(x\
    \ => x + \"(\" + paren_group_count + \")\").mkString\n        val paren_groups_with_paren_count_with_spaces_array_with_spaces_array_with_spaces_array_with_spaces_array\
    \ = paren_groups_with_paren_count_with_spaces_array_with_spaces_array_with_spaces_array_with_spaces.split(\"\
    \\\\s+\")\n        val paren_groups_with_paren_count_with_spaces_array_", "  \
    \      val paren_groups = mutable.ListBuffer[String]()\n        val paren_open\
    \ = mutable.ListBuffer[String]()\n        val paren_closed = mutable.ListBuffer[String]()\n\
    \        paren_string.foreach {\n            case c if c == '(' -> paren_open\
    \ += c\n            case c if c == ')' -> paren_closed += c\n            case\
    \ c if c == ' ' -> ()\n            case c if c == '(' -> paren_groups += c\n \
    \           case c if c == ')' -> paren_groups += c\n            case c if c ==\
    \ ' ' -> ()\n            case c if c == '(' -> paren_groups += c\n           \
    \ case c if c == ')' -> paren_groups += c\n            case c if c == ' ' -> ()\n\
    \            case c if c == '(' -> paren_groups += c\n            case c if c\
    \ == ')' -> paren_groups += c\n            case c if c == ' ' -> ()\n        \
    \    case c if c == '(' -> paren_groups += c\n            case c if c == ')' ->\
    \ paren_groups += c\n            case c if c == ' ' -> ()\n            case c\
    \ if c == '(' -> paren_groups += c\n            case c if c == ')' -> paren_groups\
    \ += c\n            case c if c == ' ' -> ()\n            case c if c == '(' ->\
    \ paren_groups += c\n            case c if c == ')' -> paren_groups += c\n   \
    \         case c if c == ' ' -> ()\n            case c if c == '(' -> paren_groups\
    \ += c\n            case c if c == ')' -> paren_groups += c\n            case\
    \ c if c == ' ' -> ()\n            case c if c == '(' -> paren_groups += c\n \
    \           case c if c == ')' -> paren_groups += c\n            case c if c ==\
    \ ' ' -> ()\n            case c if c == '(' -> paren_groups += c\n           \
    \ case c if c == ')' -> paren_groups += c\n            case c if c == ' ' -> ()\n\
    \            case c if c == '(' -> paren_groups += c\n            case c if c\
    \ == ')' -> paren_groups += c\n            case c if c == ' ' -> ()\n        \
    \    case c if c == '(' -> paren_groups += c\n            case c if c == ')' ->\
    \ paren_groups += c\n            case c if c == ' ' -> ()\n            case c\
    \ if c == '(' -> paren_groups += c\n            case c if c == ')' -> paren_groups\
    \ += c\n            case c if c == ' ' -> ()\n            case c if c", "    \
    \    val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"( \", \" (\"))\n        val\
    \ paren_groups_with_spaces_without_spaces_without_spaces = paren_groups_with_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_size\
    \ = paren_groups.length\n        val paren_groups_size_reversed = paren_groups_size.reverse\n\
    \        val paren_groups_size_reversed_size = paren_groups_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed = paren_groups_size_reversed_size.reverse\n\
    \        val paren_groups_size_reversed_size_reversed_size = paren_groups_size_reversed_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed = paren_groups_size_reversed_size_reversed_size.reverse\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size = paren_groups_size_reversed_size_reversed_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size.reverse\n    \
    \    val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size.reverse\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size.reverse\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size\
    \ = paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed.length\n\
    \        val paren_groups_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed_size_reversed\
    \ = paren_groups_size_reversed_size_reverse", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_with_open_braces = paren_groups.map(x => x.replace(\"\
    )\", \"\").replace(\"(\", \"\"))\n        val paren_groups_with_open_braces_without_spaces\
    \ = paren_groups_with_open_braces.map(x => x.replace(\"  \", \"\"))\n        val\
    \ paren_groups_with_open_braces_without_spaces_without_spaces = paren_groups_with_open_braces_without_spaces.map(x\
    \ => x.replace(\"  \", \"\"))\n        val paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_open_braces_without_spaces_without_spaces.map(x => x.replace(\"\
    \  \", \"\"))\n        val paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \"\"))\n        val paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \"\"))\n        val paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \"\"))\n        val paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \"\"))\n        val paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \"\"))\n        val paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_open_braces_without_spaces_without_spaces_without_spaces_without_spaces_without_space",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces.map(x => x.replace(\"  \", \" \"))\n\
    \        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    \  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_group_strings = paren_groups.map(x => x.replace(\"\
    )\", \"\"))\n        paren_group_strings.filter(x => x.nonEmpty)", "        val\
    \ paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortBy(x => x)\n        val paren_groups_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted.map(x => x.replace(\" \", \"\"))\n       \
    \ val paren_groups_with_spaces_sorted_with_spaces_sorted = paren_groups_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted.map(x => x.replace(\" \"\
    , \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x =>\
    \ x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.sortBy(x\
    \ => x)\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted.map(x\
    \ => x.replace(\" \", \"\"))\n        val paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_sorted_with_spaces_",
  "        val paren_groups = mutable.ListBuffer[String]()\n        var open_braces\
    \ = 0\n        var closed_braces = 0\n        var paren_group = \"\"\n       \
    \ for (c <- paren_string) {\n            if (c == '(') {\n                open_braces\
    \ += 1\n            } else if (c == ')') {\n                closed_braces += 1\n\
    \            } else if (c == '(' && open_braces > closed_braces) {\n         \
    \       paren_group += c\n            } else if (c == ')' && closed_braces > open_braces)\
    \ {\n                paren_group += c\n                paren_groups += paren_group\n\
    \                paren_group = \"\"\n                open_braces = 0\n       \
    \         closed_braces = 0\n            } else if (c == ' ') {\n            \
    \    paren_group += c\n            } else {\n                paren_group += c\n\
    \            }\n        }\n        if (paren_group.length > 0) {\n           \
    \ paren_groups += paren_group\n        }\n        paren_groups.toList", "    \
    \    val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces.map(x => x.replace(\"  \", \" \"))\n\
    \        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    \  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"  \", \" \"))", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_flat = paren_groups.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat2 = paren_groups_flat.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat3 = paren_groups_flat2.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat4 = paren_groups_flat3.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat5 = paren_groups_flat4.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat6 = paren_groups_flat5.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat7 = paren_groups_flat6.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat8 = paren_groups_flat7.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat9 = paren_groups_flat8.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat10 = paren_groups_flat9.flatMap(x => x.split(\"\
    \\\\)\"))\n        val paren_groups_flat11 = paren_groups_flat10.flatMap(x =>\
    \ x.split(\"\\\\)\"))\n        val paren_groups_flat12 = paren_groups_flat11.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat13 = paren_groups_flat12.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat14 = paren_groups_flat13.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat15 = paren_groups_flat14.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat16 = paren_groups_flat15.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat17 = paren_groups_flat16.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat18 = paren_groups_flat17.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat19 = paren_groups_flat18.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat20 = paren_groups_flat19.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat21 = paren_groups_flat20.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat22 = paren_groups_flat21.flatMap(x\
    \ => x.split(\"\\\\)\"))\n        val paren_groups_flat", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_group_stack = mutable.Stack[String]()\n\
    \        val paren_group_result: List[String] = Nil\n        for (paren_group\
    \ <- paren_groups) {\n            val paren_group_length = paren_group.length\n\
    \            val paren_group_start = paren_group_stack.lastOption.orElse(paren_group_length)\n\
    \            val paren_group_end = paren_group_start + paren_group_length - 1\n\
    \            val paren_group_str = paren_group.substring(paren_group_start, paren_group_end)\n\
    \            paren_group_stack.push(paren_group_str)\n            if (paren_group_str.length\
    \ == paren_group_length) {\n                paren_group_result ::= paren_group_str\n\
    \            } else {\n                paren_group_result ::= paren_group_stack.last\n\
    \                paren_group_stack.clear()\n            }\n        }\n       \
    \ paren_group_result.reverse", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_with_spaces = paren_groups.map(x => x.replace(\"\
    )\", \" ) \"))\n        val paren_groups_with_spaces_reversed = paren_groups_with_spaces.reverse\n\
    \        val paren_groups_with_spaces_reversed_with_spaces = paren_groups_with_spaces_reversed.map(x\
    \ => x.replace(\"(\", \" ( \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed\
    \ = paren_groups_with_spaces_reversed_with_spaces.reverse\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed.map(x => x.replace(\"\
    )\", \" ) \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces.reverse\n\
    \        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces.map(x\
    \ => x.replace(\"(\", \" ( \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed.map(x\
    \ => x.replace(\"(\", \" ( \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed\
    \ = paren_groups_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_spaces_reversed_with_space",
  "        val paren_groups = paren_string.split(\"\\\\(|\\\\)\")\n        val paren_groups_flat\
    \ = paren_groups.flatten\n        val paren_groups_flat2 = paren_groups_flat.distinct\n\
    \        val paren_groups_flat3 = paren_groups_flat2.filterNot(_ == \"\")\n  \
    \      val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \" \")\n   \
    \     paren_groups_flat4.toList", "        val paren_groups = mutable.ListBuffer[String]()\n\
    \        val open_braces = mutable.ListBuffer[String]()\n        val close_braces\
    \ = mutable.ListBuffer[String]()\n        paren_string.split(\"\\\\(\").foreach(x\
    \ => {\n            val open_brace = x.split(\"\\\\)\").length == 1\n        \
    \    val close_brace = x.split(\"\\\\)\").length == 0\n            if (open_brace\
    \ && close_brace) {\n                paren_groups += x\n            } else if\
    \ (open_brace) {\n                open_braces += x\n            } else if (close_brace)\
    \ {\n                close_braces += x\n            }\n        })\n        paren_groups\
    \ += open_braces.mkString(\"(\")\n        paren_groups += close_braces.mkString(\"\
    )\")\n        paren_groups.toList", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2\
    \ = paren_groups_flat.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat3\
    \ = paren_groups_flat2.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat4\
    \ = paren_groups_flat3.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat5\
    \ = paren_groups_flat4.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat6\
    \ = paren_groups_flat5.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat7\
    \ = paren_groups_flat6.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat8\
    \ = paren_groups_flat7.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat9\
    \ = paren_groups_flat8.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat10\
    \ = paren_groups_flat9.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat11\
    \ = paren_groups_flat10.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat12\
    \ = paren_groups_flat11.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat13\
    \ = paren_groups_flat12.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat14\
    \ = paren_groups_flat13.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat15\
    \ = paren_groups_flat14.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat16\
    \ = paren_groups_flat15.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat17\
    \ = paren_groups_flat16.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat18\
    \ = paren_groups_flat17.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat19\
    \ = paren_groups_flat18.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat20\
    \ = paren_groups_flat19.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat21\
    \ = paren_groups_flat20.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat22\
    \ = paren_groups_flat21.flatMap(x => x.split(\"\\\\)\"))\n        val paren_groups_flat23\
    \ = paren_groups_flat22.flat", "        val paren_groups = mutable.ListBuffer[String]()\n\
    \        val open_braces = mutable.ListBuffer[String]()\n        val closed_braces\
    \ = mutable.ListBuffer[String]()\n        val open_brace_count = 0\n        val\
    \ closed_brace_count = 0\n        val paren_open = mutable.ListBuffer[String]()\n\
    \        val paren_closed = mutable.ListBuffer[String]()\n        val paren_open_size\
    \ = mutable.ListBuffer[Int]()\n        val paren_closed_size = mutable.ListBuffer[Int]()\n\
    \        val paren_open_size = paren_open_size.init\n        val paren_closed_size\
    \ = paren_closed_size.init\n        val paren_open = paren_open.init\n       \
    \ val paren_closed = paren_closed.init\n        val paren_open_size = paren_open_size.init\n\
    \        val paren_closed_size = paren_closed_size.init\n        val paren_open\
    \ = paren_open.init\n        val paren_closed = paren_closed.init\n        val\
    \ paren_open_size = paren_open_size.init\n        val paren_closed_size = paren_closed_size.init\n\
    \        val paren_open = paren_open.init\n        val paren_closed = paren_closed.init\n\
    \        val paren_open_size = paren_open_size.init\n        val paren_closed_size\
    \ = paren_closed_size.init\n        val paren_open = paren_open.init\n       \
    \ val paren_closed = paren_closed.init\n        val paren_open_size = paren_open_size.init\n\
    \        val paren_closed_size = paren_closed_size.init\n        val paren_open\
    \ = paren_open.init\n        val paren_closed = paren_closed.init\n        val\
    \ paren_open_size = paren_open_size.init\n        val paren_closed_size = paren_closed_size.init\n\
    \        val paren_open = paren_open.init\n        val paren_closed = paren_closed.init\n\
    \        val paren_open_size = paren_open_size.init\n        val paren_closed_size\
    \ = paren_closed_size.init\n        val paren_open = paren_open.init\n       \
    \ val paren_closed = paren_closed.init\n        val paren_open_size = paren_open_size.init\n\
    \        val paren_closed_size = paren_closed_size.init\n        val paren_open\
    \ = paren_open.init\n        val paren_closed = paren_closed.", "        val paren_groups\
    \ = mutable.ListBuffer[String]()\n        val paren_open = mutable.ListBuffer[String]()\n\
    \        val paren_closed = mutable.ListBuffer[String]()\n        paren_string.foreach\
    \ {\n            case ' ' =>\n            case ')' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n            case ')(' =>\n\
    \            case ')(' =>\n            case ')(' =>\n", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_group_counts = paren_groups.map(x\
    \ => x.split(\"\\\\)\").length)\n        val paren_group_lengths = paren_group_counts.map(x\
    \ => x.toDouble)\n        val paren_group_lengths_sum = paren_group_lengths.sum\n\
    \        val paren_group_lengths_avg = paren_group_lengths_sum / paren_groups.length\n\
    \        val paren_group_lengths_min = paren_group_lengths.min\n        val paren_group_lengths_max\
    \ = paren_group_lengths.max\n        val paren_group_lengths_range = paren_group_lengths_max\
    \ - paren_group_lengths_min\n        val paren_group_lengths_range_avg = paren_group_lengths_range\
    \ / paren_groups.length\n        val paren_group_lengths_range_min = paren_group_lengths_range_min\
    \ * 0.95\n        val paren_group_lengths_range_max = paren_group_lengths_range_max\
    \ * 1.05\n        val paren_group_lengths_range_min = paren_group_lengths_range_min.toInt\n\
    \        val paren_group_lengths_range_max = paren_group_lengths_range_max.toInt\n\
    \        val paren_group_lengths_range_avg = paren_group_lengths_range_avg.toInt\n\
    \        val paren_group_lengths_range_min = paren_group_lengths_range_min\n \
    \       val paren_group_lengths_range_max = paren_group_lengths_range_max\n  \
    \      val paren_group_lengths_range_avg = paren_group_lengths_range_avg\n   \
    \     val paren_group_lengths_range_min = paren_group_lengths_range_min\n    \
    \    val paren_group_lengths_range_max = paren_group_lengths_range_max\n     \
    \   val paren_group_lengths_range_avg = paren_group_lengths_range_avg\n      \
    \  val paren_group_lengths_range_min = paren_group_lengths_range_min\n       \
    \ val paren_group_lengths_range_max = paren_group_lengths_range_max\n        val\
    \ paren_group_lengths_range_avg = paren_group_lengths_range_avg\n        val paren_group_lengths_range_min\
    \ = paren_group_lengths_range_min\n        val paren_group_lengths_range_max =\
    \ paren_group_lengths_range_max\n        val paren_group_lengths_range_avg = paren_group_lengths_range_avg\n\
    \        val paren_group_lengths_range_min = paren_group_lengths_range_min\n \
    \       val paren_group_lengths_range_max = paren_group_lengths_range_max\n  \
    \      val paren_group_lengths_range_", "        val paren_groups = paren_string.split(\"\
    \\\\(\")\n        val paren_groups_count = paren_groups.length\n        val paren_groups_list_size\
    \ = paren_groups_count * 2\n        val paren_groups_list_size_in_bytes = paren_groups_list_size\
    \ * 4\n        val paren_groups_list_size_str = paren_groups_list_size.toString\
    \ + \"B\"\n        val paren_groups_list_size_str_in_bytes = paren_groups_list_size_str.toByte\n\
    \        val paren_groups_list_size_str_in_bits = paren_groups_list_size_str_in_bytes.toInt\n\
    \        val paren_groups_list_size_str_in_bits_str = paren_groups_list_size_str_in_bits.toString\
    \ + \"B\"\n        val paren_groups_list_size_str_in_bits_str_in_bytes = paren_groups_list_size_str_in_bits_str.toByte\n\
    \        val paren_groups_list_size_str_in_bits_str_in_bits = paren_groups_list_size_str_in_bits_str_in_bytes.toInt\n\
    \        val paren_groups_list_size_str_in_bits_str_in_bits_str = paren_groups_list_size_str_in_bits_str_in_bits.toString\
    \ + \"B\"\n        val paren_groups_list_size_str_in_bits_str_in_bits_str_in_bytes\
    \ = paren_groups_list_size_str_in_bits_str_in_bits_str_in_bits.toByte\n      \
    \  val paren_groups_list_size_str_in_bits_str_in_bits_str_in_bits_str = paren_groups_list_size_str_in_bits_str_in_bits_str_in_bits_str.toInt\n\
    \        val paren_groups_list_size_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str\
    \ = paren_groups_list_size_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str.toString\
    \ + \"B\"\n        val paren_groups_list_size_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str\
    \ = paren_groups_list_size_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str.toByte\n\
    \        val paren_groups_list_size_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str\
    \ = paren_groups_list_size_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str_in_bits_str.toInt\n\
    \        val paren_groups_list_size_str_in_bits_str_in_bits_", "        val paren_groups\
    \ = paren_string.split(\"\\\\(|\\\\)\")\n        val paren_groups_flat = paren_groups.flatten\n\
    \        val paren_groups_flat2 = paren_groups_flat.filterNot(_ == \"\")\n   \
    \     val paren_groups_flat3 = paren_groups_flat2.filterNot(_ == \" \")\n    \
    \    val paren_groups_flat4 = paren_groups_flat3.filterNot(_ == \"\")\n      \
    \  val paren_groups_flat5 = paren_groups_flat4.filterNot(_ == \" \")\n       \
    \ val paren_groups_flat6 = paren_groups_flat5.filterNot(_ == \"\")\n        val\
    \ paren_groups_flat7 = paren_groups_flat6.filterNot(_ == \" \")\n        val paren_groups_flat8\
    \ = paren_groups_flat7.filterNot(_ == \"\")\n        val paren_groups_flat9 =\
    \ paren_groups_flat8.filterNot(_ == \" \")\n        val paren_groups_flat10 =\
    \ paren_groups_flat9.filterNot(_ == \"\")\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(_\
    \ == \" \")\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(_\
    \ == \"\")\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_\
    \ == \" \")\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_\
    \ == \"\")\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_\
    \ == \" \")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_\
    \ == \"\")\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_\
    \ == \" \")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_\
    \ == \"\")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_\
    \ == \" \")\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_\
    \ == \"\")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_\
    \ == \" \")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_\
    \ == \"\")\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_\
    \ == \" \")\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_\
    \ == \"\")\n        val paren_groups_flat25 = paren_groups_flat24.filterNot(_\
    \ == \" \")\n        val paren_groups_flat26 = paren_groups_flat25.filterNot(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted\
    \ = paren_groups_with_spaces.sortWith((x,y) => x.length < y.length)\n        val\
    \ paren_groups_with_spaces_sorted_with_spaces = paren_groups_with_spaces_sorted.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed\
    \ = paren_groups_with_spaces_sorted_with_spaces.map(x => x.trim).filter(x => !x.isEmpty)\n\
    \        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted = paren_groups_with_spaces_sorted_with_spaces_trimmed.sortWith((x,y)\
    \ => x.length < y.length)\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted.map(x => x.replace(\"\
    )\", \" ) \"))\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces.map(x\
    \ => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed.sortWith((x,y)\
    \ => x.length < y.length)\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed.map(x\
    \ => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted.map(x\
    \ => x.trim).filter(x => !x.isEmpty)\n        val paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted\
    \ = paren_groups_with_spaces_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed_sorted_with_spaces_trimmed.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_open_braces\
    \ = paren_groups.map(x => x.replace(\")\", \"\").replace(\"(\", \"(\"))\n    \
    \    val paren_groups_with_closed_braces = paren_groups_with_open_braces.map(x\
    \ => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        paren_groups_with_closed_braces.filter(x\
    \ => x.isEmpty).map(x => x.replace(\"(\", \"\").replace(\")\", \"\"))", "    \
    \    val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"( \", \" (\"))\n        val\
    \ paren_groups_with_spaces_without_spaces_without_spaces = paren_groups_with_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_set\
    \ = paren_groups.toSet\n        val paren_groups_list_with_duplicates = paren_groups.toList.distinct\n\
    \        val paren_groups_list_without_duplicates = paren_groups_list_with_duplicates.toList\n\
    \        val paren_groups_list_without_duplicates_sorted = paren_groups_list_without_duplicates.sortBy(x\
    \ => x)\n        val paren_groups_list_without_duplicates_sorted_with_duplicates\
    \ = paren_groups_list_without_duplicates_sorted.distinct\n        val paren_groups_list_without_duplicates_sorted_with_duplicates_sorted\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates.sortBy(x => x)\n\
    \        val paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates.distinct\n\
    \        val paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted.sortBy(x\
    \ => x)\n        val paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates.distinct\n\
    \        val paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted.sortBy(x\
    \ => x)\n        val paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates.distinct\n\
    \        val paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted.sortBy(x\
    \ => x)\n        val paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates\
    \ = paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted.distinct\n\
    \        val paren_groups_list_without_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates_sorted_with_duplicates\
    \ = paren_groups_list_without_duplicate", "        val paren_groups = paren_string.split(\"\
    \\\\(\").map(_.trim).toList\n        val open_braces = paren_groups.filter(_.startsWith(\"\
    (\"))\n        val close_braces = paren_groups.filter(_.startsWith(\")\"))\n \
    \       val open_brace_counts = open_braces.map(_.length).distinct\n        val\
    \ close_brace_counts = close_braces.map(_.length).distinct\n        val open_brace_counts_sum\
    \ = open_brace_counts.sum\n        val close_brace_counts_sum = close_brace_counts.sum\n\
    \        val open_brace_counts_diff = open_brace_counts_sum - open_brace_counts.length\n\
    \        val close_brace_counts_diff = close_brace_counts_sum - close_brace_counts.length\n\
    \        val open_brace_counts_diff_percent = open_brace_counts_diff / open_brace_counts_sum\
    \ * 100\n        val close_brace_counts_diff_percent = close_brace_counts_diff\
    \ / close_brace_counts_sum * 100\n        val open_brace_counts_diff_percent_percent\
    \ = open_brace_counts_diff_percent / 100\n        val close_brace_counts_diff_percent_percent\
    \ = close_brace_counts_diff_percent / 100\n        val open_brace_counts_diff_percent_percent_percent\
    \ = open_brace_counts_diff_percent_percent / 100\n        val close_brace_counts_diff_percent_percent_percent\
    \ = close_brace_counts_diff_percent_percent / 100\n        val open_brace_counts_diff_percent_percent_percent_percent\
    \ = open_brace_counts_diff_percent_percent_percent / 100\n        val close_brace_counts_diff_percent_percent_percent_percent\
    \ = close_brace_counts_diff_percent_percent_percent / 100\n        val open_brace_counts_diff_percent_percent_percent_percent\
    \ = open_brace_counts_diff_percent_percent_percent / 100\n        val close_brace_counts_diff_percent_percent_percent_percent\
    \ = close_brace_counts_diff_percent_percent_percent / 100\n        val open_brace_counts_diff_percent_percent_percent_percent\
    \ = open_brace_counts_diff_percent_percent_percent / 100\n        val close_brace_counts_diff_percent_percent_percent_percent\
    \ = close_brace_counts_diff_percent_percent_percent / 100\n        val open_brace_counts_diff_percent_percent_percent_percent\
    \ = open_brace_counts_diff_percent_percent_percent / 100\n", "        val paren_groups\
    \ = paren_string.split(\"\\\\(\")\n        val paren_groups_flat = paren_groups.flatten\n\
    \        val paren_groups_flat2 = paren_groups_flat.filterNot(x => x.contains(\"\
    \\\\(\"))\n        val paren_groups_flat3 = paren_groups_flat2.filterNot(x =>\
    \ x.contains(\"\\\\)\"))\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(x\
    \ => x.contains(\"\\\\)\"))\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(x\
    \ => x.contains(\"\\\\", "        val paren_groups = paren_string.split(\"\\\\\
    (\").map(_.trim).toList\n        val open_braces = paren_groups.filter(_.startsWith(\"\
    (\"))\n        val closed_braces = paren_groups.filter(_.endsWith(\")\"))\n  \
    \      val unclosed_braces = paren_groups.filter(!_.endsWith(\")\"))\n       \
    \ val open_brace_counts = open_braces.map(x => x.length).sum\n        val closed_brace_counts\
    \ = closed_braces.map(x => x.length).sum\n        val unclosed_brace_counts =\
    \ unclosed_braces.map(x => x.length).sum\n        val unclosed_brace_counts_ratio\
    \ = unclosed_brace_counts / (closed_brace_counts + unclosed_brace_counts)\n  \
    \      val unclosed_brace_counts_ratio_threshold = unclosed_brace_counts_ratio\
    \ * 0.8\n        val open_brace_counts_ratio = open_brace_counts / (closed_brace_counts\
    \ + unclosed_brace_counts)\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8\n        val open_brace_counts_ratio_threshold = open_brace_counts_ratio_threshold\
    \ * 0.8", "        val paren_groups = paren_string.split(\"\\\\(\")\n        val\
    \ paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat_list\
    \ = paren_groups_flat.distinct\n        val paren_groups_flat_list2 = paren_groups_flat_list.toList\n\
    \        val paren_groups_flat_list3 = paren_groups_flat_list2.toList\n      \
    \  val paren_groups_flat_list4 = paren_groups_flat_list3.toList\n        val paren_groups_flat_list5\
    \ = paren_groups_flat_list4.toList\n        val paren_groups_flat_list6 = paren_groups_flat_list5.toList\n\
    \        val paren_groups_flat_list7 = paren_groups_flat_list6.toList\n      \
    \  val paren_groups_flat_list8 = paren_groups_flat_list7.toList\n        val paren_groups_flat_list9\
    \ = paren_groups_flat_list8.toList\n        val paren_groups_flat_list10 = paren_groups_flat_list9.toList\n\
    \        val paren_groups_flat_list11 = paren_groups_flat_list10.toList\n    \
    \    val paren_groups_flat_list12 = paren_groups_flat_list11.toList\n        val\
    \ paren_groups_flat_list13 = paren_groups_flat_list12.toList\n        val paren_groups_flat_list14\
    \ = paren_groups_flat_list13.toList\n        val paren_groups_flat_list15 = paren_groups_flat_list14.toList\n\
    \        val paren_groups_flat_list16 = paren_groups_flat_list15.toList\n    \
    \    val paren_groups_flat_list17 = paren_groups_flat_list16.toList\n        val\
    \ paren_groups_flat_list18 = paren_groups_flat_list17.toList\n        val paren_groups_flat_list19\
    \ = paren_groups_flat_list18.toList\n        val paren_groups_flat_list20 = paren_groups_flat_list19.toList\n\
    \        val paren_groups_flat_list21 = paren_groups_flat_list20.toList\n    \
    \    val paren_groups_flat_list22 = paren_groups_flat_list21.toList\n        val\
    \ paren_groups_flat_list23 = paren_groups_flat_list22.toList\n        val paren_groups_flat_list24\
    \ = paren_groups_flat_list23.toList\n        val paren_groups_flat_list25 = paren_groups_flat_list24.toList\n\
    \        val paren_groups_flat_list26 = paren_groups_flat_list25.toList\n    \
    \    val paren_groups_flat_list27 = paren_groups_flat_list26.toList\n        val\
    \ paren_groups_flat_list28 = paren_groups_flat_list27.to", "        val paren_groups\
    \ = mutable.ListBuffer[String]()\n        val paren_open = mutable.ListBuffer[String]()\n\
    \        val paren_close = mutable.ListBuffer[String]()\n        paren_string.foreach\
    \ { char =>\n            char match {\n                case '(' -> paren_open\
    \ += char\n                case ')' -> paren_close += char\n                case\
    \ _ -> paren_groups += char\n            }\n        }\n        if (paren_open.isEmpty\
    \ || paren_close.isEmpty) paren_groups.toList\n        else paren_groups.take(paren_open.length).flatMap(paren_open\
    \ => paren_groups.drop(paren_open.length).flatMap(paren_close => paren_open ++\
    \ paren_close)).toList", "        val paren_groups = paren_string.split(\"\\\\\
    (|\\\\)\")\n        val paren_groups_count = paren_groups.length\n        val\
    \ paren_groups_map = mutable.Map[String, Int]()\n        paren_groups.foreach(group\
    \ => {\n            val group_count = group.split(\"\\\\)\").length\n        \
    \    paren_groups_map += (group -> group_count)\n        })\n        val paren_groups_count_map\
    \ = paren_groups_map.toMap\n        val paren_groups_count_map_keys = paren_groups_count_map.keys\n\
    \        val paren_groups_count_map_values = paren_groups_count_map.values\n \
    \       val paren_groups_count_map_keys_sorted = paren_groups_count_map_keys.sorted\n\
    \        val paren_groups_count_map_values_sorted = paren_groups_count_map_values.sorted\n\
    \        val paren_groups_count_map_keys_sorted_zipped = paren_groups_count_map_keys_sorted.zip(paren_groups_count_map_values_sorted)\n\
    \        val paren_groups_count_map_keys_sorted_zipped_sorted = paren_groups_count_map_keys_sorted_zipped.sortBy(_._1)\n\
    \        val paren_groups_count_map_keys_sorted_zipped_sorted_zipped = paren_groups_count_map_keys_sorted_zipped_sorted.zip(paren_groups_count_map_values_sorted)\n\
    \        val paren_groups_count_map_keys_sorted_zipped_sorted_zipped_sorted =\
    \ paren_groups_count_map_keys_sorted_zipped_sorted_zipped.sortBy(_._1)\n     \
    \   val paren_groups_count_map_keys_sorted_zipped_sorted_zipped_sorted_zipped\
    \ = paren_groups_count_map_keys_sorted_zipped_sorted_zipped_sorted.zip(paren_groups_count_map_values_sorted)\n\
    \        val paren_groups_count_map_keys_sorted_zipped_sorted_zipped_sorted_zipped_sorted\
    \ = paren_groups_count_map_keys_sorted_zipped_sorted_zipped_sorted_zipped.sortBy(_._1)\n\
    \        val paren_groups_count_map_keys_sorted_zipped_sorted_zipped_sorted_zipped_sorted_zipped\
    \ = paren_groups_count_map_keys_sorted_zipped_sorted_zipped_sorted_zipped_sorted.zip(paren_groups_count_map_values_sorted)\n\
    \        val paren_groups_count_map_keys_sorted_zipped_sorted_zipped_sorted_zipped_sorted_zipped_sorted\
    \ = paren_groups_count_map_keys_sorted_zipped_sorted_zipped_sorted_zipped_sorted_zipped.sortBy(_._1)\n\
    \        val paren_groups_count_map_keys_sorted_zipped_sorted_zipped_sorted_zipped_sorted_zipped_sorted_zipped\
    \ = paren_groups_count_map_keys_sorted_zipped_sorted_zipped_sorted_zipped_sorted_zipped_sorted.zip(paren_groups_count_map_values_sorted)\n\
    \        ", "        val paren_groups = paren_string.split(\"\\\\(\")\n      \
    \  val paren_groups_flat = paren_groups.flatten\n        val paren_groups_flat2\
    \ = paren_groups_flat.filterNot(_ == \")\")\n        val paren_groups_flat3 =\
    \ paren_groups_flat2.filterNot(_ == \"(\")\n        val paren_groups_flat4 = paren_groups_flat3.filterNot(_\
    \ == \" \")\n        val paren_groups_flat5 = paren_groups_flat4.filterNot(_ ==\
    \ \"\\\\(\")\n        val paren_groups_flat6 = paren_groups_flat5.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat7 = paren_groups_flat6.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat8 = paren_groups_flat7.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat9 = paren_groups_flat8.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat10 = paren_groups_flat9.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat11 = paren_groups_flat10.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat12 = paren_groups_flat11.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat13 = paren_groups_flat12.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat14 = paren_groups_flat13.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat15 = paren_groups_flat14.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat16 = paren_groups_flat15.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat17 = paren_groups_flat16.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat18 = paren_groups_flat17.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat19 = paren_groups_flat18.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat20 = paren_groups_flat19.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat21 = paren_groups_flat20.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat22 = paren_groups_flat21.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat23 = paren_groups_flat22.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat24 = paren_groups_flat23.filterNot(_\
    \ == \"\\\\)\")\n        val paren_groups_flat25 = paren_groups_flat24.filter",
  "        val paren_groups = paren_string.split(\"\\\\(\")\n        val paren_groups_with_spaces\
    \ = paren_groups.map(x => x.replace(\")\", \" ) \"))\n        val paren_groups_with_spaces_without_spaces\
    \ = paren_groups_with_spaces.map(x => x.replace(\"( \", \" (\"))\n        val\
    \ paren_groups_with_spaces_without_spaces_without_spaces = paren_groups_with_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces.map(x => x.replace(\"\
    ( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map(x\
    \ => x.replace(\"( \", \" (\"))\n        val paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces\
    \ = paren_groups_with_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces_without_spaces.map("]
stop_tokens:
- "\n    }\n"

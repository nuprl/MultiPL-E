language: scala
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n).sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2l22lpu8.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += fibs.head + fibs.tail.head\n        fibs.drop(n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3txvkz4i.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs ::: fibs.tail.scanLeft(0)((acc,\
    \ x) => acc + x)\n            .takeWhile(_ < n)\n            .last\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbop7zv55.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4unq9plj.scala:17)\n\tat Problem.main(tmp4unq9plj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) return n\n        else fib(n - 1)\
    \ + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) {\n            return n\n        }\n\
    \        else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs.tail.foreach(fibs.head\
    \ += _)\n        fibs.take(n).last\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjzuxxm2i.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs take n foreach { x => fibs += fibs(x -\
    \ 1) + fibs(x - 2) }\n        fibs last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp14jlqqsl.scala:16:17 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp14jlqqsl.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwkjqugkx.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        while (fibs.size\
    \ < n) {\n            fibs += fibs.head + fibs.last\n        }\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpchn9kqhp.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcbmyj4ss.scala:17)\n\tat Problem.main(tmpcbmyj4ss.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnuze4hx1.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs.takeWhile(_\
    \ < n).last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgs87hy4v.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs.tail.foreach(fibs.head)\n\
    \        fibs.take(n).sum\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptio83yz4.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4unq9plj.scala:17)\n\tat Problem.main(tmp4unq9plj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs ++= fibs.tail\n\
    \        fibs.take(n).last\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3il3n97h.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4unq9plj.scala:17)\n\tat Problem.main(tmp4unq9plj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n).last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpokwnxian.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(0,1)\n        fibs += fibs(0)\n\
    \        fibs += fibs(1)\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa_ftz69z.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n).last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpokwnxian.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs.take(n).foldLeft(0)((acc,\
    \ x) => acc + x)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgifx9lok.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs take n foreach { x\
    \ => fibs += fibs(x - 1) + fibs(x - 2) }\n        fibs last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp4zczeu7n.scala:17:17 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4zczeu7n.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs ::: fibs.tail.scanLeft(0)(_\
    \ + _)\n            .takeWhile(_ < n)\n            .last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjrqjhxrk.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += fibs.head\n        fibs += fibs.tail.head\n\
    \        fibs.take(n).sum\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfam1h5xs.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) return n\n        else fib(n - 1)\
    \ + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs.tail.foreach(fibs\
    \ => fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wtpa8gt.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5lc39f5_.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs += fibs.head\n\
    \        fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6cdp_uyv.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n        fibs\
    \ += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n       \
    \ fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs += 987\n\
    \        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n        fibs\
    \ += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs += 28657\n\
    \        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n      \
    \  fibs += 196418\n        fibs += 317811\n        fibs += 514229\n        fibs\
    \ += 832040\n        fibs += 1346269\n        fibs += 2178309\n        fibs +=\
    \ 3524578\n        fibs += 5702887\n        fibs += 9227465\n        fibs += 14930352\n\
    \        fibs += 24157817\n        fibs += 39088169\n        fibs += 63245986\n\
    \        fibs += 102334155\n        fibs += 165580141\n        fibs += 267914296\n\
    \        fibs += 433494437\n        fibs += 701408733\n        fibs += 1134903170\n\
    \        fibs += 1836311903\n        fibs += 2971215073\n        fibs += 4807526976\n\
    \        fibs += 7778742049\n        fibs += 12586269025\n        fibs += 20365011074\n\
    \        fibs += 32951280099\n        fibs += 53316291171\n        fibs += 86267571272\n\
    \        fibs += 138362330189\n        fibs += 225851433717\n        fibs += 365435296162\n\
    \        fibs += 591286729879\n        fibs += 956722026041\n        fibs += 1548008755920\n\
    \        fibs += 2504730781961\n        fibs += 4052739537881\n        fibs +=\
    \ 6557470319842\n        fibs += 10610209857723\n        fibs += 17167680177565\n\
    \        fibs += 26966537677493\n        fibs += 43369506504872\n\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa95qxapw.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.update(0,\
    \ fibs(0) + fibs(1))\n        fibs.update(1, fibs(0) - fibs(1))\n        fibs.update(n-1,\
    \ fibs(n-2) + fibs(n-3))\n        fibs.update(n-2, fibs(n-1) - fibs(n-3))\n  \
    \      fibs.update(n-3, fibs(n-2) - fibs(n-1))\n        fibs.update(n-1, fibs(n-2)\
    \ - fibs(n-1))\n        fibs.update(n-2, fibs(n-3) - fibs(n-1))\n        fibs.update(n-3,\
    \ fibs(n-4) - fibs(n-2))\n        fibs.update(n-4, fibs(n-3) - fibs(n-1))\n  \
    \      fibs.update(n-1, fibs(n-4) - fibs(n-1))\n        fibs.update(n-2, fibs(n-5)\
    \ - fibs(n-3))\n        fibs.update(n-3, fibs(n-4) - fibs(n-2))\n        fibs.update(n-4,\
    \ fibs(n-5) - fibs(n-1))\n        fibs.update(n-1, fibs(n-5) - fibs(n-1))\n  \
    \      fibs.update(n-2, fibs(n-6) - fibs(n-5))\n        fibs.update(n-3, fibs(n-4)\
    \ - fibs(n-2))\n        fibs.update(n-4, fibs(n-6) - fibs(n-3))\n        fibs.update(n-5,\
    \ fibs(n-4) - fibs(n-2))\n        fibs.update(n-6, fibs(n-5) - fibs(n-1))\n  \
    \      fibs.update(n-1, fibs(n-6) - fibs(n-1))\n        fibs.update(n-2, fibs(n-7)\
    \ - fibs(n-6))\n        fibs.update(n-3, fibs(n-4) - fibs(n-2))\n        fibs.update(n-4,\
    \ fibs(n-7) - fibs(n-3))\n        fibs.update(n-5, fibs(n-4) - fibs(n-2))\n  \
    \      fibs.update(n-6, fibs(n-7) - fibs(n-3))\n        fibs.update(n-7, fibs(n-4)\
    \ - fibs(n-2))\n        fibs.update(n-8, fibs(n-7) - fibs(n-3))\n        fibs.update(n-9,\
    \ fibs(n-4) - fibs(n-2))\n        fibs.update(n-10, fibs(n-7) - fibs(n-3))\n \
    \       fibs.update(n-9, fibs(n-4) - fibs(n-2))\n        fibs.update(n\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpj0degfui.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj0degfui.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m \
    \  |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) return n\n        else fib(n - 1)\
    \ + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ekre8eb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs ::: fibs.tail.scanLeft(0)(_+_)\n\
    \            .takeWhile(_ < n)\n            .last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuckkgbc9.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ekre8eb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4unq9plj.scala:17)\n\tat Problem.main(tmp4unq9plj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) return n\n        else fib(n - 1)\
    \ + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ekre8eb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs.tail.foreach(fibs\
    \ => fibs += fibs.last)\n        fibs.take(n).sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpis6k4p_g.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1, 2)\n        for (i <-\
    \ 1 to n) {\n            fibs += fibs.head\n        }\n        fibs.last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeor41qk5.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpeor41qk5.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793375
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += fibs.head\n        fibs += fibs.tail.head\n\
    \        fibs.take(n).sum\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfam1h5xs.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs ::: fibs.tail.scanLeft(0)(_\
    \ + _)\n            .takeWhile(_ < n)\n            .last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv3y2psxb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 4\n\
    \        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs += 8\n\
    \        fibs += 9\n        fibs += 10\n        fibs.take(n).sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_lxu_r_z.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        var a = 1;\n        var b = 1;\n        var c = 1;\n   \
    \     var d = 1;\n        var e = 1;\n        var f = 0;\n        var g = 1;\n\
    \        var h = 1;\n        var i = 1;\n        var j = 1;\n        var k = 1;\n\
    \        var l = 1;\n        var m = 1;\n        var n = 1;\n        var o = 1;\n\
    \        var p = 1;\n        var q = 1;\n        var r = 1;\n        var s = 1;\n\
    \        var t = 1;\n        var u = 1;\n        var v = 1;\n        var w = 1;\n\
    \        var x = 1;\n        var y = 1;\n        var z = 1;\n        var a = 1;\n\
    \        var b = 1;\n        var c = 1;\n        var d = 1;\n        var e = 1;\n\
    \        var f = 0;\n        var g = 1;\n        var h = 1;\n        var i = 1;\n\
    \        var j = 1;\n        var k = 1;\n        var l = 1;\n        var m = 1;\n\
    \        var n = 1;\n        var o = 1;\n        var p = 1;\n        var q = 1;\n\
    \        var r = 1;\n        var s = 1;\n        var t = 1;\n        var u = 1;\n\
    \        var v = 1;\n        var w = 1;\n        var x = 1;\n        var y = 1;\n\
    \        var z = 1;\n        var a = 1;\n        var b = 1;\n        var c = 1;\n\
    \        var d = 1;\n        var e = 1;\n        var f = 0;\n        var g = 1;\n\
    \        var h = 1;\n        var i = 1;\n        var j = 1;\n        var k = 1;\n\
    \        var l = 1;\n        var m = 1;\n        var n = 1;\n        var o = 1;\n\
    \        var p = 1;\n        var q = 1;\n        var r = 1;\n        var s = 1;\n\
    \        var t = 1;\n        var u = 1;\n        var v = 1;\n        var w = 1;\n\
    \        var x = 1;\n        var y = 1;\n        var z = 1;\n        var a = 1;\n\
    \        var b = 1;\n        var c = 1;\n        var d = 1;\n        var e = 1;\n\
    \        var f = 0;\n        var g = 1;\n        var h = 1;\n        var i = 1;\n\
    \        var j = 1;\n        var k = 1;\n        var l = 1;\n        var m = 1;\n\
    \        var n = 1;\n        var o = 1;\n        var p = 1;\n        var q = 1;\n\
    \        var r = 1;\n        var s = 1;\n        var t = 1;\n        var u = 1;\n\
    \        var v = 1;\n        var w = 1;\n        var x = 1;\n        var y = 1;\n\
    \        var z = 1;\n        var a = 1;\n        var b = 1;\n        var c = 1;\n\
    \        var d = 1;\n        var e = 1;\n        var f = 0;\n        var g = 1;\n\
    \        var h = 1;\n        var i = 1;\n        var j = 1;\n        var k = 1;\n\
    \        var l = 1;\n        var m = 1;\n        var n = 1;\n        var o = 1;\n\
    \        var p = 1;\n        var q = 1;\n        var r = 1;\n        var s = 1;\n\
    \        var t = 1;\n        var u = 1;\n        var v = 1;\n        var w = 1;\n\
    \        var x = 1;\n\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:38:12 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m1\e[0m;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:39:12 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m1\e[0m;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:40:12 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m1\e[0m;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m1\e[0m;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m1\e[0m;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36m"
  stdout: ''
  timestamp: 1659793376
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1, 2)\n        fibs.takeWhile(_\
    \ < n).last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6c97m1qk.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1, 2)\n        fibs.take(n).foldLeft(0)((acc,\
    \ x) => acc + x)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyk641fq9.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += fibs(0) + 1\n        fibs += fibs(1) + fibs(0)\
    \ + 1\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcufn_q1i.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, 0))));\n        fibs.update(n).head\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi1xqrdlb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbm2uihb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 4\n\
    \        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs += 8\n\
    \        fibs += 9\n        fibs += 10\n        fibs.drop(n - 1).head\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9jtm1op.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793375
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.tail.foreach(fibs\
    \ => fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc2mcr4s9.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793375
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        var a : Long = 0\n        var b : Long = 1\n        var\
    \ c : Long = 1\n        var d : Long = 1\n        var i : Long = 0\n        while(i\
    \ < n) {\n            val temp = a\n            a = b\n            b = c + d\n\
    \            c = temp\n            d = a + b\n            i += 1\n        }\n\
    \        return a\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp0jveztw8.scala:28)\n\tat Problem.main(tmp0jveztw8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793379
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo1l5pa05.scala:17)\n\tat Problem.main(tmpo1l5pa05.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793378
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs(0)\
    \ + 1\n        fibs += fibs(1) + 1\n        fibs(n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp1qbvwkd.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793375
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs take n foreach { fibs\
    \ =>\n            fibs += fibs(n - 1) + fibs(n - 2)\n        }\n        fibs last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpu9pv9q6f.scala:19:17 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu9pv9q6f.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793376
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcbmyj4ss.scala:17)\n\tat Problem.main(tmpcbmyj4ss.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs take n foreach { n\
    \ =>\n            fibs += fibs.last + fibs.last\n        }\n        fibs last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpk3d7rw4y.scala:19:17 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk3d7rw4y.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793376
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpntarg0vf.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793377
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs take n foreach { fibs\
    \ =>\n            fibs += fibs.last + fibs.last\n        }\n        fibs last\
    \ + 1\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeoro_6kc.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793378
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1, 2)\n        while (fibs.size\
    \ < n) {\n            fibs += fibs.last\n        }\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpidulaosd.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793377
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n).sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2l22lpu8.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs ::: fibs.tail.takeWhile(_\
    \ < n).drop(1)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd57lbplc.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793377
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        for(i <- 1 to\
    \ n) {\n            fibs += fibs.last\n        }\n        fibs.last\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnn2s3sln.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnn2s3sln.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793381
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbm2uihb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1, 2)\n        while (fibs.length\
    \ < n) {\n            fibs += fibs.last\n        }\n        fibs(n)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb91o0ejs.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793378
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ekre8eb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs.tail.foreach(fibs.head\
    \ += _)\n        fibs.take(n).sum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8v5co7zm.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793378
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        for (i <- 0\
    \ until n) {\n            fibs += fibs.head + fibs.tail.head\n        }\n    \
    \    fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9z920q5e.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp9z920q5e.scala:13:26 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793380
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwkjqugkx.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793381
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += fibs.head + fibs.tail.head\n        fibs.drop(1).head\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpazudr2d1.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793378
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs(0)\n\
    \        fibs += fibs(1)\n        fibs(n) match {\n            case 0 => 0\n \
    \           case 1 => 1\n            case _ => fibs(n-1) + fibs(n-2)\n       \
    \ }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp081fnmex.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793378
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) return n\n        else return fib(n\
    \ - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793380
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n).last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpokwnxian.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        for (i <- 1\
    \ to n) {\n            fibs += fibs.last\n        }\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaeg00t_4.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpaeg00t_4.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793381
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        for (i <- 0\
    \ until n) {\n            fibs += fibs.last\n        }\n        fibs.last\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpctrilc1z.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpctrilc1z.scala:13:26 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += fibs(0) + 1\n        fibs += fibs(1) + fibs(0)\
    \ + 1\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcufn_q1i.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4unq9plj.scala:17)\n\tat Problem.main(tmp4unq9plj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcbmyj4ss.scala:17)\n\tat Problem.main(tmpcbmyj4ss.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs.tail.foreach(x\
    \ => fibs += x)\n        fibs.take(n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmw7ue_69.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793381
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        var a : Long = 1\n        var b : Long = 1\n        var\
    \ c : Long = 1\n        var d : Long = 1\n        var i : Long = 1\n        var\
    \ fib : Long = 1\n        while(i <= n){\n            fib += a\n            a\
    \ += b\n            b += c\n            c += d\n            d += fib\n       \
    \     i += 1\n        }\n        fib\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpoh42z38k.scala:29)\n\tat Problem.main(tmpoh42z38k.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793385
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4unq9plj.scala:17)\n\tat Problem.main(tmp4unq9plj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbm2uihb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) n\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793385
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        var a : Long = 0\n        var b : Long = 1\n        var\
    \ c : Long = 1\n        var d : Long = 1\n        var i : Long = 1\n        while(i\
    \ <= n) {\n            val temp = a\n            a = b\n            b = c\n  \
    \          c = d\n            d = temp\n            i += 1\n        }\n      \
    \  return a\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpe15j9vjt.scala:28)\n\tat Problem.main(tmpe15j9vjt.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793385
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        for(i <- 1 to\
    \ n) {\n            fibs += fibs.last\n        }\n        fibs.last\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnn2s3sln.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnn2s3sln.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793381
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs.tail.foreach(fibs\
    \ => fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wtpa8gt.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs take n foreach { x\
    \ => fibs += fibs.last + fibs.last }\n        fibs last + 1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjb6aqyfz.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8hpl3x07.scala:85:4 ----------------------------\e\
    [0m\e[0m\n\e[31m85 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp8hpl3x07.scala:12:19 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e[31m0\e\
    [0m, \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        for (i <- 0\
    \ until n) {\n            fibs += fibs.head + fibs.last\n        }\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6sii80bv.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp6sii80bv.scala:13:26 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs take n foreach { x => fibs += fibs(x -\
    \ 1) + fibs(x - 2) }\n        fibs last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp14jlqqsl.scala:16:17 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp14jlqqsl.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1)\n            return n\n        else\n\
    \            return fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793387
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        var a : Long = 0\n        var b : Long = 1\n        var\
    \ c : Long = 1\n        var i : Long = 0\n        while(i < n) {\n           \
    \ i = i + 1\n            c = a + b\n            a = b\n            b = c\n   \
    \     }\n        return b\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp63rm67i1.scala:25)\n\tat Problem.main(tmp63rm67i1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793386
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcbmyj4ss.scala:17)\n\tat Problem.main(tmpcbmyj4ss.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) return n\n        else fib(n - 1)\
    \ + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        var a : Long = 0\n        var b : Long = 1\n        var\
    \ c : Long = 1\n        var d : Long = 1\n        var i : Long = 1\n        var\
    \ j : Long = 1\n        var k : Long = 1\n        var l : Long = 1\n        var\
    \ m : Long = 1\n        var n : Long = 1\n        var o : Long = 1\n        var\
    \ p : Long = 1\n        var q : Long = 1\n        var r : Long = 1\n        var\
    \ s : Long = 1\n        var t : Long = 1\n        var u : Long = 1\n        var\
    \ v : Long = 1\n        var w : Long = 1\n        var x : Long = 1\n        var\
    \ y : Long = 1\n        var z : Long = 1\n        var a : Long = 1\n        var\
    \ b : Long = 1\n        var c : Long = 1\n        var d : Long = 1\n        var\
    \ i : Long = 1\n        var j : Long = 1\n        var k : Long = 1\n        var\
    \ l : Long = 1\n        var m : Long = 1\n        var n : Long = 1\n        var\
    \ o : Long = 1\n        var p : Long = 1\n        var q : Long = 1\n        var\
    \ r : Long = 1\n        var s : Long = 1\n        var t : Long = 1\n        var\
    \ u : Long = 1\n        var v : Long = 1\n        var w : Long = 1\n        var\
    \ x : Long = 1\n        var y : Long = 1\n        var z : Long = 1\n        var\
    \ a : Long = 1\n        var b : Long = 1\n        var c : Long = 1\n        var\
    \ d : Long = 1\n        var i : Long = 1\n        var j : Long = 1\n        var\
    \ k : Long = 1\n        var l : Long = 1\n        var m : Long = 1\n        var\
    \ n : Long = 1\n        var o : Long = 1\n        var p : Long = 1\n        var\
    \ q : Long = 1\n        var r : Long = 1\n        var s : Long = 1\n        var\
    \ t : Long = 1\n        var u : Long = 1\n        var v : Long = 1\n        var\
    \ w : Long = 1\n        var x : Long = 1\n        var y : Long = 1\n        var\
    \ z : Long = 1\n        var a : Long = 1\n        var b : Long = 1\n        var\
    \ c : Long = 1\n        var d : Long = 1\n        var i : Long = 1\n        var\
    \ j : Long = 1\n        var k : Long = 1\n        var l : Long = 1\n        var\
    \ m : Long = 1\n        var n : Long = 1\n        var o : Long = 1\n        var\
    \ p : Long = 1\n        var q : Long = 1\n        var r : Long = 1\n        var\
    \ s : Long = 1\n        var t : Long = 1\n        var u : Long = 1\n        var\
    \ v : Long = 1\n        var w : Long = 1\n        var x : Long = 1\n        var\
    \ y : Long = 1\n        var z\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4odudcs5.scala:100:4 ---------------------------\e\
    [0m\e[0m\n\e[31m100 |\e[0m    }\n\e[31m\e[31m    |\e[0m    ^\e[0m\n\e[31m    |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4odudcs5.scala:34:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m34 |\e[0m        \e[33mvar\e[0m\
    \ \e[36ma\e[0m : \e[35mLong\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp4odudcs5.scala:35:12 ---------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mb is already defined as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4odudcs5.scala:36:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m36 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mc\e[0m : \e[35mLong\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined as \e[33mvariable\e\
    [0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp4odudcs5.scala:37:12 ---------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0md is already defined as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4odudcs5.scala:38:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m38 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mi\e[0m : \e[35mLong\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mi is "
  stdout: ''
  timestamp: 1659793387
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4unq9plj.scala:17)\n\tat Problem.main(tmp4unq9plj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.take(n).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq6sa1yx8.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n).last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpokwnxian.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1, 2)\n        while (fibs.length\
    \ < n) {\n            fibs += fibs.last\n        }\n        fibs(n)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb91o0ejs.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793378
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        for(i <- 1 to\
    \ n) {\n            fibs += fibs.last\n        }\n        fibs.last\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnn2s3sln.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnn2s3sln.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793381
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs ::: fibs.tail.scanLeft(0)(_\
    \ + _)\n            .takeWhile(_ < n)\n            .last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjrqjhxrk.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 4\n\
    \        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs += 8\n\
    \        fibs += 9\n        fibs += 10\n        fibs.take(n).sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_lxu_r_z.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcbmyj4ss.scala:17)\n\tat Problem.main(tmpcbmyj4ss.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1, 2)\n        fibs += fibs.head\n\
    \        fibs += fibs.tail.head\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzxzzrtck.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs ::: fibs.takeWhile(_\
    \ < n).drop(1)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4ahak6q1.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4unq9plj.scala:17)\n\tat Problem.main(tmp4unq9plj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n).last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpokwnxian.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpos8iov6p.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbm2uihb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwkjqugkx.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        for(i <- 1 to\
    \ n) {\n            fibs += fibs.head + fibs.tail\n        }\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbnw3c15.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdbnw3c15.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n).sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2l22lpu8.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) return n\n        else return fib(n\
    \ - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793380
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        while (fibs.size\
    \ < n) {\n            fibs += fibs.head + fibs.last\n        }\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpchn9kqhp.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n).last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpokwnxian.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs.take(n).foldLeft(0)((acc,\
    \ x) => acc + x)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgifx9lok.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs.take(n).foldLeft(0)((a,\
    \ b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsbxuqesk.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) return n\n        else fib(n - 1)\
    \ + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        for (i <- 1\
    \ to n) {\n            fibs += fibs.head\n        }\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppe6cihm_.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmppe6cihm_.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        var a : Long = 0\n        var b : Long = 1\n        var\
    \ c : Long = 1\n        var d : Long = 0\n        for(i <- 1 to n) {\n       \
    \     d = a + b\n            a = b\n            b = c\n            c = d\n   \
    \     }\n        return d\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgx3a3icu.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1, 2)\n        while (fibs.length\
    \ < n) {\n            fibs += fibs(0) + fibs(1)\n        }\n        fibs(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4o_uhr0k.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnuze4hx1.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += fibs(0) + 1\n        fibs += fibs(1) + fibs(0)\
    \ + 1\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcufn_q1i.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += fibs(0) + 1\n        fibs(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp812d6e7c.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        for (i <- 1\
    \ to n) {\n            fibs += fibs.last\n        }\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9dhfji6s.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp9dhfji6s.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793390
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1, 2)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpae5fjpdb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs take n foreach { n\
    \ =>\n            fibs += fibs.last + fibs.last\n        }\n        fibs last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpk3d7rw4y.scala:19:17 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk3d7rw4y.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793376
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1, 2)\n        fibs.take(n).foldLeft(0)\
    \ { (acc, x) => acc + x }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp926qa6ul.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 4\n\
    \        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs += 8\n\
    \        fibs += 9\n        fibs += 10\n        fibs.take(n).sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_lxu_r_z.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs.tail.foreach(fibs.updated(0,_+_))\n\
    \        fibs.updated(n-1,fibs.last)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyvigbgqx.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ekre8eb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpntarg0vf.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793377
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs take n foreach { x\
    \ => fibs += fibs(x - 1) + fibs(x - 2) }\n        fibs last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp4zczeu7n.scala:17:17 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4zczeu7n.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpeqf3v93k.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeqf3v93k.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m \
    \  |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793389
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) return n\n        else fib(n - 1)\
    \ + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs ::: fibs.tail.takeWhile(_\
    \ < n).map(x => x + fibs.last)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3_lwmx68.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793389
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) return n\n        else return fib(n\
    \ - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793380
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793381
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcbmyj4ss.scala:17)\n\tat Problem.main(tmpcbmyj4ss.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpntarg0vf.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793377
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) return n\n        val fibs = mutable.ListBuffer(0,\
    \ 1).tailrec\n        def fibs(n : Long, fib : mutable.ListBuffer[Long]) : mutable.ListBuffer[Long]\
    \ = {\n            if (n == 0) fib\n            else fibs(n-1, fib :+ fib(n-1))\n\
    \        }\n        fibs(n, fibs)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjy8kxcu3.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mdef\e[0m \e[36mfibs\e[0m(\e[36mn\e[0m :\
    \ \e[35mLong\e[0m, \e[36mfib\e[0m : mutable.ListBuffer[\e[35mLong\e[0m]) : mutable.ListBuffer[\e\
    [35mLong\e[0m] = {\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m   |\e[0mfibs is\
    \ already defined as \e[33mvalue\e[0m \e[35mfibs\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m15 |\e[0m            \e[33mif\e[0m (n == \e[31m0\e\
    [0m) fib\n\e[31m16 |\e[0m            \e[33melse\e[0m fibs(n-\e[31m1\e[0m, fib\
    \ :+ fib(n-\e[31m1\e[0m))\n\e[31m17 |\e[0m        }\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpjy8kxcu3.scala:13:19 ------------------------\e[0m\e[0m\n\
    \e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m0\e[0m, \e[31m1\e[0m).tailrec\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659793390
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += fibs(0) + 1\n        fibs += fibs(1) + fibs(0)\
    \ + 1\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcufn_q1i.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.drop(1).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gh3353_.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793390
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs += fibs(0)\n\
    \        fibs += fibs(1)\n        fibs(n) match {\n            case 0 => 1\n \
    \           case 1 => 1\n            case _ => fibs(n-1) + fibs(n-2) \n      \
    \  }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj_1njtci.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793390
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1,1)\n        fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0,\
    \ fibs.update(0, fibs.update(0, fibs.update(0, fibs.update(0, \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpeqf3v93k.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeqf3v93k.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer(\e[31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m \
    \  |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        var a = 1;\n        var b = 1;\n        var c = 1;\n   \
    \     var d = 1;\n        var e = 1;\n        var f = 0;\n        var g = 1;\n\
    \        var h = 1;\n        var i = 1;\n        var j = 1;\n        var k = 1;\n\
    \        var l = 1;\n        var m = 1;\n        var n = 1;\n        var o = 1;\n\
    \        var p = 1;\n        var q = 1;\n        var r = 1;\n        var s = 1;\n\
    \        var t = 1;\n        var u = 1;\n        var v = 1;\n        var w = 1;\n\
    \        var x = 1;\n        var y = 1;\n        var z = 1;\n        var a = 1;\n\
    \        var b = 1;\n        var c = 1;\n        var d = 1;\n        var e = 1;\n\
    \        var f = 0;\n        var g = 1;\n        var h = 1;\n        var i = 1;\n\
    \        var j = 1;\n        var k = 1;\n        var l = 1;\n        var m = 1;\n\
    \        var n = 1;\n        var o = 1;\n        var p = 1;\n        var q = 1;\n\
    \        var r = 1;\n        var s = 1;\n        var t = 1;\n        var u = 1;\n\
    \        var v = 1;\n        var w = 1;\n        var x = 1;\n        var y = 1;\n\
    \        var z = 1;\n        var a = 1;\n        var b = 1;\n        var c = 1;\n\
    \        var d = 1;\n        var e = 1;\n        var f = 0;\n        var g = 1;\n\
    \        var h = 1;\n        var i = 1;\n        var j = 1;\n        var k = 1;\n\
    \        var l = 1;\n        var m = 1;\n        var n = 1;\n        var o = 1;\n\
    \        var p = 1;\n        var q = 1;\n        var r = 1;\n        var s = 1;\n\
    \        var t = 1;\n        var u = 1;\n        var v = 1;\n        var w = 1;\n\
    \        var x = 1;\n        var y = 1;\n        var z = 1;\n        var a = 1;\n\
    \        var b = 1;\n        var c = 1;\n        var d = 1;\n        var e = 1;\n\
    \        var f = 0;\n        var g = 1;\n        var h = 1;\n        var i = 1;\n\
    \        var j = 1;\n        var k = 1;\n        var l = 1;\n        var m = 1;\n\
    \        var n = 1;\n        var o = 1;\n        var p = 1;\n        var q = 1;\n\
    \        var r = 1;\n        var s = 1;\n        var t = 1;\n        var u = 1;\n\
    \        var v = 1;\n        var w = 1;\n        var x = 1;\n        var y = 1;\n\
    \        var z = 1;\n        var a = 1;\n        var b = 1;\n        var c = 1;\n\
    \        var d = 1;\n        var e = 1;\n        var f = 0;\n        var g = 1;\n\
    \        var h = 1;\n        var i = 1;\n        var j = 1;\n        var k = 1;\n\
    \        var l = 1;\n        var m = 1;\n        var n = 1;\n        var o = 1;\n\
    \        var p = 1;\n        var q = 1;\n        var r = 1;\n        var s = 1;\n\
    \        var t = 1;\n        var u = 1;\n        var v = 1;\n        var w = 1;\n\
    \        var x = 1;\n\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:38:12 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m1\e[0m;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:39:12 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m1\e[0m;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:40:12 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m1\e[0m;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m1\e[0m;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m1\e[0m;\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpezmyw6cn.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36m"
  stdout: ''
  timestamp: 1659793376
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        while (fibs.size\
    \ < n) {\n            fibs += fibs.head + fibs.last\n        }\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpchn9kqhp.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 5\n        fibs += 8\n        fibs += 13\n        fibs += 21\n        fibs\
    \ += 34\n        fibs += 55\n        fibs += 89\n        fibs += 144\n       \
    \ fibs += 233\n        fibs += 377\n        fibs += 610\n        fibs += 987\n\
    \        fibs += 1597\n        fibs += 2584\n        fibs += 4181\n        fibs\
    \ += 6765\n        fibs += 10946\n        fibs += 17711\n        fibs += 28657\n\
    \        fibs += 46368\n        fibs += 75025\n        fibs += 121393\n      \
    \  fibs += 196418\n        fibs += 317811\n        fibs += 514229\n        fibs\
    \ += 832040\n        fibs += 1346269\n        fibs += 2178309\n        fibs +=\
    \ 3524578\n        fibs += 5702887\n        fibs += 9227465\n        fibs += 14930352\n\
    \        fibs += 24157817\n        fibs += 39088169\n        fibs += 63245986\n\
    \        fibs += 102334155\n        fibs += 165580141\n        fibs += 267914296\n\
    \        fibs += 433494437\n        fibs += 701408733\n        fibs += 1134903170\n\
    \        fibs += 1836311903\n        fibs += 2971215073\n        fibs += 4807526976\n\
    \        fibs += 7778742049\n        fibs += 12586269025\n        fibs += 20365011074\n\
    \        fibs += 32951280099\n        fibs += 53316291171\n        fibs += 86267571272\n\
    \        fibs += 138362330189\n        fibs += 225851433717\n        fibs += 365435296162\n\
    \        fibs += 591286729879\n        fibs += 956722026041\n        fibs += 1548008755920\n\
    \        fibs += 2504730781961\n        fibs += 4052739537881\n        fibs +=\
    \ 6557470319842\n        fibs += 10610209857723\n        fibs += 17167680177565\n\
    \        fibs += 26966537677493\n        fibs += 43336908854683\n\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvm2vyzlb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793390
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) n\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793385
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs.tail.foreach(fibs\
    \ => fibs += fibs.last)\n        fibs.take(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wtpa8gt.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs.drop(n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpntarg0vf.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793377
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += fibs(0) + 1\n        fibs += fibs(1) + fibs(0)\
    \ + 1\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcufn_q1i.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs take n foreach { x => fibs += fibs.last\
    \ + fibs.last }\n        fibs last\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpand0jsbs.scala:16:17 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpand0jsbs.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793390
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        var a : Long = 0\n        var b : Long = 1\n        var\
    \ c : Long = 1\n        var d : Long = 1\n        var i : Long = 1\n        var\
    \ j : Long = 1\n        var k : Long = 1\n        var l : Long = 1\n        var\
    \ m : Long = 1\n        var n : Long = 1\n        var o : Long = 1\n        var\
    \ p : Long = 1\n        var q : Long = 1\n        var r : Long = 1\n        var\
    \ s : Long = 1\n        var t : Long = 1\n        var u : Long = 1\n        var\
    \ v : Long = 1\n        var w : Long = 1\n        var x : Long = 1\n        var\
    \ y : Long = 1\n        var z : Long = 1\n        var a : Long = 1\n        var\
    \ b : Long = 1\n        var c : Long = 1\n        var d : Long = 1\n        var\
    \ i : Long = 1\n        var j : Long = 1\n        var k : Long = 1\n        var\
    \ l : Long = 1\n        var m : Long = 1\n        var n : Long = 1\n        var\
    \ o : Long = 1\n        var p : Long = 1\n        var q : Long = 1\n        var\
    \ r : Long = 1\n        var s : Long = 1\n        var t : Long = 1\n        var\
    \ u : Long = 1\n        var v : Long = 1\n        var w : Long = 1\n        var\
    \ x : Long = 1\n        var y : Long = 1\n        var z : Long = 1\n        var\
    \ a : Long = 1\n        var b : Long = 1\n        var c : Long = 1\n        var\
    \ d : Long = 1\n        var i : Long = 1\n        var j : Long = 1\n        var\
    \ k : Long = 1\n        var l : Long = 1\n        var m : Long = 1\n        var\
    \ n : Long = 1\n        var o : Long = 1\n        var p : Long = 1\n        var\
    \ q : Long = 1\n        var r : Long = 1\n        var s : Long = 1\n        var\
    \ t : Long = 1\n        var u : Long = 1\n        var v : Long = 1\n        var\
    \ w : Long = 1\n        var x : Long = 1\n        var y : Long = 1\n        var\
    \ z : Long = 1\n        var a : Long = 1\n        var b : Long = 1\n        var\
    \ c : Long = 1\n        var d : Long = 1\n        var i : Long = 1\n        var\
    \ j : Long = 1\n        var k : Long = 1\n        var l : Long = 1\n        var\
    \ m : Long = 1\n        var n : Long = 1\n        var o : Long = 1\n        var\
    \ p : Long = 1\n        var q : Long = 1\n        var r : Long = 1\n        var\
    \ s : Long = 1\n        var t : Long = 1\n        var u : Long = 1\n        var\
    \ v : Long = 1\n        var w : Long = 1\n        var x : Long = 1\n        var\
    \ y : Long = 1\n        var z\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4odudcs5.scala:100:4 ---------------------------\e\
    [0m\e[0m\n\e[31m100 |\e[0m    }\n\e[31m\e[31m    |\e[0m    ^\e[0m\n\e[31m    |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4odudcs5.scala:34:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m34 |\e[0m        \e[33mvar\e[0m\
    \ \e[36ma\e[0m : \e[35mLong\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp4odudcs5.scala:35:12 ---------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mb is already defined as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4odudcs5.scala:36:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m36 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mc\e[0m : \e[35mLong\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined as \e[33mvariable\e\
    [0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp4odudcs5.scala:37:12 ---------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0md is already defined as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4odudcs5.scala:38:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m38 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mi\e[0m : \e[35mLong\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mi is "
  stdout: ''
  timestamp: 1659793387
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        var fib : Long = 1\n        var fib2 : Long = 1\n      \
    \  var fib3 : Long = 1\n        var fib4 : Long = 1\n        var fib5 : Long =\
    \ 1\n        var fib6 : Long = 1\n        var fib7 : Long = 1\n        var fib8\
    \ : Long = 1\n        var fib9 : Long = 1\n        var fib10 : Long = 1\n    \
    \    var fib11 : Long = 1\n        var fib12 : Long = 1\n        var fib13 : Long\
    \ = 1\n        var fib14 : Long = 1\n        var fib15 : Long = 1\n        var\
    \ fib16 : Long = 1\n        var fib17 : Long = 1\n        var fib18 : Long = 1\n\
    \        var fib19 : Long = 1\n        var fib20 : Long = 1\n        var fib21\
    \ : Long = 1\n        var fib22 : Long = 1\n        var fib23 : Long = 1\n   \
    \     var fib24 : Long = 1\n        var fib25 : Long = 1\n        var fib26 :\
    \ Long = 1\n        var fib27 : Long = 1\n        var fib28 : Long = 1\n     \
    \   var fib29 : Long = 1\n        var fib30 : Long = 1\n        var fib31 : Long\
    \ = 1\n        var fib32 : Long = 1\n        var fib33 : Long = 1\n        var\
    \ fib34 : Long = 1\n        var fib35 : Long = 1\n        var fib36 : Long = 1\n\
    \        var fib37 : Long = 1\n        var fib38 : Long = 1\n        var fib39\
    \ : Long = 1\n        var fib40 : Long = 1\n        var fib41 : Long = 1\n   \
    \     var fib42 : Long = 1\n        var fib43 : Long = 1\n        var fib44 :\
    \ Long = 1\n        var fib45 : Long = 1\n        var fib46 : Long = 1\n     \
    \   var fib47 : Long = 1\n        var fib48 : Long = 1\n        var fib49 : Long\
    \ = 1\n        var fib50 : Long = 1\n        var fib51 : Long = 1\n        var\
    \ fib52 : Long = 1\n        var fib53 : Long = 1\n        var fib54 : Long = 1\n\
    \        var fib55 : Long = 1\n        var fib56 : Long = 1\n        var fib57\
    \ : Long = 1\n        var fib58 : Long = 1\n        var fib59 : Long = 1\n   \
    \     var fib60 : Long = 1\n        var fib61 : Long = 1\n        var fib62 :\
    \ Long = 1\n        var fib63 : Long = 1\n        var fib64 : Long = 1\n     \
    \   var fib65 : Long = 1\n        var fib66 : Long = 1\n        var fib67 : Long\
    \ = 1\n        var fib68 : Long = 1\n        var fib69 : Long = 1\n        var\
    \ fib70 : Long = 1\n        var fib71 : Long = 1\n        var fib72 : Long = 1\n\
    \        var fib73 : Long = 1\n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgyz1kkvo.scala:86:5\
    \ ---------------------\e[0m\e[0m\n\e[31m86 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793392
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(0, 1)\n        fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0,\
    \ fibs.update(1, fibs.update(0, fibs.update(1, fibs.update(0, fib\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyfq58q42.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyfq58q42.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer(\e[31m0\e[0m, \e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793390
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 4\n\
    \        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs += 8\n\
    \        fibs += 9\n        fibs += 10\n        fibs.take(n).last\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnsti3qj2.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793390
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        for (i <- 1\
    \ to n) {\n            fibs += fibs.last\n        }\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaeg00t_4.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpaeg00t_4.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793381
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1,1)\n        fibs += fibs.head\n\
    \        fibs += fibs.tail.head\n        fibs.take(n).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps3vzh84k.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793391
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs take n foreach { x => fibs += fibs(x -\
    \ 1) + fibs(x - 2) }\n        fibs last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp14jlqqsl.scala:16:17 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        fibs last\n\e[31m\e[31m   |\e[0m            \
    \     ^\e[0m\n\e[31m   |\e[0m                 expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp14jlqqsl.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793366
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4unq9plj.scala:17)\n\tat Problem.main(tmp4unq9plj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) {\n            return n\n        }\n\
    \        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs += 0\n     \
    \   fibs += 1\n        fibs ++= fibs.drop(1).zip(fibs.drop(2))\n        fibs(n)\
    \ match {\n            case 0 => 0\n            case 1 => 1\n            case\
    \ _ => fibs(n-1) + fibs(n-2)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyte0gxp3.scala:15:19 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793391
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n).last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpokwnxian.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793367
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4unq9plj.scala:17)\n\tat Problem.main(tmp4unq9plj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs.take(n).foldLeft(0)\
    \ { (acc, x) =>\n            val y = fibs.last\n            fibs = fibs.dropRight(1)\n\
    \            acc + x + y\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplnpicblw.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793391
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(0,1)\n        fibs += fibs(0)\n\
    \        fibs += fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n \
    \       fibs += fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n  \
    \      fibs += fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n   \
    \     fibs += fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n    \
    \    fibs += fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n     \
    \   fibs += fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n      \
    \  fibs += fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n       \
    \ fibs += fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n        fibs\
    \ += fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n        fibs +=\
    \ fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n\
    \        fibs += fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n \
    \       fibs += fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n  \
    \      fibs += fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n   \
    \     fibs += fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n    \
    \    fibs += fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n     \
    \   fibs += fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n      \
    \  fibs += fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n       \
    \ fibs += fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n        fibs\
    \ += fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n        fibs +=\
    \ fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n\
    \        fibs += fibs(1)\n        fibs += fibs(0)\n        fibs += fibs(1)\n \
    \       fibs += fibs(0)\n        fibs += fibs(1)\n        fibs += fibs(0)\n  \
    \      fibs += fibs(1)\n        fibs += fibs(0)\n        fibs += fib\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk5q930o9.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793392
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        var fib_n = 0\n        var fib_n1 = 1\n        var fib_n2\
    \ = 1\n        var fib_n3 = 1\n        var fib_n4 = 1\n        var fib_n5 = 1\n\
    \        var fib_n6 = 1\n        var fib_n7 = 1\n        var fib_n8 = 1\n    \
    \    var fib_n9 = 1\n        var fib_n10 = 1\n        var fib_n11 = 1\n      \
    \  var fib_n12 = 1\n        var fib_n13 = 1\n        var fib_n14 = 1\n       \
    \ var fib_n15 = 1\n        var fib_n16 = 1\n        var fib_n17 = 1\n        var\
    \ fib_n18 = 1\n        var fib_n19 = 1\n        var fib_n20 = 1\n        var fib_n21\
    \ = 1\n        var fib_n22 = 1\n        var fib_n23 = 1\n        var fib_n24 =\
    \ 1\n        var fib_n25 = 1\n        var fib_n26 = 1\n        var fib_n27 = 1\n\
    \        var fib_n28 = 1\n        var fib_n29 = 1\n        var fib_n30 = 1\n \
    \       var fib_n31 = 1\n        var fib_n32 = 1\n        var fib_n33 = 1\n  \
    \      var fib_n34 = 1\n        var fib_n35 = 1\n        var fib_n36 = 1\n   \
    \     var fib_n37 = 1\n        var fib_n38 = 1\n        var fib_n39 = 1\n    \
    \    var fib_n40 = 1\n        var fib_n41 = 1\n        var fib_n42 = 1\n     \
    \   var fib_n43 = 1\n        var fib_n44 = 1\n        var fib_n45 = 1\n      \
    \  var fib_n46 = 1\n        var fib_n47 = 1\n        var fib_n48 = 1\n       \
    \ var fib_n49 = 1\n        var fib_n50 = 1\n        var fib_n51 = 1\n        var\
    \ fib_n52 = 1\n        var fib_n53 = 1\n        var fib_n54 = 1\n        var fib_n55\
    \ = 1\n        var fib_n56 = 1\n        var fib_n57 = 1\n        var fib_n58 =\
    \ 1\n        var fib_n59 = 1\n        var fib_n60 = 1\n        var fib_n61 = 1\n\
    \        var fib_n62 = 1\n        var fib_n63 = 1\n        var fib_n64 = 1\n \
    \       var fib_n65 = 1\n        var fib_n66 = 1\n        var fib_n67 = 1\n  \
    \      var fib_n68 = 1\n        var fib_n69 = 1\n        var fib_n70 = 1\n   \
    \     var fib_n\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphw_z8hsf.scala:84:4 ----------------------------\e\
    [0m\e[0m\n\e[31m84 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmphw_z8hsf.scala:84:5 ---------------------\e[0m\e[0m\n\e[31m84 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793392
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 0) 0\n        else if (n == 1) 1\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793393
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwif6hrlx.scala:16)\n\tat Problem.main(tmpwif6hrlx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793368
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1) {\n            return n\n        }\n\
    \        else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1, 2)\n        fibs += fibs.head\n\
    \        fibs += fibs.last\n        fibs.drop(n - 1).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcnabwqph.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793392
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 4\n        fibs += 5\n        fibs += 6\n        fibs += 7\n        fibs\
    \ += 8\n        fibs += 9\n        fibs += 10\n        fibs.take(n)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5ekre8eb.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793371
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n   \
    \ // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n - 2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnbp6flvx.scala:16)\n\tat Problem.main(tmpnbp6flvx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793369

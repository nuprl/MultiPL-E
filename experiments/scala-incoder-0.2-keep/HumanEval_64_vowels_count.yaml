name: HumanEval_64_vowels_count
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function vowels_count which takes a string representing\n    //\
  \ a word as input and returns the number of vowels in the string.\n    // Vowels\
  \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    // vowel, but\
  \ only when it is at the end of the given word.\n    // Example:\n    // >>> vowels_count(\"\
  abcde\")\n    // 2\n    // >>> vowels_count(\"ACEDY\")\n    // 3\n    def vowelsCount(s\
  \ : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
  )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
  key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
  keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
  ACEDY\")) == (3l));\n    }\n\n}\n"
completions: ["        val vowels = \"aeiou\"\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        var vowels = mutable.Set[Char]()\n\
    \        var vowelsCount = 0\n        for (c <- s) {\n            if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                vowels +=\
    \ c\n            }\n        }\n        for (c <- vowels) {\n            if (c\
    \ == 'y') {\n                vowelsCount += 1\n            }\n        }\n    \
    \    vowelsCount", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"\
    u\")\n        var count = 0\n        for (i <- 0 until s.length)\n           \
    \ if (vowels(i) == s(i))\n                count += 1\n        count", "      \
    \  var vowels = \"\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                vowels += s.charAt(i)\n\
    \            else\n                if (vowels.length == 0)\n                 \
    \   count += 1\n                else\n                    if (vowels.charAt(0)\
    \ == 'y')\n                        count += 1\n                    else\n    \
    \                    vowels = \"\"\n        count", "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n\
    \        var count = 0\n        for (i <- 0 until s.length)\n            if (vowels(s(i)))\n\
    \                count += 1\n        count", "        val vowels = Set(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(vowels)\n   \
    \     val lastVowel = s.last\n        if (lastVowel == \"y\") {\n            vowelsCount\
    \ + 1\n        } else {\n            vowelsCount\n        }", "        var count\
    \ = 0\n        for(i <- 0 until s.length)\n            if(s.charAt(i) == 'a' ||\
    \ s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u')\n                count += 1\n        return count", "        var vowels\
    \ = 0 \n        for(i <- 0 until s.length){\n            if(s.charAt(i) == 'a'\
    \ || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u'){\n                vowels += 1\n            }\n        }\n        return\
    \ vowels", "        val vowels = \"aeiou\"\n        var count = 0\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n   \
    \             count += 1\n        count", "        val vowels = Array(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c =>\
    \ vowels.contains(c)).length\n        vowelsCount", "        val vowels = \"aeiou\"\
    \n        val vowelsCount = s.count(vowels.toCharArray)\n        vowelsCount",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(x => vowels.contains(x)).length\n        vowelsCount",
  "        val vowels = \"aeiou\"\n        var count = 0\n        for(i <- 0 until\
    \ s.length)\n            if(vowels.contains(s.charAt(i)))\n                count\
    \ += 1\n        count", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n \
    \       vowelsCount", "        val vowels = \"aeiouAEIOU\".toCharArray\n     \
    \   val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).size\n   \
    \     vowelsCount", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"\
    u\")\n        val vowels_count = s.toCharArray.filter(c => vowels.contains(c)).size\n\
    \        vowels_count", "        val vowels = \"aeiou\"\n        var count = 0\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                count += 1\n        count", "        val vowels = \"aeiouAEIOU\"\
    \n        var count = 0\n        for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ != -1)\n                count += 1\n        count", "        val vowels = \"\
    aeiouAEIOU\"\n        val vowelsCount = s.count(vowels.indexOf(_))\n        vowelsCount"]
stop_tokens:
- "\n    }\n"

name: HumanEval_64_vowels_count
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function vowels_count which takes a string representing\n    //\
  \ a word as input and returns the number of vowels in the string.\n    // Vowels\
  \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    // vowel, but\
  \ only when it is at the end of the given word.\n    // Example:\n    // >>> vowels_count(\"\
  abcde\")\n    // 2\n    // >>> vowels_count(\"ACEDY\")\n    // 3\n    def vowelsCount(s\
  \ : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
  )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
  key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
  keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
  ACEDY\")) == (3l));\n    }\n\n}\n"
completions: ["        val vowels = \"aeiou\"\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        var vowels = mutable.Set[Char]()\n\
    \        var vowelsCount = 0\n        for (c <- s) {\n            if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                vowels +=\
    \ c\n            }\n        }\n        for (c <- vowels) {\n            if (c\
    \ == 'y') {\n                vowelsCount += 1\n            }\n        }\n    \
    \    vowelsCount", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"\
    u\")\n        var count = 0\n        for (i <- 0 until s.length)\n           \
    \ if (vowels(i) == s(i))\n                count += 1\n        count", "      \
    \  var vowels = \"\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                vowels += s.charAt(i)\n\
    \            else\n                if (vowels.length == 0)\n                 \
    \   count += 1\n                else\n                    if (vowels.charAt(0)\
    \ == 'y')\n                        count += 1\n                    else\n    \
    \                    vowels = \"\"\n        count", "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n\
    \        var count = 0\n        for (i <- 0 until s.length)\n            if (vowels(s(i)))\n\
    \                count += 1\n        count", "        val vowels = Set(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(vowels)\n   \
    \     val lastVowel = s.last\n        if (lastVowel == \"y\") {\n            vowelsCount\
    \ + 1\n        } else {\n            vowelsCount\n        }", "        var count\
    \ = 0\n        for(i <- 0 until s.length)\n            if(s.charAt(i) == 'a' ||\
    \ s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u')\n                count += 1\n        return count", "        var vowels\
    \ = 0 \n        for(i <- 0 until s.length){\n            if(s.charAt(i) == 'a'\
    \ || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u'){\n                vowels += 1\n            }\n        }\n        return\
    \ vowels", "        val vowels = \"aeiou\"\n        var count = 0\n        for\
    \ (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n   \
    \             count += 1\n        count", "        val vowels = Array(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c =>\
    \ vowels.contains(c)).length\n        vowelsCount", "        val vowels = \"aeiou\"\
    \n        val vowelsCount = s.count(vowels.toCharArray)\n        vowelsCount",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(x => vowels.contains(x)).length\n        vowelsCount",
  "        val vowels = \"aeiou\"\n        var count = 0\n        for(i <- 0 until\
    \ s.length)\n            if(vowels.contains(s.charAt(i)))\n                count\
    \ += 1\n        count", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n \
    \       vowelsCount", "        val vowels = \"aeiouAEIOU\".toCharArray\n     \
    \   val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).size\n   \
    \     vowelsCount", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"\
    u\")\n        val vowels_count = s.toCharArray.filter(c => vowels.contains(c)).size\n\
    \        vowels_count", "        val vowels = \"aeiou\"\n        var count = 0\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                count += 1\n        count", "        val vowels = \"aeiouAEIOU\"\
    \n        var count = 0\n        for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ != -1)\n                count += 1\n        count", "        val vowels = \"\
    aeiouAEIOU\"\n        val vowelsCount = s.count(vowels.indexOf(_))\n        vowelsCount",
  "        var vowels = 0 // number of vowels\n        var vowels_count = 0 // number\
    \ of vowels found\n        var vowels_count_in_word = 0 // number of vowels found\
    \ in a word\n        var vowels_count_in_sentence = 0 // number of vowels found\
    \ in a sentence\n        var vowels_count_in_sentence_word = 0 // number of vowels\
    \ found in a sentence in a word\n        var vowels_count_in_sentence_sentence\
    \ = 0 // number of vowels found in a sentence in a sentence\n        var vowels_count_in_sentence_sentence_word\
    \ = 0 // number of vowels found in a sentence in a sentence in a word\n      \
    \  var vowels_count_in_sentence_sentence_sentence = 0 // number of vowels found\
    \ in a sentence in a sentence in a sentence\n        var vowels_count_in_sentence_sentence_sentence_word\
    \ = 0 // number of vowels found in a sentence in a sentence in a sentence in a\
    \ word\n        var vowels_count_in_sentence_sentence_sentence_sentence = 0 //\
    \ number of vowels found in a sentence in a sentence in a sentence in a sentence\n\
    \        var vowels_count_in_sentence_sentence_sentence_sentence_word = 0 // number\
    \ of vowels found in a sentence in a sentence in a sentence in a sentence in a\
    \ word\n        var vowels_count_in_sentence_sentence_sentence_sentence_sentence\
    \ = 0 // number of vowels found in a sentence in a sentence in a sentence in a\
    \ sentence in a sentence\n        var vowels_count_in_sentence_sentence_sentence_sentence_sentence_word\
    \ = 0 // number of vowels found in a sentence in a sentence in a sentence in a\
    \ sentence in a sentence in a word\n        var vowels_count_in_sentence_sentence_sentence_sentence_sentence_sentence\
    \ = 0 // number of vowels found in a sentence in a sentence in a sentence in a\
    \ sentence in a sentence in a sentence\n        var vowels_count_in_sentence_sentence_sentence_sentence_sentence_sentence_word\
    \ = 0 // number of vowels found in a sentence in a sentence in a sentence in a\
    \ sentence in a sentence in a sentence in a word\n        var vowels_count_in_sentence_sentence_sentence_sentence_sentence_sentence_sentence\
    \ = 0 // number of vowels found in a sentence in a sentence in a sentence in a\
    \ sentence in a sentence in a sentence in a sentence in a sentence\n        var\
    \ vowels_count_in_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word\
    \ = 0 // number of vowels found in a sentence in a sentence in a sentence in a\
    \ sentence in a sentence in a sentence in a sentence in a word\n        var vowels_count_in_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence\
    \ = 0 // number of vowels found in a sentence in a sentence in a sentence in a\
    \ sentence in a sentence in a sentence in a sentence in a sentence in a sentence\n\
    \        var vowels_count_in_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word\
    \ = 0 // number of vowels found in a sentence in a sentence in a sentence in a\
    \ sentence in a sentence in a sentence in a sentence in a sentence in a sentence\
    \ in a word\n        var vowels_count_in_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence\
    \ = 0 // number of vowels found in a sentence in a sentence in a sentence in a\
    \ sentence in a sentence in a sentence in a sentence in a sentence in a sentence\
    \ in a sentence\n", "        var count = 0\n        for(i <- 0 until s.length)\n\
    \            if(s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       return count", "        val vowels = \"aeiouAEIOU\"\n        val vowels_count\
    \ = s.toCharArray.filter(c => vowels.contains(c.toString)).size\n        vowels_count",
  "        val vowels = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0\
    \ until s.length)\n            if (vowels.indexOf(s.charAt(i)) >= 0)\n       \
    \         count += 1\n        count", "        val vowels = \"aeiou\"\n      \
    \  val vowelsCount = s.toCharArray.filter(c => vowels.contains(c.toString)).size\n\
    \        vowelsCount", "        val vowels = \"aeiou\"\n        var count = 0\n\
    \        var lastVowel = vowels.last\n        var lastVowelIndex = s.length -\
    \ 1\n        for(i <- 0 until s.length){\n            if(vowels(i) == lastVowel){\n\
    \                count += 1\n                lastVowelIndex = i\n            }\n\
    \        }\n        if(lastVowelIndex == s.length - 1){\n            count +=\
    \ 1\n        }\n        count", "        var count = 0\n        var vowels = \"\
    aeiou\"\n        var lastVowel = vowels.last\n        var lastVowelIndex = s.length\
    \ - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex =\
    \ s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = ", "        val vowels = \"aeiouAEIOU\"\n        val vowelsCount = s.count(vowels.indexOf(_))\n\
    \        vowelsCount", "        val vowels = \"aeiou\"\n        val vowelsCount\
    \ = s.count(vowels)\n        val vowelsCount2 = s.count(vowels.toUpperCase)\n\
    \        val vowelsCount3 = s.count(vowels.toLowerCase)\n        vowelsCount2\
    \ + vowelsCount3", "        val vowels = \"aeiouAEIOU\".toSet\n        val vowelsCount\
    \ = s.filter(x => vowels.contains(x)).length\n        vowelsCount", "        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        return count", "  \
    \      var count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        return count", "  \
    \      val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount",
  "        var vowels = mutable.Set[Char]()\n        var count = 0\n        for (i\
    \ <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n      \
    \          count += 1\n            else\n                vowels += s.charAt(i)\n\
    \        count", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n\
    \        val vowelsCount = s.filter(c => vowels.contains(c)).length\n        vowelsCount",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(x => vowels.contains(x)).size\n        vowelsCount",
  "        val vowels = \"aeiouAEIOU\".toSet\n        var count = 0\n        for (i\
    \ <- 0 until s.length)\n            if (vowels(s(i)))\n                count +=\
    \ 1\n        count", "        val vowels = \"aeiouAEIOU\"\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c.toString)).size\n        vowelsCount",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.count(vowels)\n        vowelsCount", "        val vowels = \"aeiou\"\n \
    \       var count = 0\n        for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                count += 1\n        count", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).length\n\
    \        vowelsCount", "        var vowels = 0 \n        var vowels_count = 0\n\
    \        var i = 0\n        while (i < s.length){\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u'){\n                vowels = vowels + 1\n            }\n \
    \           i = i + 1\n        }\n        vowels_count = vowels\n        return\
    \ vowels_count", "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n\
    \        val vowelsCount = mutable.Map[Char,Long]()\n        for (c <- s) {\n\
    \            if (vowels.contains(c)) {\n                vowelsCount(c) = vowelsCount(c)\
    \ + 1\n            }\n        }\n        vowelsCount.values.sum", "        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = Array('a','e','i','o','u')\n\
    \        val vowelsCount = s.filter(x => vowels.contains(x)).length\n        vowelsCount",
  "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount\
    \ = mutable.Map[Char, Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount(c) = vowelsCount(c) + 1\n            }\n    \
    \    }\n        vowelsCount.values.sum", "        val vowels = \"aeiou\"\n   \
    \     val vowelsCount = s.count(vowels)\n        val lastVowel = s.last.charAt(s.length\
    \ - 1)\n        if (vowelsCount == 0 && lastVowel == 'y') {\n            vowelsCount\
    \ + 1\n        } else {\n            vowelsCount\n        }", "        val vowels\
    \ = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum",
  "        val vowels = Set('a','e','i','o','u')\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).size\n        vowelsCount", "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n\
    \        val vowelsCount = mutable.Map[Char,Long]()\n        for (c <- s) {\n\
    \            if (vowels.contains(c)) {\n                vowelsCount(c) = vowelsCount(c)\
    \ + 1\n            }\n        }\n        vowelsCount.values.sum", "        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.toCharArray.filter(c => vowels.contains(c)).size\n        vowels_count",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c.toString)).size\n        vowelsCount",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (vowels(i) == s(i))\
    \ {\n                count += 1\n            }\n        count", "        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i) == 'a'\
    \ || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u')\n                count += 1\n        return count", "        val vowels\
    \ = Array('a', 'e', 'i', 'o', 'u')\n        val vowels_count = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowels_count", "        val vowels =\
    \ Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count = s.toCharArray.filter(x\
    \ => vowels.contains(x)).size\n        vowels_count", "        var vowels = mutable.Set[Char]()\n\
    \        var count = 0\n        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                count += 1\n            else\n                vowels += s.charAt(i)\n\
    \        count", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val vowels_count = s.length\n        val vowels_count_in_string = vowels.count(s\
    \ => s.equals(s))\n        vowels_count_in_string", "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n\
    \        val vowels_count = mutable.Map[Char, Long]()\n        for (c <- s) {\n\
    \            if (vowels.contains(c)) {\n                vowels_count(c) = vowels_count(c)\
    \ + 1\n            }\n        }\n        vowels_count.values.sum", "        val\
    \ vowels = \"aeiouAEIOU\".toCharArray\n        val count = s.length\n        val\
    \ vowelsCount = mutable.ArrayBuffer.empty[Char]\n        for (i <- 0 until count)\
    \ {\n            if (vowels(i) == s(i)) {\n                vowelsCount += s(i)\n\
    \            }\n        }\n        vowelsCount.length", "        val vowels =\
    \ Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n        for (i\
    \ <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n      \
    \          count += 1\n        count ", "        val vowels = Array(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c =>\
    \ vowels.contains(c.toString)).size\n        vowelsCount", "        val vowels\
    \ = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).size\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowelsCount", "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n\
    \        val vowelsCount = mutable.Map[Char,Long]()\n        for (c <- s) {\n\
    \            if (vowels.contains(c)) {\n                vowelsCount(c) = vowelsCount(c)\
    \ + 1\n            }\n        }\n        vowelsCount.values.sum", "        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for (i <- 0 until s.length)\n            if (vowels(i) == s(i))\n    \
    \            count += 1\n        count", "        val vowels = Set(\"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n\
    \        vowelsCount", "        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       return count", "        val vowels = \"aeiouAEIOU\".toSet\n        val\
    \ vowelsCount = s.toList.filter(x => vowels.contains(x)).size\n        vowelsCount",
  "        val vowels = \"aeiouAEIOU\"\n        val vowelsCount = s.count(vowels)\n\
    \        vowelsCount", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       s.length", "        val vowels = \"aeiouAEIOU\".toCharArray\n        val\
    \ vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).size\n        vowelsCount",
  "        var count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        return count", "  \
    \      val vowels = \"aeiou\"\n        var count = 0\n        for(i <- 0 until\
    \ s.length){\n            if(vowels.contains(s.charAt(i))){\n                count\
    \ += 1\n            }\n        }\n        count", "        val vowels = \"aeiouAEIOU\"\
    \n        var count = 0\n        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                count += 1\n        count", "        var count = 0\n        for\
    \ (i <- 0 until s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i) ==\
    \ 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n   \
    \             count += 1\n        return count", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n\
    \        vowelsCount", "        val vowels = \"aeiouAEIOU\"\n        val vowels_count\
    \ = s.count(vowels.indexOf(_))\n        vowels_count", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowelsCount", "        var count = 0\n\
    \        for (i <- 0 until s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n\
    \                count += 1\n        return count", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n\
    \        vowelsCount", "        var vowels = mutable.Set[Char]()\n        for(i\
    \ <- 0 until s.length)\n            if(s.charAt(i) == 'a' || s.charAt(i) == 'e'\
    \ || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n       \
    \         vowels += s.charAt(i)\n        vowels.toSeq.length", "        var count\
    \ = 0\n        var vowels = \"aeiou\"\n        var lastVowel = vowels.last\n \
    \       var lastChar = s.last\n        while (lastChar != lastVowel) {\n     \
    \       if (lastChar == s.last)\n                count += 1\n            lastChar\
    \ = s.last\n        }\n        count", "        val vowels = Array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        val vowels = \"aeiouAEIOU\"\n        var count\
    \ = 0\n        for(i <- 0 until s.length){\n            val c = s.charAt(i)\n\
    \            if(vowels.indexOf(c) != -1){\n                count += 1\n      \
    \      }\n        }\n        count", "        var count = 0\n        for(i <-\
    \ 0 until s.length)\n            if(s.charAt(i) == 'a' || s.charAt(i) == 'e' ||\
    \ s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n          \
    \      count += 1\n        return count", "        val vowels = \"aeiouAEIOU\"\
    .toCharArray\n        val vowelsCount = mutable.HashSet[Char]()\n        for (c\
    \ <- s) {\n            if (vowels.contains(c)) {\n                vowelsCount\
    \ += c\n            }\n        }\n        vowelsCount.size", "        val vowels\
    \ = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for(i <- 0 until s.length){\n            vowelsCount += vowels(i)\n \
    \       }\n        vowelsCount.size", "        var count = 0\n        var vowels\
    \ = \"aeiou\"\n        var lastVowel = vowels.last\n        for (i <- 0 until\
    \ s.length)\n            if (vowels.contains(s.charAt(i))) {\n               \
    \ if (lastVowel == s.charAt(i)) {\n                    count += 1\n          \
    \      }\n                lastVowel = s.charAt(i)\n            }\n        count",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c)).size\n        vowelsCount",
  "        var count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        return count", "  \
    \      val vowels = Array('a','e','i','o','u')\n        var count = 0\n      \
    \  for(i <- 0 until s.length)\n            if(vowels(i) == s(i))\n           \
    \     count += 1\n        count", "        val vowels = Array(\"a\", \"e\", \"\
    i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).size\n\
    \        vowelsCount", "        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       count += s.length - vowelsCount(s.substring(s.length - 1))\n        count",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (vowels(s(i)))\n  \
    \              count += 1\n        count", "        val vowels = Array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n        val words = s.split(\"\
    \ \")\n        for (word <- words) {\n            val index = word.indexOf(\"\
    a\")\n            if (index != -1) {\n                count += 1\n           \
    \ }\n        }\n        count", "        val vowels = \"aeiouAEIOU\"\n       \
    \ var count = 0\n        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                count += 1\n        count", "        val vowels = Array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c.toString)).size\n        vowelsCount", "        val vowels\
    \ = \"aeiouAEIOU\".toSet\n        val vowelsCount = s.toCharArray.filter(c =>\
    \ vowels.contains(c)).length\n        vowelsCount", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n\
    \        vowelsCount", "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n\
    \        val vowelsCount = mutable.HashMap[Char, Int]()\n        for (c <- s)\
    \ {\n            if (vowels.contains(c)) {\n                vowelsCount(c) = vowelsCount(c)\
    \ + 1\n            }\n        }\n        vowelsCount.values.sum", "        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = s.count(vowels)\n        vowelsCount",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount",
  "        var count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        return count", "  \
    \      val vowels = \"aeiouAEIOU\"\n        val vowels_count = s.count(vowels.indexOf)\n\
    \        vowels_count", "        var count = 0\n        for(i <- 0 until s.length)\n\
    \            if(s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       for(i <- 0 until s.length)\n            if(s.charAt(i) == 'y')\n     \
    \           count += 1\n        return count", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = mutable.Map[String,\
    \ Long]()\n        for (i <- 0 until s.length)\n            if (vowels(i) == s(i))\n\
    \                vowelsCount(s(i)) = vowelsCount(s(i)) + 1\n        vowelsCount.values.sum",
  "        val vowels = \"aeiouAEIOU\"\n        val vowelsCount = s.count(vowels.indexOf)\n\
    \        vowelsCount", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"\
    u\")\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       return count", "        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       s.length", "        var count = 0\n        var vowels = \"aeiou\"\n  \
    \      var lastVowel = vowels.last\n        var lastChar = s.last\n        var\
    \ lastCharIndex = s.length - 1\n        for(i <- 0 until s.length){\n        \
    \    if(vowels.contains(s.charAt(i))){\n                count += 1\n         \
    \   }\n            if(vowels.contains(s.charAt(i)) && lastChar == s.charAt(i)\
    \ && lastCharIndex == i){\n                count += 1\n            }\n       \
    \     if(vowels.contains(s.charAt(i)) && lastChar == s.charAt(i) && lastCharIndex\
    \ != i){\n                count += 1\n            }\n            if(vowels.contains(s.charAt(i))\
    \ && lastCharIndex == i){\n                count += 1\n            }\n       \
    \ }\n        return count", "        val vowels = Set(\"a\", \"e\", \"i\", \"\
    o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       return count", "        val vowels = \"aeiou\"\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount",
  "        var count = 0\n        for(i <- 0 until s.length)\n            if(s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        return count", "  \
    \      val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.count(c => vowels.contains(c))\n        vowelsCount", "        val vowels\
    \ = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = mutable.HashMap[String,\
    \ Long]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n   \
    \             vowelsCount.put(c, vowelsCount.getOrElse(c, 0L) + 1)\n         \
    \   }\n        }\n        vowelsCount.values.sum", "        val vowels = Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n\
    \        vowelsCount", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n \
    \       vowelsCount", "        var vowelCount = 0\n        var vowelCount2 = 0\n\
    \        var vowelCount3 = 0\n        var vowelCount4 = 0\n        var vowelCount5\
    \ = 0\n        var vowelCount6 = 0\n        var vowelCount7 = 0\n        var vowelCount8\
    \ = 0\n        var vowelCount9 = 0\n        var vowelCount10 = 0\n        var\
    \ vowelCount11 = 0\n        var vowelCount12 = 0\n        var vowelCount13 = 0\n\
    \        var vowelCount14 = 0\n        var vowelCount15 = 0\n        var vowelCount16\
    \ = 0\n        var vowelCount17 = 0\n        var vowelCount18 = 0\n        var\
    \ vowelCount19 = 0\n        var vowelCount20 = 0\n        var vowelCount21 = 0\n\
    \        var vowelCount22 = 0\n        var vowelCount23 = 0\n        var vowelCount24\
    \ = 0\n        var vowelCount25 = 0\n        var vowelCount26 = 0\n        var\
    \ vowelCount27 = 0\n        var vowelCount28 = 0\n        var vowelCount29 = 0\n\
    \        var vowelCount30 = 0\n        var vowelCount31 = 0\n        var vowelCount32\
    \ = 0\n        var vowelCount33 = 0\n        var vowelCount34 = 0\n        var\
    \ vowelCount35 = 0\n        var vowelCount36 = 0\n        var vowelCount37 = 0\n\
    \        var vowelCount38 = 0\n        var vowelCount39 = 0\n        var vowelCount40\
    \ = 0\n        var vowelCount41 = 0\n        var vowelCount42 = 0\n        var\
    \ vowelCount43 = 0\n        var vowelCount44 = 0\n        var vowelCount45 = 0\n\
    \        var vowelCount46 = 0\n        var vowelCount47 = 0\n        var vowelCount48\
    \ = 0\n        var vowelCount49 = 0\n        var vowelCount50 = 0\n        var\
    \ vowelCount51 = 0\n        var vowelCount52 = 0\n        var vowelCount53 = 0\n\
    \        var vowelCount54 = 0\n        var vowelCount55 = 0\n        var vowelCount56\
    \ = 0\n        var vowelCount57 = 0\n        var vowelCount58 = 0\n        var\
    \ vowelCount59 = 0\n        var vowelCount60 = 0\n        var vowelCount61 = 0\n\
    \        var vowelCount62 = 0\n        var vowelCount63 = 0\n        var vowelCount64\
    \ = 0\n        var vowelCount65 = 0\n        var vowelCount66 = 0\n        var\
    \ vowelCount67 = 0\n        var vowelCount68 = 0\n        var vowelCount69 = 0\n\
    \        var vowelCount70 = 0\n        var vowelCount71 = 0\n        var vowelCount72\
    \ = 0\n        var vowelCount73 = 0\n        var vowelCount74 = 0\n        var\
    \ vowelCount75 = 0\n        var vowelCount76 = 0\n        var vowelCount77 = 0\n\
    \        var vowelCount78 = 0\n        var vowelCount79 = 0\n        var vowelCount80\
    \ = 0\n        var vowelCount81 = 0\n        var vowelCount82 = 0\n        var\
    \ vowelCount83 = 0\n        var vowelCount84 = 0\n        var vowelCount85 = 0\n\
    \        var vowelCount", "        val vowels = \"aeiou\"\n        var count =\
    \ 0\n        var lastChar = s.charAt(s.length - 1)\n        if (lastChar == 'y')\
    \ {\n            lastChar = s.charAt(s.length - 2)\n        }\n        for (c\
    \ <- s.toCharArray) {\n            if (vowels.indexOf(c) != -1) {\n          \
    \      count += 1\n            }\n        }\n        if (lastChar == 'y') {\n\
    \            count += 1\n        }\n        count", "        val vowels = \"aeiouAEIOU\"\
    .toCharArray\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        val vowelsCount = s.toCharArray.filter(x => vowels.contains(x)).size\n\
    \        vowelsCount", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        var count = 0\n        for (i <- 0 until s.length)\n       \
    \     if (vowels(i) == s(i))\n                count += 1\n        count", "  \
    \      var count = 0\n        var vowels = \"aeiou\"\n        var lastVowel =\
    \ vowels.last\n        var lastChar = s.last\n        while (lastChar != lastVowel)\
    \ {\n            count += vowels.indexOf(lastChar)\n            lastChar = s.last\n\
    \        }\n        count", "        val vowels = Set(\"a\", \"e\", \"i\", \"\
    o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        val vowels = Array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        val vowelsCount = mutable.HashMap[String, Long]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels(i) != s.charAt(i))\n       \
    \         vowelsCount(s.substring(i,i+1)) = vowelsCount(s.substring(i,i+1)) +\
    \ 1\n        vowelsCount.values.sum", "        val vowels = Array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels(i) == s.charAt(i))\n                count += 1\n     \
    \   count", "        val vowels = \"aeiouAEIOU\"\n        var count = 0\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                count += 1\n        count", "        var count = 0\n\
    \        for (i <- 0 until s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n\
    \                count += 1\n        return count", "        val vowels = \"aeiouAEIOU\"\
    .toCharArray\n        val vowelsCount = mutable.ListBuffer[Char]()\n        for\
    \ (i <- 0 until s.length)\n            if (vowels(i) == s(i))\n              \
    \  vowelsCount += s(i)\n        vowelsCount.toList.length", "        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).length\n        vowelsCount", "        val vowels = \"\
    aeiouAEIOU\".toSet\n        val vowelsCount = s.toList.filter(x => vowels.contains(x)).size\n\
    \        vowelsCount", "        val vowels = \"aeiouAEIOU\"\n        var count\
    \ = 0\n        for(i <- 0 until s.length){\n            if(vowels.contains(s.charAt(i))){\n\
    \                count += 1\n            }\n        }\n        count", "     \
    \   val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.count(x => vowels.contains(x))\n        vowels_count", "        val vowels\
    \ = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowels_count", "        val vowels = \"\
    aeiouAEIOU\"\n        val vowelsCount = s.count(vowels.indexOf(_))\n        vowelsCount",
  "        val vowels = \"aeiouAEIOU\".toSet\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n\
    \        vowelsCount", "        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       return count", "        val vowels = \"aeiouAEIOU\".toCharArray\n    \
    \    val vowelsCount = mutable.HashSet[Char]()\n        for (c <- s) {\n     \
    \       if (vowels.contains(c)) {\n                vowelsCount += c\n        \
    \    }\n        }\n        vowelsCount.size", "        val vowels = Array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(vowels)\n   \
    \     vowelsCount", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n        vowelsCount",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = mutable.HashMap[String, Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount.put(c, vowelsCount.getOrElse(c, 0L) + 1L)\n \
    \           }\n        }\n        vowelsCount.values.sum", "        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).size\n        vowelsCount", "        var count = 0\n\
    \        for (i <- 0 until s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n\
    \                count += 1\n        return count", "        var count = 0\n \
    \       for(i <- 0 until s.length)\n            if(s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n\
    \                count += 1\n        for(i <- 0 until s.length)\n            if(s.charAt(i)\
    \ == 'y')\n                count += 1\n        count", "        var count = 0\n\
    \        for (i <- 0 until s.length)\n            if (s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n\
    \                count += 1\n        return count", "        var count = 0\n \
    \       var vowels = \"aeiouAEIOU\"\n        for (i <- 0 until s.length)\n   \
    \         if (vowels.indexOf(s.charAt(i)) >= 0)\n                count += 1\n\
    \        return count", "        val vowels = \"aeiou\"\n        var count = 0\n\
    \        var lastVowel = vowels.last\n        var lastChar = s.last\n        while\
    \ (lastChar != lastVowel) {\n            count += vowels.indexOf(lastChar)\n \
    \           lastChar = s.last\n        }\n        count", "        val vowels\
    \ = Array('a','e','i','o','u')\n        val vowels_count = s.length\n        val\
    \ vowels_count_in_string = vowels.count(s => s.equals(s.last))\n        vowels_count_in_string",
  "        val vowels = \"aeiouAEIOU\".toSet\n        var count = 0\n        for (i\
    \ <- 0 until s.length)\n            if (vowels(s(i)))\n                count +=\
    \ 1\n        count", "        var vowelsCount = 0\n        for(i <- 0 until s.length){\n\
    \            if(s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u'){\n                vowelsCount +=\
    \ 1\n            }\n        }\n        return vowelsCount", "        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).size\n        vowelsCount", "        val vowels = \"\
    aeiou\"\n        val vowelsCount = mutable.HashSet[Char]()\n        for (i <-\
    \ 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n         \
    \       vowelsCount += s.charAt(i)\n        vowelsCount.size", "        val vowels\
    \ = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = \"\
    aeiouAEIOU\"\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c.toString)).size\n\
    \        vowelsCount", "        val vowels = \"aeiouAEIOU\".toCharArray\n    \
    \    val vowelsCount = mutable.Map[Char, Int]()\n        for (c <- s) {\n    \
    \        if (vowels.contains(c)) {\n                vowelsCount(c) += 1\n    \
    \        }\n        }\n        vowelsCount.values.sum", "        val vowels =\
    \ Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowelsCount", "        val vowels = \"\
    aeiou\"\n        var count = 0\n        for (i <- 0 until s.length)\n        \
    \    if (vowels.contains(s.charAt(i)))\n                count += 1\n        count",
  "        val vowels = \"aeiouAEIOU\"\n        val vowelsCount = s.count(vowels.indexOf)\n\
    \        vowelsCount", "        val vowels = \"aeiouAEIOU\"\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                count += 1\n        count", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count = s.length\n      \
    \  val vowels_count_in_string = vowels.count(s => s.equals(s))\n        vowels_count_in_string",
  "        var count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        return count", "  \
    \      val vowels = \"aeiouAEIOU\".toSet\n        var count = 0\n        for (i\
    \ <- 0 until s.length)\n            if (vowels(s(i)))\n                count +=\
    \ 1\n        count", "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"\
    u\")\n        val vowelsCount = s.filter(x => vowels.contains(x)).size\n     \
    \   vowelsCount", "        var vowels = mutable.Set[Char]()\n        var vowelsCount\
    \ = 0\n        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelsCount += 1\n            else\n                vowels +=\
    \ s.charAt(i)\n        vowelsCount", "        val vowels = \"aeiou\"\n       \
    \ val vowelsCount = s.count(vowels)\n        val lastVowel = s.last.charAt(s.length\
    \ - 1)\n        if (vowelsCount == 0 && lastVowel == 'y') {\n            vowelsCount\
    \ + 1\n        } else {\n            vowelsCount\n        }", "        val vowels\
    \ = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).length\n        vowelsCount", "        val vowels = \"\
    aeiouAEIOU\".toSet\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n\
    \        val vowelsCount = mutable.Map[Char,Long]()\n        for(c <- s) {\n \
    \           if(vowels.contains(c)) {\n                vowelsCount(c) = vowelsCount(c)\
    \ + 1\n            }\n        }\n        vowelsCount.values.sum", "        val\
    \ vowels = \"aeiouAEIOU\"\n        var count = 0\n        var lastVowel = 0\n\
    \        for (i <- 0 until s.length)\n            if (vowels.indexOf(s.charAt(i))\
    \ >= 0)\n                count += 1\n            else\n                if (s.charAt(i)\
    \ == lastVowel)\n                    count += 1\n                else\n      \
    \              lastVowel = s.charAt(i)\n        count", "        var vowels =\
    \ \"\"\n        var count = 0\n        for (i <- 0 until s.length)\n         \
    \   if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i)\
    \ == 'o' || s.charAt(i) == 'u')\n                vowels += s.charAt(i)\n     \
    \       if (s.charAt(i) == 'y')\n                vowels += 'y'\n        if (vowels.length\
    \ == 0)\n            return 0\n        for (i <- 0 until vowels.length)\n    \
    \        if (vowels.charAt(i) == 'y')\n                count += 1\n        return\
    \ count", "        val vowels = mutable.Set[Char]('a','e','i','o','u')\n     \
    \   val vowelsCount = mutable.Map[Char, Long]()\n        for (c <- s) {\n    \
    \        if (vowels.contains(c)) {\n                vowelsCount(c) = vowelsCount(c)\
    \ + 1\n            }\n        }\n        vowelsCount.values.sum", "        val\
    \ vowels = \"aeiouAEIOU\".toList\n        val vowelsCount = s.toList.count(vowels.contains)\n\
    \        vowelsCount", "        var count = 0\n        for(i <- 0 until s.length)\n\
    \            if(s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\
    \ || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n                count += 1\n \
    \       for(i <- 0 until s.length)\n            if(s.charAt(i) == 'y')\n     \
    \           count += 1\n        count", "        val vowels = Array('a','e','i','o','u')\n\
    \        val vowels_count = s.length\n        val vowels_count_in_string = vowels.count(s\
    \ => s.toLowerCase contains s.toLowerCase)\n        vowels_count_in_string", " \
    \       val vowels = \"aeiou\"\n        val vowels_count = s.length\n        val\
    \ vowels_count_map = mutable.HashMap[String, Long]()\n        for (i <- 0 until\
    \ vowels_count) {\n            val c = s.charAt(i)\n            if (vowels.indexOf(c)\
    \ >= 0) {\n                vowels_count_map.put(s.substring(i, i + 1), vowels_count_map.getOrElse(s.substring(i,\
    \ i + 1), 0) + 1L)\n            }\n        }\n        vowels_count_map.values.sum",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.filter(x => vowels.contains(x)).size\n        vowelsCount", "        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        \n        if (s.charAt(s.length\
    \ - 1) == 'y')\n            count += 1\n        \n        count", "        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for (i <- 0 until s.length)\n            if (vowels(i) == s(i))\n    \
    \            count += 1\n        count", "        val vowels = Array(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n        val vowels_count = s.toCharArray.filter(c =>\
    \ vowels.contains(c)).length\n        vowels_count", "        val vowels = \"\
    aeiouAEIOU\".toSet\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).length\n\
    \        vowelsCount", "        val vowels = \"aeiou\"\n        val vowels_count\
    \ = s.count(vowels.toCharArray)\n        vowels_count", "        val vowels =\
    \ Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = mutable.HashMap[String,\
    \ Long]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n   \
    \             vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n\
    \        vowelsCount.values.sum", "        val vowels = \"aeiou\"\n        val\
    \ vowelsCount = s.count(vowels.toCharArray)\n        vowelsCount", "        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount", "        val vowels = Array(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n        var lastVowel\
    \ = vowels(0)\n        for (i <- 0 until s.length)\n        {\n            if\
    \ (vowels(i) == lastVowel)\n            {\n                count += 1\n      \
    \      }\n            else\n            {\n                count = 0\n       \
    \         lastVowel = vowels(i)\n            }\n        }\n        count", " \
    \       val vowels = Array('a','e','i','o','u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for(i <- 0 until s.length)\n            if(vowels(i) == s.charAt(i))\n\
    \                vowelsCount += s.charAt(i)\n        vowelsCount.size", "    \
    \    val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount",
  "        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count\
    \ = 0\n        for (i <- 0 until s.length)\n            if (vowels(i) == s(i))\
    \ {\n                count += 1\n            }\n        count", "        val vowels\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).size\n        vowelsCount"]
stop_tokens:
- "\n    }\n"

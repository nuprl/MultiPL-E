language: scala
name: HumanEval_79_decimal_to_binary
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu1nugfsl.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val extraChars = binary.substring(binary.length - 2)\n        val extraCharsLength\
    \ = extraChars.length\n        val extraCharsLength2 = extraCharsLength * 2\n\
    \        val extraCharsLength3 = extraCharsLength * 3\n        val extraCharsLength4\
    \ = extraCharsLength * 4\n        val extraCharsLength5 = extraCharsLength * 5\n\
    \        val extraCharsLength6 = extraCharsLength * 6\n        val extraCharsLength7\
    \ = extraCharsLength * 7\n        val extraCharsLength8 = extraCharsLength * 8\n\
    \        val extraCharsLength9 = extraCharsLength * 9\n        val extraCharsLength10\
    \ = extraCharsLength * 10\n        val extraCharsLength11 = extraCharsLength *\
    \ 11\n        val extraCharsLength12 = extraCharsLength * 12\n        val extraCharsLength13\
    \ = extraCharsLength * 13\n        val extraCharsLength14 = extraCharsLength *\
    \ 14\n        val extraCharsLength15 = extraCharsLength * 15\n        val extraCharsLength16\
    \ = extraCharsLength * 16\n        val extraCharsLength17 = extraCharsLength *\
    \ 17\n        val extraCharsLength18 = extraCharsLength * 18\n        val extraCharsLength19\
    \ = extraCharsLength * 19\n        val extraCharsLength20 = extraCharsLength *\
    \ 20\n        val extraCharsLength21 = extraCharsLength * 21\n        val extraCharsLength22\
    \ = extraCharsLength * 22\n        val extraCharsLength23 = extraCharsLength *\
    \ 23\n        val extraCharsLength24 = extraCharsLength * 24\n        val extraCharsLength25\
    \ = extraCharsLength * 25\n        val extraCharsLength26 = extraCharsLength *\
    \ 26\n        val extraCharsLength27 = extraCharsLength * 27\n        val extraCharsLength28\
    \ = extraCharsLength * 28\n        val extraCharsLength29 = extraCharsLength *\
    \ 29\n        val extraCharsLength30 = extraCharsLength * 30\n        val extraCharsLength31\
    \ = extraCharsLength * 31\n        val extraCharsLength32 = extraCharsLength *\
    \ 32\n        val extraCharsLength33 = extraCharsLength * 33\n        val extraCharsLength34\
    \ = extraChars\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprqp0yhr8.scala:49:5\
    \ ---------------------\e[0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val db = \"db\"\n        val result\
    \ = bin.take(decimal.toInt) + db + bin.drop(decimal.toInt)\n        result\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqo6e2m44.scala:20)\n\tat Problem.main(tmpqo6e2m44.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal % 2\n        decimal\
    \ /= 2\n        while(decimal > 0) {\n            binary.append(remainder)\n \
    \           decimal -= 1\n        }\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkt1vwjbz.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkt1vwjbz.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value /= is not a member of Long\
    \ - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkt1vwjbz.scala:18:20\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            decimal -= \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value -= is not a member of Long - did you mean decimal.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        var remainder2 = decimal\n      \
    \  var remainder3 = decimal\n        var remainder4 = decimal\n        var remainder5\
    \ = decimal\n        var remainder6 = decimal\n        var remainder7 = decimal\n\
    \        var remainder8 = decimal\n        var remainder9 = decimal\n        var\
    \ remainder10 = decimal\n        var remainder11 = decimal\n        var remainder12\
    \ = decimal\n        var remainder13 = decimal\n        var remainder14 = decimal\n\
    \        var remainder15 = decimal\n        var remainder16 = decimal\n      \
    \  var remainder17 = decimal\n        var remainder18 = decimal\n        var remainder19\
    \ = decimal\n        var remainder20 = decimal\n        var remainder21 = decimal\n\
    \        var remainder22 = decimal\n        var remainder23 = decimal\n      \
    \  var remainder24 = decimal\n        var remainder25 = decimal\n        var remainder26\
    \ = decimal\n        var remainder27 = decimal\n        var remainder28 = decimal\n\
    \        var remainder29 = decimal\n        var remainder30 = decimal\n      \
    \  var remainder31 = decimal\n        var remainder32 = decimal\n        var remainder33\
    \ = decimal\n        var remainder34 = decimal\n        var remainder35 = decimal\n\
    \        var remainder36 = decimal\n        var remainder37 = decimal\n      \
    \  var remainder38 = decimal\n        var remainder39 = decimal\n        var remainder40\
    \ = decimal\n        var remainder41 = decimal\n        var remainder42 = decimal\n\
    \        var remainder43 = decimal\n        var remainder44 = decimal\n      \
    \  var remainder45 = decimal\n        var remainder46 = decimal\n        var remainder47\
    \ = decimal\n        var remainder48 = decimal\n        var remainder49 = decimal\n\
    \        var remainder50 = decimal\n        var remainder51 = decimal\n      \
    \  var remainder52 = decimal\n        var remainder53 = decimal\n        var remainder54\
    \ = decimal\n        var remainder55 = decimal\n        var remainder56 = decimal\n\
    \        var remainder57 = decimal\n        var remainder58 = decimal\n      \
    \  var remainder59 = decimal\n        var remainder60 = decimal\n        var remainder61\
    \ = decimal\n        var remainder62 = decimal\n        var remainder63 = decimal\n\
    \        var remainder64 = decimal\n        var remainder65 = decimal\n      \
    \  var remainder66 = decimal\n        var remainder67 = decimal\n        var remainder68\
    \ = decimal\n        var remainder69 = decimal\n        var remainder70 = decimal\n\
    \        var remainder71 = decimal\n        var remainder72 = decimal\n      \
    \  var remainder73 = decimal\n        var remainder74 = decimal\n        var remain\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmps6th6q7_.scala:89:4 ----------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmps6th6q7_.scala:89:5 ---------------------\e[0m\e[0m\n\e[31m89 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3jybpe7t.scala:52:33 ---------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(\n\
    \e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m\
    \                                 expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3jybpe7t.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp3jybpe7t.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is "
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.dropRight(binary.length - 2)\n        val bin2 = bin.dropRight(bin.length)\n\
    \        val bin3 = bin2.dropRight(bin2.length - 2)\n        val bin4 = bin3.dropRight(bin3.length\
    \ - 2)\n        val bin5 = bin4.dropRight(bin4.length - 2)\n        val bin6 =\
    \ bin5.dropRight(bin5.length - 2)\n        val bin7 = bin6.dropRight(bin6.length)\n\
    \        val bin8 = bin7.dropRight(bin7.length)\n        val bin9 = bin8.dropRight(bin8.length)\n\
    \        val bin10 = bin9.dropRight(bin9.length)\n        val bin11 = bin10.dropRight(bin10.length)\n\
    \        val bin12 = bin11.dropRight(bin11.length)\n        val bin13 = bin12.dropRight(bin12.length)\n\
    \        val bin14 = bin13.dropRight(bin13.length)\n        val bin15 = bin14.dropRight(bin14.length)\n\
    \        val bin16 = bin15.dropRight(bin15.length)\n        val bin17 = bin16.dropRight(bin16.length)\n\
    \        val bin18 = bin17.dropRight(bin17.length)\n        val bin19 = bin18.dropRight(bin18.length)\n\
    \        val bin20 = bin19.dropRight(bin19.length)\n        val bin21 = bin20.dropRight(bin20.length)\n\
    \        val bin22 = bin21.dropRight(bin21.length)\n        val bin23 = bin22.dropRight(bin22.length)\n\
    \        val bin24 = bin23.dropRight(bin23.length)\n        val bin25 = bin24.dropRight(bin24.length)\n\
    \        val bin26 = bin25.dropRight(bin25.length)\n        val bin27 = bin26.dropRight(bin26.length)\n\
    \        val bin28 = bin27.dropRight(bin27.length)\n        val bin29 = bin28.dropRight(bin28.length)\n\
    \        val bin30 = bin29.dropRight(bin29.length)\n        val bin31 = bin30.dropRight(bin30.length)\n\
    \        val bin32 = bin31.dropRight(bin31.length)\n        val bin33 = bin32.dropRight(bin32.length)\n\
    \        val bin34 = bin33.dropRight(bin33.length)\n        val bin35 = bin34.dropRight(bin\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcbiaydpl.scala:49:4 ----------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpcbiaydpl.scala:48:36 --------------------\e[0m\e[0m\n\e[31m48 |\e[0m\
    \        \e[33mval\e[0m \e[36mbin35\e[0m = bin34.dropRight(bin\n\e[31m\e[31m \
    \  |\e[0m                                    ^^^\e[0m\n\e[31m   |\e[0m       \
    \                             Found:    (bin : String)\n\e[31m   |\e[0m      \
    \                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpcbiaydpl.scala:49:5 ---------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659798421
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val result = binary.substring(binary.length - 2)\n        val extraChars\
    \ = binary.substring(0, binary.length - 2)\n        extraChars + \"db\"\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: begin -1, end 1, length 1\n\t\
    at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\tat java.base/java.lang.String.substring(String.java:2707)\n\
    \tat java.base/java.lang.String.substring(String.java:2680)\n\tat Problem$.decimalToBinary(tmpsaibie3m.scala:14)\n\
    \tat Problem$.main(tmpsaibie3m.scala:19)\n\tat Problem.main(tmpsaibie3m.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3jybpe7t.scala:52:33 ---------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(\n\
    \e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m\
    \                                 expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3jybpe7t.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp3jybpe7t.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is "
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n   \
    \     val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpayp0lsjf.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpayp0lsjf.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpayp0lsjf.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpayp0lsjf.scala:17:12 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpayp0lsjf.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is "
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu1nugfsl.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.MutableList[String]()\n        val remainder = decimal % 2\n       \
    \ decimal /= 2\n        while(decimal > 0) {\n            binary.append(remainder\
    \ % 2)\n            remainder = remainder / 2\n            decimal -= 1\n    \
    \    }\n        binary.reverse.mkString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_tyt1koi.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.MutableList[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_tyt1koi.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value\
    \ /= is not a member of Long - did you mean decimal.!=?\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmp_tyt1koi.scala:18:22 -----------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m            remainder = remainder / \e[31m2\e[0m\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \       Reassignment to val remainder\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp_tyt1koi.scala:19:20 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            decimal -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member\
    \ of Long - did you mean decimal.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.substring(binary.length - 2)\n        val binary\
    \ = binary.substring(0, binary.length - 2)\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo9rjng6s.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.substring(binary.length\
    \ - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.substring(\e[31m0\e\
    [0m, binary.length - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo9rjng6s.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33m"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        for(i <- 0 until decimal.toInt){\n          \
    \  binary.append(decimal.toString.toBinaryString(i))\n        }\n        binary.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgsma606r.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659798417
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        while(decimal != 0) {\n         \
    \   binary += remainder % 2\n            remainder = remainder / 2\n        }\n\
    \        binary += \"db\"\n        binary += decimalToBinary(decimal)\n      \
    \  binary += \"db\"\n        return binary\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.base/java.lang.StringLatin1.newString(StringLatin1.java:769)\n\
    \tat java.base/java.lang.StringBuilder.toString(StringBuilder.java:453)\n\tat\
    \ Problem$.decimalToBinary(tmpkvp42f0p.scala:19)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\tat Problem$.decimalToBinary(tmpkvp42f0p.scala:20)\n\
    \tat Problem$.de"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val extraChars = binary.substring(binary.length - 2)\n        val extraCharsLength\
    \ = extraChars.length\n        val binaryLength = binary.length\n        val binaryString\
    \ = binary.substring(0,binaryLength-extraCharsLength)\n        val binaryStringLength\
    \ = binaryString.length\n        val binaryStringWithExtraChars = binaryString\
    \ + extraChars\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraChars.length\n\
    \        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + extraChar\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpl_lk2796.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mbinaryStringWithExtraCharsLength\e\
    [0m = binaryStringWithExtraCharsLength + extraCharsLength\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryStringWithExtraCharsLength is already defined as \e\
    [33mvalue\e[0m \e[35mbinaryStringWithExtraCharsLength\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpl_lk2796.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinaryStringWithExtraCharsLength\e[0m = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryStringWithExtraCharsLength is already defined as \e\
    [33mvalue\e[0m \e[35mbinaryStringWithExtraCharsLength\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpl_lk2796.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinaryStringWithExtraCharsLength\e[0m = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryStringWithExtraCharsLength is already defined as \e\
    [33mvalue\e[0m \e[35mbinaryStringWithExtraCharsLength\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpl_lk2796.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinaryStringWithExtraCharsLength\e[0m = binaryStringWithExtraCharsLength\
    \ + extraCharsLength\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmperi7bz82.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmperi7bz82.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded metho"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.substring(binary.length - 2)\n        val binary\
    \ = binary.substring(0, binary.length - 2)\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo9rjng6s.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.substring(binary.length\
    \ - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.substring(\e[31m0\e\
    [0m, binary.length - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo9rjng6s.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33m"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.take(decimal.toInt)\n\
    \        binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpy39e9xxm.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.take(decimal.toInt)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659798417
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryLength = binary.length\n        val extraChars = binaryLength\
    \ % 2\n        val binaryString = binary.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binaryString.padToEven(extraChars)\n        val binaryLength\
    \ = binaryString.length\n        val extraChars = binaryLength % 2\n        val\
    \ binaryString = binary\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpgr0_dbdt.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mbinaryLength\e[0m = binaryString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinaryLength is already defined as \e[33mvalue\e[0m \e[35mbinaryLength\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgr0_dbdt.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mextraChars\e[0m = binaryLength % \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mextraChars is already defined as \e[33mvalue\e[0m \e[35mextraChars\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgr0_dbdt.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mbinaryString\e[0m = binaryString.padToEven(extraChars)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryString is already defined as \e[33mvalue\e[0m \e[35mbinaryString\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgr0_dbdt.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mbinaryLength\e[0m = binaryString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinaryLength is already defined as \e[33mvalue\e[0m \e[35mbinaryLength\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpgr0_dbdt.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mextraChars\e[0m = binaryLength % \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val result = binary.reverse\n        val extraChars = binary.takeRight(binary.length)\n\
    \        val extraCharsReversed = extraChars.reverse\n        val extraCharsReversedString\
    \ = extraCharsReversed.mkString\n        val result = extraCharsReversedString\
    \ + result\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpk_3pazyw.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = extraCharsReversedString\
    \ + result\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mresult is already defined as \e[33mvalue\e[0m \e[35mresult\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659798417
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        var remainder2 = decimal\n      \
    \  var remainder3 = decimal\n        var remainder4 = decimal\n        var remainder5\
    \ = decimal\n        var remainder6 = decimal\n        var remainder7 = decimal\n\
    \        var remainder8 = decimal\n        var remainder9 = decimal\n        var\
    \ remainder10 = decimal\n        var remainder11 = decimal\n        var remainder12\
    \ = decimal\n        var remainder13 = decimal\n        var remainder14 = decimal\n\
    \        var remainder15 = decimal\n        var remainder16 = decimal\n      \
    \  var remainder17 = decimal\n        var remainder18 = decimal\n        var remainder19\
    \ = decimal\n        var remainder20 = decimal\n        var remainder21 = decimal\n\
    \        var remainder22 = decimal\n        var remainder23 = decimal\n      \
    \  var remainder24 = decimal\n        var remainder25 = decimal\n        var remainder26\
    \ = decimal\n        var remainder27 = decimal\n        var remainder28 = decimal\n\
    \        var remainder29 = decimal\n        var remainder30 = decimal\n      \
    \  var remainder31 = decimal\n        var remainder32 = decimal\n        var remainder33\
    \ = decimal\n        var remainder34 = decimal\n        var remainder35 = decimal\n\
    \        var remainder36 = decimal\n        var remainder37 = decimal\n      \
    \  var remainder38 = decimal\n        var remainder39 = decimal\n        var remainder40\
    \ = decimal\n        var remainder41 = decimal\n        var remainder42 = decimal\n\
    \        var remainder43 = decimal\n        var remainder44 = decimal\n      \
    \  var remainder45 = decimal\n        var remainder46 = decimal\n        var remainder47\
    \ = decimal\n        var remainder48 = decimal\n        var remainder49 = decimal\n\
    \        var remainder50 = decimal\n        var remainder51 = decimal\n      \
    \  var remainder52 = decimal\n        var remainder53 = decimal\n        var remainder54\
    \ = decimal\n        var remainder55 = decimal\n        var remainder56 = decimal\n\
    \        var remainder57 = decimal\n        var remainder58 = decimal\n      \
    \  var remainder59 = decimal\n        var remainder60 = decimal\n        var remainder61\
    \ = decimal\n        var remainder62 = decimal\n        var remainder63 = decimal\n\
    \        var remainder64 = decimal\n        var remainder65 = decimal\n      \
    \  var remainder66 = decimal\n        var remainder67 = decimal\n        var remainder68\
    \ = decimal\n        var remainder69 = decimal\n        var remainder70 = decimal\n\
    \        var remainder71 = decimal\n        var remainder72 = decimal\n      \
    \  var remainder73 = decimal\n        var remainder74 = decimal\n        var remain\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmps6th6q7_.scala:89:4 ----------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmps6th6q7_.scala:89:5 ---------------------\e[0m\e[0m\n\e[31m89 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmperi7bz82.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmperi7bz82.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded metho"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal % 2\n        decimal\
    \ /= 2\n        while(decimal > 0) {\n            binary.append(remainder)\n \
    \           decimal -= 1\n        }\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkt1vwjbz.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkt1vwjbz.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value /= is not a member of Long\
    \ - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkt1vwjbz.scala:18:20\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            decimal -= \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value -= is not a member of Long - did you mean decimal.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryLength = binary.length\n        val binaryString = binary.reverse\n\
    \        val binaryStringLength = binaryString.length\n        val binaryStringBuilder\
    \ = new StringBuilder(binaryStringLength)\n        var binaryStringBuilderIndex\
    \ = 0\n        var binaryStringBuilderIndex2 = 0\n        while (binaryStringBuilderIndex\
    \ < binaryStringLength) {\n            if (binaryStringBuilderIndex2 < binaryLength)\
    \ {\n                binaryStringBuilder.append(binaryStringBuilderIndex(binaryStringBuilderIndex2))\n\
    \                binaryStringBuilderIndex2 += 1\n            } else {\n      \
    \          binaryStringBuilder.append(binaryStringBuilderIndex(binaryStringBuilderIndex))\n\
    \                binaryStringBuilderIndex += 1\n            }\n        }\n   \
    \     binaryStringBuilder.reverse\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpotnan4bk.scala:22:43 -----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                binaryStringBuilder.append(binaryStringBuilderIndex(binaryStringBuilderIndex2))\n\
    \e[31m\e[31m   |\e[0m                                           ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m              \e[33mvariable\e[0m \e[35mbinaryStringBuilderIndex\e\
    [0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmpotnan4bk.scala:25:43 -----------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m                binaryStringBuilder.append(binaryStringBuilderIndex(binaryStringBuilderIndex))\n\
    \e[31m\e[31m   |\e[0m                                           ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m              \e[33mvariable\e[0m \e[35mbinaryStringBuilderIndex\e\
    [0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpotnan4bk.scala:29:28 --------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        binaryStringBuilder.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    StringBuilder\n\e[31m   |\e[0m        Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.substring(binary.length - 2)\n        val binary = bin.substring(0,\
    \ bin.length - 1)\n        val binary = binary.concat(\"db\")\n        binary\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_wjot54t.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.substring(\e\
    [31m0\e[0m, bin.length - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_wjot54t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.concat(\e[31m\"\
    db\"\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659798416
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.MutableList[String]()\n        val remainder = decimal % 2\n       \
    \ decimal /= 2\n        while(decimal > 0) {\n            binary.add(\"0\")\n\
    \            decimal -= 1\n        }\n        binary.add(\"0\")\n        binary.add(\"\
    1\")\n        binary.add(\"db\")\n        binary.add(\"db\")\n        binary.toString.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdu6azuow.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.MutableList[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdu6azuow.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value\
    \ /= is not a member of Long - did you mean decimal.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpdu6azuow.scala:18:20 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m            decimal -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member\
    \ of Long - did you mean decimal.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val decimalToBinaryHelper = new mutable.Stack[Long]\n\
    \        decimalToBinaryHelper.push(decimal)\n        while(decimalToBinaryHelper.length\
    \ > 0) {\n            val currentDecimal = decimalToBinaryHelper.pop()\n     \
    \       val currentBinary = binary.length.toString.reverse.foldLeft(\"\")(_ +\
    \ _)\n            val currentBinaryLength = currentBinary.length\n           \
    \ val currentBinaryDigit = currentBinary.charAt(currentBinaryLength - 1)\n   \
    \         val currentBinaryDigitValue = currentBinary.charAt(currentBinaryLength\
    \ - 2)\n            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigitValueInt = currentBinaryDigitValue.toInt\n\
    \            val currentBinaryDigit\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9204iwxz.scala:49:4 ----------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9204iwxz.scala:58:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m58 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp9204iwxz.scala:13:25 ------------------------\e[0m\e[0m\n\
    \e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e[0m mutable.StringBuilder\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp9204iwxz.scala:14:40 ------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mdecimalToBinaryHelper\e[0m =\
    \ \e[33mnew\e[0m mutable.Stack[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m       \
    \                                 ^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \                          Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp9204iwxz.scala:23:16 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mval\e[0m \e[36mcurrentBinaryDigitValueInt\e\
    [0m = currentBinaryDigitValue.toInt\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentBinaryDigitValueInt is already defined as \e[33mvalue\e\
    [0m \e[35mcurrentBinaryDigitValueInt\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9204iwxz.scala:24:16 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mval\e[0m \e[36mcurrentBinaryDigitValueInt\e\
    [0m = currentBinaryDigitValue.toInt\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrent"
  stdout: ''
  timestamp: 1659798429
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxx0fg9jj.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxx0fg9jj.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length - \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxx0fg9jj.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length - \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:18:12 ----------------------"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmperi7bz82.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmperi7bz82.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded metho"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3jybpe7t.scala:52:33 ---------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(\n\
    \e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m\
    \                                 expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3jybpe7t.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp3jybpe7t.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is "
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.take(decimal.toInt)\n\
    \        binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpy39e9xxm.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.take(decimal.toInt)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659798417
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.MutableList[String]()\n        var remainder = decimal\n        var\
    \ remainder2 = decimal\n        var remainder3 = decimal\n        var remainder4\
    \ = decimal\n        var remainder5 = decimal\n        var remainder6 = decimal\n\
    \        var remainder7 = decimal\n        var remainder8 = decimal\n        var\
    \ remainder9 = decimal\n        var remainder10 = decimal\n        var remainder11\
    \ = decimal\n        var remainder12 = decimal\n        var remainder13 = decimal\n\
    \        var remainder14 = decimal\n        var remainder15 = decimal\n      \
    \  var remainder16 = decimal\n        var remainder17 = decimal\n        var remainder18\
    \ = decimal\n        var remainder19 = decimal\n        var remainder20 = decimal\n\
    \        var remainder21 = decimal\n        var remainder22 = decimal\n      \
    \  var remainder23 = decimal\n        var remainder24 = decimal\n        var remainder25\
    \ = decimal\n        var remainder26 = decimal\n        var remainder27 = decimal\n\
    \        var remainder28 = decimal\n        var remainder29 = decimal\n      \
    \  var remainder30 = decimal\n        var remainder31 = decimal\n        var remainder32\
    \ = decimal\n        var remainder33 = decimal\n        var remainder34 = decimal\n\
    \        var remainder35 = decimal\n        var remainder36 = decimal\n      \
    \  var remainder37 = decimal\n        var remainder38 = decimal\n        var remainder39\
    \ = decimal\n        var remainder40 = decimal\n        var remainder41 = decimal\n\
    \        var remainder42 = decimal\n        var remainder43 = decimal\n      \
    \  var remainder44 = decimal\n        var remainder45 = decimal\n        var remainder46\
    \ = decimal\n        var remainder47 = decimal\n        var remainder48 = decimal\n\
    \        var remainder49 = decimal\n        var remainder50 = decimal\n      \
    \  var remainder51 = decimal\n        var remainder52 = decimal\n        var remainder53\
    \ = decimal\n        var remainder54 = decimal\n        var remainder55 = decimal\n\
    \        var remainder56 = decimal\n        var remainder57 = decimal\n      \
    \  var remainder58 = decimal\n        var remainder59 = decimal\n        var remainder60\
    \ = decimal\n        var remainder61 = decimal\n        var remainder62 = decimal\n\
    \        var remainder63 = decimal\n        var remainder64 = decimal\n      \
    \  var remainder65 = decimal\n        var remainder66 = decimal\n        var remainder67\
    \ = decimal\n        var remainder68 = decimal\n        var remainder69 = decimal\n\
    \        var remainder70 = decimal\n        var remainder71 = decimal\n      \
    \  var remainder72 = decimal\n        var remainder73 = decimal\n        var \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpkaeb1ug8.scala:87:11 ---------------------------\e\
    [0m\e[0m\n\e[31m87 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpkaeb1ug8.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.MutableList[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpkaeb1ug8.scala:88:5\
    \ ---------------------\e[0m\e[0m\n\e[31m88 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798429
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu1nugfsl.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptv36jv1q.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.dropRight(bin.length)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmptv36jv1q.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptv36jv1q.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(bin.length)\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptv36jv1q.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptv36jv1q.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(bin.length)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m"
  stdout: ''
  timestamp: 1659798428
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val result = binary.reverse\n        val extraChars = result.take(result.length\
    \ - 2)\n        val extraCharsReversed = extraChars.reverse\n        val extraCharsReversedString\
    \ = extraCharsReversed.mkString\n        val extraCharsReversedString2 = extraCharsReversed.mkString(\"\
    \")\n        val extraCharsReversedString3 = extraCharsReversed.mkString(\"\"\
    )\n        val extraCharsReversedString4 = extraCharsReversed.mkString(\"\")\n\
    \        val extraCharsReversedString5 = extraCharsReversed.mkString(\"\")\n \
    \       val extraCharsReversedString6 = extraCharsReversed.mkString(\"\")\n  \
    \      val extraCharsReversedString7 = extraCharsReversed.mkString(\"\")\n   \
    \     val extraCharsReversedString8 = extraCharsReversed.mkString(\"\")\n    \
    \    val extraCharsReversedString9 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString10 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString11 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString12 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString13 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString14 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString15 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString16 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString17 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString18 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString19 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString20 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString21 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString22 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString23 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString24 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString25 = extraCharsReversed.mkString(\"\")\n     \
    \   val extraCharsReversedString26 = extra\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3sk81v21.scala:42:41 ------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedString26\e\
    [0m = extra\n\e[31m\e[31m   |\e[0m                                         ^^^^^\e\
    [0m\n\e[31m   |\e[0m                                         Not found: extra\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3sk81v21.scala:43:5\
    \ ---------------------\e[0m\e[0m\n\e[31m43 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdktzzzul.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.take(decimal.toInt)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpdktzzzul.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdktzzzul.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.take(decimal.toInt)\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdktzzzul.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpdktzzzul.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.take(decimal.toInt)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val bin2 = bin.dropRight(bin.length)\n\
    \        val bin3 = bin2.reverse\n        val bin4 = bin3.dropRight(bin3.length)\n\
    \        val bin5 = bin4.reverse\n        val bin6 = bin5.reverse\n        val\
    \ bin7 = bin6.reverse\n        val bin8 = bin7.reverse\n        val bin9 = bin8.reverse\n\
    \        val bin10 = bin9.reverse\n        val bin11 = bin10.reverse\n       \
    \ val bin12 = bin11.reverse\n        val bin13 = bin12.reverse\n        val bin14\
    \ = bin13.reverse\n        val bin15 = bin14.reverse\n        val bin16 = bin15.reverse\n\
    \        val bin17 = bin16.reverse\n        val bin18 = bin17.reverse\n      \
    \  val bin19 = bin18.reverse\n        val bin20 = bin19.reverse\n        val bin21\
    \ = bin20.reverse\n        val bin22 = bin21.reverse\n        val bin23 = bin22.reverse\n\
    \        val bin24 = bin23.reverse\n        val bin25 = bin24.reverse\n      \
    \  val bin26 = bin25.reverse\n        val bin27 = bin26.reverse\n        val bin28\
    \ = bin27.reverse\n        val bin29 = bin28.reverse\n        val bin30 = bin29.reverse\n\
    \        val bin31 = bin30.reverse\n        val bin32 = bin31.reverse\n      \
    \  val bin33 = bin32.reverse\n        val bin34 = bin33.reverse\n        val bin35\
    \ = bin34.reverse\n        val bin36 = bin35.reverse\n        val bin37 = bin36.reverse\n\
    \        val bin38 = bin37.reverse\n        val bin39 = bin38.reverse\n      \
    \  val bin40 = bin39.reverse\n        val bin41 = bin40.reverse\n        val bin42\
    \ = bin41.reverse\n        val bin43 = bin42.reverse\n        val bin44 = bin43.reverse\n\
    \        val bin45 = bin44.reverse\n        val bin46 = bin45.reverse\n      \
    \  val bin47 = bin46.reverse\n        val bin48 = bin47.reverse\n        val bin49\
    \ = bin48.reverse\n        val bin50 = bin49.reverse\n        val bin51 = bin50.reverse\n\
    \        val bin52 = bin51.reverse\n        val bin53 = bin52.reverse\n      \
    \  val bin54 = bin53.reverse\n        val bin55 = bin54.reverse\n        val bin\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcumgqmow.scala:70:4 ----------------------------\e\
    [0m\e[0m\n\e[31m70 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpcumgqmow.scala:70:5 ---------------------\e[0m\e[0m\n\e[31m70 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdpu6nzlb.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpdpu6nzlb.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdpu6nzlb.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdpu6nzlb.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpdpu6nzlb.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote th"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.substring(binary.length - 2)\n        val binary = bin.substring(0,\
    \ bin.length - 1)\n        val binary = binary.concat(\"db\")\n        binary\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_wjot54t.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.substring(\e\
    [31m0\e[0m, bin.length - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_wjot54t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.concat(\e[31m\"\
    db\"\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659798416
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryLength = binary.length\n        val binaryString = binary.substring(0,binaryLength)\n\
    \        val binaryStringLength = binaryString.length\n        val binaryStringWithExtraChars\
    \ = binaryString + binaryString.reverse.substring(binaryStringLength)\n      \
    \  val binaryStringWithExtraCharsLength = binaryStringWithExtraChars.length\n\
    \        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n        val binaryStringWithExtraCharsLength = binaryStringWithExtraCharsLength\
    \ + 2\n\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpstrbanqn.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mbinaryStringWithExtraCharsLength\e\
    [0m = binaryStringWithExtraCharsLength + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryStringWithExtraCharsLength is already defined as \e\
    [33mvalue\e[0m \e[35mbinaryStringWithExtraCharsLength\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpstrbanqn.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinaryStringWithExtraCharsLength\e[0m = binaryStringWithExtraCharsLength\
    \ + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryStringWithExtraCharsLength is already defined as \e\
    [33mvalue\e[0m \e[35mbinaryStringWithExtraCharsLength\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpstrbanqn.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinaryStringWithExtraCharsLength\e[0m = binaryStringWithExtraCharsLength\
    \ + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryStringWithExtraCharsLength is already defined as \e\
    [33mvalue\e[0m \e[35mbinaryStringWithExtraCharsLength\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpstrbanqn.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinaryStringWithExtraCharsLength\e[0m = binaryStringWithExtraCharsLength\
    \ + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[3"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val extraChars = binary.length.toString.length\n        val extraCharsString\
    \ = if (extraChars == 0) \"\" else s\"db${binary.length.toString.substring(extraChars)}\"\
    \n        binary.padToLength(binary.length + extraChars)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphl4b8su9.scala:16:15 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        binary.padToLength(binary.length + extraChars)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value\
    \ padToLength is not a member of String\n1 error found\n"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        while(decimal != 0) {\n         \
    \   binary += remainder % 2\n            remainder = remainder / 2\n        }\n\
    \        binary += \"db\"\n        binary += decimalToBinary(remainder)\n    \
    \    return binary\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.base/java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1724)\n\
    \tat java.base/java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:583)\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:179)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:19)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpq_kvz3j2.scala:20)\n\tat Problem$."
  stdout: ''
  timestamp: 1659798431
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryLength = binary.length\n        val extraChars = binaryLength\
    \ - decimal.toInt\n        val extraCharsString = if (extraChars == 0) \"\" else\
    \ s\"db$extraChars\"\n        s\"$binary$extraCharsString\"\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp967zy9_0.scala:20)\n\tat Problem.main(tmp967zy9_0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.takeWhile(x => x !=\
    \ '0')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '1')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '0')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '1')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '0')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '1')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '0')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '1')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '0')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '1')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '0')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '1')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '0')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '1')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '0')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '1')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '0')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '1')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '0')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '1')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x != '0')\n        val binary = binary.reverse\n        val binary = binary.takeWhile(x\
    \ => x \n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwuf52a__.scala:58:4 ----------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwuf52a__.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = bin.takeWhile(\e[36mx\e[0m => x != \e[31m'0'\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpwuf52a__.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwuf52a__.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.takeWhile(\e[36mx\e[0m => x != \e[31m'1'\e[0m)\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpwuf52a__.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwuf52a__.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n"
  stdout: ''
  timestamp: 1659798432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        binary.mkString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuoq4pjg.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.take(decimal.toInt)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuoq4pjg.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659798428
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal\n        val divisor\
    \ = math.pow(2,decimal)\n        while(decimal > 0){\n            binary.append(remainder\
    \ % divisor)\n            remainder = remainder / divisor\n            divisor\
    \ = math.pow(2,decimal)\n        }\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuwzsvha8.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuwzsvha8.scala:18:24 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            remainder = remainder / divisor\n\e[31m\e\
    [31m   |\e[0m                        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                        Found:    Double\n\e[31m   |\e[0m                   \
    \     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpuwzsvha8.scala:19:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            divisor\
    \ = math.pow(\e[31m2\e[0m,decimal)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val divisor\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(1)\n        val binary = binary.dropRight(1)\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n        val\
    \ binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n   \
    \     val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpybm6lnmy.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpybm6lnmy.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpybm6lnmy.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpybm6lnmy.scala:17:12 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpybm6lnmy.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmperi7bz82.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmperi7bz82.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded metho"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal % 2\n        decimal\
    \ /= 2\n        while(decimal > 0) {\n            binary.append(remainder)\n \
    \           decimal -= 1\n        }\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkt1vwjbz.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkt1vwjbz.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value /= is not a member of Long\
    \ - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkt1vwjbz.scala:18:20\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            decimal -= \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value -= is not a member of Long - did you mean decimal.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.substring(binary.length - 2)\n        val binary = bin.substring(0,\
    \ bin.length - 1)\n        binary.concat(\"db\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpig_lekbc.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.substring(\e\
    [31m0\e[0m, bin.length - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659798429
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal % 2\n        decimal\
    \ /= 2\n        while(decimal > 0) {\n            binary.append(if (decimal %\
    \ 2 == 0) \"1\" else \"0\")\n            decimal /= 2\n        }\n        binary.append(if\
    \ (remainder == 0) \"1\" else \"0\")\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuwzgzcpa.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuwzgzcpa.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value /= is not a member of Long\
    \ - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuwzgzcpa.scala:18:20\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            decimal /= \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value /= is not a member of Long - did you mean decimal.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.take(decimal.toInt)\n\
    \        binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpy39e9xxm.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.take(decimal.toInt)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659798417
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        while(decimal != 0){\n          \
    \  binary += (decimal % 2).toChar\n            remainder = decimal / 2\n     \
    \   }\n        binary += remainder.toChar\n        binary += \"db\"\n        binary\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjusexr1l.scala:24)\n\tat Problem.main(tmpjusexr1l.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(bin.length)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptv36jv1q.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.dropRight(bin.length)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmptv36jv1q.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptv36jv1q.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(bin.length)\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptv36jv1q.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmptv36jv1q.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(bin.length)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m"
  stdout: ''
  timestamp: 1659798428
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal\n        val divisor\
    \ = math.pow(2,decimal.toInt)\n        while(decimal > 0){\n            binary.append(remainder\
    \ % divisor)\n            remainder = remainder / divisor\n        }\n       \
    \ binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6ze2db3j.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6ze2db3j.scala:18:24 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            remainder = remainder / divisor\n\e[31m\e\
    [31m   |\e[0m                        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                        Found:    Double\n\e[31m   |\e[0m                   \
    \     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        var remainder2 = decimal\n      \
    \  var remainder3 = decimal\n        var remainder4 = decimal\n        var remainder5\
    \ = decimal\n        var remainder6 = decimal\n        var remainder7 = decimal\n\
    \        var remainder8 = decimal\n        var remainder9 = decimal\n        var\
    \ remainder10 = decimal\n        var remainder11 = decimal\n        var remainder12\
    \ = decimal\n        var remainder13 = decimal\n        var remainder14 = decimal\n\
    \        var remainder15 = decimal\n        var remainder16 = decimal\n      \
    \  var remainder17 = decimal\n        var remainder18 = decimal\n        var remainder19\
    \ = decimal\n        var remainder20 = decimal\n        var remainder21 = decimal\n\
    \        var remainder22 = decimal\n        var remainder23 = decimal\n      \
    \  var remainder24 = decimal\n        var remainder25 = decimal\n        var remainder26\
    \ = decimal\n        var remainder27 = decimal\n        var remainder28 = decimal\n\
    \        var remainder29 = decimal\n        var remainder30 = decimal\n      \
    \  var remainder31 = decimal\n        var remainder32 = decimal\n        var remainder33\
    \ = decimal\n        var remainder34 = decimal\n        var remainder35 = decimal\n\
    \        var remainder36 = decimal\n        var remainder37 = decimal\n      \
    \  var remainder38 = decimal\n        var remainder39 = decimal\n        var remainder40\
    \ = decimal\n        var remainder41 = decimal\n        var remainder42 = decimal\n\
    \        var remainder43 = decimal\n        var remainder44 = decimal\n      \
    \  var remainder45 = decimal\n        var remainder46 = decimal\n        var remainder47\
    \ = decimal\n        var remainder48 = decimal\n        var remainder49 = decimal\n\
    \        var remainder50 = decimal\n        var remainder51 = decimal\n      \
    \  var remainder52 = decimal\n        var remainder53 = decimal\n        var remainder54\
    \ = decimal\n        var remainder55 = decimal\n        var remainder56 = decimal\n\
    \        var remainder57 = decimal\n        var remainder58 = decimal\n      \
    \  var remainder59 = decimal\n        var remainder60 = decimal\n        var remainder61\
    \ = decimal\n        var remainder62 = decimal\n        var remainder63 = decimal\n\
    \        var remainder64 = decimal\n        var remainder65 = decimal\n      \
    \  var remainder66 = decimal\n        var remainder67 = decimal\n        var remainder68\
    \ = decimal\n        var remainder69 = decimal\n        var remainder70 = decimal\n\
    \        var remainder71 = decimal\n        var remainder72 = decimal\n      \
    \  var remainder73 = decimal\n        var remainder74 = decimal\n        var remain\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmps6th6q7_.scala:89:4 ----------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmps6th6q7_.scala:89:5 ---------------------\e[0m\e[0m\n\e[31m89 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val bits = decimal.toBinaryString\n        val\
    \ len = bits.length\n        for(i <- 0 until len) {\n            binary.append(bits(i).toChar)\n\
    \        }\n        binary.reverse\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpucz_0or3.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659798429
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxx0fg9jj.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxx0fg9jj.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length - \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxx0fg9jj.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length - \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:18:12 ----------------------"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.substring(binary.length - 2)\n        val binary = bin.substring(0,\
    \ bin.length - 1)\n        val binary = binary.concat(\"db\")\n        binary\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_wjot54t.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.substring(\e\
    [31m0\e[0m, bin.length - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_wjot54t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.concat(\e[31m\"\
    db\"\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659798416
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        var remainder2 = decimal\n      \
    \  var remainder3 = decimal\n        var remainder4 = decimal\n        var remainder5\
    \ = decimal\n        var remainder6 = decimal\n        var remainder7 = decimal\n\
    \        var remainder8 = decimal\n        var remainder9 = decimal\n        var\
    \ remainder10 = decimal\n        var remainder11 = decimal\n        var remainder12\
    \ = decimal\n        var remainder13 = decimal\n        var remainder14 = decimal\n\
    \        var remainder15 = decimal\n        var remainder16 = decimal\n      \
    \  var remainder17 = decimal\n        var remainder18 = decimal\n        var remainder19\
    \ = decimal\n        var remainder20 = decimal\n        var remainder21 = decimal\n\
    \        var remainder22 = decimal\n        var remainder23 = decimal\n      \
    \  var remainder24 = decimal\n        var remainder25 = decimal\n        var remainder26\
    \ = decimal\n        var remainder27 = decimal\n        var remainder28 = decimal\n\
    \        var remainder29 = decimal\n        var remainder30 = decimal\n      \
    \  var remainder31 = decimal\n        var remainder32 = decimal\n        var remainder33\
    \ = decimal\n        var remainder34 = decimal\n        var remainder35 = decimal\n\
    \        var remainder36 = decimal\n        var remainder37 = decimal\n      \
    \  var remainder38 = decimal\n        var remainder39 = decimal\n        var remainder40\
    \ = decimal\n        var remainder41 = decimal\n        var remainder42 = decimal\n\
    \        var remainder43 = decimal\n        var remainder44 = decimal\n      \
    \  var remainder45 = decimal\n        var remainder46 = decimal\n        var remainder47\
    \ = decimal\n        var remainder48 = decimal\n        var remainder49 = decimal\n\
    \        var remainder50 = decimal\n        var remainder51 = decimal\n      \
    \  var remainder52 = decimal\n        var remainder53 = decimal\n        var remainder54\
    \ = decimal\n        var remainder55 = decimal\n        var remainder56 = decimal\n\
    \        var remainder57 = decimal\n        var remainder58 = decimal\n      \
    \  var remainder59 = decimal\n        var remainder60 = decimal\n        var remainder61\
    \ = decimal\n        var remainder62 = decimal\n        var remainder63 = decimal\n\
    \        var remainder64 = decimal\n        var remainder65 = decimal\n      \
    \  var remainder66 = decimal\n        var remainder67 = decimal\n        var remainder68\
    \ = decimal\n        var remainder69 = decimal\n        var remainder70 = decimal\n\
    \        var remainder71 = decimal\n        var remainder72 = decimal\n      \
    \  var remainder73 = decimal\n        var remainder74 = decimal\n        var remain\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmps6th6q7_.scala:89:4 ----------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmps6th6q7_.scala:89:5 ---------------------\e[0m\e[0m\n\e[31m89 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3jybpe7t.scala:52:33 ---------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(\n\
    \e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m\
    \                                 expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3jybpe7t.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp3jybpe7t.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is "
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryLength = binary.length\n        val binaryString = binary.padTo(binaryLength,\
    \ \"0\")\n        val binaryStringLength = binaryString.length\n        val binaryStringWithDb\
    \ = binaryString.padTo(binaryStringLength, \"db\")\n        binaryStringWithDb\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp84ye44a2.scala:18:8\
    \ ---------------------\e[0m\e[0m\n\e[31m18 |\e[0m        binaryStringWithDb\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:\
    \    (binaryStringWithDb : IndexedSeq[Matchable])\n\e[31m   |\e[0m        Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal % 2\n        decimal\
    \ /= 2\n        while (decimal > 0) {\n            binary.append(remainder)\n\
    \            decimal -= 1\n        }\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppt428qv1.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppt428qv1.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value /= is not a member of Long\
    \ - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppt428qv1.scala:18:20\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            decimal -= \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value -= is not a member of Long - did you mean decimal.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798433
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        binary.mkString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkuoq4pjg.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.take(decimal.toInt)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpkuoq4pjg.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659798428
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal\n        val divisor\
    \ = math.pow(2,decimal)\n        while(decimal != 0){\n            binary.append(remainder\
    \ % divisor)\n            remainder = remainder / divisor\n        }\n       \
    \ binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqdfd69p6.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqdfd69p6.scala:18:24 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            remainder = remainder / divisor\n\e[31m\e\
    [31m   |\e[0m                        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                        Found:    Double\n\e[31m   |\e[0m                   \
    \     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        var remainder2 = decimal\n      \
    \  var remainder3 = decimal\n        var remainder4 = decimal\n        var remainder5\
    \ = decimal\n        var remainder6 = decimal\n        var remainder7 = decimal\n\
    \        var remainder8 = decimal\n        var remainder9 = decimal\n        var\
    \ remainder10 = decimal\n        var remainder11 = decimal\n        var remainder12\
    \ = decimal\n        var remainder13 = decimal\n        var remainder14 = decimal\n\
    \        var remainder15 = decimal\n        var remainder16 = decimal\n      \
    \  var remainder17 = decimal\n        var remainder18 = decimal\n        var remainder19\
    \ = decimal\n        var remainder20 = decimal\n        var remainder21 = decimal\n\
    \        var remainder22 = decimal\n        var remainder23 = decimal\n      \
    \  var remainder24 = decimal\n        var remainder25 = decimal\n        var remainder26\
    \ = decimal\n        var remainder27 = decimal\n        var remainder28 = decimal\n\
    \        var remainder29 = decimal\n        var remainder30 = decimal\n      \
    \  var remainder31 = decimal\n        var remainder32 = decimal\n        var remainder33\
    \ = decimal\n        var remainder34 = decimal\n        var remainder35 = decimal\n\
    \        var remainder36 = decimal\n        var remainder37 = decimal\n      \
    \  var remainder38 = decimal\n        var remainder39 = decimal\n        var remainder40\
    \ = decimal\n        var remainder41 = decimal\n        var remainder42 = decimal\n\
    \        var remainder43 = decimal\n        var remainder44 = decimal\n      \
    \  var remainder45 = decimal\n        var remainder46 = decimal\n        var remainder47\
    \ = decimal\n        var remainder48 = decimal\n        var remainder49 = decimal\n\
    \        var remainder50 = decimal\n        var remainder51 = decimal\n      \
    \  var remainder52 = decimal\n        var remainder53 = decimal\n        var remainder54\
    \ = decimal\n        var remainder55 = decimal\n        var remainder56 = decimal\n\
    \        var remainder57 = decimal\n        var remainder58 = decimal\n      \
    \  var remainder59 = decimal\n        var remainder60 = decimal\n        var remainder61\
    \ = decimal\n        var remainder62 = decimal\n        var remainder63 = decimal\n\
    \        var remainder64 = decimal\n        var remainder65 = decimal\n      \
    \  var remainder66 = decimal\n        var remainder67 = decimal\n        var remainder68\
    \ = decimal\n        var remainder69 = decimal\n        var remainder70 = decimal\n\
    \        var remainder71 = decimal\n        var remainder72 = decimal\n      \
    \  var remainder73 = decimal\n        var remainder74 = decimal\n        var remain\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmps6th6q7_.scala:89:4 ----------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmps6th6q7_.scala:89:5 ---------------------\e[0m\e[0m\n\e[31m89 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        var power = 1\n        while(decimal\
    \ > 0){\n            decimal -= power\n            binary += if(decimal > 0) \"\
    1\" else \"0\"\n            power += 1\n        }\n        binary += \"db\"\n\
    \        while(power.toInt > 0){\n            binary += \"0\"\n            power\
    \ -= 1\n        }\n        binary += \"db\"\n        remainder += power\n    \
    \    while(power.toInt > 0){\n            binary += \"0\"\n            power -=\
    \ 1\n        }\n        binary += if(remainder > 0) \"1\" else \"0\"\n       \
    \ binary += if(remainder == 0) \"0\" else \"1\"\n        binary\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpoo0ojswx.scala:18:22 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            binary += \e[33mif\e[0m(decimal > \e[31m0\e\
    [0m) \e[31m\"1\"\e[0m \e[33melse\e[0m \e[31m\"0\"\e[0m\n\e[31m\e[31m   |\e[0m\
    \                      ^^\e[0m\n\e[31m   |\e[0m                      expression\
    \ expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error:\
    \ /tmp/tmpoo0ojswx.scala:32:18 ---------------------------\e[0m\e[0m\n\e[31m32\
    \ |\e[0m        binary += \e[33mif\e[0m(remainder > \e[31m0\e[0m) \e[31m\"1\"\e\
    [0m \e[33melse\e[0m \e[31m\"0\"\e[0m\n\e[31m\e[31m   |\e[0m                  ^^\e\
    [0m\n\e[31m   |\e[0m                  expression expected but \e[31mif\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpoo0ojswx.scala:33:18\
    \ ---------------------------\e[0m\e[0m\n\e[31m33 |\e[0m        binary += \e[33mif\e\
    [0m(remainder == \e[31m0\e[0m) \e[31m\"0\"\e[0m \e[33melse\e[0m \e[31m\"1\"\e\
    [0m\n\e[31m\e[31m   |\e[0m                  ^^\e[0m\n\e[31m   |\e[0m         \
    \         expression expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpoo0ojswx.scala:17:20 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            decimal -= power\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member\
    \ of Long - did you mean decimal.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659798439
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal % 2\n        decimal\
    \ /= 2\n        while(decimal > 0) {\n            binary.append(remainder)\n \
    \           decimal -= 1\n        }\n        binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkt1vwjbz.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkt1vwjbz.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value /= is not a member of Long\
    \ - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkt1vwjbz.scala:18:20\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            decimal -= \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value -= is not a member of Long - did you mean decimal.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmperi7bz82.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmperi7bz82.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded metho"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.dropRight(1)\n        val bin2 = bin.dropRight(1)\n\
    \        val bin3 = bin2.dropRight(1)\n        val bin4 = bin3.dropRight(1)\n\
    \        val bin5 = bin4.dropRight(1)\n        val bin6 = bin5.dropRight(1)\n\
    \        val bin7 = bin6.dropRight(1)\n        val bin8 = bin7.dropRight(1)\n\
    \        val bin9 = bin8.dropRight(1)\n        val bin10 = bin9.dropRight(1)\n\
    \        val bin11 = bin10.dropRight(1)\n        val bin12 = bin11.dropRight(1)\n\
    \        val bin13 = bin12.dropRight(1)\n        val bin14 = bin13.dropRight(1)\n\
    \        val bin15 = bin14.dropRight(1)\n        val bin16 = bin15.dropRight(1)\n\
    \        val bin17 = bin16.dropRight(1)\n        val bin18 = bin17.dropRight(1)\n\
    \        val bin19 = bin18.dropRight(1)\n        val bin20 = bin19.dropRight(1)\n\
    \        val bin21 = bin20.dropRight(1)\n        val bin22 = bin21.dropRight(1)\n\
    \        val bin23 = bin22.dropRight(1)\n        val bin24 = bin23.dropRight(1)\n\
    \        val bin25 = bin24.dropRight(1)\n        val bin26 = bin25.dropRight(1)\n\
    \        val bin27 = bin26.dropRight(1)\n        val bin28 = bin27.dropRight(1)\n\
    \        val bin29 = bin28.dropRight(1)\n        val bin30 = bin29.dropRight(1)\n\
    \        val bin31 = bin30.dropRight(1)\n        val bin32 = bin31.dropRight(1)\n\
    \        val bin33 = bin32.dropRight(1)\n        val bin34 = bin33.dropRight(1)\n\
    \        val bin35 = bin34.dropRight(1)\n        val bin36 = bin35.dropRight(1)\n\
    \        val bin37 = bin36.dropRight(1)\n        val bin38 = bin37.dropRight(1)\n\
    \        val bin39 = bin38.dropRight(1)\n        val bin40 = bin39.dropRight(1)\n\
    \        val bin41 = bin40.dropRight(1)\n        val bin42 = bin41.dropRight(1)\n\
    \        val bin43 = bin42.dropRight(1)\n        val bin44 = bin43.dropRight(1)\n\
    \        val bin45 = bin44.dropRight(1)\n        val bin46 = bin45.dropRight(1)\n\
    \        val bin47\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwoqo8pv2.scala:61:4 ----------------------------\e\
    [0m\e[0m\n\e[31m61 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpwoqo8pv2.scala:61:5 ---------------------\e[0m\e[0m\n\e[31m61 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798440
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.takeWhile(_ != '0')\n\
    \        val binary = binary.reverse\n        val binary = binary.takeWhile(_\
    \ != '1')\n        binary.mkString\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpngd8o77z.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.takeWhile(_\
    \ != \e[31m'0'\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpngd8o77z.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpngd8o77z.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.takeWhile(_ != \e[31m'1'\e[0m)\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n3 errors found\n"
  stdout: ''
  timestamp: 1659798437
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val decimalString = decimal.toString\n      \
    \  val decimalLength = decimalString.length\n        val decimalDigits = decimalString.dropRight(1)\n\
    \        val binaryDigits = decimalDigits.reverse.grouped(2).map(_.mkString).reverse\n\
    \        val binaryLength = binaryDigits.length\n        val binaryDigit = binaryDigits(0)\n\
    \        val binaryDigits = binaryDigits.drop(1)\n        val binaryDigitLength\
    \ = binaryDigits.length\n        val binaryDigit = binaryDigits(0)\n        val\
    \ binaryDigits = binaryDigits.drop(1)\n        val binaryDigitLength = binaryDigits.length\n\
    \        val binaryDigit = binaryDigits(0)\n        val binaryDigits = binaryDigits.drop(1)\n\
    \        val binaryDigitLength = binaryDigits.length\n        val binaryDigit\
    \ = binaryDigits(0)\n        val binaryDigits = binaryDigits.drop(1)\n       \
    \ val binaryDigitLength = binaryDigits.length\n        val binaryDigit = binaryDigits(0)\n\
    \        val binaryDigits = binaryDigits.drop(1)\n        val binaryDigitLength\
    \ = binaryDigits.length\n        val binaryDigit = binaryDigits(0)\n        val\
    \ binaryDigits = binaryDigits.drop(1)\n        val binaryDigitLength = binaryDigits.length\n\
    \        val binaryDigit = binaryDigits(0)\n        val binaryDigits = binaryDigits.drop(1)\n\
    \        val binaryDigitLength = binaryDigits.length\n        val binaryDigit\
    \ = binaryDigits(0)\n        val binaryDigits = binaryDigits.drop(1)\n       \
    \ val binaryDigitLength = binaryDigits.length\n        val binaryDigit = binaryDigits(0)\n\
    \        val binaryDigits = binaryDigits.drop(1)\n        val binaryDigitLength\
    \ = binaryDigits.length\n        val binaryDigit = binaryDigits(0)\n        val\
    \ binaryDigits = binaryDigits.drop(1)\n        val binaryDigitLength = binaryDigits.length\n\
    \        val binaryDigit = binaryDigits(0)\n        val binaryDigits = binaryDigits.drop(1)\n\
    \        val binaryDigitLength = binaryDigits.length\n        val binaryDigit\
    \ = binaryDigits(0)\n        val binaryDigits = binaryDigits.drop(1)\n       \
    \ val binaryDigitLength = binaryDigits.length\n        val binaryDigit = binaryDigits(0)\n\
    \        val binaryDigits = binaryDigits.drop(1)\n        val binaryDigitLength\
    \ = binaryDigits.length\n        val binaryDigit = binaryDigits(0)\n        val\
    \ binaryDigits = binaryDigits.drop(1)\n        val binaryDigitLength = binaryDigits.length\n\
    \        val binaryDigit = binaryDigits(0)\n        val binaryDigits = binaryDigits.drop(1)\n\
    \        val binaryDigitLength = binary\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwl26kbg4.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mbinaryDigits\e[0m = binaryDigits.drop(\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryDigits is already defined as \e[33mvalue\e[0m \e[35mbinaryDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwl26kbg4.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mbinaryDigit\e[0m = binaryDigits(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinaryDigit is already defined as \e[33mvalue\e[0m \e[35mbinaryDigit\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwl26kbg4.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mbinaryDigits\e[0m = binaryDigits.drop(\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryDigits is already defined as \e[33mvalue\e[0m \e[35mbinaryDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwl26kbg4.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mbinaryDigitLength\e[0m = binaryDigits.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mbinaryDigitLength is already defined as \e[33mvalue\e[0m \e[35mbinaryDigitLength\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwl26kbg4.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mbinaryDigit\e[0m = binaryDigits(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^"
  stdout: ''
  timestamp: 1659798441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        var remainder2 = decimal\n      \
    \  while(decimal != 0) {\n            decimal /= 2\n            remainder2 /=\
    \ 2\n            binary += (remainder % 2 == 0 ? \"1\" : \"0\")\n            remainder\
    \ = remainder2\n        }\n        binary += \"db\" + binary + \"db\"\n      \
    \  return binary\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphu3736d9.scala:17:20 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member\
    \ of Long - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphu3736d9.scala:19:19\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            binary += (remainder\
    \ % \e[31m2\e[0m == \e[31m0\e[0m ? \e[31m\"1\"\e[0m : \e[31m\"0\"\e[0m)\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of String - did you mean String.!=?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmphu3736d9.scala:19:42 ------------------------\e[0m\e[0m\n\
    \e[31m19 |\e[0m            binary += (remainder % \e[31m2\e[0m == \e[31m0\e[0m\
    \ ? \e[31m\"1\"\e[0m : \e[31m\"0\"\e[0m)\n\e[31m\e[31m   |\e[0m              \
    \                          ^^^\e[0m\n\e[31m   |\e[0m                         \
    \               value ? is not a member of Int\n3 errors found\n"
  stdout: ''
  timestamp: 1659798441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n   \
    \     val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpayp0lsjf.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpayp0lsjf.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpayp0lsjf.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpayp0lsjf.scala:17:12 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpayp0lsjf.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is "
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3jybpe7t.scala:52:33 ---------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(\n\
    \e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m\
    \                                 expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3jybpe7t.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp3jybpe7t.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is "
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.drop(bin.length/2).reverse\n\
    \        val binary = binary.dropRight(bin.length/2).reverse\n        val binary\
    \ = binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpqrfpweqk.scala:50:20 ---------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \n\e[31m\e\
    [31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m                    expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpqrfpweqk.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.drop(bin.length/\e[31m2\e\
    [0m).reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqrfpweqk.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(bin.length/\e\
    [31m2\e[0m).reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqrfpweqk.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(bin.length/\e\
    [31m2\e[0m).reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqrfpweqk.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(bin.length/\e\
    [31m2\e[0m).reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is alre"
  stdout: ''
  timestamp: 1659798441
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val db = \"db\"\n        val result\
    \ = new StringBuilder\n        var i = 0\n        while (i < bin.length) {\n \
    \           if (bin(i) == '1') {\n                result.append(db)\n        \
    \    } else {\n                result.append(bin(i))\n            }\n        \
    \    i += 1\n        }\n        result.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4vh6gycu.scala:29)\n\tat Problem.main(tmp4vh6gycu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val result = binary.reverse.dropWhile(c => c != '1').takeWhile(c => c\
    \ != '0').mkString\n        result + s\"db${binary.reverse.takeWhile(c => c !=\
    \ '1').mkString}\"\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvbuauy3v.scala:18)\n\tat Problem.main(tmpvbuauy3v.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798442
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val result = binary.reverse.dropWhile(_ == '0').dropWhile(_ == '1').mkString\n\
    \        result + \"db\"\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpn7snxqf2.scala:18)\n\tat Problem.main(tmpn7snxqf2.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmperi7bz82.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmperi7bz82.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded metho"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        var remainder2 = decimal\n      \
    \  var remainder3 = decimal\n        var remainder4 = decimal\n        var remainder5\
    \ = decimal\n        var remainder6 = decimal\n        var remainder7 = decimal\n\
    \        var remainder8 = decimal\n        var remainder9 = decimal\n        var\
    \ remainder10 = decimal\n        var remainder11 = decimal\n        var remainder12\
    \ = decimal\n        var remainder13 = decimal\n        var remainder14 = decimal\n\
    \        var remainder15 = decimal\n        var remainder16 = decimal\n      \
    \  var remainder17 = decimal\n        var remainder18 = decimal\n        var remainder19\
    \ = decimal\n        var remainder20 = decimal\n        var remainder21 = decimal\n\
    \        var remainder22 = decimal\n        var remainder23 = decimal\n      \
    \  var remainder24 = decimal\n        var remainder25 = decimal\n        var remainder26\
    \ = decimal\n        var remainder27 = decimal\n        var remainder28 = decimal\n\
    \        var remainder29 = decimal\n        var remainder30 = decimal\n      \
    \  var remainder31 = decimal\n        var remainder32 = decimal\n        var remainder33\
    \ = decimal\n        var remainder34 = decimal\n        var remainder35 = decimal\n\
    \        var remainder36 = decimal\n        var remainder37 = decimal\n      \
    \  var remainder38 = decimal\n        var remainder39 = decimal\n        var remainder40\
    \ = decimal\n        var remainder41 = decimal\n        var remainder42 = decimal\n\
    \        var remainder43 = decimal\n        var remainder44 = decimal\n      \
    \  var remainder45 = decimal\n        var remainder46 = decimal\n        var remainder47\
    \ = decimal\n        var remainder48 = decimal\n        var remainder49 = decimal\n\
    \        var remainder50 = decimal\n        var remainder51 = decimal\n      \
    \  var remainder52 = decimal\n        var remainder53 = decimal\n        var remainder54\
    \ = decimal\n        var remainder55 = decimal\n        var remainder56 = decimal\n\
    \        var remainder57 = decimal\n        var remainder58 = decimal\n      \
    \  var remainder59 = decimal\n        var remainder60 = decimal\n        var remainder61\
    \ = decimal\n        var remainder62 = decimal\n        var remainder63 = decimal\n\
    \        var remainder64 = decimal\n        var remainder65 = decimal\n      \
    \  var remainder66 = decimal\n        var remainder67 = decimal\n        var remainder68\
    \ = decimal\n        var remainder69 = decimal\n        var remainder70 = decimal\n\
    \        var remainder71 = decimal\n        var remainder72 = decimal\n      \
    \  var remainder73 = decimal\n        var remainder74 = decimal\n        var remain\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmps6th6q7_.scala:89:4 ----------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmps6th6q7_.scala:89:5 ---------------------\e[0m\e[0m\n\e[31m89 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val result = binary.reverse\n        val db = \"db\"\n        val db2\
    \ = db + db + db + db + db + db + db + db + db + db + db + db + db + db + db +\
    \ db + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db\
    \ + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db +\
    \ db + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db\
    \ + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db +\
    \ db + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db\
    \ + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db +\
    \ db + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db\
    \ + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db +\
    \ db + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db\
    \ + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db +\
    \ db + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db\
    \ + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db +\
    \ db + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db\
    \ + db + db + db + db + db + db + db + db + db + db + db + db + db + db + db +\
    \ db + db + db + db + db + db + db + db + db + db + db\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.core.Hashable.finishHash$(Hashable.scala:42)\n\
    \tat dotty.tools.dotc.core.Types$Type.finishHash(Types.scala:90)\n\tat dotty.tools.dotc.core.Hashable.doHash(Hashable.scala:95)\n\
    \tat dotty.tools.dotc.core.Hashable.doHash$(Hashable.scala:42)\n\tat dotty.tools.dotc.core.Types$Type.doHash(Types.scala:90)\n\
    \tat dotty.tools.dotc.typer.ProtoTypes$SelectionProto.computeHash(ProtoTypes.scala:230)\n\
    \tat dotty.tools.dotc.core.Types$CachedProxyType.hash(Types.scala:1985)\n\tat\
    \ dotty.tools.dotc.core.Hashable.typeHash(Hashable.scala:51)\n\tat dotty.tools.dotc.core.Hashable.typeHash$(Hashable.scala:42)\n\
    \tat dotty.tools.dotc.core.Types$Type.typeHash(Types.scala:90)\n\tat dotty.tools.dotc.core.Hashable.finishHash(Hashable.scala:56)\n\
    \tat dotty.tools.dotc.core.Hashable.finishHash$(Hashable.scala:42)\n\tat dotty.tools.dotc.core.Types$Type.finishHash(Types.scala:90)\n\
    \tat dotty.tools.dotc.core.Hashable.doHash(Hashable.scala:92)\n\tat dotty.tools.dotc.core.Hashable.doHash$(Hashable.scala:42)\n\
    \tat dotty.tools.dotc.core.Types$Type.doHash(Types.scala:90)\n\tat dotty.tools.dotc.typer.ProtoTypes$IgnoredProto.computeHash(ProtoTypes.scala:137)\n\
    \tat dotty.tools.dotc.core.Types$CachedGroundType.hash(Types.scala:1971)\n\tat\
    \ dotty.tools.dotc.core.Uniques$.unique(Uniques.scala:33)\n\tat dotty.tools.dotc.typer.ProtoTypes$IgnoredProto$.apply(ProtoTypes.scala:151)\n\
    \tat dotty.tools.dotc.typer.Applications.realApply$1(Applications.scala:896)\n\
    \tat dotty.tools.dotc.typer.Applications.typedApply(Applications.scala:1040)\n\
    \tat dotty.tools.dotc.typer.Applications.typedApply$(Applications.scala:327)\n\
    \tat dotty.tools.dotc.typer.Typer.typedApply(Typer.scala:117)\n\tat dotty.tools.dotc.typer.Typer.typedInfixOp(Typer.scala:2717)\n\
    \tat dotty.tools.dotc.typer.Typer.typedUnnamed$1(Typer.scala:2871)\n\tat dotty.tools.dotc.typer.Typer.typedUnadapted(Typer.scala:2895)\n\
    \tat dotty.tools.dotc.typer.Typer.typed(Typer.scala:2960)\n\tat dotty.tools.dotc.typer.Typer.typed(Typer.scala:2964)\n\
    \tat dotty.tools.dotc.typer.Typer.typedExpr(Typer.scala:308"
  stdout: 'java.lang.StackOverflowError while compiling /tmp/tmpx4ibt5j8.scala

    '
  timestamp: 1659798438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryLength = binary.length\n        val binaryString = binary.substring(binaryLength\
    \ - 2)\n        val binaryStringLength = binaryString.length\n        val binaryStringBuilder\
    \ = new StringBuilder(binaryStringLength)\n        binaryStringBuilder.append(binaryString)\n\
    \        binaryStringBuilder.reverse()\n        binaryStringBuilder.insert(0,\
    \ \"db\")\n        binaryStringBuilder.toString()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp59pqy06l.scala:19:35 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        binaryStringBuilder.reverse()\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmissing argument\
    \ for parameter i of \e[33mmethod\e[0m \e[35mapply\e[0m in \e[33mclass\e[0m \e\
    [35mStringBuilder\e[0m: (i: Int): Char\n1 error found\n"
  stdout: ''
  timestamp: 1659798440
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.substring(binary.length - 2)\n        val binary\
    \ = binary.substring(0, binary.length - 2)\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo9rjng6s.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.substring(binary.length\
    \ - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.substring(\e[31m0\e\
    [0m, binary.length - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo9rjng6s.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33m"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        var remainder2 = decimal\n      \
    \  var remainder3 = decimal\n        var remainder4 = decimal\n        var remainder5\
    \ = decimal\n        var remainder6 = decimal\n        var remainder7 = decimal\n\
    \        var remainder8 = decimal\n        var remainder9 = decimal\n        var\
    \ remainder10 = decimal\n        var remainder11 = decimal\n        var remainder12\
    \ = decimal\n        var remainder13 = decimal\n        var remainder14 = decimal\n\
    \        var remainder15 = decimal\n        var remainder16 = decimal\n      \
    \  var remainder17 = decimal\n        var remainder18 = decimal\n        var remainder19\
    \ = decimal\n        var remainder20 = decimal\n        var remainder21 = decimal\n\
    \        var remainder22 = decimal\n        var remainder23 = decimal\n      \
    \  var remainder24 = decimal\n        var remainder25 = decimal\n        var remainder26\
    \ = decimal\n        var remainder27 = decimal\n        var remainder28 = decimal\n\
    \        var remainder29 = decimal\n        var remainder30 = decimal\n      \
    \  var remainder31 = decimal\n        var remainder32 = decimal\n        var remainder33\
    \ = decimal\n        var remainder34 = decimal\n        var remainder35 = decimal\n\
    \        var remainder36 = decimal\n        var remainder37 = decimal\n      \
    \  var remainder38 = decimal\n        var remainder39 = decimal\n        var remainder40\
    \ = decimal\n        var remainder41 = decimal\n        var remainder42 = decimal\n\
    \        var remainder43 = decimal\n        var remainder44 = decimal\n      \
    \  var remainder45 = decimal\n        var remainder46 = decimal\n        var remainder47\
    \ = decimal\n        var remainder48 = decimal\n        var remainder49 = decimal\n\
    \        var remainder50 = decimal\n        var remainder51 = decimal\n      \
    \  var remainder52 = decimal\n        var remainder53 = decimal\n        var remainder54\
    \ = decimal\n        var remainder55 = decimal\n        var remainder56 = decimal\n\
    \        var remainder57 = decimal\n        var remainder58 = decimal\n      \
    \  var remainder59 = decimal\n        var remainder60 = decimal\n        var remainder61\
    \ = decimal\n        var remainder62 = decimal\n        var remainder63 = decimal\n\
    \        var remainder64 = decimal\n        var remainder65 = decimal\n      \
    \  var remainder66 = decimal\n        var remainder67 = decimal\n        var remainder68\
    \ = decimal\n        var remainder69 = decimal\n        var remainder70 = decimal\n\
    \        var remainder71 = decimal\n        var remainder72 = decimal\n      \
    \  var remainder73 = decimal\n        var remainder74 = decimal\n        var remain\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmps6th6q7_.scala:89:4 ----------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmps6th6q7_.scala:89:5 ---------------------\e[0m\e[0m\n\e[31m89 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val bin2 = bin.take(bin.length / 2)\n\
    \        val bin3 = bin2.reverse\n        val bin4 = bin3.take(bin3.length / 2)\n\
    \        val bin5 = bin4.reverse\n        val bin6 = bin5.reverse\n        val\
    \ bin7 = bin6.reverse\n        val bin8 = bin7.reverse\n        val bin9 = bin8.reverse\n\
    \        val bin10 = bin9.reverse\n        val bin11 = bin10.reverse\n       \
    \ val bin12 = bin11.reverse\n        val bin13 = bin12.reverse\n        val bin14\
    \ = bin13.reverse\n        val bin15 = bin14.reverse\n        val bin16 = bin15.reverse\n\
    \        val bin17 = bin16.reverse\n        val bin18 = bin17.reverse\n      \
    \  val bin19 = bin18.reverse\n        val bin20 = bin19.reverse\n        val bin21\
    \ = bin20.reverse\n        val bin22 = bin21.reverse\n        val bin23 = bin22.reverse\n\
    \        val bin24 = bin23.reverse\n        val bin25 = bin24.reverse\n      \
    \  val bin26 = bin25.reverse\n        val bin27 = bin26.reverse\n        val bin28\
    \ = bin27.reverse\n        val bin29 = bin28.reverse\n        val bin30 = bin29.reverse\n\
    \        val bin31 = bin30.reverse\n        val bin32 = bin31.reverse\n      \
    \  val bin33 = bin32.reverse\n        val bin34 = bin33.reverse\n        val bin35\
    \ = bin34.reverse\n        val bin36 = bin35.reverse\n        val bin37 = bin36.reverse\n\
    \        val bin38 = bin37.reverse\n        val bin39 = bin38.reverse\n      \
    \  val bin40 = bin39.reverse\n        val bin41 = bin40.reverse\n        val bin42\
    \ = bin41.reverse\n        val bin43 = bin42.reverse\n        val bin44 = bin43.reverse\n\
    \        val bin45 = bin44.reverse\n        val bin46 = bin45.reverse\n      \
    \  val bin47 = bin46.reverse\n        val bin48 = bin47.reverse\n        val bin49\
    \ = bin48.reverse\n        val bin50 = bin49.reverse\n        val bin51 = bin50.reverse\n\
    \        val bin52 = bin51.reverse\n        val bin53 = bin52.reverse\n      \
    \  val bin54 = bin53.reverse\n        val bin55 = bin54.reverse\n        val \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp6cuamkld.scala:69:11 ---------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6cuamkld.scala:70:5 ---------------------\e\
    [0m\e[0m\n\e[31m70 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659798442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxx0fg9jj.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxx0fg9jj.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length - \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxx0fg9jj.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length - \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:18:12 ----------------------"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val result = binary.reverse\n        val extraChars = result.take(decimal.toInt)\n\
    \        val extraCharsReversed = extraChars.reverse\n        val extraCharsReversedString\
    \ = extraCharsReversed.mkString\n        val extraCharsReversedStringLength =\
    \ extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0n20evy4.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedStringLength\e\
    [0m = extraCharsReversedStringLength + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mextraCharsReversedStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mextraCharsReversedStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0n20evy4.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedStringLength\e\
    [0m = extraCharsReversedStringLength + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mextraCharsReversedStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mextraCharsReversedStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0n20evy4.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedStringLength\e\
    [0m = extraCharsReversedStringLength + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mextraCharsReversedStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mextraCharsReversedStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0n20evy4.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedStringLength\e\
    [0m = extraCharsReversedStringLength + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mextraCharsReversedStringLength is "
  stdout: ''
  timestamp: 1659798442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.substring(binary.length - 2)\n        val binary\
    \ = binary.substring(0, binary.length - 2)\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo9rjng6s.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.substring(binary.length\
    \ - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.substring(\e[31m0\e\
    [0m, binary.length - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo9rjng6s.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo9rjng6s.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33m"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu1nugfsl.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.dropRight(binary.length-1)\n        val bin2 = bin.dropRight(bin.length-1)\n\
    \        val bin3 = bin2.dropRight(bin2.length-1)\n        val bin4 = bin3.dropRight(bin3.length-1)\n\
    \        val bin5 = bin4.dropRight(bin4.length-1)\n        val bin6 = bin5.dropRight(bin5.length-1)\n\
    \        val bin7 = bin6.dropRight(bin6.length-1)\n        val bin8 = bin7.dropRight(bin7.length-1)\n\
    \        val bin9 = bin8.dropRight(bin8.length-1)\n        val bin10 = bin9.dropRight(bin9.length-1)\n\
    \        val bin11 = bin10.dropRight(bin10.length-1)\n        val bin12 = bin11.dropRight(bin11.length-1)\n\
    \        val bin13 = bin12.dropRight(bin12.length-1)\n        val bin14 = bin13.dropRight(bin13.length-1)\n\
    \        val bin15 = bin14.dropRight(bin14.length-1)\n        val bin16 = bin15.dropRight(bin15.length-1)\n\
    \        val bin17 = bin16.dropRight(bin16.length-1)\n        val bin18 = bin17.dropRight(bin17.length-1)\n\
    \        val bin19 = bin18.dropRight(bin18.length-1)\n        val bin20 = bin19.dropRight(bin19.length-1)\n\
    \        val bin21 = bin20.dropRight(bin20.length-1)\n        val bin22 = bin21.dropRight(bin21.length-1)\n\
    \        val bin23 = bin22.dropRight(bin22.length-1)\n        val bin24 = bin23.dropRight(bin23.length-1)\n\
    \        val bin25 = bin24.dropRight(bin24.length-1)\n        val bin26 = bin25.dropRight(bin25.length-1)\n\
    \        val bin27 = bin26.dropRight(bin26.length-1)\n        val bin28 = bin27.dropRight(bin27.length-1)\n\
    \        val bin29 = bin28.dropRight(bin28.length-1)\n        val bin30 = bin29.dropRight(bin29.length-1)\n\
    \        val bin31 = bin30.dropRight(bin30.length-1)\n        val bin32 = bin31.dropRight(bin31.length-1)\n\
    \        val bin33 = bin32.dropRight(bin32.length-1)\n        val bin34 = bin33.dropRight(bin33.length-1)\n\
    \        val bin35 = bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi6u2k3us.scala:49:5\
    \ ---------------------\e[0m\e[0m\n\e[31m49 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val result = binary.reverse.dropWhile(_ == '0').dropWhile(_ == '1').mkString\n\
    \        result + \"db\"\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpn7snxqf2.scala:18)\n\tat Problem.main(tmpn7snxqf2.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryLength = binary.length\n        val extraChars = binaryLength\
    \ % 2\n        val binaryString = binary.padToEven(extraChars)\n        val binaryStringLength\
    \ = binaryString.length\n        val extraCharsString = if (extraChars == 0) \"\
    \" else s\"db$extraChars\"\n        val binaryStringWithExtraChars = binaryString\
    \ + extraCharsString\n        binaryStringWithExtraChars\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpze5vjrul.scala:16:34 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mbinaryString\e[0m = binary.padToEven(extraChars)\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                           value padToEven is not a member of String\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659798441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryString = binary.substring(binary.length - 2)\n        val binaryString\
    \ = binaryString.reverse\n        val binaryString = binaryString.substring(0,binaryString.length\
    \ - 2)\n        binaryString\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwxhwi8fa.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinaryString\e[0m = binaryString.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinaryString is already defined as \e[33mvalue\e[0m \e[35mbinaryString\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwxhwi8fa.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinaryString\e[0m = binaryString.substring(\e\
    [31m0\e[0m,binaryString.length - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryString is already defined as \e[33mvalue\e[0m \e[35mbinaryString\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659798439
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.MutableList[String]()\n        val remainder = decimal % 2\n       \
    \ decimal /= 2\n        while(decimal > 0) {\n            binary.append(remainder\
    \ % 2)\n            remainder /= 2\n        }\n        binary.reverse.mkString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4_1ps6_c.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.MutableList[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4_1ps6_c.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value\
    \ /= is not a member of Long - did you mean decimal.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp4_1ps6_c.scala:18:22 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m            remainder /= \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           value /= is not a\
    \ member of Long - did you mean remainder.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659798442
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryLength = binary.length\n        val binaryStringBuilder = new\
    \ StringBuilder\n        binaryStringBuilder.append(binary.charAt(0))\n      \
    \  binaryStringBuilder.append(binary.charAt(binaryLength - 1))\n        binaryStringBuilder.append(\"\
    db\")\n        binaryStringBuilder.append(binary.charAt(binaryLength - 2))\n \
    \       binaryStringBuilder.append(binary.charAt(binaryLength - 3))\n        binaryStringBuilder.append(\"\
    db\")\n        binaryStringBuilder.append(binary.charAt(binaryLength - 4))\n \
    \       binaryStringBuilder.append(binary.charAt(binaryLength - 5))\n        binaryStringBuilder.append(binary.charAt(binaryLength\
    \ - 6))\n        binaryStringBuilder.append(binary.charAt(binaryLength - 7))\n\
    \        binaryStringBuilder.append(binary.charAt(binaryLength - 8))\n       \
    \ binaryStringBuilder.append(binary.charAt(binaryLength - 9))\n        binaryStringBuilder.append(binary.charAt(binaryLength\
    \ - 10))\n        binaryStringBuilder.append(binary.charAt(binaryLength - 11))\n\
    \        binaryStringBuilder.append(binary.charAt(binaryLength - 12))\n      \
    \  binaryStringBuilder.append(binary.charAt(binaryLength - 13))\n        binaryStringBuilder.append(binary.charAt(binaryLength\
    \ - 14))\n        binaryStringBuilder.append(binary.charAt(binaryLength - 15))\n\
    \        binaryStringBuilder.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: String index out of range: -1\n\
    \tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\tat java.base/java.lang.String.charAt(String.java:1515)\n\
    \tat Problem$.decimalToBinary(tmpn3c8atni.scala:19)\n\tat Problem$.main(tmpn3c8atni.scala:37)\n\
    \tat Problem.main(tmpn3c8atni.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val result = binary.reverse\n        val extraChars = result.takeWhile(x\
    \ => x != '0')\n        val extraCharsReversed = extraChars.reverse\n        val\
    \ extraCharsReversedString = extraCharsReversed.mkString\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkoa0vori.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedStringLength\e\
    [0m = extraCharsReversedStringLength + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mextraCharsReversedStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mextraCharsReversedStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkoa0vori.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedStringLength\e\
    [0m = extraCharsReversedStringLength + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mextraCharsReversedStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mextraCharsReversedStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkoa0vori.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedStringLength\e\
    [0m = extraCharsReversedStringLength + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mextraCharsReversedStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mextraCharsReversedStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkoa0vori.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedStringLength\e\
    [0m = extraCharsReversedStringLength + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mextraCharsReversedStringLength is "
  stdout: ''
  timestamp: 1659798442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.takeWhile(_ != '0')\n\
    \        val binary = binary.dropWhile(_ != '1')\n        binary.reverse\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0ytwxx08.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.takeWhile(_\
    \ != \e[31m'0'\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp0ytwxx08.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropWhile(_ !=\
    \ \e[31m'1'\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659798440
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx3j7nje9.scala:58:4 ----------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx3j7nje9.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx3j7nje9.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length\
    \ / \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx3j7nje9.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx3j7nje9.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length / \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpx3j7nje9.scala:18:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1659798443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal\n        val decimalToBinaryHelper\
    \ = (remainder / 2).toInt\n        val remainderToBinaryHelper = remainder % 2\n\
    \        binary.append(decimalToBinaryHelper.toString)\n        binary.append(remainderToBinaryHelper.toString)\n\
    \        binary.append(\"db\")\n        binary.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpttj9p9mv.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659798441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryLength = binary.length\n        val binaryString = new StringBuilder(binaryLength)\n\
    \        for(i <- 0 until binaryLength) {\n            binaryString.append(binary(i))\n\
    \        }\n        binaryString.reverse\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9mm0wekh.scala:19:21\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        binaryString.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \  Found:    StringBuilder\n\e[31m   |\e[0m        Required: String\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659798448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val bin2 = bin.drop(bin.length - bin.length\
    \ % 2)\n        val bin3 = bin2.reverse\n        val bin4 = bin3.drop(bin3.length\
    \ - bin3.length % 2)\n        val bin5 = bin4.reverse\n        val bin6 = bin5.reverse\n\
    \        val bin7 = bin6.reverse\n        val bin8 = bin7.reverse\n        val\
    \ bin9 = bin8.reverse\n        val bin10 = bin9.reverse\n        val bin11 = bin10.reverse\n\
    \        val bin12 = bin11.reverse\n        val bin13 = bin12.reverse\n      \
    \  val bin14 = bin13.reverse\n        val bin15 = bin14.reverse\n        val bin16\
    \ = bin15.reverse\n        val bin17 = bin16.reverse\n        val bin18 = bin17.reverse\n\
    \        val bin19 = bin18.reverse\n        val bin20 = bin19.reverse\n      \
    \  val bin21 = bin20.reverse\n        val bin22 = bin21.reverse\n        val bin23\
    \ = bin22.reverse\n        val bin24 = bin23.reverse\n        val bin25 = bin24.reverse\n\
    \        val bin26 = bin25.reverse\n        val bin27 = bin26.reverse\n      \
    \  val bin28 = bin27.reverse\n        val bin29 = bin28.reverse\n        val bin30\
    \ = bin29.reverse\n        val bin31 = bin30.reverse\n        val bin32 = bin31.reverse\n\
    \        val bin33 = bin32.reverse\n        val bin34 = bin33.reverse\n      \
    \  val bin35 = bin34.reverse\n        val bin36 = bin35.reverse\n        val bin37\
    \ = bin36.reverse\n        val bin38 = bin37.reverse\n        val bin39 = bin38.reverse\n\
    \        val bin40 = bin39.reverse\n        val bin41 = bin40.reverse\n      \
    \  val bin42 = bin41.reverse\n        val bin43 = bin42.reverse\n        val bin44\
    \ = bin43.reverse\n        val bin45 = bin44.reverse\n        val bin46 = bin45.reverse\n\
    \        val bin47 = bin46.reverse\n        val bin48 = bin47.reverse\n      \
    \  val bin49 = bin48.reverse\n        val bin50 = bin49.reverse\n        val bin51\
    \ = bin50.reverse\n        val bin52 = bin51.reverse\n        val bin53 = bin52.reverse\n\
    \        val bin54 = bin53.reverse\n        val bin55 = bin\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpkk_bo770.scala:69:5\
    \ ---------------------\e[0m\e[0m\n\e[31m69 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798449
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        var remainder2 = decimal\n      \
    \  while(decimal != 0){\n            decimal /= 2\n            binary += \"0\"\
    \n        }\n        while(decimal != 0){\n            decimal /= 2\n        \
    \    binary += \"1\"\n        }\n        while(decimal != 0){\n            decimal\
    \ /= 2\n            binary += \"0\"\n        }\n        while(decimal != 0){\n\
    \            decimal /= 2\n            binary += \"1\"\n        }\n        while(decimal\
    \ != 0){\n            decimal /= 2\n            binary += \"0\"\n        }\n \
    \       while(decimal != 0){\n            decimal /= 2\n            binary +=\
    \ \"1\"\n        }\n        while(decimal != 0){\n            decimal /= 2\n \
    \           binary += \"0\"\n        }\n        while(decimal != 0){\n       \
    \     decimal /= 2\n            binary += \"1\"\n        }\n        while(decimal\
    \ != 0){\n            decimal /= 2\n            binary += \"0\"\n        }\n \
    \       while(decimal != 0){\n            decimal /= 2\n            binary +=\
    \ \"1\"\n        }\n        while(decimal != 0){\n            decimal /= 2\n \
    \           binary += \"0\"\n        }\n        while(decimal != 0){\n       \
    \     decimal /= 2\n            binary += \"1\"\n        }\n        while(decimal\
    \ != 0){\n            decimal /= 2\n            binary += \"0\"\n        }\n \
    \       while(decimal != 0){\n            decimal /= 2\n            binary +=\
    \ \"1\"\n        }\n        while(decimal != 0){\n            decimal /= 2\n \
    \           binary += \"0\"\n        }\n        while(decimal != 0){\n       \
    \     decimal /= 2\n            binary += \"1\"\n        }\n        while(decimal\
    \ != 0){\n            decimal /= 2\n            binary += \"0\"\n        }\n \
    \       while(decimal != 0){\n            decimal /= 2\n            binary +=\
    \ \"1\"\n        }\n        while(decimal != 0){\n            decimal /= 2\n \
    \           binary += \"0\"\n        }\n        while(decimal != 0){\n       \
    \     decimal /= 2\n            binary += \"1\"\n        }\n        while(decimal\
    \ != 0){\n            decimal /= 2\n            binary += \"0\"\n        }\n \
    \       while(decimal != 0){\n            decimal /= 2\n            binary +=\
    \ \"1\"\n        }\n        while(decimal != 0){\n            decimal /= 2\n \
    \           binary += \"0\"\n        }\n        while(decimal != 0){\n       \
    \     decimal /= 2\n            binary += \"1\"\n        }\n        while(decimal\
    \ != 0){\n            decimal /= 2\n            binary += \"0\"\n        }\n \
    \       while(decimal != 0){\n            decimal /= 2\n            binary +=\
    \ \"1\"\n        }\n        while(\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp1qygu1me.scala:120:14 --------------------------\e\
    [0m\e[0m\n\e[31m120 |\e[0m        \e[33mwhile\e[0m(\n\e[31m\e[31m    |\e[0m  \
    \            ^\e[0m\n\e[31m    |\e[0m              expression expected but \e\
    [31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1qygu1me.scala:17:20\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            decimal /= \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value /= is not a member of Long - did you mean decimal.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp1qygu1me.scala:21:20 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member\
    \ of Long - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1qygu1me.scala:25:20\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m            decimal /= \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value /= is not a member of Long - did you mean decimal.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp1qygu1me.scala:29:20 ------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m            decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member\
    \ of Long - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1qygu1me.scala:33:20\
    \ ------------------------\e[0m\e[0m\n\e[31m33 |\e[0m            decimal /= \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value /= is not a member of Long - did you mean decimal.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp1qygu1me.scala:37:20 ------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m            decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member\
    \ of Long - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1qygu1me.s"
  stdout: ''
  timestamp: 1659798452
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.take(decimal)\n  \
    \      val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal)\n\
    \        val binary = binary.reverse\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_3h7vi8v.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.take(decimal)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_3h7vi8v.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_3h7vi8v.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.take(decimal)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp_3h7vi8v.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_3h7vi8v.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.take(decimal)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must "
  stdout: ''
  timestamp: 1659798451
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.substring(binary.length - 2)\n        val binary = bin.substring(0,\
    \ bin.length - 1)\n        val binary = binary.concat(\"db\")\n        binary\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_wjot54t.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.substring(\e\
    [31m0\e[0m, bin.length - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_wjot54t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.concat(\e[31m\"\
    db\"\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659798416
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx3j7nje9.scala:58:4 ----------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx3j7nje9.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx3j7nje9.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length\
    \ / \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx3j7nje9.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx3j7nje9.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length / \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpx3j7nje9.scala:18:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1659798443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu1nugfsl.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmperi7bz82.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmperi7bz82.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded metho"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val decimalString = decimal.toString\n      \
    \  val decimalLength = decimalString.length\n        val remainder = decimalString.drop(decimalLength)\n\
    \        val remainderString = remainder.toString\n        val remainderLength\
    \ = remainderString.length\n        val binaryLength = decimalLength + remainderLength\n\
    \        val binaryString = \"0\" * binaryLength\n        val remainderStringLength\
    \ = remainderString.length\n        val binaryStringLength = binaryString.length\n\
    \        val remainderStringLength = remainderString.length\n        val binaryStringLength\
    \ = binaryString.length\n        val remainderStringLength = remainderString.length\n\
    \        val binaryStringLength = binaryString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val binaryStringLength = binaryString.length\n\
    \        val remainderStringLength = remainderString.length\n        val binaryStringLength\
    \ = binaryString.length\n        val remainderStringLength = remainderString.length\n\
    \        val binaryStringLength = binaryString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val binaryStringLength = binaryString.length\n\
    \        val remainderStringLength = remainderString.length\n        val binaryStringLength\
    \ = binaryString.length\n        val remainderStringLength = remainderString.length\n\
    \        val binaryStringLength = binaryString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val binaryStringLength = binaryString.length\n\
    \        val remainderStringLength = remainderString.length\n        val binaryStringLength\
    \ = binaryString.length\n        val remainderStringLength = remainderString.length\n\
    \        val binaryStringLength = binaryString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val binaryStringLength = binaryString.length\n\
    \        val remainderStringLength = remainderString.length\n        val binaryStringLength\
    \ = binaryString.length\n        val remainderStringLength = remainderString.length\n\
    \        val binaryStringLength = binaryString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val binaryStringLength = binaryString.length\n\
    \        val remainderStringLength = remainderString.length\n        val binaryStringLength\
    \ = binaryString.length\n        val remainderStringLength = remainderString.length\n\
    \        val binaryStringLength = binaryString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val binaryStringLength = binaryString.length\n\
    \        val remainderStringLength = remainderString.length\n        val binaryStringLength\
    \ = binaryString.length\n        val remainderStringLength = remainderString.length\n\
    \        val binaryStringLength = binaryString.length\n        val remainderStringLength\
    \ = remainderString.length\n        val binaryString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqftoakxh.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqftoakxh.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mremainderStringLength\e[0m = remainderString.length\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mremainderStringLength is already defined as \e[33mvalue\e[0m \e[35mremainderStringLength\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqftoakxh.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mbinaryStringLength\e[0m = binaryString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mbinaryStringLength is already defined as \e[33mvalue\e[0m \e[35mbinaryStringLength\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqftoakxh.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mremainderStringLength\e[0m = remainderString.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mremainderStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqftoakxh.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mbinaryStringLength\e[0m\
    \ = binaryString.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryStringLength is already defined as \e[33mvalue\e[0m\
    \ \e[35mbinaryStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded"
  stdout: ''
  timestamp: 1659798450
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.MutableList[Char]()\n        var remainder = decimal\n        while\
    \ (decimal != 0) {\n            val remainderInt = remainder % 2\n           \
    \ binary.append(remainderInt)\n            remainder = remainder / 2\n       \
    \ }\n        binary.reverse.mkString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsppwisz3.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.MutableList[\e[35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx3j7nje9.scala:58:4 ----------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx3j7nje9.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx3j7nje9.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length\
    \ / \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx3j7nje9.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx3j7nje9.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length / \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpx3j7nje9.scala:18:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1659798443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmperi7bz82.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmperi7bz82.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmperi7bz82.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded metho"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binaryString\
    \ = \"\"\n        var remainder = decimal\n        var remainderInBinary = 0\n\
    \        while(decimal != 0) {\n            remainderInBinary = remainder % 2\n\
    \            binaryString = binaryString + remainderInBinary\n            remainder\
    \ = remainder / 2\n        }\n        binaryString = \"db\" + binaryString + \"\
    db\"\n        return binaryString\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp27xz4osu.scala:17:32\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            remainderInBinary\
    \ = remainder % \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                          \
    \      ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                Found:\
    \    Long\n\e[31m   |\e[0m                                Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659798451
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val bin2 = bin.drop(bin.length / 2)\n\
    \        val bin3 = bin2.reverse\n        val bin4 = bin3.drop(bin3.length / 2)\n\
    \        val bin5 = bin4.reverse\n        val bin6 = bin5.reverse\n        val\
    \ bin7 = bin6.reverse\n        val bin8 = bin7.reverse\n        val bin9 = bin8.reverse\n\
    \        val bin10 = bin9.reverse\n        val bin11 = bin10.reverse\n       \
    \ val bin12 = bin11.reverse\n        val bin13 = bin12.reverse\n        val bin14\
    \ = bin13.reverse\n        val bin15 = bin14.reverse\n        val bin16 = bin15.reverse\n\
    \        val bin17 = bin16.reverse\n        val bin18 = bin17.reverse\n      \
    \  val bin19 = bin18.reverse\n        val bin20 = bin19.reverse\n        val bin21\
    \ = bin20.reverse\n        val bin22 = bin21.reverse\n        val bin23 = bin22.reverse\n\
    \        val bin24 = bin23.reverse\n        val bin25 = bin24.reverse\n      \
    \  val bin26 = bin25.reverse\n        val bin27 = bin26.reverse\n        val bin28\
    \ = bin27.reverse\n        val bin29 = bin28.reverse\n        val bin30 = bin29.reverse\n\
    \        val bin31 = bin30.reverse\n        val bin32 = bin31.reverse\n      \
    \  val bin33 = bin32.reverse\n        val bin34 = bin33.reverse\n        val bin35\
    \ = bin34.reverse\n        val bin36 = bin35.reverse\n        val bin37 = bin36.reverse\n\
    \        val bin38 = bin37.reverse\n        val bin39 = bin38.reverse\n      \
    \  val bin40 = bin39.reverse\n        val bin41 = bin40.reverse\n        val bin42\
    \ = bin41.reverse\n        val bin43 = bin42.reverse\n        val bin44 = bin43.reverse\n\
    \        val bin45 = bin44.reverse\n        val bin46 = bin45.reverse\n      \
    \  val bin47 = bin46.reverse\n        val bin48 = bin47.reverse\n        val bin49\
    \ = bin48.reverse\n        val bin50 = bin49.reverse\n        val bin51 = bin50.reverse\n\
    \        val bin52 = bin51.reverse\n        val bin53 = bin52.reverse\n      \
    \  val bin54 = bin53.reverse\n        val bin55 = bin54.reverse\n        val \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp9olg566k.scala:69:11 ---------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9olg566k.scala:70:5 ---------------------\e\
    [0m\e[0m\n\e[31m70 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659798451
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp980mnhmj.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp980mnhmj.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.drop(binary.length - \e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp980mnhmj.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp980mnhmj.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp980mnhmj.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |"
  stdout: ''
  timestamp: 1659798452
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val result = binary.reverse\n        val extraChars = binary.takeRight(binary.length\
    \ + 2)\n        val extraCharsReversed = extraChars.reverse\n        val extraCharsReversedString\
    \ = extraCharsReversed.mkString\n        val extraCharsReversedStringLength =\
    \ extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + 2\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedStringLength + \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpft5q8rry.scala:41:77 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedStringLength\e\
    [0m = extraCharsReversedStringLength + \n\e[31m\e[31m   |\e[0m               \
    \                                                              ^\e[0m\n\e[31m\
    \   |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpft5q8rry.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mextraCharsReversedStringLength\e[0m = extraCharsReversedStringLength +\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mextraCharsReversedStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mextraCharsReversedStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpft5q8rry.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedStringLength\e\
    [0m = extraCharsReversedStringLength + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mextraCharsReversedStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mextraCharsReversedStringLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpft5q8rry.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mextraCharsReversedStringLength\e\
    [0m = extraCharsReversedStringLength + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mextraCharsReversedStringLength is already defined as \e[33mvalue\e\
    [0m \e[35mextraCharsReversedStringLeng"
  stdout: ''
  timestamp: 1659798451
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryLength = binary.length\n        val binaryString = binary.substring(0,binaryLength)\n\
    \        val binaryStringLength = binaryString.length\n        val binaryStringWithExtra\
    \ = binaryString.substring(0,binaryStringLength-2)\n        val binaryStringWithExtraLength\
    \ = binaryStringWithExtra.length\n        val binaryStringWithExtra = binaryStringWithExtra\
    \ + \"db\"\n        val binaryStringWithExtraLength = binaryStringWithExtraLength\
    \ + 2\n        val binaryStringWithExtra = binaryStringWithExtra + \"db\"\n  \
    \      val binaryStringWithExtraLength = binaryStringWithExtraLength + 2\n   \
    \     binaryStringWithExtra\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwxr5he5n.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mbinaryStringWithExtra\e\
    [0m = binaryStringWithExtra + \e[31m\"db\"\e[0m\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mbinaryStringWithExtra is already defined as \e[33mvalue\e[0m \e[35mbinaryStringWithExtra\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwxr5he5n.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mbinaryStringWithExtraLength\e[0m = binaryStringWithExtraLength\
    \ + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryStringWithExtraLength is already defined as \e[33mvalue\e\
    [0m \e[35mbinaryStringWithExtraLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwxr5he5n.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mbinaryStringWithExtra\e\
    [0m = binaryStringWithExtra + \e[31m\"db\"\e[0m\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mbinaryStringWithExtra is already defined as \e[33mvalue\e[0m \e[35mbinaryStringWithExtra\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwxr5he5n.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mbinaryStringWithExtraLength\e[0m = binaryStringWithExtraLength\
    \ + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinaryStringWithExtraLength is already defined as \e[33mvalue\e\
    [0m \e[35mbinaryStringWithExtraLength\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods mu"
  stdout: ''
  timestamp: 1659798448
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val result = binary.substring(binary.length - 2)\n        result + binary.substring(0,\
    \ binary.length - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: begin -1, end 1, length 1\n\t\
    at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\tat java.base/java.lang.String.substring(String.java:2707)\n\
    \tat java.base/java.lang.String.substring(String.java:2680)\n\tat Problem$.decimalToBinary(tmpkaaeaqwp.scala:14)\n\
    \tat Problem$.main(tmpkaaeaqwp.scala:18)\n\tat Problem.main(tmpkaaeaqwp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798452
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val extraChars = binary.substring(binary.length - 2)\n        val extraCharsLength\
    \ = extraChars.length\n        val extraCharsString = \"db\".repeat(extraCharsLength)\n\
    \        binary.substring(0, binary.length - 2) + extraCharsString + extraChars\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: begin -1, end 1, length 1\n\t\
    at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\tat java.base/java.lang.String.substring(String.java:2707)\n\
    \tat java.base/java.lang.String.substring(String.java:2680)\n\tat Problem$.decimalToBinary(tmpwqmlrfbk.scala:14)\n\
    \tat Problem$.main(tmpwqmlrfbk.scala:20)\n\tat Problem.main(tmpwqmlrfbk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798452
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.dropRight(binary.length-1)\n        val binary = binary.dropRight(binary.length-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu1nugfsl.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpu1nugfsl.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        while(decimal != 0){\n          \
    \  binary += remainder % 2\n            remainder = remainder / 2\n        }\n\
    \        binary += \"db\"\n        binary += decimalToBinary(decimal)\n      \
    \  binary += \"db\"\n        return binary\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.base/java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:582)\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:179)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:19)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\
    \tat Problem$.decimalToBinary(tmpxdu1mi6l.scala:20)\n\ta"
  stdout: ''
  timestamp: 1659798452
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.substring(binary.length - 2)\n        val binary = bin.substring(0,\
    \ bin.length - 1)\n        val binary = binary.concat(\"db\")\n        binary\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_wjot54t.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.substring(\e\
    [31m0\e[0m, bin.length - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_wjot54t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.concat(\e[31m\"\
    db\"\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659798416
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal % 2\n        decimal\
    \ /= 2\n        while (decimal > 0) {\n            binary.append(remainder)\n\
    \            decimal -= 1\n            remainder = decimal % 2\n            decimal\
    \ /= 2\n        }\n        binary.reverse\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_g7kcfe5.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_g7kcfe5.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value /= is not a member of Long\
    \ - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_g7kcfe5.scala:18:20\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            decimal -= \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value -= is not a member of Long - did you mean decimal.!=?\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp_g7kcfe5.scala:19:22 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            remainder = decimal % \e[31m2\e[0m\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \     Reassignment to val remainder\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp_g7kcfe5.scala:20:20 ------------------------\e[0m\e[0m\n\e[31m20 |\e\
    [0m            decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value /= is not a member of Long - did you mean\
    \ decimal.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1659798453
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal\n        val divisor\
    \ = math.pow(2,decimal)\n        while(decimal > 0){\n            val remainder2\
    \ = remainder % divisor\n            binary.append(remainder2)\n            decimal\
    \ -= remainder2\n            divisor = math.pow(2,decimal)\n        }\n      \
    \  binary.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprpq3tqow.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprpq3tqow.scala:19:20 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            decimal -= remainder2\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member\
    \ of Long - did you mean decimal.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmprpq3tqow.scala:20:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m20 |\e[0m            divisor\
    \ = math.pow(\e[31m2\e[0m,decimal)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val divisor\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659798453
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ / 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx3j7nje9.scala:58:4 ----------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx3j7nje9.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx3j7nje9.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.dropRight(binary.length\
    \ / \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpx3j7nje9.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx3j7nje9.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length / \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpx3j7nje9.scala:18:12 ---------------------------\e[0m\e"
  stdout: ''
  timestamp: 1659798443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val db = \"db\"\n        val binary\
    \ = bin.take(bin.length/2).mkString + db + bin.drop(bin.length/2).mkString\n \
    \       binary.dropRight(bin.length/2).reverse\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0dwgrvrd.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.take(bin.length/\e\
    [31m2\e[0m).mkString + db + bin.drop(bin.length/\e[31m2\e[0m).mkString\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659798450
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal % 2\n        decimal\
    \ /= 2\n        while(decimal > 0) {\n            binary.append(remainder % 2)\n\
    \            remainder /= 2\n        }\n        binary.reverse\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa1nlkx36.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa1nlkx36.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value /= is not a member of Long\
    \ - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa1nlkx36.scala:18:22\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            remainder /=\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m           value /= is not a member of Long - did you mean remainder.!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659798453
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxvy08daw.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxvy08daw.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.drop(binary.length - \e[31m2\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxvy08daw.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpxvy08daw.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length\
    \ - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpxvy08daw.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |"
  stdout: ''
  timestamp: 1659798453
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ binary.drop(bin.length/2).reverse\n        val binary = binary.drop(bin.length/2).reverse\n\
    \        val binary = binary.drop(bin.length/2).reverse\n        val binary =\
    \ bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfndwmp1s.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.drop(bin.length/\e\
    [31m2\e[0m).reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfndwmp1s.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(bin.length/\e\
    [31m2\e[0m).reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfndwmp1s.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(bin.length/\e\
    [31m2\e[0m).reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfndwmp1s.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(bin.length/\e\
    [31m2\e[0m).reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfndwmp1s.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(bin.length/\e\
    [31m2\e[0m).reverse\n\e[31m\e[31m  "
  stdout: ''
  timestamp: 1659798453
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3jybpe7t.scala:52:33 ---------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(\n\
    \e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m\
    \                                 expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3jybpe7t.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp3jybpe7t.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is "
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3jybpe7t.scala:52:33 ---------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(\n\
    \e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m\
    \                                 expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3jybpe7t.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp3jybpe7t.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is "
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal % 2\n        decimal\
    \ /= 2\n        while(decimal > 0) {\n            binary.append(remainder % 2)\n\
    \            remainder /= 2\n        }\n        binary.reverse\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa1nlkx36.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa1nlkx36.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value /= is not a member of Long\
    \ - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa1nlkx36.scala:18:22\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            remainder /=\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m           value /= is not a member of Long - did you mean remainder.!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659798453
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.substring(binary.length - 2)\n        val binary = bin.substring(0,\
    \ bin.length - 1)\n        val binary = binary.concat(\"db\")\n        binary\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_wjot54t.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.substring(\e\
    [31m0\e[0m, bin.length - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp_wjot54t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.concat(\e[31m\"\
    db\"\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659798416
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val remainder = decimal % 2\n        decimal\
    \ /= 2\n        while (decimal > 0) {\n            val remainder2 = decimal %\
    \ 2\n            decimal /= 2\n            if (remainder2 == 0) {\n          \
    \      binary.append(remainder)\n            } else {\n                binary.append(remainder2).append('0')\n\
    \            }\n        }\n        binary.reverse\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpibcvvku3.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpibcvvku3.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        decimal /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value /= is not a member of Long\
    \ - did you mean decimal.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpibcvvku3.scala:18:20\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            decimal /= \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value /= is not a member of Long - did you mean decimal.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659798453
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.drop(binary.length\
    \ - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxvy08daw.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary\
    \ is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxvy08daw.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.drop(binary.length - \e[31m2\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxvy08daw.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpxvy08daw.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length\
    \ - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpxvy08daw.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is\
    \ already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |"
  stdout: ''
  timestamp: 1659798453
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5um85c_0.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5um85c_0.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp5um85c_0.scala:18:12 ---------------------------\e[0"
  stdout: ''
  timestamp: 1659798421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length\
    \ - 2)\n        val binary = binary.reverse\n        val binary = binary.dropRight(binary.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxx0fg9jj.scala:60:4 ----------------------------\e\
    [0m\e[0m\n\e[31m60 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxx0fg9jj.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length - \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxx0fg9jj.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length - \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxx0fg9jj.scala:18:12 ----------------------"
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        val decimalToBinaryMap = new mutable.HashMap[Long,\
    \ String]()\n        decimalToBinaryMap.put(decimal, \"0\")\n        decimalToBinaryMap.put(decimal,\
    \ \"1\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalToBinaryMap.put(decimal, \"db\")\n        decimalToBinaryMap.put(decimal,\
    \ \"db\")\n        decimalTo\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmlpacu_o.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmlpacu_o.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mdecimalToBinaryMap\e[0m\
    \ = \e[33mnew\e[0m mutable.HashMap[\e[35mLong\e[0m, \e[35mString\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                                     Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpmlpacu_o.scala:59:8 -------------------------\e\
    [0m\e[0m\n\e[31m59 |\e[0m        decimalTo\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: decimalTo\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659798451
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binaryLength = binary.length\n        val binaryString = new StringBuilder\n\
    \        binaryString.append(binary.charAt(0))\n        binaryString.append(binary.charAt(binaryLength\
    \ - 1))\n        binaryString.append(\"db\")\n        binaryString\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxy0pa11i.scala:19:8\
    \ ---------------------\e[0m\e[0m\n\e[31m19 |\e[0m        binaryString\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (binaryString\
    \ : StringBuilder)\n\e[31m   |\e[0m        Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659798453
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.MutableList[String]()\n        while(decimal > 0) {\n            binary.add(\"\
    0\")\n            decimal -= 1\n        }\n        while(decimal > 0) {\n    \
    \        binary.add(\"1\")\n            decimal -= 1\n        }\n        binary.add(\"\
    db\")\n        binary.add(\"db\")\n        binary.toList.reverse.mkString\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps0kcxa8t.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.MutableList[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m          \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps0kcxa8t.scala:16:20\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            decimal -= \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value -= is not a member of Long - did you mean decimal.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmps0kcxa8t.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            decimal -= \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member\
    \ of Long - did you mean decimal.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659798454
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binary = \"\
    \"\n        var remainder = decimal\n        var remainder2 = decimal\n      \
    \  while(decimal != 0){\n            binary = decimal % 2 + \"0\" + binary\n \
    \           remainder = decimal / 2\n            remainder2 = remainder * 2\n\
    \        }\n        binary = binary + \"db\" + remainder2\n        return binary\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdxjvs5et.scala:25)\n\tat Problem.main(tmpdxjvs5et.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659798455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        var binaryString\
    \ = \"\"\n        var remainder = decimal\n        var remainderAsLong = 0\n \
    \       var remainderAsInt = 0\n        var remainderAsDouble = 0\n        var\
    \ remainderAsChar = 0\n        var remainderAsString = \"\"\n        var remainderAsBoolean\
    \ = false\n        var remainderAsLongArray = new Array[Long](1)\n        var\
    \ remainderAsIntArray = new Array[Int](1)\n        var remainderAsDoubleArray\
    \ = new Array[Double](1)\n        var remainderAsCharArray = new Array[Char](1)\n\
    \        var remainderAsStringArray = new Array[String](1)\n        var remainderAsBooleanArray\
    \ = new Array[Boolean](1)\n        var remainderAsLongArray = new Array[Long](1)\n\
    \        var remainderAsIntArray = new Array[Int](1)\n        var remainderAsDoubleArray\
    \ = new Array[Double](1)\n        var remainderAsCharArray = new Array[Char](1)\n\
    \        var remainderAsStringArray = new Array[String](1)\n        var remainderAsBooleanArray\
    \ = new Array[Boolean](1)\n        var remainderAsLongArray = new Array[Long](1)\n\
    \        var remainderAsIntArray = new Array[Int](1)\n        var remainderAsDoubleArray\
    \ = new Array[Double](1)\n        var remainderAsCharArray = new Array[Char](1)\n\
    \        var remainderAsStringArray = new Array[String](1)\n        var remainderAsBooleanArray\
    \ = new Array[Boolean](1)\n        var remainderAsLongArray = new Array[Long](1)\n\
    \        var remainderAsIntArray = new Array[Int](1)\n        var remainderAsDoubleArray\
    \ = new Array[Double](1)\n        var remainderAsCharArray = new Array[Char](1)\n\
    \        var remainderAsStringArray = new Array[String](1)\n        var remainderAsBooleanArray\
    \ = new Array[Boolean](1)\n        var remainderAsLongArray = new Array[Long](1)\n\
    \        var remainderAsIntArray = new Array[Int](1)\n        var remainderAsDoubleArray\
    \ = new Array[Double](1)\n        var remainderAsCharArray = new Array[Char](1)\n\
    \        var remainderAsStringArray = new Array[String](1)\n        var remainderAsBooleanArray\
    \ = new Array[Boolean](1)\n        var remainderAsLongArray = new Array[Long](1)\n\
    \        var remainderAsIntArray = new Array[Int](1)\n        var remainderAsDoubleArray\
    \ = new Array[Double](1)\n        var remainderAsCharArray = new Array[Char](1)\n\
    \        var remainderAsStringArray = new Array[String](1)\n        var remainderAsBoolean\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi70gjp5v.scala:57:4 ----------------------------\e\
    [0m\e[0m\n\e[31m57 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi70gjp5v.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mremainderAsLongArray\e[0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e\
    [0m](\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mremainderAsLongArray is already defined as \e[33mvariable\e\
    [0m \e[35mremainderAsLongArray\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi70gjp5v.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mvar\e[0m \e[36mremainderAsIntArray\e[0m\
    \ = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mInt\e[0m](\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mremainderAsIntArray is already defined as \e[33mvariable\e[0m \e[35mremainderAsIntArray\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpi70gjp5v.scala:29:12 ---------------------------\e[0m\e[0m\n\e\
    [31m29 |\e[0m        \e[33mvar\e[0m \e[36mremainderAsDoubleArray\e[0m = \e[33mnew\e\
    [0m \e[35mArray\e[0m[\e[35mDouble\e[0m](\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mremainderAsDoubleArray\
    \ is already defined as \e[33mvariable\e[0m \e[35mremainderAsDoubleArray\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpi70gjp5v.scala:30:12 ---------------------------\e[0m\e[0m\n\e[31m30\
    \ |\e[0m        \e[33mvar\e[0m \e[36mremainderAsCharArray\e[0m = \e[33mnew\e[0m\
    \ \e[35mArray\e[0m[\e[35mChar\e[0m](\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e"
  stdout: ''
  timestamp: 1659798455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3jybpe7t.scala:52:33 ---------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(\n\
    \e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m\
    \                                 expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3jybpe7t.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(binary.length-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp3jybpe7t.scala:15:12 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3jybpe7t.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.drop(binary.length-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is "
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val bin = binary.reverse\n        val binary = bin.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \        val binary = binary.reverse\n        val binary = binary.take(decimal.toInt)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdktzzzul.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = bin.take(decimal.toInt)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpdktzzzul.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdktzzzul.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.take(decimal.toInt)\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdktzzzul.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.reverse\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpdktzzzul.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = binary.take(decimal.toInt)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mbinary is already defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e["
  stdout: ''
  timestamp: 1659798430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin\n    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkt_a_qy7.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m\
    \ \e[36mbinary\e[0m = binary.dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mbinary is already\
    \ defined as \e[33mvalue\e[0m \e[35mbinary\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkt_a_qy7.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e"
  stdout: ''
  timestamp: 1659798420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You will be given a number in decimal form and your task is to convert\
    \ it to\n    // binary format. The function should return a string, with each\
    \ character representing a binary\n    // number. Each character in the string\
    \ will be '0' or '1'.\n    // There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // decimal_to_binary(15)\
    \   # returns \"db1111db\"\n    // decimal_to_binary(32)   # returns \"db100000db\"\
    \n    def decimalToBinary(decimal : Long) : String = {\n        val binary = new\
    \ mutable.StringBuilder\n        for(i <- 0 until decimal.toInt){\n          \
    \  binary.append(decimal.toBinaryString(i))\n        }\n        binary.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6vdux1g.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbinary\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659798454

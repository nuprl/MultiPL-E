name: HumanEval_17_parse_music
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n    // Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n    // not last.\n    // Here is a\
  \ legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|' - half note, lasts\
  \ two beats\n    // '.|' - quater note, lasts one beat\n    // >>> parse_music('o\
  \ o| .| o| o| .| .| .| .| o o')\n    // [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    def\
  \ parseMusic(music_string : String) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(parseMusic((\"\"\
  )).equals((List[Long]())));\n    assert(parseMusic((\"o o o o\")).equals((List[Long](4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\".| .| .| .|\")).equals((List[Long](1l.toLong,\
  \ 1l.toLong, 1l.toLong, 1l.toLong))));\n    assert(parseMusic((\"o| o| .| .| o o\
  \ o o\")).equals((List[Long](2l.toLong, 2l.toLong, 1l.toLong, 1l.toLong, 4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\"o| .| o| .| o o|\
  \ o o|\")).equals((List[Long](2l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 4l.toLong,\
  \ 2l.toLong, 4l.toLong, 2l.toLong))));\n    }\n\n}\n"
completions: ["        val music_list = music_string.split('|').map(_.toInt).toList\n\
    \        val music_length = music_list.size\n        val music_beats = music_list.map(music_length\
    \ % _)\n        val music_last_beats = music_list.map(music_length % _).reverse\n\
    \        music_beats ++ music_last_beats", "        val music_list = music_string.split(\"\
    \ \").map(_.toUpperCase).toList\n        val music_length = music_list.length\n\
    \        val music_notes = music_list.map(music_to_note)\n        val music_notes_length\
    \ = music_notes.length\n        val music_notes_length_without_rest = music_notes_length\
    \ - music_notes.filter(music_notes_without_rest).length\n        val music_notes_length_without_rest_with_beats\
    \ = music_notes_length_without_rest / music_notes_length\n        val music_notes_length_without_rest_with_beats_without_rest\
    \ = music_notes_length_without_rest_with_beats - music_notes_length_without_rest\n\
    \        val music_notes_length_without_rest_with_beats_without_rest_with_beats\
    \ = music_notes_length_without_rest_with_beats_without_rest / music_notes_length_without_rest_with_beats\n\
    \        val music_notes_length_without_rest_with_beats_without_rest_with_beats_without_rest\
    \ = music_notes_length_without_rest_with_beats_without_rest_with_beats / music_notes_length_without_rest_with_beats_without_rest\n\
    \        val music_notes_length_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats\
    \ = music_notes_length_without_rest_with_beats_without_rest_with_beats_without_rest\
    \ / music_notes_length_without_rest_with_beats_without_rest_with_beats\n     \
    \   val music_notes_length_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats_without_rest\
    \ = music_notes_length_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats_without_rest\
    \ / music_notes_length_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats\n\
    \        val music_notes_length_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats\
    \ = music_notes_length_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats_without_rest\
    \ / music_notes_length_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats_without_rest\n\
    \        val music_notes_length_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats_without_rest\
    \ = music_notes_length_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats_without_rest_with_beats_without_rest\n\
    \        val music_notes_length_without_rest_with_beats_without_rest_with_beats_without_",
  "        val music_list = music_string.split(\" \").map(music_string => music_string.charAt(0).toInt)\n\
    \        val music_list_size = music_list.length\n        val music_list_size_half\
    \ = music_list_size / 2\n        val music_list_size_quarter = music_list_size\
    \ / 4\n        val music_list_size_whole = music_list_size - music_list_size_half\
    \ - music_list_size_quarter\n        val music_list_size_whole_half = music_list_size_whole\
    \ / 2\n        val music_list_size_whole_quarter = music_list_size_whole / 4\n\
    \        val music_list_size_whole_whole = music_list_size_whole - music_list_size_whole_half\
    \ - music_list_size_whole_quarter\n        val music_list_size_whole_whole_half\
    \ = music_list_size_whole_whole / 2\n        val music_list_size_whole_whole_quarter\
    \ = music_list_size_whole_whole / 4\n        val music_list_size_whole_whole_whole\
    \ = music_list_size_whole_whole - music_list_size_whole_whole_half - music_list_size_whole_whole_quarter\n\
    \        val music_list_size_whole_whole_whole_half = music_list_size_whole_whole_whole\
    \ / 2\n        val music_list_size_whole_whole_whole_quarter = music_list_size_whole_whole_whole\
    \ / 4\n        val music_list_size_whole_whole_whole_whole = music_list_size_whole_whole_whole\
    \ - music_list_size_whole_whole_whole_half - music_list_size_whole_whole_whole_quarter\n\
    \        val music_list_size_whole_whole_whole_whole_half = music_list_size_whole_whole_whole_whole\
    \ / 2\n        val music_list_size_whole_whole_whole_whole_quarter = music_list_size_whole_whole_whole_whole\
    \ / 4\n        val music_list_size_whole_whole_whole_whole_whole = music_list_size_whole_whole_whole_whole\
    \ - music_list_size_whole_whole_whole_whole_half - music_list_size_whole_whole_whole_whole_quarter\n\
    \        val music_list_size_whole_whole_whole_whole_whole_half = music_list_size_whole_whole_whole_whole_whole\
    \ / 2\n        val music_list_size_whole_whole_whole_whole_whole_quarter", " \
    \       val music_list = music_string.split(\" \").map(_.toInt)\n        val music_list_length\
    \ = music_list.length\n        val music_list_with_beats = music_list.zipWithIndex.map\
    \ { case (music_note, index) => (music_note, index) }\n        val music_list_with_beats_length\
    \ = music_list_with_beats.length\n        val music_list_with_beats_last_beat\
    \ = music_list_with_beats.last._1\n        val music_list_with_beats_last_beat_index\
    \ = music_list_with_beats.last._2\n        val music_list_with_beats_last_beat_length\
    \ = music_list_with_beats_last_beat_index - music_list_with_beats_last_beat\n\
    \        val music_list_with_beats_last_beat_length = music_list_with_beats_last_beat_length\
    \ / 4\n        val music_list_with_beats_last_beat_length = music_list_with_beats_last_beat_length\
    \ * 4\n        val music_list_with_beats_last_beat_length = music_list_with_beats_last_beat_length\
    \ + music_list_with_beats_last_beat\n        val music_list_with_beats_last_beat_length\
    \ = music_list_with_beats_last_beat_length / 4\n        val music_list_with_beats_last_beat_length\
    \ = music_list_with_beats_last_beat_length * 4\n        val music_list_with_beats_last_beat_length\
    \ = music_list_with_beats_last_beat_length + music_list_with_beats_last_beat\n\
    \        val music_list_with_beats_last_beat_length = music_list_with_beats_last_beat_length\
    \ / 4\n        val music_list_with_beats_last_beat_length = music_list_with_beats_last_beat_length\
    \ * 4\n        val music_list_with_beats_last_beat_length = music_list_with_beats_last_beat_length\
    \ + music_list_with_beats_last_beat\n        val music_list_with_beats_last_beat_length\
    \ = music_list_with_beats_last_beat_length / 4\n        val music_list_with_beats_last_beat_length\
    \ = music_list_with_beats_last_beat_length * 4\n        val music_list_with_beats_last_beat_length\
    \ = music_list_with_beats_last_beat_length + music_list_with_beats_last_beat\n\
    \        val music_list_with_beats_last_beat_length = music_list_with_beats_last_beat_length\
    \ / 4\n        val music_list_with_beats_", "        val music_list = music_string.split('\
    \ ').map(_.toUpperCase).toList\n        val notes = music_list.filterNot(_.isEmpty)\n\
    \        val notes_length = notes.size\n        val beats_length = notes_length\
    \ / 4\n        val notes_beats = notes.grouped(beats_length).map(_.size)\n   \
    \     val notes_beats_sum = notes_beats.sum\n        val notes_beats_count = notes_beats.count\n\
    \        val notes_beats_average = notes_beats_sum / notes_beats_count\n     \
    \   val notes_beats_average_list = notes_beats_average.toList\n        val notes_beats_average_list2\
    \ = notes_beats_average_list.map(x => x * beats_length)\n        val notes_beats_average_list3\
    \ = notes_beats_average_list2.map(x => x * beats_length)\n        val notes_beats_average_list4\
    \ = notes_beats_average_list3.map(x => x * beats_length)\n        val notes_beats_average_list5\
    \ = notes_beats_average_list4.map(x => x * beats_length)\n        val notes_beats_average_list6\
    \ = notes_beats_average_list5.map(x => x * beats_length)\n        val notes_beats_average_list7\
    \ = notes_beats_average_list6.map(x => x * beats_length)\n        val notes_beats_average_list8\
    \ = notes_beats_average_list7.map(x => x * beats_length)\n        val notes_beats_average_list9\
    \ = notes_beats_average_list8.map(x => x * beats_length)\n        val notes_beats_average_list10\
    \ = notes_beats_average_list9.map(x => x * beats_length)\n        val notes_beats_average_list11\
    \ = notes_beats_average_list10.map(x => x * beats_length)\n        val notes_beats_average_list12\
    \ = notes_beats_average_list11.map(x => x * beats_length)\n        val notes_beats_average_list13\
    \ = notes_beats_average_list12.map(x => x * beats_length)\n        val notes_beats_average_list14\
    \ = notes_beats_average_list13.map(x => x * beats_length)\n        val notes_beats_average_list15\
    \ = notes_beats_average_list14.map(x => x * beats_length)\n        val notes_beats_average_list16\
    \ = notes_beats_average_list15.map(x => x * beats_length)\n        val notes_beats_average_list17\
    \ = notes_beats_average_list16.map(", "        music_string.split(\" \").map(music_string\
    \ => {\n            val note = music_string.substring(0, 1)\n            val beats\
    \ = music_string.substring(1).split(\"|\").map(music_string => {\n           \
    \     val beat = music_string.substring(0, 1)\n                val rest = music_string.substring(1)\n\
    \                beat.toLong * rest.length\n            }).sum\n            note.toLong\
    \ * beats\n        }).sum", "        val music_list = music_string.split(' ').map(_.toInt)\n\
    \        val notes = music_list.sliding(music_list.length / 4).toList\n      \
    \  val notes_count = notes.map(x => x.length)\n        val notes_count_sum = notes_count.sum\n\
    \        val notes_count_average = notes_count.sum / notes_count_sum\n       \
    \ val notes_count_average_list = notes_count.map(x => x / notes_count_sum)\n \
    \       val notes_count_average_list_sum = notes_count_average_list.sum\n    \
    \    val notes_count_average_list_average = notes_count_average_list.sum / notes_count_average_list_sum\n\
    \        val notes_count_average_list_average_list = notes_count_average_list.map(x\
    \ => x / notes_count_average_list_sum)\n        val notes_count_average_list_average_list_sum\
    \ = notes_count_average_list_average_list.sum\n        val notes_count_average_list_average_list_average\
    \ = notes_count_average_list_average_list.sum / notes_count_average_list_average_list_sum\n\
    \        val notes_count_average_list_average_list_average_list = notes_count_average_list_average_list.map(x\
    \ => x / notes_count_average_list_average_list_sum)\n        val notes_count_average_list_average_list_average_list_sum\
    \ = notes_count_average_list_average_list_average_list.sum\n        val notes_count_average_list_average_list_average_list_average\
    \ = notes_count_average_list_average_list_average_list.sum / notes_count_average_list_average_list_average_list_sum\n\
    \        val notes_count_average_list_average_list_average_list_average_list =\
    \ notes_count_average_list_average_list_average_list.map(x => x / notes_count_average_list_average_list_average_list_sum)\n\
    \        val notes_count_average_list_average_list_average_list_average_list_sum\
    \ = notes_count_average_list_average_list_average_list_average_list.sum\n    \
    \    val notes_count_average_list_average_list_average_list_average_list_average\
    \ = notes_count_average_list_average_list_average_list_average_list.sum / notes_count_average_list_average_list_average_list_average_list_sum\n\
    \        val notes_count_average_list_average_list_average_list_average_list_average_list\
    \ = notes_count_average_list_average_list_average_list_average_list.map(x => x\
    \ / notes_count_average_list_average_list_average_list_average_list_sum)\n   \
    \     val notes_count_average_list_average_list_average_list_average_list_average_list_sum\
    \ = notes_count_average_list_average_list_average_list_average_list_average_list.sum\n\
    \        val notes_count_average_list_average_list_average_list_average_list_average_list_average\
    \ = notes_count_average_list_average_list_average_list_average_list_average_list.sum\
    \ / ", "        val music_list = music_string.split(\" \").map(_.toUpperCase).toList\n\
    \        val music_length = music_list.length\n        val music_beats = music_list.map(music_length\
    \ % 2 != 0).sum\n        val music_notes = music_list.map(music_length % 2 ==\
    \ 0).sum\n        val music_notes_beats = music_notes * music_beats\n        val\
    \ music_notes_beats_sum = music_notes_beats.toLong\n        val music_notes_beats_sum_array\
    \ = Array.ofDim[Long](music_notes_beats_sum)\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array.length\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.toLong\n        val music_notes_beats_sum_array_length\
    \ = music_notes_beats_sum_array_length.to", "        val music_list = music_string.split(\"\
    \ \")\n        val music_list_size = music_list.size\n        val music_list_size_2\
    \ = music_list_size / 2\n        val music_list_size_3 = music_list_size_2 / 2\n\
    \        val music_list_size_4 = music_list_size_3 / 2\n        val music_list_size_5\
    \ = music_list_size_4 / 2\n        val music_list_size_6 = music_list_size_5 /\
    \ 2\n        val music_list_size_7 = music_list_size_6 / 2\n        val music_list_size_8\
    \ = music_list_list_size_7 / 2\n        val music_list_size_9 = music_list_size_8\
    \ / 2\n        val music_list_size_10 = music_list_size_9 / 2\n        val music_list_size_11\
    \ = music_list_size_10 / 2\n        val music_list_size_12 = music_list_size_11\
    \ / 2\n        val music_list_size_13 = music_list_size_12 / 2\n        val music_list_size_14\
    \ = music_list_size_13 / 2\n        val music_list_size_15 = music_list_size_14\
    \ / 2\n        val music_list_size_16 = music_list_size_15 / 2\n        val music_list_size_17\
    \ = music_list_size_16 / 2\n        val music_list_size_18 = music_list_size_17\
    \ / 2\n        val music_list_size_19 = music_list_size_18 / 2\n        val music_list_size_20\
    \ = music_list_size_19 / 2\n        val music_list_size_21 = music_list_size_20\
    \ / 2\n        val music_list_size_22 = music_list_size_21 / 2\n        val music_list_size_23\
    \ = music_list_size_22 / 2\n        val music_list_size_24 = music_list_size_23\
    \ / 2\n        val music_list_size_25 = music_list_size_24 / 2\n        val music_list_size_26\
    \ = music_list_size_25 / 2\n        val music_list_size_27 = music_list_size_26\
    \ / 2\n        val music_list_size_28 = music_list_size_27 / 2\n        val music_list_size_29\
    \ = music_list_size_28 / 2\n        val music_list_size_30 = music_list_size_29\
    \ / 2\n        val music_list_size_31 = music_list_size_30 / 2\n        val music_list_size_32\
    \ = music_list_size_31 / 2\n        val music_list_size_33 = ", "        music_string.split(\"\
    \ \").map(music_string => {\n            val note = music_string.substring(0,\
    \ 1)\n            val beats = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                val beat = music_string.substring(0, 1)\n            \
    \    val rest = music_string.substring(1).split(\"o\").map(music_string => {\n\
    \                    val rest = music_string.substring(0, 1)\n               \
    \     val rest = music_string.substring(1).split(\".\").map(music_string => {\n\
    \                        val rest = music_string.substring(0, 1)\n           \
    \             val rest = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                            val rest = music_string.substring(0, 1)\n\
    \                            val rest = music_string.substring(1).split(\"o\"\
    ).map(music_string => {\n                                val rest = music_string.substring(0,\
    \ 1)\n                                val rest = music_string.substring(1).split(\"\
    .\").map(music_string => {\n                                    val rest = music_string.substring(0,\
    \ 1)\n                                    val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                        val rest =\
    \ music_string.substring(0, 1)\n                                        val rest\
    \ = music_string.substring(1).split(\"o\").map(music_string => {\n           \
    \                                 val rest = music_string.substring(0, 1)\n  \
    \                                          val rest = music_string.substring(1).split(\"\
    .\").map(music_string => {\n                                                val\
    \ rest = music_string.substring(0, 1)\n                                      \
    \          val rest = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                                                    val rest = music_string.substring(0,\
    \ 1)\n                                                    val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \       val rest = music_string.substring(0, 1)\n                            \
    \                            val rest = music_string.substring(1).split(\".\"\
    ).map(music_string => {\n                                                    \
    \        val rest = music_string.substring(0, 1)\n                           \
    \                                 val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                 \
    \               val rest = music_string.substring(0, 1)\n                    \
    \                                            val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \                   val rest = music_string.substring(0, 1)\n                \
    \                                                    val rest = music_string.substring(1).split(\"\
    .\").map(music_string => {\n                                                 \
    \                       val rest = music_string.substring(0, 1)\n            \
    \                                                            val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                 \
    \                           val rest = music_string.substring(0, 1)\n        \
    \                                                                    val rest\
    \ = music_string.substring(1).split(\"o\").map(music_string => {\n           \
    \                                                                     val rest\
    \ = music_string.substring(0, 1)\n                                           \
    \                                     val rest = musi", "        val music_list\
    \ = music_string.split(\"\\\\|\")\n        val music_list_size = music_list.size\n\
    \        val music_list_size_int = music_list_size.asInstanceOf[Int]\n       \
    \ val music_list_size_long = music_list_size_int.asInstanceOf[Long]\n        val\
    \ music_list_size_long_int = music_list_size_long.asInstanceOf[Int]\n        val\
    \ music_list_size_long_long_int = music_list_size_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_int = music_list_size_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_int = music_list_size_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_int = music_list_size_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_int = music_list_size_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_long_long_long_long_long_long_long_long_long_int.asInstanceOf[Long]\n\
    \        val music_list_size_long_long_long_long_long_long_long_long_long_long_long_long_int\
    \ = music_list_size_long_long_long_long_long_", "        val notes = music_string.split(\"\
    \\\\|\").map(_.toInt)\n        val notes_length = notes.length\n        val notes_beats\
    \ = notes.map(n => n / 4)\n        val notes_beats_length = notes_beats.length\n\
    \        val notes_beats_sum = notes_beats.sum\n        val notes_beats_sum_length\
    \ = notes_beats_sum.length\n        val notes_beats_sum_length = notes_beats_sum_length\
    \ / 4\n        val notes_beats_sum_length = notes_beats_sum_length.toInt\n   \
    \     val notes_beats_sum_length = notes_beats_sum_length * 4\n        val notes_beats_sum_length\
    \ = notes_beats_sum_length.toInt\n        val notes_beats_sum_length = notes_beats_sum_length\
    \ * 4\n        val notes_beats_sum_length = notes_beats_sum_length * 4\n     \
    \   val notes_beats_sum_length = notes_beats_sum_length * 4\n        val notes_beats_sum_length\
    \ = notes_beats_sum_length * 4\n        val notes_beats_sum_length = notes_beats_sum_length\
    \ * 4\n        val notes_beats_sum_length = notes_beats_sum_length * 4\n     \
    \   val notes_beats_sum_length = notes_beats_sum_length * 4\n        val notes_beats_sum_length\
    \ = notes_beats_sum_length * 4\n        val notes_beats_sum_length = notes_beats_sum_length\
    \ * 4\n        val notes_beats_sum_length = notes_beats_sum_length * 4\n     \
    \   val notes_beats_sum_length = notes_beats_sum_length * 4\n        val notes_beats_sum_length\
    \ = notes_beats_sum_length * 4\n        val notes_beats_sum_length = notes_beats_sum_length\
    \ * 4\n        val notes_beats_sum_length = notes_beats_sum_length * 4\n     \
    \   val notes_beats_sum_length = notes_beats_sum_length * 4\n        val notes_beats_sum_length\
    \ = notes_beats_sum_length * 4\n        val notes_beats_sum_length = notes_beats_sum_length\
    \ * 4\n        val notes_beats_sum_length = notes_beats_sum_length * 4\n     \
    \   val notes_beats_sum_length = notes_beats_sum_length * 4\n        val notes_beats_sum_length\
    \ = notes_beats_sum_length * 4\n        val notes_beats_sum_length = notes_beats_sum_length\
    \ * 4\n        val notes_beats_sum_", "        music_string.split(\" \").map(music_string\
    \ => {\n            val note = music_string.substring(0, 1)\n            val rest\
    \ = music_string.substring(1, music_string.length)\n            val beats = rest.split(\"\
    |\").map(rest => rest.split(\"o\").length).sum\n            beats\n        }).toList",
  "        val notes = music_string.split(\"\\\\|\")\n        val notes_length = notes.length\n\
    \        val notes_array = notes.map(_.toInt).toArray\n        val notes_array_length\
    \ = notes_array.length\n        val notes_array_sorted = notes_array.sortWith(_\
    \ < _)\n        val notes_array_sorted_length = notes_array_sorted.length\n  \
    \      val notes_array_sorted_length = notes_array_sorted_length / 4\n       \
    \ val notes_array_sorted_length_2 = notes_array_sorted_length / 2\n        val\
    \ notes_array_sorted_length_3 = notes_array_sorted_length / 3\n        val notes_array_sorted_length_4\
    \ = notes_array_sorted_length / 4\n        val notes_array_sorted_length_5 = notes_array_sorted_length\
    \ / 5\n        val notes_array_sorted_length_6 = notes_array_sorted_length / 6\n\
    \        val notes_array_sorted_length_7 = notes_array_sorted_length / 7\n   \
    \     val notes_array_sorted_length_8 = notes_array_sorted_length / 8\n      \
    \  val notes_array_sorted_length_9 = notes_array_sorted_length / 9\n        val\
    \ notes_array_sorted_length_10 = notes_array_sorted_length / 10\n        val notes_array_sorted_length_11\
    \ = notes_array_sorted_length / 11\n        val notes_array_sorted_length_12 =\
    \ notes_array_sorted_length / 12\n        val notes_array_sorted_length_13 = notes_array_sorted_length\
    \ / 13\n        val notes_array_sorted_length_14 = notes_array_sorted_length /\
    \ 14\n        val notes_array_sorted_length_15 = notes_array_sorted_length / 15\n\
    \        val notes_array_sorted_length_16 = notes_array_sorted_length / 16\n \
    \       val notes_array_sorted_length_17 = notes_array_sorted_length / 17\n  \
    \      val notes_array_sorted_length_18 = notes_array_sorted_length / 18\n   \
    \     val notes_array_sorted_length_19 = notes_array_sorted_length / 19\n    \
    \    val notes_array_sorted_length_20 = notes_array_sorted_length / 20\n     \
    \   val notes_array_sorted_length_21 = notes_array_sorted_length / 21\n      \
    \  val notes_array_sorted_length_22 = notes_array_sorted_length / 22\n       \
    \ val notes_array_sorted_length_23 = notes_array_sorted_length / 23\n        val\
    \ notes_array_sorted_length_24 = notes_array_sorted_length / 24\n        val notes_array_sorted_length_25\
    \ = notes_array_sorted_length / 25\n        val notes_array_sorted_length_26 =\
    \ notes_array_sorted_length / 26\n        val notes_array_sorted_length_27", " \
    \       music_string.split(\"\\\\|\").map(music_string => {\n            val music_notes\
    \ = music_string.split(\"o\").map(music_note => {\n                val note =\
    \ music_note.trim\n                val beats = note.length / 4\n             \
    \   beats\n            })\n            music_notes.sum\n        })", "       \
    \ music_string.split(\" \").map(music_string => {\n            val note = music_string.substring(0,\
    \ 1)\n            val beats = music_string.substring(1).split(\"|\").map(music_string\
    \ => {\n                val beat = music_string.substring(0, 1)\n            \
    \    val rest = music_string.substring(1)\n                val beats = rest.split(\"\
    o\").map(music_string => {\n                    val beat = music_string.substring(0,\
    \ 1)\n                    val rest = music_string.substring(1)\n             \
    \       val beats = rest.split(\"|\").map(music_string => {\n                \
    \        val beat = music_string.substring(0, 1)\n                        val\
    \ rest = music_string.substring(1)\n                        val beats = rest.split(\"\
    |\").map(music_string => {\n                            val beat = music_string.substring(0,\
    \ 1)\n                            val rest = music_string.substring(1)\n     \
    \                       val beats = rest.split(\"|\").map(music_string => {\n\
    \                                val beat = music_string.substring(0, 1)\n   \
    \                             val rest = music_string.substring(1)\n         \
    \                       val beats = rest.split(\"|\").map(music_string => {\n\
    \                                    val beat = music_string.substring(0, 1)\n\
    \                                    val rest = music_string.substring(1)\n  \
    \                                  val beats = rest.split(\"|\").map(music_string\
    \ => {\n                                        val beat = music_string.substring(0,\
    \ 1)\n                                        val rest = music_string.substring(1)\n\
    \                                        val beats = rest.split(\"|\").map(music_string\
    \ => {\n                                            val beat = music_string.substring(0,\
    \ 1)\n                                            val rest = music_string.substring(1)\n\
    \                                            val beats = rest.split(\"|\").map(music_string\
    \ => {\n                                                val beat = music_string.substring(0,\
    \ 1)\n                                                val rest = music_string.substring(1)\n\
    \                                                val beats = rest.split(\"|\"\
    ).map(music_string => {\n                                                    val\
    \ beat = music_string.substring(0, 1)\n                                      \
    \              val rest = music_string.substring(1)\n                        \
    \                            val beats = rest.split(\"|\").map(music_string =>\
    \ {\n                                                        val beat = music_string.substring(0,\
    \ 1)\n                                                        val rest = music_string.substring(1)\n\
    \                                                        val beats = rest.split(\"\
    |\").map(music_string => {\n                                                 \
    \           val beat = music_string.substring(0, 1)\n                        \
    \                                    val rest = music_string.substring(1)\n  \
    \                                                          val beats = rest.split(\"\
    |\").map(music_string => {\n                                                 \
    \               val beat = music_string.substring(0, 1)\n                    \
    \                                            val rest = music_string.substring(1)\n\
    \                                                                val beats = rest.split(\"\
    |\").map(music_string => {\n                                                 \
    \                   val beat = music_string.substring(0, 1)\n                \
    \                                                    val rest = music_string.substring(1)\n\
    \                                                                    val beats\
    \ = rest.split(\"", "        music_string.split(\" \").map(music_string => {\n\
    \            val note = music_string.substring(0, 1)\n            val beats =\
    \ music_string.substring(1).split(\"|\").map(music_string => {\n             \
    \   val beat = music_string.substring(0, 1)\n                val rest = music_string.substring(1)\n\
    \                val beats = rest.split(\"o\").map(music_string => {\n       \
    \             val beat = music_string.substring(0, 1)\n                    val\
    \ rest = music_string.substring(1)\n                    val beats = rest.split(\"\
    |\").map(music_string => {\n                        val beat = music_string.substring(0,\
    \ 1)\n                        val rest = music_string.substring(1)\n         \
    \               val beats = rest.split(\"o\").map(music_string => {\n        \
    \                    val beat = music_string.substring(0, 1)\n               \
    \             val rest = music_string.substring(1)\n                         \
    \   val beats = rest.split(\"|\").map(music_string => {\n                    \
    \            val beat = music_string.substring(0, 1)\n                       \
    \         val rest = music_string.substring(1)\n                             \
    \   val beats = rest.split(\"o\").map(music_string => {\n                    \
    \                val beat = music_string.substring(0, 1)\n                   \
    \                 val rest = music_string.substring(1)\n                     \
    \               val beats = rest.split(\"|\").map(music_string => {\n        \
    \                                val beat = music_string.substring(0, 1)\n   \
    \                                     val rest = music_string.substring(1)\n \
    \                                       val beats = rest.split(\"o\").map(music_string\
    \ => {\n                                            val beat = music_string.substring(0,\
    \ 1)\n                                            val rest = music_string.substring(1)\n\
    \                                            val beats = rest.split(\"|\").map(music_string\
    \ => {\n                                                val beat = music_string.substring(0,\
    \ 1)\n                                                val rest = music_string.substring(1)\n\
    \                                                val beats = rest.split(\"o\"\
    ).map(music_string => {\n                                                    val\
    \ beat = music_string.substring(0, 1)\n                                      \
    \              val rest = music_string.substring(1)\n                        \
    \                            val beats = rest.split(\"|\").map(music_string =>\
    \ {\n                                                        val beat = music_string.substring(0,\
    \ 1)\n                                                        val rest = music_string.substring(1)\n\
    \                                                        val beats = rest.split(\"\
    o\").map(music_string => {\n                                                 \
    \           val beat = music_string.substring(0, 1)\n                        \
    \                                    val rest = music_string.substring(1)\n  \
    \                                                          val beats = rest.split(\"\
    |\").map(music_string => {\n                                                 \
    \               val beat = music_string.substring(0, 1)\n                    \
    \                                            val rest = music_string.substring(1)\n\
    \                                                                val beats = rest.split(\"\
    o\").map(music_string => {\n                                                 \
    \                   val beat = music_string.substring(0, 1)\n                \
    \                                                    val rest = music_string.substring(1)\n\
    \                                                                    val beats\
    \ = rest.split(\"", "        music_string.split(\" \").map(music_string => {\n\
    \            val note = music_string.charAt(0).toLowerCase\n            val beats\
    \ = music_string.substring(1).split(\"|\").map(music_string => {\n           \
    \     val beat = music_string.charAt(0).toLowerCase\n                val rest\
    \ = music_string.substring(1).split(\"o\").map(music_string => {\n           \
    \         val rest = music_string.charAt(0).toLowerCase\n                    val\
    \ rest = music_string.substring(1).split(\"|\").map(music_string => {\n      \
    \                  val rest = music_string.charAt(0).toLowerCase\n           \
    \             val rest = music_string.substring(1).split(\"o\").map(music_string\
    \ => {\n                            val rest = music_string.charAt(0).toLowerCase\n\
    \                            val rest = music_string.substring(1).split(\"|\"\
    ).map(music_string => {\n                                val rest = music_string.charAt(0).toLowerCase\n\
    \                                val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                    val rest = music_string.charAt(0).toLowerCase\n\
    \                                    val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                        val rest =\
    \ music_string.charAt(0).toLowerCase\n                                       \
    \ val rest = music_string.substring(1).split(\"o\").map(music_string => {\n  \
    \                                          val rest = music_string.charAt(0).toLowerCase\n\
    \                                            val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                val\
    \ rest = music_string.charAt(0).toLowerCase\n                                \
    \                val rest = music_string.substring(1).split(\"o\").map(music_string\
    \ => {\n                                                    val rest = music_string.charAt(0).toLowerCase\n\
    \                                                    val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                 \
    \       val rest = music_string.charAt(0).toLowerCase\n                      \
    \                                  val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \           val rest = music_string.charAt(0).toLowerCase\n                  \
    \                                          val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                 \
    \               val rest = music_string.charAt(0).toLowerCase\n              \
    \                                                  val rest = music_string.substring(1).split(\"\
    o\").map(music_string => {\n                                                 \
    \                   val rest = music_string.charAt(0).toLowerCase\n          \
    \                                                          val rest = music_string.substring(1).split(\"\
    |\").map(music_string => {\n                                                 \
    \                       val rest = music_string.charAt(0).toLowerCase\n      \
    \                                                                  val rest =\
    \ music_string.substring(1).split(\"o\").map(music_string => {\n             \
    \                                                               val rest = music_string.charAt(0).toLowerCase\n\
    \                                                                            ",
  "        val notes = music_string.split(\"\\\\|\")\n        val notes_count = notes.length\n\
    \        val notes_last_beats = notes.map(x => x.split(\"o\").length).sum\n  \
    \      val notes_last_beats_count = notes_last_beats / notes_count\n        val\
    \ notes_last_beats_count_rounded = notes_last_beats_count.toInt\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_count_rounded + 1\n        val notes_last_beats_count_rounded_to_int\
    \ = notes_last_beats_", "        music_string.split(\" \").map(music_string =>\
    \ {\n            val note = music_string.substring(0, 1)\n            val rest\
    \ = music_string.substring(1, music_string.length)\n            val beats = rest.split(\"\
    |\").map(music_string => {\n                val beat = music_string.substring(0,\
    \ 1)\n                val rest = music_string.substring(1, music_string.length)\n\
    \                beat.toLong * 4\n            }).sum\n            note.toLong\
    \ * beats\n        }).sum"]
stop_tokens:
- "\n    }\n"

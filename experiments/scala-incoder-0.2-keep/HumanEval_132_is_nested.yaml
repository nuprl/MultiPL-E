name: HumanEval_132_is_nested
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function that takes a string as input which contains only square\
  \ brackets.\n    // The function should return True if and only if there is a valid\
  \ subsequence of brackets \n    // where at least one bracket in the subsequence\
  \ is nested.\n    // is_nested('[[]]') \u279E True\n    // is_nested('[]]]]]]][[[[[]')\
  \ \u279E False\n    // is_nested('[][]') \u279E False\n    // is_nested('[]') \u279E\
  \ False\n    // is_nested('[[][]]') \u279E True\n    // is_nested('[[]][[') \u279E\
  \ True\n    def isNested(string : String) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isNested((\"[[]]\"\
  )) == (true));\n    assert(isNested((\"[]]]]]]][[[[[]\")) == (false));\n    assert(isNested((\"\
  [][]\")) == (false));\n    assert(isNested((\"[]\")) == (false));\n    assert(isNested((\"\
  [[[[]]]]\")) == (true));\n    assert(isNested((\"[]]]]]]]]]]\")) == (false));\n\
  \    assert(isNested((\"[][][[]]\")) == (true));\n    assert(isNested((\"[[]\"))\
  \ == (false));\n    assert(isNested((\"[]]\")) == (false));\n    assert(isNested((\"\
  [[]][[\")) == (true));\n    assert(isNested((\"[[][]]\")) == (true));\n    assert(isNested((\"\
  \")) == (false));\n    assert(isNested((\"[[[[[[[[\")) == (false));\n    assert(isNested((\"\
  ]]]]]]]]\")) == (false));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

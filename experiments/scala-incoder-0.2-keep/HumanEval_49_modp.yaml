name: HumanEval_49_modp
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return 2^n modulo p (be aware of numerics).\n    // >>> modp(3, 5)\n   \
  \ // 3\n    // >>> modp(1101, 101)\n    // 2\n    // >>> modp(0, 101)\n    // 1\n\
  \    // >>> modp(3, 11)\n    // 8\n    // >>> modp(100, 101)\n    // 1\n    def\
  \ modp(n : Long, p : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(modp((3l), (5l))\
  \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
  \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
  \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
  \ == (3l));\n    }\n\n}\n"
completions: ["        val r = n % p\n        if (r < 0) r + p else r", "        val\
    \ m = math.pow(2, n)\n        val r = math.mod(m, p)\n        if (r == 0) 1 else\
    \ r", "        val r = n % p\n        if (r < 0) r + p else r", "        val m\
    \ = math.pow(2, n)\n        val r = math.mod(m, p)\n        if (r < 0) r + p else\
    \ r", "        val r = n % p\n        if (r < 0) r + p else r", "        val m\
    \ = math.pow(2,n)\n        val r = math.mod(m, p)\n        val r2 = math.pow(2,r)\n\
    \        val r3 = math.pow(2,r2)\n        val r4 = math.pow(2,r3)\n        val\
    \ r5 = math.pow(2,r4)\n        val r6 = math.pow(2,r5)\n        val r7 = math.pow(2,r6)\n\
    \        val r8 = math.pow(2,r7)\n        val r9 = math.pow(2,r8)\n        val\
    \ r10 = math.pow(2,r9)\n        val r11 = math.pow(2,r10)\n        val r12 = math.pow(2,r11)\n\
    \        val r13 = math.pow(2,r12)\n        val r14 = math.pow(2,r13)\n      \
    \  val r15 = math.pow(2,r14)\n        val r16 = math.pow(2,r15)\n        val r17\
    \ = math.pow(2,r16)\n        val r18 = math.pow(2,r17)\n        val r19 = math.pow(2,r18)\n\
    \        val r20 = math.pow(2,r19)\n        val r21 = math.pow(2,r20)\n      \
    \  val r22 = math.pow(2,r21)\n        val r23 = math.pow(2,r22)\n        val r24\
    \ = math.pow(2,r23)\n        val r25 = math.pow(2,r24)\n        val r26 = math.pow(2,r25)\n\
    \        val r27 = math.pow(2,r26)\n        val r28 = math.pow(2,r27)\n      \
    \  val r29 = math.pow(2,r28)\n        val r30 = math.pow(2,r29)\n        val r31\
    \ = math.pow(2,r30)\n        val r32 = math.pow(2,r31)\n        val r33 = math.pow(2,r32)\n\
    \        val r34 = math.pow(2,r33)\n        val r35 = math.pow(2,r34)\n      \
    \  val r36 = math.pow(2,r35)\n        val r37 = math.pow(2,r36)\n        val r38\
    \ = math.pow(2,r37)\n        val r39 = math.pow(2,r38)\n        val r40 = math.pow(2,r39)\n\
    \        val r41 = math.pow(2,r40)\n        val r42 = math.pow(2,r41)\n      \
    \  val r43 = math.pow(2,r42)\n        val r44 = math.pow(2,r43)\n        val r45\
    \ = math.pow(2,r44)\n        val r46 = math.pow(2,r", "        val r = n % p\n\
    \        if (r == 0) 1 else r", "        val r = n % p\n        if (p < 0)\n \
    \           r + p\n        else\n            r", "        val r = n % p\n    \
    \    if (r == 0) 1 else r", "        val n = n.toInt\n        val p = p.toInt\n\
    \        val r = scala.math.pow(2, n)\n        val m = scala.math.mod(r, p)\n\
    \        if (m == 0) 1 else m", "        val m = n % p\n        if (m == 0) 1\n\
    \        else m + 1", "        val r = n % p\n        if (r < 0) r + p else r",
  "        val r = n % p\n        if (r < 0) r + p else r", "        val r = scala.math.BigInt(n).mod(scala.math.BigInt(p))\n\
    \        r.toLong", "        val r = n % p\n        if (r == 0) 1 else r", " \
    \       val m = math.pow(2, n)\n        val r = math.mod(m, p)\n        val s\
    \ = math.signum(r)\n        if (s == -1) 1 else s", "        val n = n.toInt\n\
    \        val p = p.toInt\n        if (n == 0 || p == 0) 1\n        else if (n\
    \ % p == 0) n\n        else n % p + modp(n / p, p)", "        val r = scala.math.pow(2,\
    \ n) % p\n        if (r < 0) r + p else r", "        val r = n % p\n        if\
    \ (p < 0)\n            r + p\n        else\n            r", "        val m = math.pow(2,\
    \ n)\n        val r = math.mod(m, p)\n        val s = math.signum(r)\n       \
    \ if (s == 0) 1 else s", "        val m = math.pow(2, n)\n        val r = math.mod(m,\
    \ p)\n        val s = math.signum(r)\n        if (s == -1) 1 else s", "      \
    \  val m = n % p\n        if (m == 0) 1\n        else (n / p) * p + m", "    \
    \    val r = n % p\n        if (r == 0) 1\n        else if (r > 0) modp(r, p)\
    \ + p\n        else modp(r, p) - p", "        val m = math.pow(2,n)\n        val\
    \ r = math.mod(m, p)\n        if (r == 0) 1 else r", "        val r = n % p\n\
    \        if (r < 0) r + p else r", "        val n = n.toInt\n        val p = p.toInt\n\
    \        val result = 1L\n        val r = n % p\n        val q = p / r\n     \
    \   val t = 1L\n        val k = 1L\n        while (k <= r) {\n            t =\
    \ t * q\n            k += 1\n        }\n        result = result * t + r\n    \
    \    result", "        val r = n % p\n        if (r < 0) r + p else r", "    \
    \    val m = math.pow(2, n)\n        val r = math.mod(m, p)\n        if (r < 0)\
    \ r + p else r", "        val n2 = n * n\n        val p2 = p * p\n        val\
    \ n3 = n2 * n2\n        val p3 = p2 * p2\n        val n4 = n3 * n3\n        val\
    \ p4 = p3 * p3\n        val n5 = n4 * n4\n        val p5 = p4 * p4\n        val\
    \ n6 = n5 * n5\n        val p6 = p5 * p5\n        val n7 = n6 * n6\n        val\
    \ p7 = p6 * p6\n        val n8 = (n7 * n7) % p\n        val p8 = (p7 * p7) % p\n\
    \        val n9 = (n8 * n8) % p\n        val p9 = (p8 * p8) % p\n        val n10\
    \ = (n9 * n9) % p\n        val p10 = (p9 * p9) % p\n        val n11 = (n10 * n10)\
    \ % p\n        val p11 = (p10 * p10) % p\n        val n12 = (n11 * n11) % p\n\
    \        val p12 = (p11 * p11) % p\n        val n13 = (n12 * n12) % p\n      \
    \  val p13 = (p12 * p12) % p\n        val n14 = (n13 * n13) % p\n        val p14\
    \ = (p13 * p13) % p\n        val n15 = (n14 * n14) % p\n        val p15 = (p14\
    \ * p14) % p\n        val n16 = (n15 * n15) % p\n        val p16 = (p15 * p15)\
    \ % p\n        val n17 = (n16 * n16) % p\n        val p17 = (p16 * p16) % p\n\
    \        val n18 = (n17 * n17) % p\n        val p18 = (p17 * p17) % p\n      \
    \  val n19 = (n18 * n18) % p\n        val p19 = (p18 * p18) % p\n        val n20\
    \ = (n19 * n19) % p\n        val p20 = (p19 * p19) % p\n        val n21 = (n20\
    \ * n20) % p\n        val p21 = (p20 * p20) % p\n        val n22 = (n21 * n21)\
    \ % p\n        val p22 = (p21 * p21) % p\n        val n23 = (n22 * n22) % p\n\
    \        val p23 = (p22 * p22", "        val m = math.pow(2,n)\n        val r\
    \ = math.mod(m,p)\n        val s = math.signum(r)\n        if (s == 0) 1 else\
    \ s", "        val r = n % p\n        if (r == 0) 1 else r", "        val r =\
    \ n % p\n        if (p < 0)\n            r + p\n        else\n            r",
  "        val m = n / p\n        if (m == 0) 1\n        else if (m == 1) p\n    \
    \    else modp(m, p) * p", "        val m = math.pow(2, n)\n        val r = math.mod(m,\
    \ p)\n        if (r < 0) r + p else r", "        val n2 = n * n\n        val p2\
    \ = p * p\n        val n3 = n2 * n2\n        val p3 = p2 * p2\n        val n4\
    \ = n3 * n3\n        val p4 = p3 * p3\n        val n5 = n4 * n4\n        val p5\
    \ = p4 * p4\n        val n6 = n5 * n5\n        val p6 = p5 * p5\n        val n7\
    \ = n6 * n6\n        val p7 = p6 * p6\n        val n8 = (n7 * n7) % p\n      \
    \  val p8 = (p7 * p7) % p\n        val n9 = (n8 * n8) % p\n        val p9 = (p8\
    \ * p8) % p\n        val n10 = (n9 * n9) % p\n        val p10 = (p9 * p9) % p\n\
    \        val n11 = (n10 * n10) % p\n        val p11 = (p10 * p10) % p\n      \
    \  val n12 = (n11 * n11) % p\n        val p12 = (p11 * p11) % p\n        val n13\
    \ = (n12 * n12) % p\n        val p13 = (p12 * p12) % p\n        val n14 = (n13\
    \ * n13) % p\n        val p14 = (p13 * p13) % p\n        val n15 = (n14 * n14)\
    \ % p\n        val p15 = (p14 * p14) % p\n        val n16 = (n15 * n15) % p\n\
    \        val p16 = (p15 * p15) % p\n        val n17 = (n16 * n16) % p\n      \
    \  val p17 = (p16 * p16) % p\n        val n18 = (n17 * n17) % p\n        val p18\
    \ = (p17 * p17) % p\n        val n19 = (n18 * n18) % p\n        val p19 = (p18\
    \ * p18) % p\n        val n20 = (n19 * n19) % p\n        val p20 = (p19 * p19)\
    \ % p\n        val n21 = (n20 * n20) % p\n        val p21 = (p20 * p20) % p\n\
    \        val n22 = (n21 * n21) % p\n        val p22 = (p21 * p21) % p\n      \
    \  val n23 = (n22 * n22) % p\n        val p23 = (p22 * p", "        val n1 = n\
    \ % p\n        if (n1 == 0) 1\n        else n1 ^ modp(n / p, p)", "        val\
    \ m = math.pow(2, n)\n        val r = math.mod(m, p)\n        if (r < 0) r + p\
    \ else r", "        val r = n % p\n        if (r < 0) r + p else r", "       \
    \ val n = n.toInt\n        val p = p.toInt\n        if (n == 0) 1\n        else\
    \ if (n == 1) p\n        else if (n % 2 == 0) modp(n / 2, p) * p + modp(n / 2,\
    \ p)\n        else modp(n / 2, p) * p + modp(n / 2, p) * p", "        val r =\
    \ n % p\n        if (n < 0) r + p\n        else r", "        val m = math.pow(2,\
    \ n)\n        val r = math.mod(m, p)\n        if (n < 0) r + p else r", "    \
    \    val m = scala.math.pow(2, n)\n        val r = scala.math.mod(m, p)\n    \
    \    val s = scala.math.signum(r)\n        if (s == 0) 1 else s", "        val\
    \ r = n % p\n        if (r < 0) r + p else r", "        val m = scala.math.pow(2,\
    \ n)\n        val r = scala.math.mod(m, p)\n        if (r < 0) r + p else r",
  "        val r = scala.math.pow(2, n) % p\n        if (n < 0) r + p\n        else\
    \ r", "        val r = n % p\n        if (r < 0) r + p else r", "        val m\
    \ = math.pow(2,n)\n        val r = math.mod(m, p)\n        if (r == 0) 1 else\
    \ r", "        val r = n % p\n        if (r < 0) r + p else r", "        val r\
    \ = n % p\n        if (r == 0) 1\n        else (r + p) % p", "        val m =\
    \ math.pow(2, n)\n        val r = math.mod(m, p)\n        val s = math.abs(r)\
    \ % p\n        if (s == 0) r else r + p", "        val r = n % p\n        if (p\
    \ < 0)\n            r + p\n        else\n            r", "        val m = math.max(math.min(math.pow(n,\
    \ p), p), 0L)\n        math.abs(m) % p", "        val r = n % p\n        if (r\
    \ < 0) r + p else r", "        val r = n % p\n        if (r == 0) 1 else r", " \
    \       val r = n % p\n        if (r < 0) r + p else r", "        val r = n %\
    \ p\n        if (p < 0)\n            r + p\n        else\n            r", "  \
    \      val n2 = n * n\n        val p2 = p * p\n        val n3 = n2 * n2\n    \
    \    val p3 = p2 * p2\n        val n4 = n3 * n3\n        val p4 = p3 * p3\n  \
    \      val n5 = n4 * n4\n        val p5 = p4 * p4\n        val n6 = n5 * n5\n\
    \        val p6 = p5 * p5\n        val n7 = n6 * n6\n        val p7 = p6 * p6\n\
    \        val n8 = (n7 * n7) - p7\n        val p8 = (p7 * p7) - p8\n        val\
    \ n9 = (n8 * n8) - p8\n        val p9 = (p8 * p8) - p9\n        val n10 = (n9\
    \ * n9) - p9\n        val p10 = (p9 * p9) - p10\n        val n11 = (n10 * n10)\
    \ - p10\n        val p11 = (p10 * p10) - p11\n        val n12 = (n11 * n11) -\
    \ p11\n        val p12 = (p11 * p11) - p12\n        val n13 = (n12 * n12) - p12\n\
    \        val p13 = (p12 * p12) - p13\n        val n14 = (n13 * n13) - p13\n  \
    \      val p14 = (p13 * p13) - p14\n        val n15 = (n14 * n14) - p14\n    \
    \    val p15 = (p14 * p14) - p15\n        val n16 = (n15 * n15) - p15\n      \
    \  val p16 = (p15 * p15) - p16\n        val n17 = (n16 * n16) - p16\n        val\
    \ p17 = (p16 * p16) - p17\n        val n18 = (n17 * n17) - p17\n        val p18\
    \ = (p17 * p17) - p18\n        val n19 = (n18 * n18) - p18\n        val p19 =\
    \ (p18 * p18) - p19\n        val n20 = (n19 * n19) - p19\n        val p20 = (p19\
    \ * p19) - p20\n        val n21 = (n20 * n20) - p20\n        val p21 = (p20 *\
    \ p20) - p21\n        val n22 = (n21 * n21) - p21\n        val p22 = (p21", " \
    \       val r = n % p\n        if (r < 0) r + p else r", "        val r = n %\
    \ p\n        if (r < 0) r + p else r", "        val r = n % p\n        if (n <\
    \ 0) -r\n        else r", "        val r = scala.math.pow(2, n)\n        val q\
    \ = scala.math.pow(2, p) % r\n        if (q == 0) 1 else q", "        val r =\
    \ scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", "        val r =\
    \ n % p\n        if (r < 0) r + p else r", "        val r = n % p\n        if\
    \ (r == 0) 1 else r", "        val r = n % p\n        if (r < 0) r + p else r",
  "        val m = math.pow(2, n)\n        val r = math.mod(m, p)\n        if (r <\
    \ 0) r + p else r", "        val r = n % p\n        if (p < 0)\n            r\
    \ + p\n        else\n            r", "        val n2 = n * n\n        val p2 =\
    \ p * p\n        val n3 = n2 * n2\n        val p3 = p2 * p2\n        val n4 =\
    \ n3 * n3\n        val p4 = p3 * p3\n        val n5 = n4 * n4\n        val p5\
    \ = p4 * p4\n        val n6 = n5 * n5\n        val p6 = p5 * p5\n        val n7\
    \ = n6 * n6\n        val p7 = p6 * p6\n        val n8 = (n7 * n7) % p\n      \
    \  val p8 = (p7 * p7) % p\n        val n9 = (n8 * n8) % p\n        val p9 = (p8\
    \ * p8) % p\n        val n10 = (n9 * n9) % p\n        val p10 = (p9 * p9) % p\n\
    \        val n11 = (n10 * n10) % p\n        val p11 = (p10 * p10) % p\n      \
    \  val n12 = (n11 * n11) % p\n        val p12 = (p11 * p11) % p\n        val n13\
    \ = (n12 * n12) % p\n        val p13 = (p12 * p12) % p\n        val n14 = (n13\
    \ * n13) % p\n        val p14 = (p13 * p13) % p\n        val n15 = (n14 * n14)\
    \ % p\n        val p15 = (p14 * p14) % p\n        val n16 = (n15 * n15) % p\n\
    \        val p16 = (p15 * p15) % p\n        val n17 = (n16 * n16) % p\n      \
    \  val p17 = (p16 * p16) % p\n        val n18 = (n17 * n17) % p\n        val p18\
    \ = (p17 * p17) % p\n        val n19 = (n18 * n18) % p\n        val p19 = (p18\
    \ * p18) % p\n        val n20 = (n19 * n19) % p\n        val p20 = (p19 * p19)\
    \ % p\n        val n21 = (n20 * n20) % p\n        val p21 = (p20 * p20) % p\n\
    \        val n22 = (n21 * n21) % p\n        val p22 = (p21 * p21) % p\n      \
    \  val n23 = (n22 * n22) % p\n        val p23 = (p22 * p", "        val r = n\
    \ % p\n        if (r < 0) r + p else r", "        val r = n % p\n        if (r\
    \ < 0) r + p else r", "        val r = n % p\n        if (p > 0)\n           \
    \ modp(r, p - 1)\n        else\n            r", "        val r = n % p\n     \
    \   if (r == 0) 1 else r", "        val n2 = n * n\n        val p2 = p * p\n \
    \       val n3 = n2 * n2\n        val p3 = p2 * p2\n        val n4 = n3 * n3\n\
    \        val p4 = p3 * p3\n        val n5 = n4 * n4\n        val p5 = p4 * p4\n\
    \        val n6 = n5 * n5\n        val p6 = p5 * p5\n        val n7 = n6 * n6\n\
    \        val p7 = p6 * p6\n        val n8 = (n7 * n7) % p\n        val p8 = (p7\
    \ * p7) % p\n        val n9 = (n8 * n8) % p\n        val p9 = (p8 * p8) % p\n\
    \        val n10 = (n9 * n9) % p\n        val p10 = (p9 * p9) % p\n        val\
    \ n11 = (n10 * n10) % p\n        val p11 = (p10 * p10) % p\n        val n12 =\
    \ (n11 * n11) % p\n        val p12 = (p11 * p11) % p\n        val n13 = (n12 *\
    \ n12) % p\n        val p13 = (p12 * p12) % p\n        val n14 = (n13 * n13) %\
    \ p\n        val p14 = (p13 * p13) % p\n        val n15 = (n14 * n14) % p\n  \
    \      val p15 = (p14 * p14) % p\n        val n16 = (n15 * n15) % p\n        val\
    \ p16 = (p15 * p15) % p\n        val n17 = (n16 * n16) % p\n        val p17 =\
    \ (p16 * p16) % p\n        val n18 = (n17 * n17) % p\n        val p18 = (p17 *\
    \ p17) % p\n        val n19 = (n18 * n18) % p\n        val p19 = (p18 * p18) %\
    \ p\n        val n20 = (n19 * n19) % p\n        val p20 = (p19 * p19) % p\n  \
    \      val n21 = (n20 * n20) % p\n        val p21 = (p20 * p20) % p\n        val\
    \ n22 = (n21 * n21) % p\n        val p22 = (p21 * p21) % p\n        val n23 =\
    \ (n22 * n22) % p\n        val p23 = (p22 * p", "        val n2 = n * n\n    \
    \    val p2 = p * p\n        val n3 = n2 * n2\n        val p3 = p2 * p2\n    \
    \    val n4 = n3 * n3\n        val p4 = p3 * p3\n        val n5 = n4 * n4\n  \
    \      val p5 = p4 * p4\n        val n6 = n5 * n5\n        val p6 = p5 * p5\n\
    \        val n7 = n6 * n6\n        val p7 = p6 * p6\n        val n8 = (n7 * n7)\
    \ % p\n        val p8 = (p7 * p7) % p\n        val n9 = (n8 * n8) % p\n      \
    \  val p9 = (p8 * p8) % p\n        val n10 = (n9 * n9) % p\n        val p10 =\
    \ (p9 * p9) % p\n        val n11 = (n10 * n10) % p\n        val p11 = (p10 * p10)\
    \ % p\n        val n12 = (n11 * n11) % p\n        val p12 = (p11 * p11) % p\n\
    \        val n13 = (n12 * n12) % p\n        val p13 = (p12 * p12) % p\n      \
    \  val n14 = (n13 * n13) % p\n        val p14 = (p13 * p13) % p\n        val n15\
    \ = (n14 * n14) % p\n        val p15 = (p14 * p14) % p\n        val n16 = (n15\
    \ * n15) % p\n        val p16 = (p15 * p15) % p\n        val n17 = (n16 * n16)\
    \ % p\n        val p17 = (p16 * p16) % p\n        val n18 = (n17 * n17) % p\n\
    \        val p18 = (p17 * p17) % p\n        val n19 = (n18 * n18) % p\n      \
    \  val p19 = (p18 * p18) % p\n        val n20 = (n19 * n19) % p\n        val p20\
    \ = (p19 * p19) % p\n        val n21 = (n20 * n20) % p\n        val p21 = (p20\
    \ * p20) % p\n        val n22 = (n21 * n21) % p\n        val p22 = (p21 * p21)\
    \ % p\n        val n23 = (n22 * n22) % p\n        val p23 = (p22 * p", "     \
    \   val r = n % p\n        if (r < 0) r + p else r", "        val r = n % p\n\
    \        if (p > 0)\n            modp(r, p - 1)\n        else\n            r",
  "        val r = n % p\n        if (r < 0) r + p else r", "        val r = n % p\n\
    \        if (r < 0) r + p else r", "        val r = n % p\n        if (r < 0)\
    \ r + p else r", "        val n = n.toInt\n        val p = p.toInt\n        val\
    \ result = 1L\n        val m = 1L\n        val q = p\n        val r = p\n    \
    \    while (n > 1) {\n            val t = n % q\n            n /= q\n        \
    \    result *= t\n            m %= q\n            q /= r\n            r /= p\n\
    \        }\n        result", "        val r = n % p\n        if (r < 0) r + p\
    \ else r", "        val r = n % p\n        if (r < 0) r + p else r", "       \
    \ val n = n.toInt\n        val p = p.toInt\n        val result = 1L\n        val\
    \ q = p / 2\n        val r = n % q\n        val t = r * q\n        val u = t %\
    \ p\n        val v = u * p\n        result = result + v\n        result", "  \
    \      val n2 = n * n\n        val p2 = p * p\n        val n3 = n2 * n2\n    \
    \    val p3 = p2 * p2\n        val n4 = n3 * n3\n        val p4 = p3 * p3\n  \
    \      val n5 = n4 * n4\n        val p5 = p4 * p4\n        val n6 = n5 * n5\n\
    \        val p6 = p5 * p5\n        val n7 = n6 * n6\n        val p7 = p6 * p6\n\
    \        val n8 = (n7 + p7) % p\n        val p8 = (p7 + n7) % p\n        val n9\
    \ = (n8 + p8) % p\n        val p9 = (p8 + n8) % p\n        val n10 = (n9 + p9)\
    \ % p\n        val p10 = (p9 + n9) % p\n        val n11 = (n10 + p10) % p\n  \
    \      val p11 = (p10 + n10) % p\n        val n12 = (n11 + p11) % p\n        val\
    \ p12 = (p11 + n11) % p\n        val n13 = (n12 + p12) % p\n        val p13 =\
    \ (p12 + n12) % p\n        val n14 = (n13 + p13) % p\n        val p14 = (p13 +\
    \ n13) % p\n        val n15 = (n14 + p14) % p\n        val p15 = (p14 + n14) %\
    \ p\n        val n16 = (n15 + p15) % p\n        val p16 = (p15 + n15) % p\n  \
    \      val n17 = (n16 + p16) % p\n        val p17 = (p16 + n16) % p\n        val\
    \ n18 = (n17 + p17) % p\n        val p18 = (p17 + n17) % p\n        val n19 =\
    \ (n18 + p18) % p\n        val p19 = (p18 + n18) % p\n        val n20 = (n19 +\
    \ p19) % p\n        val p20 = (p19 + n19) % p\n        val n21 = (n20 + p20) %\
    \ p\n        val p21 = (p20 + n20) % p\n        val n22 = (n21 + p21) % p\n  \
    \      val p22 = (p21 + n21) % p\n        val n23 = (n22 + p22) % p\n        val\
    \ p23 = (p22 + n22", "        val r = n % p\n        if (r < 0) r + p else r",
  "        val r = n % p\n        if (r == 0) 1 else r", "        val r = n % p\n\
    \        if (n < 0) r + p else r", "        val n2 = n * n\n        val p2 = p\
    \ * p\n        val n3 = n2 * n2\n        val p3 = p2 * p2\n        val n4 = n3\
    \ * n3\n        val p4 = p3 * p3\n        val n5 = n4 * n4\n        val p5 = p4\
    \ * p4\n        val n6 = n5 * n5\n        val p6 = p5 * p5\n        val n7 = n6\
    \ * n6\n        val p7 = p6 * p6\n        val n8 = (n7 * n7) % p\n        val\
    \ p8 = (p7 * p7) % p\n        val n9 = (n8 * n8) % p\n        val p9 = (p8 * p8)\
    \ % p\n        val n10 = (n9 * n9) % p\n        val p10 = (p9 * p9) % p\n    \
    \    val n11 = (n10 * n10) % p\n        val p11 = (p10 * p10) % p\n        val\
    \ n12 = (n11 * n11) % p\n        val p12 = (p11 * p11) % p\n        val n13 =\
    \ (n12 * n12) % p\n        val p13 = (p12 * p12) % p\n        val n14 = (n13 *\
    \ n13) % p\n        val p14 = (p13 * p13) % p\n        val n15 = (n14 * n14) %\
    \ p\n        val p15 = (p14 * p14) % p\n        val n16 = (n15 * n15) % p\n  \
    \      val p16 = (p15 * p15) % p\n        val n17 = (n16 * n16) % p\n        val\
    \ p17 = (p16 * p16) % p\n        val n18 = (n17 * n17) % p\n        val p18 =\
    \ (p17 * p17) % p\n        val n19 = (n18 * n18) % p\n        val p19 = (p18 *\
    \ p18) % p\n        val n20 = (n19 * n19) % p\n        val p20 = (p19 * p19) %\
    \ p\n        val n21 = (n20 * n20) % p\n        val p21 = (p20 * p20) % p\n  \
    \      val n22 = (n21 * n21) % p\n        val p22 = (p21 * p21) % p\n        val\
    \ n23 = (n22 * n22) % p\n        val p23 = (p22 * p", "        val r = n % p\n\
    \        if (r < 0) r + p else r", "        val m = math.pow(2, n)\n        val\
    \ r = math.mod(m, p)\n        val s = math.signum(r)\n        if (s == 0) 1 else\
    \ s", "        val m = math.pow(2, n)\n        val r = math.mod(m, p)\n      \
    \  if (r < 0) r + p else r", "        val n2 = n * n\n        val p2 = p * p\n\
    \        val n3 = n2 * n2\n        val p3 = p2 * p2\n        val n4 = n3 * n3\n\
    \        val p4 = p3 * p3\n        val n5 = n4 * n4\n        val p5 = p4 * p4\n\
    \        val n6 = n5 * n5\n        val p6 = p5 * p5\n        val n7 = n6 * n6\n\
    \        val p7 = p6 * p6\n        val n8 = (n7 * n7) % p\n        val p8 = (p7\
    \ * p7) % p\n        val n9 = (n8 * n8) % p\n        val p9 = (p8 * p8) % p\n\
    \        val n10 = (n9 * n9) % p\n        val p10 = (p9 * p9) % p\n        val\
    \ n11 = (n10 * n10) % p\n        val p11 = (p10 * p10) % p\n        val n12 =\
    \ (n11 * n11) % p\n        val p12 = (p11 * p11) % p\n        val n13 = (n12 *\
    \ n12) % p\n        val p13 = (p12 * p12) % p\n        val n14 = (n13 * n13) %\
    \ p\n        val p14 = (p13 * p13) % p\n        val n15 = (n14 * n14) % p\n  \
    \      val p15 = (p14 * p14) % p\n        val n16 = (n15 * n15) % p\n        val\
    \ p16 = (p15 * p15) % p\n        val n17 = (n16 * n16) % p\n        val p17 =\
    \ (p16 * p16) % p\n        val n18 = (n17 * n17) % p\n        val p18 = (p17 *\
    \ p17) % p\n        val n19 = (n18 * n18) % p\n        val p19 = (p18 * p18) %\
    \ p\n        val n20 = (n19 * n19) % p\n        val p20 = (p19 * p19) % p\n  \
    \      val n21 = (n20 * n20) % p\n        val p21 = (p20 * p20) % p\n        val\
    \ n22 = (n21 * n21) % p\n        val p22 = (p21 * p21) % p\n        val n23 =\
    \ (n22 * n22) % p\n        val p23 = (p22 * p", "        val r = n % p\n     \
    \   if (r == 0) 1\n        else if (r > 0) modp(r, p) + 1\n        else modp(r,\
    \ p) - 1", "        val r = n % p\n        if (r < 0) r + p else r", "       \
    \ val n1 = n % p\n        val n2 = n / p\n        val n3 = n2 / p\n        val\
    \ n4 = n3 / p\n        val n5 = n4 / p\n        val n6 = n5 / p\n        val n7\
    \ = n6 / p\n        val n8 = n7 / p\n        val n9 = n8 / p\n        val n10\
    \ = n9 / p\n        val n11 = n10 / p\n        val n12 = n11 / p\n        val\
    \ n13 = n12 / p\n        val n14 = n13 / p\n        val n15 = n14 / p\n      \
    \  val n16 = n15 / p\n        val n17 = n16 / p\n        val n18 = n17 / p\n \
    \       val n19 = n18 / p\n        val n20 = n19 / p\n        val n21 = n20 /\
    \ p\n        val n22 = n21 / p\n        val n23 = n22 / p\n        val n24 = n23\
    \ / p\n        val n25 = n24 / p\n        val n26 = n25 / p\n        val n27 =\
    \ n26 / p\n        val n28 = n27 / p\n        val n29 = n28 / p\n        val n30\
    \ = n29 / p\n        val n31 = n30 / p\n        val n32 = n31 / p\n        val\
    \ n33 = n32 / p\n        val n34 = n33 / p\n        val n35 = n34 / p\n      \
    \  val n36 = n35 / p\n        val n37 = n36 / p\n        val n38 = n37 / p\n \
    \       val n39 = n38 / p\n        val n40 = n39 / p\n        val n41 = n40 /\
    \ p\n        val n42 = n41 / p\n        val n43 = n42 / p\n        val n44 = n43\
    \ / p\n        val n45 = n44 / p\n        val n46 = n45 / p\n        val n47 =\
    \ n46 / p\n        val n48 = n47 / p\n        val n49 = n48 / p\n        val n50\
    \ = n49 / p\n        val n51 = n50 / p\n        val n52 = n51 / p\n        val\
    \ n53 = n52 / p\n        val n54 = n53 / p\n        val n55 = n54 / p\n      \
    \  val n56 = n55 / p\n        ", "        val m = math.pow(2,n)\n        val r\
    \ = math.mod(m,p)\n        if (r < 0) r + p else r", "        val n2 = n % p\n\
    \        if (n2 == 0) 1\n        else if (n2 == p) 2\n        else modp(n2, p)",
  "        val n2 = n * n\n        val p2 = p * p\n        val n3 = n2 * n2\n    \
    \    val p3 = p2 * p2\n        val n4 = n3 * n3\n        val p4 = p3 * p3\n  \
    \      val n5 = n4 * n4\n        val p5 = p4 * p4\n        val n6 = n5 * n5\n\
    \        val p6 = p5 * p5\n        val n7 = n6 * n6\n        val p7 = p6 * p6\n\
    \        val n8 = (n7 * n7) % p\n        val p8 = (p7 * p7) % p\n        val n9\
    \ = (n8 * n8) % p\n        val p9 = (p8 * p8) % p\n        val n10 = (n9 * n9)\
    \ % p\n        val p10 = (p9 * p9) % p\n        val n11 = (n10 * n10) % p\n  \
    \      val p11 = (p10 * p10) % p\n        val n12 = (n11 * n11) % p\n        val\
    \ p12 = (p11 * p11) % p\n        val n13 = (n12 * n12) % p\n        val p13 =\
    \ (p12 * p12) % p\n        val n14 = (n13 * n13) % p\n        val p14 = (p13 *\
    \ p13) % p\n        val n15 = (n14 * n14) % p\n        val p15 = (p14 * p14) %\
    \ p\n        val n16 = (n15 * n15) % p\n        val p16 = (p15 * p15) % p\n  \
    \      val n17 = (n16 * n16) % p\n        val p17 = (p16 * p16) % p\n        val\
    \ n18 = (n17 * n17) % p\n        val p18 = (p17 * p17) % p\n        val n19 =\
    \ (n18 * n18) % p\n        val p19 = (p18 * p18) % p\n        val n20 = (n19 *\
    \ n19) % p\n        val p20 = (p19 * p19) % p\n        val n21 = (n20 * n20) %\
    \ p\n        val p21 = (p20 * p20) % p\n        val n22 = (n21 * n21) % p\n  \
    \      val p22 = (p21 * p21) % p\n        val n23 = (n22 * n22) % p\n        val\
    \ p23 = (p22 * p", "        val r = n % p\n        if (n < 0) r + p else r", " \
    \       val r = scala.math.pow(2, n) % p\n        if (r < 0) r + p else r", " \
    \       val r = n % p\n        if (r < 0) r + p else r", "        val r = n %\
    \ p\n        if (r < 0) r + p else r", "        val r = n % p\n        if (r <\
    \ 0) r + p else r", "        val r = n % p\n        if (r < 0) r + p else r",
  "        val n = n.toInt\n        val p = p.toInt\n        if (n == 0) 1\n     \
    \   else if (n == 1) p\n        else if (n % 2 == 0) modp(n / 2, p) * p + modp(n\
    \ / 2, p)\n        else modp(n / 2, p) * p + modp(n / 2, p) * p", "        val\
    \ n = n.toInt\n        val p = p.toInt\n        if (n == 0) 1\n        else if\
    \ (n == 1) p\n        else if (n % 2 == 0) modp(n / 2, p) * p + modp((n / 2) *\
    \ p, p)\n        else modp((n / 2) * p, p)", "        val r = n % p\n        if\
    \ (r < 0) r + p else r", "        val r = n % p\n        if (r < 0) r + p else\
    \ r", "        val r = n % p\n        if (p < 0)\n            r + p\n        else\n\
    \            r", "        val r = n % p\n        if (p < 0)\n            r + p\n\
    \        else\n            r", "        val n2 = n * n\n        val p2 = p * p\n\
    \        val n3 = n2 * n2\n        val p3 = p2 * p2\n        val n4 = n3 * n3\n\
    \        val p4 = p3 * p3\n        val n5 = n4 * n4\n        val p5 = p4 * p4\n\
    \        val n6 = n5 * n5\n        val p6 = p5 * p5\n        val n7 = n6 * n6\n\
    \        val p7 = p6 * p6\n        val n8 = (n7 * n7) % p\n        val p8 = (p7\
    \ * p7) % p\n        val n9 = (n8 * n8) % p\n        val p9 = (p8 * p8) % p\n\
    \        val n10 = (n9 * n9) % p\n        val p10 = (p9 * p9) % p\n        val\
    \ n11 = (n10 * n10) % p\n        val p11 = (p10 * p10) % p\n        val n12 =\
    \ (n11 * n11) % p\n        val p12 = (p11 * p11) % p\n        val n13 = (n12 *\
    \ n12) % p\n        val p13 = (p12 * p12) % p\n        val n14 = (n13 * n13) %\
    \ p\n        val p14 = (p13 * p13) % p\n        val n15 = (n14 * n14) % p\n  \
    \      val p15 = (p14 * p14) % p\n        val n16 = (n15 * n15) % p\n        val\
    \ p16 = (p15 * p15) % p\n        val n17 = (n16 * n16) % p\n        val p17 =\
    \ (p16 * p16) % p\n        val n18 = (n17 * n17) % p\n        val p18 = (p17 *\
    \ p17) % p\n        val n19 = (n18 * n18) % p\n        val p19 = (p18 * p18) %\
    \ p\n        val n20 = (n19 * n19) % p\n        val p20 = (p19 * p19) % p\n  \
    \      val n21 = (n20 * n20) % p\n        val p21 = (p20 * p20) % p\n        val\
    \ n22 = (n21 * n21) % p\n        val p22 = (p21 * p21) % p\n        val n23 =\
    \ (n22 * n22) % p\n        val p23 = (p22 * p", "        val m = math.pow(2, n)\n\
    \        val r = math.mod(m, p)\n        r.toLong", "        val r = n % p\n \
    \       if (r < 0) r + p else r", "        val r = n % p\n        if (p < 0)\n\
    \            r + p\n        else\n            r", "        val m = n % p\n   \
    \     if (m == 0) 1\n        else (n / p) * p + m", "        val r = n % p\n \
    \       if (r < 0) r + p else r", "        val r = scala.math.BigInt(n)\n    \
    \    val q = scala.math.BigInt(p)\n        val r = r.mod(q)\n        r.toLong",
  "        val r = n % p\n        if (p < 0)\n            r + p\n        else\n  \
    \          r", "        val r = scala.math.pow(2, n) % p\n        if (r < 0) r\
    \ + p else r", "        val r = n % p\n        if (r < 0) r + p else r", "   \
    \     val m = math.pow(2, n)\n        val r = math.mod(m, p)\n        r", "  \
    \      val r = scala.math.pow(2, n)\n        val m = scala.math.mod(r, p)\n  \
    \      if (m == 0) 1 else m", "        val n2 = n * n\n        val p2 = p * p\n\
    \        val n3 = n2 * n2\n        val p3 = p2 * p2\n        val n4 = n3 * n3\n\
    \        val p4 = p3 * p3\n        val n5 = n4 * n4\n        val p5 = p4 * p4\n\
    \        val n6 = n5 * n5\n        val p6 = p5 * p5\n        val n7 = n6 * n6\n\
    \        val p7 = p6 * p6\n        val n8 = (n7 + p7) % p\n        val p8 = (p7\
    \ + n7) % p\n        val n9 = (n8 + p8) % p\n        val p9 = (p8 + n8) % p\n\
    \        val n10 = (n9 + p9) % p\n        val p10 = (p9 + n9) % p\n        val\
    \ n11 = (n10 + p10) % p\n        val p11 = (p10 + n10) % p\n        val n12 =\
    \ (n11 + p11) % p\n        val p12 = (p11 + n11) % p\n        val n13 = (n12 +\
    \ p12) % p\n        val p13 = (p12 + n12) % p\n        val n14 = (n13 + p13) %\
    \ p\n        val p14 = (p13 + n13) % p\n        val n15 = (n14 + p14) % p\n  \
    \      val p15 = (p14 + n14) % p\n        val n16 = (n15 + p15) % p\n        val\
    \ p16 = (p15 + n15) % p\n        val n17 = (n16 + p16) % p\n        val p17 =\
    \ (p16 + n16) % p\n        val n18 = (n17 + p17) % p\n        val p18 = (p17 +\
    \ n17) % p\n        val n19 = (n18 + p18) % p\n        val p19 = (p18 + n18) %\
    \ p\n        val n20 = (n19 + p19) % p\n        val p20 = (p19 + n19) % p\n  \
    \      val n21 = (n20 + p20) % p\n        val p21 = (p20 + n20) % p\n        val\
    \ n22 = (n21 + p21) % p\n        val p22 = (p21 + n21) % p\n        val n23 =\
    \ (n22 + p22) % p\n        val p23 = (p22 + n", "        val m = math.pow(2, n)\n\
    \        val r = math.mod(m, p)\n        if (r < 0) r + p else r", "        val\
    \ m = n % p\n        if (m == 0) 1\n        else modp(n / p, p)", "        val\
    \ r = n % p\n        if (r < 0) r + p else r", "        val r = n % p\n      \
    \  if (r < 0) r + p else r", "        val r = n % p\n        if (r < 0) r + p\
    \ else r", "        val r = n % p\n        if (r == 0) 1\n        else if (r <\
    \ 0) (p - (p % r)) % r\n        else r", "        val r = n % p\n        if (r\
    \ < 0) r + p else r", "        val r = n % p\n        if (r < 0) r + p else r",
  "        val r = n % p\n        if (p < 0)\n            -r\n        else\n     \
    \       r", "        val n1 = n % p\n        val n2 = n - n1\n        val n3 =\
    \ n2 % p\n        val n4 = n2 - n3\n        val n5 = n4 % p\n        val n6 =\
    \ n4 - n5\n        val n7 = n6 % p\n        val n8 = n6 - n7\n        val n9 =\
    \ n8 % p\n        val n10 = n8 - n9\n        val n11 = n10 % p\n        val n12\
    \ = n10 - n11\n        val n13 = n12 % p\n        val n14 = n12 - n13\n      \
    \  val n15 = n14 % p\n        val n16 = n14 - n15\n        val n17 = n16 % p\n\
    \        val n18 = n16 - n17\n        val n19 = n18 % p\n        val n20 = n18\
    \ - n19\n        val n21 = n20 % p\n        val n22 = n20 - n21\n        val n23\
    \ = n22 % p\n        val n24 = n22 - n23\n        val n25 = n24 % p\n        val\
    \ n26 = n24 - n25\n        val n27 = n26 % p\n        val n28 = n26 - n27\n  \
    \      val n29 = n28 % p\n        val n30 = n28 - n29\n        val n31 = n30 %\
    \ p\n        val n32 = n30 - n31\n        val n33 = n32 % p\n        val n34 =\
    \ n32 - n33\n        val n35 = n34 % p\n        val n36 = n34 - n35\n        val\
    \ n37 = n36 % p\n        val n38 = n36 - n37\n        val n39 = n38 % p\n    \
    \    val n40 = n38 - n39\n        val n41 = n40 % p\n        val n42 = n40 - n41\n\
    \        val n43 = n42 % p\n        val n44 = n42 - n43\n        val n45 = n44\
    \ % p\n        val n46 = n44 - n45\n        val n47 = n46 % p\n        val n48\
    \ = n46 - n47\n        val n49 = n48 % p\n        val n50 = n48 - n49\n      \
    \  val n51 = n50 % p\n        val n52 = n50 - n51\n        val n53 = n52 % p\n\
    \        val n54 = n5", "        val n2 = n * n\n        val n3 = n2 * n2\n  \
    \      val n4 = n3 * n3\n        val n5 = n4 * n4\n        val n6 = n5 * n5\n\
    \        val n7 = n6 * n6\n        val n8 = n7 * n7\n        val n9 = n8 * n8\n\
    \        val n10 = n9 * n9\n        val n11 = n10 * n10\n        val n12 = n11\
    \ * n11\n        val n13 = n12 * n12\n        val n14 = n13 * n13\n        val\
    \ n15 = n14 * n14\n        val n16 = n15 * n15\n        val n17 = n16 * n16\n\
    \        val n18 = n17 * n17\n        val n19 = n18 * n18\n        val n20 = n19\
    \ * n19\n        val n21 = n20 * n20\n        val n22 = n21 * n21\n        val\
    \ n23 = n22 * n22\n        val n24 = n23 * n23\n        val n25 = n24 * n24\n\
    \        val n26 = n25 * n25\n        val n27 = n26 * n26\n        val n28 = n27\
    \ * n27\n        val n29 = n28 * n28\n        val n30 = n29 * n29\n        val\
    \ n31 = n30 * n30\n        val n32 = n31 * n31\n        val n33 = n32 * n32\n\
    \        val n34 = n33 * n33\n        val n35 = n34 * n34\n        val n36 = n35\
    \ * n35\n        val n37 = n36 * n36\n        val n38 = n37 * n37\n        val\
    \ n39 = n38 * n38\n        val n40 = n39 * n39\n        val n41 = n40 * n40\n\
    \        val n42 = n41 * n41\n        val n43 = n42 * n42\n        val n44 = n43\
    \ * n43\n        val n45 = n44 * n44\n        val n46 = n45 * n45\n        val\
    \ n47 = n46 * n46\n        val n48 = n47 * n47\n        val n49 = n48 * n48\n\
    \        val n50 = n49 * n49\n        val n51 = n50 * n50\n        val n52 = n51\
    \ * n51\n        val n53 = ", "        val r = n % p\n        if (r < 0) r + p\
    \ else r", "        val r = n % p\n        if (p < 0 || r < 0) r + p\n       \
    \ else r", "        val r = n % p\n        if (p < 0)\n            -r\n      \
    \  else\n            r", "        val m = math.pow(2,n)\n        val r = math.mod(m,p)\n\
    \        if(r == 0) 1 else r", "        val r = n % p\n        if (r == 0) 1\n\
    \        else r", "        val r = n % p\n        if (r < 0) r + p else r", " \
    \       val r = n % p\n        if (n < 0) r + p else r", "        val r = n %\
    \ p\n        if (r < 0) r + p else r", "        val n2 = n % p\n        if (n2\
    \ == 0) n\n        else modp(n2, p)", "        val m = math.pow(2, n)\n      \
    \  val r = math.mod(m, p)\n        if (r < 0) r + p else r", "        val r =\
    \ n % p\n        if (r == 0) 1 else r", "        val m = n % (p + 1)\n       \
    \ if (m == 0) 1\n        else m", "        val r = n % p\n        if (r < 0) r\
    \ + p else r", "        val m = math.pow(2,n)\n        val r = math.mod(m, p)\n\
    \        val s = math.signum(r)\n        if (s == 0) 1 else s", "        val n\
    \ = n.toInt\n        val p = p.toInt\n        val result = 1L\n        val mask\
    \ = (1L << p) - 1L\n        while (n > 1) {\n            result *= n\n       \
    \     n -= mask\n        }\n        result % p", "        val r = n % p\n    \
    \    if (r < 0) r + p else r", "        val r = n % p\n        if (p < 0 || r\
    \ < 0) r + p\n        else r", "        val r = n % p\n        if (p < 0 || r\
    \ < 0) r + p\n        else r", "        val r = n % p\n        if (r == 0) 1 else\
    \ r", "        val m = math.pow(2,n)\n        val r = math.mod(m,p)\n        if\
    \ (r < 0) r + p else r", "        val r = n % p\n        if (r < 0) r + p else\
    \ r", "        val r = n % p\n        if (r == 0) 1 else r", "        val m =\
    \ math.pow(2,n)\n        val r = math.mod(m,p)\n        if (r == 0) 1 else r",
  "        val r = n % p\n        if (p < 0)\n            r + p\n        else\n  \
    \          r", "        val r = n % p\n        if (r < 0) r + p else r", "   \
    \     val n2 = n * n\n        val p2 = p * p\n        val n3 = n2 * n2\n     \
    \   val p3 = p2 * p2\n        val n4 = n3 * n3\n        val p4 = p3 * p3\n   \
    \     val n5 = n4 * n4\n        val p5 = p4 * p4\n        val n6 = n5 * n5\n \
    \       val p6 = p5 * p5\n        val n7 = n6 * n6\n        val p7 = p6 * p6\n\
    \        val n8 = (n7 * n7) % p\n        val p8 = (p7 * p7) % p\n        val n9\
    \ = (n8 * n8) % p\n        val p9 = (p8 * p8) % p\n        val n10 = (n9 * n9)\
    \ % p\n        val p10 = (p9 * p9) % p\n        val n11 = (n10 * n10) % p\n  \
    \      val p11 = (p10 * p10) % p\n        val n12 = (n11 * n11) % p\n        val\
    \ p12 = (p11 * p11) % p\n        val n13 = (n12 * n12) % p\n        val p13 =\
    \ (p12 * p12) % p\n        val n14 = (n13 * n13) % p\n        val p14 = (p13 *\
    \ p13) % p\n        val n15 = (n14 * n14) % p\n        val p15 = (p14 * p14) %\
    \ p\n        val n16 = (n15 * n15) % p\n        val p16 = (p15 * p15) % p\n  \
    \      val n17 = (n16 * n16) % p\n        val p17 = (p16 * p16) % p\n        val\
    \ n18 = (n17 * n17) % p\n        val p18 = (p17 * p17) % p\n        val n19 =\
    \ (n18 * n18) % p\n        val p19 = (p18 * p18) % p\n        val n20 = (n19 *\
    \ n19) % p\n        val p20 = (p19 * p19) % p\n        val n21 = (n20 * n20) %\
    \ p\n        val p21 = (p20 * p20) % p\n        val n22 = (n21 * n21) % p\n  \
    \      val p22 = (p21 * p21) % p\n        val n23 = (n22 * n22) % p\n        val\
    \ p23 = (p22 * p22", "        val r = scala.math.pow(2, n) % p\n        if (r\
    \ < 0) r + p else r", "        val r = scala.math.pow(2, n)\n        val q = scala.math.pow(p,\
    \ r)\n        val r = scala.math.mod(q, p)\n        r", "        val r = n % p\n\
    \        if (r == 0) 1\n        else modp(r, p) + 1", "        val m = math.pow(2,\
    \ n)\n        val r = math.mod(m, p)\n        r match {\n            case 0 =>\
    \ 1\n            case _ => r\n        }", "        val r = n % p\n        if (r\
    \ < 0) r + p else r", "        val r = scala.math.pow(2, n) % p\n        if (r\
    \ < 0) r + p else r", "        val r = n % p\n        if (p > 0)\n           \
    \ modp(r, p - 1)\n        else\n            r", "        val m = n % (p + 1)\n\
    \        if (m == 0) 1\n        else m", "        val n2 = n * n\n        val\
    \ p2 = p * p\n        val n3 = n2 * n2\n        val p3 = p2 * p2\n        val\
    \ n4 = n3 * n3\n        val p4 = p3 * p3\n        val n5 = n4 * n4\n        val\
    \ p5 = p4 * p4\n        val n6 = n5 * n5\n        val p6 = p5 * p5\n        val\
    \ n7 = n6 * n6\n        val p7 = p6 * p6\n        val n8 = (n7 + p7) % p\n   \
    \     val p8 = (p7 + n7) % p\n        val n9 = (n8 + p8) % p\n        val p9 =\
    \ (p8 + n8) % p\n        val n10 = (n9 + p9) % p\n        val p10 = (p9 + n9)\
    \ % p\n        val n11 = (n10 + p10) % p\n        val p11 = (p10 + n10) % p\n\
    \        val n12 = (n11 + p11) % p\n        val p12 = (p11 + n11) % p\n      \
    \  val n13 = (n12 + p12) % p\n        val p13 = (p12 + n12) % p\n        val n14\
    \ = (n13 + p13) % p\n        val p14 = (p13 + n13) % p\n        val n15 = (n14\
    \ + p14) % p\n        val p15 = (p14 + n14) % p\n        val n16 = (n15 + p15)\
    \ % p\n        val p16 = (p15 + n15) % p\n        val n17 = (n16 + p16) % p\n\
    \        val p17 = (p16 + n16) % p\n        val n18 = (n17 + p17) % p\n      \
    \  val p18 = (p17 + n17) % p\n        val n19 = (n18 + p18) % p\n        val p19\
    \ = (p18 + n18) % p\n        val n20 = (n19 + p19) % p\n        val p20 = (p19\
    \ + n19) % p\n        val n21 = (n20 + p20) % p\n        val p21 = (p20 + n20)\
    \ % p\n        val n22 = (n21 + p21) % p\n        val p22 = (p21 + n21) % p\n\
    \        val n23 = (n22 + p22) % p\n        val p23 = (p22 + n", "        val\
    \ r = n % p\n        if (r == 0) 1 else r", "        val n = n.toInt\n       \
    \ val p = p.toInt\n        val result = 1L\n        val mask = -1L\n        val\
    \ mask2 = 1L\n        val mask3 = 1L\n        val mask4 = 1L\n        val mask5\
    \ = 1L\n        val mask6 = 1L\n        val mask7 = 1L\n        val mask8 = 1L\n\
    \        val mask9 = 1L\n        val mask10 = 1L\n        val mask11 = 1L\n  \
    \      val mask12 = 1L\n        val mask13 = 1L\n        val mask14 = 1L\n   \
    \     val mask15 = 1L\n        val mask16 = 1L\n        val mask17 = 1L\n    \
    \    val mask18 = 1L\n        val mask19 = 1L\n        val mask20 = 1L\n     \
    \   val mask21 = 1L\n        val mask22 = 1L\n        val mask23 = 1L\n      \
    \  val mask24 = 1L\n        val mask25 = 1L\n        val mask26 = 1L\n       \
    \ val mask27 = 1L\n        val mask28 = 1L\n        val mask29 = 1L\n        val\
    \ mask30 = 1L\n        val mask31 = 1L\n        val mask32 = 1L\n        val mask33\
    \ = 1L\n        val mask34 = 1L\n        val mask35 = 1L\n        val mask36 =\
    \ 1L\n        val mask37 = 1L\n        val mask38 = 1L\n        val mask39 = 1L\n\
    \        val mask40 = 1L\n        val mask41 = 1L\n        val mask42 = 1L\n \
    \       val mask43 = 1L\n        val mask44 = 1L\n        val mask45 = 1L\n  \
    \      val mask46 = 1L\n        val mask47 = 1L\n        val mask48 = 1L\n   \
    \     val mask49 = 1L\n        val mask50 = 1L\n        val mask51 = 1L\n    \
    \    val mask52 = 1L\n        val mask53 = 1L\n        val mask54 = 1L\n     \
    \   val mask55 = 1L\n        val mask56 = 1L\n        val mask57 = 1L\n      \
    \  val mask58 = 1L\n        val mask59 = 1L\n        val mask60 = 1L\n       \
    \ val mask61 = 1L\n        val mask62 = 1L\n        val mask63 = 1L\n        val\
    \ mask64 = 1L\n        val mask65 = 1L\n        val mask66 = 1L\n        val mask67\
    \ = 1L\n        val mask68 = 1L\n        val mask69", "        val r = n % p\n\
    \        if (r < 0) r + p else r", "        val r = n % p\n        if (r == 0)\
    \ 1 else r", "        val r = n % p\n        if (r < 0) r + p else r", "     \
    \   val r = n % p\n        if (r < 0) r + p else r", "        val r = n % p\n\
    \        if (r < 0) r + p else r", "        val n = n.toInt\n        val p = p.toInt\n\
    \        if (n < 0 || p < 0)\n            throw new IllegalArgumentException(\"\
    n and p must be non-negative\")\n        if (n == 0)\n            return p\n \
    \       if (p == 0)\n            return 1\n        if (n == 1)\n            return\
    \ p\n        if (p == 1)\n            return 1\n        val q = p / n\n      \
    \  val r = p % n\n        val s = modp(q, p)\n        val t = modp(r, p)\n   \
    \     s * t + q * r", "        val r = n % p\n        if (r == 0) 1\n        else\
    \ if (r > 0) modp(r, p) + 1\n        else modp(r, p) - 1", "        val m = math.pow(2,\
    \ n)\n        val r = math.mod(m, p)\n        if (r == 0) 1 else r", "       \
    \ val n2 = n * n\n        val p2 = p * p\n        val n3 = n2 * n2\n        val\
    \ p3 = p2 * p2\n        val n4 = n3 * n3\n        val p4 = p3 * p3\n        val\
    \ n5 = n4 * n4\n        val p5 = p4 * p4\n        val n6 = n5 * n5\n        val\
    \ p6 = p5 * p5\n        val n7 = n6 * n6\n        val p7 = p6 * p6\n        val\
    \ n8 = (n7 * n7) % p\n        val p8 = (p7 * p7) % p\n        val n9 = (n8 * n8)\
    \ % p\n        val p9 = (p8 * p8) % p\n        val n10 = (n9 * n9) % p\n     \
    \   val p10 = (p9 * p9) % p\n        val n11 = (n10 * n10) % p\n        val p11\
    \ = (p10 * p10) % p\n        val n12 = (n11 * n11) % p\n        val p12 = (p11\
    \ * p11) % p\n        val n13 = (n12 * n12) % p\n        val p13 = (p12 * p12)\
    \ % p\n        val n14 = (n13 * n13) % p\n        val p14 = (p13 * p13) % p\n\
    \        val n15 = (n14 * n14) % p\n        val p15 = (p14 * p14) % p\n      \
    \  val n16 = (n15 * n15) % p\n        val p16 = (p15 * p15) % p\n        val n17\
    \ = (n16 * n16) % p\n        val p17 = (p16 * p16) % p\n        val n18 = (n17\
    \ * n17) % p\n        val p18 = (p17 * p17) % p\n        val n19 = (n18 * n18)\
    \ % p\n        val p19 = (p18 * p18) % p\n        val n20 = (n19 * n19) % p\n\
    \        val p20 = (p19 * p19) % p\n        val n21 = (n20 * n20) % p\n      \
    \  val p21 = (p20 * p20) % p\n        val n22 = (n21 * n21) % p\n        val p22\
    \ = (p21 * p21) % p\n        val n23 = (n22 * n22) % p\n        val p23 = (p22\
    \ * p", "        val r = n % p\n        if (p < 0)\n            r + p\n      \
    \  else\n            r", "        val m = math.pow(2.0, n)\n        math.mod(m,\
    \ p)", "        val r = n % p\n        if (n < 0) r + p else r", "        val\
    \ m = n % (p - 1)\n        if (m == 0) 1 else m", "        val r = n % p\n   \
    \     if (r == 0) 1 else r", "        val r = n % p\n        if (r == 0) 1\n \
    \       else if (r > 0) modp(r, p) + 1\n        else modp(r, p) - 1", "      \
    \  val n2 = n * n\n        val n3 = n2 * n2\n        val n4 = n3 * n3\n      \
    \  val n5 = n4 * n4\n        val n6 = n5 * n5\n        val n7 = n6 * n6\n    \
    \    val n8 = n7 * n7\n        val n9 = n8 * n8\n        val n10 = n9 * n9\n \
    \       val n11 = n10 * n10\n        val n12 = n11 * n11\n        val n13 = n12\
    \ * n12\n        val n14 = n13 * n13\n        val n15 = n14 * n14\n        val\
    \ n16 = n15 * n15\n        val n17 = n16 * n16\n        val n18 = n17 * n17\n\
    \        val n19 = n18 * n18\n        val n20 = n19 * n19\n        val n21 = n20\
    \ * n20\n        val n22 = n21 * n21\n        val n23 = n22 * n22\n        val\
    \ n24 = n23 * n23\n        val n25 = n24 * n24\n        val n26 = n25 * n25\n\
    \        val n27 = n26 * n26\n        val n28 = n27 * n27\n        val n29 = n28\
    \ * n28\n        val n30 = n29 * n29\n        val n31 = n30 * n30\n        val\
    \ n32 = n31 * n31\n        val n33 = n32 * n32\n        val n34 = n33 * n33\n\
    \        val n35 = n34 * n34\n        val n36 = n35 * n35\n        val n37 = n36\
    \ * n36\n        val n38 = n37 * n37\n        val n39 = n38 * n38\n        val\
    \ n40 = n39 * n39\n        val n41 = n40 * n40\n        val n42 = n41 * n41\n\
    \        val n43 = n42 * n42\n        val n44 = n43 * n43\n        val n45 = n44\
    \ * n44\n        val n46 = n45 * n45\n        val n47 = n46 * n46\n        val\
    \ n48 = n47 * n47\n        val n49 = n48 * n48\n        val n50 = n49 * n49\n\
    \        val n51 = n50 * n50\n        val n52 = n51 * n51\n        val n53 = ",
  "        val r = n % p\n        if (r < 0) r + p else r", "        val r = scala.math.pow(2,\
    \ n)\n        val q = scala.math.pow(p, r)\n        val r = scala.math.mod(q,\
    \ p)\n        r", "        val r = n % p\n        if (n < 0) r + p else r", " \
    \       val n2 = n * n\n        val p2 = p * p\n        val n3 = n2 * n2\n   \
    \     val p3 = p2 * p2\n        val n4 = n3 * n3\n        val p4 = p3 * p3\n \
    \       val n5 = n4 * n4\n        val p5 = p4 * p4\n        val n6 = n5 * n5\n\
    \        val p6 = p5 * p5\n        val n7 = n6 * n6\n        val p7 = p6 * p6\n\
    \        val n8 = (n7 * n7) % p\n        val p8 = (p7 * p7) % p\n        val n9\
    \ = (n8 * n8) % p\n        val p9 = (p8 * p8) % p\n        val n10 = (n9 * n9)\
    \ % p\n        val p10 = (p9 * p9) % p\n        val n11 = (n10 * n10) % p\n  \
    \      val p11 = (p10 * p10) % p\n        val n12 = (n11 * n11) % p\n        val\
    \ p12 = (p11 * p11) % p\n        val n13 = (n12 * n12) % p\n        val p13 =\
    \ (p12 * p12) % p\n        val n14 = (n13 * n13) % p\n        val p14 = (p13 *\
    \ p13) % p\n        val n15 = (n14 * n14) % p\n        val p15 = (p14 * p14) %\
    \ p\n        val n16 = (n15 * n15) % p\n        val p16 = (p15 * p15) % p\n  \
    \      val n17 = (n16 * n16) % p\n        val p17 = (p16 * p16) % p\n        val\
    \ n18 = (n17 * n17) % p\n        val p18 = (p17 * p17) % p\n        val n19 =\
    \ (n18 * n18) % p\n        val p19 = (p18 * p18) % p\n        val n20 = (n19 *\
    \ n19) % p\n        val p20 = (p19 * p19) % p\n        val n21 = (n20 * n20) %\
    \ p\n        val p21 = (p20 * p20) % p\n        val n22 = (n21 * n21) % p\n  \
    \      val p22 = (p21 * p21) % p\n        val n23 = (n22 * n22) % p\n        val\
    \ p23 = (p22 * p", "        val r = n % p\n        if (r == 0) 1 else r", "  \
    \      val r = n % p\n        if (p < 0)\n            r + p\n        else\n  \
    \          r", "        val r = n % p\n        if (r < 0) r + p else r", "   \
    \     val r = n % p\n        if (r < 0) r + p else r", "        val m = math.max(math.min(n,\
    \ p), 0L)\n        math.pow(2, m) % p", "        val m = n % (p - 1)\n       \
    \ if (m == 0) 1 else m", "        val m = math.pow(2, n)\n        val r = math.mod(m,\
    \ p)\n        if (r < 0) r + p else r", "        val r = n % p\n        if (r\
    \ == 0) 1 else r", "        val r = n % p\n        if (r == 0) 1 else r"]
stop_tokens:
- "\n    }\n"

name: HumanEval_76_is_simple_power
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Your task is to write a function that returns true if a number x is a simple\n\
  \    // power of n and false in other cases.\n    // x is a simple power of n if\
  \ n**int=x\n    // For example:\n    // is_simple_power(1, 4) => true\n    // is_simple_power(2,\
  \ 2) => true\n    // is_simple_power(8, 2) => true\n    // is_simple_power(3, 2)\
  \ => false\n    // is_simple_power(3, 1) => false\n    // is_simple_power(5, 3)\
  \ => false\n    def isSimplePower(x : Long, n : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isSimplePower((16l),\
  \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n \
  \   assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
  \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
  \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n    assert(isSimplePower((12l),\
  \ (6l)) == (false));\n    assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
  \ (12l)) == (true));\n    }\n\n}\n"
completions: ["        val power = math.pow(n, x)\n        power == x", "        val\
    \ pow = math.pow(n, x)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)", "        val power = math.pow(n, x)\n        power\
    \ == x", "        val power = math.pow(n, x)\n        power.toLong == x", "  \
    \      val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(n,\
    \ x)\n        power.toDouble == x", "        val power = math.pow(n, x)\n    \
    \    val power2 = math.pow(power, 2)\n        val power3 = math.pow(power, 3)\n\
    \        val power4 = math.pow(power, 4)\n        val power5 = math.pow(power,\
    \ 5)\n        val power6 = math.pow(power, 6)\n        val power7 = math.pow(power,\
    \ 7)\n        val power8 = math.pow(power, 8)\n        val power9 = math.pow(power,\
    \ 9)\n        val power10 = math.pow(power, 10)\n        val power11 = math.pow(power,\
    \ 11)\n        val power12 = math.pow(power, 12)\n        val power13 = math.pow(power,\
    \ 13)\n        val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(n,\
    \ x)\n        val power2 = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n\
    \        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n  \
    \      val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n    \
    \    val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n      \
    \  val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n    \
    \    val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n  \
    \      val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val pow = math.pow(n,\
    \ x)\n        if (pow == x) {\n            true\n        } else {\n          \
    \  false\n        }", "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)", "        val pow =\
    \ math.pow(n, x)\n        val pow2 = math.pow(pow, 2)\n        val pow3 = math.pow(pow,\
    \ 3)\n        val pow4 = math.pow(pow, 4)\n        val pow5 = math.pow(pow, 5)\n\
    \        val pow6 = math.pow(pow, 6)\n        val pow7 = math.pow(pow, 7)\n  \
    \      val pow8 = math.pow(pow, 8)\n        val pow9 = math.pow(pow, 9)\n    \
    \    val pow10 = math.pow(pow, 10)\n        val pow11 = math.pow(pow, 11)\n  \
    \      val pow12 = math.pow(pow, 12)\n        val pow13 = math.pow(pow, 13)\n\
    \        val pow14 = math.pow(pow, 14)\n        val pow15 = math.pow(pow, 15)\n\
    \        val pow16 = math.pow(pow, 16)\n        val pow17 = math.pow(pow, 17)\n\
    \        val pow18 = math.pow(pow, 18)\n        val pow19 = math.pow(pow, 19)\n\
    \        val pow20 = math.pow(pow, 20)\n        val pow21 = math.pow(pow, 21)\n\
    \        val pow22 = math.pow(pow, 22)\n        val pow23 = math.pow(pow, 23)\n\
    \        val pow24 = math.pow(pow, 24)\n        val pow25 = math.pow(pow, 25)\n\
    \        val pow26 = math.pow(pow, 26)\n        val pow27 = math.pow(pow, 27)\n\
    \        val pow28 = math.pow(pow, 28)\n        val pow29 = math.pow(pow, 29)\n\
    \        val pow30 = math.pow(pow, 30)\n        val pow31 = math.pow(pow, 31)\n\
    \        val pow32 = math.pow(pow, 32)\n        val pow33 = math.pow(pow, 33)\n\
    \        val pow34 = math.pow(pow, 34)\n        val pow35 = math.pow(pow, 35)\n\
    \        val pow36 = math.pow(pow, 36)\n        val pow37 = math.pow(pow, 37)\n\
    \        val pow38 = math.pow(pow, 38)\n        val pow39 = math.pow(pow, 39)\n\
    \        val pow40 = math.pow(pow, 40)\n        val pow41 = math.pow(pow, 41)\n\
    \        val pow42 = math.pow(pow, 42)\n        val pow43 = math.pow(pow, 43)\n\
    \        val pow44 = math.pow(pow, 44)\n        val pow45 = math.pow(pow, 45)\n\
    \        val pow46 = math.pow(pow, 46)\n", "        val pow = math.pow(x, n)\n\
    \        val result = math.abs(x - pow) < 1e-10\n        result", "        val\
    \ pow = math.pow(n, x)\n        val pow2 = math.pow(n, 2)\n        val pow3 =\
    \ math.pow(n, 3)\n        val pow4 = math.pow(n, 4)\n        val pow5 = math.pow(n,\
    \ 5)\n        val pow6 = math.pow(n, 6)\n        val pow7 = math.pow(n, 7)\n \
    \       val pow8 = math.pow(n, 8)\n        val pow9 = math.pow(n, 9)\n       \
    \ val pow10 = math.pow(n, 10)\n        val pow11 = math.pow(n, 11)\n        val\
    \ pow12 = math.pow(n, 12)\n        val pow13 = math.pow(n, 13)\n        val pow14\
    \ = math.pow(n, 14)\n        val pow15 = math.pow(n, 15)\n        val pow16 =\
    \ math.pow(n, 16)\n        val pow17 = math.pow(n, 17)\n        val pow18 = math.pow(n,\
    \ 18)\n        val pow19 = math.pow(n, 19)\n        val pow20 = math.pow(n, 20)\n\
    \        val pow21 = math.pow(n, 21)\n        val pow22 = math.pow(n, 22)\n  \
    \      val pow23 = math.pow(n, 23)\n        val pow24 = math.pow(n, 24)\n    \
    \    val pow25 = math.pow(n, 25)\n        val pow26 = math.pow(n, 26)\n      \
    \  val pow27 = math.pow(n, 27)\n        val pow28 = math.pow(n, 28)\n        val\
    \ pow29 = math.pow(n, 29)\n        val pow30 = math.pow(n, 30)\n        val pow31\
    \ = math.pow(n, 31)\n        val pow32 = math.pow(n, 32)\n        val pow33 =\
    \ math.pow(n, 33)\n        val pow34 = math.pow(n, 34)\n        val pow35 = math.pow(n,\
    \ 35)\n        val pow36 = math.pow(n, 36)\n        val pow37 = math.pow(n, 37)\n\
    \        val pow38 = math.pow(n, 38)\n        val pow39 = math.pow(n, 39)\n  \
    \      val pow40 = math.pow(n, 40)\n        val pow41 = math.pow(n, 41)\n    \
    \    val pow42 = math.pow(n, 42)\n        val pow43 = math.pow(n, 43)\n      \
    \  val pow44 = math.pow(n, 44)\n        val pow45 = math.pow(n, 45)\n        val\
    \ pow46 = math.pow(n, 46)\n        val pow47 = math.pow(n, 47)\n        val pow48\
    \ = math.pow(n, 48)\n        val pow49 = math.pow(n, 49)\n        val pow50 =\
    \ math.pow(n, 50)\n        val ", "        val power = math.pow(x, n)\n      \
    \  val result = math.pow(power, n) == x\n        result", "        val power =\
    \ math.pow(n, x)\n        val result = math.abs(x - power) < 1e-10\n        result",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(x, n)\n        val power2 = math.pow(power, 2)\n        val power3\
    \ = math.pow(power, 3)\n        val power4 = math.pow(power, 4)\n        val power5\
    \ = math.pow(power, 5)\n        val power6 = math.pow(power, 6)\n        val power7\
    \ = math.pow(power, 7)\n        val power8 = math.pow(power, 8)\n        val power9\
    \ = math.pow(power, 9)\n        val power10 = math.pow(power, 10)\n        val\
    \ power11 = math.pow(power, 11)\n        val power12 = math.pow(power, 12)\n \
    \       val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val pow = math.pow(n, x)\n        val pow2 = math.pow(n, 2)\n\
    \        val pow3 = math.pow(n, 3)\n        val pow4 = math.pow(n, 4)\n      \
    \  val pow5 = math.pow(n, 5)\n        val pow6 = math.pow(n, 6)\n        val pow7\
    \ = math.pow(n, 7)\n        val pow8 = math.pow(n, 8)\n        val pow9 = math.pow(n,\
    \ 9)\n        val pow10 = math.pow(n, 10)\n        val pow11 = math.pow(n, 11)\n\
    \        val pow12 = math.pow(n, 12)\n        val pow13 = math.pow(n, 13)\n  \
    \      val pow14 = math.pow(n, 14)\n        val pow15 = math.pow(n, 15)\n    \
    \    val pow16 = math.pow(n, 16)\n        val pow17 = math.pow(n, 17)\n      \
    \  val pow18 = math.pow(n, 18)\n        val pow19 = math.pow(n, 19)\n        val\
    \ pow20 = math.pow(n, 20)\n        val pow21 = math.pow(n, 21)\n        val pow22\
    \ = math.pow(n, 22)\n        val pow23 = math.pow(n, 23)\n        val pow24 =\
    \ math.pow(n, 24)\n        val pow25 = math.pow(n, 25)\n        val pow26 = math.pow(n,\
    \ 26)\n        val pow27 = math.pow(n, 27)\n        val pow28 = math.pow(n, 28)\n\
    \        val pow29 = math.pow(n, 29)\n        val pow30 = math.pow(n, 30)\n  \
    \      val pow31 = math.pow(n, 31)\n        val pow32 = math.pow(n, 32)\n    \
    \    val pow33 = math.pow(n, 33)\n        val pow34 = math.pow(n, 34)\n      \
    \  val pow35 = math.pow(n, 35)\n        val pow36 = math.pow(n, 36)\n        val\
    \ pow37 = math.pow(n, 37)\n        val pow38 = math.pow(n, 38)\n        val pow39\
    \ = math.pow(n, 39)\n        val pow40 = math.pow(n, 40)\n        val pow41 =\
    \ math.pow(n, 41)\n        val pow42 = math.pow(n, 42)\n        val pow43 = math.pow(n,\
    \ 43)\n        val pow44 = math.pow(n, 44)\n        val pow45 = math.pow(n, 45)\n\
    \        val pow46 = math.pow(n, 46)\n        val pow47 = math.pow(n, 47)\n  \
    \      val pow48 = math.pow(n, 48)\n        val pow49 = math.pow(n, 49)\n    \
    \    val pow50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val power = math.pow(n, x)\n        power.toLong\
    \ == x", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ power = math.pow(x, n)\n        val power2 = math.pow(power, 2)\n        val\
    \ power3 = math.pow(power, 3)\n        val power4 = math.pow(power, 4)\n     \
    \   val power5 = math.pow(power, 5)\n        val power6 = math.pow(power, 6)\n\
    \        val power7 = math.pow(power, 7)\n        val power8 = math.pow(power,\
    \ 8)\n        val power9 = math.pow(power, 9)\n        val power10 = math.pow(power,\
    \ 10)\n        val power11 = math.pow(power, 11)\n        val power12 = math.pow(power,\
    \ 12)\n        val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(n, x)\n        power.toLong == x", " \
    \       val power = math.pow(x, n)\n        val power2 = math.pow(power, 2)\n\
    \        val power3 = math.pow(power, 3)\n        val power4 = math.pow(power,\
    \ 4)\n        val power5 = math.pow(power, 5)\n        val power6 = math.pow(power,\
    \ 6)\n        val power7 = math.pow(power, 7)\n        val power8 = math.pow(power,\
    \ 8)\n        val power9 = math.pow(power, 9)\n        val power10 = math.pow(power,\
    \ 10)\n        val power11 = math.pow(power, 11)\n        val power12 = math.pow(power,\
    \ 12)\n        val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(n, x)\n        val power2 = math.pow(power,\
    \ 2)\n        val power3 = math.pow(power, 3)\n        val power4 = math.pow(power,\
    \ 4)\n        val power5 = math.pow(power, 5)\n        val power6 = math.pow(power,\
    \ 6)\n        val power7 = math.pow(power, 7)\n        val power8 = math.pow(power,\
    \ 8)\n        val power9 = math.pow(power, 9)\n        val power10 = math.pow(power,\
    \ 10)\n        val power11 = math.pow(power, 11)\n        val power12 = math.pow(power,\
    \ 12)\n        val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(n, x)\n        power.toLong == x", " \
    \       val power = math.pow(n, x)\n        val power = power.toInt\n        val\
    \ power = power.toLong\n        val power = power.toDouble\n        val power\
    \ = power.toFloat\n        val power = power.toInt\n        val power = power.toLong\n\
    \        val power = power.toDouble\n        val power = power.toFloat\n     \
    \   val power = power.toInt\n        val power = power.toLong\n        val power\
    \ = power.toDouble\n        val power = power.toFloat\n        val power = power.toInt\n\
    \        val power = power.toLong\n        val power = power.toDouble\n      \
    \  val power = power.toFloat\n        val power = power.toInt\n        val power\
    \ = power.toLong\n        val power = power.toDouble\n        val power = power.toFloat\n\
    \        val power = power.toInt\n        val power = power.toLong\n        val\
    \ power = power.toDouble\n        val power = power.toFloat\n        val power\
    \ = power.toInt\n        val power = power.toLong\n        val power = power.toDouble\n\
    \        val power = power.toFloat\n        val power = power.toInt\n        val\
    \ power = power.toLong\n        val power = power.toDouble\n        val power\
    \ = power.toFloat\n        val power = power.toInt\n        val power = power.toLong\n\
    \        val power = power.toDouble\n        val power = power.toFloat\n     \
    \   val power = power.toInt\n        val power = power.toLong\n        val power\
    \ = power.toDouble\n        val power = power.toFloat\n        val power = power.toInt\n\
    \        val power = power.toLong\n        val power = power.toDouble\n      \
    \  val power = power.toFloat\n        val power = power.toInt\n        val power\
    \ = power.toLong\n        val power = power.toDouble\n        val power = power.toFloat\n\
    \        val power = power.toInt\n        val power = power.toLong\n        val\
    \ power = power.toDouble\n        val power = power.toFloat\n        val power\
    \ = power.toInt\n        val power = power.toLong\n        val power = power.toDouble\n\
    \        val power = power.toFloat", "        val power = math.pow(x, n)\n   \
    \     power == x", "        val power = math.pow(x, n)\n        power == x", " \
    \       val power = math.pow(n, x)\n        power == x", "        val power =\
    \ math.pow(n, x)\n        val result = math.abs(x - power) < 1e-10\n        result",
  "        val power = math.pow(n, x)\n        power.toDouble == x", "        val\
    \ pow = math.pow(n, x)\n        if (pow == x) {\n            return true\n   \
    \     }\n        if (pow % x == 0) {\n            return true\n        }\n   \
    \     return false", "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)", "        val power\
    \ = math.pow(n, x)\n        val result = math.abs(x - power) < 1e-10\n       \
    \ result", "        val power = math.pow(x, n)\n        val result = math.abs(power\
    \ - x) < 1e-10\n        result", "        val pow = math.pow(n, x)\n        pow\
    \ = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)",
  "        val pow = math.pow(n, x)\n        val pow2 = math.pow(pow, 2)\n       \
    \ val pow3 = math.pow(pow, 3)\n        val pow4 = math.pow(pow, 4)\n        val\
    \ pow5 = math.pow(pow, 5)\n        val pow6 = math.pow(pow, 6)\n        val pow7\
    \ = math.pow(pow, 7)\n        val pow8 = math.pow(pow, 8)\n        val pow9 =\
    \ math.pow(pow, 9)\n        val pow10 = math.pow(pow, 10)\n        val pow11 =\
    \ math.pow(pow, 11)\n        val pow12 = math.pow(pow, 12)\n        val pow13\
    \ = math.pow(pow, 13)\n        val pow14 = math.pow(pow, 14)\n        val pow15\
    \ = math.pow(pow, 15)\n        val pow16 = math.pow(pow, 16)\n        val pow17\
    \ = math.pow(pow, 17)\n        val pow18 = math.pow(pow, 18)\n        val pow19\
    \ = math.pow(pow, 19)\n        val pow20 = math.pow(pow, 20)\n        val pow21\
    \ = math.pow(pow, 21)\n        val pow22 = math.pow(pow, 22)\n        val pow23\
    \ = math.pow(pow, 23)\n        val pow24 = math.pow(pow, 24)\n        val pow25\
    \ = math.pow(pow, 25)\n        val pow26 = math.pow(pow, 26)\n        val pow27\
    \ = math.pow(pow, 27)\n        val pow28 = math.pow(pow, 28)\n        val pow29\
    \ = math.pow(pow, 29)\n        val pow30 = math.pow(pow, 30)\n        val pow31\
    \ = math.pow(pow, 31)\n        val pow32 = math.pow(pow, 32)\n        val pow33\
    \ = math.pow(pow, 33)\n        val pow34 = math.pow(pow, 34)\n        val pow35\
    \ = math.pow(pow, 35)\n        val pow36 = math.pow(pow, 36)\n        val pow37\
    \ = math.pow(pow, 37)\n        val pow38 = math.pow(pow, 38)\n        val pow39\
    \ = math.pow(pow, 39)\n        val pow40 = math.pow(pow, 40)\n        val pow41\
    \ = math.pow(pow, 41)\n        val pow42 = math.pow(pow, 42)\n        val pow43\
    \ = math.pow(pow, 43)\n        val pow44 = math.pow(pow, 44)\n        val pow45\
    \ = math.pow(pow, 45)\n        val pow46 = math.pow(pow, 46)\n", "        val\
    \ power = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(x, n)\n      \
    \  power == x", "        val power = math.pow(n, x)\n        power.toDouble ==\
    \ x", "        val power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n\
    \        val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n  \
    \      val power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n    \
    \    val power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n      \
    \  val power9 = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n      \
    \  val power11 = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n    \
    \    val power13 = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n  \
    \      val power15 = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n\
    \        val power17 = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n\
    \        val power19 = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n\
    \        val power21 = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n\
    \        val power23 = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n\
    \        val power25 = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n\
    \        val power27 = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n\
    \        val power29 = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n\
    \        val power31 = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n\
    \        val power33 = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n\
    \        val power35 = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n\
    \        val power37 = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n\
    \        val power39 = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n\
    \        val power41 = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n\
    \        val power43 = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n\
    \        val power45 = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n\
    \        val power47 = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n\
    \        val power49 = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n\
    \        val ", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n        pow = math.min(pow,\
    \ Long.MaxValue)\n        pow = ", "        val pow = math.pow(n, x)\n       \
    \ val pow2 = math.pow(n, 2)\n        val pow3 = math.pow(n, 3)\n        val pow4\
    \ = math.pow(n, 4)\n        val pow5 = math.pow(n, 5)\n        val pow6 = math.pow(n,\
    \ 6)\n        val pow7 = math.pow(n, 7)\n        val pow8 = math.pow(n, 8)\n \
    \       val pow9 = math.pow(n, 9)\n        val pow10 = math.pow(n, 10)\n     \
    \   val pow11 = math.pow(n, 11)\n        val pow12 = math.pow(n, 12)\n       \
    \ val pow13 = math.pow(n, 13)\n        val pow14 = math.pow(n, 14)\n        val\
    \ pow15 = math.pow(n, 15)\n        val pow16 = math.pow(n, 16)\n        val pow17\
    \ = math.pow(n, 17)\n        val pow18 = math.pow(n, 18)\n        val pow19 =\
    \ math.pow(n, 19)\n        val pow20 = math.pow(n, 20)\n        val pow21 = math.pow(n,\
    \ 21)\n        val pow22 = math.pow(n, 22)\n        val pow23 = math.pow(n, 23)\n\
    \        val pow24 = math.pow(n, 24)\n        val pow25 = math.pow(n, 25)\n  \
    \      val pow26 = math.pow(n, 26)\n        val pow27 = math.pow(n, 27)\n    \
    \    val pow28 = math.pow(n, 28)\n        val pow29 = math.pow(n, 29)\n      \
    \  val pow30 = math.pow(n, 30)\n        val pow31 = math.pow(n, 31)\n        val\
    \ pow32 = math.pow(n, 32)\n        val pow33 = math.pow(n, 33)\n        val pow34\
    \ = math.pow(n, 34)\n        val pow35 = math.pow(n, 35)\n        val pow36 =\
    \ math.pow(n, 36)\n        val pow37 = math.pow(n, 37)\n        val pow38 = math.pow(n,\
    \ 38)\n        val pow39 = math.pow(n, 39)\n        val pow40 = math.pow(n, 40)\n\
    \        val pow41 = math.pow(n, 41)\n        val pow42 = math.pow(n, 42)\n  \
    \      val pow43 = math.pow(n, 43)\n        val pow44 = math.pow(n, 44)\n    \
    \    val pow45 = math.pow(n, 45)\n        val pow46 = math.pow(n, 46)\n      \
    \  val pow47 = math.pow(n, 47)\n        val pow48 = math.pow(n, 48)\n        val\
    \ pow49 = math.pow(n, 49)\n        val pow50 = math.pow(n, 50)\n        val ",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        val result = math.abs(x - power) < 1e-6\n        result",
  "        val power = math.pow(n, x)\n        power == x", "        val pow = math.pow(n,\
    \ x)\n        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n\
    \        pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n   \
    \     pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = ", "        val power = math.pow(n,\
    \ x)\n        val power2 = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n\
    \        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n  \
    \      val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n    \
    \    val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n      \
    \  val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n    \
    \    val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n  \
    \      val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(x, n)\n      \
    \  power.toLong == x", "        val power = math.pow(n, x)\n        val result\
    \ = math.abs(x - power) < 1e-10\n        result", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(x, n)\n      \
    \  val power2 = math.pow(power, 2)\n        val power3 = math.pow(power, 3)\n\
    \        val power4 = math.pow(power, 4)\n        val power5 = math.pow(power,\
    \ 5)\n        val power6 = math.pow(power, 6)\n        val power7 = math.pow(power,\
    \ 7)\n        val power8 = math.pow(power, 8)\n        val power9 = math.pow(power,\
    \ 9)\n        val power10 = math.pow(power, 10)\n        val power11 = math.pow(power,\
    \ 11)\n        val power12 = math.pow(power, 12)\n        val power13 = math.pow(power,\
    \ 13)\n        val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power.toDouble == x", "        val power = math.pow(x, n)\n        val intPower\
    \ = math.round(power)\n        val intPower2 = math.round(power * 2)\n       \
    \ val intPower3 = math.round(power * 3)\n        val intPower4 = math.round(power\
    \ * 4)\n        val intPower5 = math.round(power * 5)\n        val intPower6 =\
    \ math.round(power * 6)\n        val intPower7 = math.round(power * 7)\n     \
    \   val intPower8 = math.round(power * 8)\n        val intPower9 = math.round(power\
    \ * 9)\n        val intPower10 = math.round(power * 10)\n        val intPower11\
    \ = math.round(power * 11)\n        val intPower12 = math.round(power * 12)\n\
    \        val intPower13 = math.round(power * 13)\n        val intPower14 = math.round(power\
    \ * 14)\n        val intPower15 = math.round(power * 15)\n        val intPower16\
    \ = math.round(power * 16)\n        val intPower17 = math.round(power * 17)\n\
    \        val intPower18 = math.round(power * 18)\n        val intPower19 = math.round(power\
    \ * 19)\n        val intPower20 = math.round(power * 20)\n        val intPower21\
    \ = math.round(power * 21)\n        val intPower22 = math.round(power * 22)\n\
    \        val intPower23 = math.round(power * 23)\n        val intPower24 = math.round(power\
    \ * 24)\n        val intPower25 = math.round(power * 25)\n        val intPower26\
    \ = math.round(power * 26)\n        val intPower27 = math.round(power * 27)\n\
    \        val intPower28 = math.round(power * 28)\n        val intPower29 = math.round(power\
    \ * 29)\n        val intPower30 = math.round(power * 30)\n        val intPower31\
    \ = math.round(power * 31)\n        val intPower32 = math.round(power * 32)\n\
    \        val intPower33 = math.round(power * 33)\n        val intPower34 = math.round(power\
    \ * 34)\n        val intPower35 = math.round(power * 35)\n        val intPower36\
    \ = math.round(power * 36)\n        val intPower37 = math.round(power * 37)\n\
    \        val intPower38 = math.round(power * 38)\n        val intPower39 = math.round(power\
    \ * 39)\n        val intPower40 = math.round(power * 40)\n        val intPower41\
    \ = math.round(power * 41)\n        val intPower42 = math.round(power", "    \
    \    val power = math.pow(n, x)\n        power == x", "        val power = math.pow(x,\
    \ n)\n        val intPower = math.pow(n, int)\n        val intPower2 = math.pow(n,\
    \ int/2)\n        val intPower3 = math.pow(n, int/3)\n        val intPower4 =\
    \ math.pow(n, int/4)\n        val intPower5 = math.pow(n, int/5)\n        val\
    \ intPower6 = math.pow(n, int/6)\n        val intPower7 = math.pow(n, int/7)\n\
    \        val intPower8 = math.pow(n, int/8)\n        val intPower9 = math.pow(n,\
    \ int/9)\n        val intPower10 = math.pow(n, int/10)\n        val intPower11\
    \ = math.pow(n, int/11)\n        val intPower12 = math.pow(n, int/12)\n      \
    \  val intPower13 = math.pow(n, int/13)\n        val intPower14 = math.pow(n,\
    \ int/14)\n        val intPower15 = math.pow(n, int/15)\n        val intPower16\
    \ = math.pow(n, int/16)\n        val intPower17 = math.pow(n, int/17)\n      \
    \  val intPower18 = math.pow(n, int/18)\n        val intPower19 = math.pow(n,\
    \ int/19)\n        val intPower20 = math.pow(n, int/20)\n        val intPower21\
    \ = math.pow(n, int/21)\n        val intPower22 = math.pow(n, int/22)\n      \
    \  val intPower23 = math.pow(n, int/23)\n        val intPower24 = math.pow(n,\
    \ int/24)\n        val intPower25 = math.pow(n, int/25)\n        val intPower26\
    \ = math.pow(n, int/26)\n        val intPower27 = math.pow(n, int/27)\n      \
    \  val intPower28 = math.pow(n, int/28)\n        val intPower29 = math.pow(n,\
    \ int/29)\n        val intPower30 = math.pow(n, int/30)\n        val intPower31\
    \ = math.pow(n, int/31)\n        val intPower32 = math.pow(n, int/32)\n      \
    \  val intPower33 = math.pow(n, int/33)\n        val intPower34 = math.pow(n,\
    \ int/34)\n        val intPower35 = math.pow(n, int/35)\n        val intPower36\
    \ = math.pow(n, int/36)\n        val intPower37 = math.pow(n, int/37)\n      \
    \  val intPower38 = math.pow(n, int/38)\n        val intPower39 = math.pow(n,\
    \ int/", "        val power = math.pow(x, n)\n        val powerInt = math.round(power)\n\
    \        if (powerInt == power) {\n            return true\n        }\n      \
    \  return false", "        val power = math.pow(n, x)\n        val result = math.abs(x\
    \ - power) < 1e-10\n        result", "        val power = math.pow(n, x)\n   \
    \     val power2 = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n     \
    \   val power4 = math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n       \
    \ val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n        val\
    \ power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n        val power10\
    \ = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n        val power12\
    \ = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n        val power14\
    \ = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n        val power16\
    \ = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n        val power18\
    \ = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n        val power20\
    \ = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n        val power22\
    \ = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n        val power24\
    \ = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n        val power26\
    \ = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n        val power28\
    \ = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n        val power30\
    \ = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n        val power32\
    \ = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n        val power34\
    \ = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n        val power36\
    \ = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n        val power38\
    \ = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n        val power40\
    \ = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n        val power42\
    \ = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n        val power44\
    \ = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n        val power46\
    \ = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n        val power48\
    \ = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n        val power50\
    \ = math.pow(n, 50)\n        val ", "        val power = math.pow(n, x)\n    \
    \    power.toLong == x", "        val pow = math.pow(n, x)\n        val pow2 =\
    \ math.pow(pow, 2)\n        val pow3 = math.pow(pow, 3)\n        val pow4 = math.pow(pow,\
    \ 4)\n        val pow5 = math.pow(pow, 5)\n        val pow6 = math.pow(pow, 6)\n\
    \        val pow7 = math.pow(pow, 7)\n        val pow8 = math.pow(pow, 8)\n  \
    \      val pow9 = math.pow(pow, 9)\n        val pow10 = math.pow(pow, 10)\n  \
    \      val pow11 = math.pow(pow, 11)\n        val pow12 = math.pow(pow, 12)\n\
    \        val pow13 = math.pow(pow, 13)\n        val pow14 = math.pow(pow, 14)\n\
    \        val pow15 = math.pow(pow, 15)\n        val pow16 = math.pow(pow, 16)\n\
    \        val pow17 = math.pow(pow, 17)\n        val pow18 = math.pow(pow, 18)\n\
    \        val pow19 = math.pow(pow, 19)\n        val pow20 = math.pow(pow, 20)\n\
    \        val pow21 = math.pow(pow, 21)\n        val pow22 = math.pow(pow, 22)\n\
    \        val pow23 = math.pow(pow, 23)\n        val pow24 = math.pow(pow, 24)\n\
    \        val pow25 = math.pow(pow, 25)\n        val pow26 = math.pow(pow, 26)\n\
    \        val pow27 = math.pow(pow, 27)\n        val pow28 = math.pow(pow, 28)\n\
    \        val pow29 = math.pow(pow, 29)\n        val pow30 = math.pow(pow, 30)\n\
    \        val pow31 = math.pow(pow, 31)\n        val pow32 = math.pow(pow, 32)\n\
    \        val pow33 = math.pow(pow, 33)\n        val pow34 = math.pow(pow, 34)\n\
    \        val pow35 = math.pow(pow, 35)\n        val pow36 = math.pow(pow, 36)\n\
    \        val pow37 = math.pow(pow, 37)\n        val pow38 = math.pow(pow, 38)\n\
    \        val pow39 = math.pow(pow, 39)\n        val pow40 = math.pow(pow, 40)\n\
    \        val pow41 = math.pow(pow, 41)\n        val pow42 = math.pow(pow, 42)\n\
    \        val pow43 = math.pow(pow, 43)\n        val pow44 = math.pow(pow, 44)\n\
    \        val pow45 = math.pow(pow, 45)\n        val pow46 = math.pow(pow, 46)\n",
  "        val power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n     \
    \   val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n       \
    \ val power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n        val\
    \ power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n        val power9\
    \ = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n        val power11\
    \ = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n        val power13\
    \ = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n        val power15\
    \ = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n        val power17\
    \ = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n        val power19\
    \ = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n        val power21\
    \ = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n        val power23\
    \ = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n        val power25\
    \ = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n        val power27\
    \ = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n        val power29\
    \ = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n        val power31\
    \ = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n        val power33\
    \ = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n        val power35\
    \ = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n        val power37\
    \ = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n        val power39\
    \ = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n        val power41\
    \ = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n        val power43\
    \ = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n        val power45\
    \ = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n        val power47\
    \ = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n        val power49\
    \ = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n        val ", " \
    \       val power = math.pow(n, x)\n        val result = math.pow(x, power) ==\
    \ x\n        result", "        val power = math.pow(x, n)\n        val power2\
    \ = math.pow(power, 2)\n        val power3 = math.pow(power, 3)\n        val power4\
    \ = math.pow(power, 4)\n        val power5 = math.pow(power, 5)\n        val power6\
    \ = math.pow(power, 6)\n        val power7 = math.pow(power, 7)\n        val power8\
    \ = math.pow(power, 8)\n        val power9 = math.pow(power, 9)\n        val power10\
    \ = math.pow(power, 10)\n        val power11 = math.pow(power, 11)\n        val\
    \ power12 = math.pow(power, 12)\n        val power13 = math.pow(power, 13)\n \
    \       val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power.toLong == x", "        val power = math.pow(n, x)\n        power.toDouble\
    \ == x", "        val power = math.pow(x, n)\n        power.toLong == x", "  \
    \      val power = math.pow(n, x)\n        val result = math.abs(x - power) <\
    \ 1e-10\n        result", "        val power = math.pow(n, x)\n        val result\
    \ = math.abs(x - power) < 1e-10\n        result", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val power = math.pow(n, x)\n        power\
    \ == x", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ pow = math.pow(n, x)\n        val pow2 = math.pow(pow, 2)\n        val pow3\
    \ = math.pow(pow, 3)\n        val pow4 = math.pow(pow, 4)\n        val pow5 =\
    \ math.pow(pow, 5)\n        val pow6 = math.pow(pow, 6)\n        val pow7 = math.pow(pow,\
    \ 7)\n        val pow8 = math.pow(pow, 8)\n        val pow9 = math.pow(pow, 9)\n\
    \        val pow10 = math.pow(pow, 10)\n        val pow11 = math.pow(pow, 11)\n\
    \        val pow12 = math.pow(pow, 12)\n        val pow13 = math.pow(pow, 13)\n\
    \        val pow14 = math.pow(pow, 14)\n        val pow15 = math.pow(pow, 15)\n\
    \        val pow16 = math.pow(pow, 16)\n        val pow17 = math.pow(pow, 17)\n\
    \        val pow18 = math.pow(pow, 18)\n        val pow19 = math.pow(pow, 19)\n\
    \        val pow20 = math.pow(pow, 20)\n        val pow21 = math.pow(pow, 21)\n\
    \        val pow22 = math.pow(pow, 22)\n        val pow23 = math.pow(pow, 23)\n\
    \        val pow24 = math.pow(pow, 24)\n        val pow25 = math.pow(pow, 25)\n\
    \        val pow26 = math.pow(pow, 26)\n        val pow27 = math.pow(pow, 27)\n\
    \        val pow28 = math.pow(pow, 28)\n        val pow29 = math.pow(pow, 29)\n\
    \        val pow30 = math.pow(pow, 30)\n        val pow31 = math.pow(pow, 31)\n\
    \        val pow32 = math.pow(pow, 32)\n        val pow33 = math.pow(pow, 33)\n\
    \        val pow34 = math.pow(pow, 34)\n        val pow35 = math.pow(pow, 35)\n\
    \        val pow36 = math.pow(pow, 36)\n        val pow37 = math.pow(pow, 37)\n\
    \        val pow38 = math.pow(pow, 38)\n        val pow39 = math.pow(pow, 39)\n\
    \        val pow40 = math.pow(pow, 40)\n        val pow41 = math.pow(pow, 41)\n\
    \        val pow42 = math.pow(pow, 42)\n        val pow43 = math.pow(pow, 43)\n\
    \        val pow44 = math.pow(pow, 44)\n        val pow45 = math.pow(pow, 45)\n\
    \        val pow46 = math.pow(pow, 46)\n", "        val power = math.pow(n, x)\n\
    \        power == x", "        val power = math.pow(n, x)\n        val power2\
    \ = math.pow(power, 2)\n        val power3 = math.pow(power, 3)\n        val power4\
    \ = math.pow(power, 4)\n        val power5 = math.pow(power, 5)\n        val power6\
    \ = math.pow(power, 6)\n        val power7 = math.pow(power, 7)\n        val power8\
    \ = math.pow(power, 8)\n        val power9 = math.pow(power, 9)\n        val power10\
    \ = math.pow(power, 10)\n        val power11 = math.pow(power, 11)\n        val\
    \ power12 = math.pow(power, 12)\n        val power13 = math.pow(power, 13)\n \
    \       val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(n,\
    \ x)\n        val result = math.abs(x - power) < 1e-10\n        result", "   \
    \     val power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n      \
    \  val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n        val\
    \ power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n        val power7\
    \ = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n        val power9 =\
    \ math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n        val power11 =\
    \ math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n        val power13\
    \ = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n        val power15\
    \ = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n        val power17\
    \ = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n        val power19\
    \ = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n        val power21\
    \ = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n        val power23\
    \ = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n        val power25\
    \ = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n        val power27\
    \ = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n        val power29\
    \ = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n        val power31\
    \ = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n        val power33\
    \ = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n        val power35\
    \ = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n        val power37\
    \ = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n        val power39\
    \ = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n        val power41\
    \ = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n        val power43\
    \ = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n        val power45\
    \ = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n        val power47\
    \ = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n        val power49\
    \ = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n        val ", " \
    \       val power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n    \
    \    val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n      \
    \  val power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n        val\
    \ power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n        val power9\
    \ = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n        val power11\
    \ = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n        val power13\
    \ = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n        val power15\
    \ = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n        val power17\
    \ = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n        val power19\
    \ = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n        val power21\
    \ = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n        val power23\
    \ = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n        val power25\
    \ = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n        val power27\
    \ = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n        val power29\
    \ = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n        val power31\
    \ = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n        val power33\
    \ = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n        val power35\
    \ = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n        val power37\
    \ = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n        val power39\
    \ = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n        val power41\
    \ = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n        val power43\
    \ = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n        val power45\
    \ = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n        val power47\
    \ = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n        val power49\
    \ = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n        val ", " \
    \       val power = math.pow(n, x)\n        power == x", "        val power =\
    \ math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(x,\
    \ n)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power == x", "        val power = math.pow(n, x)\n        power.toLong == x",
  "        val power = math.pow(n, x)\n        power.toDouble == x", "        val\
    \ power = math.pow(n, x)\n        val result = math.pow(x, power) == x\n     \
    \   result", "        val pow = math.pow(n, x)\n        val pow2 = math.pow(pow,\
    \ 2)\n        val pow3 = math.pow(pow, 3)\n        val pow4 = math.pow(pow, 4)\n\
    \        val pow5 = math.pow(pow, 5)\n        val pow6 = math.pow(pow, 6)\n  \
    \      val pow7 = math.pow(pow, 7)\n        val pow8 = math.pow(pow, 8)\n    \
    \    val pow9 = math.pow(pow, 9)\n        val pow10 = math.pow(pow, 10)\n    \
    \    val pow11 = math.pow(pow, 11)\n        val pow12 = math.pow(pow, 12)\n  \
    \      val pow13 = math.pow(pow, 13)\n        val pow14 = math.pow(pow, 14)\n\
    \        val pow15 = math.pow(pow, 15)\n        val pow16 = math.pow(pow, 16)\n\
    \        val pow17 = math.pow(pow, 17)\n        val pow18 = math.pow(pow, 18)\n\
    \        val pow19 = math.pow(pow, 19)\n        val pow20 = math.pow(pow, 20)\n\
    \        val pow21 = math.pow(pow, 21)\n        val pow22 = math.pow(pow, 22)\n\
    \        val pow23 = math.pow(pow, 23)\n        val pow24 = math.pow(pow, 24)\n\
    \        val pow25 = math.pow(pow, 25)\n        val pow26 = math.pow(pow, 26)\n\
    \        val pow27 = math.pow(pow, 27)\n        val pow28 = math.pow(pow, 28)\n\
    \        val pow29 = math.pow(pow, 29)\n        val pow30 = math.pow(pow, 30)\n\
    \        val pow31 = math.pow(pow, 31)\n        val pow32 = math.pow(pow, 32)\n\
    \        val pow33 = math.pow(pow, 33)\n        val pow34 = math.pow(pow, 34)\n\
    \        val pow35 = math.pow(pow, 35)\n        val pow36 = math.pow(pow, 36)\n\
    \        val pow37 = math.pow(pow, 37)\n        val pow38 = math.pow(pow, 38)\n\
    \        val pow39 = math.pow(pow, 39)\n        val pow40 = math.pow(pow, 40)\n\
    \        val pow41 = math.pow(pow, 41)\n        val pow42 = math.pow(pow, 42)\n\
    \        val pow43 = math.pow(pow, 43)\n        val pow44 = math.pow(pow, 44)\n\
    \        val pow45 = math.pow(pow, 45)\n        val pow46 = math.pow(pow, 46)\n",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power.toDouble == x", "        val power = math.pow(n,\
    \ x)\n        val power2 = math.pow(power, 2)\n        val power3 = math.pow(power,\
    \ 3)\n        val power4 = math.pow(power, 4)\n        val power5 = math.pow(power,\
    \ 5)\n        val power6 = math.pow(power, 6)\n        val power7 = math.pow(power,\
    \ 7)\n        val power8 = math.pow(power, 8)\n        val power9 = math.pow(power,\
    \ 9)\n        val power10 = math.pow(power, 10)\n        val power11 = math.pow(power,\
    \ 11)\n        val power12 = math.pow(power, 12)\n        val power13 = math.pow(power,\
    \ 13)\n        val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(x,\
    \ n)\n        val result = math.abs(power) == x\n        result", "        val\
    \ power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n        val power3\
    \ = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n        val power5 =\
    \ math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n        val power7 = math.pow(n,\
    \ 7)\n        val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n\
    \        val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n\
    \        val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n\
    \        val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val power = math.pow(x, n)\n        power.toLong\
    \ == x", "        val power = math.pow(n, x)\n        power.toLong == x", "  \
    \      val power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n     \
    \   val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n       \
    \ val power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n        val\
    \ power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n        val power9\
    \ = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n        val power11\
    \ = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n        val power13\
    \ = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n        val power15\
    \ = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n        val power17\
    \ = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n        val power19\
    \ = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n        val power21\
    \ = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n        val power23\
    \ = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n        val power25\
    \ = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n        val power27\
    \ = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n        val power29\
    \ = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n        val power31\
    \ = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n        val power33\
    \ = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n        val power35\
    \ = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n        val power37\
    \ = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n        val power39\
    \ = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n        val power41\
    \ = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n        val power43\
    \ = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n        val power45\
    \ = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n        val power47\
    \ = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n        val power49\
    \ = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n        val ", " \
    \       val power = math.pow(n, x)\n        power.toLong == x", "        val pow\
    \ = math.pow(n, x)\n        val pow2 = math.pow(pow, 2)\n        val pow3 = math.pow(pow2,\
    \ 3)\n        val pow4 = math.pow(pow3, 4)\n        val pow5 = math.pow(pow4,\
    \ 5)\n        val pow6 = math.pow(pow5, 6)\n        val pow7 = math.pow(pow6,\
    \ 7)\n        val pow8 = math.pow(pow7, 8)\n        val pow9 = math.pow(pow8,\
    \ 9)\n        val pow10 = math.pow(pow9, 10)\n        val pow11 = math.pow(pow10,\
    \ 11)\n        val pow12 = math.pow(pow11, 12)\n        val pow13 = math.pow(pow12,\
    \ 13)\n        val pow14 = math.pow(pow13, 14)\n        val pow15 = math.pow(pow14,\
    \ 15)\n        val pow16 = math.pow(pow15, 16)\n        val pow17 = math.pow(pow16,\
    \ 17)\n        val pow18 = math.pow(pow17, 18)\n        val pow19 = math.pow(pow18,\
    \ 19)\n        val pow20 = math.pow(pow19, 20)\n        val pow21 = math.pow(pow20,\
    \ 21)\n        val pow22 = math.pow(pow21, 22)\n        val pow23 = math.pow(pow22,\
    \ 23)\n        val pow24 = math.pow(pow23, 24)\n        val pow25 = math.pow(pow24,\
    \ 25)\n        val pow26 = math.pow(pow25, 26)\n        val pow27 = math.pow(pow26,\
    \ 27)\n        val pow28 = math.pow(pow27, 28)\n        val pow29 = math.pow(pow28,\
    \ 29)\n        val pow30 = math.pow(pow29, 30)\n        val pow31 = math.pow(pow30,\
    \ 31)\n        val pow32 = math.pow(pow31, 32)\n        val pow33 = math.pow(pow32,\
    \ 33)\n        val pow34 = math.pow(pow33, 34)\n        val pow35 = math.pow(pow34,\
    \ 35)\n        val pow36 = math.pow(pow35, 36)\n        val pow37 = math.pow(pow36,\
    \ 37)\n        val pow38 = math.pow(pow37, 38)\n        val pow39 = math.pow(pow38,\
    \ 39)\n        val pow40 = math.pow(pow39, 40)\n        val pow41 = math.pow(pow40,\
    \ 41)\n        val pow42 = math.pow(pow41, 42)\n        val pow43 = math.pow(pow42,\
    \ 43)\n        val pow44 = math.pow(pow43, 44)\n        val pow45 = math.pow(pow44,\
    \ 45)\n        val pow46 = math.pow(pow45, 46)", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val power = math.pow(n, x)\n        val result\
    \ = math.pow(x, power) == x\n        result", "        val power = math.pow(x,\
    \ n)\n        power == x", "        val power = math.pow(x, n)\n        val power2\
    \ = math.pow(power, 2)\n        val power3 = math.pow(power, 3)\n        val power4\
    \ = math.pow(power, 4)\n        val power5 = math.pow(power, 5)\n        val power6\
    \ = math.pow(power, 6)\n        val power7 = math.pow(power, 7)\n        val power8\
    \ = math.pow(power, 8)\n        val power9 = math.pow(power, 9)\n        val power10\
    \ = math.pow(power, 10)\n        val power11 = math.pow(power, 11)\n        val\
    \ power12 = math.pow(power, 12)\n        val power13 = math.pow(power, 13)\n \
    \       val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(x, n)\n      \
    \  power.toLong == x", "        val power = math.pow(n, x)\n        power.toDouble\
    \ == x", "        val power = math.pow(n, x)\n        power.toLong == x", "  \
    \      val power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n     \
    \   val power3 = math.pow(n, 3)\n        val power5 = math.pow(n, 5)\n       \
    \ val power7 = math.pow(n, 7)\n        val power9 = math.pow(n, 9)\n        val\
    \ power11 = math.pow(n, 11)\n        val power13 = math.pow(n, 13)\n        val\
    \ power17 = math.pow(n, 17)\n        val power19 = math.pow(n, 19)\n        val\
    \ power23 = math.pow(n, 23)\n        val power27 = math.pow(n, 27)\n        val\
    \ power31 = math.pow(n, 31)\n        val power37 = math.pow(n, 37)\n        val\
    \ power43 = math.pow(n, 43)\n        val power47 = math.pow(n, 47)\n        val\
    \ power53 = math.pow(n, 53)\n        val power59 = math.pow(n, 59)\n        val\
    \ power63 = math.pow(n, 63)\n        val power67 = math.pow(n, 67)\n        val\
    \ power73 = math.pow(n, 73)\n        val power79 = math.pow(n, 79)\n        val\
    \ power83 = math.pow(n, 83)\n        val power87 = math.pow(n, 87)\n        val\
    \ power93 = math.pow(n, 93)\n        val power97 = math.pow(n, 97)\n        val\
    \ power103 = math.pow(n, 103)\n        val power107 = math.pow(n, 107)\n     \
    \   val power113 = math.pow(n, 113)\n        val power117 = math.pow(n, 117)\n\
    \        val power123 = math.pow(n, 123)\n        val power127 = math.pow(n, 127)\n\
    \        val power133 = math.pow(n, 133)\n        val power137 = math.pow(n, 137)\n\
    \        val power143 = math.pow(n, 143)\n        val power147 = math.pow(n, 147)\n\
    \        val power153 = math.pow(n, 153)\n        val power157 = math.pow(n, 157)\n\
    \        val power163 = math.pow(n, 163)\n        val power167 = math.pow(n, 167)\n\
    \        val power173 = math.pow(n, 173)\n        val power177 = math.pow(n, 177)\n\
    \        val power183 = math.pow(n, 183)\n        val power187 = math.pow(n, 187)\n\
    \        val power193 = math.pow(n, 193)\n        val power197 = math.pow(n, 197)\n\
    \        val power203 = math.pow(n, 203)\n        val power207 = math.pow(n, 207)\n\
    \        ", "        val power = math.pow(x, n)\n        power.toLong == x", " \
    \       val power = math.pow(n, x)\n        val power2 = math.pow(power, 2)\n\
    \        val power3 = math.pow(power, 3)\n        val power4 = math.pow(power,\
    \ 4)\n        val power5 = math.pow(power, 5)\n        val power6 = math.pow(power,\
    \ 6)\n        val power7 = math.pow(power, 7)\n        val power8 = math.pow(power,\
    \ 8)\n        val power9 = math.pow(power, 9)\n        val power10 = math.pow(power,\
    \ 10)\n        val power11 = math.pow(power, 11)\n        val power12 = math.pow(power,\
    \ 12)\n        val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(n, x)\n        val power2 = math.pow(n,\
    \ 2)\n        val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n\
    \        val power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n  \
    \      val power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n    \
    \    val power9 = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n    \
    \    val power11 = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n  \
    \      val power13 = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n\
    \        val power15 = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n\
    \        val power17 = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n\
    \        val power19 = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n\
    \        val power21 = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n\
    \        val power23 = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n\
    \        val power25 = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n\
    \        val power27 = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n\
    \        val power29 = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n\
    \        val power31 = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n\
    \        val power33 = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n\
    \        val power35 = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n\
    \        val power37 = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n\
    \        val power39 = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n\
    \        val power41 = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n\
    \        val power43 = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n\
    \        val power45 = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n\
    \        val power47 = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n\
    \        val power49 = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n\
    \        val ", "        val power = math.pow(n, x)\n        power.toDouble ==\
    \ x", "        val power = math.pow(n, x)\n        power.toLong == x", "     \
    \   val pow = math.pow(n, x)\n        val pow2 = math.pow(pow, 2)\n        val\
    \ pow3 = math.pow(pow, 3)\n        val pow4 = math.pow(pow, 4)\n        val pow5\
    \ = math.pow(pow, 5)\n        val pow6 = math.pow(pow, 6)\n        val pow7 =\
    \ math.pow(pow, 7)\n        val pow8 = math.pow(pow, 8)\n        val pow9 = math.pow(pow,\
    \ 9)\n        val pow10 = math.pow(pow, 10)\n        val pow11 = math.pow(pow,\
    \ 11)\n        val pow12 = math.pow(pow, 12)\n        val pow13 = math.pow(pow,\
    \ 13)\n        val pow14 = math.pow(pow, 14)\n        val pow15 = math.pow(pow,\
    \ 15)\n        val pow16 = math.pow(pow, 16)\n        val pow17 = math.pow(pow,\
    \ 17)\n        val pow18 = math.pow(pow, 18)\n        val pow19 = math.pow(pow,\
    \ 19)\n        val pow20 = math.pow(pow, 20)\n        val pow21 = math.pow(pow,\
    \ 21)\n        val pow22 = math.pow(pow, 22)\n        val pow23 = math.pow(pow,\
    \ 23)\n        val pow24 = math.pow(pow, 24)\n        val pow25 = math.pow(pow,\
    \ 25)\n        val pow26 = math.pow(pow, 26)\n        val pow27 = math.pow(pow,\
    \ 27)\n        val pow28 = math.pow(pow, 28)\n        val pow29 = math.pow(pow,\
    \ 29)\n        val pow30 = math.pow(pow, 30)\n        val pow31 = math.pow(pow,\
    \ 31)\n        val pow32 = math.pow(pow, 32)\n        val pow33 = math.pow(pow,\
    \ 33)\n        val pow34 = math.pow(pow, 34)\n        val pow35 = math.pow(pow,\
    \ 35)\n        val pow36 = math.pow(pow, 36)\n        val pow37 = math.pow(pow,\
    \ 37)\n        val pow38 = math.pow(pow, 38)\n        val pow39 = math.pow(pow,\
    \ 39)\n        val pow40 = math.pow(pow, 40)\n        val pow41 = math.pow(pow,\
    \ 41)\n        val pow42 = math.pow(pow, 42)\n        val pow43 = math.pow(pow,\
    \ 43)\n        val pow44 = math.pow(pow, 44)\n        val pow45 = math.pow(pow,\
    \ 45)\n        val pow46 = math.pow(pow, 46)\n", "        val power = math.pow(n,\
    \ x)\n        val result = math.abs(x - power) < 1e-10\n        result", "   \
    \     val power = math.pow(x, n)\n        val powerInt = math.round(power)\n \
    \       val powerIntInt = math.round(powerInt)\n        val powerIntIntInt = math.round(powerIntInt)\n\
    \        val powerIntIntIntInt = math.round(powerIntIntIntInt)\n        val powerIntIntIntIntInt\
    \ = math.round(powerIntIntIntIntIntInt)\n        val powerIntIntIntIntIntInt =\
    \ math.round(powerIntIntIntIntIntIntIntInt)\n        val powerIntIntIntIntIntIntInt\
    \ = math.round(powerIntIntIntIntIntIntIntIntIntInt)\n        val powerIntIntIntIntIntIntIntIntInt\
    \ = math.round(powerIntIntIntIntIntIntIntIntIntIntIntInt)\n        val powerIntIntIntIntIntIntIntIntIntInt\
    \ = math.round(powerIntIntIntIntIntIntIntIntIntIntIntIntIntInt)\n        val powerIntIntIntIntIntIntIntIntIntIntInt\
    \ = math.round(powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt)\n        val\
    \ powerIntIntIntIntIntIntIntIntIntIntIntInt = math.round(powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt)\n\
    \        val powerIntIntIntIntIntIntIntIntIntIntIntIntInt = math.round(powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt)\n\
    \        val powerIntIntIntIntIntIntIntIntIntIntIntIntIntInt = math.round(powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt)\n\
    \        val powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt = math.round(powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt)\n\
    \        val powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt = math.round(powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt)\n\
    \        val powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt = math.round(powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt)\n\
    \        val powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt = math.round(powerIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val pow\
    \ = math.pow(n, x)\n        val pow2 = math.pow(n, 2)\n        val pow3 = math.pow(n,\
    \ 3)\n        val pow4 = math.pow(n, 4)\n        val pow5 = math.pow(n, 5)\n \
    \       val pow6 = math.pow(n, 6)\n        val pow7 = math.pow(n, 7)\n       \
    \ val pow8 = math.pow(n, 8)\n        val pow9 = math.pow(n, 9)\n        val pow10\
    \ = math.pow(n, 10)\n        val pow11 = math.pow(n, 11)\n        val pow12 =\
    \ math.pow(n, 12)\n        val pow13 = math.pow(n, 13)\n        val pow14 = math.pow(n,\
    \ 14)\n        val pow15 = math.pow(n, 15)\n        val pow16 = math.pow(n, 16)\n\
    \        val pow17 = math.pow(n, 17)\n        val pow18 = math.pow(n, 18)\n  \
    \      val pow19 = math.pow(n, 19)\n        val pow20 = math.pow(n, 20)\n    \
    \    val pow21 = math.pow(n, 21)\n        val pow22 = math.pow(n, 22)\n      \
    \  val pow23 = math.pow(n, 23)\n        val pow24 = math.pow(n, 24)\n        val\
    \ pow25 = math.pow(n, 25)\n        val pow26 = math.pow(n, 26)\n        val pow27\
    \ = math.pow(n, 27)\n        val pow28 = math.pow(n, 28)\n        val pow29 =\
    \ math.pow(n, 29)\n        val pow30 = math.pow(n, 30)\n        val pow31 = math.pow(n,\
    \ 31)\n        val pow32 = math.pow(n, 32)\n        val pow33 = math.pow(n, 33)\n\
    \        val pow34 = math.pow(n, 34)\n        val pow35 = math.pow(n, 35)\n  \
    \      val pow36 = math.pow(n, 36)\n        val pow37 = math.pow(n, 37)\n    \
    \    val pow38 = math.pow(n, 38)\n        val pow39 = math.pow(n, 39)\n      \
    \  val pow40 = math.pow(n, 40)\n        val pow41 = math.pow(n, 41)\n        val\
    \ pow42 = math.pow(n, 42)\n        val pow43 = math.pow(n, 43)\n        val pow44\
    \ = math.pow(n, 44)\n        val pow45 = math.pow(n, 45)\n        val pow46 =\
    \ math.pow(n, 46)\n        val pow47 = math.pow(n, 47)\n        val pow48 = math.pow(n,\
    \ 48)\n        val pow49 = math.pow(n, 49)\n        val pow50 = math.pow(n, 50)\n\
    \        val ", "        val power = math.pow(x, n)\n        val power2 = math.pow(power,\
    \ 2)\n        val power3 = math.pow(power, 3)\n        val power4 = math.pow(power,\
    \ 4)\n        val power5 = math.pow(power, 5)\n        val power6 = math.pow(power,\
    \ 6)\n        val power7 = math.pow(power, 7)\n        val power8 = math.pow(power,\
    \ 8)\n        val power9 = math.pow(power, 9)\n        val power10 = math.pow(power,\
    \ 10)\n        val power11 = math.pow(power, 11)\n        val power12 = math.pow(power,\
    \ 12)\n        val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(n, x)\n        power == x", "        val\
    \ power = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n        val power3\
    \ = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n        val power5 =\
    \ math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n        val power7 = math.pow(n,\
    \ 7)\n        val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n\
    \        val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n\
    \        val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n\
    \        val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        val power2 = math.pow(power, 2)\n        val power3 = math.pow(power,\
    \ 3)\n        val power4 = math.pow(power, 4)\n        val power5 = math.pow(power,\
    \ 5)\n        val power6 = math.pow(power, 6)\n        val power7 = math.pow(power,\
    \ 7)\n        val power8 = math.pow(power, 8)\n        val power9 = math.pow(power,\
    \ 9)\n        val power10 = math.pow(power, 10)\n        val power11 = math.pow(power,\
    \ 11)\n        val power12 = math.pow(power, 12)\n        val power13 = math.pow(power,\
    \ 13)\n        val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(x,\
    \ n)\n        val power2 = math.pow(power, 2)\n        val power3 = math.pow(power,\
    \ 3)\n        val power4 = math.pow(power, 4)\n        val power5 = math.pow(power,\
    \ 5)\n        val power6 = math.pow(power, 6)\n        val power7 = math.pow(power,\
    \ 7)\n        val power8 = math.pow(power, 8)\n        val power9 = math.pow(power,\
    \ 9)\n        val power10 = math.pow(power, 10)\n        val power11 = math.pow(power,\
    \ 11)\n        val power12 = math.pow(power, 12)\n        val power13 = math.pow(power,\
    \ 13)\n        val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(x,\
    \ n)\n        val result = math.pow(power, n) == x\n        return result", " \
    \       val pow = math.pow(n, x)\n        if (pow == x) {\n            true\n\
    \        } else {\n            false\n        }", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power.toDouble == x", "        val power = math.pow(n, x)\n        val power2\
    \ = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n        val power4 =\
    \ math.pow(n, 4)\n        val power5 = math.pow(n, 5)\n        val power6 = math.pow(n,\
    \ 6)\n        val power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n\
    \        val power9 = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n\
    \        val power11 = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n\
    \        val power13 = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n\
    \        val power15 = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n\
    \        val power17 = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n\
    \        val power19 = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n\
    \        val power21 = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n\
    \        val power23 = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n\
    \        val power25 = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n\
    \        val power27 = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n\
    \        val power29 = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n\
    \        val power31 = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n\
    \        val power33 = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n\
    \        val power35 = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n\
    \        val power37 = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n\
    \        val power39 = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n\
    \        val power41 = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n\
    \        val power43 = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n\
    \        val power45 = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n\
    \        val power47 = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n\
    \        val power49 = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n\
    \        val ", "        val power = math.pow(n, x)\n        val result = math.pow(x,\
    \ power) == x\n        result", "        val power = math.pow(n, x)\n        val\
    \ result = math.abs(power - x) < 1e-10\n        result", "        val power =\
    \ math.pow(n, x)\n        power == x", "        val power = math.pow(n, x)\n \
    \       power.toLong == x", "        val power = math.pow(n, x)\n        val result\
    \ = math.pow(x, x) == power\n        result", "        val power = math.pow(x,\
    \ n)\n        val power2 = math.pow(power, 2)\n        val power3 = math.pow(power,\
    \ 3)\n        val power4 = math.pow(power, 4)\n        val power5 = math.pow(power,\
    \ 5)\n        val power6 = math.pow(power, 6)\n        val power7 = math.pow(power,\
    \ 7)\n        val power8 = math.pow(power, 8)\n        val power9 = math.pow(power,\
    \ 9)\n        val power10 = math.pow(power, 10)\n        val power11 = math.pow(power,\
    \ 11)\n        val power12 = math.pow(power, 12)\n        val power13 = math.pow(power,\
    \ 13)\n        val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val pow = math.pow(x,\
    \ n)\n        val pow2 = math.pow(pow, n)\n        val pow3 = math.pow(pow2, n)\n\
    \        val pow4 = math.pow(pow3, n)\n        val pow5 = math.pow(pow4, n)\n\
    \        val pow6 = math.pow(pow5, n)\n        val pow7 = math.pow(pow6, n)\n\
    \        val pow8 = math.pow(pow7, n)\n        val pow9 = math.pow(pow8, n)\n\
    \        val pow10 = math.pow(pow9, n)\n        val pow11 = math.pow(pow10, n)\n\
    \        val pow12 = math.pow(pow11, n)\n        val pow13 = math.pow(pow12, n)\n\
    \        val pow14 = math.pow(pow13, n)\n        val pow15 = math.pow(pow14, n)\n\
    \        val pow16 = math.pow(pow15, n)\n        val pow17 = math.pow(pow16, n)\n\
    \        val pow18 = math.pow(pow17, n)\n        val pow19 = math.pow(pow18, n)\n\
    \        val pow20 = math.pow(pow19, n)\n        val pow21 = math.pow(pow20, n)\n\
    \        val pow22 = math.pow(pow21, n)\n        val pow23 = math.pow(pow22, n)\n\
    \        val pow24 = math.pow(pow23, n)\n        val pow25 = math.pow(pow24, n)\n\
    \        val pow26 = math.pow(pow25, n)\n        val pow27 = math.pow(pow26, n)\n\
    \        val pow28 = math.pow(pow27, n)\n        val pow29 = math.pow(pow28, n)\n\
    \        val pow30 = math.pow(pow29, n)\n        val pow31 = math.pow(pow30, n)\n\
    \        val pow32 = math.pow(pow31, n)\n        val pow33 = math.pow(pow32, n)\n\
    \        val pow34 = math.pow(pow33, n)\n        val pow35 = math.pow(pow34, n)\n\
    \        val pow36 = math.pow(pow35, n)\n        val pow37 = math.pow(pow36, n)\n\
    \        val pow38 = math.pow(pow37, n)\n        val pow39 = math.pow(pow38, n)\n\
    \        val pow40 = math.pow(pow39, n)\n        val pow41 = math.pow(pow40, n)\n\
    \        val pow42 = math.pow(pow41, n)\n        val pow43 = math.pow(pow42, n)\n\
    \        val pow44 = math.pow(pow43, n)\n        val pow45 = math.pow(pow44, n)\n\
    \        val pow46 = math.pow(pow", "        val pow = math.pow(n, x)\n      \
    \  pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(n,\
    \ x)\n        val result = math.abs(x - power) < 1e-10\n        result", "   \
    \     val pow = math.pow(n, x)\n        val pow2 = math.pow(pow, 2)\n        val\
    \ pow3 = math.pow(pow, 3)\n        val pow4 = math.pow(pow, 4)\n        val pow5\
    \ = math.pow(pow, 5)\n        val pow6 = math.pow(pow, 6)\n        val pow7 =\
    \ math.pow(pow, 7)\n        val pow8 = math.pow(pow, 8)\n        val pow9 = math.pow(pow,\
    \ 9)\n        val pow10 = math.pow(pow, 10)\n        val pow11 = math.pow(pow,\
    \ 11)\n        val pow12 = math.pow(pow, 12)\n        val pow13 = math.pow(pow,\
    \ 13)\n        val pow14 = math.pow(pow, 14)\n        val pow15 = math.pow(pow,\
    \ 15)\n        val pow16 = math.pow(pow, 16)\n        val pow17 = math.pow(pow,\
    \ 17)\n        val pow18 = math.pow(pow, 18)\n        val pow19 = math.pow(pow,\
    \ 19)\n        val pow20 = math.pow(pow, 20)\n        val pow21 = math.pow(pow,\
    \ 21)\n        val pow22 = math.pow(pow, 22)\n        val pow23 = math.pow(pow,\
    \ 23)\n        val pow24 = math.pow(pow, 24)\n        val pow25 = math.pow(pow,\
    \ 25)\n        val pow26 = math.pow(pow, 26)\n        val pow27 = math.pow(pow,\
    \ 27)\n        val pow28 = math.pow(pow, 28)\n        val pow29 = math.pow(pow,\
    \ 29)\n        val pow30 = math.pow(pow, 30)\n        val pow31 = math.pow(pow,\
    \ 31)\n        val pow32 = math.pow(pow, 32)\n        val pow33 = math.pow(pow,\
    \ 33)\n        val pow34 = math.pow(pow, 34)\n        val pow35 = math.pow(pow,\
    \ 35)\n        val pow36 = math.pow(pow, 36)\n        val pow37 = math.pow(pow,\
    \ 37)\n        val pow38 = math.pow(pow, 38)\n        val pow39 = math.pow(pow,\
    \ 39)\n        val pow40 = math.pow(pow, 40)\n        val pow41 = math.pow(pow,\
    \ 41)\n        val pow42 = math.pow(pow, 42)\n        val pow43 = math.pow(pow,\
    \ 43)\n        val pow44 = math.pow(pow, 44)\n        val pow45 = math.pow(pow,\
    \ 45)\n        val pow46 = math.pow(pow, 46)\n", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(x, n)\n      \
    \  power == x", "        val power = math.pow(x, n)\n        power.toLong == x",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(x,\
    \ n)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  val result = math.abs(x - power) < 1e-10\n        result", "        val power\
    \ = math.pow(x, n)\n        val power2 = math.pow(power, 2)\n        val power3\
    \ = math.pow(power, 3)\n        val power4 = math.pow(power, 4)\n        val power5\
    \ = math.pow(power, 5)\n        val power6 = math.pow(power, 6)\n        val power7\
    \ = math.pow(power, 7)\n        val power8 = math.pow(power, 8)\n        val power9\
    \ = math.pow(power, 9)\n        val power10 = math.pow(power, 10)\n        val\
    \ power11 = math.pow(power, 11)\n        val power12 = math.pow(power, 12)\n \
    \       val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(n, x)\n        power.toLong == x", " \
    \       val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        val power2 = math.pow(n, 2)\n        val power3 =\
    \ math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n        val power5 = math.pow(n,\
    \ 5)\n        val power6 = math.pow(n, 6)\n        val power7 = math.pow(n, 7)\n\
    \        val power8 = math.pow(n, 8)\n        val power9 = math.pow(n, 9)\n  \
    \      val power10 = math.pow(n, 10)\n        val power11 = math.pow(n, 11)\n\
    \        val power12 = math.pow(n, 12)\n        val power13 = math.pow(n, 13)\n\
    \        val power14 = math.pow(n, 14)\n        val power15 = math.pow(n, 15)\n\
    \        val power16 = math.pow(n, 16)\n        val power17 = math.pow(n, 17)\n\
    \        val power18 = math.pow(n, 18)\n        val power19 = math.pow(n, 19)\n\
    \        val power20 = math.pow(n, 20)\n        val power21 = math.pow(n, 21)\n\
    \        val power22 = math.pow(n, 22)\n        val power23 = math.pow(n, 23)\n\
    \        val power24 = math.pow(n, 24)\n        val power25 = math.pow(n, 25)\n\
    \        val power26 = math.pow(n, 26)\n        val power27 = math.pow(n, 27)\n\
    \        val power28 = math.pow(n, 28)\n        val power29 = math.pow(n, 29)\n\
    \        val power30 = math.pow(n, 30)\n        val power31 = math.pow(n, 31)\n\
    \        val power32 = math.pow(n, 32)\n        val power33 = math.pow(n, 33)\n\
    \        val power34 = math.pow(n, 34)\n        val power35 = math.pow(n, 35)\n\
    \        val power36 = math.pow(n, 36)\n        val power37 = math.pow(n, 37)\n\
    \        val power38 = math.pow(n, 38)\n        val power39 = math.pow(n, 39)\n\
    \        val power40 = math.pow(n, 40)\n        val power41 = math.pow(n, 41)\n\
    \        val power42 = math.pow(n, 42)\n        val power43 = math.pow(n, 43)\n\
    \        val power44 = math.pow(n, 44)\n        val power45 = math.pow(n, 45)\n\
    \        val power46 = math.pow(n, 46)\n        val power47 = math.pow(n, 47)\n\
    \        val power48 = math.pow(n, 48)\n        val power49 = math.pow(n, 49)\n\
    \        val power50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power == x", "        val power = math.pow(n, x)\n        val power2\
    \ = math.pow(power, 2)\n        val power3 = math.pow(power, 3)\n        val power4\
    \ = math.pow(power, 4)\n        val power5 = math.pow(power, 5)\n        val power6\
    \ = math.pow(power, 6)\n        val power7 = math.pow(power, 7)\n        val power8\
    \ = math.pow(power, 8)\n        val power9 = math.pow(power, 9)\n        val power10\
    \ = math.pow(power, 10)\n        val power11 = math.pow(power, 11)\n        val\
    \ power12 = math.pow(power, 12)\n        val power13 = math.pow(power, 13)\n \
    \       val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(x,\
    \ n)\n        power.toDouble == x", "        val power = math.pow(x, n)\n    \
    \    val result = power == x\n        result", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power.toLong == x", "        val power = math.pow(n, x)\n        val power2\
    \ = math.pow(n, 2)\n        val power3 = math.pow(n, 3)\n        val power5 =\
    \ math.pow(n, 5)\n        val power7 = math.pow(n, 7)\n        val power9 = math.pow(n,\
    \ 9)\n        val power13 = math.pow(n, 13)\n        val power17 = math.pow(n,\
    \ 17)\n        val power19 = math.pow(n, 19)\n        val power23 = math.pow(n,\
    \ 23)\n        val power27 = math.pow(n, 27)\n        val power31 = math.pow(n,\
    \ 31)\n        val power37 = math.pow(n, 37)\n        val power41 = math.pow(n,\
    \ 41)\n        val power43 = math.pow(n, 43)\n        val power47 = math.pow(n,\
    \ 47)\n        val power51 = math.pow(n, 51)\n        val power53 = math.pow(n,\
    \ 53)\n        val power57 = math.pow(n, 57)\n        val power61 = math.pow(n,\
    \ 61)\n        val power63 = math.pow(n, 63)\n        val power67 = math.pow(n,\
    \ 67)\n        val power71 = math.pow(n, 71)\n        val power73 = math.pow(n,\
    \ 73)\n        val power77 = math.pow(n, 77)\n        val power81 = math.pow(n,\
    \ 81)\n        val power83 = math.pow(n, 83)\n        val power87 = math.pow(n,\
    \ 87)\n        val power91 = math.pow(n, 91)\n        val power93 = math.pow(n,\
    \ 93)\n        val power97 = math.pow(n, 97)\n        val power101 = math.pow(n,\
    \ 101)\n        val power103 = math.pow(n, 103)\n        val power107 = math.pow(n,\
    \ 107)\n        val power111 = math.pow(n, 111)\n        val power113 = math.pow(n,\
    \ 113)\n        val power117 = math.pow(n, 117)\n        val power121 = math.pow(n,\
    \ 121)\n        val power123 = math.pow(n, 123)\n        val power127 = math.pow(n,\
    \ 127)\n        val power131 = math.pow(n, 131)\n        val power133 = math.pow(n,\
    \ 133)\n        val power137 = math.pow(n, 137)\n        val power141 = math.pow(n,\
    \ 141)\n        val power143 = math.pow(n, 143)\n        val power147 = math.pow(n,\
    \ 147)\n        val power151 = math.pow(n, 151)\n        val power153 = math.pow(n,\
    \ 153)\n", "        val power = math.pow(n, x)\n        power.toLong == x", " \
    \       val power = math.pow(n, x)\n        power == x", "        val power =\
    \ math.pow(x, n)\n        val power2 = math.pow(power, 2)\n        val power3\
    \ = math.pow(power, 3)\n        val power4 = math.pow(power, 4)\n        val power5\
    \ = math.pow(power, 5)\n        val power6 = math.pow(power, 6)\n        val power7\
    \ = math.pow(power, 7)\n        val power8 = math.pow(power, 8)\n        val power9\
    \ = math.pow(power, 9)\n        val power10 = math.pow(power, 10)\n        val\
    \ power11 = math.pow(power, 11)\n        val power12 = math.pow(power, 12)\n \
    \       val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(n, x)\n        power.toDouble == x", " \
    \       val power = math.pow(n, x)\n        val result = math.abs(x - power) <\
    \ 1e-10\n        result", "        val pow = math.pow(n, x)\n        if (pow ==\
    \ x) {\n            return true\n        }\n        return false", "        val\
    \ power = math.pow(n, x)\n        power.toLong == x", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(x, n)\n      \
    \  val result = math.pow(power, n) == power\n        result", "        val power\
    \ = math.pow(n, x)\n        power.toDouble == x", "        val power = math.pow(n,\
    \ x)\n        val power2 = math.pow(power, 2)\n        val power3 = math.pow(power,\
    \ 3)\n        val power4 = math.pow(power, 4)\n        val power5 = math.pow(power,\
    \ 5)\n        val power6 = math.pow(power, 6)\n        val power7 = math.pow(power,\
    \ 7)\n        val power8 = math.pow(power, 8)\n        val power9 = math.pow(power,\
    \ 9)\n        val power10 = math.pow(power, 10)\n        val power11 = math.pow(power,\
    \ 11)\n        val power12 = math.pow(power, 12)\n        val power13 = math.pow(power,\
    \ 13)\n        val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n", "        val power = math.pow(n,\
    \ x)\n        power.toDouble == x", "        val power = math.pow(n, x)\n    \
    \    power.toDouble == x", "        val power = math.pow(x, n)\n        power.toLong\
    \ == x", "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n    \
    \    pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = ", "        val power = math.pow(n, x)\n        power == x", "   \
    \     val power = math.pow(n, x)\n        val result = math.abs(x - power) < 1e-10\n\
    \        result", "        val power = math.pow(n, x)\n        val result = math.abs(x\
    \ - power) < 1e-10\n        result", "        val pow = math.pow(n, x)\n     \
    \   pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)\n\
    \        pow = math.abs(pow)\n        pow = math.abs(pow)\n        pow = math.abs(pow)",
  "        val power = math.pow(n, x)\n        val power2 = math.pow(power, 2)\n \
    \       val power3 = math.pow(power, 3)\n        val power4 = math.pow(power,\
    \ 4)\n        val power5 = math.pow(power, 5)\n        val power6 = math.pow(power,\
    \ 6)\n        val power7 = math.pow(power, 7)\n        val power8 = math.pow(power,\
    \ 8)\n        val power9 = math.pow(power, 9)\n        val power10 = math.pow(power,\
    \ 10)\n        val power11 = math.pow(power, 11)\n        val power12 = math.pow(power,\
    \ 12)\n        val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val pow = math.pow(n, x)\n        val pow2 = math.pow(pow,\
    \ 2)\n        val pow3 = math.pow(pow, 3)\n        val pow4 = math.pow(pow, 4)\n\
    \        val pow5 = math.pow(pow, 5)\n        val pow6 = math.pow(pow, 6)\n  \
    \      val pow7 = math.pow(pow, 7)\n        val pow8 = math.pow(pow, 8)\n    \
    \    val pow9 = math.pow(pow, 9)\n        val pow10 = math.pow(pow, 10)\n    \
    \    val pow11 = math.pow(pow, 11)\n        val pow12 = math.pow(pow, 12)\n  \
    \      val pow13 = math.pow(pow, 13)\n        val pow14 = math.pow(pow, 14)\n\
    \        val pow15 = math.pow(pow, 15)\n        val pow16 = math.pow(pow, 16)\n\
    \        val pow17 = math.pow(pow, 17)\n        val pow18 = math.pow(pow, 18)\n\
    \        val pow19 = math.pow(pow, 19)\n        val pow20 = math.pow(pow, 20)\n\
    \        val pow21 = math.pow(pow, 21)\n        val pow22 = math.pow(pow, 22)\n\
    \        val pow23 = math.pow(pow, 23)\n        val pow24 = math.pow(pow, 24)\n\
    \        val pow25 = math.pow(pow, 25)\n        val pow26 = math.pow(pow, 26)\n\
    \        val pow27 = math.pow(pow, 27)\n        val pow28 = math.pow(pow, 28)\n\
    \        val pow29 = math.pow(pow, 29)\n        val pow30 = math.pow(pow, 30)\n\
    \        val pow31 = math.pow(pow, 31)\n        val pow32 = math.pow(pow, 32)\n\
    \        val pow33 = math.pow(pow, 33)\n        val pow34 = math.pow(pow, 34)\n\
    \        val pow35 = math.pow(pow, 35)\n        val pow36 = math.pow(pow, 36)\n\
    \        val pow37 = math.pow(pow, 37)\n        val pow38 = math.pow(pow, 38)\n\
    \        val pow39 = math.pow(pow, 39)\n        val pow40 = math.pow(pow, 40)\n\
    \        val pow41 = math.pow(pow, 41)\n        val pow42 = math.pow(pow, 42)\n\
    \        val pow43 = math.pow(pow, 43)\n        val pow44 = math.pow(pow, 44)\n\
    \        val pow45 = math.pow(pow, 45)\n        val pow46 = math.pow(pow, 46)\n",
  "        val power = math.pow(n, x)\n        power.toLong == x", "        val power\
    \ = math.pow(n, x)\n        val power2 = math.pow(power, 2)\n        val power3\
    \ = math.pow(power, 3)\n        val power4 = math.pow(power, 4)\n        val power5\
    \ = math.pow(power, 5)\n        val power6 = math.pow(power, 6)\n        val power7\
    \ = math.pow(power, 7)\n        val power8 = math.pow(power, 8)\n        val power9\
    \ = math.pow(power, 9)\n        val power10 = math.pow(power, 10)\n        val\
    \ power11 = math.pow(power, 11)\n        val power12 = math.pow(power, 12)\n \
    \       val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(n, x)\n        val power2 = math.pow(n,\
    \ 2)\n        val power3 = math.pow(n, 3)\n        val power4 = math.pow(n, 4)\n\
    \        val power5 = math.pow(n, 5)\n        val power6 = math.pow(n, 6)\n  \
    \      val power7 = math.pow(n, 7)\n        val power8 = math.pow(n, 8)\n    \
    \    val power9 = math.pow(n, 9)\n        val power10 = math.pow(n, 10)\n    \
    \    val power11 = math.pow(n, 11)\n        val power12 = math.pow(n, 12)\n  \
    \      val power13 = math.pow(n, 13)\n        val power14 = math.pow(n, 14)\n\
    \        val power15 = math.pow(n, 15)\n        val power16 = math.pow(n, 16)\n\
    \        val power17 = math.pow(n, 17)\n        val power18 = math.pow(n, 18)\n\
    \        val power19 = math.pow(n, 19)\n        val power20 = math.pow(n, 20)\n\
    \        val power21 = math.pow(n, 21)\n        val power22 = math.pow(n, 22)\n\
    \        val power23 = math.pow(n, 23)\n        val power24 = math.pow(n, 24)\n\
    \        val power25 = math.pow(n, 25)\n        val power26 = math.pow(n, 26)\n\
    \        val power27 = math.pow(n, 27)\n        val power28 = math.pow(n, 28)\n\
    \        val power29 = math.pow(n, 29)\n        val power30 = math.pow(n, 30)\n\
    \        val power31 = math.pow(n, 31)\n        val power32 = math.pow(n, 32)\n\
    \        val power33 = math.pow(n, 33)\n        val power34 = math.pow(n, 34)\n\
    \        val power35 = math.pow(n, 35)\n        val power36 = math.pow(n, 36)\n\
    \        val power37 = math.pow(n, 37)\n        val power38 = math.pow(n, 38)\n\
    \        val power39 = math.pow(n, 39)\n        val power40 = math.pow(n, 40)\n\
    \        val power41 = math.pow(n, 41)\n        val power42 = math.pow(n, 42)\n\
    \        val power43 = math.pow(n, 43)\n        val power44 = math.pow(n, 44)\n\
    \        val power45 = math.pow(n, 45)\n        val power46 = math.pow(n, 46)\n\
    \        val power47 = math.pow(n, 47)\n        val power48 = math.pow(n, 48)\n\
    \        val power49 = math.pow(n, 49)\n        val power50 = math.pow(n, 50)\n\
    \        val ", "        val pow = math.pow(n, x)\n        pow = math.abs(pow)\n\
    \        pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = math.max(pow, Long.MinValue)\n        pow = math.abs(pow)\n      \
    \  pow = math.min(pow, Long.MaxValue)\n        pow = math.max(pow, Long.MinValue)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, Long.MaxValue)\n   \
    \     pow = ", "        val power = math.pow(n, x)\n        val power2 = math.pow(power,\
    \ 2)\n        val power3 = math.pow(power, 3)\n        val power4 = math.pow(power,\
    \ 4)\n        val power5 = math.pow(power, 5)\n        val power6 = math.pow(power,\
    \ 6)\n        val power7 = math.pow(power, 7)\n        val power8 = math.pow(power,\
    \ 8)\n        val power9 = math.pow(power, 9)\n        val power10 = math.pow(power,\
    \ 10)\n        val power11 = math.pow(power, 11)\n        val power12 = math.pow(power,\
    \ 12)\n        val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(n, x)\n        power.toLong == x", " \
    \       val pow = math.pow(n, x)\n        pow = math.abs(pow)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n        pow\
    \ = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n\
    \        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow =\
    \ math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow\
    \ = math.max(pow, x)\n        pow = math.abs(pow)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n        pow\
    \ = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n\
    \        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow =\
    \ math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow\
    \ = math.max(pow, x)\n        pow = math.abs(pow)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n        pow\
    \ = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n\
    \        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n        pow =\
    \ math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow, x)\n\
    \        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow = math.max(pow,\
    \ x)\n        pow = math.abs(pow)\n        pow = math.min(pow, x)\n        pow\
    \ = math.max(pow, x)\n        pow = math.abs(pow)\n        pow = math.min(pow,\
    \ x)\n        pow = math.max(pow, x)\n        pow = math.abs(pow)\n        ",
  "        val pow = math.pow(n, x)\n        val pow2 = math.pow(n, 2)\n        val\
    \ pow3 = math.pow(n, 3)\n        val pow4 = math.pow(n, 4)\n        val pow5 =\
    \ math.pow(n, 5)\n        val pow6 = math.pow(n, 6)\n        val pow7 = math.pow(n,\
    \ 7)\n        val pow8 = math.pow(n, 8)\n        val pow9 = math.pow(n, 9)\n \
    \       val pow10 = math.pow(n, 10)\n        val pow11 = math.pow(n, 11)\n   \
    \     val pow12 = math.pow(n, 12)\n        val pow13 = math.pow(n, 13)\n     \
    \   val pow14 = math.pow(n, 14)\n        val pow15 = math.pow(n, 15)\n       \
    \ val pow16 = math.pow(n, 16)\n        val pow17 = math.pow(n, 17)\n        val\
    \ pow18 = math.pow(n, 18)\n        val pow19 = math.pow(n, 19)\n        val pow20\
    \ = math.pow(n, 20)\n        val pow21 = math.pow(n, 21)\n        val pow22 =\
    \ math.pow(n, 22)\n        val pow23 = math.pow(n, 23)\n        val pow24 = math.pow(n,\
    \ 24)\n        val pow25 = math.pow(n, 25)\n        val pow26 = math.pow(n, 26)\n\
    \        val pow27 = math.pow(n, 27)\n        val pow28 = math.pow(n, 28)\n  \
    \      val pow29 = math.pow(n, 29)\n        val pow30 = math.pow(n, 30)\n    \
    \    val pow31 = math.pow(n, 31)\n        val pow32 = math.pow(n, 32)\n      \
    \  val pow33 = math.pow(n, 33)\n        val pow34 = math.pow(n, 34)\n        val\
    \ pow35 = math.pow(n, 35)\n        val pow36 = math.pow(n, 36)\n        val pow37\
    \ = math.pow(n, 37)\n        val pow38 = math.pow(n, 38)\n        val pow39 =\
    \ math.pow(n, 39)\n        val pow40 = math.pow(n, 40)\n        val pow41 = math.pow(n,\
    \ 41)\n        val pow42 = math.pow(n, 42)\n        val pow43 = math.pow(n, 43)\n\
    \        val pow44 = math.pow(n, 44)\n        val pow45 = math.pow(n, 45)\n  \
    \      val pow46 = math.pow(n, 46)\n        val pow47 = math.pow(n, 47)\n    \
    \    val pow48 = math.pow(n, 48)\n        val pow49 = math.pow(n, 49)\n      \
    \  val pow50 = math.pow(n, 50)\n        val ", "        val power = math.pow(n,\
    \ x)\n        power.toLong == x", "        val power = math.pow(n, x)\n      \
    \  power == x", "        val power = math.pow(n, x)\n        power.toDouble ==\
    \ x", "        val power = math.pow(n, x)\n        power.toLong == x", "     \
    \   val power = math.pow(n, x)\n        val power2 = math.pow(power, 2)\n    \
    \    val power3 = math.pow(power, 3)\n        val power4 = math.pow(power, 4)\n\
    \        val power5 = math.pow(power, 5)\n        val power6 = math.pow(power,\
    \ 6)\n        val power7 = math.pow(power, 7)\n        val power8 = math.pow(power,\
    \ 8)\n        val power9 = math.pow(power, 9)\n        val power10 = math.pow(power,\
    \ 10)\n        val power11 = math.pow(power, 11)\n        val power12 = math.pow(power,\
    \ 12)\n        val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(x, n)\n        val power2 = math.pow(power,\
    \ 2)\n        val power3 = math.pow(power, 3)\n        val power4 = math.pow(power,\
    \ 4)\n        val power5 = math.pow(power, 5)\n        val power6 = math.pow(power,\
    \ 6)\n        val power7 = math.pow(power, 7)\n        val power8 = math.pow(power,\
    \ 8)\n        val power9 = math.pow(power, 9)\n        val power10 = math.pow(power,\
    \ 10)\n        val power11 = math.pow(power, 11)\n        val power12 = math.pow(power,\
    \ 12)\n        val power13 = math.pow(power, 13)\n        val power14 = math.pow(power,\
    \ 14)\n        val power15 = math.pow(power, 15)\n        val power16 = math.pow(power,\
    \ 16)\n        val power17 = math.pow(power, 17)\n        val power18 = math.pow(power,\
    \ 18)\n        val power19 = math.pow(power, 19)\n        val power20 = math.pow(power,\
    \ 20)\n        val power21 = math.pow(power, 21)\n        val power22 = math.pow(power,\
    \ 22)\n        val power23 = math.pow(power, 23)\n        val power24 = math.pow(power,\
    \ 24)\n        val power25 = math.pow(power, 25)\n        val power26 = math.pow(power,\
    \ 26)\n        val power27 = math.pow(power, 27)\n        val power28 = math.pow(power,\
    \ 28)\n        val power29 = math.pow(power, 29)\n        val power30 = math.pow(power,\
    \ 30)\n        val power31 = math.pow(power, 31)\n        val power32 = math.pow(power,\
    \ 32)\n        val power33 = math.pow(power, 33)\n        val power34 = math.pow(power,\
    \ 34)\n        val power35 = math.pow(power, 35)\n        val power36 = math.pow(power,\
    \ 36)\n        val power37 = math.pow(power, 37)\n        val power38 = math.pow(power,\
    \ 38)\n        val power39 = math.pow(power, 39)\n        val power40 = math.pow(power,\
    \ 40)\n        val power41 = math.pow(power, 41)\n        val power42 = math.pow(power,\
    \ 42)\n        val power43 = math.pow(power, 43)\n        val power44 = math.pow(power,\
    \ 44)\n        val power45 = math.pow(power, 45)\n        val power46 = math.pow(power,\
    \ 46)\n", "        val power = math.pow(x, n)\n        val result = math.pow(power,\
    \ n) == x\n        return result", "        val power = math.pow(n, x)\n     \
    \   val power2 = math.pow(power, 2)\n        val power3 = math.pow(power, 3)\n\
    \        val power4 = math.pow(power, 4)\n        val power5 = math.pow(power,\
    \ 5)\n        val power6 = math.pow(power, 6)\n        val power7 = math.pow(power,\
    \ 7)\n        val power8 = math.pow(power, 8)\n        val power9 = math.pow(power,\
    \ 9)\n        val power10 = math.pow(power, 10)\n        val power11 = math.pow(power,\
    \ 11)\n        val power12 = math.pow(power, 12)\n        val power13 = math.pow(power,\
    \ 13)\n        val power14 = math.pow(power, 14)\n        val power15 = math.pow(power,\
    \ 15)\n        val power16 = math.pow(power, 16)\n        val power17 = math.pow(power,\
    \ 17)\n        val power18 = math.pow(power, 18)\n        val power19 = math.pow(power,\
    \ 19)\n        val power20 = math.pow(power, 20)\n        val power21 = math.pow(power,\
    \ 21)\n        val power22 = math.pow(power, 22)\n        val power23 = math.pow(power,\
    \ 23)\n        val power24 = math.pow(power, 24)\n        val power25 = math.pow(power,\
    \ 25)\n        val power26 = math.pow(power, 26)\n        val power27 = math.pow(power,\
    \ 27)\n        val power28 = math.pow(power, 28)\n        val power29 = math.pow(power,\
    \ 29)\n        val power30 = math.pow(power, 30)\n        val power31 = math.pow(power,\
    \ 31)\n        val power32 = math.pow(power, 32)\n        val power33 = math.pow(power,\
    \ 33)\n        val power34 = math.pow(power, 34)\n        val power35 = math.pow(power,\
    \ 35)\n        val power36 = math.pow(power, 36)\n        val power37 = math.pow(power,\
    \ 37)\n        val power38 = math.pow(power, 38)\n        val power39 = math.pow(power,\
    \ 39)\n        val power40 = math.pow(power, 40)\n        val power41 = math.pow(power,\
    \ 41)\n        val power42 = math.pow(power, 42)\n        val power43 = math.pow(power,\
    \ 43)\n        val power44 = math.pow(power, 44)\n        val power45 = math.pow(power,\
    \ 45)\n        val power46 = math.pow(power, 46)\n"]
stop_tokens:
- "\n    }\n"

name: HumanEval_16_count_distinct_characters
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n    // 3\n\
  \    // >>> count_distinct_characters('Jerry')\n    // 4\n    def countDistinctCharacters(string\
  \ : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
  \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
  abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
  )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n\
  \    }\n\n}\n"
completions: ["        val chars = string.chars\n        val distinctChars = chars.distinct\n\
    \        distinctChars.size", "        val chars = string.map(_.toUpperCase).distinct\n\
    \        chars.count(_ == string.charAt(0))", "        val chars = string.map(_.toLower)\n\
    \        val distinctChars = chars.distinct\n        distinctChars.size", "  \
    \      val chars = string.distinct\n        chars.foldLeft(0)((acc, c) => acc\
    \ + 1)", "        val chars = string.distinct\n        val charCount = chars.toSet.size\n\
    \        charCount", "        val chars = string.map(_.toLower).toSet\n      \
    \  chars.size + 1", "        val chars = string.map(_.toLower).toSet\n       \
    \ chars.size", "        val chars = string.map(_.toLower).toSet\n        chars.size\
    \ * (chars.size + 1)", "        val chars = string.map(c => c.toLowerCase + c.toUpperCase).toSet\n\
    \        chars.size + 1", "        val chars = string.distinct\n        chars.size",
  "        val chars = string.map(_.toLower)\n        val counts = mutable.HashMap.empty[Char,\
    \ Int]\n        chars.foreach(c => counts.getOrElse(c, 0) + 1)\n        counts.values.toList.distinct.length",
  "        val chars = string.chars\n        val distinctChars = chars.distinct.length\n\
    \        distinctChars", "        val chars = string.distinct\n        chars.toSet.size\
    \ // number of distinct characters", "        val chars = string.map(_.toLower)\n\
    \        val distinctChars = chars.distinct\n        distinctChars.size", "  \
    \      val chars = string.map(_.toLower).toSet\n        chars.size + 1", "   \
    \     val chars = string.chars\n        val distinctChars = chars.distinct.length\n\
    \        distinctChars", "        val chars = string.map(_.toLower).toSet\n  \
    \      chars.toList.distinct.size", "        val chars = string.map(_.toUpperCase).distinct\n\
    \        chars.size + 1", "        val chars = string.map(_.toLower).toSet\n \
    \       chars.size + (chars.size - chars.distinct.size)", "        val chars =\
    \ string.map(_.toLower).toSet\n        chars.toList.distinct.length"]
stop_tokens:
- "\n    }\n"

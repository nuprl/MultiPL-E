name: HumanEval_134_check_if_last_char_is_a_letter
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function that returns True if the last character\n    // of a given\
  \ string is an alphabetical character and is not\n    // a part of a word, and False\
  \ otherwise.\n    // Note: \"word\" is a group of characters separated by space.\n\
  \    // Examples:\n    // check_if_last_char_is_a_letter(\"apple pie\") \u279E False\n\
  \    // check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n    // check_if_last_char_is_a_letter(\"\
  apple pi e \") \u279E False\n    // check_if_last_char_is_a_letter(\"\") \u279E\
  \ False\n    def checkIfLastCharIsALetter(txt : String) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(checkIfLastCharIsALetter((\"\
  apple\")) == (false));\n    assert(checkIfLastCharIsALetter((\"apple pi e\")) ==\
  \ (true));\n    assert(checkIfLastCharIsALetter((\"eeeee\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  A\")) == (true));\n    assert(checkIfLastCharIsALetter((\"Pumpkin pie \")) == (false));\n\
  \    assert(checkIfLastCharIsALetter((\"Pumpkin pie 1\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  \")) == (false));\n    assert(checkIfLastCharIsALetter((\"eeeee e \")) == (false));\n\
  \    assert(checkIfLastCharIsALetter((\"apple pie\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  apple pi e \")) == (false));\n    }\n\n}\n"
completions: ["        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.forall(_.isLetter)\n        val isNotWord = words.last.forall(_.contains(lastChar))\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val lastCharIsLetter = lastChar.toString.isLetter\n\
    \        val lastCharIsNotWord = words.last.forall(_.toString.isLetter)\n    \
    \    lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]+\")\n        !isLetter", "        val words = txt.split(\" \")\n    \
    \    val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLetter = lastChar.toString.isLetter\n        !isLetter", "    \
    \    val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val lastChar = txt.last\n        val lastCharIsLetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        val lastCharIsNotWord = lastChar != ' ' && lastChar\
    \ != '\\t'\n        lastCharIsLetter && lastCharIsNotWord", "        val words\
    \ = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n        val\
    \ lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val lastChar = txt.last\n        val lastCharIsLetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        val lastCharIsNotWord = lastChar != ' ' && lastChar\
    \ != '-' && lastChar != '_'\n        lastCharIsLetter && lastCharIsNotWord", " \
    \       val words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.charAt(lastWord.length-1)\n        val isLetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        !isLetter", "        val words\
    \ = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n    \
    \    val lastCharIsLetter = lastChar.toString.isLetter\n        val lastCharIsNotWord\
    \ = words.last.contains(lastChar)\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \").toList\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.last\n        val isLetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        !isLetter", "        val words = txt.split(\" \"\
    )\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter =\
    \ lastChar.forall(_.isLetter)\n        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n\
    \        lastCharIsLetter && !lastCharIsNotWord", "        val lastChar = txt.last\n\
    \        val lastCharIsLetter = lastChar >= 'a' && lastChar <= 'z'\n        val\
    \ lastCharIsNotWord = lastChar != ' ' && lastChar != '-' && lastChar != '_'\n\
    \        lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.forall(x\
    \ => x.isLetter)\n        val isNotWord = words.last.forall(x => x.contains(lastChar))\n\
    \        isLetter && !isNotWord", "        val lastChar = txt.last\n        if(lastChar.isLetter)\
    \ {\n            val words = txt.split(\" \").filter(_.nonEmpty)\n           \
    \ val lastWord = words.last\n            val lastWordChar = lastWord.last\n  \
    \          if(lastWordChar != lastChar) {\n                return false\n    \
    \        }\n        }\n        return true", "        val words = txt.split(\"\
    \ \")\n        val lastChar = txt.last\n        val lastCharIsLetter = lastChar.toString.isLetter\n\
    \        val lastCharIsNotWord = words.last.contains(lastChar)\n        val lastCharIsNotWordButLastCharIsALetter\
    \ = lastCharIsNotWord && !lastCharIsLetter\n        lastCharIsNotWordButLastCharIsALetter",
  "        val lastChar = txt.last\n        val isLetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.dropRight(1).forall(_.isLetter)\n      \
    \  isLetter && !isNotWord", "        val words = txt.split(\" \")\n        val\
    \ lastChar = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \").toList\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.forall(Character.isLetter)\n        val lastCharIsNotWord = words.last.forall(Character.isLetter)\
    \ && !words.last.contains(lastChar)\n        !lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.charAt(lastWord.length-1)\n        val isLetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        !isLetter", "        val words\
    \ = txt.split(\" \")\n        val lastWord = words(words.length-1)\n        val\
    \ lastChar = lastWord.last\n        val isLetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        !isLetter", "        val words = txt.split(\" \")\n        val\
    \ lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n   \
    \     val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = lastWord.forall(x => x != lastChar)\n        isLetter && !isNotWord", "  \
    \      var lastChar = txt.last\n        var isLastCharAlpha = false\n        for(i\
    \ <- 0 until txt.length){\n            if(txt(i) == lastChar){\n             \
    \   isLastCharAlpha = true\n            }\n        }\n        if(isLastCharAlpha\
    \ == false){\n            return false\n        }\n        else{\n           \
    \ return true\n        }", "        val words = txt.split(\" \")\n        val\
    \ lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"[a-zA-Z]\"\
    )\n        val isNotWord = words.last.contains(lastChar)\n        !isLetter &&\
    \ !isNotWord", "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.matches(\"[a-zA-Z]\")\n        val isNotWord\
    \ = words.last.contains(lastChar)\n        !isLetter && !isNotWord", "       \
    \ val lastChar = txt.last\n        val lastCharIsLetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val lastCharIsNotWord = lastChar != ' ' && lastChar != '\\t'\n\
    \        lastCharIsLetter && lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.toString.matches(\"[a-zA-Z]\")\n        val lastCharIsNotWord = words.lastOption.map(_.toString.trim).forall(!_.matches(\"\
    [a-zA-Z]\"))\n        lastCharIsLetter && !lastCharIsNotWord", "        val words\
    \ = txt.split(\" \")\n        val lastWord = words(words.length-1)\n        val\
    \ lastChar = lastWord.charAt(lastWord.length-1)\n        val isLetter = lastChar.isLetter\n\
    \        val isNotWord = lastWord.contains(\" \")\n        val isNotLastChar =\
    \ lastChar.isNotLetter\n        isLetter && isNotWord && isNotLastChar", "   \
    \     val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.matches(\"[a-zA-Z]+\")\n        val isNotWord\
    \ = words.last.contains(lastChar)\n        isLetter && !isNotWord", "        var\
    \ lastChar = txt.last\n        var isLetter = true\n        for(i <- 0 until txt.length){\n\
    \            if(!Character.isLetter(txt.charAt(i))){\n                isLetter\
    \ = false\n            }\n        }\n        return isLetter", "        val lastChar\
    \ = txt.last\n        val isLetter = lastChar match {\n            case c if c.isLetter\
    \ => true\n            case _ => false\n        }\n        val isNotWord = txt.split(\"\
    \ \").map(_.last).contains(lastChar)\n        isLetter && !isNotWord", "     \
    \   val words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.last\n        val isLetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        !isLetter", "        val words = txt.split(\" \"\
    )\n        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isNotWord = words.last.contains(lastChar)\n        !isLetter\
    \ && !isNotWord", "        val lastChar = txt.last\n        val isLetter = lastChar\
    \ >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isNotWord = words.lastOption.map(_.last).exists(!_.matches(\"\
    [a-zA-Z]\"))\n        isLetter && !isNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        !isLetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.matches(\"[a-zA-Z]+\")\n        val isNotWord\
    \ = words.last.contains(lastChar)\n        isLetter && !isNotWord", "        val\
    \ words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.matches(\"[a-zA-Z]\")\n        val isNotWord\
    \ = words.last.contains(lastChar)\n        !isLetter && !isNotWord", "       \
    \ val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n \
    \       val isLetter = lastChar.matches(\"[a-zA-Z]+\")\n        !isLetter", " \
    \       val lastChar = txt.last\n        val isLetter = lastChar match {\n   \
    \         case c if c.isLetter => true\n            case _ => false\n        }\n\
    \        val isNotWord = txt.split(\" \").lastOption match {\n            case\
    \ Some(word) => !word.contains(lastChar)\n            case _ => false\n      \
    \  }\n        isLetter && !isNotWord", "        val words = txt.split(\" \")\n\
    \        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.forall(_.isLetter)\n\
    \        val isNotWord = words.last.forall(_.contains(lastChar))\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \").toList\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]+\")\n        val isNotWord = words.last.contains(lastChar)\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.matches(\"[a-zA-Z]+\"\
    )\n        !isLetter", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.forall(_.isLetter)\n\
    \        val isNotWord = words.last.forall(_.contains(lastChar))\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.matches(\"[a-zA-Z]\"\
    )\n        val isNotWord = words.last.contains(lastChar)\n        isLetter &&\
    \ !isNotWord", "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.toString.isLetter\n        val lastCharIsNotWord\
    \ = words.last.contains(lastChar)\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val lastChar = txt.last\n        val isLetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]+\")\n        val isNotWord = words.last.contains(lastChar)\n        !isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.matches(\"[a-zA-Z]\"\
    )\n        !isLetter", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.forall(Character.isLetter)\n        val lastCharIsNotWord = words.last.forall(word\
    \ => word.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.matches(\"[a-zA-Z]+\")\n        !isLetter", " \
    \       val lastChar = txt.last\n        val lastCharIsLetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        val lastCharIsNotWord = lastChar != ' ' && lastChar\
    \ != '-' && lastChar != '_'\n        val lastCharIsNotWordOrLetter = lastCharIsWord\
    \ || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpace = lastCharIsNotWord\
    \ || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpaceOrEnd = lastCharIsNotWord\
    \ || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpaceOrEndOrNewline\
    \ = lastCharIsNotWord || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpaceOrEndOrNewlineOrNewline\
    \ = lastCharIsNotWord || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpaceOrEndOrNewlineOrNewlineOrNewline\
    \ = lastCharIsNotWord || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpaceOrEndOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastCharIsNotWord || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpaceOrEndOrNewlineOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastCharIsNotWord || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpaceOrEndOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastCharIsNotWord || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpaceOrEndOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastCharIsNotWord || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpaceOrEndOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastCharIsNotWord || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpaceOrEndOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewline\
    \ = lastCharIsNotWord || lastCharIsLetter\n        val lastCharIsNotWordOrLetterOrSpaceOrEndOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewlineOrNewline",
  "        val words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.toString.isLetter\n        val lastCharIsNotWord\
    \ = words.last.forall(_.toString.isLetter)\n        val isLastCharNotWord = lastCharIsLetter\
    \ && !lastCharIsNotWord\n        !isLastCharNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]+\")\n        !isLetter", "        val lastChar = txt.last\n        val\
    \ isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\"\
    \ \").map(_.last).contains(lastChar)\n        isLetter && !isNotWord", "     \
    \   val lastChar = txt.last\n        val isLetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").lastOption.exists(_ == lastChar)\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLetter = lastChar.forall(_.isLetter)\n\
    \        val isNotWord = words.last.forall(_.contains(lastChar))\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.matches(\"[a-zA-Z]+\"\
    )\n        val isNotWord = words.last.contains(lastChar)\n        isLetter &&\
    \ !isNotWord", "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.forall(_.isLetter)\n        val isNotWord = words.last.forall(_.contains(lastChar))\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLastCharAlpha = lastChar.forall(_.isLetter)\n\
    \        val isLastCharNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     isLastCharAlpha && !isLastCharNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        !isLetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        !lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.matches(\"[a-zA-Z]\")\n        !isLetter", " \
    \       val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.matches(\"[a-zA-Z]\")\n        val isNotWord\
    \ = words.lastOption.map(_.last).exists(!_.matches(\"[a-zA-Z]\"))\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     !lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isNotWord = words.last.contains(lastChar)\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \").toList\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastWord = words(words.length-1)\n        val lastChar = lastWord.charAt(lastWord.length-1)\n\
    \        val isLetter = lastChar.isLetter\n        val isNotWord = lastWord.contains(\"\
    \ \")\n        isLetter && !isNotWord", "        val words = txt.split(\" \")\n\
    \        val lastChar = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     !lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isNotWord = words.last.contains(lastChar)\n        isLetter\
    \ && !isNotWord", "        val lastChar = txt.last\n        val isLetter = lastChar\
    \ >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \").lastOption.exists(_\
    \ == lastChar)\n        isLetter && !isNotWord", "        val lastChar = txt.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.split(\" \").lastOption match {\n            case Some(word) => !word.contains(lastChar)\n\
    \            case None => false\n        }\n        isLetter && !isNotWord", " \
    \       val words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.last\n        val isLetter = lastChar.isLetter\n\
    \        val isNotWord = lastWord.forall(_.isLetter)\n        !isLetter && !isNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.toString.isLetter\n        val isNotWord = words.last.contains(lastChar)\n\
    \        isLetter && !isNotWord", "        val lastChar = txt.last\n        val\
    \ lastCharIsLetter = lastChar >= 'a' && lastChar <= 'z'\n        val lastCharIsNotWord\
    \ = lastChar != ' ' && lastChar != '-' && lastChar != '_'\n        lastCharIsLetter\
    \ && lastCharIsNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.toString.matches(\"[a-zA-Z]+\"\
    )\n        !isLetter", "        val words = txt.split(\" \")\n        val lastWord\
    \ = words(words.length-1)\n        val lastChar = lastWord.last\n        val isLetter\
    \ = lastChar.isLetter\n        val isNotWord = lastChar.isLetterOrDigit\n    \
    \    !isLetter && !isNotWord", "        val words = txt.split(\" \")\n       \
    \ val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isNotWord = words.last.contains(lastChar)\n        !isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(Character.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(word => !word.contains(lastChar))\n\
    \        lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isNotWord = words.last.contains(lastChar)\n        !isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastWord\
    \ = words(words.length-1)\n        val lastChar = lastWord.charAt(lastWord.length-1)\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        !isLetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.forall(x => x.isLetter)\n        val isNotWord\
    \ = words.last.forall(x => !x.contains(\" \"))\n        isLetter && !isNotWord",
  "        val lastChar = txt.last\n        val lastCharIsLetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        val lastCharIsNotWord = lastChar != ' ' && lastChar\
    \ != '-' && lastChar != '_'\n        lastCharIsLetter && lastCharIsNotWord", " \
    \       val words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.toString.matches(\"[a-zA-Z]\")\n    \
    \    val lastCharIsNotWord = words.last.contains(lastChar)\n        lastCharIsLetter\
    \ && !lastCharIsNotWord", "        val words = txt.split(\" \")\n        val lastWord\
    \ = words(words.length-1)\n        val lastChar = lastWord.charAt(lastWord.length-1)\n\
    \        val isLetter = lastChar.isLetter\n        val isNotWord = lastWord.indexOf(\"\
    _\") != -1\n        isLetter && !isNotWord", "        val words = txt.split(\"\
    \ \").toList\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.forall(Character.isLetter)\n        val lastCharIsNotWord = words.last.forall(Character.isLetter)\n\
    \        lastCharIsLetter && !lastCharIsNotWord", "        val lastChar = txt.last\n\
    \        val lastCharIsLetter = lastChar >= 'a' && lastChar <= 'z'\n        val\
    \ lastCharIsNotWord = lastChar != ' ' && lastChar != '\\n'\n        lastCharIsLetter\
    \ && lastCharIsNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     !lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.toString.matches(\"[a-zA-Z]\")\n        val lastCharIsNotWord = words.last.contains(lastChar)\n\
    \        val isLastCharNotWord = lastCharIsNotWord && lastCharIsLetter\n     \
    \   !isLastCharNotWord", "        val lastChar = txt.last\n        val lastCharIsLetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val lastCharIsNotWord = lastChar\
    \ != ' ' && lastChar != '\\t'\n        lastCharIsLetter && lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.toString.isLetter\n        val lastCharIsNotWord\
    \ = words.last.contains(lastChar)\n        val lastCharIsNotWordButLastIsLetter\
    \ = lastCharIsNotWord && lastChar.isLetter\n        lastCharIsLetter && !lastCharIsNotWord\
    \ && !lastCharIsNotWordButLastIsLetter", "        val words = txt.split(\" \"\
    ).toList\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n\
    \        lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastWord = words(words.length-1)\n        val lastChar = lastWord.charAt(lastWord.length-1)\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        !isLetter",
  "        val lastChar = txt.last\n        val isLetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        !isLetter",
  "        val lastChar = txt.last\n        val lastCharIsLetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        val lastCharIsNotWord = lastChar != ' ' && lastChar\
    \ != '-' && lastChar != '_'\n        val lastCharIsNotLetterOrWord = lastCharIsLetter\
    \ || lastCharIsNotWord\n        lastCharIsLetter == lastCharIsNotLetterOrWord",
  "        val words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.charAt(words.length-1)\n        val isLetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = lastWord.indexOf(\"\
    ,\") < 0\n        isLetter && !isNotWord", "        val lastChar = txt.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.split(\" \").map(_.last).contains(lastChar)\n        isLetter && !isNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val lastChar = txt.last\n        val isLetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        !isLetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.forall(_.isLetter)\n        val isNotWord = words.last.forall(_.contains(lastChar))\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLetter = lastChar.forall(_.isLetter)\n\
    \        val isNotWord = words.last.forall(_.contains(lastChar))\n        !isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.forall(x => x.isLetter)\n\
    \        val isNotWord = words.last.forall(x => !x.contains(\" \"))\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastWord\
    \ = words(words.length-1)\n        val lastChar = lastWord.last\n        val isLetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = lastWord.forall(_.isLetter)\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = lastWord.forall(c => c != ' ')\n        isLetter && !isNotWord", "       \
    \ val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n \
    \       val lastCharIsLetter = lastChar.forall(Character.isLetter)\n        val\
    \ lastCharIsNotWord = words.last.forall(Character.isLetter)\n        !lastCharIsLetter\
    \ && !lastCharIsNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isNotWord = words.last.contains(lastChar)\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.toString.isLetter\n \
    \       val isNotWord = words.last.forall(_.toString.isLetter)\n        isLetter\
    \ && !isNotWord", "        val lastChar = txt.last\n        val isLetter = lastChar\
    \ >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLetter = lastChar.isLetter\n        val isNotWord = lastChar.isAlpha\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLetter = lastChar.forall(_.isLetter)\n\
    \        val isNotWord = words.last.forall(_.contains(lastChar))\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \").toList\n        val lastWord\
    \ = words(words.length-1)\n        val lastChar = lastWord.last\n        val isLetter\
    \ = lastChar.isLetter\n        val isNotWord = lastWord.forall(_.isLetter)\n \
    \       !isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLetter = lastChar.forall(_.isLetter)\n\
    \        val isNotWord = words.last.forall(_.contains(lastChar))\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.toString.isLetter\n\
    \        val lastCharIsNotWord = words.last.last.isLetter\n        val result\
    \ = lastCharIsLetter && !lastCharIsNotWord\n        return result", "        val\
    \ words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n   \
    \     val lastChar = lastWord.last\n        val isLetter = lastChar >= 'a' &&\
    \ lastChar <= 'z'\n        val isNotWord = lastWord.forall(_.isLetter)\n     \
    \   isLetter && !isNotWord", "        val words = txt.split(\" \")\n        val\
    \ lastChar = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     !lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n\
    \        lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n\
    \        !lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.toString.isLetter\n        val lastCharIsNotWord = lastChar.tail.forall(_.isLetter)\n\
    \        !lastCharIsWord && !lastCharIsLetter", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.toString.matches(\"\
    [a-zA-Z]\")\n        val isNotWord = words.last.contains(lastChar)\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.forall(_.isLetter)\n\
    \        val isNotWord = words.last.forall(_.contains(lastChar))\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.matches(\"[a-zA-Z]\"\
    )\n        !isLetter", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     lastCharIsLetter && !lastCharIsNotWord", "        val lastChar = txt.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.split(\" \").map(_.last).contains(lastChar)\n        isLetter && !isNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(Character.isLetter)\n        val\
    \ lastCharIsNotWord = words.last.forall(word => !word.contains(lastChar))\n  \
    \      lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLetter = lastChar.matches(\"[a-zA-Z]+\")\n        !isLetter", " \
    \       val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        !lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.last\n        val isLetter = lastChar.toString.isLetter\n\
    \        !isLetter", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.forall(_.isLetter)\n\
    \        val isNotWord = words.last.forall(_.contains(lastChar))\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.toString.matches(\"\
    [a-zA-Z]\")\n        val lastCharIsNotWord = words.last.contains(lastChar)\n \
    \       val result = lastCharIsLetter && !lastCharIsNotWord\n        return result",
  "        val words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.last\n        val isLetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        !isLetter", "        val words = txt.split(\" \"\
    ).toList\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n\
    \        lastCharIsLetter && !lastCharIsNotWord", "        val lastChar = txt.last\n\
    \        val lastCharIsLetter = lastChar >= 'a' && lastChar <= 'z'\n        val\
    \ lastCharIsNotWord = lastChar != ' ' && lastChar != 'a'\n        lastCharIsLetter\
    \ && lastCharIsNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.forall(x => x.isLetter)\n\
    \        val isNotWord = words.last.forall(x => x.contains(lastChar))\n      \
    \  isLetter && !isNotWord", "        val words = txt.split(\" \")\n        val\
    \ lastChar = words(txt.length-1)\n        val isLetter = lastChar.forall(_.isLetter)\n\
    \        val isNotWord = words.last.forall(_.contains(lastChar))\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLetter = lastChar.matches(\"[a-zA-Z]+\"\
    )\n        val isNotWord = words.last.contains(lastChar)\n        !isLetter &&\
    \ !isNotWord", "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.forall(_.isLetter)\n        val isNotWord = words.last.forall(_.contains(lastChar))\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]+\")\n        val isNotWord = words.last.contains(lastChar)\n        isLetter\
    \ && !isNotWord", "        val lastChar = txt.last\n        val lastCharIsLetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val lastCharIsNotWord = lastChar\
    \ != ' ' && lastChar != '?'\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.forall(_.isLetter)\n        val isNotWord = words.last.forall(_.contains(lastChar))\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \").toList\n\
    \        val lastChar = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \").toList\n        val lastChar = words(txt.length-1)\n        val isLetter\
    \ = lastChar.matches(\"[a-zA-Z]\")\n        val isNotWord = words.exists(word\
    \ => word.contains(lastChar))\n        isLetter && !isNotWord", "        val words\
    \ = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n        val\
    \ isLetter = lastChar.forall(Character.isLetter)\n        val isNotWord = words.last.forall(Character.isLetter)\n\
    \        !isLetter && !isNotWord", "        val words = txt.split(\" \")\n   \
    \     val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = lastWord.forall(x => x != lastChar)\n        isLetter && !isNotWord", "  \
    \      val words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.last\n        val lastCharIsLetter = lastChar.isLetter\n\
    \        val lastCharIsNotWord = lastChar.isLetterOrDigit\n        val lastCharIsNotWordOrSpace\
    \ = lastChar.isLetterOrDigit && !lastChar.isSpace\n        val lastCharIsNotWordOrSpaceOrNewLine\
    \ = lastChar.isLetterOrDigit && !lastChar.isSpace && !lastChar.isNewLine\n   \
    \     val lastCharIsNotWordOrSpaceOrNewLineOrNewLine = lastChar.isLetterOrDigit\
    \ && !lastChar.isSpace && !lastChar.isNewLine && !lastChar.isNewLine\n       \
    \ val lastCharIsNotWordOrSpaceOrNewLineOrNewLineOrNewLine = lastChar.isLetterOrDigit\
    \ && !lastChar.isSpace && !lastChar.isNewLine && !lastChar.isNewLine && !lastChar.isNewLine\n\
    \        val lastCharIsNotWordOrSpaceOrNewLineOrNewLineOrNewLineOrNewLine = lastChar.isLetterOrDigit\
    \ && !lastChar.isSpace && !lastChar.isNewLine && !lastChar.isNewLine && !lastChar.isNewLine\
    \ && !lastChar.isNewLine\n        val lastCharIsNotWordOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.isLetterOrDigit && !lastChar.isSpace && !lastChar.isNewLine && !lastChar.isNewLine\
    \ && !lastChar.isNewLine && !lastChar.isNewLine && !lastChar.isNewLine\n     \
    \   val lastCharIsNotWordOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.isLetterOrDigit && !lastChar.isSpace && !lastChar.isNewLine && !lastChar.isNewLine\
    \ && !lastChar.isNewLine && !lastChar.isNewLine && !lastChar.isNewLine && !lastChar.isNewLine\n\
    \        val lastCharIsNotWordOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.isLetterOrDigit && !lastChar.isSpace && !lastChar.isNewLine && !lastChar.isNewLine\
    \ && !lastChar.isNewLine && !lastChar.isNewLine && !lastChar.isNewLine && !lastChar.isNewLine\
    \ && !lastChar.isNewLine\n        val lastCharIsNotWordOrSpaceOrNewLineOrNewLine",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.toString.matches(\"[a-zA-Z]\")\n    \
    \    val lastCharIsNotWord = words.last.forall(_.toString.matches(\"[a-zA-Z]\"\
    ))\n        !lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLetter = lastChar.forall(_.isLetter)\n\
    \        val isNotWord = words.last.forall(_.contains(lastChar))\n        isLetter\
    \ && !isNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     lastCharIsLetter && !lastCharIsNotWord", "        var lastChar = txt.last\n\
    \        var isLetter = true\n        for (c <- txt.dropRight(1)) {\n        \
    \    if (c.toString.toLowerCase != lastChar.toString.toLowerCase && c.toString.toLowerCase\
    \ != \" \") {\n                isLetter = false\n            }\n            lastChar\
    \ = c\n        }\n        return isLetter", "        val lastChar = txt.last\n\
    \        val isLetter = lastChar match {\n            case c if c.isLetter =>\
    \ true\n            case _ => false\n        }\n        val isNotWord = txt.split(\"\
    \ \").lastOption match {\n            case Some(word) if word.contains(lastChar)\
    \ => false\n            case _ => true\n        }\n        isLetter && !isNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.matches(\"[a-zA-Z]\")\n        val isNotWord\
    \ = words.lastOption.exists(word => word.contains(lastChar))\n        !isLetter\
    \ && !isNotWord", "        val lastChar = txt.last\n        val lastCharIsLetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val lastCharIsNotWord = lastChar\
    \ != ' ' && lastChar != '\\t'\n        lastCharIsLetter && lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        !lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.matches(\"[a-zA-Z]\")\n        val isNotWord\
    \ = words.last.contains(lastChar)\n        !isLetter && !isNotWord", "       \
    \ val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n \
    \       val lastCharIsLetter = lastChar.toString.isLetter\n        val lastCharIsNotWord\
    \ = words.last.contains(lastChar)\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.matches(\"[a-zA-Z]\")\n        !isLetter", " \
    \       val words = txt.split(\" \").toList\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.last\n        val isLetter = lastChar.isLetter\n\
    \        val isNotWord = lastWord.forall(_.isLetter)\n        isLetter && !isNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = txt.last\n       \
    \ val lastCharIsLetter = lastChar.toString.isLetter\n        val lastCharIsNotWord\
    \ = words.last.contains(lastChar)\n        val lastCharIsNotWordButNotLastChar\
    \ = words.last.contains(lastChar) && !lastChar.isLetter\n        val lastCharIsNotWordButNotLastCharButNotFirstChar\
    \ = words.last.contains(lastChar) && !lastChar.isLetter && !words.last.contains(txt.head)\n\
    \        val lastCharIsNotWordButNotLastCharButNotFirstCharButNotLastChar = words.last.contains(lastChar)\
    \ && !lastChar.isLetter && !words.last.contains(txt.head) && !txt.last.isLetter\n\
    \        val lastCharIsNotWordButNotLastCharButNotFirstCharButNotLastCharButNotFirstChar\
    \ = words.last.contains(lastChar) && !lastChar.isLetter && !words.last.contains(txt.head)\
    \ && !txt.last.isLetter && !txt.head.isLetter\n        val lastCharIsNotWordButNotLastCharButNotFirstCharButNotLastCharButNotFirstCharButNotLastChar\
    \ = words.last.contains(lastChar) && !lastChar.isLetter && !words.last.contains(txt.head)\
    \ && !txt.last.isLetter && !txt.head.isLetter && !txt.last.isLetter\n        val\
    \ lastCharIsNotWordButNotLastCharButNotFirstCharButNotLastCharButNotFirstCharButNotLastCharButNotFirstChar\
    \ = words.last.contains(lastChar) && !lastChar.isLetter && !words.last.contains(txt.head)\
    \ && !txt.last.isLetter && !txt.head.isLetter && !txt.last.isLetter && !txt.head.isLetter\n\
    \        val lastCharIsNotWordButNotLastCharButNotFirstCharButNotLastCharButNotFirstCharButNotLastCharButNotFirstCharButNotLastChar\
    \ = words.last.contains(lastChar) && !lastChar.isLetter && !words.last.contains(txt.head)\
    \ && !txt.last.isLetter && !txt.head.isLetter && !txt.last.isLetter && !txt.head.isLetter\
    \ && !txt.last.isLetter\n        val lastCharIsNotWordButNotLastCharButNotFirstCharButNotLastCharButNotFirstCharButNotLastCharButNotFirstCharButNotLastCharButNotFirstChar\
    \ = words.last.contains(lastChar) && !lastChar.isLetter && !words.last.contains(txt.head",
  "        val words = txt.split(\" \")\n        val lastWord = words(words.length-1)\n\
    \        val lastChar = lastWord.last\n        val isLetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        !isLetter", "        val lastChar = txt.last\n \
    \       val lastCharIsLetter = lastChar >= 'a' && lastChar <= 'z'\n        val\
    \ lastCharIsNotWord = lastChar != ' ' && lastChar != '\\t'\n        lastCharIsLetter\
    \ && !lastCharIsNotWord", "        val lastChar = txt.last\n        val isLetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \"\
    ).lastOption.exists(_ == lastChar)\n        isLetter && !isNotWord", "       \
    \ val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n \
    \       val isLetter = lastChar.matches(\"[a-zA-Z]+\")\n        !isLetter", " \
    \       val lastChar = txt.last\n        val isLetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n\
    \        isLetter && !isNotWord", "        val lastChar = txt.last\n        val\
    \ isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\"\
    \ \").map(_.last).contains(lastChar)\n        isLetter && !isNotWord", "     \
    \   val lastChar = txt.last\n        val isLetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").last.contains(lastChar)\n \
    \       isLetter && !isNotWord", "        val words = txt.split(\" \")\n     \
    \   val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        !isLetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.toString.matches(\"[a-zA-Z]\")\n    \
    \    val lastCharIsNotWord = words.last.contains(lastChar)\n        lastCharIsLetter\
    \ && !lastCharIsNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val lastCharIsLetter = lastChar.toString.isLetter\n\
    \        val lastCharIsNotWord = lastChar.isLetter\n        val lastCharIsNotWordOrSpace\
    \ = lastChar.isLetter && !lastChar.isSpace\n        val lastCharIsNotWordOrSpaceOrEmpty\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isEmpty\n        val lastCharIsNotWordOrSpaceOrEmptyOrNull\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isEmpty && !lastChar.isNull\n\
    \        val lastCharIsNotWordOrSpaceOrEmptyOrNullOrEmpty = lastChar.isLetter\
    \ && !lastChar.isSpace && !lastChar.isEmpty && !lastChar.isNull && !lastChar.isEmpty\n\
    \        val lastCharIsNotWordOrSpaceOrEmptyOrNullOrEmptyOrNull = lastChar.isLetter\
    \ && !lastChar.isSpace && !lastChar.isEmpty && !lastChar.isNull && !lastChar.isEmpty\
    \ && !lastChar.isNull\n        val lastCharIsNotWordOrSpaceOrEmptyOrNullOrEmptyOrNull\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isEmpty && !lastChar.isNull\
    \ && !lastChar.isEmpty && !lastChar.isNull && !lastChar.isEmpty\n        val lastCharIsNotWordOrSpaceOrEmptyOrNullOrEmptyOrNull\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isEmpty && !lastChar.isNull\
    \ && !lastChar.isEmpty && !lastChar.isNull && !lastChar.isEmpty && !lastChar.isNull\n\
    \        val lastCharIsNotWordOrSpaceOrEmptyOrNullOrEmptyOrNullOrEmpty = lastChar.isLetter\
    \ && !lastChar.isSpace && !lastChar.isEmpty && !lastChar.isNull && !lastChar.isEmpty\
    \ && !lastChar.isNull && !lastChar.isEmpty && !lastChar.isNull && !lastChar.isEmpty\n\
    \        val lastCharIsNotWordOrSpaceOrEmptyOrNullOrEmptyOrNullOrEmpty = lastChar.isLetter\
    \ && !lastChar.isSpace && !lastChar.isEmpty && !lastChar.isNull && !lastChar.isEmpty\
    \ && !lastChar.isNull && !lastChar.isEmpty && !lastChar.isNull && !lastChar.isEmpty\
    \ && !lastChar.isNull\n        val lastCharIsNotWordOrSpaceOrEmptyOrNullOrEmptyOrNullOrEmpty\
    \ = lastChar.is", "        val words = txt.split(\" \")\n        val lastWord\
    \ = words(words.length-1)\n        val lastChar = lastWord.charAt(lastWord.length-1)\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        !isLetter",
  "        val lastChar = txt.last\n        val lastCharIsLetter = lastChar match\
    \ {\n            case c if c.isLetter => true\n            case _ => false\n \
    \       }\n        val lastCharIsNotWord = lastChar match {\n            case\
    \ c if c.isLetter && c.isLetter && c.isLetter => false\n            case _ =>\
    \ true\n        }\n        lastCharIsLetter && !lastCharIsNotWord", "        val\
    \ words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n     \
    \   val lastCharIsLetter = lastChar.toString.matches(\"[a-zA-Z]\")\n        val\
    \ lastCharIsNotWord = words.last.forall(_.toString.matches(\"[a-zA-Z]\"))\n  \
    \      !lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLetter = lastChar.isLetter\n        val isNotWord = lastWord.forall(_.isLetter)\n\
    \        isLetter && !isNotWord", "        val lastChar = txt.last\n        val\
    \ lastCharIsLetter = lastChar >= 'a' && lastChar <= 'z'\n        val lastCharIsNotWord\
    \ = lastChar != ' ' && lastChar != '\\t'\n        lastCharIsLetter && lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        !lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        !lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLetter = lastChar.forall(_.isLetter)\n        val isNotWord = words.last.forall(_.contains(lastChar))\n\
    \        isLetter && !isNotWord", "        val words = txt.split(\" \")\n    \
    \    val lastChar = words(txt.length-1)\n        val lastCharIsLetter = lastChar.forall(_.isLetter)\n\
    \        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n   \
    \     lastCharIsLetter && !lastCharIsNotWord", "        val lastChar = txt.last\n\
    \        if(lastChar.isLetter) {\n            val words = txt.split(\" \").filter(_.nonEmpty)\n\
    \            val lastWord = words.last\n            val lastWordChar = lastWord.last\n\
    \            if(lastWordChar.isLetter) {\n                val lastWordChars =\
    \ lastWord.dropRight(1).mkString\n                if(lastWordChars.contains(lastChar))\
    \ {\n                    return false\n                }\n            }\n    \
    \    }\n        return true", "        val words = txt.split(\" \")\n        val\
    \ lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n   \
    \     val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        !isLetter", " \
    \       val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord\
    \ = words.last.forall(_.contains(lastChar))\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.toString.isLetter\n        val lastCharIsNotWord\
    \ = words.last.contains(lastChar)\n        val isLastCharNotWord = lastCharIsNotWord\
    \ && lastCharIsLetter\n        isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.split(\" \").map(_.last).contains(lastChar)\n        isLetter && !isNotWord",
  "        val lastChar = txt.last\n        val isLetter = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").lastOption.exists(_ == lastChar)\n\
    \        isLetter && !isNotWord", "        val lastChar = txt.last\n        val\
    \ lastCharIsLetter = lastChar >= 'a' && lastChar <= 'z'\n        val lastCharIsNotWord\
    \ = lastChar != ' ' && lastChar != '\\n'\n        lastCharIsLetter && !lastCharIsNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsLetter = lastChar.toString.matches(\"[a-zA-Z]\")\n    \
    \    val lastCharIsNotWord = words.last.forall(_.toString.matches(\"[a-zA-Z]\"\
    ))\n        !lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.forall(Character.isLetter)\n        val lastCharIsNotWord = words.last.forall(Character.isLetter)\n\
    \        !lastCharIsLetter && !lastCharIsNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val lastCharIsLetter\
    \ = lastChar.forall(_.isLetter)\n        val lastCharIsNotWord = words.last.forall(_.contains(lastChar))\n\
    \        !lastCharIsLetter && !lastCharIsNotWord"]
stop_tokens:
- "\n    }\n"

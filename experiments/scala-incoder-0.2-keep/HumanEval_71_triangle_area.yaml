name: HumanEval_71_triangle_area
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given the lengths of the three sides of a triangle. Return the area of\n\
  \    // the triangle rounded to 2 decimal points if the three sides form a valid\
  \ triangle. \n    // Otherwise return -1\n    // Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n    // than the third side.\n    //\
  \ Example:\n    // triangle_area(3, 4, 5) == 6.00\n    // triangle_area(1, 2, 10)\
  \ == -1\n    def triangleArea(a : Long, b : Long, c : Long) : Float = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((3l),\
  \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == -1l);\n\
  \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
  \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == -1l);\n\
  \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
  \ (6l), (3l)) == -1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
  \    assert(triangleArea((2l), (2l), (10l)) == -1l);\n    }\n\n}\n"
completions: ["        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n\
    \        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n     \
    \   val bca = math.abs(bc - ab)\n        val abcb = math.abs(abc + bc)\n     \
    \   val abcca = math.abs(abc + ac)\n        val abccaa = math.abs(abc + abc)\n\
    \        val abccaab = math.abs(abc + abc)\n        val abccaabc = math.abs(abc\
    \ + abc)\n        val abccaabcb = math.abs(abc + abc)\n        val abccaabcca\
    \ = math.abs(abc + abc)\n        val abccaabccaa = math.abs(abc + abc)\n     \
    \   val abccaabccaab = math.abs(abc + abc)\n        val abccaabccaabc = math.abs(abc\
    \ + abc)\n        val abccaabccaabcb = math.abs(abc + abc)\n        val abccaabccaabcca\
    \ = math.abs(abc + abc)\n        val abccaabccaabccaa = math.abs(abc + abc)\n\
    \        val abccaabccaabccaab = math.abs(abc + abc)\n        val abccaabccaabccaabc\
    \ = math.abs(abc + abc)\n        val abccaabccaabccaabcb = math.abs(abc + abc)\n\
    \        val abccaabccaabccaabcca = math.abs(abc + abc)\n        val abccaabccaabccaabccaa\
    \ = math.abs(abc + abc)\n        val abccaabccaabccaabccaab = math.abs(abc + abc)\n\
    \        val abccaabccaabccaabccaabc = math.abs(abc + abc)\n        val abccaabccaabccaabccaabcb\
    \ = math.abs(abc + abc)\n        val abccaabccaabccaabccaabcca = math.abs(abc\
    \ + abc)\n        val abccaabccaabccaabccaabccaa = math.abs(abc + abc)\n     \
    \   val abccaabccaabccaabccaabccaab = math.abs(abc + abc)\n        val abccaabccaabccaabccaabccaabc\
    \ = math.abs(abc + abc)\n        val abccaabccaabccaabccaabccaabcb = math.abs(abc\
    \ + abc)\n        val abccaabccaabccaabccaabccaabcca = math.abs(abc + abc)\n \
    \       val abccaabccaabccaabccaabcca", "        val a = math.abs(a)\n       \
    \ val b = math.abs(b)\n        val c = math.abs(c)\n        val sum = a + b +\
    \ c\n        if (sum > c) {\n            val d = math.abs(a - b - c)\n       \
    \     val e = math.abs(a + b - c)\n            val f = math.abs(a - b + c)\n \
    \           val g = math.abs(a + b + c)\n            val area = if (d < e && d\
    \ < f && d < g) d else -1\n            area\n        } else {\n            -1\n\
    \        }", "        val a = math.abs(a)\n        val b = math.abs(b)\n     \
    \   val c = math.abs(c)\n        val sum = a + b + c\n        if (sum > c) {\n\
    \            val area = math.sqrt((b * b) - (a * c))\n            area / 2\n \
    \       } else {\n            -1\n        }", "        val a = Math.sqrt(a * a)\n\
    \        val b = Math.sqrt(b * b)\n        val c = Math.sqrt(c * c)\n        val\
    \ s = (a + b + c) / 2\n        if (s > 0) {\n            val area = s * (s - a)\
    \ * (s - b) * (s - c)\n            val rounded = area.toString.split(\"\\\\.\"\
    ).map(_.toInt).map(_ * 100).sum\n            rounded.toFloat\n        } else {\n\
    \            -1\n        }", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n\
    \        val c1 = Math.abs(c)\n        val sides = List(a1, b1, c1)\n        val\
    \ sum = sides.sum\n        if (sum > a1 + b1 + c1) return -1\n        val a2 =\
    \ a1 - sum\n        val b2 = b1 - sum\n        val c2 = c1 - sum\n        val\
    \ a3 = a1 + b1 + c1 - sum\n        val b3 = b1 + a1 + c1 - sum\n        val c3\
    \ = c1 + a1 + b1 - sum\n        val a4 = a2 + b2 + c2 - sum\n        val b4 =\
    \ b2 + a2 + c2 - sum\n        val c4 = c2 + a2 + b2 - sum\n        val a5 = a3\
    \ + b3 + c3 - sum\n        val b5 = b3 + a3 + c3 - sum\n        val c5 = c3 +\
    \ a3 + b5 - sum\n        val a6 = a4 + b4 + c5 - sum\n        val b6 = b4 + a4\
    \ + c5 - sum\n        val c6 = c5 + a4 + b6 - sum\n        val a7 = a5 + b5 +\
    \ c6 - sum\n        val b7 = b5 + a5 + c6 - sum\n        val c7 = c6 + a5 + b7\
    \ - sum\n        val a8 = a7 + b7 + c7 - sum\n        val b8 = b7 + a7 + c7 -\
    \ sum\n        val c8 = c7 + a7 + b8 - sum\n        val a9 = a8 + b8 + c8 - sum\n\
    \        val b9 = b8 + a8 + c8 - sum\n        val c9 = c8 + a8 + b9 - sum\n  \
    \      val a10 = a9 + b9 + c9 - sum\n        val b10 = b9 + a9 + c9 - sum\n  \
    \      val c10 = c9 + a9 + b10 - sum\n        val a11 = a10 + b10 + c10 - sum\n\
    \        val b11 = b10 + a10 + c10 - sum\n        val c11 = c10 + a10 + b11 -\
    \ sum\n        val a12 = a11 + b11 + c11 - sum\n        val b12 = b11 + a11 +\
    \ c11 - sum\n        val c12 = c11 + a11 + b12 - sum\n        val a13 = a12 +\
    \ b12 + c12 - sum\n        val b13 = b12 + a12 + c12 - sum\n        val c13 =\
    \ c12 + a12 + b13 - sum\n        val a14 = a13 + b13 + c13 - sum\n        val\
    \ b14", "        val a = Math.abs(a)\n        val b = Math.abs(b)\n        val\
    \ c = Math.abs(c)\n        val sum = a + b + c\n        if (sum > 0) {\n     \
    \       val area = a / Math.sqrt(b * b + c * c)\n            val rounded = area\
    \ * 100\n            rounded.toFloat\n        } else {\n            -1.0\n   \
    \     }", "        val sides = List(a, b, c).sorted\n        val sum = sides.sum\n\
    \        if (sum > sides(2)) sides(2).toFloat else -1", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val s = (a\
    \ + b + c) / 2\n        val area = if (s > a) s * (b - c) / 2 else if (s > b)\
    \ s * (c - a) / 2 else if (s > c) s * (a - b) / 2 else -1\n        area", "  \
    \      val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n      \
    \  val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n    \
    \    val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n  \
    \      val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5\
    \ + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7)", "        val sum = a + b + c\n\
    \        if (sum > 0) {\n            val area = a / sum * b / sum * c / sum\n\
    \            if (area > 0)\n                area.toFloat\n            else\n \
    \               -1\n        } else {\n            -1\n        }", "        val\
    \ a = Math.sqrt(a * a)\n        val b = Math.sqrt(b * b)\n        val c = Math.sqrt(c\
    \ * c)\n        val s = (a + b + c) / 2\n        if (s > a * a + b * b + c * c)\
    \ {\n            val d = Math.sqrt(a * a + b * b)\n            val e = Math.sqrt(c\
    \ * c + d * d)\n            val f = Math.sqrt(a * a + c * c)\n            val\
    \ g = Math.sqrt(b * b + d * d)\n            val h = Math.sqrt(c * c + e * e)\n\
    \            val area = f * g / h\n            area\n        } else {\n      \
    \      -1\n        }", "        val sum = a + b + c\n        if (sum > 0) {\n\
    \            val area = (a + b + c) / 2.0\n            val area2 = (a * b * c)\
    \ / 4.0\n            val area3 = (a * b * c * sum) / 6.0\n            val area4\
    \ = (a * b * c * sum * sum) / 24.0\n            val area5 = (a * b * c * sum *\
    \ sum * sum) / 120.0\n            val area6 = (a * b * c * sum * sum * sum * sum)\
    \ / 720.0\n            val area7 = (a * b * c * sum * sum * sum * sum * sum) /\
    \ 5040.0\n            val area8 = (a * b * c * sum * sum * sum * sum * sum * sum)\
    \ / 40320.0\n            val area9 = (a * b * c * sum * sum * sum * sum * sum\
    \ * sum * sum) / 362880.0\n            val area10 = (a * b * c * sum * sum * sum\
    \ * sum * sum * sum * sum * sum) / 3628800.0\n            val area11 = (a * b\
    \ * c * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum) / 39916800.0\n\
    \            val area12 = (a * b * c * sum * sum * sum * sum * sum * sum * sum\
    \ * sum * sum * sum * sum) / 479001600.0\n            val area13 = (a * b * c\
    \ * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum) / 6227020800.0\n\
    \            val area14 = (a * b * c * sum * sum * sum * sum * sum * sum * sum\
    \ * sum * sum * sum * sum * sum * sum * sum) / 7256448000.0\n            val area15\
    \ = (a * b * c * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum\
    \ * sum * sum * sum * sum) / 8000000000.0\n            val area16 = (a * b * c\
    \ * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum\
    \ * sum * sum * sum) / 9223372036854775808.0\n            val area17 = (a * b\
    \ * c * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum\
    \ * sum * sum * sum * sum * sum * sum) / 1000000000000.0\n            val area18\
    \ = (a * b", "        val a1 = math.abs(a) + math.abs(b) + math.abs(c)\n     \
    \   val a2 = math.abs(a) + math.abs(b) - math.abs(c)\n        val a3 = math.abs(a)\
    \ - math.abs(b) + math.abs(c)\n        val a4 = math.abs(a) - math.abs(b) - math.abs(c)\n\
    \        val a5 = math.abs(a) + math.abs(b) - math.abs(c)\n        val a6 = math.abs(a)\
    \ - math.abs(b) + math.abs(c)\n        val a7 = math.abs(a) - math.abs(b) - math.abs(c)\n\
    \        val a8 = math.abs(a) + math.abs(b) - math.abs(c)\n        val a9 = math.abs(a)\
    \ - math.abs(b) + math.abs(c)\n        val a10 = math.abs(a) + math.abs(b) + math.abs(c)\n\
    \        val a11 = math.abs(a) - math.abs(b) + math.abs(c)\n        val a12 =\
    \ math.abs(a) - math.abs(b) - math.abs(c)\n        val a13 = math.abs(a) + math.abs(b)\
    \ - math.abs(c)\n        val a14 = math.abs(a) - math.abs(b) + math.abs(c)\n \
    \       val a15 = math.abs(a) - math.abs(b) - math.abs(c)\n        val a16 = math.abs(a)\
    \ + math.abs(b) + math.abs(c)\n        val a17 = math.abs(a) - math.abs(b) + math.abs(c)\n\
    \        val a18 = math.abs(a) - math.abs(b) - math.abs(c)\n        val a19 =\
    \ math.abs(a) + math.abs(b) - math.abs(c)\n        val a20 = math.abs(a) - math.abs(b)\
    \ + math.abs(c)\n        val a21 = math.abs(a) - math.abs(b) - math.abs(c)\n \
    \       val a22 = math.abs(a) + math.abs(b) - math.abs(c)\n        val a23 = math.abs(a)\
    \ - math.abs(b) + math.abs(c)\n        val a24 = math.abs(a) - math.abs(b) - math.abs(c)\n\
    \        val a25 = math.abs(a) + math.abs(b) + math.abs(c)\n        val a26 =\
    \ math.abs(a) - math.abs(b) + math.abs(c)\n        val a27 = math.abs(a) - math.abs(b)\
    \ - math.abs(c)\n        val a28 = math.abs(a) + math.abs(b) - math.abs(c)\n \
    \       val a29 = math.abs(a) - math.abs(b) + math.abs(c)\n        val a30 = math.abs(a)\
    \ - math.abs(b) - math.abs(c)\n        val a31 = math.abs(a) + math.abs(b) - math.abs(c)",
  "        val a1 = a + b\n        val a2 = a + c\n        val b1 = b + c\n      \
    \  val b2 = b + a\n        val c1 = c + a\n        val c2 = c + b\n        val\
    \ d1 = b2 - b1\n        val d2 = c2 - c1\n        val d3 = a2 - a1\n        if\
    \ (d1 < 0 && d2 < 0 && d3 < 0) return -1\n        if (d1 < 0 && d2 < 0 && d3 >\
    \ 0) return -1\n        if (d1 < 0 && d2 > 0 && d3 < 0) return -1\n        if\
    \ (d1 < 0 && d2 > 0 && d3 > 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 <\
    \ 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 > 0) return -1\n        if\
    \ (d1 > 0 && d2 > 0 && d3 < 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 >\
    \ 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 < 0) return -1\n        if\
    \ (d1 > 0 && d2 < 0 && d3 > 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 <\
    \ 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 > 0) return -1\n        if\
    \ (d1 > 0 && d2 < 0 && d3 < 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 >\
    \ 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 < 0) return -1\n        if\
    \ (d1 > 0 && d2 > 0 && d3 > 0) return -1\n        if (d1 < 0 && d2 < 0 && d3 <\
    \ 0) return -1\n        if (d1 < 0 && d2 < 0 && d3 > 0) return -1\n        if\
    \ (d1 < 0 && d2 > 0 && d3 < 0) return -1\n        if (d1 < 0 && d2 > 0 && d3 >\
    \ 0) return -1\n        if (d1 < 0 && d2 > 0 && d3 < 0) return -1\n        if\
    \ (d1 < 0 && d2 > 0 && d3 > 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 <\
    \ 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 > 0) return -1\n        if\
    \ (d1 > 0 && d2 > 0 && d3 < 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 >\
    \ 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 < 0) return -1\n        if\
    \ (d1 > 0 && d2 < 0 && d3 > 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 <\
    \ 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 > 0) return -1\n        if\
    \ (d1 < 0 && d2 < 0 && d3 < 0) return -1\n        if (d1 < 0 && d2 < 0 && d3 >\
    \ 0) return -1", "        val a1 = a / 2.0\n        val b1 = b / 2.0\n       \
    \ val c1 = c / 2.0\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n   \
    \     val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n \
    \       val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n\
    \        val c8 = c7 + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n\
    \        val c9 = c8 + a8\n        val a10 = a9 + b9\n        val b10 = b9 + c9\n\
    \        val c10 = c9 + a9\n        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3\
    \ + c3) * (a4 + b4 + c4) * (a5 + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7) *\
    \ (a8 + b8 + c8) * (a9 + b9 + c9) * (a10 + b10 + c10)", "        val sides = List(a,\
    \ b, c)\n        val sum = sides.sum\n        val isValid = sides.forall(s =>\
    \ s > 0)\n        val area = if (isValid) sides.sum * sides.sum / 2 else -1\n\
    \        val rounded = if (isValid) area.toString.toDouble / 2 else -1\n     \
    \   rounded", "        val a1 = (a + b) / 2\n        val a2 = (b + c) / 2\n  \
    \      val a3 = (c + a) / 2\n        val b1 = (a + c) / 2\n        val b2 = (c\
    \ + b) / 2\n        val b3 = (b + a) / 2\n        val c1 = (a + b) / 2\n     \
    \   val c2 = (b + c) / 2\n        val c3 = (c + a) / 2\n        val d1 = (a +\
    \ c) / 2\n        val d2 = (c + b) / 2\n        val d3 = (b + a) / 2\n       \
    \ val e1 = (a + b) / 2\n        val e2 = (b + c) / 2\n        val e3 = (c + a)\
    \ / 2\n        val f1 = (a + c) / 2\n        val f2 = (b + c) / 2\n        val\
    \ f3 = (c + a) / 2\n        val g1 = (a + b) / 2\n        val g2 = (b + c) / 2\n\
    \        val g3 = (c + a) / 2\n        val h1 = (a + b) / 2\n        val h2 =\
    \ (b + c) / 2\n        val h3 = (c + a) / 2\n        val i1 = (a + c) / 2\n  \
    \      val i2 = (b + c) / 2\n        val i3 = (c + a) / 2\n        val j1 = (a\
    \ + b) / 2\n        val j2 = (b + c) / 2\n        val j3 = (c + a) / 2\n     \
    \   val k1 = (a + c) / 2\n        val k2 = (b + c) / 2\n        val k3 = (c +\
    \ a) / 2\n        val l1 = (a + b) / 2\n        val l2 = (b + c) / 2\n       \
    \ val l3 = (c + a) / 2\n        val m1 = (a + c) / 2\n        val m2 = (b + c)\
    \ / 2\n        val m3 = (c + a) / 2\n        val n1 = (a + b) / 2\n        val\
    \ n2 = (b + c) / 2\n        val n3 = (c + a) / 2\n        val o1 = (a + c) / 2\n\
    \        val o2 = (b + c) / 2\n        val o3 = (c + a) / 2\n        val p1 =\
    \ (a + b) / 2\n        val p2 = (b + c) / 2\n        val p3 = (c + a) / 2\n  \
    \      val q1 = (a + c) / 2\n        val q2 = (b + c) / 2\n        val q3 = (c\
    \ + a) / 2\n        val r1 = (a + b) / 2\n        val r2 = (b + c) / 2\n     \
    \   val r3 = (c + a) / 2\n        val s1 = (a + c) / 2\n        val s2 = (b +\
    \ c) / 2\n        val s3 = (c + a) / 2\n        val t1 = (a + b) / 2\n        ",
  "        val sides = List(a, b, c).sorted\n        val sum = sides.sum\n       \
    \ if (sum > sides.last) sides.last else -1", "        val a1 = a + b\n       \
    \ val a2 = a + c\n        val b2 = b + c\n        val a3 = a1 + a2\n        val\
    \ b3 = b1 + b2\n        val c3 = b2 + c1\n        val a4 = a1 + a3\n        val\
    \ b4 = b1 + b4\n        val c4 = b2 + c4\n        val a5 = a3 + a4\n        val\
    \ b5 = b3 + b4\n        val c5 = c3 + c4\n        val a6 = a3 + a5\n        val\
    \ b6 = b3 + b5\n        val c6 = c3 + c6\n        val a7 = a5 + a6\n        val\
    \ b7 = b5 + b6\n        val c7 = c6 + c7\n        val a8 = a7 + a8\n        val\
    \ b8 = b7 + b8\n        val c8 = c7 + c8\n        val a9 = a8 + a9\n        val\
    \ b9 = b8 + b9\n        val c9 = c8 + c9\n        val a10 = a9 + a10\n       \
    \ val b10 = b9 + b10\n        val c10 = c9 + c10\n        val a11 = a10 + a11\n\
    \        val b11 = b10 + b11\n        val c11 = c10 + c11\n        val a12 = a11\
    \ + a12\n        val b12 = b11 + b12\n        val c12 = c11 + c12\n        val\
    \ a13 = a12 + a13\n        val b13 = b12 + b13\n        val c13 = c12 + c13\n\
    \        val a14 = a13 + a14\n        val b14 = b13 + b14\n        val c14 = c13\
    \ + c14\n        val a15 = a14 + a15\n        val b15 = b14 + b15\n        val\
    \ c15 = c14 + c15\n        val a16 = a15 + a16\n        val b16 = b15 + b16\n\
    \        val c16 = c15 + c16\n        val a17 = a16 + a17\n        val b17 = b16\
    \ + b17\n        val c17 = c16 + c17\n        val a18 = a17 + a18\n        val\
    \ b18 = b17 + b18\n        val c18 = c17 + c18\n        val a19 = a18 + a19\n\
    \        val b19 = b18 + b19\n        val c19 = c18 + c19\n        val a20 = a19\
    \ + a20\n        val b20 = b19 + b20\n        val c20 = c19 + c20\n        val ",
  "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n\
    \        val sides = List(a1, b1, c1)\n        val sum = sides.sum\n        if\
    \ (sum > sides.last) sides.last\n        else sides.sum.toFloat", "        val\
    \ a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val sum = a + b + c\n        if (sum > c) {\n            return sum.toFloat\n\
    \        } else {\n            return -1.0\n        }", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val sum = a\
    \ + b + c\n        if (sum > c) {\n            val a = math.abs(a)\n         \
    \   val b = math.abs(b)\n            val c = math.abs(c)\n            val sum\
    \ = a + b + c\n            if (sum > c) {\n                val a = math.abs(a)\n\
    \                val b = math.abs(b)\n                val c = math.abs(c)\n  \
    \              val sum = a + b + c\n                if (sum > c) {\n         \
    \           val a = math.abs(a)\n                    val b = math.abs(b)\n   \
    \                 val c = math.abs(c)\n                    val sum = a + b + c\n\
    \                    if (sum > c) {\n                        val a = math.abs(a)\n\
    \                        val b = math.abs(b)\n                        val c =\
    \ math.abs(c)\n                        val sum = a + b + c\n                 \
    \       if (sum > c) {\n                            val a = math.abs(a)\n    \
    \                        val b = math.abs(b)\n                            val\
    \ c = math.abs(c)\n                            val sum = a + b + c\n         \
    \                   if (sum > c) {\n                                val a = math.abs(a)\n\
    \                                val b = math.abs(b)\n                       \
    \         val c = math.abs(c)\n                                val sum = a + b\
    \ + c\n                                if (sum > c) {\n                      \
    \              val a = math.abs(a)\n                                    val b\
    \ = math.abs(b)\n                                    val c = math.abs(c)\n   \
    \                                 val sum = a + b + c\n                      \
    \              if (sum > c) {\n                                        val a =\
    \ math.abs(a)\n                                        val b = math.abs(b)\n \
    \                                       val c = math.abs(c)\n                \
    \                        val sum = a + b + c\n                               \
    \         if (sum > c) {\n                                            val a =\
    \ math.abs(a)\n                                            val b = math.abs(b)\n\
    \                                            val c = math.abs(c)\n           \
    \                                 val sum = a + b + c\n                      \
    \                      if (sum > c) {\n                                      \
    \          val a = math.abs(a)\n                                             \
    \   val b = math.abs(b)\n                                                val c\
    \ = math.abs(c)\n                                                val sum = a +\
    \ b + c\n                                                if (sum > c) {\n    \
    \                                                val a = math.abs(a)\n       \
    \                                             val b = math.abs(b)\n          \
    \                                          val c = math.abs(c)\n             \
    \                                       val sum = a + b + c\n                \
    \                                    if (sum > c) {\n                        \
    \                                val a = math.abs(a)\n                       \
    \                                 val b = math.abs(b)\n                      \
    \                                  val c = math.abs(c)\n                     \
    \                                   val sum = a + b + c\n                    \
    \                                    if (sum > c) {\n                        \
    \                                    val a = math.abs(a)\n                   \
    \                                         val b = math.abs(b)\n              \
    \                                              val c = math.abs(c)\n         \
    \                                                   val sum = a + b + c\n    \
    \                                                        if (sum > c) {\n    \
    \                                                            val a = math.abs(a)\n\
    \                                                                val b = math.abs(b)\n\
    \                                                                val c = math.abs(c)\n\
    \                                                                val sum = a +\
    \ b + ", "        val a1 = (a + b) / 2\n        val a2 = (b + c) / 2\n       \
    \ val a3 = (c + a) / 2\n        val a4 = (a1 + a2 + a3) / 2\n        val a5 =\
    \ (a2 + a3 + a4) / 2\n        val a6 = (a3 + a4 + a5) / 2\n        val a7 = (a4\
    \ + a5 + a6) / 2\n        val a8 = (a5 + a6 + a7) / 2\n        val a9 = (a6 +\
    \ a7 + a8) / 2\n        val a10 = (a7 + a8 + a9) / 2\n        val a11 = (a8 +\
    \ a9 + a10) / 2\n        val a12 = (a9 + a10 + a11) / 2\n        val a13 = (a10\
    \ + a11 + a12) / 2\n        val a14 = (a11 + a12 + a13) / 2\n        val a15 =\
    \ (a12 + a13 + a14) / 2\n        val a16 = (a13 + a14 + a15) / 2\n        val\
    \ a17 = (a14 + a15 + a16) / 2\n        val a18 = (a15 + a16 + a17) / 2\n     \
    \   val a19 = (a16 + a17 + a18) / 2\n        val a20 = (a17 + a18 + a19) / 2\n\
    \        val a21 = (a18 + a19 + a20) / 2\n        val a22 = (a19 + a20 + a21)\
    \ / 2\n        val a23 = (a20 + a21 + a22) / 2\n        val a24 = (a21 + a22 +\
    \ a23) / 2\n        val a25 = (a22 + a23 + a24) / 2\n        val a26 = (a23 +\
    \ a24 + a25) / 2\n        val a27 = (a24 + a25 + a26) / 2\n        val a28 = (a25\
    \ + a26 + a27) / 2\n        val a29 = (a26 + a27 + a28) / 2\n        val a30 =\
    \ (a27 + a28 + a29) / 2\n        val a31 = (a28 + a29 + a30) / 2\n        val\
    \ a32 = (a29 + a30 + a31) / 2\n        val a33 = (a30 + a31 + a32) / 2\n     \
    \   val a34 = (a31 + a32 + a33) / 2\n        val a35 = (a32 + a33 + a34) / 2\n\
    \        val a36 = (a33 + a34 + a35) / 2\n        val a37 = (a34 + a35 + a36)\
    \ / 2\n        val a38 = (a35 + a36 + a37) / 2\n        val a39 = (a36 + a37 +\
    \ a38) / 2\n        val a40 = (a37 + a38 + a39) / 2\n        val a41 = (a38 +\
    \ a39 + a40) / 2\n        val a42 = (a39 + a40 + a41) / 2\n        val a43 = (a40\
    \ + a41 + a42) / 2\n        val a44 = (a4", "        val a1 = a / 2\n        val\
    \ b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n        val b2\
    \ = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3\
    \ = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4\
    \ = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5\
    \ = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6\
    \ = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7\
    \ = b6 + c6\n        val c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8\
    \ = b7 + c7\n        val c8 = c7 + a7\n        val a9 = a8 + b8\n        val b9\
    \ = b8 + c8\n        val c9 = c8 + a8\n        val a10 = a9 + b9\n        val\
    \ b10 = b9 + c9\n        val c10 = c9 + a9\n        (a1 + b1 + c1) * (a2 + b2\
    \ + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5 + b5 + c5) * (a6 + b6 + c6) *\
    \ (a7 + b7 + c7) * (a8 + b8 + c8) * (a9 + b9 + c9)", "        if (a + b > c) {\n\
    \            val d = b - c\n            val e = Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2))\n            val f = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2))\n      \
    \      val g = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2))\n            val area\
    \ = f * g\n            val rounded = (area / Math.pow(10, 2)).toFloat\n      \
    \      rounded\n        } else {\n            -1.0\n        }", "        val a\
    \ = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n  \
    \      val sum = a + b + c\n        if (sum > c) {\n            val area = math.pow(a\
    \ * b * c, 0.5)\n            val rounded = math.round(area * 100) / 100\n    \
    \        rounded\n        } else {\n            -1\n        }", "        val a1\
    \ = (a + b + c) / 2.0\n        val b1 = (a + b - c) / 2.0\n        val c1 = (a\
    \ - b - c) / 2.0\n        val a2 = (b + c + a) / 2.0\n        val b2 = (b + c\
    \ - a) / 2.0\n        val c2 = (b - c - a) / 2.0\n        val a3 = (a1 + b2 +\
    \ c) / 2.0\n        val b3 = (a1 + b2 - c) / 2.0\n        val c3 = (a1 - b2 -\
    \ c) / 2.0\n        val a4 = (a2 + b3 + c) / 2.0\n        val b4 = (a2 + b3 -\
    \ c) / 2.0\n        val c4 = (a2 - b3 - c) / 2.0\n        val a5 = (a3 + b4 +\
    \ c) / 2.0\n        val b5 = (a3 + b4 - c) / 2.0\n        val c5 = (a3 - b4 -\
    \ c) / 2.0\n        val a6 = (a4 + b5 + c) / 2.0\n        val b6 = (a4 + b5 -\
    \ c) / 2.0\n        val c6 = (a5 - b5 - c) / 2.0\n        val a7 = (a6 + b6 +\
    \ c) / 2.0\n        val b7 = (a6 + b6 - c) / 2.0\n        val c8 = (a6 - b6 -\
    \ c) / 2.0\n        (a1 + b2 + c1 + a2 + b3 + c2 + a3 + b4 + c3 + a4 + b5 + c4\
    \ + a5 + b6 + c7 + a6 + b7 + c8) / 8.0", "        val a = math.abs(a)\n      \
    \  val b = math.abs(b)\n        val c = math.abs(c)\n        val sum = a + b +\
    \ c\n        if (sum > c) {\n            val d = math.sqrt((a + b) * (b + c) *\
    \ (c + a))\n            val area = d * (b * c - a * b) / 2.0\n            area\n\
    \        } else {\n            -1.0\n        }", "        val area = (a + b +\
    \ c) / 2\n        val side1 = math.sqrt(a * a + b * b + c * c)\n        val side2\
    \ = math.sqrt(side1 * side1 + a * b + c * c)\n        val side3 = math.sqrt(side2\
    \ * side2 + a * a + b * b)\n        if (side1 + side2 > side3) {\n           \
    \ area\n        } else {\n            -1\n        }", "        val a1 = a / 2\n\
    \        val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n  \
    \      val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n\
    \        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n\
    \        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n\
    \        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n\
    \        val b7 = b6 + c6\n        val c7 = c6 + a6\n        (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5 + b5 + c5) * (a6 + b6\
    \ + c6) * (a7 + b7 + c7)", "        val a1 = b - c\n        val a2 = c - a\n \
    \       val a3 = b - a\n        val a4 = a - b\n        val a5 = b - a\n     \
    \   val a6 = b - a\n        val a7 = a - b\n        val a8 = a - b\n        val\
    \ a9 = a - b\n        val a10 = a - b\n        val a11 = a - b\n        val a12\
    \ = a - b\n        val a13 = a - b\n        val a14 = a - b\n        val a15 =\
    \ a - b\n        val a16 = a - b\n        val a17 = a - b\n        val a18 = a\
    \ - b\n        val a19 = a - b\n        val a20 = a - b\n        val a21 = a -\
    \ b\n        val a22 = a - b\n        val a23 = a - b\n        val a24 = a - b\n\
    \        val a25 = a - b\n        val a26 = a - b\n        val a27 = a - b\n \
    \       val a28 = a - b\n        val a29 = a - b\n        val a30 = a - b\n  \
    \      val a31 = a - b\n        val a32 = a - b\n        val a33 = a - b\n   \
    \     val a34 = a - b\n        val a35 = a - b\n        val a36 = a - b\n    \
    \    val a37 = a - b\n        val a38 = a - b\n        val a39 = a - b\n     \
    \   val a40 = a - b\n        val a41 = a - b\n        val a42 = a - b\n      \
    \  val a43 = a - b\n        val a44 = a - b\n        val a45 = a - b\n       \
    \ val a46 = a - b\n        val a47 = a - b\n        val a48 = a - b\n        val\
    \ a49 = a - b\n        val a50 = a - b\n        val a51 = a - b\n        val a52\
    \ = a - b\n        val a53 = a - b\n        val a54 = a - b\n        val a55 =\
    \ a - b\n        val a56 = a - b\n        val a57 = a - b\n        val a58 = a\
    \ - b\n        val a59 = a - b\n        val a60 = a - b\n        val a61 = a -\
    \ b\n        val a62 = a - b\n        val a63 = a - b\n        val a64 = a - b\n\
    \        val a65 = a - b\n        val a66 = a - b\n        val a67 = a - b\n",
  "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n\
    \        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5\
    \ + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7)", "        val sum = a + b + c\n\
    \        if (sum < 0) -1\n        else if (sum == 0) 0\n        else (sum / 2)\
    \ * Math.sqrt(Math.pow((a + b), 2) + Math.pow((a + c), 2) + Math.pow((b + c),\
    \ 2))", "        val sum = a + b + c\n        if (sum > 0)\n            a / sum\n\
    \        else\n            -1", "        val sides = List(a, b, c)\n        val\
    \ sum = sides.sum\n        val isValid = sides.forall(side => side > 0)\n    \
    \    if (isValid) {\n            val area = sides.product\n            val rounded\
    \ = area.toString.replaceAll(\"\\\\.[0-9]*$\", \"\")\n            val float =\
    \ rounded.toFloat\n            float\n        } else {\n            -1\n     \
    \   }", "        val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c /\
    \ 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 +\
    \ a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2\
    \ + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3\
    \ + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4\
    \ + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5\
    \ + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6\
    \ + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7\
    \ + a7\n        (a1 + b2 + c3 > a2 + b3 + c4 > a3 + b4 + c5 >\n            a4\
    \ + b5 + c6 >\n            a5 + b6 + c7 >\n            a6 + b7 + c8 >\n      \
    \      a7 + b8 + c9)\n            ? ((a1 + b2 + c3 > a2 + b3 + c4 > a3 + b4 +\
    \ c5 >\n                a4 + b5 + c6 >\n                a5 + b6 + c7 >\n     \
    \           a6 + b7 + c8 >\n                a7 + b8 + c9)\n                ? ((a1\
    \ + b2 + c3 > a2 + b3 + c4 > a3 + b4 + c5 >\n                    a4 + b5 + c6\
    \ >\n                    a5 + b6 + c7 >\n                    a6 + b7 + c8 >\n\
    \                    a7 + b8 + c9)\n                    ? ((a1 + b2 + c3 > a2\
    \ + b3 + c4 > a3 + b4 + c5 >\n                        a4 + b5 + c6 >\n       \
    \                 a5 + b6 + c7 >\n                        a6 + b7 + c8 >\n   \
    \                     a7 + b8 + c9)\n                        ? ((a1 + b2 + c3\
    \ > a2 + b3 + c4 > a3 + b4 + c5 >\n                            a4 + b5 + c6 >\n\
    \                            a5 + b6 + c7 >\n                            a6 +\
    \ b7 + c8 >\n                            a7 + b8 + c9)\n                     \
    \       ? ((a1 + b2 + c3 > a2 + b3 + c4 > a3 + b4 + c5 >\n                   \
    \             a4 + ", "        val a1 = a / 2.0\n        val b1 = b / 2.0\n  \
    \      val c1 = c / 2.0\n        val sum = a1 + b1 + c1\n        val a2 = a1 -\
    \ b1 - c1\n        val b2 = a1 - b1 + c1\n        val c2 = a1 + b1 - c1\n    \
    \    val a3 = a1 - b2 - c2\n        val b3 = a1 + b2 - c2\n        val c3 = a1\
    \ + b2 + c1\n        val a4 = a1 - b3 - c3\n        val b4 = a1 + b3 - c3\n  \
    \      val c4 = a1 + b3 + c1\n        val a5 = a1 - b4 - c4\n        val b5 =\
    \ a1 + b4 - c4\n        val c5 = a1 + b4 + c1\n        val a6 = a1 - b5 - c5\n\
    \        val b6 = a1 + b5 - c5\n        val c6 = a1 + b5 + c1\n        val a7\
    \ = a1 - b6 - c6\n        val b7 = a1 + b6 - c6\n        val c7 = a1 + b6 + c1\n\
    \        val a8 = a1 - b7 - c7\n        val b8 = a1 + b7 - c7\n        val c8\
    \ = a1 + b7 + c1\n        val a9 = a1 - b8 - c8\n        val b9 = a1 + b8 - c8\n\
    \        val c9 = a1 + b8 + c1\n        val a10 = a1 - b9 - c9\n        val b10\
    \ = a1 + b9 - c9\n        val c10 = a1 + b9 + c1\n        val a11 = a1 - b10 -\
    \ c10\n        val b11 = a1 + b10 - c10\n        val c11 = a1 + b10 + c1\n   \
    \     val a12 = a1 - b11 - c11\n        val b12 = a1 + b11 - c11\n        val\
    \ c12 = a1 + b11 + c1\n        val a13 = a1 - b12 - c12\n        val b13 = a1\
    \ + b12 - c12\n        val c13 = a1 + b12 + c1\n        val a14 = a1 - b13 - c13\n\
    \        val b14 = a1 + b13 - c13\n        val c14 = a1 + b13 + c1\n        val\
    \ a15 = a1 - b14 - c14\n        val b15 = a1 + b14 - c14\n        val c15 = a1\
    \ + b14 + c1\n        val a16 = a1 - b15 - c15\n        val b16 = a1 + b15 - c15\n\
    \        val c16 = a1 + b15 + c1\n        val a17 = a1 - b", "        val a1 =\
    \ Math.abs(a)\n        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n  \
    \      val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n\
    \        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5\
    \ + b5 + c5) * (a6 + b6 + c6)", "        val a = math.abs(a)\n        val b =\
    \ math.abs(b)\n        val c = math.abs(c)\n        val sum = a + b + c\n    \
    \    if (sum > c) {\n            return -1\n        }\n        val area = math.sqrt((a\
    \ + b) * (a + c) * (b + c))\n        val rounded = math.round(area * 100) / 100\n\
    \        if (rounded == area) {\n            return rounded\n        }\n     \
    \   return -1", "        val sides = List(a, b, c)\n        val sum = sides.sum\n\
    \        if (sum > sides.last) sides.last else -1", "        val a1 = (a + b +\
    \ c) / 2.0\n        val b1 = (b + c + a) / 2.0\n        val c1 = (c + a + b) /\
    \ 2.0\n        val abc = (a1 + b1 + c1)\n        val ab = (a1 + b1)\n        val\
    \ ac = (a1)\n        val bc = (b1)\n        val ca = (c1)\n        val abc = (a1\
    \ + b1 + c1)\n        val ab = (a1 + b1)\n        val ac = (a1)\n        val bc\
    \ = (b1)\n        val ca = (c1)\n        val abc = (a1 + b1 + c1)\n        val\
    \ ab = (a1 + b1)\n        val ac = (a1)\n        val bc = (b1)\n        val ca\
    \ = (c1)\n        val abc = (a1 + b1 + c1)\n        val ab = (a1 + b1)\n     \
    \   val ac = (a1)\n        val bc = (b1)\n        val ca = (c1)\n        val abc\
    \ = (a1 + b1 + c1)\n        val ab = (a1 + b1)\n        val ac = (a1)\n      \
    \  val bc = (b1)\n        val ca = (c1)\n        val abc = (a1 + b1 + c1)\n  \
    \      val ab = (a1 + b1)\n        val ac = (a1)\n        val bc = (b1)\n    \
    \    val ca = (c1)\n        val abc = (a1 + b1 + c1)\n        val ab = (a1 + b1)\n\
    \        val ac = (a1)\n        val bc = (b1)\n        val ca = (c1)\n       \
    \ val abc = (a1 + b1 + c1)\n        val ab = (a1 + b1)\n        val ac = (a1)\n\
    \        val bc = (b1)\n        val ca = (c1)\n        val abc = (a1 + b1 + c1)\n\
    \        val ab = (a1 + b1)\n        val ac = (a1)\n        val bc = (b1)\n  \
    \      val ca = (c1)\n        val abc = (a1 + b1 + c1)\n        val ab = (a1 +\
    \ b1)\n        val ac = (a1)\n        val bc = (b1)\n        val ca = (c1)\n \
    \       val abc = (a1 + b1 + c1)\n        val ab = (a1 + b1)\n        val ac =\
    \ (a1)\n        val bc = (b1)\n        val ca = (c1)\n        val abc = (a1 +\
    \ b1 + c1)\n        val ab = (a1 + b1)\n        val ac = (a1)\n        val bc\
    \ = (b1)\n        val ca = (c1)\n        val abc = (a1 + b1 + c1)", "        val\
    \ sides = List(a, b, c)\n        val sum = sides.sum\n        if (sum > sides.last)\
    \ sides.last else -1", "        val triangleArea = (a * b * c) / Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2))\n        val roundedArea = triangleArea.toString.replaceAll(\"\
    \\\\.\", \"\").replaceAll(\"\\\\,\", \"\").replaceAll(\"\\\\s\", \"\").replaceAll(\"\
    \\\\(\", \"\").replaceAll(\"\\\\)\", \"\")\n        val areaFloat = roundedAref.toFloat\n\
    \        areaFloat", "        val sides = List(a, b, c)\n        val sum = sides.sum\n\
    \        if (sum > sides.last) sides.last else -1", "        val a1 = (a + b)\
    \ / 2\n        val a2 = (a1 + c) / 2\n        val b1 = (b + c) / 2\n        val\
    \ b2 = (b1 + a) / 2\n        val c1 = (a + b) / 2\n        val c2 = (c1 + b) /\
    \ 2\n        val d1 = (b + c) / 2\n        val d2 = (d1 + c) / 2\n        val\
    \ area1 = (a1 + b1 + c1)\n        val area2 = (a2 + b2 + c2)\n        val area3\
    \ = (b1 + c1 + d1)\n        val area4 = (b2 + c2 + d2)\n        val area5 = (d1\
    \ + c1 + a1)\n        val area6 = (d2 + c2 + a2)\n        val area7 = (a1 + b2\
    \ + c2)\n        val area8 = (a2 + b2 + c1)\n        val area9 = (b1 + c2 + d2)\n\
    \        val area10 = (b2 + c2 + d1)\n        val area11 = (d1 + c2 + a2)\n  \
    \      val area12 = (d2 + c2 + a1)\n        val area13 = (a1 + b2 + c1)\n    \
    \    val area14 = (a2 + b2 + c2)\n        val area15 = (b1 + c2 + d1)\n      \
    \  val area16 = (b2 + c2 + d2)\n        val area17 = (d1 + c2 + a1)\n        val\
    \ area18 = (d2 + c2 + a2)\n        val area19 = (a1 + b2 + c1)\n        val area20\
    \ = (a2 + b2 + c2)\n        val area21 = (ab1 + c2 + d2)\n        val area22 =\
    \ (ab2 + c2 + d1)\n        val area23 = (b1 + c2 + a2)\n        val area24 = (b2\
    \ + c2 + a1)\n        val area25 = (d1 + c2 + b2)\n        val area26 = (d2 +\
    \ c2 + b1)\n        val area27 = (a1 + b2 + c1)\n        val area28 = (a2 + b2\
    \ + c2)\n        val area29 = (b1 + c2 + d1)\n        val area30 = (b2 + c2 +\
    \ d2)\n        val area31 = (ab1 + c2 + a2)\n        val area32 = (ab2 + c2 +\
    \ a1)\n        val area33 = (b1 + c2 + b2)\n        val area34 = (b2 + c2 + b1)\n\
    \        val area35 = (d1 + c2 + c2)\n        val area36 = (d2 + c2 + c1)\n  \
    \      val area37 = (a1 + b2 + c1)\n        val area38 = (a2 + b2 + c", "    \
    \    val area = (a + b + c) / 2\n        val side1 = math.sqrt(a * a + b * b)\n\
    \        val side2 = math.sqrt(c * c + d * d)\n        val side3 = math.sqrt(a\
    \ * a + c * c)\n        if (side1 + side2 > side3) {\n            area\n     \
    \   } else {\n            -1\n        }", "        val a1 = a / 2\n        val\
    \ b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n        val b2\
    \ = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3\
    \ = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4\
    \ = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5\
    \ = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6\
    \ = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7\
    \ = b6 + c6\n        val c7 = c6 + a6\n        (a1 + b1 + c1 + a2 + b2 + c2 +\
    \ a3 + b3 + c3 + a4 + b4 + c4 + a5 + b5 + c5 + a6 + b6 + c6 +a7 + b7 + c7) / 6",
  "        val area = (a + b + c) / 2\n        val sides = (a, b, c) match {\n   \
    \         case (a, b, c) => a + b + c\n            case (a, b, c) => a + b + c\n\
    \            case (a, b, c) => a + b + c\n        }\n        if (sides == 0) area\n\
    \        else if (sides == 1) area\n        else if (sides == 2) area\n      \
    \  else if (sides > 2) area\n        else -1", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val sum = a\
    \ + b + c\n        if (sum > c) {\n            val a = math.abs(a)\n         \
    \   val b = math.abs(b)\n            val c = math.abs(c)\n            val sum\
    \ = a + b + c\n            val area = math.sqrt(sum * (sum - c) * (sum - b) *\
    \ (sum - a))\n            area\n        } else {\n            -1.0\n        }",
  "        val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n      \
    \  val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n    \
    \    val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n  \
    \      val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5\
    \ + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7)", "        val area = (a + b +\
    \ c) / 2\n        val sides = (a, b, c) match {\n            case (a, b, c) =>\
    \ a + b + c\n            case (a, b) => a + b\n            case _ => -1\n    \
    \    }\n        if (sides == 0) -1\n        else if (sides == a + b) area\n  \
    \      else if (sides == a + c) area + b\n        else if (sides == b + c) area\
    \ + a\n        else -1", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n\
    \        val c1 = Math.abs(c)\n        val sum = a1 + b1 + c1\n        if (sum\
    \ > 0) {\n            val a2 = a1 / sum\n            val b2 = b1 / sum\n     \
    \       val c2 = c1 / sum\n            val area = a2 * b2 * c2\n            area\n\
    \        } else {\n            -1.0\n        }", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ math.abs(a1 + b1)\n        val b2 = math.abs(b1 + c1)\n        val c2 = math.abs(c1\
    \ + a1)\n        val a3 = math.abs(a2 + b2)\n        val b3 = math.abs(b2 + c2)\n\
    \        val c3 = math.abs(c2 + a2)\n        val a4 = math.abs(a3 + b3)\n    \
    \    val b4 = math.abs(b3 + c3)\n        val c4 = math.abs(c3 + a3)\n        val\
    \ a5 = math.abs(a4 + b4)\n        val b5 = math.abs(b4 + c4)\n        val c5 =\
    \ math.abs(c4 + a4)\n        val a6 = math.abs(a5 + b5)\n        val b6 = math.abs(b5\
    \ + c5)\n        val c6 = math.abs(c5 + a5)\n        val a7 = math.abs(a6 + b6)\n\
    \        val b7 = math.abs(b6 + c6)\n        val c7 = math.abs(c6 + a6)\n    \
    \    val a8 = math.abs(a7 + b7)\n        val b8 = math.abs(b7 + c7)\n        val\
    \ c8 = math.abs(c7 + a7)\n        val a9 = math.abs(a8 + b8)\n        val b9 =\
    \ math.abs(b8 + c8)\n        val c9 = math.abs(c8 + a8)\n        val a10 = math.abs(a9\
    \ + b9)\n        val b10 = math.abs(b9 + c9)\n        val c10 = math.abs(c9 +\
    \ a9)\n        val a11 = math.abs(a10 + b10)\n        val b11 = math.abs(b10 +\
    \ c10)\n        val c11 = math.abs(c10 + a10)\n        val a12 = math.abs(a11\
    \ + b11)\n        val b12 = math.abs(b11 + c11)\n        val c12 = math.abs(c11\
    \ + a11)\n        val a13 = math.abs(a12 + b12)\n        val b13 = math.abs(b12\
    \ + c12)\n        val c13 = math.abs(c12 + a12)\n        val a14 = math.abs(a13\
    \ + b13)\n        val b14 = math.abs(b13 + c13)\n        val c14 = math.abs(c13\
    \ + a13)\n        val a15 = math.abs(a14 + b14)\n        val b15 = math.abs(b14\
    \ + c14)\n        val c15 = math.abs(c14 + a14)\n        val a16 = math.abs(a15\
    \ + b", "        val a = math.pow(a, 2)\n        val b = math.pow(b, 2)\n    \
    \    val c = math.pow(c, 2)\n        val s = (a + b + c) / 2\n        if (s >\
    \ 0) {\n            val area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  \
    \          area\n        } else {\n            -1.0\n        }", "        val\
    \ a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val sum = a + b + c\n        if (sum > c) {\n            val a = math.abs(a\
    \ - b)\n            val b = math.abs(b - c)\n            val c = math.abs(c -\
    \ sum)\n            val sum = a + b + c\n            val area = sum / 3\n    \
    \        val rounded = math.round(area * 100) / 100\n            return rounded\n\
    \        }\n        return -1", "        val a = Math.sqrt(a * a)\n        val\
    \ b = Math.sqrt(b * b)\n        val c = Math.sqrt(c * c)\n        val s = (a +\
    \ b + c) / 2\n        if (s > 0) {\n            val area = s * (s - a) * (s -\
    \ b) * (s - c)\n            val rounded = area.toString.split(\"\\\\.\").takeRight(2).mkString.toFloat\n\
    \            if (rounded > 0) rounded else -1\n        } else -1", "        val\
    \ a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3\
    \ = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4\
    \ = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5\
    \ = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6\
    \ = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7\
    \ = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8\
    \ = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n        val a9\
    \ = a8 + b8\n        val b9 = b8 + c8\n        val c9 = c8 + a8\n        val a10\
    \ = a9 + b9\n        val b10 = b9 + c9\n        val c10 = c9 + a9\n        val\
    \ a11 = a10 + b10\n        val b11 = b10 + c10\n        val c11 = c110 + a10\n\
    \        val a12 = a11 + b11\n        val b12 = b11 + c11\n        val c12 = c11\
    \ + a11\n        val a13 = a12 + b12\n        val b13 = b12 + c12\n        val\
    \ c13 = c12 + a12\n        val a14 = a13 + b13\n        val b14 = b13 + c13\n\
    \        val c14 = c13 + a13\n        val a15 = a14 + b14\n        val b15 = b14\
    \ + c14\n        val c15 = c14 + a14\n        val a16 = a15 + b15\n        val\
    \ b16 = b15 + c15\n        val c16 = c15 + a15\n        val a17 = a16 + b16\n\
    \        val b17 = b16 + c16\n        val c17 = c16 + a16\n        val a18 = a17\
    \ + b17\n        val b18 = b17 + c17\n        val c18 = c17 + a17\n        val\
    \ a19 = a18 + b18\n        val b19 = b18 + c18\n        val c19 = c18 + a18\n\
    \        val a20 = a19 + b19", "        val triangleArea = if (a + b > c) \n \
    \           (a * b) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)) \n        else\
    \ -1\n        val roundedArea = Math.round(triangleArea * 100) / 100\n       \
    \ return roundedArea", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n\
    \        val c1 = Math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2\
    \ + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3\
    \ + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4\
    \ + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5\
    \ + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6\
    \ + c6\n        val c7 = c6 + a6\n        (a1 + b2 + c2 > a3 + b3 + c3 && a1 +\
    \ b2 + c2 > a4 + b4 + c4 && a1 + b2 + c2 > a5 + b5 + c5 && a1 + b2 + c2 > a6 +\
    \ b6 + c6 && a1 + b2 + c2 > a7 + b7 + c7 && a1 + b2 + c2 > a8 && b1 + c1 + a1\
    \ > b3 + c1 + a3 && b1 + c1 + a1 > b4 + c1 + a4 && b1 + c1 + a1 > b5 + c1 + a5\
    \ && b1 + c1 + a1 > b6 + c1 + a6 && b1 + c1 + a1 > b7 + c1 + a7 && b1 + c1 + a1\
    \ > b8 && c1 + a1 + b1 > c3 + a1 + b3 && c1 + a1 + b1 > c4 + a1 + b4 && c1 + a1\
    \ + b1 > c5 + a1 + b5 && c1 + a1 + b1 > c6 + a1 + b6 && c1 + a1 + b1 > c7 + a1\
    \ + b7 && c1 + a1 + b1 > c8 && a1 + b1 + c1 > c3 + a1 + b3 && a1 + b1 + c1 > c4\
    \ + a1 + b4 && a1 + b1 + c1 > c5 + a1 + b5 && a1 + b1 + c1 > c6 + a1 + b6 && a1\
    \ + b1 + c1 > c7 + a1 + b7 && a1 + b1 + c1 > c8 && a1 + b2 + c2 > c3 + a2 + b3\
    \ + c3 && a1 + b2 + c2 > c4 + a2 + b4 + c4 && a1 + b2 + c2 > c5 + a2 + b5 + c5\
    \ && a1 + b2 + c2 > c6 + a2 + b6 + c6 && a1 + b2 + c2 > c7 + a2 + ", "       \
    \ val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val sum = a + b + c\n        if (sum > c) {\n            val area = math.pow(a\
    \ * b, 2) / math.pow(c, 2)\n            val rounded = math.round(area * 100) /\
    \ 100\n            return rounded\n        }\n        -1", "        val a1 = a\
    \ / 2\n        val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n\
    \        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n\
    \        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n\
    \        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n\
    \        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8 = a7 + b7\n\
    \        val b8 = b7 + c7\n        val c8 = c7 + a7\n        val a9 = a8 + b8\n\
    \        val b9 = b8 + c8\n        val c9 = c8 + a8\n        (a9 * b9) - (a9 *\
    \ c9) + (a9 * b8) + (a9 * b7) - (a9 * b6) + (a9 * b5) - (a9 * b4) + (a9 * b3)\
    \ - (a9 * b2) + (a9 * b1) - (a9 * b0) + (a9 * c9)", "        val area = (a + b\
    \ + c) / 2\n        val sides = (a, b, c) match {\n            case (a, b, c)\
    \ => a + b + c\n            case _ => -1\n        }\n        if (sides > 0) {\n\
    \            val sum = sides match {\n                case a if a > b => b - a\n\
    \                case b if b > c => c - b\n                case c if c > a =>\
    \ a - c\n            }\n            if (sum > 0) {\n                area / sum\n\
    \            } else {\n                -1\n            }\n        } else {\n \
    \           -1\n        }", "        val a1 = (a + b + c) / 2.0\n        val a2\
    \ = Math.sqrt(a1 * a1 + a * a)\n        val b2 = Math.sqrt(b * b + b * b)\n  \
    \      val c2 = Math.sqrt(c * c + c * c)\n        val a3 = a2 / b2\n        val\
    \ b3 = b2 / c2\n        val c3 = c2 / a2\n        val a4 = a3 / b3\n        val\
    \ b4 = b3 / c3\n        val c4 = c3 / a3\n        val a5 = a4 / b4\n        val\
    \ b5 = b4 / c4\n        val c5 = c4 / a4\n        val a6 = a5 / b5\n        val\
    \ b6 = b5 / c5\n        val c6 = c5 / a5\n        (a1 + a2 + a3) / 2.0", "   \
    \     val area = (a + b + c) / 2\n        val sides = (a, b, c) match {\n    \
    \        case (a, b, c) => a + b + c\n            case _ => -1\n        }\n  \
    \      if (sides == 0) area\n        else if (sides == 1) area\n        else if\
    \ (sides == 2) area\n        else if (sides > 2) area\n        else -1", "   \
    \     val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val sum = a + b + c\n        if (sum > c) {\n            val a = math.abs(a\
    \ - b)\n            val b = math.abs(b - c)\n            val c = math.abs(c -\
    \ sum)\n            val area = a / b\n            area\n        } else {\n   \
    \         -1.0\n        }", "        val a1 = (a + b) / 2\n        val a2 = (b\
    \ + c) / 2\n        val a3 = (c + a) / 2\n        val sum = a1 + a2 + a3\n   \
    \     if (sum > a3)\n            sum - a3\n        else\n            -1", "  \
    \      val area = (a + b + c) / 2\n        val side1 = math.sqrt(a * a + b * b\
    \ + c * c)\n        val side2 = math.sqrt(side1 * side1 + a * b + b * a + c *\
    \ c)\n        val side3 = math.sqrt(side2 * side2 + a * a + b * b + c * c)\n \
    \       if (side1 + side2 + side3 > side1 * side2 * side3) {\n            area\n\
    \        } else {\n            -1\n        }", "        val a1 = a / 2\n     \
    \   val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n       \
    \ val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n     \
    \   val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n   \
    \     val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n \
    \       val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n\
    \        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n\
    \        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8 = a7 + b7\n\
    \        val b8 = b7 + c7\n        val c8 = c7 + a7\n        (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5 + b5 + c5) * (a6 + b6\
    \ + c6) * (a7 + b7 + c7) * (a8 + b8 + c8)", "        val sides = List(a, b, c).sorted\n\
    \        val sum = sides.sum\n        if (sum > sides(2)) sides(2) * sides(2)\
    \ * sides(2) else -1", "        val area = (a + b + c) / 2\n        val side1\
    \ = math.sqrt(a * a + b * b + c * c)\n        val side2 = math.sqrt(a * a + b\
    \ * b + c * c)\n        val side3 = math.sqrt(a * a + b * b + c * c)\n       \
    \ if (side1 + side2 > side3) {\n            area\n        } else {\n         \
    \   -1\n        }", "        val area = (a + b + c) / 2\n        val side1 = math.sqrt(a\
    \ * a + b * b)\n        val side2 = math.sqrt(c * c + d * d)\n        val side3\
    \ = math.sqrt(a * a + c * c)\n        val side4 = math.sqrt(b * b + d * d)\n \
    \       val side5 = math.sqrt(a * a + b * b)\n        val side6 = math.sqrt(c\
    \ * c + d * d)\n        val side7 = math.sqrt(a * a + c * c)\n        val side8\
    \ = math.sqrt(b * b + d * d)\n        val side9 = math.sqrt(a * a + b * b)\n \
    \       val side10 = math.sqrt(c * c + d * d)\n        val side11 = math.sqrt(a\
    \ * a + c * c)\n        val side12 = math.sqrt(b * b + d * d)\n        val side13\
    \ = math.sqrt(a * a + c * c)\n        val side14 = math.sqrt(b * b + d * d)\n\
    \        val side15 = math.sqrt(a * a + b * b)\n        val side16 = math.sqrt(c\
    \ * c + d * d)\n        val side17 = math.sqrt(a * a + c * c)\n        val side18\
    \ = math.sqrt(b * b + d * d)\n        val side19 = math.sqrt(a * a + b * b)\n\
    \        val side20 = math.sqrt(c * c + d * d)\n        val side21 = math.sqrt(a\
    \ * a + c * c)\n        val side22 = math.sqrt(b * b + d * d)\n        val side23\
    \ = math.sqrt(a * a + c * c)\n        val side24 = math.sqrt(b * b + d * d)\n\
    \        val side25 = math.sqrt(a * a + b * b)\n        val side26 = math.sqrt(c\
    \ * c + d * d)\n        val side27 = math.sqrt(a * a + c * c)\n        val side28\
    \ = math.sqrt(b * b + d * d)\n        val side29 = math.sqrt(a * a + b * b)\n\
    \        val side30 = math.sqrt(c * c + d * d)\n        val side31 = math.sqrt(a\
    \ * a + c * c)\n        val side32 = math.sqrt(b * b + d * d)\n        val side33\
    \ = math.sqrt(a * a + c * c)\n        val side34 = math.sqrt(b * b + d * d)\n\
    \        val side35 = math.sqrt(a * a + b * b)\n        val side36 = math.sqrt(c\
    \ * c + d * d)\n        val side37 = math.sqrt(a * a + c * c)\n        val side38\
    \ = math.sqrt(b * b + d * d)\n        val side39 = math.sqrt(a * a + c * c)\n\
    \        val side40 = math.sqrt(b * b + d * d)\n        val side41 = math.sqrt(a\
    \ * a + b * b)\n        ", "        val a1 = a / 2\n        val b1 = b / 2\n \
    \       val c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n \
    \       val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n\
    \        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n\
    \        val c8 = c7 + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n\
    \        val c9 = c8 + a8\n        val a10 = a9 + b9\n        val b10 = b9 + c9\n\
    \        val c10 = c9 + a9\n        val a11 = a10 + b10\n        val b11 = b10\
    \ + c10\n        val c11 = c110 + a10\n        val a12 = a11 + b11\n        val\
    \ b12 = b11 + c11\n        val c12 = c11 + a11\n        val a13 = a12 + b12\n\
    \        val b13 = b12 + c12\n        val c13 = c12 + a12\n        val a14 = a13\
    \ + b13\n        val b14 = b13 + c13\n        val c14 = c13 + a13\n        val\
    \ a15 = a14 + b14\n        val b15 = b14 + c14\n        val c15 = c14 + a14\n\
    \        val a16 = a15 + b15\n        val b16 = b15 + c15\n        val c16 = c15\
    \ + a15\n        val a17 = a16 + b16\n        val b17 = b16 + c16\n        val\
    \ c17 = c16 + a16\n        val a18 = a17 + b17\n        val b18 = b17 + c17\n\
    \        val c18 = c17 + a17\n        val a19 = a18 + b18\n        val b19 = b18\
    \ + c18\n        val c19 = c18 + a18\n        val a20 = a19 + b19", "        val\
    \ a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3\
    \ = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4\
    \ = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5\
    \ = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6\
    \ = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7\
    \ = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n        (a1 +\
    \ b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5 + b5 + c5)\
    \ * (a6 + b6 + c6) * (a7 + b7 + c7)", "        val a = math.abs(a)\n        val\
    \ b = math.abs(b)\n        val c = math.abs(c)\n        val sum = a + b + c\n\
    \        if (sum > c) {\n            val area = math.round(a * c / sum * 100)\
    \ / 100\n            if (area == 0) {\n                area\n            } else\
    \ {\n                area\n            }\n        } else {\n            -1\n \
    \       }", "        val sum = a + b + c\n        if (sum > 0) {\n           \
    \ val area = math.sqrt(sum * a * a + sum * b * b + sum * c * c)\n            (area\
    \ / 2).toFloat\n        } else {\n            -1.0\n        }", "        val sides\
    \ = List(a, b, c).sorted\n        val sum = sides.sum\n        if (sum > sides.last)\
    \ sides.last else -1", "        val a1 = a / 2.0\n        val b1 = b / 2.0\n \
    \       val c1 = c / 2.0\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n\
    \        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n\
    \        val c8 = c7 + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n\
    \        val c9 = c8 + a8\n        val a10 = a9 + b9\n        val b10 = b9 + c9\n\
    \        val c10 = c9 + a9\n        (a1 + b2 + c3 > a2 + b3 + c1) ? ((a1 + b2\
    \ + c3 > a3 + b2 + c1) ? ((a1 + b2 + c3 > a4 + b3 + c1) ? ((a1 + b2 + c3 > a5\
    \ + b2 + c1) ? ((a1 + b2 + c3 > a6 + b2 + c1) ? ((a1 + b2 + c3 > a7 + b2 + c1)\
    \ ? ((a1 + b2 + c3 > a8 + b2 + c1) ? ((a1 + b2 + c3 > a9 + b2 + c1) ? ((a1 + b2\
    \ + c3 > a10 + b2 + c1) ? ((a1 + b2 + c3 > b1 + c1 + b1) ? ((a1 + b2 + c3 > b2\
    \ + c1 + b1) ? ((a1 + b2 + c3 > b3 + c1 + b1) ? ((a1 + b2 + c3 > b4 + c1 + b1)\
    \ ? ((a1 + b2 + c3 > b5 + c1 + b1) ? ((a1 + b2 + c3 > b6 + c1 + b1) ? ((a1 + b2\
    \ + c3 > b7 + c1 + b1) ? ((a1 + b2 + c3 > b8 + c1 + b1) ? ((a1 + b2 + c3 > c9\
    \ + c1 + b1) ? ((a1 + b2 + c3 > c10 + c1 + b1) ? (", "        val a1 = Math.abs(a)\n\
    \        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3\
    \ = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4\
    \ = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5\
    \ = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6\
    \ = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7\
    \ = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8\
    \ = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n        val a9\
    \ = a8 + b8\n        val b9 = b8 + c8\n        val c9 = c8 + a8\n        val a10\
    \ = a9 + b9\n        val b10 = b9 + c9\n        val c10 = c9 + a9\n        (a1\
    \ + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5 + b5 + c5)\
    \ * (a6 + b6 + c6) * (a7 + b7 + c7) * (a8 + b8 + c8) * (a9 + b9 + c9) * (a10 +\
    \ b10 + c10)", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n \
    \       val c1 = Math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2\
    \ + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3\
    \ + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4\
    \ + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5\
    \ + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6\
    \ + c6\n        val c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7\
    \ + c7\n        val c8 = c7 + a7\n        (a1 + b2 + c2 > a3 && b2 + c2 + a3 >\
    \ b3 && c2 + a3 + b3 > c3 && a2 + b2 + c2 > a4 && b2 + c2 + a4 > b4 && c2 + a4\
    \ + b4 > c4 && a2 + b2 + c2 > a5 && b2 + c2 + a5 > b5 && c2 + a5 + b5 > c5 &&\
    \ a2 + b2 + c2 > a6 && b2 + c2 + a6 > b6 && c2 + a6 + b6 > c6 && a2 + b2 + c2\
    \ > a7 && b2 + c2 + a7 > b7 && c2 + a7 + b7 > c7 && a2 + b2 + c2 > a8 && b2 +\
    \ c2 + a8 > b8 && c2 + a8 + b8 > c8)\n            ? Math.sqrt(a1 * a5 + b1 * b5\
    \ + c1 * c5)\n            : -1", "        val sum = a + b + c\n        if (sum\
    \ > c) {\n            val area = sum * 0.5\n            area.toFloat\n       \
    \ } else {\n            -1.0\n        }", "        val triangleArea = (a * b *\
    \ c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2))\n        val\
    \ roundedArea = triangleArea.toString.split(\"\\\\.\").map(_.toInt).map(x => x.toFloat).sum\n\
    \        roundedArea.toFloat", "        val a1 = (a + b) / 2\n        val a2 =\
    \ (b + c) / 2\n        val a3 = (c + a) / 2\n        val a4 = (a1 + a2 + a3) /\
    \ 2\n        val a5 = (a2 + a3 + a4) / 2\n        val a6 = (a3 + a4 + a5) / 2\n\
    \        val a7 = (a4 + a5 + a6) / 2\n        val a8 = (a5 + a6 + a7) / 2\n  \
    \      val a9 = (a6 + a7 + a8) / 2\n        val a10 = (a7 + a8 + a9) / 2\n   \
    \     val a11 = (a8 + a9 + a10) / 2\n        val a12 = (a9 + a10 + a11) / 2\n\
    \        val a13 = (a10 + a11 + a12) / 2\n        val a14 = (a11 + a12 + a13)\
    \ / 2\n        val a15 = (a12 + a13 + a14) / 2\n        val a16 = (a13 + a14 +\
    \ a15) / 2\n        val a17 = (a14 + a15 + a16) / 2\n        val a18 = (a15 +\
    \ a16 + a17) / 2\n        val a19 = (a16 + a17 + a18) / 2\n        val a20 = (a17\
    \ + a18 + a19) / 2\n        val a21 = (a18 + a19 + a20) / 2\n        val a22 =\
    \ (a19 + a20 + a21) / 2\n        val a23 = (a20 + a21 + a22) / 2\n        val\
    \ a24 = (a21 + a22 + a23) / 2\n        val a25 = (a22 + a23 + a24) / 2\n     \
    \   val a26 = (a23 + a24 + a25) / 2\n        val a27 = (a24 + a25 + a26) / 2\n\
    \        val a28 = (a25 + a26 + a27) / 2\n        val a29 = (a26 + a27 + a28)\
    \ / 2\n        val a30 = (a27 + a28 + a29) / 2\n        val a31 = (a28 + a29 +\
    \ a30) / 2\n        val a32 = (a29 + a30 + a31) / 2\n        val a33 = (a30 +\
    \ a31 + a32) / 2\n        val a34 = (a31 + a32 + a33) / 2\n        val a35 = (a32\
    \ + a33 + a34) / 2\n        val a36 = (a33 + a34 + a35) / 2\n        val a37 =\
    \ (a34 + a35 + a36) / 2\n        val a38 = (a35 + a36 + a37) / 2\n        val\
    \ a39 = (a36 + a37 + a38) / 2\n        val a40 = (a37 + a38 + a39) / 2\n     \
    \   val a41 = (a38 + a39 + a40) / 2\n        val a42 = (a39 + a40 + a41) / 2\n\
    \        val a43 = (a40 + a41 + a42) / 2\n        val a44 = (a41 + a42 + a", " \
    \       val a = Math.sqrt(a * a)\n        val b = Math.sqrt(b * b)\n        val\
    \ c = Math.sqrt(c * c)\n        val s = a + b + c\n        if (s > 0) {\n    \
    \        val area = s * (s - a) * (s - b) * (s - c)\n            area / Math.pow(a,\
    \ 2)\n        } else {\n            -1\n        }", "        val sides = List(a,\
    \ b, c)\n        val sum = sides.sum\n        if (sum > sides.last) sides.last\
    \ else -1", "        val sides = List(a, b, c)\n        val sum = sides.sum\n\
    \        if (sum > sides.last) sides.last else -1", "        val a = Math.sqrt(a\
    \ * a)\n        val b = Math.sqrt(b * b)\n        val c = Math.sqrt(c * c)\n \
    \       val s = (a + b + c) / 2\n        if (s > 0) {\n            val area =\
    \ s * (s - a) * (s - b) * (s - c)\n            area\n        } else {\n      \
    \      -1\n        }", "        val a = Math.abs(a)\n        val b = Math.abs(b)\n\
    \        val c = Math.abs(c)\n        if (a + b > c) {\n            val d = b\
    \ * b - 4 * a * c\n            if (d > 0) {\n                val x = -b + Math.sqrt(d)\n\
    \                val y = -b - Math.sqrt(d)\n                val area = Math.sqrt(x\
    \ * x + y * y)\n                val rounded = area / 2\n                rounded.toFloat\n\
    \            } else {\n                -1\n            }\n        } else {\n \
    \           -1\n        }", "        val a = Math.sqrt(a * a)\n        val b =\
    \ Math.sqrt(b * b)\n        val c = Math.sqrt(c * c)\n        val s = (a + b +\
    \ c) / 2\n        if (s > 0) {\n            val area = s * (s - a) * (s - b) *\
    \ (s - c)\n            area / Math.PI\n        } else {\n            -1\n    \
    \    }", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n       \
    \ val c1 = Math.abs(c)\n        val sides = List(a1, b1, c1)\n        val sum\
    \ = sides.sum\n        val side = sides.max\n        if (sum > side) {\n     \
    \       return side.toFloat * side.toFloat\n        } else {\n            return\
    \ -1\n        }", "        val sum = a + b + c\n        if (sum > 0) {\n     \
    \       val area = math.sqrt(sum * a * a + sum * b * b + sum * c * c)\n      \
    \      area / 2\n        } else {\n            -1\n        }", "        val a\
    \ = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n  \
    \      val sum = a + b + c\n        if (sum > c) {\n            val area = math.round(a\
    \ * b / (a + b + c))\n            if (area == 0) area else area\n        } else\
    \ {\n            -1\n        }", "        val a = math.abs(a)\n        val b =\
    \ math.abs(b)\n        val c = math.abs(c)\n        val s = (a + b + c) / 2\n\
    \        val area = (math.sqrt(s * (s - a) * (s - b) * (s - c)) * (b - a) * (c\
    \ - a)).toFloat\n        area", "        val a1 = a / 2\n        val b1 = b /\
    \ 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n\
    \        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a6\n        (a1 + b2 + c3 > a2 + b3 + c4 > a3 + b4 + c5\
    \ >\n            a4 + b5 + c6 >\n            a5 + b6 + c7 >\n            a6 +\
    \ b7 + c8)\n            ? Math.sqrt(a1 * b2 - a2 * b1 + a3 * b3 - a3 * b2 + a4\
    \ * b3 - a4 * b2 + a5 * b3 - a5 * b2 + a6 * b3 - a6 * b2 + a7 * b3 - a7 * b2)\n\
    \            : -1", "        val area = (a + b + c) / 2\n        val isValid =\
    \ a > 0 && b > 0 && c > 0\n        if (isValid) {\n            val isValidSide\
    \ = a > b && b > c\n            if (isValidSide) {\n                val isValidArea\
    \ = area > a\n                if (isValidArea) {\n                    area\n \
    \               } else {\n                    -1\n                }\n        \
    \    } else {\n                -1\n            }\n        } else {\n         \
    \   -1\n        }", "        val a1 = a / 2\n        val b1 = b / 2\n        val\
    \ c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val\
    \ c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val\
    \ c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val\
    \ c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val\
    \ c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val\
    \ c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val\
    \ c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val\
    \ c8 = c7 + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n        val\
    \ c9 = c8 + a8\n        val a10 = a9 + b9\n        val b10 = b9 + c9\n       \
    \ val c10 = c9 + a9\n        val a11 = a10 + b10\n        val b11 = b10 + c10\n\
    \        val c11 = c110 + a10\n        val a12 = a11 + b11\n        val b12 =\
    \ b11 + c11\n        val c12 = c11 + a11\n        val a13 = a12 + b12\n      \
    \  val b13 = b12 + c12\n        val c13 = c12 + a12\n        val a14 = a13 + b13\n\
    \        val b14 = b13 + c13\n        val c14 = c13 + a13\n        val a15 = a14\
    \ + b14\n        val b15 = b14 + c14\n        val c15 = c14 + a14\n        val\
    \ a16 = a15 + b15\n        val b16 = b15 + c15\n        val c16 = c15 + a15\n\
    \        val a17 = a16 + b16\n        val b17 = b16 + c16\n        val c17 = c16\
    \ + a16\n        val a18 = a17 + b17\n        val b18 = b17 + c17\n        val\
    \ c18 = c17 + a17\n        val a19 = a18 + b18\n        val b19 = b18 + c18\n\
    \        val c19 = c18 + a18\n        val a20 = a19 + b", "        val area =\
    \ (a + b + c) / 2\n        val side1 = math.sqrt(a * a + b * b)\n        val side2\
    \ = math.sqrt(c * c + d * d)\n        val side3 = math.sqrt(a * a + c * c)\n \
    \       val side4 = math.sqrt(b * b + d * d)\n        if (side1 + side2 > side3)\
    \ {\n            area\n        } else {\n            -1\n        }", "       \
    \ val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n\
    \        val sum = a1 + b1 + c1\n        if (sum > a1 && sum > b1 && sum > c1)\
    \ {\n            val area = (a + b + c) / 2\n            (area / Math.sqrt(a1\
    \ * a1 + b1 * b1 + c1 * c1)).toFloat\n        } else {\n            -1.0\n   \
    \     }", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n      \
    \  val c1 = Math.abs(c)\n        val sum = a1 + b1 + c1\n        if (sum > 0)\
    \ {\n            val a2 = a1 * a1\n            val b2 = b1 * b1\n            val\
    \ c2 = c1 * c1\n            val a3 = a1 * a2\n            val b3 = b1 * b2\n \
    \           val c3 = c1 * c2\n            val a4 = a1 * a3\n            val b4\
    \ = b1 * b3\n            val c4 = c1 * c3\n            val a5 = a1 * a4\n    \
    \        val b5 = b1 * b4\n            val c5 = c1 * c5\n            val a6 =\
    \ a1 * a5\n            val b6 = b1 * b5\n            val c6 = c1 * c6\n      \
    \      val a7 = a1 * a6\n            val b7 = b1 * b6\n            val c7 = c1\
    \ * c7\n            val a8 = a1 * a7\n            val b8 = b1 * b7\n         \
    \   val c8 = c1 * c8\n            val a9 = a1 * a8\n            val b9 = b1 *\
    \ b8\n            val c9 = c1 * c9\n            val a10 = a1 * a9\n          \
    \  val b10 = b1 * b9\n            val c10 = c1 * c10\n            val a11 = a1\
    \ * a10\n            val b11 = b1 * b10\n            val c11 = c1 * c11\n    \
    \        val a12 = a1 * a11\n            val b12 = b1 * b11\n            val c12\
    \ = c1 * c12\n            val a13 = a1 * a12\n            val b13 = b1 * b12\n\
    \            val c13 = c1 * c13\n            val a14 = a1 * a13\n            val\
    \ b14 = b1 * b13\n            val c14 = c1 * c14\n            val a15 = a1 * a14\n\
    \            val b15 = b1 * b14\n            val c15 = c1 * c15\n            val\
    \ a16 = a1 * a15\n            val b16 = b1 * b15\n            val c16 = c1 * c16\n\
    \            val a17 = a1 * a16\n            val b17 = b1 * b16\n            val\
    \ c17 = c1 * c17\n            val a18 = a1 * a17\n            val b18 = b1 * b17\n\
    \            val c18 = c1 * c18\n            val a19 = a1 * a18\n            val\
    \ b19 = b1 * b18\n            val c19 = c1 * c19\n            val a20 = a1 * a19\n\
    \            val b20 = b1 * b19\n            val c20 = c1", "        val sides\
    \ = List(a, b, c)\n        val sum = sides.sum\n        val isTriangle = (sum\
    \ > sides.last)\n        if (isTriangle) {\n            val area = sides.reduce((a,b)\
    \ => a*b)\n            (area / sides.last).toFloat\n        } else {\n       \
    \     -1\n        }", "        val a1 = (a + b + c) / 2.0\n        val a2 = Math.sqrt((Math.pow(a,\
    \ 2.0) + Math.pow(b, 2.0) + Math.pow(c, 2.0))) / 2.0\n        val a3 = Math.sqrt((Math.pow(a,\
    \ 2.0) + Math.pow(b, 2.0) + Math.pow(c, 2.0))) / 2.0\n        val b1 = (a + b\
    \ + c) / 2.0\n        val b2 = Math.sqrt((Math.pow(a, 2.0) + Math.pow(b, 2.0)\
    \ + Math.pow(c, 2.0))) / 2.0\n        val b3 = Math.sqrt((Math.pow(a, 2.0) + Math.pow(b,\
    \ 2.0) + Math.pow(c, 2.0))) / 2.0\n        val c1 = (a + b + c) / 2.0\n      \
    \  val c2 = Math.sqrt((Math.pow(a, 2.0) + Math.pow(b, 2.0) + Math.pow(c, 2.0)))\
    \ / 2.0\n        val c3 = Math.sqrt((Math.pow(a, 2.0) + Math.pow(b, 2.0) + Math.pow(c,\
    \ 2.0))) / 2.0\n        val area1 = a1 * a1 + b1 * b1 + c1 * c1\n        val area2\
    \ = a2 * a2 + b2 * b2 + c2 * c2\n        val area3 = a3 * a3 + b3 * b3 + c3 *\
    \ c3\n        if (area1 + area2 + area3 > 0)\n            area1.toFloat / Math.sqrt(area1\
    \ + area2 + area3)\n        else\n            -1.0", "        val a = Math.sqrt(a\
    \ * a * a)\n        val b = Math.sqrt(b * b * b)\n        val c = Math.sqrt(c\
    \ * c * c)\n        val s = (a + b + c) / 2\n        if (s > 0) {\n          \
    \  val area = s * (s - a) * (s - b) * (s - c)\n            area\n        } else\
    \ {\n            -1.0\n        }", "        val a = math.abs(a)\n        val b\
    \ = math.abs(b)\n        val c = math.abs(c)\n        val sum = a + b + c\n  \
    \      if (sum > c) {\n            val d = math.abs(b - c)\n            val area\
    \ = math.pow(a, d) / 2\n            area\n        } else {\n            -1.0\n\
    \        }", "        val sides = List(a, b, c)\n        val sum = sides.sum\n\
    \        if (sum > sides.last) sides.last else -1", "        val a = Math.sqrt(a\
    \ * a)\n        val b = Math.sqrt(b * b)\n        val c = Math.sqrt(c * c)\n \
    \       val s = (a + b + c) / 2\n        if (s > 0) {\n            val area =\
    \ s * (s - a) * (s - b) * (s - c)\n            area / 2\n        } else {\n  \
    \          -1\n        }", "        val area = (a + b + c) / 2\n        val side1\
    \ = math.sqrt(a * a + b * b + c * c)\n        val side2 = math.sqrt(side1 * side1\
    \ + a * b + b * c)\n        val side3 = math.sqrt(side1 * side1 + a * a + b *\
    \ b)\n        val isValid = side1 + side2 > side3\n        val rounded = if (isValid)\
    \ area * 100f / side3 else -1\n        rounded.toFloat", "        val a1 = a /\
    \ 2.0\n        val b1 = b / 2.0\n        val c1 = c / 2.0\n        val a2 = a1\
    \ + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2\
    \ + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3\
    \ + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4\
    \ + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5\
    \ + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6\
    \ + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8 = a7\
    \ + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n        val a9 = a8\
    \ + b8\n        val b9 = b8 + c8\n        val c9 = c8 + a8\n        (a9 * b9)\
    \ - (a9 * c9) + (a9 * b8) + (a9 * b7) - (a9 * b6) + (a9 * b5) - (a9 * b4) + (a9\
    \ * b3) - (a9 * b2) - (a9 * b1) - (a9 * b0) - (a9 * c0) + (a9 * c1) + (a9 * c2)\
    \ + (a9 * c3) + (a9 * c4) + (a9 * c5) + (a9 * c6) + (a9 * c7) + (a9 * c8) + (a9\
    \ * c9) == 0", "        val sum = a + b + c\n        if (sum > 0) {\n        \
    \    val area = math.sqrt(sum * a * a + sum * b * b + sum * c * c)\n         \
    \   (area / 2).toFloat\n        } else {\n            -1.0\n        }", "    \
    \    val sum = a + b + c\n        if (sum > 0) {\n            val area = math.sqrt(sum\
    \ * sum / 2)\n            area\n        } else {\n            -1.0\n        }",
  "        val area = (a + b + c) / 2\n        val isValid = a > 0 && b > 0 && c >\
    \ 0\n        if (isValid) {\n            val side1 = math.sqrt(a * a + b * b)\n\
    \            val side2 = math.sqrt(c * c + d * d)\n            val side3 = math.sqrt(a\
    \ * a + c * c)\n            val side4 = math.sqrt(b * b + d * d)\n           \
    \ val area1 = side1 * side1\n            val area2 = side2 * side2\n         \
    \   val area3 = side3 * side3\n            val area4 = side4 * side4\n       \
    \     val areaSum = area1 + area2 + area3 + area4\n            val roundedArea\
    \ = areaSum.toFloat / 2\n            val roundedAreaFloat = roundedArea.toFloat\n\
    \            if (roundedAreaFloat == areaSum) {\n                roundedAreaFloat\n\
    \            } else {\n                -1\n            }\n        } else {\n \
    \           -1\n        }", "        if (a + b > c) \n            -1\n       \
    \ else \n            (a * b) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))", " \
    \       val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val sum = math.abs(a1 + b1 + c1)\n        if (sum > c1) {\n         \
    \   return -1\n        }\n        val a2 = math.abs(a1 - b1)\n        val b2 =\
    \ math.abs(b1 - c1)\n        val c2 = math.abs(c1 - a1)\n        val sum = math.abs(a2\
    \ + b2 + c2)\n        if (sum > b2) {\n            return -1\n        }\n    \
    \    val a3 = math.abs(a2 - b2)\n        val b3 = math.abs(b2 - c2)\n        val\
    \ c3 = math.abs(c2 - a2)\n        val sum = math.abs(a3 + b3 + c3)\n        if\
    \ (sum > a3) {\n            return -1\n        }\n        val a4 = math.abs(a3\
    \ - b3)\n        val b4 = math.abs(b3 - c3)\n        val c4 = math.abs(c3 - a3)\n\
    \        val sum = math.abs(a4 + b4 + c4)\n        if (sum > a4) {\n         \
    \   return -1\n        }\n        val a5 = math.abs(a4 - b4)\n        val b5 =\
    \ math.abs(b4 - c4)\n        val c5 = math.abs(c4 - a4)\n        val sum = math.abs(a5\
    \ + b5 + c5)\n        if (sum > a5) {\n            return -1\n        }\n    \
    \    val a6 = math.abs(a5 - b5)\n        val b6 = math.abs(b5 - c5)\n        val\
    \ c6 = math.abs(c5 - a5)\n        val sum = math.abs(a6 + b6 + c6)\n        if\
    \ (sum > a6) {\n            return -1\n        }\n        val a7 = math.abs(a6\
    \ - b6)\n        val b7 = math.abs(b6 - c6)\n        val c7 = math.abs(c6 - a6)\n\
    \        val sum = math.abs(a7 + b7 + c7)\n        if (sum > a7) {\n         \
    \   return -1\n        }\n        val a8 = math.abs(a7 - b7)\n        val b8 =\
    \ math.abs(b7 - c7)\n        val c8 = math.abs(c7 - a7)\n        val sum = math.abs(a8\
    \ + b8 + c8)\n        if (sum > a8) {\n            return -1\n        }\n    \
    \    val a9 = math.abs(a8 - b8)\n        val b9 = math.abs(b8 - c8)\n        val\
    \ c9 = math.abs(c8 - a8)\n        val sum = math.abs(a9 + b9 + c9)\n        if\
    \ (sum > a9) {\n            return -1\n        }\n        val a10 = math.abs(a9\
    \ - b9)\n        val b10 = math.abs(b9 - ", "        val a1 = a + b\n        val\
    \ a2 = a + c\n        val b2 = b + c\n        val a3 = a1 + a2\n        val b3\
    \ = b1 + b2\n        val c3 = c1 + c2\n        val a4 = a1 + b2 + c3\n       \
    \ val b4 = b1 + c2 + a3\n        val c4 = c1 + a2 + b3\n        val a5 = a1 +\
    \ b2 + c2 + a3\n        val b5 = b1 + c2 + a3 + b4\n        val c5 = c1 + a2 +\
    \ b3 + c4\n        val a6 = a1 + b2 + c2 + a3 + b4 + c5\n        val b6 = b1 +\
    \ c2 + a3 + b4 + c5 + a6\n        val c6 = c1 + a2 + b3 + c4 + a5 + b6\n     \
    \   val a7 = a1 + b2 + c2 + a3 + b4 + c5 + a6 + a7\n        val b7 = b1 + c2 +\
    \ a3 + b4 + c5 + a6 + a7 + b7\n        val c7 = c1 + a2 + b3 + c4 + a5 + b6 +\
    \ a7 + b7\n        val a8 = a + b + c\n        val b8 = b + c + a\n        val\
    \ c8 = c + a + b\n        val a9 = a1 + b2 + c3\n        val b9 = b1 + c2 + a3\n\
    \        val c9 = c1 + a2 + b3\n        val a10 = a1 + b2 + c3 + a4\n        val\
    \ b10 = b1 + c2 + a3 + b4\n        val c10 = c1 + a2 + b3 + c4\n        val a11\
    \ = a1 + b2 + c3 + a4 + a5\n        val b11 = b1 + c2 + a3 + b4 + b5\n       \
    \ val c11 = c1 + a2 + b3 + c4 + c6\n        val a12 = a1 + b2 + c3 + a4 + a5 +\
    \ a6\n        val b12 = b1 + c2 + a3 + b4 + b5 + b7\n        val c12 = c1 + a2\
    \ + b3 + c4 + c5 + c6\n        val a13 = a1 + b2 + c3 + a4 + a5 + a6 + a7\n  \
    \      val b13 = b1 + c2 + a3 + b4 + b5 + b7 + b8\n        val c13 = c1 + a2 +\
    \ b3 + c4 + c5 + c6 + c7\n        val a14 = a1 + b2 + c3 + a4 + a5 + a6 + a7 +\
    \ a8\n        val b14 = b1 + c2 + a3 + b4 + b5 + b7 + b8 + b9\n        val c14\
    \ = c1 + a2 + b3 + c4 + c5 + c6 + c7 + c8\n", "        val a1 = a / 2\n      \
    \  val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n        val\
    \ b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val\
    \ b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val\
    \ b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val\
    \ b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val\
    \ b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val\
    \ b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8 = a7 + b7\n        val\
    \ b8 = b7 + c7\n        val c8 = c7 + a7\n        val a9 = a8 + b8\n        val\
    \ b9 = b8 + c8\n        val c9 = c8 + a8\n        val a10 = a9 + b9\n        val\
    \ b10 = b9 + c9\n        val c10 = c9 + a9\n        val a11 = a10 + b10\n    \
    \    val b11 = b10 + c10\n        val c11 = c10 + a10\n        val a12 = a11 +\
    \ b11\n        val b12 = b11 + c11\n        val c12 = c11 + a11\n        val a13\
    \ = a12 + b12\n        val b13 = b12 + c12\n        val c13 = c12 + a12\n    \
    \    val a14 = a13 + b13\n        val b14 = b13 + c13\n        val c14 = c13 +\
    \ a13\n        val a15 = a14 + b14\n        val b15 = b14 + c14\n        val c15\
    \ = c14 + a14\n        val a16 = a15 + b15\n        val b16 = b15 + c15\n    \
    \    val c16 = c15 + a15\n        val a17 = a16 + b16\n        val b17 = b16 +\
    \ c16\n        val c17 = c16 + a16\n        val a18 = a17 + b17\n        val b18\
    \ = b17 + c17\n        val c18 = c17 + a17\n        val a19 = a18 + b18\n    \
    \    val b19 = b18 + c18\n        val c19 = c18 + a18\n        val a20 = a19 +\
    \ b19", "        val a1 = a / 2.0\n        val b1 = b / 2.0\n        val c1 =\
    \ c / 2.0\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2\
    \ = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3\
    \ = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4\
    \ = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5\
    \ = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6\
    \ = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7\
    \ = c6 + a6\n        (a1 + b2 + c3 >= a2 + b3 + c4 && a1 + b2 + c3 >= a3 + b2\
    \ + c5 && a1 + b2 + c3 >= a4 + b3 + c5 && a1 + b2 + c3 >= a5 + b2 + c6 && a1 +\
    \ b2 + c3 >= a6 + b2 + c7 && a1 + b2 + c3 >= a7 + b2 + c7 && a1 + b2 + c3 >= a2\
    \ + b3 + c4 && a1 + b2 + c3 >= a3 + b3 + c5 && a1 + b2 + c3 >= a4 + b3 + c5 &&\
    \ a1 + b2 + c3 >= a5 + b3 + c6 && a1 + b2 + c3 >= a6 + b3 + c7 && a1 + b2 + c3\
    \ >= a7 + b3 + c7 && a1 + b2 + c3 >= a2 + b3 + c4 && a1 + b2 + c3 >= a3 + b3 +\
    \ c5 && a1 + b2 + c3 >= a4 + b3 + c5 && a1 + b2 + c3 >= a5 + b3 + c6 && a1 + b2\
    \ + c3 >= a6 + b3 + c7 && a1 + b2 + c3 >= a7 + b3 + c7 && a1 + b2 + c3 >= a2 +\
    \ b3 + c4 && a1 + b2 + c3 >= a3 + b3 + c5 && a1 + b2 + c3 >= a4 + b3 + c5 && a1\
    \ + b2 + c3 >= a5 + b3 + c6 && a1 + b2 + c3 >= a6 + b3 + c7 && a1 + b2 + c3 >=\
    \ a7 + b3 + c7 && a1 + b2 + c3 >= a2 + b3 + c4 && a1 + b2 + c3 >= a3 + b3 + c5\
    \ && a1 + b2 + c", "        val a1 = a + b\n        val a2 = a + c\n        val\
    \ b1 = b + c\n        val b2 = b + a\n        val c1 = c + a\n        val c2 =\
    \ c + b\n        val d1 = b2 - b1\n        val d2 = c2 - c1\n        val d3 =\
    \ a2 - a1\n        val area = if (d1 > 0 && d2 > 0 && d3 > 0) (d1 + d2 + d3) /\
    \ 2 else -1\n        area", "        val a1 = a / 2\n        val b1 = b / 2\n\
    \        val c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a1\n        val a3 = a1 + c1\n        val b3 = b1 + a2\n\
    \        val c3 = c1 + b1\n        val a4 = a2 + b2\n        val b4 = b2 + c3\n\
    \        val c4 = c2 + b2\n        val a5 = a2 + c3\n        val b5 = b2 + a4\n\
    \        val c5 = c2 + b3\n        val a6 = a3 + b4\n        val b6 = b3 + c5\n\
    \        val c6 = c3 + b6\n        val a7 = a3 + c5\n        val b7 = b3 + a6\n\
    \        val c7 = c3 + b5\n        val a8 = a4 + b6\n        val b8 = b4 + c7\n\
    \        val c8 = c4 + b6\n        val a9 = a4 + c7\n        val b9 = b4 + a9\n\
    \        val c9 = c4 + b5\n        val a10 = a5 + b6\n        val b10 = b5 + c9\n\
    \        val c10 = c5 + b6\n        val a11 = a5 + c9\n        val b11 = b5 +\
    \ a11\n        val c11 = c5 + b5\n        val a12 = a6 + b6\n        val b12 =\
    \ b6 + c11\n        val c12 = c6 + b6\n        val a13 = a6 + c11\n        val\
    \ b13 = b6 + a13\n        val c13 = c6 + b6\n        val a14 = a7 + b7\n     \
    \   val b14 = b7 + c13\n        val c14 = c7 + b7\n        val a15 = a7 + c13\n\
    \        val b15 = b7 + a15\n        val c15 = c7 + b7\n        val a16 = a8 +\
    \ b8\n        val b16 = b8 + c14\n        val c16 = c8 + b8\n        val a17 =\
    \ a8 + c14\n        val b17 = b8 + a17\n        val c17 = c8 + b8\n        val\
    \ a18 = a9 + b9\n        val b18 = b9 + c15\n        val c18 = c9 + b9\n     \
    \   val a19 = a9 + c15\n        val b19 = b9 + a19\n        val c19 = c9 + b9\n\
    \        val a20 = a10 + b10\n        val b20 = b10 + c16\n        val c20 = c",
  "        val area = (a + b + c) / 2\n        val side1 = math.sqrt(a * a + b * b\
    \ + c * c)\n        val side2 = math.sqrt(side1 * side1 + a * b + c * c)\n   \
    \     val side3 = math.sqrt(side2 * side2 + a * a + b * b)\n        val isValid\
    \ = side1 + side2 > side3\n        val rounded = if (isValid) area / side3 else\
    \ -1\n        rounded.toFloat", "        val a1 = math.abs(a)\n        val b1\
    \ = math.abs(b)\n        val c1 = math.abs(c)\n        val sum = a1 + b1 + c1\n\
    \        if (sum > c1) {\n            val a2 = math.abs(a1 - b1)\n           \
    \ val b2 = math.abs(b1 - c1)\n            val c2 = math.abs(c1 - a1)\n       \
    \     val sum = a2 + b2 + c2\n            if (sum > b2) {\n                val\
    \ a3 = math.abs(a1 - b1 - c1)\n                val b3 = math.abs(b1 - c1 - a1)\n\
    \                val c3 = math.abs(c1 - a1 - b1)\n                val sum = a3\
    \ + b3 + c3\n                if (sum > a2) {\n                    val a4 = math.abs(a1\
    \ - b1 - c1 - a1)\n                    val b4 = math.abs(b1 - c1 - a1 - b1)\n\
    \                    val c4 = math.abs(c1 - a1 - b1 - c1)\n                  \
    \  val sum = a4 + b4 + c4\n                    if (sum > 0) {\n              \
    \          val a5 = math.abs(a1 - b1 - c1 - a1 - b1 - c1 - a1)\n             \
    \           val b5 = math.abs(b1 - c1 - a1 - b1 - c1 - a1 - b1)\n            \
    \            val c5 = math.abs(c1 - a1 - b1 - c1 - a1 - b1 - c1)\n           \
    \             val sum = a5 + b5 + c5\n                        if (sum > 0) {\n\
    \                            val a6 = math.abs(a1 - b1 - c1 - a1 - b1 - c1 - a1\
    \ - b1 - c1 - a1)\n                            val b6 = math.abs(b1 - c1 - a1\
    \ - b1 - c1 - a1 - b1 - c1 - a1 - b1)\n                            val c6 = math.abs(c1\
    \ - a1 - b1 - c1 - a1 - b1 - c1 - a1 - b1 - c1 - a1)\n                       \
    \     val sum = a6 + b6 + c6\n                            if (sum > 0) {\n   \
    \                             val a7 = math.abs(a1 - b1 - c1 - a1 - b1 - c1 -\
    \ a1 - b1 - c1 - a1 - b1 - c1 - a1 - b1 - c1 - a1)\n                         \
    \       val b7 = math.abs(b1 - c1 - a1 - b1 - c1 - a1 - b1 - c1 - a1 - b1 - c1\
    \ - a1 - b1 - c1 - a1 - b1 - c1 - a1)\n                                val c7\
    \ = math.abs(c1 - a1 - b1 - c1 - a1 - b1 - c1 - a1 - b1 - c1 - a1 - b1 - c1 -\
    \ a1 - b1 - c1 - a1 - b1 - c1 - a1 - b1 - c1 - a1 - b", "        val a1 = a /\
    \ 2.0\n        val b1 = b / 2.0\n        val c1 = c / 2.0\n        val a2 = a1\
    \ + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2\
    \ + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3\
    \ + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4\
    \ + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5\
    \ + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6\
    \ + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8 = a7\
    \ + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n        val a9 = a8\
    \ + b8\n        val b9 = b8 + c8\n        val c9 = c8 + a8\n        (a9 * b9)\
    \ - (a8 * b8) - (a7 * b7) + (a6 * b6) + (a5 * b5) + (a4 * b4)", "        val a\
    \ = Math.abs(a)\n        val b = Math.abs(b)\n        val c = Math.abs(c)\n  \
    \      val ab = b - a\n        val ac = c - a\n        val bc = b - c\n      \
    \  val abc = ab + ac\n        if (abc > 0) abc else -1", "        val area = (a\
    \ + b + c) / 2\n        val side1 = math.sqrt(a * a + b * b + c * c)\n       \
    \ val side2 = math.sqrt(side1 * side1 + a * b + c * c)\n        val side3 = math.sqrt(side2\
    \ * side2 + a * a + b * b)\n        val area2 = side1 * side2 * side3\n      \
    \  area2 match {\n            case x if x < 0.001 => area\n            case x\
    \ if x > 1 => -1\n            case _ => area\n        }", "        val a1 = a\
    \ / 2\n        val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n\
    \        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n\
    \        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n\
    \        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n\
    \        val b7 = b6 + c6\n        val c7 = c6 + a6\n        (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5 + b5 + c5) * (a6 + b6\
    \ + c6) * (a7 + b7 + c7)", "        val a1 = (a + b) / 2\n        val a2 = (b\
    \ + c) / 2\n        val a3 = (c + a) / 2\n        val a4 = (a1 + a2 + a3) / 2\n\
    \        val b1 = (b + c) / 2\n        val b2 = (b + a) / 2\n        val b3 =\
    \ (c + a) / 2\n        val b4 = (b1 + b2 + b3) / 2\n        val c1 = (c + b) /\
    \ 2\n        val c2 = (b + c) / 2\n        val c3 = (a + c) / 2\n        val c4\
    \ = (a1 + a2 + a3) / 2\n        val d1 = (b1 + c) / 2\n        val d2 = (b2 +\
    \ a) / 2\n        val d3 = (b3 + a) / 2\n        val d4 = (b1 + b2 + b3) / 2\n\
    \        val e1 = (b1 + b2 + b3) / 2\n        val e2 = (b1 + b2 + c1) / 2\n  \
    \      val e3 = (b1 + b2 + c2) / 2\n        val e4 = (b1 + b2 + c3) / 2\n    \
    \    val f1 = (b1 + b2 + c3) / 2\n        val f2 = (b1 + b2 + c4) / 2\n      \
    \  val f3 = (b1 + b2 + c4) / 2\n        val f4 = (b1 + b3 + c4) / 2\n        val\
    \ g1 = (b1 + b3 + c4) / 2\n        val g2 = (b1 + b3 + d1) / 2\n        val g3\
    \ = (b1 + b3 + d2) / 2\n        val g4 = (b1 + b3 + d3) / 2\n        val h1 =\
    \ (b1 + b3 + d3) / 2\n        val h2 = (b1 + b3 + d4) / 2\n        val h3 = (b1\
    \ + b3 + e4) / 2\n        val h4 = (b1 + b3 + f4) / 2\n        val i1 = (b1 +\
    \ b3 + f4) / 2\n        val i2 = (b1 + b3 + g4) / 2\n        val i3 = (b1 + b3\
    \ + h4) / 2\n        val i4 = (b1 + b3 + i4) / 2\n        val j1 = (b1 + b3 +\
    \ i4) / 2\n        val j2 = (b1 + b3 + h4) / 2\n        val j3 = (b1 + b3 + g4)\
    \ / 2\n        val j4 = (b1 + b3 + f4) / 2\n        val k1 = (b1 + b3 + f4) /\
    \ 2\n        val k2 = (b1 + b3 + e3) / 2\n        val k3 = (b1 + b3 + e2) / 2\n\
    \        val k4 = (b1 + b3 + d1) / 2\n        val l1 = (b1 + b3 + d1) / 2\n  \
    \      val l2 = (b1 + b3 + c2) / 2\n        val l3 = (b1 + b3 + c3) / 2\n    \
    \    val l4 = (b", "        val sides = List(a, b, c)\n        val sumSides =\
    \ sides.sum\n        val isValid = sumSides > sides.last\n        if (isValid)\
    \ {\n            val area = sides.map(x => x * x).sum\n            val rounded\
    \ = area.toString.replaceAll(\"\\\\.[0-9]*$\", \"\")\n            val roundedFloat\
    \ = rounded.toFloat\n            roundedFloat\n        } else {\n            -1\n\
    \        }", "        val a1 = (a + b) / 2\n        val a2 = (b + c) / 2\n   \
    \     val a3 = (c + a) / 2\n        val a4 = (a1 + a2 + a3) / 2\n        val a5\
    \ = (a2 + a3 + a4) / 2\n        val a6 = (a3 + a4 + a5) / 2\n        val a7 =\
    \ (a4 + a5 + a6) / 2\n        val a8 = (a5 + a6 + a7) / 2\n        val a9 = (a6\
    \ + a7 + a8) / 2\n        val a10 = (a7 + a8 + a9) / 2\n        val a11 = (a8\
    \ + a9 + a10) / 2\n        val a12 = (a9 + a10 + a11) / 2\n        val a13 = (a10\
    \ + a11 + a12) / 2\n        val a14 = (a11 + a12 + a13) / 2\n        val a15 =\
    \ (a12 + a13 + a14) / 2\n        val a16 = (a13 + a14 + a15) / 2\n        val\
    \ a17 = (a14 + a15 + a16) / 2\n        val a18 = (a15 + a16 + a17) / 2\n     \
    \   val a19 = (a16 + a17 + a18) / 2\n        val a20 = (a17 + a18 + a19) / 2\n\
    \        val a21 = (a18 + a19 + a20) / 2\n        val a22 = (a19 + a20 + a21)\
    \ / 2\n        val a23 = (a20 + a21 + a22) / 2\n        val a24 = (a21 + a22 +\
    \ a23) / 2\n        val a25 = (a22 + a23 + a24) / 2\n        val a26 = (a23 +\
    \ a24 + a25) / 2\n        val a27 = (a24 + a25 + a26) / 2\n        val a28 = (a25\
    \ + a26 + a27) / 2\n        val a29 = (a26 + a27 + a28) / 2\n        val a30 =\
    \ (a27 + a28 + a29) / 2\n        val a31 = (a28 + a29 + a30) / 2\n        val\
    \ a32 = (a29 + a30 + a31) / 2\n        val a33 = (a30 + a31 + a32) / 2\n     \
    \   val a34 = (a31 + a32 + a33) / 2\n        val a35 = (a32 + a33 + a34) / 2\n\
    \        val a36 = (a33 + a34 + a35) / 2\n        val a37 = (a34 + a35 + a36)\
    \ / 2\n        val a38 = (a35 + a36 + a37) / 2\n        val a39 = (a36 + a37 +\
    \ a38) / 2\n        val a40 = (a37 + a38 + a39) / 2\n        val a41 = (a38 +\
    \ a39 + a40) / 2\n        val a42 = (a39 + a40 + a41) / 2\n        val a43 = (a40\
    \ + a41 + a42) / 2\n        val a44 = (a41 + a42 + a", "        val a1 = a / 2\n\
    \        val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n  \
    \      val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n\
    \        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n\
    \        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n\
    \        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n\
    \        val b7 = b6 + c6\n        val c7 = c6 + a6\n        (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5 + b5 + c5) * (a6 + b6\
    \ + c6) * (a7 + b7 + c7)", "        val sides = List(a, b, c)\n        val sum\
    \ = sides.sum\n        if (sum > sides.last) sides.last else -1", "        val\
    \ triangleArea = a*b*c\n        val validTriangleSides = a + b + c > 0\n     \
    \   if (validTriangleSides) {\n            val validTriangleArea = triangleArea/3\n\
    \            val roundedTriangleArea = Math.round(validTriangleArea*100)/100\n\
    \            if (roundedTriangleArea == validTriangleArea) {\n               \
    \ roundedTriangleArea\n            } else {\n                -1\n            }\n\
    \        } else {\n            -1\n        }", "        val a = Math.sqrt(a *\
    \ a + b * b + c * c)\n        val b = Math.sqrt(a * a + b * b + c * c)\n     \
    \   val c = Math.sqrt(a * a + b * b + c * c)\n        val d = Math.sqrt(a * a\
    \ + b * b + c * c)\n        val area = (a + b + c) / 2.0\n        val area1 =\
    \ (a + b + d) / 2.0\n        val area2 = (a + c + d) / 2.0\n        val area3\
    \ = (a + b + c) / 2.0\n        val area4 = (a + c + d) / 2.0\n        val area5\
    \ = (a + b + d) / 2.0\n        val area6 = (a + c + d) / 2.0\n        val area7\
    \ = (a + b + c) / 2.0\n        val area8 = (a + c + d) / 2.0\n        val area9\
    \ = (a + b + d) / 2.0\n        val area10 = (a + c + d) / 2.0\n        val area11\
    \ = (a + b + c) / 2.0\n        val area12 = (a + c + d) / 2.0\n        val area13\
    \ = (a + b + d) / 2.0\n        val area14 = (a + c + d) / 2.0\n        val area15\
    \ = (a + b + c) / 2.0\n        val area16 = (a + c + d) / 2.0\n        val area17\
    \ = (a + b + d) / 2.0\n        val area18 = (a + c + d) / 2.0\n        val area19\
    \ = (a + b + c) / 2.0\n        val area20 = (a + c + d) / 2.0\n        val area21\
    \ = (a + b + d) / 2.0\n        val area22 = (a + c + d) / 2.0\n        val area23\
    \ = (a + b + c) / 2.0\n        val area24 = (a + c + d) / 2.0\n        val area25\
    \ = (a + b + d) / 2.0\n        val area26 = (a + c + d) / 2.0\n        val area27\
    \ = (a + b + c) / 2.0\n        val area28 = (a + c + d) / 2.0\n        val area29\
    \ = (a + b + d) / 2.0\n        val area30 = (a + c + d) / 2.0\n        val area31\
    \ = (a + b + c) / 2.0\n        val area32 = (a + c + d) / 2.0\n        val area33\
    \ = (a + b + d) / 2.0\n        val area34 = (a + c + d) / 2.0\n        val area35\
    \ = (a + b + c) / 2.0\n        val area36 = (a + c + d) / 2.0\n        val area37\
    \ = (a + b + d) / 2.0\n        val area38 = (a + c + d) / 2.0\n        val area",
  "        val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val sum = a + b + c\n        if (sum > c) {\n            val area = math.round(a\
    \ * c / sum * 100) / 100\n            return area\n        } else {\n        \
    \    return -1\n        }", "        val a = Math.abs(a)\n        val b = Math.abs(b)\n\
    \        val c = Math.abs(c)\n        val ab = a + b\n        val bc = b + c\n\
    \        val ac = a + c\n        if (ab > bc && ab > ac) {\n            val sum\
    \ = ab\n            val a1 = a - b\n            val a2 = a - c\n            val\
    \ a3 = a + c\n            val b1 = b - c\n            val b2 = b - a\n       \
    \     val b3 = b + a\n            val c1 = c - a\n            val c2 = c - b\n\
    \            val c3 = c + b\n            val a4 = a * b\n            val b4 =\
    \ b * c\n            val c4 = c * a\n            val a5 = a * c\n            val\
    \ b5 = b * c\n            val c5 = c * a\n            val a6 = a * b\n       \
    \     val b6 = b * c\n            val c6 = c * a\n            val a7 = a * c\n\
    \            val b7 = b * c\n            val c7 = c * a\n            val a8 =\
    \ a * b\n            val b8 = b * c\n            val c8 = c * a\n            val\
    \ a9 = a * c\n            val b9 = b * c\n            val c9 = c * a\n       \
    \     val a10 = a * b\n            val b10 = b * c\n            val c10 = c *\
    \ a\n            val a11 = a * c\n            val b11 = b * c\n            val\
    \ c11 = c * a\n            val a12 = a * b\n            val b12 = b * c\n    \
    \        val c12 = c * a\n            val a13 = a * c\n            val b13 = b\
    \ * c\n            val c13 = c * a\n            val a14 = a * b\n            val\
    \ b14 = b * c\n            val c14 = c * a\n            val a15 = a * c\n    \
    \        val b15 = b * c\n            val c15 = c * a\n            val a16 = a\
    \ * b\n            val b16 = b * c\n            val c16 = c * a\n            val\
    \ a17 = a * c\n            val b17 = b * c\n            val c17 = c * a\n    \
    \        val a18 = a * b\n            val b18 = b * c\n            val c18 = c\
    \ * a\n            val a19 = a * c\n            val b19 = b * c\n            val\
    \ c19 = c * a\n            val a20 = a * b\n            val b20 = b * c\n    \
    \        val c20 = c * a\n            val a21 = a * c\n            val b21 = b\
    \ * c\n            val ", "        val ab = math.abs(b - a)\n        val ac =\
    \ math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.min(ab,\
    \ ac, bc)\n        val abc_ab = math.abs(abc - ab)\n        val abc_ac = math.abs(abc\
    \ - ac)\n        val abc_bc = math.abs(abc - bc)\n        val abc_abc = math.min(abc_ab,\
    \ abc_ac, abc_bc)\n        val abc_abc_ab = math.abs(abc_abc - abc_ab)\n     \
    \   val abc_abc_ac = math.abs(abc_abc - abc_ac)\n        val abc_abc_bc = math.abs(abc_abc\
    \ - abc_bc)\n        val abc_abc_abc = math.min(abc_abc_ab, abc_abc_ac, abc_abc_bc)\n\
    \        val abc_abc_abc_ab = math.abs(abc_abc_abc - abc_abc_ab)\n        val\
    \ abc_abc_abc_ac = math.abs(abc_abc_abc - abc_abc_ac)\n        val abc_abc_abc_bc\
    \ = math.abs(abc_abc_abc - abc_abc_bc)\n        val abc_abc_abc_abc = math.min(abc_abc_abc_ab,\
    \ abc_abc_abc_ac, abc_abc_abc_bc)\n        val abc_abc_abc_abc_ab = math.abs(abc_abc_abc_abc\
    \ - abc_abc_abc_ab)\n        val abc_abc_abc_abc_ac = math.abs(abc_abc_abc_abc\
    \ - abc_abc_abc_ac)\n        val abc_abc_abc_abc_bc = math.abs(abc_abc_abc_abc\
    \ - abc_abc_abc_bc)\n        val abc_abc_abc_abc_abc = math.min(abc_abc_abc_abc_ab,\
    \ abc_abc_abc_abc_ac, abc_abc_abc_abc_bc)\n        val abc_abc_abc_abc_abc_ab\
    \ = math.abs(abc_abc_abc_abc_abc - abc_abc_abc_abc_ab)\n        val abc_abc_abc_abc_abc_ac\
    \ = math.abs(abc_abc_abc_abc_abc - abc_abc_abc_abc_ac)\n        ", "        val\
    \ side1 = math.sqrt(a * a + b * b + c * c)\n        val side2 = math.sqrt(a *\
    \ a + b * b + c * c)\n        val side3 = math.sqrt(a * a + b * b + c * c)\n \
    \       if (side1 + side2 > side3) {\n            val area = side1 * side2 * side3\n\
    \            val rounded = area.toString.replaceAll(\"\\\\.\\\\d+$\", \"\")\n\
    \            val rounded2 = rounded.toDouble\n            val rounded3 = rounded2.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded4 = rounded3.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded5 = rounded4.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded6 = rounded5.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded7 = rounded6.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded8 = rounded7.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded9 = rounded8.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded10 = rounded9.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded11 = rounded10.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded12 = rounded11.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded13 = rounded12.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded14 = rounded13.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded15 = rounded14.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded16 = rounded15.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded17 = rounded16.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded18 = rounded17.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded19 = rounded18.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded20 = rounded19.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded21 = rounded20.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded22 = rounded21.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded23 = rounded22.toString.replaceAll(\"\
    \\\\.\\\\d+$\", \"\")\n            val rounded24 = rounded23.toString.", "   \
    \     val a = Math.sqrt(a * a)\n        val b = Math.sqrt(b * b)\n        val\
    \ c = Math.sqrt(c * c)\n        val s = a + b + c\n        if (s > 0) {\n    \
    \        val area = s * (s - a) * (s - b) * (s - c)\n            (area / Math.PI).round(2)\n\
    \        } else {\n            -1.0\n        }", "        val a1 = Math.abs(a)\n\
    \        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        val a3\
    \ = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a3\n        val a4\
    \ = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a4\n        val a5\
    \ = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a5\n        val a6\
    \ = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a6\n        val a7\
    \ = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a7\n        val a8\
    \ = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a8\n        val a9\
    \ = a8 + b8\n        val b9 = b8 + c8\n        val c9 = c8 + a9\n        val a10\
    \ = a9 + b9\n        val b10 = b9 + c9\n        val c10 = c9 + a10\n        val\
    \ a11 = a10 + b10\n        val b11 = b10 + c10\n        val c11 = c110 + a11\n\
    \        val a12 = a11 + b11\n        val b12 = b11 + c11\n        val c12 = c11\
    \ + a12\n        val a13 = a12 + b12\n        val b13 = b12 + c12\n        val\
    \ c13 = c12 + a13\n        val a14 = a13 + b13\n        val b14 = b13 + c13\n\
    \        val c14 = c13 + a14\n        val a15 = a14 + b14\n        val b15 = b14\
    \ + c14\n        val c15 = c14 + a15\n        val a16 = a15 + b15\n        val\
    \ b16 = b15 + c15\n        val c16 = c15 + a16\n        val a17 = a16 + b16\n\
    \        val b17 = b16 + c16\n        val c17 = c16 + a17\n        val a18 = a17\
    \ + b17\n        val b18 = b17 + c17\n        val c18 = c17 + a18\n        val\
    \ a19 = a18 + b18\n        val b19 = b18 + c18\n        val c19 = c18 + a19\n\
    \        val a20 = a19 + b19\n        val ", "        val a1 = a / 2\n       \
    \ val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + b1\n        val\
    \ b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val\
    \ b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val\
    \ b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val\
    \ b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val\
    \ b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val\
    \ b7 = b6 + c6\n        val c7 = c6 + a6\n        (a1 + b1 + c1) * (a2 + b2 +\
    \ c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5 + b5 + c5) * (a6 + b6 + c6) * (a7\
    \ + b7 + c7)", "        val sum = a + b + c\n        if (sum > 0) {\n        \
    \    val area = math.sqrt(sum * a * a + sum * b * b + sum * c * c)\n         \
    \   area / 2\n        } else {\n            -1\n        }", "        val area\
    \ = (a + b + c) / 2\n        val side1 = math.sqrt(a * a + b * b + c * c)\n  \
    \      val side2 = math.sqrt(side1 * side1 + a * b + c * c)\n        val side3\
    \ = math.sqrt(side1 * side1 + b * a + c * c)\n        if (side1 + side2 > side3)\
    \ {\n            area\n        } else {\n            -1\n        }", "       \
    \ val a1 = (a + b) / 2\n        val a2 = (b + c) / 2\n        val a3 = (a2 + c)\
    \ / 2\n        val b1 = (a + c) / 2\n        val b2 = (c + a) / 2\n        val\
    \ b3 = (b2 + a) / 2\n        val c1 = (a + b) / 2\n        val c2 = (b + a) /\
    \ 2\n        val c3 = (c + a) / 2\n        val area1 = (a1 + b1 + c1)\n      \
    \  val area2 = (a2 + b2 + c2)\n        val area3 = (a3 + b3 + c3)\n        val\
    \ area4 = (a1 + b2 + c3)\n        val area5 = (a2 + b3 + c1)\n        val area6\
    \ = (b1 + c2 + a3)\n        val area7 = (b2 + c3 + a1)\n        val area8 = (b3\
    \ + c1 + a2)\n        val area9 = (c1 + a3 + b2)\n        val area10 = (c2 + a1\
    \ + b3)\n        val area11 = (c3 + a2 + b1)\n        val area12 = (b2 + a3 +\
    \ c1)\n        val area13 = (b3 + c1 + a2)\n        val area14 = (c1 + a3 + b2)\n\
    \        val area15 = (c2 + a1 + b3)\n        val area16 = (c3 + a2 + b1)\n  \
    \      val area17 = (b2 + a3 + c1)\n        val area18 = (b3 + c1 + a2)\n    \
    \    val area19 = (c1 + a3 + b2)\n        val area20 = (c2 + a1 + b3)\n      \
    \  val area21 = (b2 + a3 + c1)\n        val area22 = (b3 + c1 + a2)\n        val\
    \ area23 = (c1 + a3 + b2)\n        val area24 = (c2 + a1 + b3)\n        val area25\
    \ = (c3 + a2 + b1)\n        val area26 = (b2 + a3 + c1)\n        val area27 =\
    \ (b3 + c1 + a2)\n        val area28 = (c1 + a3 + b2)\n        val area29 = (c2\
    \ + a1 + b3)\n        val area30 = (c3 + a2 + b1)\n        val area31 = (b2 +\
    \ a3 + c1)\n        val area32 = (b3 + c1 + a2)\n        val area33 = (c1 + a3\
    \ + b2)\n        val area34 = (c2 + a1 + b3)\n        val area35 = (c3 + a2 +\
    \ b1)\n        val area36 = (b2 + a3 + c1)\n        val area37 = (b3 + c1 + a2)",
  "        val area = (a + b + c) / 2\n        val sides = if (a + b > c) (a, b, c)\
    \ else (c, a, b)\n        val sum = sides.reduce((a, b) => a + b)\n        if\
    \ (sum > sides(2)) area else -1", "        val area = (a + b + c) / 2\n      \
    \  val side1 = math.sqrt(a * a + b * b + c * c)\n        val side2 = math.sqrt(side1\
    \ * side1)\n        val side3 = math.sqrt(side2 * side2)\n        val isValid\
    \ = side1 + side2 > side3\n        val rounded = if (isValid) area * 100f / side3\
    \ else -1\n        rounded.toFloat", "        val sides = List(a, b, c).sorted\n\
    \        val sum = sides.sum\n        val isTriangle = (sum > sides(2))\n    \
    \    if (isTriangle) {\n            val area = sides.sum * sides.sum / 2\n   \
    \         (area / Math.PI).toFloat\n        } else {\n            -1.0\n     \
    \   }", "        val area = (a + b + c) / 2\n        val sides = a + b + c\n \
    \       if (sides > 0) {\n            if (sides % 2 == 0) {\n                val\
    \ s = sides / 2\n                val area = s * s\n                area\n    \
    \        } else {\n                -1\n            }\n        } else {\n     \
    \       -1\n        }", "        val area = (a + b + c) / 2\n        val isTriangle\
    \ = (a + b > c) && (a + c > b) && (b + c > a)\n        if (isTriangle) {\n   \
    \         area\n        } else {\n            -1\n        }", "        val a =\
    \ Math.sqrt(a * a + b * b + c * c)\n        val b = 2 * a + b\n        val c =\
    \ 2 * a + c\n        val d = Math.sqrt(a * a + b * b + c * c)\n        val area\
    \ = if (a > 0 && b > 0 && c > 0 && d > 0) (a * b * c) / d else -1\n        area",
  "        if (a + b > c) {\n            return -1\n        }\n        val area =\
    \ (a * b) / c\n        val rounded = math.round(area * 100) / 100\n        if\
    \ (rounded == area) {\n            return rounded\n        } else {\n        \
    \    return -1\n        }", "        val side1 = math.sqrt(a * a + b * b)\n  \
    \      val side2 = math.sqrt(c * c + d * d)\n        val side3 = math.sqrt(side1\
    \ * side1 + side2 * side2)\n        if (side1 + side2 > side3) {\n           \
    \ val area = side1 * side2 * 0.5\n            area.toFloat\n        } else {\n\
    \            -1.0\n        }", "        val sides = List(a, b, c)\n        val\
    \ sum = sides.sum\n        val isTriangle = (sum > sides(2))\n        if (isTriangle)\
    \ {\n            val area = sides.map(x => x * x).sum\n            (area / sides(3).toFloat).toInt\n\
    \        } else {\n            -1.0\n        }", "        val a1 = a / 2.0\n \
    \       val b1 = b / 2.0\n        val c1 = c / 2.0\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n\
    \        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n\
    \        val b5 = b4 + c4\n        val c5 = c4 + a4\n        val a6 = a5 + b5\n\
    \        val b6 = b5 + c5\n        val c6 = c5 + a5\n        val a7 = a6 + b6\n\
    \        val b7 = b6 + c6\n        val c7 = c6 + a6\n        val a8 = a7 + b7\n\
    \        val b8 = b7 + c7\n        val c8 = c7 + a7\n        (a1 + b2 + c3 > a2\
    \ + b3 + c1) ? a8 * b6 + (a1 * b2 + a2 * b3 + a3 * b1) * (a8 * b6 + b8 * a7) +\
    \ (a1 * b3 + a2 * b1 + a3 * b2) * (a8 * b7 + b8 * a1) : -1", "        val a1 =\
    \ a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 +\
    \ b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        val a3 = a2\
    \ + b2\n        val b3 = b2 + c3\n        val c3 = c2 + a3\n        val a4 = a3\
    \ + b3\n        val b4 = b4 + c3\n        val c4 = c4 + a4\n        val a5 = a4\
    \ + b4\n        val b5 = b5 + c4\n        val c5 = c5 + a5\n        val a6 = a5\
    \ + b5\n        val b6 = b6 + c5\n        val c6 = c6 + a6\n        val a7 = a6\
    \ + b6\n        val b7 = b7 + c6\n        val c7 = c7 + a7\n        val a8 = a7\
    \ + b7\n        val b8 = b8 + c7\n        val c8 = c8 + a8\n        val a9 = a8\
    \ + b8\n        val b9 = b9 + c8\n        val c9 = c9 + a9\n        val a10 =\
    \ a9 + b9\n        val b10 = b10 + c9\n        val c10 = c10 + a10\n        val\
    \ a11 = a10 + b10\n        val b11 = b11 + c10\n        val c11 = c11 + a11\n\
    \        val a12 = a11 + b11\n        val b12 = b12 + c11\n        val c12 = c12\
    \ + a12\n        val a13 = a12 + b12\n        val b13 = b13 + c12\n        val\
    \ c13 = c13 + a13\n        val a14 = a13 + b13\n        val b14 = b14 + c13\n\
    \        val c14 = c14 + a14\n        val a15 = a14 + b14\n        val b15 = b15\
    \ + c14\n        val c15 = c15 + a15\n        val a16 = a15 + b15\n        val\
    \ b16 = b16 + c15\n        val c16 = c16 + a16\n        val a17 = a16 + b16\n\
    \        val b17 = b17 + c16\n        val c17 = c17 + a17\n        val a18 = a17\
    \ + b17\n        val b18 = b18 + c17\n        val c18 = c18 + a18\n        val\
    \ a19 = a18 + b18\n        val b19 = b19 + c18\n        val c19 = c19 + a19\n\
    \        val a20 = a19 + b", "        val a1 = a / 2.0\n        val b1 = b / 2.0\n\
    \        val c1 = c / 2.0\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n\
    \        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a6\n        (a1 + b1 + c1 + a2 + b2 + c2 + a3 + b3 + c3\
    \ + a4 + b4 + c4 + a5 + b5 + c5 + a6 + b6 + c6 +a7 + b7 + c7) / 8.0", "      \
    \  val a1 = (a + b + c) / 2.0\n        val a2 = Math.sqrt(a1 * a1 + b * b + c\
    \ * c)\n        val a3 = Math.sqrt(a1 * a1 + a2 * a + b * b + c * c)\n       \
    \ val a4 = Math.sqrt(a1 * a1 + a2 * a + a3 * a + c * c)\n        val a5 = Math.sqrt(a1\
    \ * a1 + a2 * a + a3 * a + a4 * a + c * c)\n        val a6 = Math.sqrt(a1 * a1\
    \ + a2 * a + a3 * a + a4 * a + a5 * a + c * c)\n        val a7 = Math.sqrt(a1\
    \ * a1 + a2 * a + a3 * a + a4 * a + a5 * a + a6 * a + c * c)\n        val a8 =\
    \ Math.sqrt(a1 * a1 + a2 * a + a3 * a + a4 * a + a5 * a + a6 * a + a7 * a + c\
    \ * c)\n        val a9 = Math.sqrt(a1 * a1 + a2 * a + a3 * a + a4 * a + a5 * a\
    \ + a6 * a + a7 * a + a8 * a + c * c)\n        val a10 = Math.sqrt(a1 * a1 + a2\
    \ * a + a3 * a + a4 * a + a5 * a + a6 * a + a7 * a + a8 * a + a9 * a + c * c)\n\
    \        val a11 = Math.sqrt(a1 * a1 + a2 * a + a3 * a + a4 * a + a5 * a + a6\
    \ * a + a7 * a + a8 * a + a9 * a + a10 * a + c * c)\n        val a12 = Math.sqrt(a1\
    \ * a1 + a2 * a + a3 * a + a4 * a + a5 * a + a6 * a + a7 * a + a8 * a + a9 * a\
    \ + a10 * a + a11 * a + c * c)\n        val a13 = Math.sqrt(a1 * a1 + a2 * a +\
    \ a3 * a + a4 * a + a5 * a + a6 * a + a7 * a + a8 * a + a9 * a + a10 * a + a11\
    \ * a + a12 * a + c * c)\n        val a14 = Math.sqrt(a1 * a1 + a2 * a + a3 *\
    \ a + a4 * a + a5 * a + a6 * a + a7 * a + a8 * a + a9 * a + a10 * a + a11 * a\
    \ + a12 * a + a13 * a + c * c)\n        val a15 = Math.sqrt(a1 * a1 + a2 * a +\
    \ a3 * a + a4 * a + a5 * a + a6 * a + a7 * a + a8 * a + a9 * a + a10 * a + a11\
    \ * a + a12 * a + a13 * a + a14 * a + c * c)\n        val a16 = Math.sqrt(a1 *\
    \ a1 + a2 * a + a3 * a + a4 * a + a5 * a + a6 * a + a7 * ", "        val sum =\
    \ a + b + c\n        if (sum > 0) {\n            val area = math.sqrt(sum * a\
    \ * a + sum * b * b + sum * c * c)\n            (area / 2).toFloat\n        }\
    \ else {\n            -1.0\n        }", "        val a1 = Math.abs(a)\n      \
    \  val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a2\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c3\n        val c3 = c2 + a3\n        val a4 = a3 + b3\n\
    \        val b4 = b3 + c4\n        val c4 = c4 + a4\n        val a5 = a4 + b4\n\
    \        val b5 = b5 + c4\n        val c5 = c5 + a5\n        val a6 = a5 + b5\n\
    \        val b6 = b6 + c5\n        val c6 = c6 + a6\n        val a7 = a6 + b6\n\
    \        val b7 = b7 + c6\n        val c7 = c7 + a7\n        val a8 = a7 + b7\n\
    \        val b8 = b8 + c7\n        val c8 = c8 + a8\n        val a9 = a8 + b8\n\
    \        val b9 = b9 + c8\n        val c9 = c9 + a9\n        val a10 = a9 + b9\n\
    \        val b10 = b10 + c9\n        val c10 = c10 + a10\n        val a11 = a10\
    \ + b10\n        val b11 = b11 + c10\n        val c11 = c11 + a11\n        val\
    \ a12 = a11 + b11\n        val b12 = b12 + c11\n        val c12 = c12 + a12\n\
    \        val a13 = a12 + b12\n        val b13 = b13 + c12\n        val c13 = c13\
    \ + a13\n        val a14 = a13 + b13\n        val b14 = b14 + c13\n        val\
    \ c14 = c14 + a14\n        val a15 = a14 + b14\n        val b15 = b15 + c14\n\
    \        val c15 = c15 + a15\n        val a16 = a15 + b15\n        val b16 = b16\
    \ + c15\n        val c16 = c16 + a16\n        val a17 = a16 + b16\n        val\
    \ b17 = b17 + c16\n        val c17 = c17 + a17\n        val a18 = a17 + b17\n\
    \        val b18 = b18 + c17\n        val c18 = c18 + a18\n        val a19 = a18\
    \ + b18\n        val b19 = b19 + c18\n        val c19 = c19 + a19\n        val\
    \ a20 = a19 + b19\n        ", "        val area = (a + b + c) / 2\n        val\
    \ isTriangle = (a + b > c) && (a + c > b) && (b + c > a)\n        if (isTriangle)\
    \ {\n            area\n        } else {\n            -1\n        }", "       \
    \ val a = math.pow(a, 2)\n        val b = math.pow(b, 2)\n        val c = math.pow(c,\
    \ 2)\n        val s = (a + b + c) / 2\n        if (s > 0) {\n            val area\
    \ = math.sqrt(s * (s - a) * (s - b) * (s - c))\n            area\n        } else\
    \ {\n            -1\n        }", "        val area = (a + b + c) / 2\n       \
    \ val side1 = math.sqrt(a * a + b * b + c * c)\n        val side2 = math.sqrt(side1\
    \ * side1 + a * b + b * c)\n        val side3 = math.sqrt(side1 * side1 + a *\
    \ a + b * b)\n        if (side1 + side2 > side3) {\n            area\n       \
    \ } else {\n            -1\n        }", "        val sum = a + b + c\n       \
    \ if (sum > 0) {\n            val area = math.sqrt(sum * a * a + sum * b * b +\
    \ sum * c * c)\n            (area / 2).toFloat\n        } else {\n           \
    \ -1.0\n        }", "        val a1 = a / 2\n        val b1 = b / 2\n        val\
    \ c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val\
    \ c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val\
    \ c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val\
    \ c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val\
    \ c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val\
    \ c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val\
    \ c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val\
    \ c8 = c7 + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n        val\
    \ c9 = c8 + a8\n        (a9 * b9) - (a8 * b8) - (a9 * b7) + (a8 * b7) - (a9 *\
    \ b6) + (a8 * b6) - (a9 * b5) + (a8 * b5) - (a9 * b4) + (a8 * b4) - (a9 * b3)\
    \ + (a8 * b3) - (a9 * b2) + (a8 * b2) - (a9 * b1) + (a8 * b1) - (a8 * c1) + (a8\
    \ * c1) - (a8 * c2) + (a8 * c2) - (a8 * c3) + (a8 * c3) - (a8 * c4) + (a8 * c4)\
    \ - (a8 * c5) + (a8 * c5) - (a8 * c6) + (a8 * c6) - (a8 * c7) + (a8 * c7) - (a8\
    \ * c8) + (a8 * c8)", "        val a = Math.sqrt(a * a)\n        val b = Math.sqrt(b\
    \ * b)\n        val c = Math.sqrt(c * c)\n        val s = (a + b + c) / 2\n  \
    \      if (s > a) \n            -1\n        else if (s > b) \n            -1\n\
    \        else if (s > c) \n            -1\n        else \n            Math.round((s\
    \ * s) / 2)", "        val sum = a + b + c\n        if (sum > 0) {\n         \
    \   val area = a / sum\n            val area2 = b / sum\n            val area3\
    \ = c / sum\n            val area4 = area + area2 + area3\n            area4.toFloat\n\
    \        } else {\n            -1.0\n        }", "        val sum = a + b + c\n\
    \        if (sum > 0) {\n            val area = math.sqrt(sum * (sum - a) * (sum\
    \ - b) * (sum - c))\n            area / 100\n        } else {\n            -1\n\
    \        }", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n   \
    \     val c1 = Math.abs(c)\n        val sum = a1 + b1 + c1\n        if (sum >\
    \ a1 && sum > b1 && sum > c1) {\n            val area = (a + b + c) / 2\n    \
    \        (area / Math.sqrt(a1 * a1 + b1 * b1 + c1 * c1)).toFloat\n        } else\
    \ {\n            -1.0\n        }", "        val a = Math.sqrt(a * a)\n       \
    \ val b = Math.sqrt(b * b)\n        val c = Math.sqrt(c * c)\n        val s =\
    \ (a + b + c) / 2\n        val area = if (s > a) s * (s - a) * (s - b) * (s -\
    \ c) / 6\n        else -1\n        area", "        val a = Math.sqrt(a * a + b\
    \ * b + c * c)\n        val b = 2 * a \n        val c = Math.sqrt(a * a + b *\
    \ b + c * c)\n        val d = Math.sqrt(a * a + b * b + c * c)\n        val e\
    \ = Math.sqrt(a * a + b * b + c * c)\n        val f = Math.sqrt(a * a + b * b\
    \ + c * c)\n        val g = Math.sqrt(a * a + b * b + c * c)\n        val h =\
    \ Math.sqrt(a * a + b * b + c * c)\n        val i = Math.sqrt(a * a + b * b +\
    \ c * c)\n        val j = Math.sqrt(a * a + b * b + c * c)\n        val k = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val l = Math.sqrt(a * a + b * b + c * c)\n   \
    \     val m = Math.sqrt(a * a + b * b + c * c)\n        val n = Math.sqrt(a *\
    \ a + b * b + c * c)\n        val o = Math.sqrt(a * a + b * b + c * c)\n     \
    \   val p = Math.sqrt(a * a + b * b + c * c)\n        val q = Math.sqrt(a * a\
    \ + b * b + c * c)\n        val r = Math.sqrt(a * a + b * b + c * c)\n       \
    \ val s = Math.sqrt(a * a + b * b + c * c)\n        val t = Math.sqrt(a * a +\
    \ b * b + c * c)\n        val u = Math.sqrt(a * a + b * b + c * c)\n        val\
    \ v = Math.sqrt(a * a + b * b + c * c)\n        val w = Math.sqrt(a * a + b *\
    \ b + c * c)\n        val x = Math.sqrt(a * a + b * b + c * c)\n        val y\
    \ = Math.sqrt(a * a + b * b + c * c)\n        val z = Math.sqrt(a * a + b * b\
    \ + c * c)\n        val a = Math.sqrt(a * a + b * b + c * c)\n        val b =\
    \ Math.sqrt(a * a + b * b + c * c)\n        val c = Math.sqrt(a * a + b * b +\
    \ c * c)\n        val d = Math.sqrt(a * a + b * b + c * c)\n        val e = Math.sqrt(a\
    \ * a + b * b + c * c)\n        val f = Math.sqrt(a * a + b * b + c * c)\n   \
    \     val g = Math.sqrt(a * a + b * b + c * c)\n        val h = Math.sqrt(a *\
    \ a + b * b + c * c)\n        val i = Math.sqrt(a * a + b * b + ", "        val\
    \ a1 = (a + b) / 2\n        val a2 = (b + c) / 2\n        val a3 = (c + a) / 2\n\
    \        val sum = a1 + a2 + a3\n        if (sum > a3)\n            sum - a3\n\
    \        else\n            -1", "        val a1 = Math.abs(a)\n        val b1\
    \ = Math.abs(b)\n        val c1 = Math.abs(c)\n        val sum = a1 + b1 + c1\n\
    \        if (sum > 0) {\n            val a2 = a1 / sum\n            val b2 = b1\
    \ / sum\n            val c2 = c1 / sum\n            val area = a2 * b2 * c2\n\
    \            area\n        } else {\n            -1.0\n        }", "        val\
    \ a = Math.abs(a)\n        val b = Math.abs(b)\n        val c = Math.abs(c)\n\
    \        val ab = a + b\n        val bc = b + c\n        val ac = a + c\n    \
    \    val abc = ab + bc\n        val acb = ac + ab\n        val abcb = abc+ acb\n\
    \        val abcc = abc + abc\n        val abcc = abc + abcc\n        val abccc\
    \ = abcc+ abcc\n        val abcccb = abccc+ abccc\n        val abcccba = abcccba+\
    \ abcccba\n        val abcccbac = abcccbac+ abcccbac\n        val abcccbaca =\
    \ abcccbaca+ abcccbaca\n        val abcccbacab = abcccbacab+ abcccbacab\n    \
    \    val abcccbacabc = abcccbacabc+ abcccbacabc\n        val abcccbacabca = abcccbacabca+\
    \ abcccbacabca\n        val abcccbacabcab = abcccbacabcab+ abcccbacabcab\n   \
    \     val abcccbacabcabc = abcccbacabcabc+ abcccbacabcabc\n        val abcccbacabcabca\
    \ = abcccbacabcabca+ abcccbacabcabca\n        val abcccbacabcabcab = abcccbacabcabcab+\
    \ abcccbacabcabcab\n        val abcccbacabcabcabc = abcccbacabcabcabc+ abcccbacabcabcabc\n\
    \        val abcccbacabcabcabca = abcccbacabcabcabca+ abcccbacabcabcabca\n   \
    \     val abcccbacabcabcabcab = abcccbacabcabcabcab+ abcccbacabcabcabcab\n   \
    \     val abcccbacabcabcabcabc = abcccbacabcabcabcabc+ abcccbacabcabcabcabc\n\
    \        val abcccbacabcabcabcabca = abcccbacabcabcabcabca+ abcccbacabcabcabcabca\n\
    \        val abcccbacabcabcabcabcab = abcccbacabcabcabcabcab+ abcccbacabcabcabcabcab\n\
    \        val ab", "        val a1 = a / 2\n        val b1 = b / 2\n        val\
    \ c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val\
    \ c2 = c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2 + c3\n        val\
    \ c3 = c2 + a3\n        val a4 = a3 + b3\n        val b4 = b4 + c3\n        val\
    \ c4 = c4 + a4\n        val a5 = a4 + b4\n        val b5 = b5 + c4\n        val\
    \ c5 = c5 + a5\n        val a6 = a5 + b5\n        val b6 = b6 + c5\n        val\
    \ c6 = c6 + a6\n        val a7 = a6 + b6\n        val b7 = b7 + c6\n        val\
    \ c7 = c7 + a7\n        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4\
    \ + b4 + c4) * (a5 + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7)", "        val\
    \ a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n\
    \        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n\
    \        val a9 = a8 + b8\n        val b9 = b8 + c8\n        val c9 = c8 + a8\n\
    \        val a10 = a9 + b9\n        val b10 = b9 + c9\n        val c10 = c9 +\
    \ a9\n        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4)\
    \ * (a5 + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7) * (a8 + b8 + c8) * (a9 +\
    \ b9 + c9) * (a10 + b10 + c10)", "        val a1 = (a + b) / 2\n        val a2\
    \ = (b + c) / 2\n        val a3 = (c + a) / 2\n        val b1 = (a + c) / 2\n\
    \        val b2 = (c + b) / 2\n        val b3 = (b + a) / 2\n        val c1 =\
    \ (a + b) / 2\n        val c2 = (b + c) / 2\n        val c3 = (c + a) / 2\n  \
    \      val d1 = (a + c) / 2\n        val d2 = (c + b) / 2\n        val d3 = (b\
    \ + a) / 2\n        val e1 = (a + b) / 2\n        val e2 = (b + c) / 2\n     \
    \   val e3 = (c + a) / 2\n        val f1 = (a + c) / 2\n        val f2 = (b +\
    \ c) / 2\n        val f3 = (c + a) / 2\n        val g1 = (a + b) / 2\n       \
    \ val g2 = (b + c) / 2\n        val g3 = (c + a) / 2\n        val h1 = (a + b)\
    \ / 2\n        val h2 = (b + c) / 2\n        val h3 = (c + a) / 2\n        val\
    \ i1 = (a + c) / 2\n        val i2 = (b + c) / 2\n        val i3 = (c + a) / 2\n\
    \        val j1 = (a + b) / 2\n        val j2 = (b + c) / 2\n        val j3 =\
    \ (c + a) / 2\n        val k1 = (a + c) / 2\n        val k2 = (b + c) / 2\n  \
    \      val k3 = (c + a) / 2\n        val l1 = (a + b) / 2\n        val l2 = (b\
    \ + c) / 2\n        val l3 = (c + a) / 2\n        val m1 = (a + c) / 2\n     \
    \   val m2 = (b + c) / 2\n        val m3 = (c + a) / 2\n        val n1 = (a +\
    \ b) / 2\n        val n2 = (b + c) / 2\n        val n3 = (c + a) / 2\n       \
    \ val o1 = (a + c) / 2\n        val o2 = (b + c) / 2\n        val o3 = (c + a)\
    \ / 2\n        val p1 = (a + b) / 2\n        val p2 = (b + c) / 2\n        val\
    \ p3 = (c + a) / 2\n        val q1 = (a + c) / 2\n        val q2 = (b + c) / 2\n\
    \        val q3 = (c + a) / 2\n        val r1 = (a + b) / 2\n        val r2 =\
    \ (b + c) / 2\n        val r3 = (c + a) / 2\n        val s1 = (a + c) / 2\n  \
    \      val s2 = (b + c) / 2\n        val s3 = (c + a) / 2\n        val t1 = (a\
    \ + b) / 2\n        ", "        val sides = List(a, b, c).sorted\n        val\
    \ sum = sides.sum\n        if (sum > sides(2)) sides(2) * sides(2) * sides(2)\
    \ else -1", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n    \
    \    val c1 = Math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a3\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n\
    \        val c4 = c3 + a4\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a5\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a6\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a7\n        (a1 + b2 + c3 <= a2 + b3 + c4 && a3 + b4 +\
    \ c5 <= a2 + b2 + c3 && a4 + b5 + c6 <= a2 + b2 + c3 && a5 + b6 + c7 <= a2 + b2\
    \ + c3 && a6 + b7 + c8 <= a2 + b2 + c3 && a7 + b8 + c9 <= a2 + b2 + c3)\n    \
    \        ? ((a1 + b2 + c3 <= a2 + b3 + c4 && a3 + b4 + c5 <= a2 + b2 + c3 && a4\
    \ + b5 + c6 <= a2 + b2 + c3 && a5 + b6 + c7 <= a2 + b2 + c3 && a6 + b7 + c8 <=\
    \ a2 + b2 + c3 && a7 + b8 + c9 <= a2 + b2 + c3)\n                ? ((a1 + b2 +\
    \ c3 <= a2 + b3 + c4 && a3 + b4 + c5 <= a2 + b2 + c3 && a4 + b5 + c6 <= a2 + b2\
    \ + c3 && a5 + b6 + c7 <= a2 + b2 + c3 && a6 + b7 + c8 <= a2 + b2 + c3 && a7 +\
    \ b8 + c9 <= a2 + b2 + c3)\n                    ? ((a1 + b2 + c3 <= a2 + b3 +\
    \ c4 && a3 + b4 + c5 <= a2 + b2 + c3 && a4 + b5 + c6 <= a2 + b2 + c3 && a5 + b6\
    \ + c7 <= a2 + b2 + c3 && a6 + b7 + c8 <= a2 + b2 + c3 && a7 + b8 + c9 <= a2 +\
    \ b2 + c3)\n                        ? ((a1 + b2 + c3 <= a2 + b", "        val\
    \ a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val sum = a + b + c\n        if (sum > c) {\n            return -1\n\
    \        }\n        val area = math.sqrt(a * a + b * b + c * c)\n        val rounded\
    \ = math.round(area * 100) / 100\n        return rounded", "        val area =\
    \ (a + b + c) / 2\n        val sides = (a, b, c) match {\n            case (a,\
    \ b, c) => a + b + c\n            case (a, b, c) => b + c + a\n            case\
    \ (a, b, c) => c + a + b\n        }\n        if (sides == 0) area\n        else\
    \ if (sides == 1) area\n        else if (sides == 2) area\n        else if (sides\
    \ > 2) area\n        else -1", "        val a = Math.sqrt(a * a * a)\n       \
    \ val b = Math.sqrt(b * b * b)\n        val c = Math.sqrt(c * c * c)\n       \
    \ val s = (a + b + c) / 2\n        if (s > 0) {\n            val area = s * (s\
    \ - a) * (s - b) * (s - c)\n            val rounded = area * 100f / Math.pow(s,\
    \ 2)\n            rounded.toFloat\n        } else {\n            -1\n        }",
  "        val side1 = math.sqrt(a * a + b * b)\n        val side2 = math.sqrt(c *\
    \ c + d * d)\n        val side3 = math.sqrt(side1 * side1 + side2 * side2)\n \
    \       if (side1 + side2 > side3) {\n            val area = side1 * side2 * 0.5\n\
    \            val rounded = area.toString.split(\"\\\\.\").takeRight(2).mkString(\"\
    .\")\n            rounded.toFloat\n        } else {\n            -1\n        }",
  "        val sum = a + b + c\n        if (sum < 0) -1\n        else (sum * sum)\
    \ / 2.0", "        val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c\
    \ / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1\
    \ + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2\
    \ + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3\
    \ + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4\
    \ + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5\
    \ + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6\
    \ + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7\
    \ + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n        val c9 = c8\
    \ + a8\n        val a10 = a9 + b9\n        val b10 = b9 + c9\n        val c10\
    \ = c9 + a9\n        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 +\
    \ b4 + c4) * (a5 + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7) * (a8 + b8 + c8)\
    \ * (a9 + b9 + c9) * (a10 + b10 + c10)", "        val area = (a + b + c) / 2\n\
    \        val isValid = a > 0 && b > 0 && c > 0\n        if (isValid) {\n     \
    \       val area1 = (a + b) / 2\n            val area2 = (a + c) / 2\n       \
    \     val area3 = (b + c) / 2\n            val area4 = (a * b) / 2\n         \
    \   val area5 = (a * c) / 2\n            val area6 = (b * c) / 2\n           \
    \ val area7 = area1 + area2 + area3\n            val area8 = area4 + area5 + area6\n\
    \            val area9 = area7 + area8\n            val area10 = area9 + area1\n\
    \            val area11 = area10 + area2\n            val area12 = area11 + area3\n\
    \            val area13 = area12 + area4\n            val area14 = area13 + area5\n\
    \            val area15 = area14 + area6\n            val area16 = area15 + area7\n\
    \            val area17 = area16 + area8\n            val area18 = area17 + area9\n\
    \            val area19 = area18 + area10\n            val area20 = area19 + area11\n\
    \            val area21 = area20 + area12\n            val area22 = area21 + area13\n\
    \            val area23 = area22 + area14\n            val area24 = area23 + area15\n\
    \            val area25 = area24 + area16\n            val area26 = area25 + area17\n\
    \            val area27 = area26 + area18\n            val area28 = area27 + area19\n\
    \            val area29 = area28 + area20\n            val area30 = area29 + area21\n\
    \            val area31 = area30 + area22\n            val area32 = area31 + area23\n\
    \            val area33 = area32 + area24\n            val area34 = area33 + area25\n\
    \            val area35 = area34 + area26\n            val area36 = area35 + area27\n\
    \            val area37 = area36 + area28\n            val area38 = area37 + area29\n\
    \            val area39 = area38 + area30\n            val area40 = area39 + area31\n\
    \            val area41 = area40 + area32\n            val area42 = area41 + area33\n\
    \            val area43 = area42 + area34\n            val area44 = area43 + area35\n\
    \            val area45 = area44 + area36\n            val area46 = area", " \
    \       val a1 = (a + b) / 2\n        val a2 = (b + c) / 2\n        val a3 = (a2\
    \ + c) / 2\n        val a4 = (a1 + a3)\n        val a5 = (a1 + a2)\n        val\
    \ a6 = (a2 + a3)\n        val a7 = (a3 + a4)\n        val a8 = (a4 + a5)\n   \
    \     val a9 = (a5 + a6)\n        val a10 = (a6 + a7)\n        val a11 = (a7 +\
    \ a8)\n        val a12 = (a8 + a9)\n        val a13 = (a9 + a10)\n        val\
    \ a14 = (a10 + a11)\n        val a15 = (a11 + a12)\n        val a16 = (a12 + a13)\n\
    \        val a17 = (a13 + a14)\n        val a18 = (a14 + a15)\n        val a19\
    \ = (a15 + a16)\n        val a20 = (a16 + a17)\n        val a21 = (a17 + a18)\n\
    \        val a22 = (a18 + a19)\n        val a23 = (a19 + a20)\n        val a24\
    \ = (a20 + a21)\n        val a25 = (a21 + a22)\n        val a26 = (a22 + a23)\n\
    \        val a27 = (a23 + a24)\n        val a28 = (a24 + a25)\n        val a29\
    \ = (a25 + a26)\n        val a30 = (a26 + a27)\n        val a31 = (a27 + a28)\n\
    \        val a32 = (a28 + a29)\n        val a33 = (a29 + a30)\n        val a34\
    \ = (a30 + a31)\n        val a35 = (a31 + a32)\n        val a36 = (a32 + a33)\n\
    \        val a37 = (a33 + a34)\n        val a38 = (a34 + a35)\n        val a39\
    \ = (a35 + a36)\n        val a40 = (a36 + a37)\n        val a41 = (a37 + a38)\n\
    \        val a42 = (a38 + a39)\n        val a43 = (a39 + a40)\n        val a44\
    \ = (a40 + a41)\n        val a45 = (a41 + a42)\n        val a46 = (a42 + a43)\n\
    \        val a47 = (a43 + a44)\n        val a48 = (a44 + a45)\n        val a49\
    \ = (a45 + a46)\n        val a50 = (a46 + a47)\n        val a51 = (a47 + a48)\n\
    \        val a52 = (a48 + a49)\n        val a53 = (a49 + a50)\n        val a54\
    \ = (a50 + a51)\n        val a55 = (a51 + a5", "        val sides = List(a, b,\
    \ c)\n        val sum = sides.sum\n        if (sum > sides.last) sides.last else\
    \ sides.last * sides.last", "        val a1 = a / 2\n        val b1 = b / 2\n\
    \        val c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n\
    \        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a6\n        (a1 + b2 + c3 > a2 + b3 + c4 > a3 + b4 + c5\
    \ >\n            a4 + b5 + c6 >\n            a5 + b6 + c7 >\n            a6 +\
    \ b7 + c8)\n            ? Float(a1 + b2 + c3 > a2 + b3 + c4 > a3 + b4 + c5 >\n\
    \                a4 + b5 + c6 >\n                a5 + b6 + c7 >\n            \
    \    a6 + b7 + c8)\n            : Float(-1)", "        val side1 = math.sqrt(a\
    \ * a + b * b + c * c)\n        val side2 = math.sqrt(a * a + b * b - c * c)\n\
    \        val side3 = math.sqrt(a * a - b * b + c * c)\n        val side4 = math.sqrt(a\
    \ * a - b * b - c * c)\n        val side5 = math.sqrt(a * a + b * b - c * c)\n\
    \        val side6 = math.sqrt(a * a + b * b + c * c - side1)\n        val side7\
    \ = math.sqrt(a * a - b * b + c * c - side1)\n        val side8 = math.sqrt(a\
    \ * a - b * b - c * c - side1)\n        val side9 = math.sqrt(a * a + b * b -\
    \ c * c - side1)\n        val side10 = math.sqrt(a * a + b * b + c * c - side1)\n\
    \        val side11 = math.sqrt(a * a - b * b + c * c - side1)\n        val side12\
    \ = math.sqrt(a * a - b * b - c * c - side1)\n        val side13 = math.sqrt(a\
    \ * a + b * b - c * c - side1)\n        val side14 = math.sqrt(a * a + b * b +\
    \ c * c - side1)\n        val side15 = math.sqrt(a * a - b * b + c * c - side1)\n\
    \        val side16 = math.sqrt(a * a - b * b - c * c - side1)\n        val side17\
    \ = math.sqrt(a * a + b * b - c * c - side1)\n        val side18 = math.sqrt(a\
    \ * a + b * b + c * c - side1)\n        val side19 = math.sqrt(a * a - b * b +\
    \ c * c - side1)\n        val side20 = math.sqrt(a * a - b * b - c * c - side1)\n\
    \        val side21 = math.sqrt(a * a + b * b - c * c - side1)\n        val side22\
    \ = math.sqrt(a * a + b * b + c * c - side1)\n        val side23 = math.sqrt(a\
    \ * a - b * b + c * c - side1)\n        val side24 = math.sqrt(a * a - b * b -\
    \ c * c - side1)\n        val side25 = math.sqrt(a * a + b * b - c * c - side1)\n\
    \        val side26 = math.sqrt(a * a + b * b + c * c - side1)\n        val side27\
    \ = math.sqrt(a * a - b * b + c * c - side1)\n        val side28 = math.sqrt(a\
    \ * a - b * b - c * c - side1)\n        val side29 = math.sqrt(a * a + b * b -\
    \ c * c - side1)\n        val side30 = math.sqrt(a * a + b * b + ", "        val\
    \ area = (a + b + c) / 2\n        val isTriangle = (a + b > c) && (a + c > b)\
    \ && (b + c > a)\n        if (isTriangle) {\n            area\n        } else\
    \ {\n            -1\n        }", "        val a1 = a / 2.0\n        val b1 = b\
    \ / 2.0\n        val c1 = c / 2.0\n        val side1 = math.sqrt(a1 * a1 + b1\
    \ * b1 + c1 * c1)\n        val side2 = math.sqrt(a1 * a1 + b1 * b1)\n        val\
    \ side3 = math.sqrt(a1 * a1 + c1 * c1)\n        val area1 = side1 * side2\n  \
    \      val area2 = side1 * side3\n        val area3 = side2 * side3\n        if\
    \ (area1 + area2 + area3 == side1) {\n            return area1\n        } else\
    \ if (area1 + area2 + area3 == side2) {\n            return area2\n        } else\
    \ if (area1 + area2 + area3 == side3) {\n            return area3\n        } else\
    \ {\n            return -1\n        }", "        val a = Math.abs(a)\n       \
    \ val b = Math.abs(b)\n        val c = Math.abs(c)\n        val ab = a + b\n \
    \       val bc = b + c\n        val ac = a + c\n        val area = if (ab > bc\
    \ && ab > ac) ab / (a + b + c) else -1\n        area.toFloat", "        val a\
    \ = Math.sqrt(a * a)\n        val b = Math.sqrt(b * b)\n        val c = Math.sqrt(c\
    \ * c)\n        val s = (a + b + c) / 2\n        if (s > a * c + b * d) -1\n \
    \       else s * (s - a) * (s - b) * (s - c) / 6", "        if (a + b > c) {\n\
    \            return -1\n        }\n        val area = a + (b * 2) + (c * 2)\n\
    \        val rounded = math.round(area * 100) / 100\n        if (rounded == area)\
    \ {\n            return rounded\n        } else {\n            return -1\n   \
    \     }", "        val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c\
    \ / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1\
    \ + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2\
    \ + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3\
    \ + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4\
    \ + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5\
    \ + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6\
    \ + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7\
    \ + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n        val c9 = c8\
    \ + a8\n        (a9 * b9) - (a8 * b8)", "        val a1 = Math.abs(a)\n      \
    \  val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n        val ab = b - a\n\
    \        val ac = c - a\n        val bc = b - c\n        val ad = a - d\n    \
    \    val bd = b - d\n        val cd = c - d\n        val abc = ab * ac\n     \
    \   val bcd = bc * bd\n        val abcd = abc * bcd\n        val abdc = ab * cd\n\
    \        val acbd = ac * bd\n        val acdbc = ac * bc\n        val adbc = ad\
    \ * bc\n        val adcb = ad * cb\n        val bcda = bc * da\n        val bcdc\
    \ = bd * cd\n        val bcdaa = bd * daa\n        val bcdca = bd * dca\n    \
    \    val acbda = ac * bda\n        val acdbb = ac * dbb\n        val adbcb = ad\
    \ * bcb\n        val adcbc = ad * cbc\n        val bcdaa = bc * daa\n        val\
    \ bcdca = bd * dca\n        val bcdaab = bd * daab\n        val bcdcab = bd *\
    \ dcab\n        val acbda = ac * bda\n        val acdbb = ac * dbb\n        val\
    \ adbcb = ad * bcb\n        val adcbc = ad * cbc\n        val bcdaab = bd * daab\n\
    \        val bcdcab = bd * dcab\n        val acbda = ac * bda\n        val acdbb\
    \ = ac * dbb\n        val adbcb = ad * bcb\n        val adcbc = ad * cbc\n   \
    \     val bcdaab = bd * daab\n        val bcdcab = bd * dcab\n        val acbda\
    \ = ac * bda\n        val acdbb = ac * dbb\n        val adbcb = ad * bcb\n   \
    \     val adcbc = ad * cbc\n        val bcdaab = bd * daab\n        val bcdcab\
    \ = bd * dcab\n        val acbda = ac * bda\n        val acdbb = ac * dbb\n  \
    \      val adbcb = ad * bcb\n        val adcbc = ad * cbc\n        val bcdaab\
    \ = bd * daab\n        val bcdcab = bd * dcab\n        val acbda = ac * bda\n\
    \        val acdb", "        val sides = List(a, b, c)\n        val sum = sides.sum\n\
    \        if (sum > sides.last) sides.last else -1", "        if (a + b > c) -1\n\
    \        else (a + b + c) / 2", "        val a = math.abs(a)\n        val b =\
    \ math.abs(b)\n        val c = math.abs(c)\n        val sum = a + b + c\n    \
    \    if (sum > c) {\n            val x = math.min(math.min(a, b), c)\n       \
    \     val y = math.max(math.max(a, b), c)\n            val area = x * y / 2\n\
    \            val rounded = math.round(area * 100) / 100\n            return rounded\n\
    \        }\n        -1", "        val a1 = a / 2\n        val b1 = b / 2\n   \
    \     val c1 = c / 2\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n   \
    \     val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n \
    \       val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n\
    \        val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n\
    \        val c8 = c7 + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n\
    \        val c9 = c8 + a8\n        val a10 = a9 + b9\n        val b10 = b9 + c9\n\
    \        val c10 = c9 + a9\n        (a1 + b2 + c2 > a3 + b3 + c3 && a1 + b2 +\
    \ c2 > a4 + b4 + c4 && a1 + b2 + c2 > a5 + b5 + c5 && a1 + b2 + c2 > a6 + b6 +\
    \ c6 && a1 + b2 + c2 > a7 + b7 + c7 && a1 + b2 + c2 > a8 + b8 + c8 && a1 + b2\
    \ + c2 > a9 + b9 + c9 ? a10 : -1)", "        val sides = List(a, b, c)\n     \
    \   val sumSides = sides.sum\n        val isValid = sumSides > sides(2)\n    \
    \    val area = if (isValid) sides.sum * sides.sum / 2 else -1\n        area",
  "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n\
    \        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5\
    \ + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7)", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val sum = a\
    \ + b + c\n        if (sum > c) {\n            val area = math.sqrt(sum * (b *\
    \ b - c * c))\n            (area / 100).round\n        } else {\n            -1\n\
    \        }", "        val sum = a + b + c\n        if (sum < 0)\n            -1\n\
    \        else if (sum == 0)\n            0\n        else\n            val area\
    \ = a / Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2))\n            area", "     \
    \   val area = (a + b + c) / 2\n        val sides = (a, b, c) match {\n      \
    \      case (l, r, _) => l + r\n            case (_, l, r) => l + r\n        }\n\
    \        if (sides > 0) {\n            area / sides\n        } else {\n      \
    \      -1\n        }"]
stop_tokens:
- "\n    }\n"

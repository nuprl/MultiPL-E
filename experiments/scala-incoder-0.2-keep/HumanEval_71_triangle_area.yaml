name: HumanEval_71_triangle_area
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given the lengths of the three sides of a triangle. Return the area of\n\
  \    // the triangle rounded to 2 decimal points if the three sides form a valid\
  \ triangle. \n    // Otherwise return -1\n    // Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n    // than the third side.\n    //\
  \ Example:\n    // triangle_area(3, 4, 5) == 6.00\n    // triangle_area(1, 2, 10)\
  \ == -1\n    def triangleArea(a : Long, b : Long, c : Long) : Float = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((3l),\
  \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == -1l);\n\
  \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
  \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == -1l);\n\
  \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
  \ (6l), (3l)) == -1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
  \    assert(triangleArea((2l), (2l), (10l)) == -1l);\n    }\n\n}\n"
completions: ["        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n\
    \        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n     \
    \   val bca = math.abs(bc - ab)\n        val abcb = math.abs(abc + bc)\n     \
    \   val abcca = math.abs(abc + ac)\n        val abccaa = math.abs(abc + abc)\n\
    \        val abccaab = math.abs(abc + abc)\n        val abccaabc = math.abs(abc\
    \ + abc)\n        val abccaabcb = math.abs(abc + abc)\n        val abccaabcca\
    \ = math.abs(abc + abc)\n        val abccaabccaa = math.abs(abc + abc)\n     \
    \   val abccaabccaab = math.abs(abc + abc)\n        val abccaabccaabc = math.abs(abc\
    \ + abc)\n        val abccaabccaabcb = math.abs(abc + abc)\n        val abccaabccaabcca\
    \ = math.abs(abc + abc)\n        val abccaabccaabccaa = math.abs(abc + abc)\n\
    \        val abccaabccaabccaab = math.abs(abc + abc)\n        val abccaabccaabccaabc\
    \ = math.abs(abc + abc)\n        val abccaabccaabccaabcb = math.abs(abc + abc)\n\
    \        val abccaabccaabccaabcca = math.abs(abc + abc)\n        val abccaabccaabccaabccaa\
    \ = math.abs(abc + abc)\n        val abccaabccaabccaabccaab = math.abs(abc + abc)\n\
    \        val abccaabccaabccaabccaabc = math.abs(abc + abc)\n        val abccaabccaabccaabccaabcb\
    \ = math.abs(abc + abc)\n        val abccaabccaabccaabccaabcca = math.abs(abc\
    \ + abc)\n        val abccaabccaabccaabccaabccaa = math.abs(abc + abc)\n     \
    \   val abccaabccaabccaabccaabccaab = math.abs(abc + abc)\n        val abccaabccaabccaabccaabccaabc\
    \ = math.abs(abc + abc)\n        val abccaabccaabccaabccaabccaabcb = math.abs(abc\
    \ + abc)\n        val abccaabccaabccaabccaabccaabcca = math.abs(abc + abc)\n \
    \       val abccaabccaabccaabccaabcca", "        val a = math.abs(a)\n       \
    \ val b = math.abs(b)\n        val c = math.abs(c)\n        val sum = a + b +\
    \ c\n        if (sum > c) {\n            val d = math.abs(a - b - c)\n       \
    \     val e = math.abs(a + b - c)\n            val f = math.abs(a - b + c)\n \
    \           val g = math.abs(a + b + c)\n            val area = if (d < e && d\
    \ < f && d < g) d else -1\n            area\n        } else {\n            -1\n\
    \        }", "        val a = math.abs(a)\n        val b = math.abs(b)\n     \
    \   val c = math.abs(c)\n        val sum = a + b + c\n        if (sum > c) {\n\
    \            val area = math.sqrt((b * b) - (a * c))\n            area / 2\n \
    \       } else {\n            -1\n        }", "        val a = Math.sqrt(a * a)\n\
    \        val b = Math.sqrt(b * b)\n        val c = Math.sqrt(c * c)\n        val\
    \ s = (a + b + c) / 2\n        if (s > 0) {\n            val area = s * (s - a)\
    \ * (s - b) * (s - c)\n            val rounded = area.toString.split(\"\\\\.\"\
    ).map(_.toInt).map(_ * 100).sum\n            rounded.toFloat\n        } else {\n\
    \            -1\n        }", "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n\
    \        val c1 = Math.abs(c)\n        val sides = List(a1, b1, c1)\n        val\
    \ sum = sides.sum\n        if (sum > a1 + b1 + c1) return -1\n        val a2 =\
    \ a1 - sum\n        val b2 = b1 - sum\n        val c2 = c1 - sum\n        val\
    \ a3 = a1 + b1 + c1 - sum\n        val b3 = b1 + a1 + c1 - sum\n        val c3\
    \ = c1 + a1 + b1 - sum\n        val a4 = a2 + b2 + c2 - sum\n        val b4 =\
    \ b2 + a2 + c2 - sum\n        val c4 = c2 + a2 + b2 - sum\n        val a5 = a3\
    \ + b3 + c3 - sum\n        val b5 = b3 + a3 + c3 - sum\n        val c5 = c3 +\
    \ a3 + b5 - sum\n        val a6 = a4 + b4 + c5 - sum\n        val b6 = b4 + a4\
    \ + c5 - sum\n        val c6 = c5 + a4 + b6 - sum\n        val a7 = a5 + b5 +\
    \ c6 - sum\n        val b7 = b5 + a5 + c6 - sum\n        val c7 = c6 + a5 + b7\
    \ - sum\n        val a8 = a7 + b7 + c7 - sum\n        val b8 = b7 + a7 + c7 -\
    \ sum\n        val c8 = c7 + a7 + b8 - sum\n        val a9 = a8 + b8 + c8 - sum\n\
    \        val b9 = b8 + a8 + c8 - sum\n        val c9 = c8 + a8 + b9 - sum\n  \
    \      val a10 = a9 + b9 + c9 - sum\n        val b10 = b9 + a9 + c9 - sum\n  \
    \      val c10 = c9 + a9 + b10 - sum\n        val a11 = a10 + b10 + c10 - sum\n\
    \        val b11 = b10 + a10 + c10 - sum\n        val c11 = c10 + a10 + b11 -\
    \ sum\n        val a12 = a11 + b11 + c11 - sum\n        val b12 = b11 + a11 +\
    \ c11 - sum\n        val c12 = c11 + a11 + b12 - sum\n        val a13 = a12 +\
    \ b12 + c12 - sum\n        val b13 = b12 + a12 + c12 - sum\n        val c13 =\
    \ c12 + a12 + b13 - sum\n        val a14 = a13 + b13 + c13 - sum\n        val\
    \ b14", "        val a = Math.abs(a)\n        val b = Math.abs(b)\n        val\
    \ c = Math.abs(c)\n        val sum = a + b + c\n        if (sum > 0) {\n     \
    \       val area = a / Math.sqrt(b * b + c * c)\n            val rounded = area\
    \ * 100\n            rounded.toFloat\n        } else {\n            -1.0\n   \
    \     }", "        val sides = List(a, b, c).sorted\n        val sum = sides.sum\n\
    \        if (sum > sides(2)) sides(2).toFloat else -1", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val s = (a\
    \ + b + c) / 2\n        val area = if (s > a) s * (b - c) / 2 else if (s > b)\
    \ s * (c - a) / 2 else if (s > c) s * (a - b) / 2 else -1\n        area", "  \
    \      val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n      \
    \  val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n    \
    \    val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n  \
    \      val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) * (a4 + b4 + c4) * (a5\
    \ + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7)", "        val sum = a + b + c\n\
    \        if (sum > 0) {\n            val area = a / sum * b / sum * c / sum\n\
    \            if (area > 0)\n                area.toFloat\n            else\n \
    \               -1\n        } else {\n            -1\n        }", "        val\
    \ a = Math.sqrt(a * a)\n        val b = Math.sqrt(b * b)\n        val c = Math.sqrt(c\
    \ * c)\n        val s = (a + b + c) / 2\n        if (s > a * a + b * b + c * c)\
    \ {\n            val d = Math.sqrt(a * a + b * b)\n            val e = Math.sqrt(c\
    \ * c + d * d)\n            val f = Math.sqrt(a * a + c * c)\n            val\
    \ g = Math.sqrt(b * b + d * d)\n            val h = Math.sqrt(c * c + e * e)\n\
    \            val area = f * g / h\n            area\n        } else {\n      \
    \      -1\n        }", "        val sum = a + b + c\n        if (sum > 0) {\n\
    \            val area = (a + b + c) / 2.0\n            val area2 = (a * b * c)\
    \ / 4.0\n            val area3 = (a * b * c * sum) / 6.0\n            val area4\
    \ = (a * b * c * sum * sum) / 24.0\n            val area5 = (a * b * c * sum *\
    \ sum * sum) / 120.0\n            val area6 = (a * b * c * sum * sum * sum * sum)\
    \ / 720.0\n            val area7 = (a * b * c * sum * sum * sum * sum * sum) /\
    \ 5040.0\n            val area8 = (a * b * c * sum * sum * sum * sum * sum * sum)\
    \ / 40320.0\n            val area9 = (a * b * c * sum * sum * sum * sum * sum\
    \ * sum * sum) / 362880.0\n            val area10 = (a * b * c * sum * sum * sum\
    \ * sum * sum * sum * sum * sum) / 3628800.0\n            val area11 = (a * b\
    \ * c * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum) / 39916800.0\n\
    \            val area12 = (a * b * c * sum * sum * sum * sum * sum * sum * sum\
    \ * sum * sum * sum * sum) / 479001600.0\n            val area13 = (a * b * c\
    \ * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum) / 6227020800.0\n\
    \            val area14 = (a * b * c * sum * sum * sum * sum * sum * sum * sum\
    \ * sum * sum * sum * sum * sum * sum * sum) / 7256448000.0\n            val area15\
    \ = (a * b * c * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum\
    \ * sum * sum * sum * sum) / 8000000000.0\n            val area16 = (a * b * c\
    \ * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum\
    \ * sum * sum * sum) / 9223372036854775808.0\n            val area17 = (a * b\
    \ * c * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum * sum\
    \ * sum * sum * sum * sum * sum * sum) / 1000000000000.0\n            val area18\
    \ = (a * b", "        val a1 = math.abs(a) + math.abs(b) + math.abs(c)\n     \
    \   val a2 = math.abs(a) + math.abs(b) - math.abs(c)\n        val a3 = math.abs(a)\
    \ - math.abs(b) + math.abs(c)\n        val a4 = math.abs(a) - math.abs(b) - math.abs(c)\n\
    \        val a5 = math.abs(a) + math.abs(b) - math.abs(c)\n        val a6 = math.abs(a)\
    \ - math.abs(b) + math.abs(c)\n        val a7 = math.abs(a) - math.abs(b) - math.abs(c)\n\
    \        val a8 = math.abs(a) + math.abs(b) - math.abs(c)\n        val a9 = math.abs(a)\
    \ - math.abs(b) + math.abs(c)\n        val a10 = math.abs(a) + math.abs(b) + math.abs(c)\n\
    \        val a11 = math.abs(a) - math.abs(b) + math.abs(c)\n        val a12 =\
    \ math.abs(a) - math.abs(b) - math.abs(c)\n        val a13 = math.abs(a) + math.abs(b)\
    \ - math.abs(c)\n        val a14 = math.abs(a) - math.abs(b) + math.abs(c)\n \
    \       val a15 = math.abs(a) - math.abs(b) - math.abs(c)\n        val a16 = math.abs(a)\
    \ + math.abs(b) + math.abs(c)\n        val a17 = math.abs(a) - math.abs(b) + math.abs(c)\n\
    \        val a18 = math.abs(a) - math.abs(b) - math.abs(c)\n        val a19 =\
    \ math.abs(a) + math.abs(b) - math.abs(c)\n        val a20 = math.abs(a) - math.abs(b)\
    \ + math.abs(c)\n        val a21 = math.abs(a) - math.abs(b) - math.abs(c)\n \
    \       val a22 = math.abs(a) + math.abs(b) - math.abs(c)\n        val a23 = math.abs(a)\
    \ - math.abs(b) + math.abs(c)\n        val a24 = math.abs(a) - math.abs(b) - math.abs(c)\n\
    \        val a25 = math.abs(a) + math.abs(b) + math.abs(c)\n        val a26 =\
    \ math.abs(a) - math.abs(b) + math.abs(c)\n        val a27 = math.abs(a) - math.abs(b)\
    \ - math.abs(c)\n        val a28 = math.abs(a) + math.abs(b) - math.abs(c)\n \
    \       val a29 = math.abs(a) - math.abs(b) + math.abs(c)\n        val a30 = math.abs(a)\
    \ - math.abs(b) - math.abs(c)\n        val a31 = math.abs(a) + math.abs(b) - math.abs(c)",
  "        val a1 = a + b\n        val a2 = a + c\n        val b1 = b + c\n      \
    \  val b2 = b + a\n        val c1 = c + a\n        val c2 = c + b\n        val\
    \ d1 = b2 - b1\n        val d2 = c2 - c1\n        val d3 = a2 - a1\n        if\
    \ (d1 < 0 && d2 < 0 && d3 < 0) return -1\n        if (d1 < 0 && d2 < 0 && d3 >\
    \ 0) return -1\n        if (d1 < 0 && d2 > 0 && d3 < 0) return -1\n        if\
    \ (d1 < 0 && d2 > 0 && d3 > 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 <\
    \ 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 > 0) return -1\n        if\
    \ (d1 > 0 && d2 > 0 && d3 < 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 >\
    \ 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 < 0) return -1\n        if\
    \ (d1 > 0 && d2 < 0 && d3 > 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 <\
    \ 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 > 0) return -1\n        if\
    \ (d1 > 0 && d2 < 0 && d3 < 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 >\
    \ 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 < 0) return -1\n        if\
    \ (d1 > 0 && d2 > 0 && d3 > 0) return -1\n        if (d1 < 0 && d2 < 0 && d3 <\
    \ 0) return -1\n        if (d1 < 0 && d2 < 0 && d3 > 0) return -1\n        if\
    \ (d1 < 0 && d2 > 0 && d3 < 0) return -1\n        if (d1 < 0 && d2 > 0 && d3 >\
    \ 0) return -1\n        if (d1 < 0 && d2 > 0 && d3 < 0) return -1\n        if\
    \ (d1 < 0 && d2 > 0 && d3 > 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 <\
    \ 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 > 0) return -1\n        if\
    \ (d1 > 0 && d2 > 0 && d3 < 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 >\
    \ 0) return -1\n        if (d1 > 0 && d2 < 0 && d3 < 0) return -1\n        if\
    \ (d1 > 0 && d2 < 0 && d3 > 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 <\
    \ 0) return -1\n        if (d1 > 0 && d2 > 0 && d3 > 0) return -1\n        if\
    \ (d1 < 0 && d2 < 0 && d3 < 0) return -1\n        if (d1 < 0 && d2 < 0 && d3 >\
    \ 0) return -1", "        val a1 = a / 2.0\n        val b1 = b / 2.0\n       \
    \ val c1 = c / 2.0\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n   \
    \     val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n \
    \       val c4 = c3 + a3\n        val a5 = a4 + b4\n        val b5 = b4 + c4\n\
    \        val c5 = c4 + a4\n        val a6 = a5 + b5\n        val b6 = b5 + c5\n\
    \        val c6 = c5 + a5\n        val a7 = a6 + b6\n        val b7 = b6 + c6\n\
    \        val c7 = c6 + a6\n        val a8 = a7 + b7\n        val b8 = b7 + c7\n\
    \        val c8 = c7 + a7\n        val a9 = a8 + b8\n        val b9 = b8 + c8\n\
    \        val c9 = c8 + a8\n        val a10 = a9 + b9\n        val b10 = b9 + c9\n\
    \        val c10 = c9 + a9\n        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3\
    \ + c3) * (a4 + b4 + c4) * (a5 + b5 + c5) * (a6 + b6 + c6) * (a7 + b7 + c7) *\
    \ (a8 + b8 + c8) * (a9 + b9 + c9) * (a10 + b10 + c10)", "        val sides = List(a,\
    \ b, c)\n        val sum = sides.sum\n        val isValid = sides.forall(s =>\
    \ s > 0)\n        val area = if (isValid) sides.sum * sides.sum / 2 else -1\n\
    \        val rounded = if (isValid) area.toString.toDouble / 2 else -1\n     \
    \   rounded", "        val a1 = (a + b) / 2\n        val a2 = (b + c) / 2\n  \
    \      val a3 = (c + a) / 2\n        val b1 = (a + c) / 2\n        val b2 = (c\
    \ + b) / 2\n        val b3 = (b + a) / 2\n        val c1 = (a + b) / 2\n     \
    \   val c2 = (b + c) / 2\n        val c3 = (c + a) / 2\n        val d1 = (a +\
    \ c) / 2\n        val d2 = (c + b) / 2\n        val d3 = (b + a) / 2\n       \
    \ val e1 = (a + b) / 2\n        val e2 = (b + c) / 2\n        val e3 = (c + a)\
    \ / 2\n        val f1 = (a + c) / 2\n        val f2 = (b + c) / 2\n        val\
    \ f3 = (c + a) / 2\n        val g1 = (a + b) / 2\n        val g2 = (b + c) / 2\n\
    \        val g3 = (c + a) / 2\n        val h1 = (a + b) / 2\n        val h2 =\
    \ (b + c) / 2\n        val h3 = (c + a) / 2\n        val i1 = (a + c) / 2\n  \
    \      val i2 = (b + c) / 2\n        val i3 = (c + a) / 2\n        val j1 = (a\
    \ + b) / 2\n        val j2 = (b + c) / 2\n        val j3 = (c + a) / 2\n     \
    \   val k1 = (a + c) / 2\n        val k2 = (b + c) / 2\n        val k3 = (c +\
    \ a) / 2\n        val l1 = (a + b) / 2\n        val l2 = (b + c) / 2\n       \
    \ val l3 = (c + a) / 2\n        val m1 = (a + c) / 2\n        val m2 = (b + c)\
    \ / 2\n        val m3 = (c + a) / 2\n        val n1 = (a + b) / 2\n        val\
    \ n2 = (b + c) / 2\n        val n3 = (c + a) / 2\n        val o1 = (a + c) / 2\n\
    \        val o2 = (b + c) / 2\n        val o3 = (c + a) / 2\n        val p1 =\
    \ (a + b) / 2\n        val p2 = (b + c) / 2\n        val p3 = (c + a) / 2\n  \
    \      val q1 = (a + c) / 2\n        val q2 = (b + c) / 2\n        val q3 = (c\
    \ + a) / 2\n        val r1 = (a + b) / 2\n        val r2 = (b + c) / 2\n     \
    \   val r3 = (c + a) / 2\n        val s1 = (a + c) / 2\n        val s2 = (b +\
    \ c) / 2\n        val s3 = (c + a) / 2\n        val t1 = (a + b) / 2\n        ",
  "        val sides = List(a, b, c).sorted\n        val sum = sides.sum\n       \
    \ if (sum > sides.last) sides.last else -1", "        val a1 = a + b\n       \
    \ val a2 = a + c\n        val b2 = b + c\n        val a3 = a1 + a2\n        val\
    \ b3 = b1 + b2\n        val c3 = b2 + c1\n        val a4 = a1 + a3\n        val\
    \ b4 = b1 + b4\n        val c4 = b2 + c4\n        val a5 = a3 + a4\n        val\
    \ b5 = b3 + b4\n        val c5 = c3 + c4\n        val a6 = a3 + a5\n        val\
    \ b6 = b3 + b5\n        val c6 = c3 + c6\n        val a7 = a5 + a6\n        val\
    \ b7 = b5 + b6\n        val c7 = c6 + c7\n        val a8 = a7 + a8\n        val\
    \ b8 = b7 + b8\n        val c8 = c7 + c8\n        val a9 = a8 + a9\n        val\
    \ b9 = b8 + b9\n        val c9 = c8 + c9\n        val a10 = a9 + a10\n       \
    \ val b10 = b9 + b10\n        val c10 = c9 + c10\n        val a11 = a10 + a11\n\
    \        val b11 = b10 + b11\n        val c11 = c10 + c11\n        val a12 = a11\
    \ + a12\n        val b12 = b11 + b12\n        val c12 = c11 + c12\n        val\
    \ a13 = a12 + a13\n        val b13 = b12 + b13\n        val c13 = c12 + c13\n\
    \        val a14 = a13 + a14\n        val b14 = b13 + b14\n        val c14 = c13\
    \ + c14\n        val a15 = a14 + a15\n        val b15 = b14 + b15\n        val\
    \ c15 = c14 + c15\n        val a16 = a15 + a16\n        val b16 = b15 + b16\n\
    \        val c16 = c15 + c16\n        val a17 = a16 + a17\n        val b17 = b16\
    \ + b17\n        val c17 = c16 + c17\n        val a18 = a17 + a18\n        val\
    \ b18 = b17 + b18\n        val c18 = c17 + c18\n        val a19 = a18 + a19\n\
    \        val b19 = b18 + b19\n        val c19 = c18 + c19\n        val a20 = a19\
    \ + a20\n        val b20 = b19 + b20\n        val c20 = c19 + c20\n        val ",
  "        val a1 = Math.abs(a)\n        val b1 = Math.abs(b)\n        val c1 = Math.abs(c)\n\
    \        val sides = List(a1, b1, c1)\n        val sum = sides.sum\n        if\
    \ (sum > sides.last) sides.last\n        else sides.sum.toFloat"]
stop_tokens:
- "\n    }\n"

name: HumanEval_157_right_angle_triangle
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given the lengths of the three sides of a triangle. Return True if the three\n\
  \    // sides form a right-angled triangle, False otherwise.\n    // A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n    // 90 degree.\n\
  \    // Example:\n    // right_angle_triangle(3, 4, 5) == True\n    // right_angle_triangle(1,\
  \ 2, 3) == False\n    def rightAngleTriangle(a : Long, b : Long, c : Long) : Boolean\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(rightAngleTriangle((3l),\
  \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
  \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
  \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) ==\
  \ (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
  \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) ==\
  \ (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n   \
  \ assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
  \ (2l), (10l)) == (false));\n    }\n\n}\n"
completions: ["        val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n  \
    \      val bc = math.abs(b-c)\n        ab == ac && ab == bc", "        val a =\
    \ math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n    \
    \    val a1 = math.pow(a, 2)\n        val b1 = math.pow(b, 2)\n        val c1\
    \ = math.pow(c, 2)\n        val a2 = math.pow(a, 3)\n        val b2 = math.pow(b,\
    \ 3)\n        val c2 = math.pow(c, 3)\n        val a3 = math.pow(a, 4)\n     \
    \   val b3 = math.pow(b, 4)\n        val c3 = math.pow(c, 4)\n        val a4 =\
    \ math.pow(a, 5)\n        val b4 = math.pow(b, 5)\n        val c4 = math.pow(c,\
    \ 5)\n        val a5 = math.pow(a, 6)\n        val b5 = math.pow(b, 6)\n     \
    \   val c5 = math.pow(c, 6)\n        val a6 = math.pow(a, 7)\n        val b6 =\
    \ math.pow(b, 7)\n        val c6 = math.pow(c, 7)\n        val a7 = math.pow(a,\
    \ 8)\n        val b7 = math.pow(b, 8)\n        val c7 = math.pow(c, 8)\n     \
    \   val a8 = math.pow(a, 9)\n        val b8 = math.pow(b, 9)\n        val c8 =\
    \ math.pow(c, 9)\n        val a9 = math.pow(a, 10)\n        val b9 = math.pow(b,\
    \ 10)\n        val c9 = math.pow(c, 10)\n        val a10 = math.pow(a, 11)\n \
    \       val b10 = math.pow(b, 11)\n        val c10 = math.pow(c, 11)\n       \
    \ val a11 = math.pow(a, 12)\n        val b11 = math.pow(b, 12)\n        val c11\
    \ = math.pow(c, 12)\n        val a12 = math.pow(a, 13)\n        val b12 = math.pow(b,\
    \ 13)\n        val c12 = math.pow(c, 13)\n        val a13 = math.pow(a, 14)\n\
    \        val b13 = math.pow(b, 14)\n        val c13 = math.pow(c, 14)\n      \
    \  val a14 = math.pow(a, 15)\n        val b14 = math.pow(b, 15)\n        val c14\
    \ = math.pow(c, 15)\n        val a15 = math.pow(a, 16)\n        val b15 = math.pow(b,\
    \ 16)\n        val c15 = math.pow(c, 16)\n        val a16 = math.pow(a, 17)\n\
    \        val b16 = math.pow(b, 17)\n        val c16 = math.pow(c, 17)\n      \
    \  val a17 = math.pow(a, 18)\n        val b17 = math.pow(b, 18)\n        val c17\
    \ = math.pow(c, 18)\n        val a18 = math.pow(a, 19)\n        val b18 = math.",
  "        val a1 = math.abs(a * Math.cos(math.pi/a))\n        val b1 = math.abs(b\
    \ * Math.cos(math.pi/b))\n        val c1 = math.abs(c * Math.cos(math.pi/c))\n\
    \        val a2 = math.abs(a * Math.sin(math.pi/a))\n        val b2 = math.abs(b\
    \ * Math.sin(math.pi/b))\n        val c2 = math.abs(c * Math.sin(math.pi/c))\n\
    \        (a1 + b1 + c1 == a2 + b2 + c2) || (a1 + b1 + c1 == a2 + b2 + c2) || (a1\
    \ + b1 + c1 == a2 + b2 + c2)", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val\
    \ ab = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((b * b) - (c *\
    \ c))\n        val ac = math.sqrt((a * a) - (c * c))\n        ab == bc && ab ==\
    \ ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val\
    \ c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1\
    \ && b1 == c2 && c1 == a2) || (a1 == b2 && b1 == c1 && c1 == a2) || (a1 == b2\
    \ && b1 == c2 && c1 == a2) || (a2 == b1 && b2 == c1 && c1 == a2) || (a2 == b1\
    \ && b2 == c2 && c1 == a2) || (a2 == b2 && b2 == c1 && c1 == a2) || (a2 == b2\
    \ && b2 == c2 && c1 == a2)", "        val ab = math.abs(b - a)\n        val ac\
    \ = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        //\
    \ Write your code here\n        val a1 = a / 2\n        val b1 = b / 2\n     \
    \   val c1 = c / 2\n        val a2 = a1 + a1\n        val b2 = b1 + b1\n     \
    \   val c2 = c1 + c1\n        val a3 = a1 + a2\n        val b3 = b1 + b2\n   \
    \     val c3 = c1 + c2\n        val a4 = a2 + a2\n        val b4 = b2 + b2\n \
    \       val c4 = c2 + c2\n        val a5 = a2 + a3\n        val b5 = b2 + b3\n\
    \        val c5 = c2 + c4\n        val a6 = a3 + a3\n        val b6 = b3 + b3\n\
    \        val c6 = c3 + c4\n        val a7 = a3 + a4\n        val b7 = b3 + b4\n\
    \        val c7 = c3 + c5\n        val a8 = a4 + a4\n        val b8 = b4 + b4\n\
    \        val c8 = c4 + c5\n        val a9 = a4 + a5\n        val b9 = b4 + b5\n\
    \        val c9 = c4 + c6\n        val a10 = a5 + a5\n        val b10 = b5 + b5\n\
    \        val c10 = c5 + c6\n        val a11 = a5 + a6\n        val b11 = b5 +\
    \ b6\n        val c11 = c5 + c7\n        val a12 = a6 + a6\n        val b12 =\
    \ b6 + b6\n        val c12 = c6 + c7\n        val a13 = a6 + a7\n        val b13\
    \ = b6 + b7\n        val c13 = c6 + c8\n        val a14 = a7 + a7\n        val\
    \ b14 = b7 + b7\n        val c14 = c7 + c8\n        val a15 = a7 + a8\n      \
    \  val b15 = b7 + b8\n        val c15 = c7 + c9\n        val a16 = a8 + a8\n \
    \       val b16 = b8 + b8\n        val c16 = c8 + c9\n        val a17 = a8 + a9\n\
    \        val b17 = b8 + b9\n        val c17 = c8 + c10\n        val a18 = a9 +\
    \ a9\n        val b18 = b9 + b9\n        val c18 = c9 + c10\n        val a19 =\
    \ a9 + a10\n        val b19 = b9 + b10\n        val c19 = c9 + c11\n        val\
    \ a20 = a10 + a10\n        val b20 = b10 + b10\n        val c20 = c", "      \
    \  val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 * b1 * c2) - (a2 * b1 * c1) - (a1\
    \ * b2 * c1) - (a2 * b2 * c1) > 0", "        val ab = math.sqrt((b*b) - (a*a))\n\
    \        val bc = math.sqrt((c*c) - (b*b))\n        val ac = math.sqrt((a*a) -\
    \ (c*c))\n        ab == bc && ab == ac", "        val ab = math.pow(a, 2)\n  \
    \      val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val abc\
    \ = math.pow(ab + bc + cd, 0.5)\n        val acb = math.pow(a + b + c, 0.5)\n\
    \        val bcd = math.pow(b + c, 2)\n        val cdab = math.pow(cd + ab, 0.5)\n\
    \        val abbc = math.pow(ab + bc, 2)\n        val bcab = math.pow(b + c, 2)\n\
    \        val cabd = math.pow(c + ab, 2)\n        val abcd = math.pow(a + b + c,\
    \ 2)\n        abc > 0 && abbc > 0 && bcab > 0 && cabd > 0 && abcd > 0", "    \
    \    val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val cd\
    \ = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n        val\
    \ acd = math.pow(a, 2) + math.pow(c, 2) - abc + bc\n        val bcd = math.pow(b,\
    \ 2) + math.pow(c, 2) - abc + bc\n        val cdab = math.pow(c, 2) + math.pow(d,\
    \ 2) - abc + bc\n        val abdc = math.pow(ab + bc + d, 0.5)\n        val acdb\
    \ = math.pow(a, 2) + math.pow(b, 2) - abc + bc\n        val bcdd = math.pow(b,\
    \ 2) + math.pow(c, 2) - abc + bc\n        val cdabc = math.pow(c, 2) + math.pow(d,\
    \ 2) - abc + bc\n        val abdcd = math.pow(ab + bc + d, 0.5)\n        val acdbcd\
    \ = math.pow(a, 2) + math.pow(b, 2) - abc + bc\n        val bcdabc = math.pow(b,\
    \ 2) + math.pow(c, 2) - abc + bc\n        val cdabdc = math.pow(c, 2) + math.pow(d,\
    \ 2) - abc + bc\n        val abdcdb = math.pow(ab + bc + d, 0.5)\n        val\
    \ acdbcdb = math.pow(a, 2) + math.pow(b, 2) - abc + bc\n        val bcdabcd =\
    \ math.pow(b, 2) + math.pow(c, 2) - abc + bc\n        val cdabdcd = math.pow(c,\
    \ 2) + math.pow(d, 2) - abc + bc\n        val abdcdbc = math.pow(ab + bc + d,\
    \ 0.5)\n        val acdbcdbc = math.pow(a, 2) + math.pow(b, 2) - abc + bc\n  \
    \      val bcdabcdb = math.pow(b, 2) + math.pow(c, 2) - abc + bc\n        val\
    \ cdabdcdb = math.pow(c, 2) + math.pow(d, 2) - abc + bc\n        val abdcdbcd\
    \ = math.pow(ab + bc + d, 0.5)\n        val acdbcdbcd = math.pow(a, 2) + math.pow(b,\
    \ 2) - abc + bc\n        val bcdabcdbc = math.pow(b, 2) + math.pow(c, 2) - abc\
    \ + bc\n        val cdabdcdbc = math.pow(c, 2) + math.pow(d, 2) - abc + bc\n \
    \       val abdcdbcdb = math.pow(ab + bc + d, 0.5)\n        val acdbcdbcdb = math.pow(a,\
    \ 2) + math.pow(b, 2) - abc + bc\n        val bcdabcdbc = math.pow(b, 2) + math.pow(c,\
    \ 2) - abc + bc\n        val cdabdcdbcd = math.pow(c, 2) + math.pow(d, 2) - abc\
    \ + bc\n        val ab", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a2)", "        val a1 = a / 2\n        val b1\
    \ = b / 2\n        val c1 = c / 2\n        val a2 = a1 + 1\n        val b2 = b1\
    \ + 1\n        val c2 = c1 + 1\n        val a3 = a2 + 1\n        val b3 = b2 +\
    \ 1\n        val c3 = c3 + 1\n        val a4 = a3 + 1\n        val b4 = b4 + 1\n\
    \        val c4 = c4 + 1\n        val a5 = a4 + 1\n        val b5 = b5 + 1\n \
    \       val c5 = c5 + 1\n        val a6 = a6 + 1\n        val b6 = b6 + 1\n  \
    \      val c6 = c6 + 1\n        val a7 = a7 + 1\n        val b7 = b7 + 1\n   \
    \     val c7 = c7 + 1\n        val a8 = a8 + 1\n        val b8 = b8 + 1\n    \
    \    val c8 = c8 + 1\n        val a9 = a9 + 1\n        val b9 = b9 + 1\n     \
    \   val c9 = c9 + 1\n        val a10 = a10 + 1\n        val b10 = b10 + 1\n  \
    \      val c10 = c10 + 1\n        val a11 = a11 + 1\n        val b11 = b11 + 1\n\
    \        val c11 = c11 + 1\n        val a12 = a12 + 1\n        val b12 = b12 +\
    \ 1\n        val c12 = c12 + 1\n        val a13 = a13 + 1\n        val b13 = b13\
    \ + 1\n        val c13 = c13 + 1\n        val a14 = a14 + 1\n        val b14 =\
    \ b14 + 1\n        val c14 = c14 + 1\n        val a15 = a15 + 1\n        val b15\
    \ = b15 + 1\n        val c15 = c15 + 1\n        val a16 = a16 + 1\n        val\
    \ b16 = b16 + 1\n        val c16 = c16 + 1\n        val a17 = a17 + 1\n      \
    \  val b17 = b17 + 1\n        val c17 = c17 + 1\n        val a18 = a18 + 1\n \
    \       val b18 = b18 + 1\n        val c18 = c18 + 1\n        val a19 = a19 +\
    \ 1\n        val b19 = b19 + 1\n        val c19 = c19 + 1\n        val a20 = a20\
    \ + 1\n        val b20 = b20 + 1\n        val c20 = c20 + 1\n        val a21 =\
    \ a21 + 1\n        val b21 = b21 + 1\n        val c21 = c21 + 1\n        val a22\
    \ = a22 + 1\n        val b22 = b22 + 1\n        val c22 = c22 + 1\n        val\
    \ a", "        val a = math.abs(a)\n        val b = math.abs(b)\n        val c\
    \ = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc = math.pow(b,\
    \ 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab, b)\n   \
    \     val bcd = math.pow(bc, c)\n        val abcd = math.pow(abc, c)\n       \
    \ val abbc = math.pow(ab, b)\n        val bccd = math.pow(bc, c)\n        val\
    \ abcdb = math.pow(abc, b)\n        val bcdab = math.pow(bc, d)\n        val abcda\
    \ = math.pow(abc, a)\n        val bcdcb = math.pow(bc, c)\n        val abcdbc\
    \ = math.pow(abc, b)\n        val cdbab = math.pow(cd, b)\n        val cdbca =\
    \ math.pow(cd, a)\n        val cdbcb = math.pow(cd, c)\n        val cdbcd = math.pow(cd,\
    \ b)\n        val abccd = math.pow(abc, c)\n        val bcdaa = math.pow(bc, a)\n\
    \        val bcdbc = math.pow(bc, c)\n        val bcdbd = math.pow(bc, d)\n  \
    \      val abbcc = math.pow(ab, b)\n        val bcdabc = math.pow(bc, d)\n   \
    \     val bcdaab = math.pow(bc, a)\n        val bcdbcd = math.pow(bc, c)\n   \
    \     val abccdb = math.pow(abc, c)\n        val bcdaac = math.pow(bc, a)\n  \
    \      val bcdbcb = math.pow(bc, c)\n        val abbccd = math.pow(ab, b)\n  \
    \      val bcdaabc = math.pow(bc, a)\n        val bcdbcda = math.pow(bc, c)\n\
    \        val abccdbc = math.pow(abc, c)\n        val bcdaabbc = math.pow(bc, a)\n\
    \        val bcdbcdbc = math.pow(bc, c)\n        val abbcccd = math.pow(ab, b)\n\
    \        val bcdaabbc = math.pow(bc, a)\n        val bcdbcdbd = math.pow(bc, c)\n\
    \        val abccdbcd = math.pow(abc, c)\n        val bcdaabbcc = math.pow(bc,\
    \ a)\n        val bcdbcdbcb = math.pow(bc, c)\n        val abbcccdb = math.pow(ab,\
    \ b)\n        val bcdaabbccd = math.pow(bc, a)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1\
    \ + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 ==\
    \ a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 == a2 && b1\
    \ + c1 + a2 == b2 && c1 + a2 + b2 == c2)", "        val a = math.abs(a)\n    \
    \    val b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab, b)\n        val bcd = math.pow(bc, c)\n        val\
    \ abcd = math.pow(abc, c)\n        val abdc = math.pow(ab, b)\n        val bcda\
    \ = math.pow(bc, a)\n        val abcda = math.pow(abc, a)\n        val abdcd =\
    \ math.pow(ab, b)\n        val bcdaa = math.pow(bc, a)\n        val abcdaa = math.pow(abc,\
    \ a)\n        val abdcda = math.pow(ab, b)\n        val bcdaab = math.pow(bc,\
    \ a)\n        val abcdaab = math.pow(abc, a)\n        val abdcdaa = math.pow(ab,\
    \ b)\n        val bcdaabcd = math.pow(bc, a)\n        val abcdaabcd = math.pow(abc,\
    \ a)\n        val abdcdaab = math.pow(bc, a)\n        val abcdaabdc = math.pow(abc,\
    \ a)\n        val abdcdaabcd = math.pow(ab, b)\n        val bcdaabdcd = math.pow(bc,\
    \ a)\n        val abcdaabdcd = math.pow(abc, a)\n        val abdcdaabdc = math.pow(bc,\
    \ a)\n        val abcdaabdcd = math.pow(ab, b)\n        val bcdaabdcda = math.pow(bc,\
    \ a)\n        val abcdaabdcda = math.pow(abc, a)\n        val abdcdaabdcd = math.pow(bc,\
    \ a)\n        val abcdaabdcda = math.pow(ab, b)\n        val bcdaabdcdaa = math.pow(bc,\
    \ a)\n        val abcdaabdcdaa = math.pow(abc, a)\n        val abdcdaabdcda =\
    \ math.pow(bc, a)\n        val abcdaabdcdaa = math.pow(ab, b)\n        val bcdaabdcdaab\
    \ = math.pow(bc, a)\n        val abcdaabdcdaab = math.pow(abc, a)\n        val\
    \ abdcdaabdcdaa = math.pow(bc, a)\n        val abcdaabdcdaab = math.pow(ab, b)\n\
    \        val bcdaabdcdaabcd = math.pow(bc, a)\n        val abcdaabdcdaabcd = math.pow(abc,\
    \ a)\n        ", "        val a = math.abs(a)\n        val b = math.abs(b)\n \
    \       val c = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc =\
    \ math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab,\
    \ b)\n        val bcd = math.pow(bc, c)\n        val abcd = math.pow(abc, c)\n\
    \        val abbc = math.pow(ab, b)\n        val bccd = math.pow(bc, c)\n    \
    \    val bcda = math.pow(bc, a)\n        val cdaa = math.pow(cd, a)\n        val\
    \ abcda = math.pow(abc, a)\n        val abbca = math.pow(ab, b)\n        val bcdab\
    \ = math.pow(bc, d)\n        val cdaab = math.pow(cd, a)\n        val abcdbc =\
    \ math.pow(abc, b)\n        val bcdac = math.pow(bc, c)\n        val cdaac = math.pow(cd,\
    \ a)\n        val abcdbd = math.pow(abc, b)\n        val bcdad = math.pow(bc,\
    \ d)\n        val cdaad = math.pow(cd, a)\n        val abcdbc = math.pow(abc,\
    \ b)\n        val bcdac = math.pow(bc, c)\n        val cdaac = math.pow(cd, a)\n\
    \        val abcdbd = math.pow(abc, b)\n        val bcdad = math.pow(bc, d)\n\
    \        val cdaad = math.pow(cd, a)\n        val abcdbc = math.pow(abc, b)\n\
    \        val bcdac = math.pow(bc, c)\n        val cdaac = math.pow(cd, a)\n  \
    \      val abcdbd = math.pow(abc, b)\n        val bcdad = math.pow(bc, d)\n  \
    \      val cdaad = math.pow(cd, a)\n        val abcdbc = math.pow(abc, b)\n  \
    \      val bcdac = math.pow(bc, c)\n        val cdaac = math.pow(cd, a)\n    \
    \    val abcdbd = math.pow(abc, b)\n        val bcdad = math.pow(bc, d)\n    \
    \    val cdaad = math.pow(cd, a)\n        val abcdbc = math.pow(abc, b)\n    \
    \    val bcdac = math.pow(bc, c)\n        val cdaac = math.pow(cd, a)\n      \
    \  val abcdbd = math.pow(abc, b)\n        val bcdad = math.pow(bc, d)\n      \
    \  val cdaad", "        val a = math.abs(a)\n        val b = math.abs(b)\n   \
    \     val c = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc = math.pow(b,\
    \ 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab, bc)\n  \
    \      val bcd = math.pow(bc, cd)\n        val abcd = math.pow(abc, bcd) \n  \
    \      abc / bcd > 1", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2\
    \ + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3\
    \ + c3\n        val c4 = c3 + a3\n        (a1 == a2 && b1 == b2 && c1 == c2) ||\
    \ (a1 == a3 && b1 == b3 && c1 == c3) || (a1 == a4 && b1 == b4 && c1 == c4)", " \
    \       val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n        val bc\
    \ = math.abs(b-c)\n        ab > ac && ab > bc", "        val ab = math.abs(b -\
    \ a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n   \
    \     val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n     \
    \   abc < bcd // if abc < bcd then abc is a right-angled triangle", "        val\
    \ a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 == b1 && b1 == c1 && c1 == a2) || (a2 == b2 && b2 == c2 && c2 ==\
    \ a2)", "        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n  \
    \      val cd = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n\
    \        abc < b + c + a", "        val ab = math.pow(a, 2)\n        val bc =\
    \ math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab\
    \ + bc + cd, 0.5)\n        abc < b + c + a", "        val ab = math.abs(b - a)\n\
    \        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        abc > ab && abc > bc", "        val ab = math.sqrt((b*b)\
    \ - (a*a))\n        val bc = math.sqrt((c*c) - (b*b))\n        val ac = math.sqrt((c*c)\
    \ - (a*a))\n        ab == bc && ab == ac", "        val a = math.abs(a)\n    \
    \    val b = math.abs(b)\n        val c = math.abs(c)\n        val a1 = math.pow(a,\
    \ 2)\n        val b1 = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n     \
    \   val a2 = math.pow(a, 3)\n        val b2 = math.pow(b, 3)\n        val c2 =\
    \ math.pow(c, 3)\n        val a3 = math.pow(a, 4)\n        val b3 = math.pow(b,\
    \ 4)\n        val c3 = math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n     \
    \   val b4 = math.pow(b, 5)\n        val c4 = math.pow(c, 5)\n        val a5 =\
    \ math.pow(a, 6)\n        val b5 = math.pow(b, 6)\n        val c5 = math.pow(c,\
    \ 6)\n        val a6 = math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n     \
    \   val c6 = math.pow(c, 7)\n        val a7 = math.pow(a, 8)\n        val b7 =\
    \ math.pow(b, 8)\n        val c7 = math.pow(c, 8)\n        val a8 = math.pow(a,\
    \ 9)\n        val b8 = math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n     \
    \   val a9 = math.pow(a, 10)\n        val b9 = math.pow(b, 10)\n        val c9\
    \ = math.pow(c, 10)\n        val a10 = math.pow(a, 11)\n        val b10 = math.pow(b,\
    \ 11)\n        val c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n\
    \        val b11 = math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n      \
    \  val a12 = math.pow(a, 13)\n        val b12 = math.pow(b, 13)\n        val c12\
    \ = math.pow(c, 13)\n        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b,\
    \ 14)\n        val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n\
    \        val b14 = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n      \
    \  val a15 = math.pow(a, 16)\n        val b15 = math.pow(b, 16)\n        val c15\
    \ = math.pow(c, 16)\n        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b,\
    \ 17)\n        val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n\
    \        val b17 = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n      \
    \  val a18 = math.pow(a, 19)\n        val b18 = math.", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val a1 = math.pow(a,\
    \ 2)\n        val b1 = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n     \
    \   val a2 = math.pow(a, 3)\n        val b2 = math.pow(b, 3)\n        val c2 =\
    \ math.pow(c, 3)\n        val a3 = math.pow(a, 4)\n        val b3 = math.pow(b,\
    \ 4)\n        val c3 = math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n     \
    \   val b4 = math.pow(b, 5)\n        val c4 = math.pow(c, 5)\n        val a5 =\
    \ math.pow(a, 6)\n        val b5 = math.pow(b, 6)\n        val c5 = math.pow(c,\
    \ 6)\n        val a6 = math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n     \
    \   val c6 = math.pow(c, 7)\n        val a7 = math.pow(a, 8)\n        val b7 =\
    \ math.pow(b, 8)\n        val c7 = math.pow(c, 8)\n        val a8 = math.pow(a,\
    \ 9)\n        val b8 = math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n     \
    \   val a9 = math.pow(a, 10)\n        val b9 = math.pow(b, 10)\n        val c9\
    \ = math.pow(c, 10)\n        val a10 = math.pow(a, 11)\n        val b10 = math.pow(b,\
    \ 11)\n        val c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n\
    \        val b11 = math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n      \
    \  val a12 = math.pow(a, 13)\n        val b12 = math.pow(b, 13)\n        val c12\
    \ = math.pow(c, 13)\n        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b,\
    \ 14)\n        val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n\
    \        val b14 = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n      \
    \  val a15 = math.pow(a, 16)\n        val b15 = math.pow(b, 16)\n        val c15\
    \ = math.pow(c, 16)\n        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b,\
    \ 17)\n        val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n\
    \        val b17 = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n      \
    \  val a18 = math.pow(a, 19)\n        val b18 = math.", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2)", "        val ab = math.pow(a, 2)\n        val\
    \ bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab\
    \ + bc + cd, 0.5)\n        abc < b + c + a", "        val ab = math.pow(a, 2)\n\
    \        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val\
    \ abc = math.pow(ab + bc + cd, 0.5)\n        abc < Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2)", "        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        val a1 = math.pow(a, 2)\n        val b1\
    \ = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n        val a2 = math.pow(a,\
    \ 3)\n        val b2 = math.pow(b, 3)\n        val c2 = math.pow(c, 3)\n     \
    \   val a3 = math.pow(a, 4)\n        val b3 = math.pow(b, 4)\n        val c3 =\
    \ math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n        val b4 = math.pow(b,\
    \ 5)\n        val c4 = math.pow(c, 5)\n        val a5 = math.pow(a, 6)\n     \
    \   val b5 = math.pow(b, 6)\n        val c5 = math.pow(c, 6)\n        val a6 =\
    \ math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n        val c6 = math.pow(c,\
    \ 7)\n        val a7 = math.pow(a, 8)\n        val b7 = math.pow(b, 8)\n     \
    \   val c7 = math.pow(c, 8)\n        val a8 = math.pow(a, 9)\n        val b8 =\
    \ math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n        val a9 = math.pow(a,\
    \ 10)\n        val b9 = math.pow(b, 10)\n        val c9 = math.pow(c, 10)\n  \
    \      val a10 = math.pow(a, 11)\n        val b10 = math.pow(b, 11)\n        val\
    \ c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n        val b11 =\
    \ math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n        val a12 = math.pow(a,\
    \ 13)\n        val b12 = math.pow(b, 13)\n        val c12 = math.pow(c, 13)\n\
    \        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b, 14)\n      \
    \  val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n        val b14\
    \ = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n        val a15 = math.pow(a,\
    \ 16)\n        val b15 = math.pow(b, 16)\n        val c15 = math.pow(c, 16)\n\
    \        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b, 17)\n      \
    \  val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n        val b17\
    \ = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n        val a18 = math.pow(a,\
    \ 19)\n        val b18 = math.", "        val a = math.abs(a)\n        val b =\
    \ math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a, 2)\n\
    \        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val\
    \ abc = math.pow(ab, 2) + math.pow(bc, 2) + math.pow(cd, 2)\n        abc < b *\
    \ c", "        // Write your code here\n        val a1 = math.abs(a)\n       \
    \ val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n\
    \        val b4 = b3 + c3\n        val c4 = c3 + a3\n        val a5 = a4 + b4\n\
    \        val b5 = b4 + c4\n        val c5 = c4 + a4\n        (a1 == a2 && b1 ==\
    \ b2 && c1 == c2) || (a1 == a3 && b1 == b3 && c1 == c3) || (a1 == a4 && b1 ==\
    \ b4 && c1 == c4) || (a1 == a5 && b1 == b5 && c1 == c5)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (b2 + a2 + c2) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) - (a1 + b1 + c1) * (b2 + a2 + c2) - (a1 + b1 + c1) * (a2 + b2\
    \ + c2) - (a1 + b1 + c1) * (b2 + a2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) -\
    \ (a1 + b1 + c1) * (b2 + a2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1\
    \ + c1) * (b2 + a2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) *\
    \ (b2 + a2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (b2 + a2\
    \ + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (b2 + a2 + c2) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (b2 + a2 + c2) - (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (b2 + a2 + c2) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) - (a1 + b1 + c1) * (b2 + a2 + c2) - (a1 + b1 + c1) * (a2 + b2\
    \ + c2) - (a1 + b1 + c1) * (b2 + a2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) -\
    \ (a1 + b1 + c1) * (b2 + a2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1\
    \ + c1) * (b2 + a2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) *\
    \ (b2 + a2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (b2 + a2\
    \ + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab, b)\n        val bcd = math.pow(bc, c)\n        val\
    \ abcd = math.pow(abc, c)\n        val abbc = math.pow(ab, b)\n        val bcbc\
    \ = math.pow(bc, c)\n        val abcdb = math.pow(abc, b)\n        val bcbcd =\
    \ math.pow(bc, c)\n        val abcdbc = math.pow(abc, b)\n        val abbcd =\
    \ math.pow(ab, b)\n        val bcbcdb = math.pow(bc, c)\n        val abcdbcd =\
    \ math.pow(abc, b)\n        val abbcdb = math.pow(ab, b)\n        val bcbcdbc\
    \ = math.pow(bc, c)\n        val abcdbcdb = math.pow(abc, b)\n        val abbcdbc\
    \ = math.pow(ab, b)\n        val bcbcdbcd = math.pow(bc, c)\n        val abcdbcdbc\
    \ = math.pow(abc, b)\n        val abbcdbcd = math.pow(ab, b)\n        val bcbcdbcdb\
    \ = math.pow(bc, c)\n        val abcdbcdbc = math.pow(abc, b)\n        val abbcdbcdb\
    \ = math.pow(ab, b)\n        val bcbcdbcdbc = math.pow(bc, c)\n        val abcdbcdbcd\
    \ = math.pow(abc, b)\n        val abbcdbcdbc = math.pow(ab, b)\n        val bcbcdbcdbcd\
    \ = math.pow(bc, c)\n        val abcdbcdbcdb = math.pow(abc, b)\n        val abbcdbcdbcd\
    \ = math.pow(ab, b)\n        val bcbcdbcdbcdb = math.pow(bc, c)\n        val abcdbcdbcdbc\
    \ = math.pow(abc, b)\n        val abbcdbcdbcd = math.pow(ab, b)\n        val bcbcdbcdbcdb\
    \ = math.pow(bc, c)\n        val abcdbcdbcdbc = math.pow(abc, b)\n        val\
    \ abbcdbcdbcdb = math.pow(ab, b)\n        val bcbcdbcdbcdbc = math.pow(bc, c)\n\
    \        val abcdbcdbcdbcd = math.pow(abc, b)\n        val ab", "        val ab\
    \ = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((c * c) - (b * b))\n\
    \        val ac = math.sqrt((c * c) - (a * a))\n        ab == bc && ab == ac",
  "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n\
    \        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        (a1 == a2 && b1 == b2 && c1 == c2) || (a1 == a3 && b1 == b3 && c1 ==\
    \ c3) || (a1 == a4 && b1 == b4 && c1 == c4)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ math.abs(a1 - b1)\n        val b2 = math.abs(b1 - c1)\n        val c2 = math.abs(c1\
    \ - a1)\n        (a1 + b1 + c1) < (a2 + b2 + c2)", "        val ab = math.sqrt((b*b)\
    \ - (a*a))\n        val bc = math.sqrt((c*c) - (b*b))\n        val ac = math.sqrt((a*a)\
    \ - (c*c))\n        ab == bc && ab == ac", "        val ab = math.pow(a, 2)\n\
    \        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val\
    \ abc = math.pow(ab + bc + cd, 0.5)\n        abc < math.pow(a, 0.5) * math.pow(b,\
    \ 0.5) * math.pow(c, 0.5)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1\
    \ + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a", "        val ab = math.sqrt((b * b) - (a * a))\n        val\
    \ ac = math.sqrt((c * c) - (a * a))\n        val bc = math.sqrt((b * b) - (c *\
    \ c))\n        ab == ac && ab == bc", "        val a1 = math.abs(a)\n        val\
    \ b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n \
    \       val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 ==\
    \ c1 && c1 == a2) || (a1 == b1 && b1 == c2 && c1 == a2) || (a1 == b2 && b1 ==\
    \ c1 && c1 == a2) || (a1 == b2 && b1 == c2 && c1 == a2) || (a1 == c2 && b1 ==\
    \ c1 && c1 == a2) || (a1 == c2 && b1 == c2 && c1 == a2)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) > 0", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab + bc + cd, 0.5)\n        val acb = math.pow(a + b +\
    \ c, 0.5)\n        val bcd = math.pow(b + c + d, 0.5)\n        val abcd = math.pow(abc\
    \ + acb + bcd, 0.5)\n        abc > 0 && acb > 0 && bcd > 0 && abcd > 0", "   \
    \     val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(a-b)\n   \
    \     val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc\
    \ = math.abs(ab+ac+bc)\n        abc < 2", "        val a = math.abs(a)\n     \
    \   val b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab + bc + cd, 0.5)\n        val abd = math.pow(ab + bc,\
    \ 0.5)\n        val bcd = math.pow(b + c, 0.5)\n        val cda = math.pow(cd\
    \ + a, 0.5)\n        val abda = math.pow(ab + bd, 0.5)\n        val bcda = math.pow(bc\
    \ + d, 0.5)\n        val cdbc = math.pow(cd + b, 0.5)\n        val abdbc = math.pow(ab\
    \ + bd, 0.5)\n        val bcdbc = math.pow(bc + d, 0.5)\n        val cdbd = math.pow(cd\
    \ + b, 0.5)\n        val abdbd = math.pow(ab + bd, 0.5)\n        val bcdbd = math.pow(bc\
    \ + d, 0.5)\n        val cdbda = math.pow(cd + b, 0.5)\n        val abdbda = math.pow(ab\
    \ + bd, 0.5)\n        val bcdbda = math.pow(bc + d, 0.5)\n        val cdbdbc =\
    \ math.pow(cd + b, 0.5)\n        val abdbdbc = math.pow(ab + bd, 0.5)\n      \
    \  val bcdbdbc = math.pow(bc + d, 0.5)\n        val cdbdbd = math.pow(cd + b,\
    \ 0.5)\n        val abdbdbd = math.pow(ab + bd, 0.5)\n        val bcdbdbd = math.pow(bc\
    \ + d, 0.5)\n        val cdbdbda = math.pow(cd + b, 0.5)\n        val abdbdbda\
    \ = math.pow(ab + bd, 0.5)\n        val bcdbdbda = math.pow(bc + d, 0.5)\n   \
    \     val cdbdbdbc = math.pow(cd + b, 0.5)\n        val abdbdbdbc = math.pow(ab\
    \ + bd, 0.5)\n        val bcdbdbdbc = math.pow(bc + d, 0.5)\n        val cdbdbdbd\
    \ = math.pow(cd + b, 0.5)\n        val abdbdbdbd = math.pow(ab + bd, 0.5)\n  \
    \      val bcdbdbdbd = math.pow(bc + d, 0.5)\n        val cdbdbdbda = math.pow(cd\
    \ + b, 0.5)\n        val abdbdbdbda = math.pow(ab + bd, 0.5)\n        val bcdbdbdbda\
    \ = math.pow(bc + d, 0.5)\n        val cdbdbdbdbc = math.pow(cd + b, 0.5)\n  \
    \      val abdbdbdb", "        val ab = math.pow(a, 2)\n        val bc = math.pow(b,\
    \ 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd,\
    \ 0.5)\n        abc < b + c + a", "        // Write your code here\n        val\
    \ a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val ab = math.pow(a,2)\n        val bc = math.pow(b,2)\n        val cd\
    \ = math.pow(c,2)\n        val abc = math.pow(ab,2)\n        val bcd = math.pow(bc,2)\n\
    \        val abcd = math.pow(abc,2)\n        val abbc = math.pow(ab,2)\n     \
    \   val abbb = math.pow(ab,2)\n        val bccd = math.pow(bc,2)\n        val\
    \ bcda = math.pow(bc,2)\n        val bcdaa = math.pow(bc,2)\n        val bcdaaa\
    \ = math.pow(bc,2)\n        val bcdaaaa = math.pow(bc,2)\n        val bcdaaaaa\
    \ = math.pow(bc,2)\n        val bcdaaaaaa = math.pow(bc,2)\n        val bcdaaaaaaa\
    \ = math.pow(bc,2)\n        val bcdaaaaaaaa = math.pow(bc,2)\n        val bcdaaaaaaaaa\
    \ = math.pow(bc,2)\n        val bcdaaaaaaaaaa = math.pow(bc,2)\n        val bcdaaaaaaaaaa=\
    \ math.pow(bc,2)\n        val bcdaaaaaaaaaa= math.pow(bc,2)\n        val bcdaaaaaaaaaa=\
    \ math.pow(bc,2)\n        val bcdaaaaaaaaaa= math.pow(bc,2)\n        val bcdaaaaaaaaaa=\
    \ math.pow(bc,2)\n        val bcdaaaaaaaaaa= math.pow(bc,2)\n        val bcdaaaaaaaaaa=\
    \ math.pow(bc,2)\n        val bcdaaaaaaaaaa= math.pow(bc,2)\n        val bcdaaaaaaaaaa=\
    \ math.pow(bc,2)\n        val bcdaaaaaaaaaa= math.pow(bc,2)\n        val bcdaaaaaaaaaa=\
    \ math.pow(bc,2)\n        val bcdaaaaaaaaaa= math.pow(bc,2)\n        val bcdaaaaaaaaaa=\
    \ math.pow(bc,2)\n        val bcdaaaaaaaaaa= math.pow(bc,2)\n        val bcdaaaaaaaaaa=\
    \ math.pow(bc,2)\n        val bcdaaaaaaaaaa= math.pow(bc,2)\n        val bcdaaaaaaaaaa=\
    \ math.pow(bc,2)\n        val bcdaaaaaaaaaa= math.pow(bc,2)\n", "        // Write\
    \ your code here\n        val a = math.abs(a)\n        val b = math.abs(b)\n \
    \       val c = math.abs(c)\n        if (a + b > c && a + c > b && b + c > a)\
    \ return true\n        else return false", "        // Write your code here\n\
    \        val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n    \
    \    val a2 = a1 + 1\n        val b2 = b1 + 1\n        val c2 = c1 + 1\n     \
    \   val a3 = a2 + 1\n        val b3 = b2 + 1\n        val c3 = c2 + 1\n      \
    \  val a4 = a3 + 1\n        val b4 = b3 + 1\n        val c4 = c3 + 1\n       \
    \ val a5 = a4 + 1\n        val b5 = b5 + 1\n        val c5 = c5 + 1\n        val\
    \ a6 = a6 + 1\n        val b6 = b6 + 1\n        val c6 = c6 + 1\n        val a7\
    \ = a7 + 1\n        val b7 = b7 + 1\n        val c7 = c7 + 1\n        val a8 =\
    \ a8 + 1\n        val b8 = b8 + 1\n        val c8 = c8 + 1\n        val a9 = a9\
    \ + 1\n        val b9 = b9 + 1\n        val c9 = c9 + 1\n        val a10 = a10\
    \ + 1\n        val b10 = b10 + 1\n        val c10 = c10 + 1\n        val a11 =\
    \ a11 + 1\n        val b11 = b11 + 1\n        val c11 = c11 + 1\n        val a12\
    \ = a12 + 1\n        val b12 = b12 + 1\n        val c12 = c12 + 1\n        val\
    \ a13 = a13 + 1\n        val b13 = b13 + 1\n        val c13 = c13 + 1\n      \
    \  val a14 = a14 + 1\n        val b14 = b14 + 1\n        val c14 = c14 + 1\n \
    \       val a15 = a15 + 1\n        val b15 = b15 + 1\n        val c15 = c15 +\
    \ 1\n        val a16 = a16 + 1\n        val b16 = b16 + 1\n        val c16 = c16\
    \ + 1\n        val a17 = a17 + 1\n        val b17 = b17 + 1\n        val c17 =\
    \ c17 + 1\n        val a18 = a18 + 1\n        val b18 = b18 + 1\n        val c18\
    \ = c18 + 1\n        val a19 = a19 + 1\n        val b19 = b19 + 1\n        val\
    \ c19 = c19 + 1\n        val a20 = a20 + 1\n        val b20 = b20 + 1\n      \
    \  val c20 = c20 + 1\n        val a21 = a21 + 1\n        val b21 = b21 + 1\n \
    \       val c21 = c21 + 1\n        val a22 = a22 + 1\n        val b22 = b22 +\
    \ 1\n        val c22", "        // Write your code here\n        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 * b1 * c1 - a2 * b2 * c1) - (a1 * b2 * c1 - a2\
    \ * b1 * c1) > 0", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2\
    \ + c3\n        val c3 = c2 + a3\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a3) || (a3 == b3 && b3 == c3 && c3 == a2)", " \
    \       val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val\
    \ bc = math.abs(b - c)\n        ab == ac && ab == bc", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2)", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        abc < bc // if abc is less than bc then abc is a right-angled\
    \ triangle", "        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n\
    \        val cd = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n\
    \        abc > 0 && abc < math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)", " \
    \       val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c) -\
    \ (b*b))\n        val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && ab ==\
    \ ac", "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n \
    \       val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n      \
    \  val bcd = math.abs(bc + ab)\n        abc < bcd", "        val a1 = math.abs(a\
    \ * 0.5)\n        val b1 = math.abs(b * 0.5)\n        val c1 = math.abs(c * 0.5)\n\
    \        val a2 = math.abs(a * 0.5)\n        val b2 = math.abs(b * 0.5)\n    \
    \    val c2 = math.abs(c * 0.5)\n        val a3 = math.abs(a * 0.5)\n        val\
    \ b3 = math.abs(b * 0.5)\n        val c3 = math.abs(c * 0.5)\n        val a4 =\
    \ math.abs(a * 0.5)\n        val b4 = math.abs(b * 0.5)\n        val c4 = math.abs(c\
    \ * 0.5)\n        val a5 = math.abs(a * 0.5)\n        val b5 = math.abs(b * 0.5)\n\
    \        val c5 = math.abs(c * 0.5)\n        val a6 = math.abs(a * 0.5)\n    \
    \    val b6 = math.abs(b * 0.5)\n        val c6 = math.abs(c * 0.5)\n        val\
    \ a7 = math.abs(a * 0.5)\n        val b7 = math.abs(b * 0.5)\n        val c7 =\
    \ math.abs(c * 0.5)\n        val a8 = math.abs(a * 0.5)\n        val b8 = math.abs(b\
    \ * 0.5)\n        val c8 = math.abs(c * 0.5)\n        val a9 = math.abs(a * 0.5)\n\
    \        val b9 = math.abs(b * 0.5)\n        val c9 = math.abs(c * 0.5)\n    \
    \    val a10 = math.abs(a * 0.5)\n        val b10 = math.abs(b * 0.5)\n      \
    \  val c10 = math.abs(c * 0.5)\n        val a11 = math.abs(a * 0.5)\n        val\
    \ b11 = math.abs(b * 0.5)\n        val c11 = math.abs(c * 0.5)\n        val a12\
    \ = math.abs(a * 0.5)\n        val b12 = math.abs(b * 0.5)\n        val c12 =\
    \ math.abs(c * 0.5)\n        val a13 = math.abs(a * 0.5)\n        val b13 = math.abs(b\
    \ * 0.5)\n        val c13 = math.abs(c * 0.5)\n        val a14 = math.abs(a *\
    \ 0.5)\n        val b14 = math.abs(b * 0.5)\n        val c14 = math.abs(c * 0.5)\n\
    \        val a15 = math.abs(a * 0.5)\n        val b15 = math.abs(b * 0.5)\n  \
    \      val c15 = math.abs(c * 0.5)\n        val a16 = math.abs(a * 0.5)\n    \
    \    val b16 = math.abs(b * 0.5)\n        val c16 = math.abs(c * 0.5)\n      \
    \  val a17 = math.abs(a * 0.5)\n        val b17 = math.abs(b * ", "        val\
    \ ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c) - (b*b))\n \
    \       val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && ab == ac", "  \
    \      val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1\
    \ + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2)", "        val\
    \ ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n        val bc = math.abs(b-c)\n\
    \        ab == ac && ab == bc", "        val a1 = math.abs(a)\n        val b1\
    \ = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n    \
    \    val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 == b1 && b1 == c1\
    \ && c1 == a2) || (a2 == b2 && b2 == c2 && c2 == a2)", "        val ab = math.pow(b,\
    \ 2)\n        val ac = math.pow(c, 2)\n        val ad = math.pow(a, 2)\n     \
    \   val bc = math.pow(ab, 2)\n        val bd = math.pow(ac, 2)\n        val cd\
    \ = math.pow(ad, 2)\n        val abc = math.pow(ab, 2)\n        val acd = math.pow(ac,\
    \ 2)\n        val bcd = math.pow(bc, 2)\n        val abcd = math.pow(abc, 2)\n\
    \        val bcda = math.pow(bc, 2)\n        val abcda = math.pow(abc, 2)\n  \
    \      val bcdaa = math.pow(bc, 2)\n        val abcdaa = math.pow(abc, 2)\n  \
    \      val bcdaaa = math.pow(bc, 2)\n        val abcdaaa = math.pow(abc, 2)\n\
    \        val bcdaaaa = math.pow(bc, 2)\n        val abcdaaaa = math.pow(abc, 2)\n\
    \        val bcdaaaaa = math.pow(bc, 2)\n        val abcdaaaaa = math.pow(abc,\
    \ 2)\n        val bcdaaaaaa = math.pow(bc, 2)\n        val abcdaaaaaa = math.pow(abc,\
    \ 2)\n        val bcdaaaaaaa = math.pow(bc, 2)\n        val abcdaaaaaaa = math.pow(abc,\
    \ 2)\n        val bcdaaaaaaaa = math.pow(bc, 2)\n        val abcdaaaaaaaa = math.pow(abc,\
    \ 2)\n        val bcdaaaaaaaaa =math.pow(bc, 2)\n        val abcdaaaaaaaaa =math.pow(abc,\
    \ 2)\n        val bcdaaaaaaaaaa =math.pow(bc, 2)\n        val abcdaaaaaaaaaa =math.pow(abc,\
    \ 2)\n        val bcdaaaaaaaaaaa =math.pow(bc, 2)\n        val abcdaaaaaaaaaaa\
    \ =math.pow(abc, 2)\n        val bcdaaaaaaaaaaaa =math.pow(bc, 2)\n        val\
    \ abcdaaaaaaaaaaa =math.pow(abc, 2)\n        val bcdaaaaaaaaaaaa =math.pow(bc,\
    \ 2)\n        val abcdaaaaaaaaaaa =math.pow(abc, 2)\n        val bcdaaaaaaaaaaaa\
    \ =math.pow(bc, 2)\n        val abcdaaaaaaaaaaa =math.pow(abc, 2)\n        val\
    \ bcdaaaaaaaaaaaa =math.pow(bc, 2)\n        val abcdaaaaaaaaaaa =math.pow(abc,\
    \ 2)\n        val bc", "        val ab = math.abs(a - b)\n        val ac = math.abs(a\
    \ - c)\n        val bc = math.abs(b - c)\n        ab == ac && ab == bc", "   \
    \     val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        val a1 = math.abs(a)\n     \
    \   val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 +\
    \ b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 == b1 &&\
    \ b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 &&\
    \ b1 == c1 && c1 == a2)", "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n\
    \        val bc = math.abs(c-b)\n        val abc = math.abs(a-c)\n        val\
    \ bcd = math.abs(b-c)\n        ab == abc && ac == bcd && b == c", "        val\
    \ ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b\
    \ - c)\n        ab >= ac && ab >= bc", "        val a = math.abs(a)\n        val\
    \ b = math.abs(b)\n        val c = math.abs(c)\n        val a1 = math.pow(a, 2)\n\
    \        val b1 = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n        val\
    \ a2 = math.pow(a, 3)\n        val b2 = math.pow(b, 3)\n        val c2 = math.pow(c,\
    \ 3)\n        val a3 = math.pow(a, 4)\n        val b3 = math.pow(b, 4)\n     \
    \   val c3 = math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n        val b4 =\
    \ math.pow(b, 5)\n        val c4 = math.pow(c, 5)\n        val a5 = math.pow(a,\
    \ 6)\n        val b5 = math.pow(b, 6)\n        val c5 = math.pow(c, 6)\n     \
    \   val a6 = math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n        val c6 =\
    \ math.pow(c, 7)\n        val a7 = math.pow(a, 8)\n        val b7 = math.pow(b,\
    \ 8)\n        val c7 = math.pow(c, 8)\n        val a8 = math.pow(a, 9)\n     \
    \   val b8 = math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n        val a9 =\
    \ math.pow(a, 10)\n        val b9 = math.pow(b, 10)\n        val c9 = math.pow(c,\
    \ 10)\n        val a10 = math.pow(a, 11)\n        val b10 = math.pow(b, 11)\n\
    \        val c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n      \
    \  val b11 = math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n        val a12\
    \ = math.pow(a, 13)\n        val b12 = math.pow(b, 13)\n        val c12 = math.pow(c,\
    \ 13)\n        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b, 14)\n\
    \        val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n      \
    \  val b14 = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n        val a15\
    \ = math.pow(a, 16)\n        val b15 = math.pow(b, 16)\n        val c15 = math.pow(c,\
    \ 16)\n        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b, 17)\n\
    \        val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n      \
    \  val b17 = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n        val a18\
    \ = math.pow(a, 19)\n        val b18 = math.", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 * b2 * c2) - (a2 * b1 * c1) - (a1 * b2 * c1) -\
    \ (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1\
    \ * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) -\
    \ (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2\
    \ * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) -\
    \ (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1\
    \ * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) -\
    \ (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2\
    \ * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) -\
    \ (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1\
    \ * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) -\
    \ (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2\
    \ * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) -\
    \ (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b1\
    \ * c1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd // if abc < bcd then a\
    \ is right angle", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = math.abs(a1 * b1)\n        val\
    \ b2 = math.abs(b1 * c1)\n        val c2 = math.abs(c1 * b1)\n        val a3 =\
    \ math.abs(a2 * b2)\n        val b3 = math.abs(b2 * c2)\n        val c3 = math.abs(c2\
    \ * b2)\n        (a1 + b1 + c1 == a2 + b2 + c2 && a3 + b3 + c3 == a2 * b2 + b2\
    \ * c2) || (a1 + b1 + c1 == a2 + b2 + c2 && a3 + b3 + c3 == a2 * b2 + b2 * c2\
    \ && a1 * b2 + b1 * c2 == a2 * c2 && b1 * c2 + c1 * b2 == b2 * c2)", "       \
    \ val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c,\
    \ 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n        abc < b", "     \
    \   val a1 = math.abs(a * Math.cos(math.pi/180))\n        val b1 = math.abs(b\
    \ * Math.cos(math.pi/180))\n        val c1 = math.abs(c * Math.cos(math.pi/180))\n\
    \        val a2 = math.abs(a * Math.sin(math.pi/180))\n        val b2 = math.abs(b\
    \ * Math.sin(math.pi/180))\n        val c2 = math.abs(c * Math.sin(math.pi/180))\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) < 0", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ math.abs(a1 - b1)\n        val b2 = math.abs(b1 - c1)\n        val c2 = math.abs(c1\
    \ - a1)\n        (a1 + b1 + c1) - (a2 + b2 + c2) < 0", "        val a1 = (a +\
    \ b) / 2\n        val a2 = (b + c) / 2\n        val a3 = (c + a) / 2\n       \
    \ val b1 = (a + c) / 2\n        val b2 = (c + b) / 2\n        val b3 = (b + a)\
    \ / 2\n        val c1 = (a + b) / 2\n        val c2 = (b + c) / 2\n        val\
    \ c3 = (c + a) / 2\n        val a1_sq = a1 * a1\n        val a2_sq = a2 * a2\n\
    \        val a3_sq = a3 * a3\n        val b1_sq = b1 * b1\n        val b2_sq =\
    \ b2 * b2\n        val b3_sq = b3 * b3\n        val c1_sq = c1 * c1\n        val\
    \ c2_sq = c2 * c2\n        val c3_sq = c3 * c3\n        val a1_sq2 = a1_sq + a1_sq\n\
    \        val a2_sq2 = a2_sq + a2_sq\n        val a3_sq2 = a3_sq + a3_sq\n    \
    \    val b1_sq2 = b1_sq + b1_sq\n        val b2_sq2 = b2_sq + b2_sq\n        val\
    \ b3_sq2 = b3_sq + b3_sq\n        val c1_sq2 = c1_sq + c1_sq\n        val c2_sq2\
    \ = c2_sq + c2_sq\n        val c3_sq2 = c3_sq + c3_sq\n        val a1_sq3 = a1_sq2\
    \ + a1_sq2\n        val a2_sq3 = a2_sq2 + a2_sq2\n        val a3_sq3 = a3_sq2\
    \ + a3_sq2\n        val b1_sq3 = b1_sq2 + b1_sq2\n        val b2_sq3 = b2_sq2\
    \ + b2_sq2\n        val b3_sq3 = b3_sq2 + b3_sq2\n        val c1_sq3 = c1_sq2\
    \ + c1_sq2\n        val c2_sq3 = c2_sq2 + c2_sq2\n        val c3_sq3 = c3_sq2\
    \ + c3_sq2\n        val a1_sq4 = a1_sq3 + a1_sq3\n        val a2_sq4 = a2_sq3\
    \ + a2_sq3\n        val a3_sq4 = a3_sq3 + a3_sq3\n        val b1_sq4 = b1_sq3\
    \ + b1_sq3\n        val b2_sq4 = b2_sq3 + b2_sq3\n        val b3_sq4 = b3_sq3\
    \ + b3_sq3\n        val ", "        val a1 = a / 2\n        val b1 = b / 2\n \
    \       val c1 = c / 2\n        val a2 = a1 + 1\n        val b2 = b1 + 1\n   \
    \     val c2 = c1 + 1\n        val a3 = a1 + 2\n        val b3 = b1 + 2\n    \
    \    val c3 = c1 + 2\n        val a4 = a2 + 1\n        val b4 = b2 + 1\n     \
    \   val c4 = c2 + 1\n        val a5 = a2 + 2\n        val b5 = b2 + 2\n      \
    \  val c5 = c2 + 2\n        val a6 = a3 + 1\n        val b6 = b3 + 1\n       \
    \ val c6 = c3 + 1\n        val a7 = a3 + 1\n        val b7 = b3 + 1\n        val\
    \ c7 = c3 + 1\n        val a8 = a4 + 2\n        val b8 = b4 + 2\n        val c8\
    \ = c4 + 2\n        val a9 = a4 + 3\n        val b9 = b4 + 3\n        val c9 =\
    \ c4 + 3\n        val a10 = a5 + 1\n        val b10 = b5 + 1\n        val c10\
    \ = c5 + 1\n        val a11 = a5 + 2\n        val b11 = b5 + 2\n        val c11\
    \ = c5 + 2\n        val a12 = a6 + 1\n        val b12 = b6 + 1\n        val c12\
    \ = c6 + 1\n        val a13 = a6 + 2\n        val b13 = b6 + 2\n        val c13\
    \ = c6 + 2\n        val a14 = a7 + 1\n        val b14 = b7 + 1\n        val c14\
    \ = c7 + 1\n        val a15 = a7 + 2\n        val b15 = b7 + 2\n        val c15\
    \ = c7 + 2\n        val a16 = a8 + 1\n        val b16 = b8 + 1\n        val c16\
    \ = c8 + 1\n        val a17 = a8 + 2\n        val b17 = b8 + 2\n        val c17\
    \ = c8 + 2\n        val a18 = a9 + 1\n        val b18 = b9 + 1\n        val c18\
    \ = c9 + 1\n        val a19 = a9 + 2\n        val b19 = b9 + 2\n        val c19\
    \ = c9 + 2\n        val a20 = a10 + 1\n        val b20 = b10 + 1\n        val\
    \ c20 = c10 + 1\n        val a21 = a10 + 2\n        val b21 = b10 + 2\n      \
    \  val c21 = c10 + 2", "        val ab = math.pow(b, 2)\n        val ac = math.pow(c,\
    \ 2)\n        val ad = math.pow(a, 2)\n        ab + ac + ad == 0", "        val\
    \ ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b\
    \ - c)\n        val abc = math.abs(ab + ac)\n        abc > ab && abc > bc", " \
    \       val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val\
    \ cd = math.pow(c, 2)\n        val abc = ab + bc\n        val bcd = bc + cd\n\
    \        val abcd = abc + bcd\n        val acbd = ac + bd\n        val bcda =\
    \ bcd + ad\n        val abcda = abcd + acbd\n        val acdbd = acbd + bd\n \
    \       val bcdaa = bcda + ad\n        val abcdaa = abcda + acdbd\n        val\
    \ acdbda = acdbd + ad\n        val bcdaaa = bcdaa + ad\n        val abcdaaa =\
    \ abcdaa + acdbda\n        val acdbdaa = acdbdaa + ad\n        val bcdaaaa = bcdaaaa\
    \ + ad\n        val abcdaaaa = abcdaaaa + acdbdaa\n        val acdbdaaa = acdbdaaaa\
    \ + ad\n        val bcdaaaaa = bcdaaaaa + ad\n        val abcdaaaaa = abcdaaaaa\
    \ + acdbdaaa\n        val acdbdaaaa = acdbdaaaaa + ad\n        val bcdaaaaaa =\
    \ bcdaaaaaa + ad\n        val abcdaaaaaa = abcdaaaaaa + acdbdaaaa\n        val\
    \ acdbdaaaaa = acdbdaaaaaa + ad\n        val bcdaaaaaaa = bcdaaaaaaa + ad\n  \
    \      val abcdaaaaaaa = abcdaaaaaaa + acdbdaaaaa\n        val acdbdaaaaaa = acdbdaaaaaaa\
    \ + ad\n        val bcdaaaaaaaa = bcdaaaaaaaa + ad\n        val abcdaaaaaaaa =\
    \ abcdaaaaaaaa + acdbdaaaaaa\n        val acdbdaaaaaaa = acdbdaaaaaaaa + ad\n\
    \        val bcdaaaaaaaaa = bcdaaaaaaaaa + ad\n        val abcdaaaaaaaaa = abcdaaaaaaaaa\
    \ + acdbdaaaaaaa\n        val acdbdaaaaaaaa = acdbdaaaaaaaaa + ad\n        val\
    \ bcdaaaaaaaaaa = bcdaaaaaaaaaa + ad\n        val abcdaaaaaaaaaa = abcdaaaaaaaaaa\
    \ + acdbdaaaaaaaa\n        val acdbdaaaaaaaa = acdbdaaaaaaaaaa + ad\n        val\
    \ bcdaaaaaaaaaaa = bcdaaaaaaaaaaa + ad\n        val abcdaaaaaaaaaaa = abcdaaaaaaaaaaa\
    \ + acdbdaaaaaaaa\n", "        val ab = math.pow(b, 2)\n        val ac = math.pow(c,\
    \ 2)\n        val ad = math.pow(a, 2)\n        ab == ac && ab == ad && ac == ad\
    \ || ab == ad && ac == ab && ad == ab", "        val a1 = math.abs(a)\n      \
    \  val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = math.abs(a1\
    \ - b1)\n        val b2 = math.abs(b1 - c1)\n        val c2 = math.abs(c1 - a1)\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) < 0", "        val a1 = a / 2\n     \
    \   val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + 1\n        val\
    \ b2 = b1 + 1\n        val c2 = c1 + 1\n        val a3 = a2 + 1\n        val b3\
    \ = b2 + 1\n        val c3 = c2 + 1\n        val a4 = a3 + 1\n        val b4 =\
    \ b4 + 1\n        val c4 = c4 + 1\n        val a5 = a4 + 1\n        val b5 = b5\
    \ + 1\n        val c5 = c5 + 1\n        val a6 = a6 + 1\n        val b6 = b6 +\
    \ 1\n        val c6 = c6 + 1\n        val a7 = a7 + 1\n        val b7 = b7 + 1\n\
    \        val c7 = c7 + 1\n        val a8 = a8 + 1\n        val b8 = b8 + 1\n \
    \       val c8 = c8 + 1\n        val a9 = a9 + 1\n        val b9 = b9 + 1\n  \
    \      val c9 = c9 + 1\n        val a10 = a10 + 1\n        val b10 = b10 + 1\n\
    \        val c10 = c10 + 1\n        val a11 = a11 + 1\n        val b11 = b11 +\
    \ 1\n        val c11 = c11 + 1\n        val a12 = a12 + 1\n        val b12 = b12\
    \ + 1\n        val c12 = c12 + 1\n        val a13 = a13 + 1\n        val b13 =\
    \ b13 + 1\n        val c13 = c13 + 1\n        val a14 = a14 + 1\n        val b14\
    \ = b14 + 1\n        val c14 = c14 + 1\n        val a15 = a15 + 1\n        val\
    \ b15 = b15 + 1\n        val c15 = c15 + 1\n        val a16 = a16 + 1\n      \
    \  val b16 = b16 + 1\n        val c16 = c16 + 1\n        val a17 = a17 + 1\n \
    \       val b17 = b17 + 1\n        val c17 = c17 + 1\n        val a18 = a18 +\
    \ 1\n        val b18 = b18 + 1\n        val c18 = c18 + 1\n        val a19 = a19\
    \ + 1\n        val b19 = b19 + 1\n        val c19 = c19 + 1\n        val a20 =\
    \ a20 + 1\n        val b20 = b20 + 1\n        val c20 = c20 + 1\n        val a21\
    \ = a21 + 1\n        val b21 = b21 + 1\n        val c21 = c21 + 1\n        val\
    \ a22 = a22 + 1\n        val b22 = b22 + 1\n        val c22 = c22 + 1\n      \
    \  val ", "        val a = math.abs(a)\n        val b = math.abs(b)\n        val\
    \ c = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc = math.pow(b,\
    \ 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab, b)\n   \
    \     val bcd = math.pow(bc, c)\n        val abcd = math.pow(abc, c)\n       \
    \ val abbc = math.pow(ab, b)\n        val bcbc = math.pow(bc, c)\n        val\
    \ cbcd = math.pow(cb, c)\n        val abcdb = math.pow(abc, b)\n        val bcbcd\
    \ = math.pow(bc, c)\n        val cbcdb = math.pow(cb, c)\n        val abcdbc =\
    \ math.pow(abc, b)\n        val bcbcdb = math.pow(bc, c)\n        val cbcdbc =\
    \ math.pow(cb, c)\n        val abcdbbc = math.pow(abc, b)\n        val bcbcdbc\
    \ = math.pow(bc, c)\n        val cbcdbbc = math.pow(cb, c)\n        val abcdbbcd\
    \ = math.pow(abc, b)\n        val bcbcdbcd = math.pow(bc, c)\n        val cbcdbbcd\
    \ = math.pow(cb, c)\n        val abcdbbcdc = math.pow(abc, b)\n        val bcbcdbcd\
    \ = math.pow(bc, c)\n        val cbcdbbcd = math.pow(cb, c)\n        val abcdbbcdcd\
    \ = math.pow(abc, b)\n        val bcbcdbcd = math.pow(bc, c)\n        val cbcdbbcd\
    \ = math.pow(cb, c)\n        val abcdbbcdcd = math.pow(abc, b)\n        val bcbcdbcd\
    \ = math.pow(bc, c)\n        val cbcdbbcd = math.pow(cb, c)\n        val abcdbbcdcd\
    \ = math.pow(abc, b)\n        val bcbcdbcd = math.pow(bc, c)\n        val cbcdbbcd\
    \ = math.pow(cb, c)\n        val abcdbbcdcd = math.pow(abc, b)\n        val bcbcdbcd\
    \ = math.pow(bc, c)\n        val cbcdbbcd = math.pow(cb, c)\n        val abcdbbcdcd\
    \ = math.pow(abc, b)\n        val bcbcdbcd = math.pow(bc, c)\n        val cbcdbbcd\
    \ = math.pow(cb, c)\n        val abcdbbcdcd = math.pow(ab", "        val a1 =\
    \ (a + b + c) / 2\n        val a2 = (b + c + a) / 2\n        val a3 = (c + a +\
    \ b) / 2\n        val b1 = (a + c + b) / 2\n        val b2 = (c + b + a) / 2\n\
    \        val b3 = (b + a + c) / 2\n        val c1 = (a + b + c) / 2\n        val\
    \ c2 = (b + c + a) / 2\n        val c3 = (c + a + b) / 2\n        val d1 = (a\
    \ + c + b) / 2\n        val d2 = (c + b + a) / 2\n        val d3 = (b + a + c)\
    \ / 2\n        val e1 = (a + b + c) / 2\n        val e2 = (b + c + a) / 2\n  \
    \      val e3 = (c + a + b) / 2\n        val f1 = (a + c + b) / 2\n        val\
    \ f2 = (c + b + a) / 2\n        val f3 = (b + a + c) / 2\n        val g1 = (a\
    \ + b + c) / 2\n        val g2 = (b + c + a) / 2\n        val g3 = (c + a + b)\
    \ / 2\n        val h1 = (a + c + b) / 2\n        val h2 = (c + b + a) / 2\n  \
    \      val h3 = (b + a + c) / 2\n        val i1 = (a + b + c) / 2\n        val\
    \ i2 = (b + c + a) / 2\n        val i3 = (c + a + b) / 2\n        val j1 = (a\
    \ + c + b) / 2\n        val j2 = (c + b + a) / 2\n        val j3 = (b + a + c)\
    \ / 2\n        val k1 = (a + b + c) / 2\n        val k2 = (b + c + a) / 2\n  \
    \      val k3 = (c + a + b) / 2\n        val l1 = (a + c + b) / 2\n        val\
    \ l2 = (c + b + a) / 2\n        val l3 = (b + a + c) / 2\n        val m1 = (a\
    \ + b + c) / 2\n        val m2 = (b + c + a) / 2\n        val m3 = (c + a + b)\
    \ / 2\n        val n1 = (a + c + b) / 2\n        val n2 = (b + c + a) / 2\n  \
    \      val n3 = (c + a + b) / 2\n        val o1 = (a + b + c) / 2\n        val\
    \ o2 = (b + c + a) / 2\n        val o3 = (c + a + b) / 2\n        val p1 = (a\
    \ + c + b) / 2\n        val p2 = (c + b + a) / 2\n        val p3 = (b + a + c)\
    \ / 2\n        val q1 = (a + b + c) / 2\n        val q2 = (b + c + a) / 2\n  \
    \      val q3 = (c + a + b) / 2\n", "        val a = math.abs(a)\n        val\
    \ b = math.abs(b)\n        val c = math.abs(c)\n        val a1 = math.pow(a, 2)\n\
    \        val b1 = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n        val\
    \ a2 = math.pow(a, 3)\n        val b2 = math.pow(b, 3)\n        val c2 = math.pow(c,\
    \ 3)\n        val a3 = math.pow(a, 4)\n        val b3 = math.pow(b, 4)\n     \
    \   val c3 = math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n        val b4 =\
    \ math.pow(b, 5)\n        val c4 = math.pow(c, 5)\n        val a5 = math.pow(a,\
    \ 6)\n        val b5 = math.pow(b, 6)\n        val c5 = math.pow(c, 6)\n     \
    \   val a6 = math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n        val c6 =\
    \ math.pow(c, 7)\n        val a7 = math.pow(a, 8)\n        val b7 = math.pow(b,\
    \ 8)\n        val c7 = math.pow(c, 8)\n        val a8 = math.pow(a, 9)\n     \
    \   val b8 = math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n        val a9 =\
    \ math.pow(a, 10)\n        val b9 = math.pow(b, 10)\n        val c9 = math.pow(c,\
    \ 10)\n        val a10 = math.pow(a, 11)\n        val b10 = math.pow(b, 11)\n\
    \        val c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n      \
    \  val b11 = math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n        val a12\
    \ = math.pow(a, 13)\n        val b12 = math.pow(b, 13)\n        val c12 = math.pow(c,\
    \ 13)\n        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b, 14)\n\
    \        val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n      \
    \  val b14 = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n        val a15\
    \ = math.pow(a, 16)\n        val b15 = math.pow(b, 16)\n        val c15 = math.pow(c,\
    \ 16)\n        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b, 17)\n\
    \        val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n      \
    \  val b17 = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n        val a18\
    \ = math.pow(a, 19)\n        val b18 = math.", "        // Write your code here\n\
    \        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 =\
    \ math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val\
    \ c2 = c1 + a2\n        (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 +\
    \ b2 == c2) || (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2)",
  "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n        val bc\
    \ = math.abs(c-b)\n        val abc = math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n\
    \        abc < ab*ac && abc < bc*ac", "        val a = math.abs(a)\n        val\
    \ b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a, 2)\n\
    \        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val\
    \ abc = math.pow(ab, 2) + math.pow(bc, 2) + math.pow(cd, 2)\n        val acd =\
    \ math.pow(a, 2) + math.pow(c, 2)\n        val bcd = math.pow(b, 2) + math.pow(c,\
    \ 2)\n        val abcd = math.pow(abc, 2) + math.pow(bcd, 2) + math.pow(acd, 2)\n\
    \        abc / abcd > 0", "        val ab = math.sqrt((b*b) - (a*a))\n       \
    \ val bc = math.sqrt((c*c) - (b*b))\n        val ac = math.sqrt((a*a) - (c*c))\n\
    \        ab == bc && bc == ac", "        val a1 = math.abs(a)\n        val b1\
    \ = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n    \
    \    val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 + b1 + c1) * (a2\
    \ + b2 + c2) - (a1 * b1 * c2) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b2 * c1)\
    \ > 0", "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n    \
    \    val bc = math.abs(c-b)\n        val abc = math.abs(a-c)\n        val bcd\
    \ = math.abs(b-c)\n        ab == abc && ac == bcd && b == c", "        // Write\
    \ your code here\n        val a = math.abs(a)\n        val b = math.abs(b)\n \
    \       val c = math.abs(c)\n        val d = math.min(a,b,c)\n        val e =\
    \ math.max(a,b,c)\n        val f = math.min(a,c,b)\n        val g = math.max(a,c,b)\n\
    \        val h = math.min(b,c,a)\n        val i = math.max(b,c,a)\n        val\
    \ j = math.min(c,a,b)\n        val k = math.max(c,a,b)\n        val l = math.min(c,b,a)\n\
    \        val m = math.max(c,b,a)\n        val n = math.min(a,c,b)\n        val\
    \ o = math.max(a,c,b)\n        val p = math.min(b,c,a)\n        val q = math.max(b,c,a)\n\
    \        val r = math.min(c,a,b)\n        val s = math.max(c,a,b)\n        val\
    \ t = math.min(a,b,c)\n        val u = math.max(a,b,c)\n        val v = math.min(b,c,a)\n\
    \        val w = math.max(b,c,a)\n        val x = math.min(c,a,b)\n        val\
    \ y = math.max(c,a,b)\n        val z = math.min(c,b,a)\n        val A = math.min(a,c,b)\n\
    \        val B = math.max(a,c,b)\n        val C = math.min(b,c,a)\n        val\
    \ D = math.max(b,c,a)\n        val E = math.min(c,a,b)\n        val F = math.max(c,a,b)\n\
    \        val G = math.min(c,b,a)\n        val H = math.max(c,b,a)\n        val\
    \ I = math.min(a,b,c)\n        val J = math.max(a,b,c)\n        val K = math.min(b,c,a)\n\
    \        val L = math.max(b,c,a)\n        val M = math.min(c,a,b)\n        val\
    \ N = math.max(c,a,b)\n        val O = math.min(c,b,a)\n        val P = math.max(c,b,a)\n\
    \        val Q = math.min(a,b,c)\n        val R = math.max(a,b,c)\n        val\
    \ S = math.min(b,c,a)\n        val T = math.max(b,c,a)\n        val U = math.min(c,a,b)\n\
    \        val V = math.max(c,a,b)\n        val W = math.min(c,b,a)\n        val\
    \ X = math.min(c,a,b)\n        val Y = math.max(c,a,b)\n        val Z = math.min(c,b,a)\n",
  "        val ab = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((b *\
    \ b) - (c * c))\n        val ac = math.sqrt((a * a) - (c * c))\n        ab ==\
    \ bc && ab == ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1\
    \ + b1 + c1) * (b2 + c2 + a2) - (a1 + b1 + c1) * (c2 + a2 + b2) - (a2 + b2 + c2)\
    \ * (a1 + b1 + c1) - (a2 + b2 + c2) * (b1 + c1 + a1) - (a2 + b2 + c2) * (c1 +\
    \ a1 + b1) - (a2 + b2 + c2) * (c1 + b1 + a1) - (a2 + b2 + c2) * (a1 + c1 + b1)\
    \ - (a2 + b2 + c2) * (b1 + c1 + a1) - (a2 + b2 + c2) * (c1 + a1 + b1) - (a2 +\
    \ b2 + c2) * (c1 + b1 + a1) - (a2 + b2 + c2) * (a1 + c1 + b1) - (a2 + b2 + c2)\
    \ * (b1 + c1 + a1) - (a2 + b2 + c2) * (c1 + a1 + b1) - (a2 + b2 + c2) * (c1 +\
    \ b1 + a1) - (a2 + b2 + c2) * (a1 + c1 + b1) - (a2 + b2 + c2) * (b1 + c1 + a1)\
    \ - (a2 + b2 + c2) * (c1 + a1 + b1) - (a2 + b2 + c2) * (c1 + b1 + a1) - (a2 +\
    \ b2 + c2) * (a1 + c1 + b1) - (a2 + b2 + c2) * (b1 + c1 + a1) - (a2 + b2 + c2)\
    \ * (c1 + a1 + b1) - (a2 + b2 + c2) * (c1 + b1 + a1) - (a2 + b2 + c2) * (a1 +\
    \ c1 + b1) - (a2 + b2 + c2) * (b1 + c1 + a1) - (a2 + b2 + c2) * (c1 + a1 + b1)\
    \ - (a2 + b2 + c2) * (c1 + b1 + a1) - (a2 + b2 + c2) * (a1 + c1 + b1) - (a2 +\
    \ b2 + c2) * (b1 + c1 + a1) - (a2 + b2 + c2) * (c1 + a1 + b1) - (a2 + b2 + c2)\
    \ * (c1 + b1 + a1) - (a2 + b2 + c2) * (a1 + c1 + b1) - (a2 + b2 + c2) * (b1 +\
    \ c1 + a1) - (a", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 + b1 + c1 == a2) || (a1 + b1 + c1\
    \ == b2) || (a1 + b1 + c1 == c2)", "        val a1 = math.abs(a)\n        val\
    \ b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n \
    \       val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 ==\
    \ c1 && c1 == a2) || (a1 == b1 && b1 == c2 && c1 == a2) || (a1 == b2 && b1 ==\
    \ c1 && c1 == a2) || (a1 == b2 && b1 == c2 && c1 == a2) || (a1 == c2 && b1 ==\
    \ c1 && c1 == a2) || (a1 == c2 && b1 == c2 && c1 == a2)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ math.pow(a1, 2)\n        val b2 = math.pow(b1, 2)\n        val c2 = math.pow(c1,\
    \ 2)\n        val a3 = math.pow(a2, 2)\n        val b3 = math.pow(b2, 2)\n   \
    \     val c3 = math.pow(c2, 2)\n        val a4 = math.pow(a3, 2)\n        val\
    \ b4 = math.pow(b3, 2)\n        val c4 = math.pow(c3, 2)\n        val a5 = math.pow(a4,\
    \ 2)\n        val b5 = math.pow(b4, 2)\n        val c5 = math.pow(c4, 2)\n   \
    \     val a6 = math.pow(a5, 2)\n        val b6 = math.pow(b5, 2)\n        val\
    \ c6 = math.pow(c5, 2)\n        val a7 = math.pow(a6, 2)\n        val b7 = math.pow(b6,\
    \ 2)\n        val c7 = math.pow(c6, 2)\n        val a8 = math.pow(a7, 2)\n   \
    \     val b8 = math.pow(b7, 2)\n        val c8 = math.pow(c7, 2)\n        val\
    \ a9 = math.pow(a8, 2)\n        val b9 = math.pow(b8, 2)\n        val c9 = math.pow(c8,\
    \ 2)\n        val a10 = math.pow(a9, 2)\n        val b10 = math.pow(b9, 2)\n \
    \       val c10 = math.pow(c9, 2)\n        val a11 = math.pow(a10, 2)\n      \
    \  val b11 = math.pow(b10, 2)\n        val c11 = math.pow(c10, 2)\n        val\
    \ a12 = math.pow(a11, 2)\n        val b12 = math.pow(b11, 2)\n        val c12\
    \ = math.pow(c11, 2)\n        val a13 = math.pow(a12, 2)\n        val b13 = math.pow(b12,\
    \ 2)\n        val c13 = math.pow(c12, 2)\n        val a14 = math.pow(a13, 2)\n\
    \        val b14 = math.pow(b13, 2)\n        val c14 = math.pow(c13, 2)\n    \
    \    val a15 = math.pow(a14, 2)\n        val b15 = math.pow(b14, 2)\n        val\
    \ c15 = math.pow(c14, 2)\n        val a16 = math.pow(a15, 2)\n        val b16\
    \ = math.pow(b15, 2)\n        val c16 = math.pow(c15, 2)\n        val a17 = math.pow(a16,\
    \ 2)\n        val b17 = math.pow(b16, 2)\n        val c17", "        val a1 =\
    \ math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n  \
    \      val a2 = math.abs(a1 + b1 + c1)\n        val b2 = math.abs(b1 + c1)\n \
    \       val c2 = math.abs(a1 + b1)\n        val a3 = math.abs(a2 + b2 + c2)\n\
    \        val b3 = math.abs(b2 + c2)\n        val c3 = math.abs(a2 + b2)\n    \
    \    val a4 = math.abs(a3 + b3 + c3)\n        val b4 = math.abs(b3 + c3)\n   \
    \     val c4 = math.abs(a3 + b3)\n        val a5 = math.abs(a4 + b4 + c4)\n  \
    \      val b5 = math.abs(b4 + c4)\n        val c5 = math.abs(a4 + b4)\n      \
    \  val a6 = math.abs(a5 + b5 + c5)\n        val b6 = math.abs(b5 + c5)\n     \
    \   val c6 = math.abs(a5 + b5)\n        val a7 = math.abs(a6 + b6 + c6)\n    \
    \    val b7 = math.abs(b6 + c6)\n        val c7 = math.abs(a6 + b6)\n        val\
    \ a8 = math.abs(a7 + b7 + c7)\n        val b8 = math.abs(b7 + c7)\n        val\
    \ c8 = math.abs(a7 + b7)\n        val a9 = math.abs(a8 + b8 + c8)\n        val\
    \ b9 = math.abs(b8 + c8)\n        val c9 = math.abs(a8 + b8)\n        val a10\
    \ = math.abs(a9 + b9 + c9)\n        val b10 = math.abs(b9 + c9)\n        val c10\
    \ = math.abs(a9 + b9)\n        val a11 = math.abs(a10 + b10 + c10)\n        val\
    \ b11 = math.abs(b10 + c10)\n        val c11 = math.abs(a10 + b10)\n        val\
    \ a12 = math.abs(a11 + b11 + c11)\n        val b12 = math.abs(b11 + c11)\n   \
    \     val c12 = math.abs(a11 + b11)\n        val a13 = math.abs(a12 + b12 + c12)\n\
    \        val b13 = math.abs(b12 + c12)\n        val c13 = math.abs(a12 + b12)\n\
    \        val a14 = math.abs(a13 + b13 + c13)\n        val b14 = math.abs(b13 +\
    \ c13)\n        val c14 = math.abs(a13 + b13)\n        val a15 = math.abs(a14\
    \ + b", "        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n  \
    \      val cd = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n\
    \        val acb = math.pow(a + c + b, 2)\n        val bcd = math.pow(b + c, 2)\n\
    \        val bcda = math.pow(bcd + acb, 0.5)\n        val abbc = math.pow(ab +\
    \ bc + cd, 2)\n        val abbca = math.pow(ab + bc + cd, 3)\n        val abbcd\
    \ = math.pow(ab + bc + cd, 4)\n        val abbcda = math.pow(ab + bc + cd, 5)\n\
    \        val abbcdaa = math.pow(ab + bc + cd, 6)\n        val abbcdaaa = math.pow(ab\
    \ + bc + cd, 7)\n        val abbcdaaaa = math.pow(ab + bc + cd, 8)\n        val\
    \ abbcdaaaaa = math.pow(ab + bc + cd, 9)\n        val abbcdaaaaaa = math.pow(ab\
    \ + bc + cd, 10)\n        val abbcdaaaaaaa = math.pow(ab + bc + cd, 11)\n    \
    \    val abbcdaaaaaaaa = math.pow(ab + bc + cd, 12)\n        val abbcdaaaaaaaaa\
    \ = math.pow(ab + bc + cd, 13)\n        val abbcdaaaaaaaaa = math.pow(ab + bc\
    \ + cd, 14)\n        val abbcdaaaaaaaaaa = math.pow(ab + bc + cd, 15)\n      \
    \  val abbcdaaaaaaaaaa= math.pow(ab + bc + cd, 16)\n        val abbcdaaaaaaaaaa=\
    \ math.pow(ab + bc + cd, 17)\n        val abbcdaaaaaaaaaa= math.pow(ab + bc +\
    \ cd, 18)\n        val abbcdaaaaaaaaaa= math.pow(ab + bc + cd, 19)\n        val\
    \ abbcdaaaaaaaaaa= math.pow(ab + bc + cd, 20)\n        val abbcdaaaaaaaaaa= math.pow(ab\
    \ + bc + cd, 21)\n        val abbcdaaaaaaaaaa= math.pow(ab + bc + cd, 22)\n  \
    \      val abbcdaaaaaaaaaa= math.pow(ab + bc + cd, 23)\n        val abbcdaaaaaaaaaa=\
    \ math.pow(ab + bc + cd, 24)\n        val abbcdaaaaaaaaaa= math.pow(ab + ", " \
    \       val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val\
    \ cd = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n       \
    \ abc < b + c + a", "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n\
    \        val bc = math.abs(c-b)\n        val abc = math.abs(ab+ac+bc)\n      \
    \  abc > a && abc > b", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2\
    \ + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3\
    \ + c3\n        val c4 = c3 + a3\n        (a1 + b1 + c1 == a2 + b2 + c2 && a1\
    \ + b1 + c1 == a3 + b3 + c3 && a1 + b1 + c1 == a4 + b4 + c4 && a2 + b2 + c2 ==\
    \ a3 + b3 + c3 && a2 + b2 + c2 == a4 + b4 + c4 && a3 + b3 + c3 == a4 + b4 + c4\
    \ && a3 + b3 + c3 == a5 + b5 + c5 && a4 + b4 + c4 == a5 + b5 + c5 && a4 + b4 +\
    \ c4 == a6 + b6 + c6 && a5 + b5 + c5 == a6 + b6 + c6 && a5 + b5 + c5 == a7 + b7\
    \ + c7 && a6 + b6 + c6 == a7 + b7 + c7 && a6 + b6 + c6 == a8 + b8 + c8 && a7 +\
    \ b7 + c7 == a8 + b8 + c8 && a7 + b7 + c7 == a9 + b9 + c9)", "        val ab =\
    \ math.abs(a-b)\n        val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n\
    \        val abc = math.abs(ab+ac+bc)\n        abc > ab*ac*bc", "        val a1\
    \ = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1\
    \ + 1\n        val b2 = b1 + 1\n        val c2 = c1 + 1\n        val a3 = a2 +\
    \ 1\n        val b3 = b2 + 1\n        val c3 = c3 + 1\n        val a4 = a3 + 1\n\
    \        val b4 = b4 + 1\n        val c4 = c4 + 1\n        val a5 = a4 + 1\n \
    \       val b5 = b5 + 1\n        val c5 = c5 + 1\n        val a6 = a6 + 1\n  \
    \      val b6 = b6 + 1\n        val c6 = c6 + 1\n        val a7 = a7 + 1\n   \
    \     val b7 = b7 + 1\n        val c7 = c7 + 1\n        val a8 = a8 + 1\n    \
    \    val b8 = b8 + 1\n        val c8 = c8 + 1\n        val a9 = a9 + 1\n     \
    \   val b9 = b9 + 1\n        val c9 = c9 + 1\n        val a10 = a10 + 1\n    \
    \    val b10 = b10 + 1\n        val c10 = c10 + 1\n        val a11 = a11 + 1\n\
    \        val b11 = b11 + 1\n        val c11 = c11 + 1\n        val a12 = a12 +\
    \ 1\n        val b12 = b12 + 1\n        val c12 = c12 + 1\n        val a13 = a13\
    \ + 1\n        val b13 = b13 + 1\n        val c13 = c13 + 1\n        val a14 =\
    \ a14 + 1\n        val b14 = b14 + 1\n        val c14 = c14 + 1\n        val a15\
    \ = a15 + 1\n        val b15 = b15 + 1\n        val c15 = c15 + 1\n        val\
    \ a16 = a16 + 1\n        val b16 = b16 + 1\n        val c16 = c16 + 1\n      \
    \  val a17 = a17 + 1\n        val b17 = b17 + 1\n        val c17 = c17 + 1\n \
    \       val a18 = a18 + 1\n        val b18 = b18 + 1\n        val c18 = c18 +\
    \ 1\n        val a19 = a19 + 1\n        val b19 = b19 + 1\n        val c19 = c19\
    \ + 1\n        val a20 = a20 + 1\n        val b20 = b20 + 1\n        val c20 =\
    \ c20 + 1\n        val a21 = a21 + 1\n        val b21 = b21 + 1\n        val c21\
    \ = c21 + 1\n        val a22 = a22 + 1\n        val b22 = b22 + 1\n        val\
    \ c22 = c22 + 1\n        val a", "        val ab = math.abs(a-b)\n        val\
    \ ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc = math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n\
    \        abc < ab*ac*bc", "        val ab = math.pow(a, 2)\n        val bc = math.pow(b,\
    \ 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd,\
    \ 0.5)\n        abc > math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)", "   \
    \     val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c) - (b*b))\n\
    \        val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && bc == ac", " \
    \       // Write your code here\n        val a1 = (a + b) / 2\n        val a2\
    \ = (b + c) / 2\n        val a3 = (a2 + c) / 2\n        val b1 = (a + c) / 2\n\
    \        val b2 = (b + a) / 2\n        val b3 = (b2 + a) / 2\n        val c1 =\
    \ (a + b) / 2\n        val c2 = (b + a) / 2\n        val c3 = (b + c) / 2\n  \
    \      val d1 = (a + b) / 2\n        val d2 = (b + a) / 2\n        val d3 = (b\
    \ + c) / 2\n        val e1 = (a + c) / 2\n        val e2 = (b + c) / 2\n     \
    \   val e3 = (b + a) / 2\n        val f1 = (a + c) / 2\n        val f2 = (b +\
    \ c) / 2\n        val f3 = (b + a) / 2\n        val g1 = (a + b) / 2\n       \
    \ val g2 = (b + a) / 2\n        val g3 = (b + c) / 2\n        val h1 = (a + c)\
    \ / 2\n        val h2 = (b + c) / 2\n        val h3 = (b + a) / 2\n        val\
    \ i1 = (a + b) / 2\n        val i2 = (b + a) / 2\n        val i3 = (b + c) / 2\n\
    \        val j1 = (a + c) / 2\n        val j2 = (b + c) / 2\n        val j3 =\
    \ (b + a) / 2\n        val k1 = (a + b) / 2\n        val k2 = (b + a) / 2\n  \
    \      val k3 = (b + c) / 2\n        val l1 = (a + c) / 2\n        val l2 = (b\
    \ + c) / 2\n        val l3 = (b + a) / 2\n        val m1 = (a + b) / 2\n     \
    \   val m2 = (b + a) / 2\n        val m3 = (b + c) / 2\n        val n1 = (a +\
    \ c) / 2\n        val n2 = (b + c) / 2\n        val n3 = (b + a) / 2\n       \
    \ val o1 = (a + b) / 2\n        val o2 = (b + a) / 2\n        val o3 = (b + c)\
    \ / 2\n        val p1 = (a + c) / 2\n        val p2 = (b + c) / 2\n        val\
    \ p3 = (b + a) / 2\n        val q1 = (a + b) / 2\n        val q2 = (b + a) / 2\n\
    \        val q3 = (b + c) / 2\n        val r1 = (a + c) / 2\n        val r2 =\
    \ (b + c) / 2\n        val r3 = (b + a) / 2\n        val s1 = (a + b) / 2\n  \
    \      val s2 = (b + a) / 2\n        val s3 = (b + c) / 2\n        val ", "  \
    \      val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val a1 = math.abs(a * 0.5)\n        val b1 = math.abs(b * 0.5)\n    \
    \    val c1 = math.abs(c * 0.5)\n        val a2 = math.abs(a * 0.5)\n        val\
    \ b2 = math.abs(b * 0.5)\n        val c2 = math.abs(c * 0.5)\n        val a3 =\
    \ math.abs(a * 0.5)\n        val b3 = math.abs(b * 0.5)\n        val c3 = math.abs(c\
    \ * 0.5)\n        val a4 = math.abs(a * 0.5)\n        val b4 = math.abs(b * 0.5)\n\
    \        val c4 = math.abs(c * 0.5)\n        val a5 = math.abs(a * 0.5)\n    \
    \    val b5 = math.abs(b * 0.5)\n        val c5 = math.abs(c * 0.5)\n        val\
    \ a6 = math.abs(a * 0.5)\n        val b6 = math.abs(b * 0.5)\n        val c6 =\
    \ math.abs(c * 0.5)\n        val a7 = math.abs(a * 0.5)\n        val b7 = math.abs(b\
    \ * 0.5)\n        val c7 = math.abs(c * 0.5)\n        val a8 = math.abs(a * 0.5)\n\
    \        val b8 = math.abs(b * 0.5)\n        val c8 = math.abs(c * 0.5)\n    \
    \    val a9 = math.abs(a * 0.5)\n        val b9 = math.abs(b * 0.5)\n        val\
    \ c9 = math.abs(c * 0.5)\n        val a10 = math.abs(a * 0.5)\n        val b10\
    \ = math.abs(b * 0.5)\n        val c10 = math.abs(c * 0.5)\n        val a11 =\
    \ math.abs(a * 0.5)\n        val b11 = math.abs(b * 0.5)\n        val c11 = math.abs(c\
    \ * 0.5)\n        val a12 = math.abs(a * 0.5)\n        val b12 = math.abs(b *\
    \ 0.5)\n        val c12 = math.abs(c * 0.5)\n        val a13 = math.abs(a * 0.5)\n\
    \        val b13 = math.abs(b * 0.5)\n        val c13 = math.abs(c * 0.5)\n  \
    \      val a14 = math.abs(a * 0.5)\n        val b14 = math.abs(b * 0.5)\n    \
    \    val c14 = math.abs(c * 0.5)\n        val a15 = math.abs(a * 0.5)\n      \
    \  val b15 = math.abs(b * 0.5)\n        val c15 = math.abs(c * 0.5)\n        val\
    \ a16 = math.abs(a * 0.5)\n        val b16 = math.abs(b * 0.5)\n        val c16\
    \ = math.abs(c * 0.5)", "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n\
    \        val bc = math.abs(c-b)\n        val abc = math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n\
    \        ab == abc && ac == bc && ab != 0", "        val ab = math.sqrt((b*b)\
    \ - (a*a))\n        val ac = math.sqrt((c*c) - (a*a))\n        val bc = math.sqrt((b*b)\
    \ - (c*c))\n        val abc = math.sqrt((abc*abc) - (ab*ab))\n        abc > ab\
    \ && abc > ac && abc > bc", "        val ab = math.abs(b - a)\n        val bc\
    \ = math.abs(c - b)\n        val ac = math.abs(c - a)\n        ab == bc && ab\
    \ == ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n      \
    \  val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2 + c3\n\
    \        val c3 = c2 + a3\n        val a4 = a3 + b3\n        val b4 = b4 + c3\n\
    \        val c4 = c4 + a4\n        (a1 + b1 + c1 == a2 + b2 + c2 && a3 + b3 +\
    \ c3 == a4 + b4 + c4 && a1 + b1 + c1 == a2 + b2 + c2 && a3 + b3 + c3 == a4 + b4\
    \ + c4)", "        val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n\
    \        val bc = math.abs(b - c)\n        ab == ac && ab == bc", "        val\
    \ ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b\
    \ - c)\n        ab > ac && ab > bc", "        val a = math.abs(a)\n        val\
    \ b = math.abs(b)\n        val c = math.abs(c)\n        val a1 = math.pow(a, 2)\n\
    \        val b1 = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n        val\
    \ a2 = math.pow(a, 3)\n        val b2 = math.pow(b, 3)\n        val c2 = math.pow(c,\
    \ 3)\n        val a3 = math.pow(a, 4)\n        val b3 = math.pow(b, 4)\n     \
    \   val c3 = math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n        val b4 =\
    \ math.pow(b, 5)\n        val c4 = math.pow(c, 5)\n        val a5 = math.pow(a,\
    \ 6)\n        val b5 = math.pow(b, 6)\n        val c5 = math.pow(c, 6)\n     \
    \   val a6 = math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n        val c6 =\
    \ math.pow(c, 7)\n        val a7 = math.pow(a, 8)\n        val b7 = math.pow(b,\
    \ 8)\n        val c7 = math.pow(c, 8)\n        val a8 = math.pow(a, 9)\n     \
    \   val b8 = math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n        val a9 =\
    \ math.pow(a, 10)\n        val b9 = math.pow(b, 10)\n        val c9 = math.pow(c,\
    \ 10)\n        val a10 = math.pow(a, 11)\n        val b10 = math.pow(b, 11)\n\
    \        val c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n      \
    \  val b11 = math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n        val a12\
    \ = math.pow(a, 13)\n        val b12 = math.pow(b, 13)\n        val c12 = math.pow(c,\
    \ 13)\n        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b, 14)\n\
    \        val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n      \
    \  val b14 = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n        val a15\
    \ = math.pow(a, 16)\n        val b15 = math.pow(b, 16)\n        val c15 = math.pow(c,\
    \ 16)\n        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b, 17)\n\
    \        val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n      \
    \  val b17 = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n        val a18\
    \ = math.pow(a, 19)\n        val b18 = math.", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab, bc)\n        val bcd = math.pow(bc, cd)\n        val\
    \ abcd = math.pow(abc, bcd) \n        abc / bcd > 1", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd", "        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc\
    \ = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab,\
    \ b)\n        val bcd = math.pow(bc, c)\n        val abcd = math.pow(abc, c)\n\
    \        val abbc = math.pow(ab, b)\n        val bcbc = math.pow(bc, c)\n    \
    \    val cbcd = math.pow(cb, c)\n        val abbcd = math.pow(abbc, d)\n     \
    \   val bcbcd = math.pow(bcbc, d)\n        val cbcd = math.pow(cbc, d)\n     \
    \   val abbcd = math.pow(abbc, d)\n        val bcbcd = math.pow(bcbc, d)\n   \
    \     val cbcd = math.pow(cbc, d)\n        val abbcd = math.pow(abbc, d)\n   \
    \     val bcbcd = math.pow(bcbc, d)\n        val cbcd = math.pow(cbc, d)\n   \
    \     val abbcd = math.pow(abbc, d)\n        val bcbcd = math.pow(bcbc, d)\n \
    \       val cbcd = math.pow(cbc, d)\n        val abbcd = math.pow(abbc, d)\n \
    \       val bcbcd = math.pow(bcbc, d)\n        val cbcd = math.pow(cbc, d)\n \
    \       val abbcd = math.pow(abbc, d)\n        val bcbcd = math.pow(bcbc, d)\n\
    \        val cbcd = math.pow(cbc, d)\n        val abbcd = math.pow(abbc, d)\n\
    \        val bcbcd = math.pow(bcbc, d)\n        val cbcd = math.pow(cbc, d)\n\
    \        val abbcd = math.pow(abbc, d)\n        val bcbcd = math.pow(bcbc, d)\n\
    \        val cbcd = math.pow(cbc, d)\n        val abbcd = math.pow(abbc, d)\n\
    \        val bcbcd = math.pow(bcbc, d)\n        val cbcd = math.pow(cbc, d)\n\
    \        val abbcd = math.pow(abbc, d)\n        val bcbcd = math.pow(bcbc, d)\n\
    \        val cbcd = math.pow(cbc, d)\n        val abbcd = math.pow(abbc, d)\n\
    \        val bcbcd = math.pow(bcbc, d)\n        val cbcd = math.", "        val\
    \ ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c) - (b*b))\n \
    \       val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && bc == ac", "  \
    \      val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        val a1 = math.abs(a)\n     \
    \   val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 +\
    \ b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 == b1 &&\
    \ b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 &&\
    \ b1 == c1 && c1 == a2)", "        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        val a1 = math.pow(a, 2)\n        val b1\
    \ = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n        val a2 = math.pow(a,\
    \ 3)\n        val b2 = math.pow(b, 3)\n        val c2 = math.pow(c, 3)\n     \
    \   val a3 = math.pow(a, 4)\n        val b3 = math.pow(b, 4)\n        val c3 =\
    \ math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n        val b4 = math.pow(b,\
    \ 5)\n        val c4 = math.pow(c, 5)\n        val a5 = math.pow(a, 6)\n     \
    \   val b5 = math.pow(b, 6)\n        val c5 = math.pow(c, 6)\n        val a6 =\
    \ math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n        val c6 = math.pow(c,\
    \ 7)\n        val a7 = math.pow(a, 8)\n        val b7 = math.pow(b, 8)\n     \
    \   val c7 = math.pow(c, 8)\n        val a8 = math.pow(a, 9)\n        val b8 =\
    \ math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n        val a9 = math.pow(a,\
    \ 10)\n        val b9 = math.pow(b, 10)\n        val c9 = math.pow(c, 10)\n  \
    \      val a10 = math.pow(a, 11)\n        val b10 = math.pow(b, 11)\n        val\
    \ c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n        val b11 =\
    \ math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n        val a12 = math.pow(a,\
    \ 13)\n        val b12 = math.pow(b, 13)\n        val c12 = math.pow(c, 13)\n\
    \        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b, 14)\n      \
    \  val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n        val b14\
    \ = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n        val a15 = math.pow(a,\
    \ 16)\n        val b15 = math.pow(b, 16)\n        val c15 = math.pow(c, 16)\n\
    \        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b, 17)\n      \
    \  val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n        val b17\
    \ = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n        val a18 = math.pow(a,\
    \ 19)\n        val b18 = math.", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        abc > ab", "        val ab = math.abs(b - a)\n        val ac\
    \ = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val\
    \ ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b\
    \ - c)\n        val abc = math.abs(ab + ac)\n        abc > bc && abc > ab", " \
    \       val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c) -\
    \ (b*b))\n        val ac = math.sqrt((c*c) - (a*a))\n        ab == bc && ab ==\
    \ ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val\
    \ c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1\
    \ && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2)", "        val\
    \ a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val\
    \ cd = math.pow(c, 2)\n        val abc = math.pow(ab, 2) + math.pow(bc, 2) + math.pow(cd,\
    \ 2)\n        abc > Math.pow(a, 3) * Math.pow(b, 3) * Math.pow(c, 3)", "     \
    \   val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 == b1 && b1 == c1 && c1 == a2) || (a2 == b2 && b2 == c2 && c2 ==\
    \ a2)", "        val ab = math.pow(b, 2)\n        val ac = math.pow(c, 2)\n  \
    \      val bc = math.pow(b, 2)\n        val cb = math.pow(c, 2)\n        val abc\
    \ = math.pow(ab, 2) + math.pow(ac, 2)\n        val bcb = math.pow(bc, 2) + math.pow(cb,\
    \ 2)\n        val abcb = math.pow(abc, 2) + math.pow(bcb, 2)\n        abcb ==\
    \ math.pow(a, 2)", "        val ab = math.pow(b, 2)\n        val ac = math.pow(c,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cb = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab, 2) + math.pow(ac, 2)\n        val bcb = math.pow(bc,\
    \ 2) + math.pow(cb, 2)\n        val abcb = math.pow(abc, 2) + math.pow(bcb, 2)\n\
    \        abc < bcb && abc < abcb && abc > ab", "        val ab = math.abs(b -\
    \ a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n   \
    \     val abc = math.abs(ab + ac)\n        abc < bc // if abc < bc then abc is\
    \ a right-angled triangle", "        val ab = math.abs(a-b)\n        val ac =\
    \ math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc = math.abs(ab+ac+bc)\n\
    \        abc > a && abc > b && abc > c", "        val ab = math.abs(b - a)\n \
    \       val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        abc < ab || (ab == abc && bc < b) || (ab ==\
    \ abc && bc == b)", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc > bcd // if abc > bcd then abc\
    \ is a right angle triangle", "        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc\
    \ = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab,\
    \ 2) + math.pow(bc, 2) + math.pow(cd, 2)\n        abc > math.pow(a, 3) * math.pow(b,\
    \ 3) * math.pow(c, 3)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 + b1 + c1) * (a2 + b2 + c2) < 0",
  "        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val cd\
    \ = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n        abc\
    \ < Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2)", "        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab + bc + cd, 0.5)\n        abc < Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2)", "        val ab = math.pow(b, 2)\n        val ac = math.pow(c,\
    \ 2)\n        val ad = math.pow(a, 2)\n        ab + ac + ad == 0", "        val\
    \ a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val a1 = math.pow(a, 2)\n        val b1 = math.pow(b, 2)\n        val\
    \ c1 = math.pow(c, 2)\n        val a2 = math.pow(a, 3)\n        val b2 = math.pow(b,\
    \ 3)\n        val c2 = math.pow(c, 3)\n        val a3 = math.pow(a, 4)\n     \
    \   val b3 = math.pow(b, 4)\n        val c3 = math.pow(c, 4)\n        val a4 =\
    \ math.pow(a, 5)\n        val b4 = math.pow(b, 5)\n        val c4 = math.pow(c,\
    \ 5)\n        val a5 = math.pow(a, 6)\n        val b5 = math.pow(b, 6)\n     \
    \   val c5 = math.pow(c, 6)\n        val a6 = math.pow(a, 7)\n        val b6 =\
    \ math.pow(b, 7)\n        val c6 = math.pow(c, 7)\n        val a7 = math.pow(a,\
    \ 8)\n        val b7 = math.pow(b, 8)\n        val c7 = math.pow(c, 8)\n     \
    \   val a8 = math.pow(a, 9)\n        val b8 = math.pow(b, 9)\n        val c8 =\
    \ math.pow(c, 9)\n        val a9 = math.pow(a, 10)\n        val b9 = math.pow(b,\
    \ 10)\n        val c9 = math.pow(c, 10)\n        val a10 = math.pow(a, 11)\n \
    \       val b10 = math.pow(b, 11)\n        val c10 = math.pow(c, 11)\n       \
    \ val a11 = math.pow(a, 12)\n        val b11 = math.pow(b, 12)\n        val c11\
    \ = math.pow(c, 12)\n        val a12 = math.pow(a, 13)\n        val b12 = math.pow(b,\
    \ 13)\n        val c12 = math.pow(c, 13)\n        val a13 = math.pow(a, 14)\n\
    \        val b13 = math.pow(b, 14)\n        val c13 = math.pow(c, 14)\n      \
    \  val a14 = math.pow(a, 15)\n        val b14 = math.pow(b, 15)\n        val c14\
    \ = math.pow(c, 15)\n        val a15 = math.pow(a, 16)\n        val b15 = math.pow(b,\
    \ 16)\n        val c15 = math.pow(c, 16)\n        val a16 = math.pow(a, 17)\n\
    \        val b16 = math.pow(b, 17)\n        val c16 = math.pow(c, 17)\n      \
    \  val a17 = math.pow(a, 18)\n        val b17 = math.pow(b, 18)\n        val c17\
    \ = math.pow(c, 18)\n        val a18 = math.pow(a, 19)\n        val b18 = math.",
  "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        abc < ab",
  "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        val a = math.abs(a)\n      \
    \  val b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab + bc + cd, 0.5)\n        abc > b * c && abc > a * c",
  "        val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val a1 = math.abs(a-b)\n        val a2 = math.abs(a-c)\n        val b1\
    \ = math.abs(b-c)\n        val a3 = math.abs(a-c)\n        val b2 = math.abs(b-c)\n\
    \        val c1 = math.abs(c-b)\n        val c2 = math.abs(c-a)\n        val a4\
    \ = math.abs(a-b)\n        val b3 = math.abs(b-a)\n        val c3 = math.abs(c-a)\n\
    \        val a5 = math.abs(a-c)\n        val b4 = math.abs(b-c)\n        val c4\
    \ = math.abs(c-b)\n        val a6 = math.abs(a-b)\n        val b5 = math.abs(b-a)\n\
    \        val c5 = math.abs(c-a)\n        val a7 = math.abs(a-c)\n        val b6\
    \ = math.abs(b-a)\n        val c6 = math.abs(c-b)\n        val a8 = math.abs(a-b)\n\
    \        val b7 = math.abs(b-c)\n        val c7 = math.abs(c-a)\n        val a9\
    \ = math.abs(a-c)\n        val b8 = math.abs(b-c)\n        val c8 = math.abs(c-b)\n\
    \        val a10 = math.abs(a-b)\n        val b10 = math.abs(b-a)\n        val\
    \ c10 = math.abs(c-a)\n        val a11 = math.abs(a-c)\n        val b11 = math.abs(b-a)\n\
    \        val c11 = math.abs(c-b)\n        val a12 = math.abs(a-b)\n        val\
    \ b12 = math.abs(b-c)\n        val c12 = math.abs(c-a)\n        val a13 = math.abs(a-c)\n\
    \        val b13 = math.abs(b-a)\n        val c13 = math.abs(c-b)\n        val\
    \ a14 = math.abs(a-b)\n        val b14 = math.abs(b-c)\n        val c14 = math.abs(c-a)\n\
    \        val a15 = math.abs(a-c)\n        val b15 = math.abs(b-a)\n        val\
    \ c15 = math.abs(c-b)\n        val a16 = math.abs(a-b)\n        val b16 = math.abs(b-c)\n\
    \        val c16 = math.abs(c-a)\n        val a17 = math.abs(a-c)\n        val\
    \ b17 = math.abs(b-a)\n        val c17 = math.abs(c-b)\n        val a18 = math.abs(a-b)\n\
    \        val b18 = math.abs(b-c)\n        val c18 = math.abs(c-a)\n        val\
    \ a19 = ", "        val a = math.abs(a)\n        val b = math.abs(b)\n       \
    \ val c = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc = math.pow(b,\
    \ 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab, b)\n   \
    \     val bcd = math.pow(bc, c)\n        val abcd = math.pow(abc, c)\n       \
    \ val abbc = math.pow(ab, b)\n        val bccd = math.pow(bc, c)\n        val\
    \ bcda = math.pow(bc, a)\n        val cdaa = math.pow(cd, a)\n        val cdaab\
    \ = math.pow(cd, ab)\n        val cdaabc = math.pow(cd, abc)\n        val cdaabcd\
    \ = math.pow(cd, abcd)\n        val cdaabbc = math.pow(cd, abbc)\n        val\
    \ cdaabbcd = math.pow(cd, abbcd)\n        val cdaabbcda = math.pow(cd, abbcda)\n\
    \        val cdaabbcdaa = math.pow(cd, abbcdaa)\n        val cdaabbcdaab = math.pow(cd,\
    \ abbcdaab)\n        val cdaabbcdaabc = math.pow(cd, abbcdaabc)\n        val cdaabbcdaabcd\
    \ = math.pow(cd, abbcdaabcd)\n        val cdaabbcdaabbc = math.pow(cd, abbcdaabbc)\n\
    \        val cdaabbcdaabbcd = math.pow(cd, abbcdaabbcd)\n        val cdaabbcdaabbcc\
    \ = math.pow(cd, abbcdaabbcc)\n        val cdaabbcdaabbccd = math.pow(cd, abbcdaabbccd)\n\
    \        val cdaabbcdaabbccda = math.pow(cd, abbcdaabbccda)\n        val cdaabbcdaabbccdaa\
    \ = math.pow(cd, abbcdaabbccdaa)\n        val cdaabbcdaabbccdaab = math.pow(cd,\
    \ abbcdaabbccdaab)\n        val cdaabbcdaabbccdaabc = math.pow(cd, abbcdaabbccdaabc)\n\
    \        val cdaabbcdaabbccdaabcd = math.pow(cd, abbcdaabbccdaabcd)\n        val\
    \ cdaabbcdaabbccda", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1\
    \ * b1 * c2) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b2 * c1) > 0", "      \
    \  val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val cd =\
    \ math.pow(c, 2)\n        val ac = math.pow(a, 2)\n        val bd = math.pow(b,\
    \ 2)\n        val cb = math.pow(c, 2)\n        val abc = math.pow(ab, 2) + math.pow(bc,\
    \ 2) + math.pow(cd, 2)\n        val bcd = math.pow(bc, 2) + math.pow(cd, 2)\n\
    \        val acd = math.pow(ac, 2) + math.pow(bd, 2) + math.pow(cb, 2)\n     \
    \   val abcd = math.pow(abc, 2) + math.pow(bcd, 2) + math.pow(acd, 2)\n      \
    \  abc / abcd > 1", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val ab = math.sqrt((b*b)\
    \ - (a*a))\n        val bc = math.sqrt((c*c) - (b*b))\n        val ac = math.sqrt((a*a)\
    \ - (c*c))\n        ab == bc && ab == ac", "        val ab = math.pow(a, 2)\n\
    \        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val\
    \ abc = math.pow(ab + bc + cd, 0.5)\n        val acd = math.pow(a + c + d, 0.5)\n\
    \        val bcd = math.pow(b + c + d, 0.5)\n        val abcd = math.pow(abc +\
    \ acd + bcd, 0.5)\n        abc > 0 && acd > 0 && bcd > 0 && abcd > 0", "     \
    \   val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c) - (b*b))\n\
    \        val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && ab == ac", " \
    \       val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val\
    \ bc = math.abs(b - c)\n        ab == ac && ab == bc", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2)", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val\
    \ ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b\
    \ - c)\n        val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n\
    \        abc < bcd", "        val a1 = math.abs(a * b - c * c)\n        val a2\
    \ = math.abs(a * c - b * b)\n        val a3 = math.abs(a * b + c * c)\n      \
    \  (a1 + a2 + a3) == math.pow(a1, 2)", "        val ab = math.abs(b - a)\n   \
    \     val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n        abc <\
    \ bcd", "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n    \
    \    val bc = math.abs(c-b)\n        val abc = math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n\
    \        ab == abc && ac == bc", "        val a = math.abs(a)\n        val b =\
    \ math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a, 2)\n\
    \        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val\
    \ abc = math.pow(ab, bc)\n        val bcd = math.pow(bc, cd)\n        val abcd\
    \ = math.pow(abc, bcd) \n        val abcc = math.pow(abc, c)\n        val bcda\
    \ = math.pow(bc, d)\n        val cdaa = math.pow(c, d)\n        val abdc = math.pow(ab,\
    \ bd)\n        val bdcd = math.pow(bc, dc)\n        val cdab = math.pow(cd, ab)\n\
    \        val abdc = math.pow(ab, bd)\n        val bdcd = math.pow(bc, dc)\n  \
    \      val cdab = math.pow(cd, ab)\n        val abdc = math.pow(ab, bd)\n    \
    \    val bdcd = math.pow(bc, dc)\n        val cdab = math.pow(cd, ab)\n      \
    \  val abdc = math.pow(ab, bd)\n        val bdcd = math.pow(bc, dc)\n        val\
    \ cdab = math.pow(cd, ab)\n        val abdc = math.pow(ab, bd)\n        val bdcd\
    \ = math.pow(bc, dc)\n        val cdab = math.pow(cd, ab)\n        val abdc =\
    \ math.pow(ab, bd)\n        val bdcd = math.pow(bc, dc)\n        val cdab = math.pow(cd,\
    \ ab)\n        val abdc = math.pow(ab, bd)\n        val bdcd = math.pow(bc, dc)\n\
    \        val cdab = math.pow(cd, ab)\n        val abdc = math.pow(ab, bd)\n  \
    \      val bdcd = math.pow(bc, dc)\n        val cdab = math.pow(cd, ab)\n    \
    \    val abdc = math.pow(ab, bd)\n        val bdcd = math.pow(bc, dc)\n      \
    \  val cdab = math.pow(cd, ab)\n        val abdc = math.pow(ab, bd)\n        val\
    \ bdcd = math.pow(bc, dc)\n        val cdab = math.pow(cd, ab)\n        val abdc\
    \ = math.pow(ab, bd)\n        val bdcd = math.pow(bc, dc)\n        val cdab =\
    \ math.pow(cd, ab)\n        val abdc = math.pow(ab, bd)\n        val b", "   \
    \     val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 * b1 * c1) - (a2 * b2 * c2) - (a1\
    \ * b2 * c1) - (a2 * b1 * c2) - (a1 * c2 * b1) - (a2 * c2 * b2) - (a1 * c2 * b2)\
    \ - (a2 * c1 * b1) - (a2 * c2 * b1) - (a1 * b2 * c1) - (a2 * b1 * c1) - (a1 *\
    \ c2 * b2) - (a2 * c2 * b2) - (a1 * c2 * b2) - (a2 * c1 * b1) - (a2 * c2 * b1)\
    \ - (a1 * b2 * c2) - (a2 * b1 * c2) - (a1 * c2 * b2) - (a2 * c2 * b2) - (a1 *\
    \ c2 * b2) - (a2 * c1 * b1) - (a2 * c2 * b1) - (a1 * b2 * c2) - (a2 * b1 * c2)\
    \ - (a1 * c2 * b2) - (a2 * c2 * b2) - (a1 * c2 * b2) - (a2 * c1 * b1) - (a2 *\
    \ c2 * b1) - (a1 * b2 * c2) - (a2 * b1 * c2) - (a1 * c2 * b2) - (a2 * c2 * b2)\
    \ - (a1 * c2 * b2) - (a2 * c1 * b1) - (a2 * c2 * b1) - (a1 * b2 * c2) - (a2 *\
    \ b1 * c2) - (a1 * c2 * b2) - (a2 * c2 * b2) - (a1 * c2 * b2) - (a2 * c1 * b1)\
    \ - (a2 * c2 * b1) - (a1 * b2 * c2) - (a2 * b1 * c2) - (a1 * c2 * b2) - (a2 *\
    \ c2 * b2) - (a1 * c2 * b2) - (a2 * c1 * b1) - (a2 * c2 * b1) - (a1 * b2 * c2)\
    \ - (a2 * b1 * c2) - (a1 * c2 * b2) - (a2 * c2 * b1) - (a1 * c2 * b2) - (a2 *\
    \ c1 * b1) - (a2 * c2 * b1) - (a1 * b2 * c2) - (a2 * b1 * c2) - (a1 * c2 * b2)\
    \ - (a2 * c2 * b1) - (a1 * c2 * b2) - (a2 * c1 * b1) - (a", "        val ab =\
    \ math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c) - (b*b))\n      \
    \  val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && ab == ac", "       \
    \ val ab = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((b * b) -\
    \ (c * c))\n        val ac = math.sqrt((a * a) - (c * c))\n        ab == bc &&\
    \ ab == ac", "        val a1 = math.abs(a * Math.cos(math.pi/180))\n        val\
    \ b1 = math.abs(b * Math.cos(math.pi/180))\n        val c1 = math.abs(c * Math.cos(math.pi/180))\n\
    \        val a2 = math.abs(a * Math.sin(math.pi/180))\n        val b2 = math.abs(b\
    \ * Math.sin(math.pi/180))\n        val c2 = math.abs(c * Math.sin(math.pi/180))\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) <= 0", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a2 == b2 && b2 == c2 && c2 == a2)", "      \
    \  val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val\
    \ cd = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n       \
    \ val abd = math.pow(ab + bc, 0.5)\n        val bcd = math.pow(b + cd, 0.5)\n\
    \        val cda = math.pow(cd + ab, 0.5)\n        val abda = math.pow(ab + cd,\
    \ 0.5)\n        val bcda = math.pow(b + cd, 0.5)\n        val cdba = math.pow(cd\
    \ + ab, 0.5)\n        val abdba = math.pow(ab + cd, 0.5)\n        val bcdba =\
    \ math.pow(b + cd, 0.5)\n        val cdba = math.pow(cd + ab, 0.5)\n        val\
    \ abdba = math.pow(ab + cd, 0.5)\n        val bcdbba = math.pow(b + cd, 0.5)\n\
    \        val cdbaba = math.pow(cd + ab, 0.5)\n        val abdaba = math.pow(ab\
    \ + cd, 0.5)\n        val bcdbaba = math.pow(b + cd, 0.5)\n        val cdbcaba\
    \ = math.pow(cd + ab, 0.5)\n        val abdcaba = math.pow(ab + cd, 0.5)\n   \
    \     val bcdbcaba = math.pow(b + cd, 0.5)\n        val cdbcba = math.pow(cd +\
    \ ab, 0.5)\n        val abdcba = math.pow(ab + cd, 0.5)\n        val bcdbcba =\
    \ math.pow(b + cd, 0.5)\n        val cdbcabba = math.pow(cd + ab, 0.5)\n     \
    \   val abdcabba = math.pow(ab + cd, 0.5)\n        val bcdbcabba = math.pow(b\
    \ + cd, 0.5)\n        val cdbcbb = math.pow(cd + ab, 0.5)\n        val abdcbb\
    \ = math.pow(ab + cd, 0.5)\n        val bcdbcbb = math.pow(b + cd, 0.5)\n    \
    \    val cdbcabbb = math.pow(cd + ab, 0.5)\n        val abdcabbb = math.pow(ab\
    \ + cd, 0.5)\n        val bcdbcabbb = math.pow(b + cd, 0.5)\n        val cdbcbbc\
    \ = math.pow(cd + ab, 0.5)\n        val abdcbbc = math.pow(ab + cd, 0.5)\n   \
    \     val bcdbcbbc = math.pow(b + cd, 0.5)\n", "        val ab = math.pow(b, 2)\n\
    \        val ac = math.pow(c, 2)\n        val ad = math.pow(a, 2)\n        math.abs(ab\
    \ - ac - ad) < 0.0001", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 + b1 + c1) * (a2 + b2 + c2) < 0",
  "        val a1 = math.abs(a * b - c * c)\n        val a2 = math.abs(a * c - b *\
    \ b)\n        val a3 = math.abs(a * b + c * c)\n        val a4 = math.abs(a *\
    \ c + b * b)\n        (a1 + a2 + a3 + a4) == 0 ", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab, 2) + math.pow(bc, 2) + math.pow(cd, 2)\n        abc\
    \ > Math.pow(a, 3) * Math.pow(b, 3) * Math.pow(c, 3)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ math.pow(a1, 2)\n        val b2 = math.pow(b1, 2)\n        val c2 = math.pow(c1,\
    \ 2)\n        val a3 = math.pow(a2, 2)\n        val b3 = math.pow(b2, 2)\n   \
    \     val c3 = math.pow(c2, 2)\n        val a4 = math.pow(a3, 2)\n        val\
    \ b4 = math.pow(b3, 2)\n        val c4 = math.pow(c3, 2)\n        val a5 = math.pow(a4,\
    \ 2)\n        val b5 = math.pow(b4, 2)\n        val c5 = math.pow(c4, 2)\n   \
    \     val a6 = math.pow(a5, 2)\n        val b6 = math.pow(b5, 2)\n        val\
    \ c6 = math.pow(c5, 2)\n        val a7 = math.pow(a6, 2)\n        val b7 = math.pow(b6,\
    \ 2)\n        val c7 = math.pow(c6, 2)\n        val a8 = math.pow(a7, 2)\n   \
    \     val b8 = math.pow(b7, 2)\n        val c8 = math.pow(c7, 2)\n        val\
    \ a9 = math.pow(a8, 2)\n        val b9 = math.pow(b8, 2)\n        val c9 = math.pow(c8,\
    \ 2)\n        val a10 = math.pow(a9, 2)\n        val b10 = math.pow(b9, 2)\n \
    \       val c10 = math.pow(c9, 2)\n        val a11 = math.pow(a10, 2)\n      \
    \  val b11 = math.pow(b10, 2)\n        val c11 = math.pow(c10, 2)\n        val\
    \ a12 = math.pow(a11, 2)\n        val b12 = math.pow(b11, 2)\n        val c12\
    \ = math.pow(c11, 2)\n        val a13 = math.pow(a12, 2)\n        val b13 = math.pow(b12,\
    \ 2)\n        val c13 = math.pow(c12, 2)\n        val a14 = math.pow(a13, 2)\n\
    \        val b14 = math.pow(b13, 2)\n        val c14 = math.pow(c13, 2)\n    \
    \    val a15 = math.pow(a14, 2)\n        val b15 = math.pow(b14, 2)\n        val\
    \ c15 = math.pow(c14, 2)\n        val a16 = math.pow(a15, 2)\n        val b16\
    \ = math.pow(b15, 2)\n        val c16 = math.pow(c15, 2)\n        val a17 = math.pow(a16,\
    \ 2)\n        val b17 = math.pow(b16, 2)\n        val c17", "        val ab =\
    \ math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c,\
    \ 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n        abc < b + c + a",
  "        val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val\
    \ cd = math.pow(c, 2)\n        val abc = math.pow(ab, b)\n        val bcd = math.pow(bc,\
    \ c)\n        val abcd = math.pow(abc, c)\n        val abbc = math.pow(ab, b)\n\
    \        val bccd = math.pow(bc, c)\n        val bcda = math.pow(bc, a)\n    \
    \    val cdaa = math.pow(cd, a)\n        val abcda = math.pow(abc, a)\n      \
    \  val abbca = math.pow(ab, b)\n        val bccda = math.pow(bc, c)\n        val\
    \ bcdaa = math.pow(bc, a)\n        val cdaaa = math.pow(cd, a)\n        val abcdaa\
    \ = math.pow(abc, a)\n        val abbcaa = math.pow(ab, b)\n        val bccdaa\
    \ = math.pow(bc, c)\n        val bcdaaa = math.pow(bc, a)\n        val cdaaaa\
    \ = math.pow(cd, a)\n        val abcdaaa = math.pow(abc, a)\n        val abbcaaa\
    \ = math.pow(ab, b)\n        val bccdaaa = math.pow(bc, c)\n        val bcdaaaa\
    \ = math.pow(bc, a)\n        val cdaaaaa =  math.pow(cd, a)\n        val abcdaaaa\
    \ = math.pow(abc, a)\n        val abbcaaaa = math.pow(ab, b)\n        val bccdaaaa\
    \ = math.pow(bc, c)\n        val bcdaaaaa =  math.pow(bc, a)\n        val cdaaaaa\
    \ = math.pow(cd, a)\n        val abcdaaaaa = math.pow(abc, a)\n        val abbcaaaaa\
    \ = math.pow(ab, b)\n        val bccdaaaaa = math.pow(bc, c)\n        val bcdaaaaaa\
    \ =  math.pow(bc, a)\n        val cdaaaaaa = math.pow(cd, a)\n        val abcdaaaaaa\
    \ = math.pow(abc, a)\n        val abbcaaaaaa = math.pow(ab, b)\n        val bccdaaaaaa\
    \ = math.pow(bc, c)\n        val bcdaaaaaaa =  math.pow(bc, a)\n        val cdaaaaaaa\
    \ = math.pow(cd, a)\n        val abcdaaaaaaa = math.pow(abc, a)\n        val abb",
  "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b2 && b1 == c2 && c1 ==\
    \ a2) || (a2 == b1 && b2 == c1 && c1 == a2) || (a2 == b2 && b2 == c2 && c1 ==\
    \ a2) || (a1 == b1 && b2 == c1 && c2 == a2) || (a1 == b2 && b2 == c2 && c2 ==\
    \ a2) || (a2 == b1 && b2 == c1 && c2 == a2) || (a2 == b2 && b2 == c2 && c2 ==\
    \ a2)", "        val a = math.abs(a)\n        val b = math.abs(b)\n        val\
    \ c = math.abs(c)\n        val a1 = math.pow(a, 2)\n        val b1 = math.pow(b,\
    \ 2)\n        val c1 = math.pow(c, 2)\n        val a2 = math.pow(a, 3)\n     \
    \   val b2 = math.pow(b, 3)\n        val c2 = math.pow(c, 3)\n        val a3 =\
    \ math.pow(a, 4)\n        val b3 = math.pow(b, 4)\n        val c3 = math.pow(c,\
    \ 4)\n        val a4 = math.pow(a, 5)\n        val b4 = math.pow(b, 5)\n     \
    \   val c4 = math.pow(c, 5)\n        val a5 = math.pow(a, 6)\n        val b5 =\
    \ math.pow(b, 6)\n        val c5 = math.pow(c, 6)\n        val a6 = math.pow(a,\
    \ 7)\n        val b6 = math.pow(b, 7)\n        val c6 = math.pow(c, 7)\n     \
    \   val a7 = math.pow(a, 8)\n        val b7 = math.pow(b, 8)\n        val c7 =\
    \ math.pow(c, 8)\n        val a8 = math.pow(a, 9)\n        val b8 = math.pow(b,\
    \ 9)\n        val c8 = math.pow(c, 9)\n        val a9 = math.pow(a, 10)\n    \
    \    val b9 = math.pow(b, 10)\n        val c9 = math.pow(c, 10)\n        val a10\
    \ = math.pow(a, 11)\n        val b10 = math.pow(b, 11)\n        val c10 = math.pow(c,\
    \ 11)\n        val a11 = math.pow(a, 12)\n        val b11 = math.pow(b, 12)\n\
    \        val c11 = math.pow(c, 12)\n        val a12 = math.pow(a, 13)\n      \
    \  val b12 = math.pow(b, 13)\n        val c12 = math.pow(c, 13)\n        val a13\
    \ = math.pow(a, 14)\n        val b13 = math.pow(b, 14)\n        val c13 = math.pow(c,\
    \ 14)\n        val a14 = math.pow(a, 15)\n        val b14 = math.pow(b, 15)\n\
    \        val c14 = math.pow(c, 15)\n        val a15 = math.pow(a, 16)\n      \
    \  val b15 = math.pow(b, 16)\n        val c15 = math.pow(c, 16)\n        val a16\
    \ = math.pow(a, 17)\n        val b16 = math.pow(b, 17)\n        val c16 = math.pow(c,\
    \ 17)\n        val a17 = math.pow(a, 18)\n        val b17 = math.pow(b, 18)\n\
    \        val c17 = math.pow(c, 18)\n        val a18 = math.pow(a, 19)\n      \
    \  val b18 = math.", "        // Write your code here\n        val a1 = a / 2\n\
    \        val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1 + 1\n   \
    \     val b2 = b1 + 1\n        val c2 = c1 + 1\n        val a3 = a2 + 1\n    \
    \    val b3 = b2 + 1\n        val c3 = c2 + 1\n        val a4 = a3 + 1\n     \
    \   val b4 = b3 + 1\n        val c4 = c3 + 1\n        val a5 = a4 + 1\n      \
    \  val b5 = b5 + 1\n        val c5 = c5 + 1\n        val a6 = a6 + 1\n       \
    \ val b6 = b6 + 1\n        val c6 = c6 + 1\n        val a7 = a7 + 1\n        val\
    \ b7 = b7 + 1\n        val c7 = c7 + 1\n        val a8 = a8 + 1\n        val b8\
    \ = b8 + 1\n        val c8 = c8 + 1\n        val a9 = a9 + 1\n        val b9 =\
    \ b9 + 1\n        val c9 = c9 + 1\n        val a10 = a10 + 1\n        val b10\
    \ = b10 + 1\n        val c10 = c10 + 1\n        val a11 = a11 + 1\n        val\
    \ b11 = b11 + 1\n        val c11 = c11 + 1\n        val a12 = a12 + 1\n      \
    \  val b12 = b12 + 1\n        val c12 = c12 + 1\n        val a13 = a13 + 1\n \
    \       val b13 = b13 + 1\n        val c13 = c13 + 1\n        val a14 = a14 +\
    \ 1\n        val b14 = b14 + 1\n        val c14 = c14 + 1\n        val a15 = a15\
    \ + 1\n        val b15 = b15 + 1\n        val c15 = c15 + 1\n        val a16 =\
    \ a16 + 1\n        val b16 = b16 + 1\n        val c16 = c16 + 1\n        val a17\
    \ = a17 + 1\n        val b17 = b17 + 1\n        val c17 = c17 + 1\n        val\
    \ a18 = a18 + 1\n        val b18 = b18 + 1\n        val c18 = c18 + 1\n      \
    \  val a19 = a19 + 1\n        val b19 = b19 + 1\n        val c19 = c19 + 1\n \
    \       val a20 = a20 + 1\n        val b20 = b20 + 1\n        val c20 = c20 +\
    \ 1\n        val a21 = 0\n        val b21 = 0\n        val c21 = 0\n        val\
    \ a22 = a22 + 1\n        val b22 = b22 + 1\n        val c22 = c22 + 1\n      \
    \  ", "        val a = math.abs(a)\n        val b = math.abs(b)\n        val c\
    \ = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc = math.pow(b,\
    \ 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab, b)\n   \
    \     val bcd = math.pow(bc, c)\n        val abcd = math.pow(abc, c)\n       \
    \ val abbc = math.pow(ab, b)\n        val bccd = math.pow(bc, c)\n        val\
    \ abcdb = math.pow(abc, b)\n        val bcdab = math.pow(bc, d)\n        val abcdbc\
    \ = math.pow(abc, b)\n        val bcdac = math.pow(bc, c)\n        val abcdbd\
    \ = math.pow(abc, b)\n        val bcdabc = math.pow(bc, c)\n        val abcdbbc\
    \ = math.pow(abc, b)\n        val bcdabcd = math.pow(bc, c)\n        val abcdbbcd\
    \ = math.pow(abc, b)\n        val bcdabcbc = math.pow(bc, c)\n        val abcdbbccd\
    \ = math.pow(abc, b)\n        val bcdabcbcd = math.pow(bc, c)\n        val abcdbbccd\
    \  = math.pow(abc, b)\n        val bcdabcbcd  = math.pow(bc, c)\n        val abcdbbccd\
    \  = math.pow(abc, b)\n        val bcdabcbcd  = math.pow(bc, c)\n        val abcdbbccd\
    \  = math.pow(abc, b)\n        val bcdabcbcd  = math.pow(bc, c)\n        val abcdbbccd\
    \  = math.pow(abc, b)\n        val bcdabcbcd  = math.pow(bc, c)\n        val abcdbbccd\
    \  = math.pow(abc, b)\n        val bcdabcbcd  = math.pow(bc, c)\n        val abcdbbccd\
    \  = math.pow(abc, b)\n        val bcdabcbcd  = math.pow(bc, c)\n        val abcdbbccd\
    \  = math.pow(abc, b)\n        val bcdabcbcd  = math.pow(bc, c)\n        val abcdbbccd\
    \  = math.pow(abc, b)\n        val bcdabcbcd  = math.pow(bc, c)\n        val abcdbbccd\
    \  = math.pow(abc, b)\n        val bcdabcbcd  = math.pow(bc, c)\n        val abcdbbccd\
    \  = math.pow(abc, b)\n        val ", "        val ab = math.pow(b, 2)\n     \
    \   val ac = math.pow(c, 2)\n        val ad = math.pow(a, 2)\n        val bc =\
    \ math.pow(ab, 2)\n        val cd = math.pow(ac, 2)\n        val da = math.pow(ad,\
    \ 2)\n        ab == bc && ac == cd && ad == da", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ math.abs(a1 - b1)\n        val b2 = math.abs(b1 - c1)\n        val c2 = math.abs(c1\
    \ - a1)\n        val a3 = math.abs(a2 - b2)\n        val b3 = math.abs(b2 - c2)\n\
    \        val c3 = math.abs(c2 - a2)\n        val a4 = math.abs(a3 - b3)\n    \
    \    val b4 = math.abs(b3 - c3)\n        val c4 = math.abs(c3 - a3)\n        (a1\
    \ + b1 + c1 == a2 + b2 + c2 && a1 + b1 + c1 == a3 + b3 + c3 && a2 + b2 + c2 ==\
    \ a3 + b3 + c3 && a2 + b2 + c2 == a4 + b4 + c4 && a3 + b3 + c3 == a4 + b4 + c4\
    \ && a3 + b3 + c3 == a1 + b1 + c1) || (a1 + b1 + c1 == a2 + b2 + c2 && a1 + b1\
    \ + c1 == a3 + b3 + c3 && a2 + b2 + c2 == a3 + b3 + c3 && a2 + b2 + c2 == a4 +\
    \ b4 + c4 && a3 + b3 + c3 == a4 + b4 + c4 && a3 + b3 + c3 == a1 + b1 + c1)", " \
    \       val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc > bcd // if abc > bcd then a is right angle",
  "        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val cd\
    \ = math.pow(c, 2)\n        val abc = ab + bc\n        val bcd = bc + cd\n   \
    \     val abcd = abc + bcd\n        val abcc = abc + cd\n        val bcda = bc\
    \ + da\n        val cda = cd + a\n        val da = a\n        val abda = ab +\
    \ da\n        val bda = bc + da\n        val cda = cd + da\n        val abbc =\
    \ ab + bc\n        val bcc = bc + c\n        val cc = c\n        val abcc = ab\
    \ + cc\n        val bcca = bc + ca\n        val ca = a\n        val abca = ab\
    \ + ca\n        val bca = bc + ca\n        val cba = ca + b\n        val abbca\
    \ = ab + bca\n        val bcbc = bc + cb\n        val cbc = cb + c\n        val\
    \ abcbc = ab + cbc\n        val cbca = bc + ca\n        val cbac = ca + b\n  \
    \      val abcbca = ab + cbca\n        val cbcb = cb + cb\n        val cbab =\
    \ cb + ab\n        val cbcba = cb + cba\n        val cbaa = ca + ba\n        val\
    \ abcbca = ab + cbca\n        val cbcb = cb + cb\n        val cbab = cb + ab\n\
    \        val cbcba = cb + cba\n        val cbaa = ca + ba\n        val abcbca\
    \ = ab + cbca\n        val cbcb = cb + cb\n        val cbab = cb + ab\n      \
    \  val cbcba = cb + cba\n        val cbaa = ca + ba\n        val abcbca = ab +\
    \ cbca\n        val cbcb = cb + cb\n        val cbab = cb + ab\n        val cbcba\
    \ = cb + cba\n        val cbaa = ca + ba\n        val abcbca = ab + cbca\n   \
    \     val cbcb = cb + cb\n        val cbab = cb + ab\n        val cbcba = cb +\
    \ cba\n        val cbaa = ca + ba\n        val abcbca = ab + cbca\n        val\
    \ cbcb = cb + cb\n        val cbab = cb + ab\n        val cbcba = ", "       \
    \ val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val a1 = math.pow(a, 2)\n        val b1 = math.pow(b, 2)\n        val\
    \ c1 = math.pow(c, 2)\n        val a2 = math.pow(a, 3)\n        val b2 = math.pow(b,\
    \ 3)\n        val c2 = math.pow(c, 3)\n        val a3 = math.pow(a, 4)\n     \
    \   val b3 = math.pow(b, 4)\n        val c3 = math.pow(c, 4)\n        val a4 =\
    \ math.pow(a, 5)\n        val b4 = math.pow(b, 5)\n        val c4 = math.pow(c,\
    \ 5)\n        val a5 = math.pow(a, 6)\n        val b5 = math.pow(b, 6)\n     \
    \   val c5 = math.pow(c, 6)\n        val a6 = math.pow(a, 7)\n        val b6 =\
    \ math.pow(b, 7)\n        val c6 = math.pow(c, 7)\n        val a7 = math.pow(a,\
    \ 8)\n        val b7 = math.pow(b, 8)\n        val c7 = math.pow(c, 8)\n     \
    \   val a8 = math.pow(a, 9)\n        val b8 = math.pow(b, 9)\n        val c8 =\
    \ math.pow(c, 9)\n        val a9 = math.pow(a, 10)\n        val b9 = math.pow(b,\
    \ 10)\n        val c9 = math.pow(c, 10)\n        val a10 = math.pow(a, 11)\n \
    \       val b10 = math.pow(b, 11)\n        val c10 = math.pow(c, 11)\n       \
    \ val a11 = math.pow(a, 12)\n        val b11 = math.pow(b, 12)\n        val c11\
    \ = math.pow(c, 12)\n        val a12 = math.pow(a, 13)\n        val b12 = math.pow(b,\
    \ 13)\n        val c12 = math.pow(c, 13)\n        val a13 = math.pow(a, 14)\n\
    \        val b13 = math.pow(b, 14)\n        val c13 = math.pow(c, 14)\n      \
    \  val a14 = math.pow(a, 15)\n        val b14 = math.pow(b, 15)\n        val c14\
    \ = math.pow(c, 15)\n        val a15 = math.pow(a, 16)\n        val b15 = math.pow(b,\
    \ 16)\n        val c15 = math.pow(c, 16)\n        val a16 = math.pow(a, 17)\n\
    \        val b16 = math.pow(b, 17)\n        val c16 = math.pow(c, 17)\n      \
    \  val a17 = math.pow(a, 18)\n        val b17 = math.pow(b, 18)\n        val c17\
    \ = math.pow(c, 18)\n        val a18 = math.pow(a, 19)\n        val b18 = math.",
  "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        abc < ab\
    \ || (ab == abc && bc < b) || (ab == abc && bc == b)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2)", "      \
    \  val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = math.pow(a1, 2)\n        val b2 = math.pow(b1, 2)\n        val\
    \ c2 = math.pow(c1, 2)\n        val a3 = math.pow(a2, 2)\n        val b3 = math.pow(b2,\
    \ 2)\n        val c3 = math.pow(c2, 2)\n        val a4 = math.pow(a3, 2)\n   \
    \     val b4 = math.pow(b3, 2)\n        val c4 = math.pow(c3, 2)\n        val\
    \ a5 = math.pow(a4, 2)\n        val b5 = math.pow(b4, 2)\n        val c5 = math.pow(c4,\
    \ 2)\n        val a6 = math.pow(a5, 2)\n        val b6 = math.pow(b5, 2)\n   \
    \     val c6 = math.pow(c5, 2)\n        val a7 = math.pow(a6, 2)\n        val\
    \ b7 = math.pow(b6, 2)\n        val c7 = math.pow(c6, 2)\n        val a8 = math.pow(a7,\
    \ 2)\n        val b8 = math.pow(b7, 2)\n        val c8 = math.pow(c7, 2)\n   \
    \     val a9 = math.pow(a8, 2)\n        val b9 = math.pow(b8, 2)\n        val\
    \ c9 = math.pow(c8, 2)\n        val a10 = math.pow(a9, 2)\n        val b10 = math.pow(b9,\
    \ 2)\n        val c10 = math.pow(c9, 2)\n        val a11 = math.pow(a10, 2)\n\
    \        val b11 = math.pow(b10, 2)\n        val c11 = math.pow(c10, 2)\n    \
    \    val a12 = math.pow(a11, 2)\n        val b12 = math.pow(b11, 2)\n        val\
    \ c12 = math.pow(c11, 2)\n        val a13 = math.pow(a12, 2)\n        val b13\
    \ = math.pow(b12, 2)\n        val c13 = math.pow(c12, 2)\n        val a14 = math.pow(a13,\
    \ 2)\n        val b14 = math.pow(b13, 2)\n        val c14 = math.pow(c13, 2)\n\
    \        val a15 = math.pow(a14, 2)\n        val b15 = math.pow(b14, 2)\n    \
    \    val c15 = math.pow(c14, 2)\n        val a16 = math.pow(a15, 2)\n        val\
    \ b16 = math.pow(b15, 2)\n        val c16 = math.pow(c15, 2)\n        val a17\
    \ = math.pow(a16, 2)\n        val b17 = math.pow(b16, 2)\n        val c17", " \
    \       val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val a1 = math.pow(a, 2)\n        val b1 = math.pow(b, 2)\n        val\
    \ c1 = math.pow(c, 2)\n        val a2 = math.pow(a, 3)\n        val b2 = math.pow(b,\
    \ 3)\n        val c2 = math.pow(c, 3)\n        val a3 = math.pow(a, 4)\n     \
    \   val b3 = math.pow(b, 4)\n        val c3 = math.pow(c, 4)\n        val a4 =\
    \ math.pow(a, 5)\n        val b4 = math.pow(b, 5)\n        val c4 = math.pow(c,\
    \ 5)\n        val a5 = math.pow(a, 6)\n        val b5 = math.pow(b, 6)\n     \
    \   val c5 = math.pow(c, 6)\n        val a6 = math.pow(a, 7)\n        val b6 =\
    \ math.pow(b, 7)\n        val c6 = math.pow(c, 7)\n        val a7 = math.pow(a,\
    \ 8)\n        val b7 = math.pow(b, 8)\n        val c7 = math.pow(c, 8)\n     \
    \   val a8 = math.pow(a, 9)\n        val b8 = math.pow(b, 9)\n        val c8 =\
    \ math.pow(c, 9)\n        val a9 = math.pow(a, 10)\n        val b9 = math.pow(b,\
    \ 10)\n        val c9 = math.pow(c, 10)\n        val a10 = math.pow(a, 11)\n \
    \       val b10 = math.pow(b, 11)\n        val c10 = math.pow(c, 11)\n       \
    \ val a11 = math.pow(a, 12)\n        val b11 = math.pow(b, 12)\n        val c11\
    \ = math.pow(c, 12)\n        val a12 = math.pow(a, 13)\n        val b12 = math.pow(b,\
    \ 13)\n        val c12 = math.pow(c, 13)\n        val a13 = math.pow(a, 14)\n\
    \        val b13 = math.pow(b, 14)\n        val c13 = math.pow(c, 14)\n      \
    \  val a14 = math.pow(a, 15)\n        val b14 = math.pow(b, 15)\n        val c14\
    \ = math.pow(c, 15)\n        val a15 = math.pow(a, 16)\n        val b15 = math.pow(b,\
    \ 16)\n        val c15 = math.pow(c, 16)\n        val a16 = math.pow(a, 17)\n\
    \        val b16 = math.pow(b, 17)\n        val c16 = math.pow(c, 17)\n      \
    \  val a17 = math.pow(a, 18)\n        val b17 = math.pow(b, 18)\n        val c17\
    \ = math.pow(c, 18)\n        val a18 = math.pow(a, 19)\n        val b18 = math.",
  "        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val cd\
    \ = math.pow(c, 2)\n        ab + bc == cd || ab + bc < cd", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val a1 = math.pow(a,\
    \ 2)\n        val b1 = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n     \
    \   val a2 = math.pow(a, 3)\n        val b2 = math.pow(b, 3)\n        val c2 =\
    \ math.pow(c, 3)\n        val a3 = math.pow(a, 4)\n        val b3 = math.pow(b,\
    \ 4)\n        val c3 = math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n     \
    \   val b4 = math.pow(b, 5)\n        val c4 = math.pow(c, 5)\n        val a5 =\
    \ math.pow(a, 6)\n        val b5 = math.pow(b, 6)\n        val c5 = math.pow(c,\
    \ 6)\n        val a6 = math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n     \
    \   val c6 = math.pow(c, 7)\n        val a7 = math.pow(a, 8)\n        val b7 =\
    \ math.pow(b, 8)\n        val c7 = math.pow(c, 8)\n        val a8 = math.pow(a,\
    \ 9)\n        val b8 = math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n     \
    \   val a9 = math.pow(a, 10)\n        val b9 = math.pow(b, 10)\n        val c9\
    \ = math.pow(c, 10)\n        val a10 = math.pow(a, 11)\n        val b10 = math.pow(b,\
    \ 11)\n        val c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n\
    \        val b11 = math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n      \
    \  val a12 = math.pow(a, 13)\n        val b12 = math.pow(b, 13)\n        val c12\
    \ = math.pow(c, 13)\n        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b,\
    \ 14)\n        val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n\
    \        val b14 = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n      \
    \  val a15 = math.pow(a, 16)\n        val b15 = math.pow(b, 16)\n        val c15\
    \ = math.pow(c, 16)\n        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b,\
    \ 17)\n        val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n\
    \        val b17 = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n      \
    \  val a18 = math.pow(a, 19)\n        val b18 = math.", "        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab + bc + cd, 0.5)\n        abc < b"]
stop_tokens:
- "\n    }\n"

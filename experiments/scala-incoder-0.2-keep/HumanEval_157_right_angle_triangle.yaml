name: HumanEval_157_right_angle_triangle
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given the lengths of the three sides of a triangle. Return True if the three\n\
  \    // sides form a right-angled triangle, False otherwise.\n    // A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n    // 90 degree.\n\
  \    // Example:\n    // right_angle_triangle(3, 4, 5) == True\n    // right_angle_triangle(1,\
  \ 2, 3) == False\n    def rightAngleTriangle(a : Long, b : Long, c : Long) : Boolean\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(rightAngleTriangle((3l),\
  \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
  \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
  \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) ==\
  \ (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
  \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) ==\
  \ (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n   \
  \ assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
  \ (2l), (10l)) == (false));\n    }\n\n}\n"
completions: ["        val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n  \
    \      val bc = math.abs(b-c)\n        ab == ac && ab == bc", "        val a =\
    \ math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n    \
    \    val a1 = math.pow(a, 2)\n        val b1 = math.pow(b, 2)\n        val c1\
    \ = math.pow(c, 2)\n        val a2 = math.pow(a, 3)\n        val b2 = math.pow(b,\
    \ 3)\n        val c2 = math.pow(c, 3)\n        val a3 = math.pow(a, 4)\n     \
    \   val b3 = math.pow(b, 4)\n        val c3 = math.pow(c, 4)\n        val a4 =\
    \ math.pow(a, 5)\n        val b4 = math.pow(b, 5)\n        val c4 = math.pow(c,\
    \ 5)\n        val a5 = math.pow(a, 6)\n        val b5 = math.pow(b, 6)\n     \
    \   val c5 = math.pow(c, 6)\n        val a6 = math.pow(a, 7)\n        val b6 =\
    \ math.pow(b, 7)\n        val c6 = math.pow(c, 7)\n        val a7 = math.pow(a,\
    \ 8)\n        val b7 = math.pow(b, 8)\n        val c7 = math.pow(c, 8)\n     \
    \   val a8 = math.pow(a, 9)\n        val b8 = math.pow(b, 9)\n        val c8 =\
    \ math.pow(c, 9)\n        val a9 = math.pow(a, 10)\n        val b9 = math.pow(b,\
    \ 10)\n        val c9 = math.pow(c, 10)\n        val a10 = math.pow(a, 11)\n \
    \       val b10 = math.pow(b, 11)\n        val c10 = math.pow(c, 11)\n       \
    \ val a11 = math.pow(a, 12)\n        val b11 = math.pow(b, 12)\n        val c11\
    \ = math.pow(c, 12)\n        val a12 = math.pow(a, 13)\n        val b12 = math.pow(b,\
    \ 13)\n        val c12 = math.pow(c, 13)\n        val a13 = math.pow(a, 14)\n\
    \        val b13 = math.pow(b, 14)\n        val c13 = math.pow(c, 14)\n      \
    \  val a14 = math.pow(a, 15)\n        val b14 = math.pow(b, 15)\n        val c14\
    \ = math.pow(c, 15)\n        val a15 = math.pow(a, 16)\n        val b15 = math.pow(b,\
    \ 16)\n        val c15 = math.pow(c, 16)\n        val a16 = math.pow(a, 17)\n\
    \        val b16 = math.pow(b, 17)\n        val c16 = math.pow(c, 17)\n      \
    \  val a17 = math.pow(a, 18)\n        val b17 = math.pow(b, 18)\n        val c17\
    \ = math.pow(c, 18)\n        val a18 = math.pow(a, 19)\n        val b18 = math.",
  "        val a1 = math.abs(a * Math.cos(math.pi/a))\n        val b1 = math.abs(b\
    \ * Math.cos(math.pi/b))\n        val c1 = math.abs(c * Math.cos(math.pi/c))\n\
    \        val a2 = math.abs(a * Math.sin(math.pi/a))\n        val b2 = math.abs(b\
    \ * Math.sin(math.pi/b))\n        val c2 = math.abs(c * Math.sin(math.pi/c))\n\
    \        (a1 + b1 + c1 == a2 + b2 + c2) || (a1 + b1 + c1 == a2 + b2 + c2) || (a1\
    \ + b1 + c1 == a2 + b2 + c2)", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val\
    \ ab = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((b * b) - (c *\
    \ c))\n        val ac = math.sqrt((a * a) - (c * c))\n        ab == bc && ab ==\
    \ ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val\
    \ c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1\
    \ && b1 == c2 && c1 == a2) || (a1 == b2 && b1 == c1 && c1 == a2) || (a1 == b2\
    \ && b1 == c2 && c1 == a2) || (a2 == b1 && b2 == c1 && c1 == a2) || (a2 == b1\
    \ && b2 == c2 && c1 == a2) || (a2 == b2 && b2 == c1 && c1 == a2) || (a2 == b2\
    \ && b2 == c2 && c1 == a2)", "        val ab = math.abs(b - a)\n        val ac\
    \ = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        //\
    \ Write your code here\n        val a1 = a / 2\n        val b1 = b / 2\n     \
    \   val c1 = c / 2\n        val a2 = a1 + a1\n        val b2 = b1 + b1\n     \
    \   val c2 = c1 + c1\n        val a3 = a1 + a2\n        val b3 = b1 + b2\n   \
    \     val c3 = c1 + c2\n        val a4 = a2 + a2\n        val b4 = b2 + b2\n \
    \       val c4 = c2 + c2\n        val a5 = a2 + a3\n        val b5 = b2 + b3\n\
    \        val c5 = c2 + c4\n        val a6 = a3 + a3\n        val b6 = b3 + b3\n\
    \        val c6 = c3 + c4\n        val a7 = a3 + a4\n        val b7 = b3 + b4\n\
    \        val c7 = c3 + c5\n        val a8 = a4 + a4\n        val b8 = b4 + b4\n\
    \        val c8 = c4 + c5\n        val a9 = a4 + a5\n        val b9 = b4 + b5\n\
    \        val c9 = c4 + c6\n        val a10 = a5 + a5\n        val b10 = b5 + b5\n\
    \        val c10 = c5 + c6\n        val a11 = a5 + a6\n        val b11 = b5 +\
    \ b6\n        val c11 = c5 + c7\n        val a12 = a6 + a6\n        val b12 =\
    \ b6 + b6\n        val c12 = c6 + c7\n        val a13 = a6 + a7\n        val b13\
    \ = b6 + b7\n        val c13 = c6 + c8\n        val a14 = a7 + a7\n        val\
    \ b14 = b7 + b7\n        val c14 = c7 + c8\n        val a15 = a7 + a8\n      \
    \  val b15 = b7 + b8\n        val c15 = c7 + c9\n        val a16 = a8 + a8\n \
    \       val b16 = b8 + b8\n        val c16 = c8 + c9\n        val a17 = a8 + a9\n\
    \        val b17 = b8 + b9\n        val c17 = c8 + c10\n        val a18 = a9 +\
    \ a9\n        val b18 = b9 + b9\n        val c18 = c9 + c10\n        val a19 =\
    \ a9 + a10\n        val b19 = b9 + b10\n        val c19 = c9 + c11\n        val\
    \ a20 = a10 + a10\n        val b20 = b10 + b10\n        val c20 = c", "      \
    \  val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 * b1 * c2) - (a2 * b1 * c1) - (a1\
    \ * b2 * c1) - (a2 * b2 * c1) > 0", "        val ab = math.sqrt((b*b) - (a*a))\n\
    \        val bc = math.sqrt((c*c) - (b*b))\n        val ac = math.sqrt((a*a) -\
    \ (c*c))\n        ab == bc && ab == ac", "        val ab = math.pow(a, 2)\n  \
    \      val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val abc\
    \ = math.pow(ab + bc + cd, 0.5)\n        val acb = math.pow(a + b + c, 0.5)\n\
    \        val bcd = math.pow(b + c, 2)\n        val cdab = math.pow(cd + ab, 0.5)\n\
    \        val abbc = math.pow(ab + bc, 2)\n        val bcab = math.pow(b + c, 2)\n\
    \        val cabd = math.pow(c + ab, 2)\n        val abcd = math.pow(a + b + c,\
    \ 2)\n        abc > 0 && abbc > 0 && bcab > 0 && cabd > 0 && abcd > 0", "    \
    \    val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val cd\
    \ = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n        val\
    \ acd = math.pow(a, 2) + math.pow(c, 2) - abc + bc\n        val bcd = math.pow(b,\
    \ 2) + math.pow(c, 2) - abc + bc\n        val cdab = math.pow(c, 2) + math.pow(d,\
    \ 2) - abc + bc\n        val abdc = math.pow(ab + bc + d, 0.5)\n        val acdb\
    \ = math.pow(a, 2) + math.pow(b, 2) - abc + bc\n        val bcdd = math.pow(b,\
    \ 2) + math.pow(c, 2) - abc + bc\n        val cdabc = math.pow(c, 2) + math.pow(d,\
    \ 2) - abc + bc\n        val abdcd = math.pow(ab + bc + d, 0.5)\n        val acdbcd\
    \ = math.pow(a, 2) + math.pow(b, 2) - abc + bc\n        val bcdabc = math.pow(b,\
    \ 2) + math.pow(c, 2) - abc + bc\n        val cdabdc = math.pow(c, 2) + math.pow(d,\
    \ 2) - abc + bc\n        val abdcdb = math.pow(ab + bc + d, 0.5)\n        val\
    \ acdbcdb = math.pow(a, 2) + math.pow(b, 2) - abc + bc\n        val bcdabcd =\
    \ math.pow(b, 2) + math.pow(c, 2) - abc + bc\n        val cdabdcd = math.pow(c,\
    \ 2) + math.pow(d, 2) - abc + bc\n        val abdcdbc = math.pow(ab + bc + d,\
    \ 0.5)\n        val acdbcdbc = math.pow(a, 2) + math.pow(b, 2) - abc + bc\n  \
    \      val bcdabcdb = math.pow(b, 2) + math.pow(c, 2) - abc + bc\n        val\
    \ cdabdcdb = math.pow(c, 2) + math.pow(d, 2) - abc + bc\n        val abdcdbcd\
    \ = math.pow(ab + bc + d, 0.5)\n        val acdbcdbcd = math.pow(a, 2) + math.pow(b,\
    \ 2) - abc + bc\n        val bcdabcdbc = math.pow(b, 2) + math.pow(c, 2) - abc\
    \ + bc\n        val cdabdcdbc = math.pow(c, 2) + math.pow(d, 2) - abc + bc\n \
    \       val abdcdbcdb = math.pow(ab + bc + d, 0.5)\n        val acdbcdbcdb = math.pow(a,\
    \ 2) + math.pow(b, 2) - abc + bc\n        val bcdabcdbc = math.pow(b, 2) + math.pow(c,\
    \ 2) - abc + bc\n        val cdabdcdbcd = math.pow(c, 2) + math.pow(d, 2) - abc\
    \ + bc\n        val ab", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a2)", "        val a1 = a / 2\n        val b1\
    \ = b / 2\n        val c1 = c / 2\n        val a2 = a1 + 1\n        val b2 = b1\
    \ + 1\n        val c2 = c1 + 1\n        val a3 = a2 + 1\n        val b3 = b2 +\
    \ 1\n        val c3 = c3 + 1\n        val a4 = a3 + 1\n        val b4 = b4 + 1\n\
    \        val c4 = c4 + 1\n        val a5 = a4 + 1\n        val b5 = b5 + 1\n \
    \       val c5 = c5 + 1\n        val a6 = a6 + 1\n        val b6 = b6 + 1\n  \
    \      val c6 = c6 + 1\n        val a7 = a7 + 1\n        val b7 = b7 + 1\n   \
    \     val c7 = c7 + 1\n        val a8 = a8 + 1\n        val b8 = b8 + 1\n    \
    \    val c8 = c8 + 1\n        val a9 = a9 + 1\n        val b9 = b9 + 1\n     \
    \   val c9 = c9 + 1\n        val a10 = a10 + 1\n        val b10 = b10 + 1\n  \
    \      val c10 = c10 + 1\n        val a11 = a11 + 1\n        val b11 = b11 + 1\n\
    \        val c11 = c11 + 1\n        val a12 = a12 + 1\n        val b12 = b12 +\
    \ 1\n        val c12 = c12 + 1\n        val a13 = a13 + 1\n        val b13 = b13\
    \ + 1\n        val c13 = c13 + 1\n        val a14 = a14 + 1\n        val b14 =\
    \ b14 + 1\n        val c14 = c14 + 1\n        val a15 = a15 + 1\n        val b15\
    \ = b15 + 1\n        val c15 = c15 + 1\n        val a16 = a16 + 1\n        val\
    \ b16 = b16 + 1\n        val c16 = c16 + 1\n        val a17 = a17 + 1\n      \
    \  val b17 = b17 + 1\n        val c17 = c17 + 1\n        val a18 = a18 + 1\n \
    \       val b18 = b18 + 1\n        val c18 = c18 + 1\n        val a19 = a19 +\
    \ 1\n        val b19 = b19 + 1\n        val c19 = c19 + 1\n        val a20 = a20\
    \ + 1\n        val b20 = b20 + 1\n        val c20 = c20 + 1\n        val a21 =\
    \ a21 + 1\n        val b21 = b21 + 1\n        val c21 = c21 + 1\n        val a22\
    \ = a22 + 1\n        val b22 = b22 + 1\n        val c22 = c22 + 1\n        val\
    \ a", "        val a = math.abs(a)\n        val b = math.abs(b)\n        val c\
    \ = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc = math.pow(b,\
    \ 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab, b)\n   \
    \     val bcd = math.pow(bc, c)\n        val abcd = math.pow(abc, c)\n       \
    \ val abbc = math.pow(ab, b)\n        val bccd = math.pow(bc, c)\n        val\
    \ abcdb = math.pow(abc, b)\n        val bcdab = math.pow(bc, d)\n        val abcda\
    \ = math.pow(abc, a)\n        val bcdcb = math.pow(bc, c)\n        val abcdbc\
    \ = math.pow(abc, b)\n        val cdbab = math.pow(cd, b)\n        val cdbca =\
    \ math.pow(cd, a)\n        val cdbcb = math.pow(cd, c)\n        val cdbcd = math.pow(cd,\
    \ b)\n        val abccd = math.pow(abc, c)\n        val bcdaa = math.pow(bc, a)\n\
    \        val bcdbc = math.pow(bc, c)\n        val bcdbd = math.pow(bc, d)\n  \
    \      val abbcc = math.pow(ab, b)\n        val bcdabc = math.pow(bc, d)\n   \
    \     val bcdaab = math.pow(bc, a)\n        val bcdbcd = math.pow(bc, c)\n   \
    \     val abccdb = math.pow(abc, c)\n        val bcdaac = math.pow(bc, a)\n  \
    \      val bcdbcb = math.pow(bc, c)\n        val abbccd = math.pow(ab, b)\n  \
    \      val bcdaabc = math.pow(bc, a)\n        val bcdbcda = math.pow(bc, c)\n\
    \        val abccdbc = math.pow(abc, c)\n        val bcdaabbc = math.pow(bc, a)\n\
    \        val bcdbcdbc = math.pow(bc, c)\n        val abbcccd = math.pow(ab, b)\n\
    \        val bcdaabbc = math.pow(bc, a)\n        val bcdbcdbd = math.pow(bc, c)\n\
    \        val abccdbcd = math.pow(abc, c)\n        val bcdaabbcc = math.pow(bc,\
    \ a)\n        val bcdbcdbcb = math.pow(bc, c)\n        val abbcccdb = math.pow(ab,\
    \ b)\n        val bcdaabbccd = math.pow(bc, a)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1\
    \ + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 ==\
    \ a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 == a2 && b1\
    \ + c1 + a2 == b2 && c1 + a2 + b2 == c2)", "        val a = math.abs(a)\n    \
    \    val b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab, b)\n        val bcd = math.pow(bc, c)\n        val\
    \ abcd = math.pow(abc, c)\n        val abdc = math.pow(ab, b)\n        val bcda\
    \ = math.pow(bc, a)\n        val abcda = math.pow(abc, a)\n        val abdcd =\
    \ math.pow(ab, b)\n        val bcdaa = math.pow(bc, a)\n        val abcdaa = math.pow(abc,\
    \ a)\n        val abdcda = math.pow(ab, b)\n        val bcdaab = math.pow(bc,\
    \ a)\n        val abcdaab = math.pow(abc, a)\n        val abdcdaa = math.pow(ab,\
    \ b)\n        val bcdaabcd = math.pow(bc, a)\n        val abcdaabcd = math.pow(abc,\
    \ a)\n        val abdcdaab = math.pow(bc, a)\n        val abcdaabdc = math.pow(abc,\
    \ a)\n        val abdcdaabcd = math.pow(ab, b)\n        val bcdaabdcd = math.pow(bc,\
    \ a)\n        val abcdaabdcd = math.pow(abc, a)\n        val abdcdaabdc = math.pow(bc,\
    \ a)\n        val abcdaabdcd = math.pow(ab, b)\n        val bcdaabdcda = math.pow(bc,\
    \ a)\n        val abcdaabdcda = math.pow(abc, a)\n        val abdcdaabdcd = math.pow(bc,\
    \ a)\n        val abcdaabdcda = math.pow(ab, b)\n        val bcdaabdcdaa = math.pow(bc,\
    \ a)\n        val abcdaabdcdaa = math.pow(abc, a)\n        val abdcdaabdcda =\
    \ math.pow(bc, a)\n        val abcdaabdcdaa = math.pow(ab, b)\n        val bcdaabdcdaab\
    \ = math.pow(bc, a)\n        val abcdaabdcdaab = math.pow(abc, a)\n        val\
    \ abdcdaabdcdaa = math.pow(bc, a)\n        val abcdaabdcdaab = math.pow(ab, b)\n\
    \        val bcdaabdcdaabcd = math.pow(bc, a)\n        val abcdaabdcdaabcd = math.pow(abc,\
    \ a)\n        ", "        val a = math.abs(a)\n        val b = math.abs(b)\n \
    \       val c = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc =\
    \ math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab,\
    \ b)\n        val bcd = math.pow(bc, c)\n        val abcd = math.pow(abc, c)\n\
    \        val abbc = math.pow(ab, b)\n        val bccd = math.pow(bc, c)\n    \
    \    val bcda = math.pow(bc, a)\n        val cdaa = math.pow(cd, a)\n        val\
    \ abcda = math.pow(abc, a)\n        val abbca = math.pow(ab, b)\n        val bcdab\
    \ = math.pow(bc, d)\n        val cdaab = math.pow(cd, a)\n        val abcdbc =\
    \ math.pow(abc, b)\n        val bcdac = math.pow(bc, c)\n        val cdaac = math.pow(cd,\
    \ a)\n        val abcdbd = math.pow(abc, b)\n        val bcdad = math.pow(bc,\
    \ d)\n        val cdaad = math.pow(cd, a)\n        val abcdbc = math.pow(abc,\
    \ b)\n        val bcdac = math.pow(bc, c)\n        val cdaac = math.pow(cd, a)\n\
    \        val abcdbd = math.pow(abc, b)\n        val bcdad = math.pow(bc, d)\n\
    \        val cdaad = math.pow(cd, a)\n        val abcdbc = math.pow(abc, b)\n\
    \        val bcdac = math.pow(bc, c)\n        val cdaac = math.pow(cd, a)\n  \
    \      val abcdbd = math.pow(abc, b)\n        val bcdad = math.pow(bc, d)\n  \
    \      val cdaad = math.pow(cd, a)\n        val abcdbc = math.pow(abc, b)\n  \
    \      val bcdac = math.pow(bc, c)\n        val cdaac = math.pow(cd, a)\n    \
    \    val abcdbd = math.pow(abc, b)\n        val bcdad = math.pow(bc, d)\n    \
    \    val cdaad = math.pow(cd, a)\n        val abcdbc = math.pow(abc, b)\n    \
    \    val bcdac = math.pow(bc, c)\n        val cdaac = math.pow(cd, a)\n      \
    \  val abcdbd = math.pow(abc, b)\n        val bcdad = math.pow(bc, d)\n      \
    \  val cdaad", "        val a = math.abs(a)\n        val b = math.abs(b)\n   \
    \     val c = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc = math.pow(b,\
    \ 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab, bc)\n  \
    \      val bcd = math.pow(bc, cd)\n        val abcd = math.pow(abc, bcd) \n  \
    \      abc / bcd > 1", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2\
    \ + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3\
    \ + c3\n        val c4 = c3 + a3\n        (a1 == a2 && b1 == b2 && c1 == c2) ||\
    \ (a1 == a3 && b1 == b3 && c1 == c3) || (a1 == a4 && b1 == b4 && c1 == c4)"]
stop_tokens:
- "\n    }\n"

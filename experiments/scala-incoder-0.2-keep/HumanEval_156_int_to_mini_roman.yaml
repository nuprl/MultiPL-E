name: HumanEval_156_int_to_mini_roman
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  \    // and return it in lowercase.\n    // Restrictions: 1 <= num <= 1000\n   \
  \ // Examples:\n    // >>> int_to_mini_roman(19) == 'xix'\n    // >>> int_to_mini_roman(152)\
  \ == 'clii'\n    // >>> int_to_mini_roman(426) == 'cdxxvi'\n    def intToMiniRoman(number\
  \ : Long) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(intToMiniRoman((19l)).equals((\"\
  xix\")));\n    assert(intToMiniRoman((152l)).equals((\"clii\")));\n    assert(intToMiniRoman((251l)).equals((\"\
  ccli\")));\n    assert(intToMiniRoman((426l)).equals((\"cdxxvi\")));\n    assert(intToMiniRoman((500l)).equals((\"\
  d\")));\n    assert(intToMiniRoman((1l)).equals((\"i\")));\n    assert(intToMiniRoman((4l)).equals((\"\
  iv\")));\n    assert(intToMiniRoman((43l)).equals((\"xliii\")));\n    assert(intToMiniRoman((90l)).equals((\"\
  xc\")));\n    assert(intToMiniRoman((94l)).equals((\"xciv\")));\n    assert(intToMiniRoman((532l)).equals((\"\
  dxxxii\")));\n    assert(intToMiniRoman((900l)).equals((\"cm\")));\n    assert(intToMiniRoman((994l)).equals((\"\
  cmxciv\")));\n    assert(intToMiniRoman((1000l)).equals((\"m\")));\n    }\n\n}\n"
completions: ["        val roman = mutable.ListBuffer.empty[String]\n        val nums\
    \ = scala.math.pow(10, number.toInt)\n        val numsStr = nums.toString.reverse\n\
    \        val numsArr = numsStr.split(\"\\\\.\")\n        val numsArrLength = numsArr.length\n\
    \        val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val num", "        val roman = mutable.ArrayBuffer.empty[String]\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        for (i <- 0 until\
    \ nums) {\n            val remainder = number % nums\n            roman.append(roman.last.charAt(0)\
    \ + remainder.toChar)\n            number /= nums\n        }\n        roman.mkString",
  "        val roman = mutable.ListBuffer.empty[String]\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsString = nums.toString.reverse\n        for (i\
    \ <- 0 until numsString.length) {\n            val digit = numsString(i)\n   \
    \         if (digit == \"0\") {\n                roman += \"\"\n            }\
    \ else {\n                val index = roman.indexOf(digit)\n                if\
    \ (index == -1) {\n                    roman += digit\n                } else\
    \ {\n                    val before = roman.take(index).reverse\n            \
    \        val after = roman.drop(index).reverse\n                    roman += before\
    \ + digit + after\n                }\n            }\n        }\n        roman.mkString.toLowerCase",
  "        val roman = mutable.ArrayBuffer(\n            \"M\", \"CM\", \"D\", \"\
    CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n    \
    \    )\n        val romanNum = mutable.ArrayBuffer(\n            \"M\", \"CM\"\
    , \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"\
    I\"\n        )\n        val romanNum2 = mutable.ArrayBuffer(\n            \"M\"\
    , \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"\
    IV\", \"I\"\n        )\n        val romanNum3 = mutable.ArrayBuffer(\n       \
    \     \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\"\
    , \"V\", \"IV\", \"I\"\n        )\n        val romanNum4 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum5 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum6 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum7 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum8 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum9 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum10 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum11 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum12 = mutable.Array",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums) {\n            val num = scala.math.pow(10,\
    \ i.toInt)\n            val remainder = number - num\n            if (remainder\
    \ >= 1000) {\n                roman.append(scala.math.pow(10, i.toInt).toString)\n\
    \                roman.append(scala.math.pow(10, i.toInt).toString)\n        \
    \    } else {\n                roman.append(scala.math.pow(10, i.toInt).toString)\n\
    \            }\n        }\n        roman.mkString.toLowerCase", "        val roman\
    \ = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10, number.toInt)\n\
    \        val numsString = nums.toString.reverse\n        var i = 0\n        while\
    \ (i < numsString.length) {\n            val num = numsString.charAt(i).toInt\n\
    \            val romanNum = numToRoman(num)\n            roman.append(romanNum)\n\
    \            i += 1\n        }\n        roman.reverse.mkString", "        val\
    \ roman = scala.collection.mutable.ArrayBuffer.empty[String]\n        val nums\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsMap = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap2 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap3 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap4 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap5 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap6 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap7 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap8 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap9 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap10 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap11 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap12 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap13 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap14 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap15 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap16 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap17 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap18 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap19 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap20 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap21 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap22 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap23 = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n        val numsMap24 = scala.", "        val roman = mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsArray =\
    \ nums.toArray\n        val numsArrayLength = numsArray.length\n        val numsArrayIterator\
    \ = numsArray.iterator\n        val numsArrayIteratorNext = numsArrayIterator.next\n\
    \        val numsArrayIteratorNextInt = numsArrayIteratorNext.toInt\n        val\
    \ numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n        val numsArrayIteratorNextInt\
    \ = numsArrayIteratorNextInt.toInt\n        val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n\
    \        val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n     \
    \   val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n        val\
    \ numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n        val numsArrayIteratorNextInt\
    \ = numsArrayIteratorNextInt.toInt\n        val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n\
    \        val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n     \
    \   val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n        val\
    \ numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n        val numsArrayIteratorNextInt\
    \ = numsArrayIteratorNextInt.toInt\n        val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n\
    \        val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n     \
    \   val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n        val\
    \ numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n        val numsArrayIteratorNextInt\
    \ = numsArrayIteratorNextInt.toInt\n        val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n\
    \        val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n     \
    \   val numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n        val\
    \ numsArrayIteratorNextInt = numsArrayIteratorNextInt.toInt\n        val numsArrayIteratorNextInt\
    \ = numsArrayIteratorNextInt.toInt", "        val roman = mutable.ArrayBuffer.empty[String]\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsStr = nums.toString.reverse\n\
    \        val numsArr = numsStr.split(\"\").toArray\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val numsArr_length = numsArr.length\n        val numsArr_length\
    \ = numsArr.length\n        val num", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int, Int]", " \
    \       val roman = scala.collection.mutable.ListBuffer.empty[String]\n      \
    \  val nums = scala.collection.mutable.ListBuffer.empty[Long]\n        val numsMap\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap2 = scala.collection.mutable.Map[String,\
    \ Long]()\n        val numsMap3 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap4 = scala.collection.mutable.Map[String, String]()\n     \
    \   val numsMap5 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap6 = scala.collection.mutable.Map[String, String]()\n        val numsMap7\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap8 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap9 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap10 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap11 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap12 = scala.collection.mutable.Map[String, String]()\n        val numsMap13\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap14 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap15 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap16 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap17 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap18 = scala.collection.mutable.Map[String, String]()\n        val numsMap19\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap20 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap21 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap22 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap23 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap24 = scala.collection.mutable.Map[String, String]()\n        val numsMap25\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap26 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap27 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap", "        val roman = mutable.ListBuffer[String]()\n   \
    \     val nums = scala.math.pow(10, number.toInt)\n        val numsArray = nums.toArray\n\
    \        val numsArrayLength = numsArray.length\n        for (i <- 0 until numsArrayLength)\
    \ {\n            val num = numsArray(i)\n            val romanNum = num.toString.toRoman\n\
    \            roman.append(romanNum)\n        }\n        roman.mkString.toLowerCase",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums) {\n            val remainder\
    \ = number % i\n            if (remainder == 0) {\n                roman += scala.math.pow(10,\
    \ i).toChar\n                number /= i\n            } else {\n             \
    \   roman += scala.math.pow(10, i).toChar\n                number /= i\n     \
    \           roman += scala.math.pow(10, remainder).toChar\n            }\n   \
    \     }\n        roman.mkString.toLowerCase", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsArray =\
    \ nums.toArray\n        val numsArrayLength = numsArray.length\n        var i\
    \ = 0\n        while (i < numsArrayLength) {\n            val numsArrayElement\
    \ = numsArray(i)\n            val numsArrayElementAsInt = numsArrayElement.toInt\n\
    \            val numsArrayElementAsLong = numsArrayElementAsInt * 10\n       \
    \     val numsArrayElementAsLongAsString = numsArrayElementAsLong.toString\n \
    \           val numsArrayElementAsLongAsStringAsLowerCase = numsArrayElementAsLongAsString.toLowerCase\n\
    \            val numsArrayElementAsLongAsStringAsLowerCaseAsRoman = numsArrayElementAsLongAsStringAsLowerCase.charAt(0).toString\
    \ + numsArrayElementAsLongAsStringAsLowerCase.substring(1)\n            roman.append(numsArrayElementAsLongAsStringAsLowerCaseAsRoman)\n\
    \            i += 1\n        }\n        roman.toString", "        val roman =\
    \ scala.collection.mutable.ListBuffer[String]()\n        val nums = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStr = scala.collection.mutable.ListBuffer[String]()\n       \
    \ val numsStr2 = scala.collection.mutable.ListBuffer[String]()\n        val numsStr3\
    \ = scala.collection.mutable.ListBuffer[String]()\n        val numsStr4 = scala.collection.mutable.ListBuffer[String]()\n\
    \        val numsStr5 = scala.collection.mutable.ListBuffer[String]()\n      \
    \  val numsStr6 = scala.collection.mutable.ListBuffer[String]()\n        val numsStr7\
    \ = scala.collection.mutable.ListBuffer[String]()\n        val numsStr8 = scala.collection.mutable.ListBuffer[String]()\n\
    \        val numsStr9 = scala.collection.mutable.ListBuffer[String]()\n      \
    \  val numsStr10 = scala.collection.mutable.ListBuffer[String]()\n        val\
    \ numsStr11 = scala.collection.mutable.ListBuffer[String]()\n        val numsStr12\
    \ = scala.collection.mutable.ListBuffer[String]()\n        val numsStr13 = scala.collection.mutable.ListBuffer[String]()\n\
    \        val numsStr14 = scala.collection.mutable.ListBuffer[String]()\n     \
    \   val numsStr15 = scala.collection.mutable.ListBuffer[String]()\n        val\
    \ numsStr16 = scala.collection.mutable.ListBuffer[String]()\n        val numsStr17\
    \ = scala.collection.mutable.ListBuffer[String]()\n        val numsStr18 = scala.collection.mutable.ListBuffer[String]()\n\
    \        val numsStr19 = scala.collection.mutable.ListBuffer[String]()\n     \
    \   val numsStr20 = scala.collection.mutable.ListBuffer[String]()\n        val\
    \ numsStr21 = scala.collection.mutable.ListBuffer[String]()\n        val numsStr22\
    \ = scala.collection.mutable.ListBuffer[String]()\n        val numsStr23 = scala.collection.mutable.ListBuffer[String]()\n\
    \        val numsStr24 = scala.collection.mutable.ListBuffer[String]()\n     \
    \   val numsStr25 = scala.collection.mutable.ListBuffer[String]()\n        val\
    \ numsStr26 = scala.collection.mutable.ListBuffer[String]", "        val roman\
    \ = mutable.ArrayBuffer.empty[String]\n        val nums = scala.math.pow(10, number.toInt)\n\
    \        val numsStr = nums.toString.reverse\n        val numsArr = numsStr.split(\"\
    \\\\.\")\n        for (i <- 0 until numsArr.length) {\n            val numStr\
    \ = numsArr(i)\n            val numInt = numStr.toInt\n            val numIntStr\
    \ = numInt.toString\n            val numIntStrLen = numIntStr.length\n       \
    \     val numIntStrLen2 = numIntStrLen / 2\n            val numIntStrLen3 = numIntStrLen\
    \ / 3\n            val numIntStrLen4 = numIntStrLen / 4\n            val numIntStrLen5\
    \ = numIntStrLen / 5\n            val numIntStrLen6 = numIntStrLen / 6\n     \
    \       val numIntStrLen7 = numIntStrLen / 7\n            val numIntStrLen8 =\
    \ numIntStrLen / 8\n            val numIntStrLen9 = numIntStrLen / 9\n       \
    \     val numIntStrLen10 = numIntStrLen / 10\n            val numIntStrLen11 =\
    \ numIntStrLen / 11\n            val numIntStrLen12 = numIntStrLen / 12\n    \
    \        val numIntStrLen13 = numIntStrLen / 13\n            val numIntStrLen14\
    \ = numIntStrLen / 14\n            val numIntStrLen15 = numIntStrLen / 15\n  \
    \          val numIntStrLen16 = numIntStrLen / 16\n            val numIntStrLen17\
    \ = numIntStrLen / 17\n            val numIntStrLen18 = numIntStrLen / 18\n  \
    \          val numIntStrLen19 = numIntStrLen / 19\n            val numIntStrLen20\
    \ = numIntStrLen / 20\n            val numIntStrLen21 = numIntStrLen / 21\n  \
    \          val numIntStrLen22 = numIntStrLen / 22\n            val numIntStrLen23\
    \ = numIntStrLen / 23\n            val numIntStrLen24 = numIntStrLen / 24\n  \
    \          val numIntStrLen25 = numIntStrLen / 25\n            val numIntStrLen26\
    \ = numIntStrLen / 26\n            val numIntStrLen27 = numIntStrLen / 27\n  \
    \          val numIntStrLen28 = numIntStrLen / 28\n            val numIntStrLen29\
    \ = numIntStrLen / ", "        val roman = mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsArray =\
    \ nums.toArray\n        val numsArrayLength = numsArray.length\n        val numsArrayReversed\
    \ = numsArray.reverse\n        val numsArrayReversedLength = numsArrayReversed.length\n\
    \        val numsArrayReversedLength = numsArrayReversedLength - 1\n        val\
    \ numsArrayReversedLength = numsArrayReversedLength - 1\n        val numsArrayReversedLength\
    \ = numsArrayReversedLength - 1\n        val numsArrayReversedLength = numsArrayReversedLength\
    \ - 1\n        val numsArrayReversedLength = numsArrayReversedLength - 1\n   \
    \     val numsArrayReversedLength = numsArrayReversedLength - 1\n        val numsArrayReversedLength\
    \ = numsArrayReversedLength - 1\n        val numsArrayReversedLength = numsArrayReversedLength\
    \ - 1\n        val numsArrayReversedLength = numsArrayReversedLength - 1\n   \
    \     val numsArrayReversedLength = numsArrayReversedLength - 1\n        val numsArrayReversedLength\
    \ = numsArrayReversedLength - 1\n        val numsArrayReversedLength = numsArrayReversedLength\
    \ - 1\n        val numsArrayReversedLength = numsArrayReversedLength - 1\n   \
    \     val numsArrayReversedLength = numsArrayReversedLength - 1\n        val numsArrayReversedLength\
    \ = numsArrayReversedLength - 1\n        val numsArrayReversedLength = numsArrayReversedLength\
    \ - 1\n        val numsArrayReversedLength = numsArrayReversedLength - 1\n   \
    \     val numsArrayReversedLength = numsArrayReversedLength - 1\n        val numsArrayReversedLength\
    \ = numsArrayReversedLength - 1\n        val numsArrayReversedLength = numsArrayReversedLength\
    \ - 1\n        val numsArrayReversedLength = numsArrayReversedLength - 1\n   \
    \     val numsArrayReversedLength = numsArrayReversedLength - 1\n        val numsArrayReversedLength\
    \ = numsArrayReversedLength - 1\n        val numsArrayReversedLength = numsArrayReversedLength\
    \ - 1\n        val numsArrayReversedLength = numsArrayReversedLength - 1\n   \
    \     val numsArrayReversedLength = numsArrayReversedLength - 1\n        val numsArrayReversedLength\
    \ = numsArrayReversedLength - 1\n        val num", "        val roman = mutable.ArrayBuffer(\n\
    \            \"\",\n            \"M\",\n            \"CM\",\n            \"D\"\
    ,\n            \"CD\",\n            \"C\",\n            \"XC\",\n            \"\
    L\",\n            \"XL\",\n            \"X\",\n            \"IX\",\n         \
    \   \"V\",\n            \"IV\",\n            \"I\"\n        )\n        val romanNum\
    \ = number / 100\n        val remainder = number % 100\n        romanNum match\
    \ {\n            case 0 => roman(0)\n            case 1 => roman(1)\n        \
    \    case 2 => roman(2)\n            case 3 => roman(3)\n            case 4 =>\
    \ roman(4)\n            case 5 => roman(5)\n            case 6 => roman(6)\n \
    \           case 7 => roman(7)\n            case 8 => roman(8)\n            case\
    \ 9 => roman(9)\n            case 10 => roman(10)\n            case 11 => roman(11)\n\
    \            case 12 => roman(12)\n            case 13 => roman(13)\n        \
    \    case 14 => roman(14)\n            case 15 => roman(15)\n            case\
    \ 16 => roman(16)\n            case 17 => roman(17)\n            case 18 => roman(18)\n\
    \            case 19 => roman(19)\n            case 20 => roman(20)\n        \
    \    case 21 => roman(21)\n            case 22 => roman(22)\n            case\
    \ 23 => roman(23)\n            case 24 => roman(24)\n            case 25 => roman(25)\n\
    \            case 26 => roman(26)\n            case 27 => roman(27)\n        \
    \    case 28 => roman(28)\n            case 29 => roman(29)\n            case\
    \ 30 => roman(30)\n            case 31 => roman(31)\n            case 32 => roman(32)\n\
    \            case 33 => roman(33)\n            case 34 => roman(34)\n        \
    \    case 35 => roman(35)\n            case 36 => roman(36)\n            case\
    \ 37 => roman(37)\n            case 38 => roman(38)\n            case 39 => roman(39)\n\
    \            case 40 => roman(40)\n            case 41 => roman(41)\n        \
    \    case 42 => roman(42)\n            case 43 => roman(43)\n            case\
    \ 44 => roman(44)\n            case 45 => roman(45)\n            case 46 => roman(46)\n\
    \            case 47 => roman(47)\n            case 48 => roman(48)\n        \
    \    case 49 => roman", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int, Int]", " \
    \       val roman = mutable.ArrayBuffer.empty[String]\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums) {\n            val num = scala.math.pow(10,\
    \ i)\n            val remainder = number % num\n            roman.append(if (remainder\
    \ >= 10) \"M\" else \"m\")\n            roman.append(if (remainder >= 100) \"\
    C\" else \"c\")\n            roman.append(if (remainder >= 1000) \"D\" else \"\
    d\")\n            roman.append(if (remainder >= 10000) \"CD\" else \"cd\")\n \
    \           roman.append(if (remainder >= 100000) \"C\" else \"c\")\n        \
    \    roman.append(if (remainder >= 1000000) \"X\" else \"x\")\n            roman.append(if\
    \ (remainder >= 10000000) \"L\" else \"l\")\n            roman.append(if (remainder\
    \ >= 100000000) \"XL\" else \"xl\")\n            roman.append(if (remainder >=\
    \ 1000000000) \"XC\" else \"xc\")\n            roman.append(if (remainder >= 10000000000)\
    \ \"C\" else \"c\")\n            roman.append(if (remainder >= 100000000000) \"\
    D\" else \"d\")\n            roman.append(if (remainder >= 1000000000000) \"CM\"\
    \ else \"cm\")\n            roman.append(if (remainder >= 10000000000000) \"M\"\
    \ else \"m\")\n            roman.append(if (remainder >= 100000000000000) \"MM\"\
    \ else \"mm\")\n            roman.append(if (remainder >= 1000000000000000) \"\
    MMM\" else \"MMM\")\n            roman.append(if (remainder >= 10000000000000000)\
    \ \"MMMM\" else \"MMMM\")\n            roman.append(if (remainder >= 100000000000000000)\
    \ \"MMMMM\" else \"MMMMM\")\n            roman.append(if (remainder >= 1000000000000000000)\
    \ \"MMMMMMM\" else \"MMMMMMM\")\n        }\n        roman.mkString", "       \
    \ val roman = scala.collection.mutable.ListBuffer.empty[String]\n        val nums\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsMap = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap4\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap8\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap13\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap18\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap23\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap26 = scala.collection.mutable.Map[Int, Int]", "        val\
    \ roman = mutable.ListBuffer.empty[String]\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsStr = nums.toString.reverse\n        val numsStrLen\
    \ = numsStr.length\n        var i = 0\n        while (i < numsStrLen) {\n    \
    \        val num = numsStr(i).toLong\n            val romanNum = numToRoman(num)\n\
    \            roman += romanNum\n            i += 1\n        }\n        roman.reverse.mkString",
  "        val roman = mutable.ListBuffer.empty[String]\n        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsMap = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap5 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap9 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap14 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap19 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap24 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        ", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.Map[Int, String]()\n        val numsMap2\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap3 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap4 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap5 = scala.collection.mutable.Map[Int, String]()\n        val\
    \ numsMap6 = scala.collection.mutable.Map[Int, String]()\n        val numsMap7\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap8 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap9 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap10 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap11 = scala.collection.mutable.Map[Int, String]()\n        val numsMap12\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap13 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap14 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap15 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap16 = scala.collection.mutable.Map[Int, String]()\n        val numsMap17\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap18 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap19 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap20 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap21 = scala.collection.mutable.Map[Int, String]()\n        val numsMap22\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap23 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap24 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap25 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap26 = scala.collection.mutable.Map[Int, String]", "        val roman\
    \ = mutable.ListBuffer[String]()\n        var romanNum = number\n        while(romanNum\
    \ > 0) {\n            romanNum = romanNum / 10\n            roman.append(romanNum\
    \ % 10.toString)\n        }\n        roman.reverse\n        roman.mkString(\"\"\
    )", "        val roman = scala.collection.mutable.ListBuffer[String]()\n     \
    \   val nums = scala.collection.mutable.ListBuffer[Long]()\n        val numsMap\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap2 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap3 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap4 = scala.collection.mutable.Map[Long, String]()\n       \
    \ val numsMap5 = scala.collection.mutable.Map[Long, String]()\n        val numsMap6\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap7 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap8 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap9 = scala.collection.mutable.Map[Long, String]()\n       \
    \ val numsMap10 = scala.collection.mutable.Map[Long, String]()\n        val numsMap11\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap12 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap13 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap14 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap15 = scala.collection.mutable.Map[Long, String]()\n        val numsMap16\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap17 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap18 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap19 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap20 = scala.collection.mutable.Map[Long, String]()\n        val numsMap21\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap22 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap23 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap24 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap25 = scala.collection.mutable.Map[Long, String]()\n        val numsMap26\
    \ = scala.collection.mutable.Map[Long, String]", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        var romanNum = number\n        var romanDigit = 0\n        while(romanNum\
    \ > 0) {\n            romanDigit += 1\n            romanNum = romanNum / 10\n\
    \        }\n        while(romanDigit > 0) {\n            roman.append(romanDigits.charAt(romanDigit))\n\
    \            romanDigit -= 1\n        }\n        roman.toString().toLowerCase",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        var i = 0\n        while (i < nums.length) {\n      \
    \      val num = nums(i)\n            val romanNum = num.toRoman\n           \
    \ roman.append(romanNum)\n            i += 1\n        }\n        roman.mkString(\"\
    \")", "        val roman = mutable.ListBuffer.empty[String]\n        val nums\
    \ = scala.math.pow(10, number.toInt)\n        val numsStr = nums.toString.reverse\n\
    \        val numsArr = numsStr.split(\"\\\\.\")\n        val numsArrLen = numsArr.length\n\
    \        val numsArr2 = numsArr.tail\n        val numsArrLen2 = numsArr2.length\n\
    \        val numsArr3 = numsArr2.tail\n        val numsArrLen3 = numsArr3.length\n\
    \        val numsArr4 = numsArr3.tail\n        val numsArrLen4 = numsArr4.length\n\
    \        val numsArr5 = numsArr4.tail\n        val numsArrLen5 = numsArr5.length\n\
    \        val numsArr6 = numsArr5.tail\n        val numsArrLen6 = numsArr6.length\n\
    \        val numsArr7 = numsArr6.tail\n        val numsArrLen7 = numsArr7.length\n\
    \        val numsArr8 = numsArr7.tail\n        val numsArrLen8 = numsArr8.length\n\
    \        val numsArr9 = numsArr8.tail\n        val numsArrLen9 = numsArr9.length\n\
    \        val numsArr10 = numsArr9.reverse\n        val numsArrLen10 = numsArr10.length\n\
    \        val numsArr11 = numsArr10.tail\n        val numsArrLen11 = numsArr11.length\n\
    \        val numsArr12 = numsArr11.tail\n        val numsArrLen12 = numsArr12.length\n\
    \        val numsArr13 = numsArr12.tail\n        val numsArrLen13 = numsArr13.length\n\
    \        val numsArr14 = numsArr13.tail\n        val numsArrLen14 = numsArr14.length\n\
    \        val numsArr15 = numsArr14.tail\n        val numsArrLen15 = numsArr15.length\n\
    \        val numsArr16 = numsArr15.tail\n        val numsArrLen16 = numsArr16.length\n\
    \        val numsArr17 = numsArr16.tail\n        val numsArrLen17 = numsArr17.length\n\
    \        val numsArr18 = numsArr17.tail\n        val numsArrLen18 = numsArr18.length\n\
    \        val numsArr19 = nums", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        for (i <- 0 until\
    \ nums) {\n            val num = scala.math.pow(10, i.toInt)\n            val\
    \ numStr = num.toString.toCharArray\n            val numStrLen = numStr.length\n\
    \            val numStrDigits = numStr.map(_.toInt)\n            val numStrDigitSum\
    \ = numStrDigits.sum\n            val numStrDigitDiff = numStrDigitSum - numStrLen\n\
    \            val numStrDigitDiff2 = numStrDigitDiff / 2\n            val numStrDigitDiff3\
    \ = numStrDigitDiff / 3\n            val numStrDigitDiff4 = numStrDigitDiff /\
    \ 4\n            val numStrDigitDiff5 = numStrDigitDiff / 5\n            val numStrDigitDiff6\
    \ = numStrDigitDiff / 6\n            val numStrDigitDiff7 = numStrDigitDiff /\
    \ 7\n            val numStrDigitDiff8 = numStrDigitDiff / 8\n            val numStrDigitDiff9\
    \ = numStrDigitDiff / 9\n            val numStrDigitDiff10 = numStrDigitDiff /\
    \ 10\n            val numStrDigitDiff11 = numStrDigitDiff / 11\n            val\
    \ numStrDigitDiff12 = numStrDigitDiff / 12\n            val numStrDigitDiff13\
    \ = numStrDigitDiff / 13\n            val numStrDigitDiff14 = numStrDigitDiff\
    \ / 14\n            val numStrDigitDiff15 = numStrDigitDiff / 15\n           \
    \ val numStrDigitDiff16 = numStrDigitDiff / 16\n            val numStrDigitDiff17\
    \ = numStrDigitDiff / 17\n            val numStrDigitDiff18 = numStrDigitDiff\
    \ / 18\n            val numStrDigitDiff19 = numStrDigitDiff / 19\n           \
    \ val numStrDigitDiff20 = numStrDigitDiff / 20\n            val numStrDigitDiff21\
    \ = numStrDigitDiff / 21\n            val numStrDigitDiff22 = numStrDigitDiff\
    \ / 22\n            val numStrDigitDiff23 = numStrDigitDiff / 23\n           \
    \ val numStrDigitDiff24 = numStrDigitDiff / 24\n            val numStrDigitDiff25\
    \ = numStrDigitDiff / 25\n            val numStrDigitDiff26 = numStrDigitDiff\
    \ / 26\n            val numStrDigitDiff27 = num", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int, Int]", " \
    \       val roman = scala.collection.mutable.ListBuffer[String]()\n        val\
    \ nums = scala.collection.mutable.ListBuffer[Long]()\n        val numsMap = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap2 = scala.collection.mutable.Map[String, Long]()\n\
    \        val numsMap3 = scala.collection.mutable.Map[String, String]()\n     \
    \   val numsMap4 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap5 = scala.collection.mutable.Map[String, String]()\n        val numsMap6\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap7 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap8 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap9 = scala.collection.mutable.Map[String, String]()\n     \
    \   val numsMap10 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap11 = scala.collection.mutable.Map[String, String]()\n        val numsMap12\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap13 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap14 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap15 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap16 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap17 = scala.collection.mutable.Map[String, String]()\n        val numsMap18\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap19 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap20 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap21 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap22 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap23 = scala.collection.mutable.Map[String, String]()\n        val numsMap24\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap25 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap26 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap27 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap", "        val roman = mutable.ArrayBuffer(\n            \"\"\
    ,\n            \"M\",\n            \"CM\",\n            \"D\",\n            \"\
    CD\",\n            \"C\",\n            \"XC\",\n            \"L\",\n         \
    \   \"XL\",\n            \"X\",\n            \"IX\",\n            \"V\",\n   \
    \         \"IV\",\n            \"I\"\n        )\n        val nums = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val numsLength = scala.collection.mutable.ArrayBuffer.fill(number)(0)\n\
    \        val nums", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val romanNum = scala.collection.mutable.ListBuffer.empty[Int]\n     \
    \   val numToRoman = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numToRomanNum = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ romanNumToNum = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numToRomanNumToNum = scala.collection.mutable.ListBuffer.empty[Int]\n      \
    \  val romanNumToRomanNum = scala.collection.mutable.ListBuffer.empty[Int]\n \
    \       val numToRomanNumToRomanNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanNumToRomanNumToNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numToRomanNumToRomanNumToNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanNumToRomanNumToRomanNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numToRomanNumToRomanNumToRomanNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanNumToRomanNumToRomanNumToNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numToRomanNumToRomanNumToRomanNumToNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanNumToRomanNumToRomanNumToRomanNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numToRomanNumToRomanNumToRomanNumToRomanNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanNumToRomanNumToRomanNumToRomanNumToNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numToRomanNumToRomanNumToRomanNumToRomanNumToNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanNumToRomanNumToRomanNumToRomanNumToRomanNum = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numToRomanNumToRomanNumToRomanNumToRomanNumToRomanNum = scala.",
  "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n       \
    \ val nums = scala.collection.mutable.ListBuffer.empty[Long]\n        val numsString\
    \ = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStringBuilder\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilderBuilder2\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder3\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder4\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder5\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder6\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder7\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder8\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder9\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder10\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder11\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder12\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder13\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder14\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder15\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder16\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder17\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder18\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder19\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder20\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder21\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder22\
    \ = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n        val numsStringBuilder23\
    \ = scala.collection.", "        val roman = mutable.ListBuffer[String]()\n  \
    \      val nums = scala.math.pow(10, number.toInt)\n        val numsString = nums.toString.reverse\n\
    \        var i = 0\n        while (i < numsString.length) {\n            val numStr\
    \ = numsString.substring(i, i + 1)\n            val num = scala.math.pow(10, numStr.toInt)\n\
    \            val numStr = num.toString.reverse\n            val romanStr = numStr.substring(0,\
    \ 1) + numStr.substring(1)\n            roman += romanStr\n            i += 2\n\
    \        }\n        roman.mkString.toLowerCase", "        val roman = scala.collection.mutable.ArrayBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ numsLen = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums.size) {\n            val num =\
    \ nums(i)\n            val digit = num.toString.toInt\n            val romanDigit\
    \ = if (digit < 5) \"M\" else if (digit < 10) \"D\" else \"C\"\n            roman\
    \ += romanDigit\n        }\n        roman.mkString", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        val nums = scala.collection.mutable.ListBuffer[Long]()\n        val numsMap\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap2 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap3 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap4 = scala.collection.mutable.Map[Long, String]()\n       \
    \ val numsMap5 = scala.collection.mutable.Map[Long, String]()\n        val numsMap6\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap7 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap8 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap9 = scala.collection.mutable.Map[Long, String]()\n       \
    \ val numsMap10 = scala.collection.mutable.Map[Long, String]()\n        val numsMap11\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap12 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap13 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap14 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap15 = scala.collection.mutable.Map[Long, String]()\n        val numsMap16\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap17 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap18 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap19 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap20 = scala.collection.mutable.Map[Long, String]()\n        val numsMap21\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap22 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap23 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap24 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap25 = scala.collection.mutable.Map[Long, String]()\n        val numsMap26\
    \ = scala.collection.mutable.Map[Long, String]", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsString =\
    \ nums.toString.reverse\n        var index = 0\n        while (index < numsString.length)\
    \ {\n            val digit = numsString(index)\n            if (digit == \"0\"\
    ) {\n                roman += \"\"\n            } else {\n                val\
    \ romanDigit = digit.charAt(0).toChar\n                val romanDigitVal = digit.charAt(1).toChar\n\
    \                val romanDigitValInt = romanDigitVal.toInt\n                val\
    \ romanDigitValIntInt = romanDigitValInt.toInt\n                val romanDigitValIntInt\
    \ = romanDigitValIntInt.toInt\n                val romanDigitValIntInt = romanDigitValIntInt.toInt\n\
    \                val romanDigitValIntInt = romanDigitValIntInt.toInt\n       \
    \         val romanDigitValIntInt = romanDigitValIntInt.toInt\n              \
    \  val romanDigitValIntInt = romanDigitValIntInt.toInt\n                val romanDigitValIntInt\
    \ = romanDigitValIntInt.toInt\n                val romanDigitValIntInt = romanDigitValIntInt.toInt\n\
    \                val romanDigitValIntInt = romanDigitValIntInt.toInt\n       \
    \         val romanDigitValIntInt = romanDigitValIntInt.toInt\n              \
    \  val romanDigitValIntInt = romanDigitValIntInt.toInt\n                val romanDigitValIntInt\
    \ = romanDigitValIntInt.toInt\n                val romanDigitValIntInt = romanDigitValIntInt.toInt\n\
    \                val romanDigitValIntInt = romanDigitValIntInt.toInt\n       \
    \         val romanDigitValIntInt = romanDigitValIntInt.toInt\n              \
    \  val romanDigitValIntInt = romanDigitValIntInt.toInt\n                val romanDigitValIntInt\
    \ = romanDigitValIntInt.toInt\n                val romanDigitValIntInt = romanDigitValIntInt.toInt\n\
    \                val romanDigitValIntInt = romanDigitValIntInt.toInt\n       \
    \         val romanDigitValIntInt = romanDigitValIntInt.toInt\n              \
    \  val romanDigitValIntInt = romanDigitValIntInt.toInt", "        val roman =\
    \ mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10, number.toInt)\n\
    \        var i = 0\n        while (i < nums.length) {\n            val num = nums(i)\n\
    \            val romanNum = num / 100\n            val remainder = num % 100\n\
    \            roman.append(romanNum.toString)\n            roman.append(if (remainder\
    \ > 0) \"M\" else \"m\")\n            i += 1\n        }\n        roman.mkString",
  "        val roman = scala.collection.mutable.ListBuffer[String]()\n        var\
    \ i = 0\n        while (number > 0) {\n            val remainder = number % 1000\n\
    \            number /= 1000\n            roman += if (i == 0) \"M\" else if (i\
    \ == 1) \"CM\" else if (i == 2) \"D\" else \"CD\"\n            i += 1\n      \
    \      if (remainder > 0) roman += if (i == 1) \"C\" else if (i == 2) \"X\" else\
    \ \"L\"\n            i += 1\n        }\n        roman.mkString", "        val\
    \ roman = scala.collection.mutable.ListBuffer.empty[String]\n        val nums\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStr = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val numsStrLen = scala.collection.mutable.ListBuffer.empty[Int]\n   \
    \     val numsStrLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n   \
    \     val numsStrLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLenLen", "        val roman\
    \ = mutable.ArrayBuffer.empty[String]\n        val romanNum = mutable.ArrayBuffer.empty[Int]\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val numDigits = number.toString.length\n        val numDigits = number.toString.length\n\
    \        val num", "        val roman = mutable.ListBuffer[String]()\n       \
    \ val nums = scala.math.pow(10, number.toInt)\n        val numsLength = nums.length\n\
    \        val numsRemaining = numsLength\n        val numsDigits = scala.math.pow(10,\
    \ numsLength)\n        val numsDigitsRemaining = numsDigits\n        val numsDigitsDigits\
    \ = scala.math.pow(10, numsLength - 1)\n        val numsDigitsDigitsRemaining\
    \ = numsDigitsDigits\n        val numsDigitsDigitsRemainingDigits = scala.math.pow(10,\
    \ numsLength - 2)\n        val numsDigitsDigitsRemainingDigitsDigits = scala.math.pow(10,\
    \ numsLength - 3)\n        val numsDigitsDigitsRemainingDigitsDigitsDigits = scala.math.pow(10,\
    \ numsLength - 4)\n        val numsDigitsDigitsRemainingDigitsDigitsDigitsDigits\
    \ = scala.math.pow(10, numsLength - 5)\n        val numsDigitsDigitsRemainingDigitsDigitsDigitsDigitsDigits\
    \ = scala.math.pow(10, numsLength - 6)\n        val numsDigitsDigitsRemainingDigitsDigitsDigitsDigitsDigits\
    \ = scala.math.pow(10, numsLength - 7)\n        val numsDigitsDigitsRemainingDigitsDigitsDigitsDigitsDigitsDigits\
    \ = scala.math.pow(10, numsLength - 8)\n        val numsDigitsDigitsRemainingDigitsDigitsDigitsDigitsDigitsDigits\
    \ = scala.math.pow(10, numsLength - 9)\n        val numsDigitsDigitsRemainingDigitsDigitsDigitsDigitsDigitsDigitsDigits\
    \ = scala.math.pow(10, numsLength - 10)\n        val numsDigitsDigitsRemainingDigitsDigitsDigitsDigitsDigitsDigitsDigits\
    \ = scala.math.pow(10, numsLength - 11)\n        val numsDigitsDigitsRemainingDigitsDigitsDigitsDigitsDigitsDigitsDigits\
    \ = scala.math.pow(10, numsLength - 12)\n        val numsDigitsDigitsRemainingDigitsDigitsDigitsDigitsDigitsDigitsDigitsDigits\
    \ = scala.math.pow(10, numsLength - 13)\n        val numsDigitsDigitsRemainingDigitsDigitsDigitsDigitsDigitsDigitsDigitsDigits\
    \ = scala.", "        val roman = mutable.ListBuffer[String]()\n        val romanNum\
    \ = number / 100\n        val romanNumStr = romanNum.toString\n        val romanNumStr\
    \ = romanNumStr.substring(romanNumStr.length - 1)\n        val romanNumStr = romanNumStr.substring(0,\
    \ romanNumStr.length - 1)\n        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n\
    \        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n      \
    \  roman.append(romanNumStr)\n        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n\
    \        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n      \
    \  roman.append(romanNumStr)\n        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n\
    \        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n      \
    \  roman.append(romanNumStr)\n        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n\
    \        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n      \
    \  roman.append(romanNumStr)\n        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n\
    \        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n      \
    \  roman.append(romanNumStr)\n        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n\
    \        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n      \
    \  roman.append(romanNumStr)\n        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n\
    \        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n      \
    \  roman.append(romanNumStr)\n        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n\
    \        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n      \
    \  roman.append(romanNumStr)\n        roman.append(romanNumStr)\n        roman.append(romanNumStr)\n\
    \        roman.append(romanNumStr)\n        roman.append(romanNumStr)", "    \
    \    val roman = scala.collection.mutable.ListBuffer[String]()\n        val nums\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val numsLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLen = scala.collection.mutable.ListBuffer[Int]()\n       \
    \ val numsLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ numsLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums) {\n            val num = scala.math.pow(10,\
    \ i)\n            val numStr = num.toString.toCharArray\n            val numStrLen\
    \ = numStr.length\n            val numStrLenMinusOne = numStrLen - 1\n       \
    \     val numStrMinusOne = numStr.take(numStrLenMinusOne)\n            val numStrMinusOneLen\
    \ = numStrMinusOne.length\n            val numStrMinusOneLenMinusOne = numStrMinusOneLen\
    \ - 1\n            val numStrMinusOneMinusOne = numStrMinusOne.take(numStrLenMinusOneLenMinusOne)\n\
    \            val numStrMinusOneMinusOneLen = numStrMinusOneMinusOne.length\n \
    \           val numStrMinusOneMinusOneLenMinusOne = numStrMinusOneMinusOneLen\
    \ - 1\n            val numStrMinusOneMinusOneMinusOne = numStrMinusOneMinusOne.take(numStrLenMinusOneLenMinusOneLenMinusOne)\n\
    \            val numStrMinusOneMinusOneMinusOneLen = numStrMinusOneMinusOneMinusOneLen\
    \ - 1\n            val numStrMinusOneMinusOneMinusOneLenMinusOne = numStrMinusOneMinusOneMinusOneLenMinusOne\
    \ - 1\n            val numStrMinusOneMinusOneMinusOneMinusOneLen = numStrMinusOneMinusOneMinusOneLenMinusOneLen\
    \ - 1\n            val numStrMinusOneMinusOneMinusOneMinusOneLenMinusOne = numStrMinusOneMinusOneMinusOneMinusOneLenMinusOneLen\
    \ - 1\n            val numStrMinusOneMinusOneMinusOneMinusOneMinusOneLen = numStrMinusOneMinusOneMinusOneMinusOneLenMinusOneLen\n\
    \            val numStrMinusOneMinusOneMinusOneMinusOneMinusOneLenMinusOne = numStrMinusOneMinusOneMinusOneMinusOneLenMinusOneLenMinusOne\n\
    \            val numStrMinusOneMinusOneMinusOneMinusOneMinusOneLenMinusOneLenMinusOne",
  "        val roman = scala.collection.mutable.ArrayBuffer(\n            \"M\", \"\
    CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\"\
    , \"I\"\n        )\n        val romanNum = scala.collection.mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum2 = scala.collection.mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum3 = scala.collection.mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum4 = scala.collection.mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum5 = scala.collection.mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum6 = scala.collection.mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum7 = scala.collection.mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum8 = scala.collection.mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum9 = scala.collection.mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum10 = scala.collection.mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum11 = scala.collection.mutable.ArrayBuffer(\n\
    \            \"M\", \"CM", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsLength =\
    \ nums.length\n        val numsDigits = nums.toString.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val numsDigit\
    \ = numsDigits - 1\n        val numsDigits = nums.length\n        val ", "   \
    \     val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsLength = nums.length\n        val numsRemaining\
    \ = nums.dropRight(1)\n        val numsRemainingLength = numsRemaining.length\n\
    \        val numsRemainingRemaining = numsRemaining.dropRight(1)\n        val\
    \ numsRemainingRemainingLength = numsRemainingRemaining.length\n        val numsRemainingRemainingRemaining\
    \ = numsRemainingRemaining.dropRight(1)\n        val numsRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemaining\
    \ = numsRemainingRemainingRemaining.dropRight(1)\n        val numsRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemainingRemaining\
    \ = numsRemainingRemainingRemainingRemaining.dropRight(1)\n        val numsRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemaining.length\n        val numsRemainingRemainingRemainingRemainingRemainingLength\
    \ = numsRemainingRemainingRemainingRemaining.length\n        ", "        val roman\
    \ = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10, number.toInt)\n\
    \        for (i <- 0 until nums) {\n            val num = scala.math.pow(10, i)\n\
    \            val digit = num / number\n            val remainder = num % number\n\
    \            roman += if (digit > 0) \"M\" else if (digit == 0) \"I\" else \"\"\
    \n            roman += if (remainder > 0) \"C\" else if (remainder == 0) \"L\"\
    \ else \"\"\n        }\n        roman.toList.reverse.mkString", "        val roman\
    \ = mutable.ListBuffer.empty[String]\n        val nums = scala.math.pow(10, number.toInt)\n\
    \        val numsArray = nums.toArray.sortBy(_._1)\n        var i = 0\n      \
    \  while (i < numsArray.length) {\n            val n = numsArray(i)._1\n     \
    \       val m = numsArray(i)._2\n            val romanDigit = if (n < m) n else\
    \ m\n            roman += romanDigit\n            i += 1\n        }\n        roman.mkString.toLowerCase",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsString = nums.toString.reverse\n        val numsArray\
    \ = numsString.toCharArray\n        val numsArrayLength = numsArray.length\n \
    \       val numsArrayIndex = 0\n        val numsArrayIndexMax = numsArrayLength\
    \ - 1\n        val numsArrayIndexMin = 0\n        val numsArrayIndexMaxMin = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMax = numsArrayLength - 1\n        val numsArrayIndexMaxMinMin\
    \ = numsArrayLength - 1\n        val numsArrayIndexMinMaxMin = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMaxMinMax = numsArrayLength - 1\n        val\
    \ numsArrayIndexMinMaxMinMaxMin = numsArrayLength - 1\n        val numsArrayIndexMinMaxMinMaxMinMax\
    \ = numsArrayLength - 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMin = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMax = numsArrayLength -\
    \ 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMaxMin = numsArrayLength -\
    \ 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMaxMinMax = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMaxMinMax = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMaxMinMax = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMaxMinMax = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMaxMinMaxMin = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMaxMinMaxMin = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = numsArrayLength\
    \ - 1\n        val numsArrayIndexMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = numsArrayLength\
    \ - 1", "        val roman = scala.collection.mutable.ListBuffer[String]()\n \
    \       val romanNum = scala.collection.mutable.ListBuffer[Int]()\n        var\
    \ romanNumIndex = 0\n        var romanNumIndex2 = 0\n        var romanNumIndex3\
    \ = 0\n        var romanNumIndex4 = 0\n        var romanNumIndex5 = 0\n      \
    \  var romanNumIndex6 = 0\n        var romanNumIndex7 = 0\n        var romanNumIndex8\
    \ = 0\n        var romanNumIndex9 = 0\n        var romanNumIndex10 = 0\n     \
    \   var romanNumIndex11 = 0\n        var romanNumIndex12 = 0\n        var romanNumIndex13\
    \ = 0\n        var romanNumIndex14 = 0\n        var romanNumIndex15 = 0\n    \
    \    var romanNumIndex16 = 0\n        var romanNumIndex17 = 0\n        var romanNumIndex18\
    \ = 0\n        var romanNumIndex19 = 0\n        var romanNumIndex20 = 0\n    \
    \    var romanNumIndex21 = 0\n        var romanNumIndex22 = 0\n        var romanNumIndex23\
    \ = 0\n        var romanNumIndex24 = 0\n        var romanNumIndex25 = 0\n    \
    \    var romanNumIndex26 = 0\n        var romanNumIndex27 = 0\n        var romanNumIndex28\
    \ = 0\n        var romanNumIndex29 = 0\n        var romanNumIndex30 = 0\n    \
    \    var romanNumIndex31 = 0\n        var romanNumIndex32 = 0\n        var romanNumIndex33\
    \ = 0\n        var romanNumIndex34 = 0\n        var romanNumIndex35 = 0\n    \
    \    var romanNumIndex36 = 0\n        var romanNumIndex37 = 0\n        var romanNumIndex38\
    \ = 0\n        var romanNumIndex39 = 0\n        var romanNumIndex40 = 0\n    \
    \    var romanNumIndex41 = 0\n        var romanNumIndex42 = 0\n        var romanNumIndex43\
    \ = 0\n        var romanNumIndex44 = 0\n        var romanNumIndex45 = 0\n    \
    \    var romanNumIndex46 = 0\n        var romanNumIndex47 = 0\n        var romanNumIndex48\
    \ = 0\n        var romanNumIndex49 = 0\n        var romanNumIndex50 = 0\n    \
    \    var romanNumIndex51 = 0\n        var romanNumIndex52 = 0\n        var romanNumIndex53\
    \ = 0\n        var romanNumIndex54 = 0\n        var romanNumIndex55 = 0\n    \
    \    var romanNumIndex56 = 0\n        var romanNumIndex57 = 0\n        var romanNumIndex58\
    \ = 0\n        var romanNumIndex59 = 0\n        var romanNumIndex60", "      \
    \  val roman = scala.collection.mutable.ListBuffer[String]()\n        var romanNum\
    \ = number\n        var romanNumString = \"\"\n        while (romanNum > 0) {\n\
    \            romanNumString = romanNumString.concat(romanNum % 10)\n         \
    \   romanNum = romanNum / 10\n        }\n        roman.clear()\n        roman.push(romanNumString)\n\
    \        roman.map(x => x.toLowerCase + x).mkString(\"\")", "        val roman\
    \ = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10, number.toInt)\n\
    \        val numsStr = nums.toString.reverse\n        val numsArr = numsStr.split(\"\
    \\\\.\")\n        var i = 0\n        while (i < numsArr.length) {\n          \
    \  val numStr = numsArr(i)\n            val numInt = numStr.toInt\n          \
    \  val numIntStr = numInt.toString\n            val numIntStrLen = numIntStr.length\n\
    \            val numIntStrLenMinusOne = numIntStrLen - 1\n            val numIntStrLenMinusOneMinusOne\
    \ = numIntStrLen - 2\n            val numIntStrLenMinusOneMinusOneMinusOne = numIntStrLen\
    \ - 3\n            val numIntStrLenMinusOneMinusOneMinusOneMinusOne = numIntStrLen\
    \ - 4\n            val numIntStrLenMinusOneMinusOneMinusOneMinusOneMinusOne =\
    \ numIntStrLen - 5\n            val numIntStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numIntStrLen - 6\n            val numIntStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numIntStrLen - 7\n            val numIntStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numIntStrLen - 8\n            val numIntStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numIntStrLen - 9\n            val numIntStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numIntStrLen - 10\n            val numIntStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numIntStrLen - 11\n            val numIntStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numIntStrLen - 12\n            val numIntStrLen", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        for (i <- 0 until\
    \ nums) {\n            val remainder = number % i\n            if (remainder ==\
    \ 0) {\n                roman += scala.math.pow(10, i).toChar\n              \
    \  number /= i\n            } else {\n                roman += scala.math.pow(10,\
    \ i).toChar\n                number /= i\n                roman += scala.math.pow(10,\
    \ remainder).toChar\n            }\n        }\n        roman.toList.reverse.mkString",
  "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n       \
    \ var index = 0\n        while (number > 0) {\n            val remainder = number\
    \ % 1000\n            number /= 1000\n            roman += miniRoman(remainder,\
    \ index)\n        }\n        roman.reverse.mkString", "        val roman = mutable.ArrayBuffer.empty[String]\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsString =\
    \ nums.toString\n        val numsArray = numsString.toCharArray\n        val numsArrayLength\
    \ = numsArray.length\n        val numsArrayLength = numsArray.length\n       \
    \ val numsArrayLength = numsArray.length\n        val numsArrayLength = numsArray.length\n\
    \        val numsArrayLength = numsArray.length\n        val numsArrayLength =\
    \ numsArray.length\n        val numsArrayLength = numsArray.length\n        val\
    \ numsArrayLength = numsArray.length\n        val numsArrayLength = numsArray.length\n\
    \        val numsArrayLength = numsArray.length\n        val numsArrayLength =\
    \ numsArray.length\n        val numsArrayLength = numsArray.length\n        val\
    \ numsArrayLength = numsArray.length\n        val numsArrayLength = numsArray.length\n\
    \        val numsArrayLength = numsArray.length\n        val numsArrayLength =\
    \ numsArray.length\n        val numsArrayLength = numsArray.length\n        val\
    \ numsArrayLength = numsArray.length\n        val numsArrayLength = numsArray.length\n\
    \        val numsArrayLength = numsArray.length\n        val numsArrayLength =\
    \ numsArray.length\n        val numsArrayLength = numsArray.length\n        val\
    \ numsArrayLength = numsArray.length\n        val numsArrayLength = numsArray.length\n\
    \        val numsArrayLength = numsArray.length\n        val numsArrayLength =\
    \ numsArray.length\n        val numsArrayLength = numsArray.length\n        val\
    \ numsArrayLength = numsArray.length\n        val numsArrayLength = numsArray.length\n\
    \        val numsArrayLength = numsArray.length\n        val numsArrayLength =\
    \ numsArray.length\n        val numsArrayLength = numsArray.length\n        val\
    \ numsArrayLength = numsArray.length\n        val numsArrayLength = numsArray.length\n\
    \        val numsArrayLength = numsArray.length\n        val numsArrayLength =\
    \ numsArray.length\n        val numsArrayLength = numsArray.length\n        val\
    \ numsArrayLength = numsArray.length\n        val numsArrayLength = numsArray.length\n\
    \        val numsArrayLength = numsArray.length\n        val numsArrayLength =\
    \ numsArray.length\n        val numsArrayLength = numsArray.length\n", "     \
    \   val roman = scala.collection.mutable.ListBuffer.empty[String]\n        val\
    \ nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsMap =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap2 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap3 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap4 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap5 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap6 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap7 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap8 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap9 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap10 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap11 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap12 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap13 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap14 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap15 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap16 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap17 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap18 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap19 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap20 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap21 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap22 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap23 =\
    \ scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap24 =\
    \ scala.", "        val roman = mutable.ListBuffer[String]()\n        val nums\
    \ = scala.math.pow(10, number.toInt)\n        val numsLen = nums.length\n    \
    \    val numsLenMinusOne = numsLen - 1\n        val numsLenMinusOneMinusOne =\
    \ numsLenMinusOne - 1\n        val numsLenMinusOneMinusOneMinusOne = numsLenMinusOneMinusOne\
    \ - 1\n        val numsLenMinusOneMinusOneMinusOneMinusOne = numsLenMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOne = numsLenMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne = numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne -\
    \ 1\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne",
  "        val roman = mutable.ListBuffer[String]()\n        var i = 0\n        while\
    \ (number > 0) {\n            roman.append(roman.take(i).mkString)\n         \
    \   roman.append(roman.take(i).mkString)\n            number -= Math.pow(10, i)\n\
    \            i += 1\n        }\n        roman.mkString", "        val roman =\
    \ scala.collection.mutable.ListBuffer.empty[String]\n        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsMap = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap5 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap9 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap14 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap19 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap24 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int,\
    \ Int]", "        val roman = scala.collection.mutable.ArrayBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ numsCount = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsCount2\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsCount3 =\
    \ scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsCount4 = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val numsCount5 = scala.collection.mutable.ArrayBuffer.empty[Int]\n  \
    \      val numsCount6 = scala.collection.mutable.ArrayBuffer.empty[Int]\n    \
    \    val numsCount7 = scala.collection.mutable.ArrayBuffer.empty[Int]\n      \
    \  val numsCount8 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ numsCount9 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsCount10\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsCount11 =\
    \ scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsCount12 = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val numsCount13 = scala.collection.mutable.ArrayBuffer.empty[Int]\n \
    \       val numsCount14 = scala.collection.mutable.ArrayBuffer.empty[Int]\n  \
    \      val numsCount15 = scala.collection.mutable.ArrayBuffer.empty[Int]\n   \
    \     val numsCount16 = scala.collection.mutable.ArrayBuffer.empty[Int]\n    \
    \    val numsCount17 = scala.collection.mutable.ArrayBuffer.empty[Int]\n     \
    \   val numsCount18 = scala.collection.mutable.ArrayBuffer.empty[Int]\n      \
    \  val numsCount19 = scala.collection.mutable.ArrayBuffer.empty[Int]\n       \
    \ val numsCount20 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ numsCount21 = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsCount22\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsCount23 =\
    \ scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsCount24 = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val numsCount25 = scala.collection.mutable.ArrayBuffer.empty[Int]\n \
    \       val numsCount26 = scala.collection.mutable.ArrayBuffer.empty[Int", " \
    \       val roman = scala.collection.mutable.ListBuffer[String]()\n        var\
    \ romanNum = number\n        while (romanNum > 0) {\n            val remainder\
    \ = romanNum % 100\n            romanNum /= 100\n            roman.append(remainder)\n\
    \        }\n        roman.mkString.toLowerCase", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsStr = nums.toString.reverse\n\
    \        val numsArr = numsStr.split(\"\\\\.\")\n        val numsArrLen = numsArr.length\n\
    \        val numsArr2 = numsArr.tail\n        val numsArrLen2 = numsArr2.length\n\
    \        val numsArr3 = numsArr2.tail\n        val numsArrLen3 = numsArr3.length\n\
    \        val numsArr4 = numsArr3.tail\n        val numsArrLen4 = numsArr4.length\n\
    \        val numsArr5 = numsArr4.tail\n        val numsArrLen5 = numsArr5.length\n\
    \        val numsArr6 = numsArr5.tail\n        val numsArrLen6 = numsArr6.length\n\
    \        val numsArr7 = numsArr6.tail\n        val numsArrLen7 = numsArr7.length\n\
    \        val numsArr8 = numsArr7.tail\n        val numsArrLen8 = numsArr8.length\n\
    \        val numsArr9 = numsArr8.tail\n        val numsArrLen9 = numsArr9.length\n\
    \        val numsArr10 = numsArr9.reverse\n        val numsArrLen10 = numsArr10.length\n\
    \        val numsArr11 = numsArr10.reverse\n        val numsArrLen11 = numsArr11.length\n\
    \        val numsArr12 = numsArr11.reverse\n        val numsArrLen12 = numsArr12.length\n\
    \        val numsArr13 = numsArr12.reverse\n        val numsArrLen13 = numsArr13.length\n\
    \        val numsArr14 = numsArr13.reverse\n        val numsArrLen14 = numsArr14.length\n\
    \        val numsArr15 = numsArr14.reverse\n        val numsArrLen15 = numsArr15.length\n\
    \        val numsArr16 = numsArr15.reverse\n        val numsArrLen16 = numsArr16.length\n\
    \        val numsArr17 = numsArr16.reverse\n        val numsArrLen17 = numsArr17.length\n\
    \        val numsArr18 = numsArr17.reverse\n        val numsArrLen18 = numsArr18.length\n\
    \        val numsArr19 = nums", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsReverse\
    \ = scala.math.pow(10, number.toInt.reverse)\n        val numsHalf = scala.math.pow(10,\
    \ number.toInt.toDouble / 2)\n        val numsHalfReverse = scala.math.pow(10,\
    \ number.toInt.toDouble / 2.reverse)\n        val numsHalfHalf = scala.math.pow(10,\
    \ number.toInt.toDouble / 3.0)\n        val numsHalfHalfReverse = scala.math.pow(10,\
    \ number.toInt.toDouble / 3.0.reverse)\n        val numsHalfHalfHalf = scala.math.pow(10,\
    \ number.toInt.toDouble / 4.0)\n        val numsHalfHalfHalfReverse = scala.math.pow(10,\
    \ number.toInt.toDouble / 4.0.reverse)\n        val numsHalfHalfHalfHalf = scala.math.pow(10,\
    \ number.toInt.toDouble / 5.0)\n        val numsHalfHalfHalfHalfReverse = scala.math.pow(10,\
    \ number.toInt.toDouble / 5.0.reverse)\n        val numsHalfHalfHalfHalfHalf =\
    \ scala.math.pow(10, number.toInt.toDouble / 6.0)\n        val numsHalfHalfHalfHalfReverse\
    \ = scala.math.pow(10, number.toInt.toDouble / 6.0.reverse)\n        val numsHalfHalfHalfHalfHalf\
    \ = scala.math.pow(10, number.toInt.toDouble / 7.0)\n        val numsHalfHalfHalfHalfHalfReverse\
    \ = scala.math.pow(10, number.toInt.toDouble / 7.0.reverse)\n        val numsHalfHalfHalfHalfHalfHalf\
    \ = scala.math.pow(10, number.toInt.toDouble / 8.0)\n        val numsHalfHalfHalfHalfHalfReverse\
    \ = scala.math.pow(10, number.toInt.toDouble / 8.0.reverse)\n        val numsHalfHalfHalfHalfHalfHalf\
    \ = scala.math.pow(10, number.toInt.toDouble / 9.0)\n        val numsHalfHalfHalfHalfHalfReverse\
    \ = scala.math.pow(10, number.toInt.toDouble / 9.0.reverse)\n        val numsHalfHalfHalfHalfHalfHalf\
    \ = scala.math.pow(10, number.toInt.toDouble / 10.0)\n        val numsHalfHalfHalfHalfHalfReverse\
    \ = scala.math.pow(10, number.toInt.", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        val nums = scala.collection.mutable.ListBuffer[Long]()\n        val numsMap\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap2 = scala.collection.mutable.Map[String,\
    \ Long]()\n        val numsMap3 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap4 = scala.collection.mutable.Map[String, String]()\n     \
    \   val numsMap5 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap6 = scala.collection.mutable.Map[String, String]()\n        val numsMap7\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap8 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap9 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap10 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap11 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap12 = scala.collection.mutable.Map[String, String]()\n        val numsMap13\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap14 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap15 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap16 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap17 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap18 = scala.collection.mutable.Map[String, String]()\n        val numsMap19\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap20 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap21 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap22 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap23 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap24 = scala.collection.mutable.Map[String, String]()\n        val numsMap25\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap26 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap27 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap", "        val roman = mutable.ArrayBuffer(\n           \
    \ \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"\
    X\", \"XI\", \"XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\"\
    , \"XIX\", \"XX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\",\
    \ \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\", \"XXXII\", \"XXXIII\", \"\
    XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\", \"XL\", \"L\"\
    , \"LI\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\", \"\
    LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\"\
    , \"LXVIII\", \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"\
    LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\", \"\
    LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\", \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\"\
    , \"LXXXIX\", \"XC\", \"C\", \"CI\", \"CII\", \"CIV\", \"CV\", \"CVI\", \"CVII\"\
    , \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\", \"CXIII\", \"CXIV\", \"CXV\"\
    , \"CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\", \"CXX\", \"CXXI\", \"CXXII\", \"\
    CXXIII\", \"CXXIV\", \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\", \"CXXIX\",\
    \ \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\", \"CXXXV\", \"CXXXVI\"\
    , \"CXXXVII\", \"CXXXVIII\", \"CXXXIX\", \"CXL\", \"CL\", \"LI\", \"LII\", \"\
    LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\", \"LIX\", \"LX\", \"LXI\"\
    , \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"", "        val\
    \ roman = mutable.ArrayBuffer.empty[String]\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums) {\n            val remainder\
    \ = number % nums\n            roman.append(roman.take(remainder).mkString)\n\
    \            number /= nums\n        }\n        roman.mkString.toLowerCase", " \
    \       val roman = scala.collection.mutable.ArrayBuffer.empty[String]\n     \
    \   val nums = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsMap\
    \ = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap2 = scala.collection.mutable.HashMap.empty[Int,\
    \ Int]\n        val numsMap3 = scala.collection.mutable.HashMap.empty[Int, Int]\n\
    \        val numsMap4 = scala.collection.mutable.HashMap.empty[Int, Int]\n   \
    \     val numsMap5 = scala.collection.mutable.HashMap.empty[Int, Int]\n      \
    \  val numsMap6 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val\
    \ numsMap7 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap8\
    \ = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap9 = scala.collection.mutable.HashMap.empty[Int,\
    \ Int]\n        val numsMap10 = scala.collection.mutable.HashMap.empty[Int, Int]\n\
    \        val numsMap11 = scala.collection.mutable.HashMap.empty[Int, Int]\n  \
    \      val numsMap12 = scala.collection.mutable.HashMap.empty[Int, Int]\n    \
    \    val numsMap13 = scala.collection.mutable.HashMap.empty[Int, Int]\n      \
    \  val numsMap14 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val\
    \ numsMap15 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap16\
    \ = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap17 =\
    \ scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap18 = scala.collection.mutable.HashMap.empty[Int,\
    \ Int]\n        val numsMap19 = scala.collection.mutable.HashMap.empty[Int, Int]\n\
    \        val numsMap20 = scala.collection.mutable.HashMap.empty[Int, Int]\n  \
    \      val numsMap21 = scala.collection.mutable.HashMap.empty[Int, Int]\n    \
    \    val numsMap22 = scala.collection.mutable.HashMap.empty[Int, Int]\n      \
    \  val numsMap23 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val\
    \ numsMap24 = scala.", "        val roman = mutable.ListBuffer[String]()\n   \
    \     val nums = scala.math.pow(10, number.toInt)\n        for (i <- 0 until nums)\
    \ {\n            val num = scala.math.pow(10, i.toInt)\n            val numStr\
    \ = num.toString.toCharArray\n            val numStrLen = numStr.length\n    \
    \        val numStrLenMinusOne = numStrLen - 1\n            val numStrLenMinusOneMinusOne\
    \ = numStrLen - 2\n            val numStrLenMinusOneMinusOneMinusOne = numStrLen\
    \ - 3\n            val numStrLenMinusOneMinusOneMinusOneMinusOne = numStrLen -\
    \ 4\n            val numStrLenMinusOneMinusOneMinusOneMinusOneMinusOne = numStrLen\
    \ - 5\n            val numStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numStrLen - 6\n            val numStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numStrLen - 7\n            val numStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numStrLen - 8\n            val numStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numStrLen - 9\n            val numStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numStrLen - 10\n            val numStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numStrLen - 11\n            val numStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numStrLen - 12\n            val numStrLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numStrLen - 13\n            val numStrLenMinusOneMinusOneMinusOne", "    \
    \    val roman = scala.collection.mutable.ListBuffer[String]()\n        val nums\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsMap = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap4\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap8\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap13\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap18\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap23\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap26 = scala.collection.mutable.Map[Int, Int]", "        val\
    \ roman = scala.collection.mutable.ListBuffer[String]()\n        val nums = scala.collection.mutable.ListBuffer[Int]()\n\
    \        var num = 0\n        while (number > 0) {\n            num += 1\n   \
    \         number -= num\n            nums += num\n        }\n        var i = 0\n\
    \        while (i < nums.length) {\n            roman += nums(i).toChar\n    \
    \        i += 1\n        }\n        roman.toString.toLowerCase", "        val\
    \ roman = scala.collection.mutable.ListBuffer.empty[String]\n        val nums\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsMap = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap4\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap8\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap13\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap18\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap23\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap26 = scala.collection.mutable.Map[Int, Int]", "        val\
    \ roman = scala.collection.mutable.ListBuffer[String]()\n        val nums = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsMap = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap5 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap9 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap14 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap19 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap24 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int,\
    \ Int]", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Long]\n        val\
    \ numsMap = scala.collection.mutable.Map[Long, String]()\n        val numsMap2\
    \ = scala.collection.mutable.Map[String, Long]()\n        val numsMap3 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap4 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap5 = scala.collection.mutable.Map[String, String]()\n     \
    \   val numsMap6 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap7 = scala.collection.mutable.Map[String, String]()\n        val numsMap8\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap9 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap10 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap11 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap12 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap13 = scala.collection.mutable.Map[String, String]()\n        val numsMap14\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap15 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap16 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap17 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap18 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap19 = scala.collection.mutable.Map[String, String]()\n        val numsMap20\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap21 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap22 = scala.collection.mutable.Map[String, String]()\n\
    \        val numsMap23 = scala.collection.mutable.Map[String, String]()\n    \
    \    val numsMap24 = scala.collection.mutable.Map[String, String]()\n        val\
    \ numsMap25 = scala.collection.mutable.Map[String, String]()\n        val numsMap26\
    \ = scala.collection.mutable.Map[String, String]()\n        val numsMap27 = scala.collection.mutable.Map[String,\
    \ String]()\n        val numsMap", "        val roman = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum2 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum3 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum4 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum5 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum6 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum7 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum8 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum9 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum10 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum11 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum12 = mutable.Array",
  "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n       \
    \ val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsMap\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int, Int]", " \
    \       val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsLen = nums.length\n        for (i<- 0 until numsLen)\
    \ {\n            val num = nums(i)\n            val numStr = num.toString\n  \
    \          val numStrLen = numStr.length\n            val numStrDigits = numStr.dropRight(numStrLen\
    \ - 1)\n            val numStrDigitLen = numStrDigits.length\n            val\
    \ numStrDigitDigits = numStrDigits.dropRight(numStrDigitLen - 1)\n           \
    \ val numStrDigitDigitLen = numStrDigitDigits.length\n            val numStrDigitDigitDigits\
    \ = numStrDigitDigits.dropRight(numStrDigitDigitLen - 1)\n            val numStrDigitDigitDigitLen\
    \ = numStrDigitDigitDigits.length\n            val numStrDigitDigitDigits = numStrDigitDigitDigits.dropRight(numStrDigitDigitDigitLen\
    \ - 1)\n            val numStrDigitDigitDigitLen = numStrDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigits = numStrDigitDigitDigits.dropRight(numStrDigitDigitDigitLen\
    \ - 1)\n            val numStrDigitDigitDigitLen = numStrDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigits = numStrDigitDigitDigits.dropRight(numStrDigitDigitDigitLen\
    \ - 1)\n            val numStrDigitDigitDigitLen = numStrDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigits = numStrDigitDigitDigits.dropRight(numStrDigitDigitDigitLen\
    \ - 1)\n            val numStrDigitDigitDigitLen = numStrDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigits = numStrDigitDigitDigits.dropRight(numStrDigitDigitDigitLen\
    \ - 1)\n            val numStrDigitDigitDigitLen = numStrDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigits = numStrDigitDigitDigits.dropRight(numStrDigitDigitDigitLen\
    \ - 1)\n            val numStrDigitDigitDigitLen = numStrDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigits = numStrDigitDigitDigits.dropRight(numStrDigitDigitDigitLen\
    \ - 1)\n            val numStrDigitDigitDigitLen = numStrDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigits = numStrDigitDigitDigits.dropRight(numStrDigitDigitDigitLen\
    \ - 1)\n            val numStrDigitDigitDigitLen = numStrDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigits = numStrDigit", "        val roman = mutable.ArrayBuffer.empty[String]\n\
    \        var i = 0\n        while (number > 0) {\n            roman.append(roman(i).substring(0,\
    \ roman(i).length - 1))\n            number -= Math.pow(10, roman(i).length -\
    \ 1)\n            i += 1\n        }\n        roman.last", "        val roman =\
    \ scala.collection.mutable.ListBuffer.empty[String]\n        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsMap = scala.collection.mutable.HashMap.empty[Int, Int]\n    \
    \    val numsMap2 = scala.collection.mutable.HashMap.empty[Int, Int]\n       \
    \ val numsMap3 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val\
    \ numsMap4 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap5\
    \ = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap6 = scala.collection.mutable.HashMap.empty[Int,\
    \ Int]\n        val numsMap7 = scala.collection.mutable.HashMap.empty[Int, Int]\n\
    \        val numsMap8 = scala.collection.mutable.HashMap.empty[Int, Int]\n   \
    \     val numsMap9 = scala.collection.mutable.HashMap.empty[Int, Int]\n      \
    \  val numsMap10 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val\
    \ numsMap11 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap12\
    \ = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap13 =\
    \ scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap14 = scala.collection.mutable.HashMap.empty[Int,\
    \ Int]\n        val numsMap15 = scala.collection.mutable.HashMap.empty[Int, Int]\n\
    \        val numsMap16 = scala.collection.mutable.HashMap.empty[Int, Int]\n  \
    \      val numsMap17 = scala.collection.mutable.HashMap.empty[Int, Int]\n    \
    \    val numsMap18 = scala.collection.mutable.HashMap.empty[Int, Int]\n      \
    \  val numsMap19 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val\
    \ numsMap20 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap21\
    \ = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap22 =\
    \ scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap23 = scala.collection.mutable.HashMap.empty[Int,\
    \ Int]\n        val numsMap24 = scala.", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        val nums = scala.collection.mutable.ListBuffer[Long]()\n        val numsMap\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap2 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap3 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap4 = scala.collection.mutable.Map[Long, String]()\n       \
    \ val numsMap5 = scala.collection.mutable.Map[Long, String]()\n        val numsMap6\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap7 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap8 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap9 = scala.collection.mutable.Map[Long, String]()\n       \
    \ val numsMap10 = scala.collection.mutable.Map[Long, String]()\n        val numsMap11\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap12 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap13 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap14 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap15 = scala.collection.mutable.Map[Long, String]()\n        val numsMap16\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap17 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap18 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap19 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap20 = scala.collection.mutable.Map[Long, String]()\n        val numsMap21\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap22 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap23 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap24 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap25 = scala.collection.mutable.Map[Long, String]()\n        val numsMap26\
    \ = scala.collection.mutable.Map[Long, String]", "        val roman = mutable.ArrayBuffer(\n\
    \            \"\",\n            \"M\",\n            \"CM\",\n            \"D\"\
    ,\n            \"CD\",\n            \"C\",\n            \"XC\",\n            \"\
    L\",\n            \"XL\",\n            \"X\",\n            \"IX\",\n         \
    \   \"V\",\n            \"IV\",\n            \"I\"\n        )\n        val romanNum\
    \ = number / 100\n        val romanNumString = romanNum.toString\n        val\
    \ romanNumStringLength = romanNumString.length\n        val romanNumStringLength\
    \ = romanNumStringLength.toInt\n        val romanNumStringLength = romanNumStringLength.toInt\n\
    \        val romanNumStringLength = romanNumStringLength.toInt\n        val romanNumStringLength\
    \ = romanNumStringLength.toInt\n        val romanNumStringLength = romanNumStringLength.toInt\n\
    \        val romanNumStringLength = romanNumStringLength.toInt\n        val romanNumStringLength\
    \ = romanNumStringLength.toInt\n        val romanNumStringLength = romanNumStringLength.toInt\n\
    \        val romanNumStringLength = romanNumStringLength.toInt\n        val romanNumStringLength\
    \ = romanNumStringLength.toInt\n        val romanNumStringLength = romanNumStringLength.toInt\n\
    \        val romanNumStringLength = romanNumStringLength.toInt\n        val romanNumStringLength\
    \ = romanNumStringLength.toInt\n        val romanNumStringLength = romanNumStringLength.toInt\n\
    \        val romanNumStringLength = romanNumStringLength.toInt\n        val romanNumStringLength\
    \ = romanNumStringLength.toInt\n        val romanNumStringLength = romanNumStringLength.toInt\n\
    \        val romanNumStringLength = romanNumStringLength.toInt\n        val romanNumStringLength\
    \ = romanNumStringLength.toInt\n        val romanNumStringLength = romanNumStringLength.toInt\n\
    \        val romanNumStringLength = romanNumStringLength.toInt\n        val romanNumStringLength\
    \ = romanNumStringLength.toInt\n        val romanNumStringLength = romanNumStringLength.toInt\n\
    \        val romanNumStringLength = romanNumStringLength.toInt\n        val romanNumStringLength\
    \ = romanNumStringLength.toInt\n        val romanNumStringLength = romanNumStringLength.toInt\n\
    \        val romanNumStringLength = romanNumStringLength.toInt\n        val romanNumString",
  "        val roman = mutable.ArrayBuffer.empty[String]\n        var i = 0\n    \
    \    while (number > 0) {\n            val remainder = number % 10\n         \
    \   roman.append(remainder)\n            number /= 10\n            i += 1\n  \
    \      }\n        roman.reverse.mkString.toLowerCase", "        val roman = scala.collection.mutable.ArrayBuffer(\"\
    \",\"M\",\"CM\",\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\"\
    ,\"I\")\n        val romanNum = scala.collection.mutable.ArrayBuffer(\"\",\"M\"\
    ,\"CM\",\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\"\
    )\n        val romanNum2 = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"\
    CM\",\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n\
    \        val romanNum3 = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\"\
    ,\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n   \
    \     val romanNum4 = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"\
    D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n      \
    \  val romanNum5 = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"D\"\
    ,\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n        val\
    \ romanNum6 = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"D\",\"\
    CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n        val romanNum7\
    \ = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"D\",\"CD\",\"C\"\
    ,\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n        val romanNum8 =\
    \ scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"D\",\"CD\",\"C\",\"\
    XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n        val romanNum9 = scala.collection.mutable.ArrayBuffer(\"\
    \",\"M\",\"CM\",\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\"\
    ,\"I\")\n        val romanNum10 = scala.collection.mutable.ArrayBuffer(\"\",\"\
    M\",\"CM\",\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"\
    I\")\n        val romanNum11 = scala.collection.mutable.ArrayBuffer(\"\",\"M\"\
    ,\"CM\",\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"",
  "        val roman = mutable.ListBuffer[String]()\n        var index = 0\n     \
    \   while (number > 0) {\n            val remainder = number % 10\n          \
    \  roman.append(remainder + \"\\u2190\")\n            number /= 10\n        }\n\
    \        roman.reverse.mkString", "        val roman = mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        for (i <- 0 until\
    \ nums) {\n            val remainder = number % i\n            number -= remainder\n\
    \            roman += if (remainder > 0) \"M\" else \"D\"\n        }\n       \
    \ roman.mkString", "        val roman = mutable.ArrayBuffer.empty[String]\n  \
    \      val nums = number / 100\n        val numsStr = nums.toString.toCharArray\n\
    \        val numsLen = numsStr.length\n        val numsLen2 = numsLen / 2\n  \
    \      val numsLen3 = numsLen / 3\n        val numsLen4 = numsLen / 4\n      \
    \  val numsLen5 = numsLen / 5\n        val numsLen6 = numsLen / 6\n        val\
    \ numsLen7 = numsLen / 7\n        val numsLen8 = numsLen / 8\n        val numsLen9\
    \ = numsLen / 9\n        val numsLen10 = numsLen / 10\n        val numsLen11 =\
    \ numsLen / 11\n        val numsLen12 = numsLen / 12\n        val numsLen13 =\
    \ numsLen / 13\n        val numsLen14 = numsLen / 14\n        val numsLen15 =\
    \ numsLen / 15\n        val numsLen16 = numsLen / 16\n        val numsLen17 =\
    \ numsLen / 17\n        val numsLen18 = numsLen / 18\n        val numsLen19 =\
    \ numsLen / 19\n        val numsLen20 = numsLen / 20\n        val numsLen21 =\
    \ numsLen / 21\n        val numsLen22 = numsLen / 22\n        val numsLen23 =\
    \ numsLen / 23\n        val numsLen24 = numsLen / 24\n        val numsLen25 =\
    \ numsLen / 25\n        val numsLen26 = numsLen / 26\n        val numsLen27 =\
    \ numsLen / 27\n        val numsLen28 = numsLen / 28\n        val numsLen29 =\
    \ numsLen / 29\n        val numsLen30 = numsLen / 30\n        val numsLen31 =\
    \ numsLen / 31\n        val numsLen32 = numsLen / 32\n        val numsLen33 =\
    \ numsLen / 33\n        val numsLen34 = numsLen / 34\n        val numsLen35 =\
    \ numsLen / 35\n        val numsLen36 = numsLen / 36\n        val numsLen37 =\
    \ numsLen / 37\n        val numsLen38 = nums", "        val roman = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        var romanString = \"\"\n  \
    \      var romanNumString = \"\"\n        var i = 0\n        while (i < roman.size)\
    \ {\n            if (number >= roman(i)) {\n                romanNumString = romanNum(i)\
    \ + romanNumString\n                number -= roman(i)\n                i += 1\n\
    \            } else {\n                romanString = roman(i) + romanString\n\
    \                number -= roman(i)\n                i += 1\n            }\n \
    \       }\n        romanString = romanString + romanNumString\n        return\
    \ romanString.toLowerCase", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        val nums = scala.collection.mutable.ListBuffer[Int]()\n        val numsLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n    \
    \    val numsLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n     \
    \   val numsLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n   \
    \     val numsLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.List",
  "        val roman = scala.collection.mutable.ListBuffer[String]()\n        val\
    \ romanNum = scala.collection.mutable.ListBuffer[Int]()\n        val nums = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsLen = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ numsLenLen = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLen =\
    \ scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer[Int]()", "        val roman = mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsStr = nums.toString.reverse\n\
    \        val numsArr = numsStr.split(\"\\\\.\")\n        val numsArr2 = numsArr.tail\n\
    \        val numsArr3 = numsArr2.reverse\n        val numsArr4 = numsArr3.tail\n\
    \        val numsArr5 = numsArr4.reverse\n        val numsArr6 = numsArr5.tail\n\
    \        val numsArr7 = numsArr6.reverse\n        val numsArr8 = numsArr7.tail\n\
    \        val numsArr9 = numsArr8.reverse\n        val numsArr10 = numsArr9.tail\n\
    \        val numsArr11 = numsArr10.reverse\n        val numsArr12 = numsArr11.tail\n\
    \        val numsArr13 = numsArr12.reverse\n        val numsArr14 = numsArr13.tail\n\
    \        val numsArr15 = numsArr14.reverse\n        val numsArr16 = numsArr15.tail\n\
    \        val numsArr17 = numsArr16.reverse\n        val numsArr18 = numsArr17.tail\n\
    \        val numsArr19 = numsArr18.reverse\n        val numsArr20 = numsArr19.tail\n\
    \        val numsArr21 = numsArr20.reverse\n        val numsArr22 = numsArr21.tail\n\
    \        val numsArr23 = numsArr22.reverse\n        val numsArr24 = numsArr23.tail\n\
    \        val numsArr25 = numsArr24.reverse\n        val numsArr26 = numsArr25.tail\n\
    \        val numsArr27 = numsArr26.reverse\n        val numsArr28 = numsArr27.tail\n\
    \        val numsArr29 = numsArr28.reverse\n        val numsArr30 = numsArr29.tail\n\
    \        val numsArr31 = numsArr30.reverse\n        val numsArr32 = numsArr31.tail\n\
    \        val numsArr33 = numsArr32.reverse\n        val numsArr34 = numsArr33.tail\n\
    \        val numsArr35 = numsArr34.reverse\n        val numsArr36 = numsArr35.tail\n\
    \        val numsArr37 = numsArr36.reverse\n        val ", "        val roman\
    \ = scala.collection.mutable.ListBuffer[String]()\n        val nums = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsMap = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap5 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap9 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap14 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap19 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap24 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int,\
    \ Int]", "        val roman = mutable.ListBuffer.empty[String]\n        val nums\
    \ = scala.math.pow(10, number.toInt)\n        val numsArray = nums.toArray.sortBy(_.toInt)\n\
    \        val numsArrayLength = numsArray.length\n        var i = 0\n        while\
    \ (i < numsArrayLength) {\n            val num = numsArray(i)\n            if\
    \ (num < 1000) {\n                roman += num.toString\n                i +=\
    \ 1\n            } else {\n                val num2 = num - numsArray(i-1)\n \
    \               val num3 = numsArray(i-1) - numsArray(i-2)\n                val\
    \ num4 = numsArray(i-2) - numsArray(i-3)\n                val num5 = numsArray(i-3)\
    \ - numsArray(i-4)\n                val num6 = numsArray(i-4) - numsArray(i-5)\n\
    \                val num7 = numsArray(i-5) - numsArray(i-6)\n                val\
    \ num8 = numsArray(i-6) - numsArray(i-7)\n                val num9 = numsArray(i-7)\
    \ - numsArray(i-8)\n                val num10 = numsArray(i-8) - numsArray(i-9)\n\
    \                val num11 = numsArray(i-9) - numsArray(i-10)\n              \
    \  val num12 = numsArray(i-10) - numsArray(i-11)\n                val num13 =\
    \ numsArray(i-11) - numsArray(i-12)\n                val num14 = numsArray(i-12)\
    \ - numsArray(i-13)\n                val num15 = numsArray(i-13) - numsArray(i-14)\n\
    \                val num16 = numsArray(i-14) - numsArray(i-15)\n             \
    \   val num17 = numsArray(i-15) - numsArray(i-16)\n                val num18 =\
    \ numsArray(i-16) - numsArray(i-17)\n                val num19 = numsArray(i-17)\
    \ - numsArray(i-18)\n                val num20 = numsArray(i-18) - numsArray(i-19)\n\
    \                val num21 = numsArray(i-19) - numsArray(i-20)\n             \
    \   val num22 = numsArray(i-20) - numsArray(i-21)\n                val num23 =\
    \ numsArray(i-21) - numsArray(i-22)\n                val num24 = numsArray(i-22)\
    \ - numsArray(i-23)\n                val num25 = numsArray(i-23) - numsArray(i-24)\n",
  "        val roman = scala.collection.mutable.ListBuffer[String]()\n        val\
    \ nums = scala.collection.mutable.ListBuffer[Int]()\n        val numsMap = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap2 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap3 = scala.collection.mutable.Map[Int, String]()\n        val\
    \ numsMap4 = scala.collection.mutable.Map[Int, String]()\n        val numsMap5\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap6 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap7 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap8 = scala.collection.mutable.Map[Int, String]()\n        val\
    \ numsMap9 = scala.collection.mutable.Map[Int, String]()\n        val numsMap10\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap11 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap12 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap13 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap14 = scala.collection.mutable.Map[Int, String]()\n        val numsMap15\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap16 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap17 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap18 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap19 = scala.collection.mutable.Map[Int, String]()\n        val numsMap20\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap21 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap22 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap23 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap24 = scala.collection.mutable.Map[Int, String]()\n        val numsMap25\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap26 = scala.collection.mutable.Map[Int,\
    \ String]", "        val roman = mutable.ListBuffer[String]()\n        val nums\
    \ = scala.math.pow(10, number.toInt)\n        val numsReversed = scala.math.pow(10,\
    \ number.toInt.reverse)\n        val numsRounded = scala.math.round(nums)\n  \
    \      val numsRoundedReversed = scala.math.round(numsReversed)\n        val numsRoundedRounded\
    \ = scala.math.round(numsRounded)\n        val numsRoundedRoundedReversed = scala.math.round(numsRoundedReversed)\n\
    \        val numsRoundedRoundedRounded = scala.math.round(numsRoundedRounded)\n\
    \        val numsRoundedRoundedRoundedReversed = scala.math.round(numsRoundedRoundedReversed)\n\
    \        val numsRoundedRoundedRoundedRounded = scala.math.round(numsRoundedRoundedRounded)\n\
    \        val numsRoundedRoundedRoundedRoundedReversed = scala.math.round(numsRoundedRoundedRoundedReversed)\n\
    \        val numsRoundedRoundedRoundedRoundedRounded = scala.math.round(numsRoundedRoundedRoundedRounded)\n\
    \        val numsRoundedRoundedRoundedRoundedRoundedReversed = scala.math.round(numsRoundedRoundedRoundedRoundedReversed)\n\
    \        val numsRoundedRoundedRoundedRoundedRoundedRounded = scala.math.round(numsRoundedRoundedRoundedRoundedRounded)\n\
    \        val numsRoundedRoundedRoundedRoundedRoundedRoundedReversed = scala.math.round(numsRoundedRoundedRoundedRoundedRoundedReversed)\n\
    \        val numsRoundedRoundedRoundedRoundedRoundedRoundedRounded = scala.math.round(numsRoundedRoundedRoundedRoundedRoundedRounded)\n\
    \        val numsRoundedRoundedRoundedRoundedRoundedRoundedRoundedReversed = scala.math.round(numsRoundedRoun",
  "        val roman = mutable.ArrayBuffer.empty[String]\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsArray = nums.toArray\n        val numsArrayLength\
    \ = numsArray.length\n        var i = 0\n        while (i < numsArrayLength) {\n\
    \            val num = numsArray(i)\n            val romanNum = num.toString.toRoman\n\
    \            roman += romanNum\n            i += 1\n        }\n        roman.toString().toLowerCase",
  "        val roman = scala.collection.mutable.ListBuffer[String]()\n        val\
    \ nums = scala.collection.mutable.ListBuffer[Int]()\n        val numsMap = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap2 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap3 = scala.collection.mutable.Map[Int, String]()\n        val\
    \ numsMap4 = scala.collection.mutable.Map[Int, String]()\n        val numsMap5\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap6 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap7 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap8 = scala.collection.mutable.Map[Int, String]()\n        val\
    \ numsMap9 = scala.collection.mutable.Map[Int, String]()\n        val numsMap10\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap11 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap12 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap13 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap14 = scala.collection.mutable.Map[Int, String]()\n        val numsMap15\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap16 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap17 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap18 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap19 = scala.collection.mutable.Map[Int, String]()\n        val numsMap20\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap21 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap22 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap23 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap24 = scala.collection.mutable.Map[Int, String]()\n        val numsMap25\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap26 = scala.collection.mutable.Map[Int,\
    \ String]", "        val roman = mutable.ArrayBuffer.empty[String]\n        val\
    \ nums = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsMap\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap2\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap3\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap4\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap5\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap6\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap7\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap8\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap9\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap10\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap11\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap12\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap13\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap14\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap15\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap16\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap17\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap18\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap19\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap20\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap21\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap22\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap23\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap24\
    \ = scala.collection.mutable.", "        val roman = mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsStr = nums.toString.reverse\n\
    \        val numsArr = numsStr.split(\"\\\\.\")\n        val numsArrLen = numsArr.length\n\
    \        val numsArr2 = numsArr.tail\n        val numsArrLen2 = numsArr2.length\n\
    \        val numsArr3 = numsArr2.tail\n        val numsArrLen3 = numsArr3.length\n\
    \        val numsArr4 = numsArr3.tail\n        val numsArrLen4 = numsArr4.length\n\
    \        val numsArr5 = numsArr4.tail\n        val numsArrLen5 = numsArr5.length\n\
    \        val numsArr6 = numsArr5.tail\n        val numsArrLen6 = numsArr6.length\n\
    \        val numsArr7 = numsArr6.tail\n        val numsArrLen7 = numsArr7.length\n\
    \        val numsArr8 = numsArr7.tail\n        val numsArrLen8 = numsArr8.length\n\
    \        val numsArr9 = numsArr8.tail\n        val numsArrLen9 = numsArr9.length\n\
    \        val numsArr10 = numsArr9.reverse\n        val numsArrLen10 = numsArr10.length\n\
    \        val numsArr11 = numsArr10.tail\n        val numsArrLen11 = numsArr11.length\n\
    \        val numsArr12 = numsArr11.tail\n        val numsArrLen12 = numsArr12.length\n\
    \        val numsArr13 = numsArr12.tail\n        val numsArrLen13 = numsArr13.length\n\
    \        val numsArr14 = numsArr13.tail\n        val numsArrLen14 = numsArr14.length\n\
    \        val numsArr15 = numsArr14.tail\n        val numsArrLen15 = numsArr15.length\n\
    \        val numsArr16 = numsArr15.tail\n        val numsArrLen16 = numsArr16.length\n\
    \        val numsArr17 = numsArr16.tail\n        val numsArrLen17 = numsArr17.length\n\
    \        val numsArr18 = numsArr17.tail\n        val numsArrLen18 = numsArr18.length\n\
    \        val numsArr19 = nums", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        for (i <- 0 until\
    \ nums) {\n            val n = nums.toInt\n            val m = scala.math.pow(10,\
    \ i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(10,\
    \ n - i)\n            val r = scala.math.pow(10, n - i)\n            val m = scala.math.pow(",
  "        val roman = scala.collection.mutable.ArrayBuffer.empty[String]\n      \
    \  val nums = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsMap\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap2\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap3\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap4\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap5\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap6\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap7\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap8\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap9\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap10\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap11\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap12\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap13\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap14\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap15\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap16\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap17\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap18\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap19\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap20\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap21\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap22\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap23\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap24\
    \ = scala.", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val romanNum = scala.collection.mutable.ListBuffer.empty[Int]\n     \
    \   val numDigits = scala.math.log10(number).toInt\n        var i = 1\n      \
    \  while (i <= numDigits) {\n            val remainder = number % 10\n       \
    \     number /= 10\n            roman.append(remainder)\n            romanNum.append(remainder)\n\
    \            i += 1\n        }\n        roman.reverse.foldLeft(romanNum.toString)(_\
    \ + _)", "        val roman = mutable.ListBuffer[String]()\n        val nums =\
    \ scala.math.pow(10, number.toInt)\n        for (i <- 0 until nums) {\n      \
    \      val num = scala.math.pow(10, i.toInt)\n            val numStr = num.toString.toUpperCase\n\
    \            val numStrLen = numStr.length\n            val numStrDigits = numStr.dropRight(numStrLen)\n\
    \            val numStrDigitLen = numStrDigits.length\n            val numStrDigitDigits\
    \ = numStrDigits.dropRight(numStrDigitLen)\n            val numStrDigitDigitLen\
    \ = numStrDigitDigits.length\n            val numStrDigitDigitDigits = numStrDigitDigits.dropRight(numStrDigitDigitLen)\n\
    \            val numStrDigitDigitDigitLen = numStrDigitDigitDigits.length\n  \
    \          val numStrDigitDigitDigitDigits = numStrDigitDigitDigits.dropRight(numStrDigitDigitDigitLen)\n\
    \            val numStrDigitDigitDigitDigitLen = numStrDigitDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigitDigitDigits = numStrDigitDigitDigitDigits.dropRight(numStrDigitDigitDigitDigitLen)\n\
    \            val numStrDigitDigitDigitDigitDigitLen = numStrDigitDigitDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigitDigitDigitDigits = numStrDigitDigitDigitDigitDigits.dropRight(numStrDigitDigitDigitDigitDigitLen)\n\
    \            val numStrDigitDigitDigitDigitDigitDigitLen = numStrDigitDigitDigitDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigitDigitDigitDigits = numStrDigitDigitDigitDigitDigitDigits.dropRight(numStrDigitDigitDigitDigitDigitDigitLen)\n\
    \            val numStrDigitDigitDigitDigitDigitDigitLen = numStrDigitDigitDigitDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigitDigitDigitDigits = numStrDigitDigitDigitDigitDigitDigits.dropRight(numStrDigitDigitDigitDigitDigitDigitLen)\n\
    \            val numStrDigitDigitDigitDigitDigitDigitLen = numStrDigitDigitDigitDigitDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigitDigitDigitDigits = numStrDigitDigitDigitDigitDigitDigitDigits.dropRight(numStrDigitDigitDigitDigitDigitDigitDigitLen)\n\
    \            val numStrDigitDigitDigitDigitDigitDigitLen = numStrDigitDigitDigitDigitDigitDigitDigits.length\n\
    \            val numStrDigitDigitDigitDigitDigitDigits = numStrDigitDigitDigitDigitDigitDigitDigits.dropRight(numStrDigitDigitDigitDigitDigitDigit",
  "        val roman = scala.collection.mutable.ArrayBuffer.empty[String]\n      \
    \  val nums = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLen =\
    \ scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLen =\
    \ scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen",
  "        val roman = scala.collection.mutable.ArrayBuffer.empty[String]\n      \
    \  var index = 0\n        while (number > 0) {\n            val remainder = number\
    \ % 10\n            roman.append(remainder)\n            number /= 10\n      \
    \      index += 1\n        }\n        roman.reverse.mkString.toLowerCase", " \
    \       val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums) {\n            val n = nums.toInt\n\
    \            val m = scala.math.pow(10, i)\n            val romanDigit = if (n\
    \ % 10 == 0) \"M\" else if (n % 10 == 1) \"CM\" else \"D\"\n            val romanDigit2\
    \ = if (n % 100 == 0) \"C\" else if (n % 100 == 1) \"CC\" else \"L\"\n       \
    \     val romanDigit3 = if (n % 1000 == 0) \"X\" else if (n % 1000 == 1) \"XX\"\
    \ else \"IX\"\n            val romanDigit4 = if (n % 10000 == 0) \"V\" else if\
    \ (n % 10000 == 1) \"IV\" else \"I\"\n            roman.append(romanDigit + romanDigit2\
    \ + romanDigit3 + romanDigit4)\n        }\n        roman.mkString.toLowerCase",
  "        val roman = mutable.ArrayBuffer(\n            \"I\", \"II\", \"III\", \"\
    IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\", \"XIII\"\
    , \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"\
    XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\"\
    , \"XXX\", \"XXXI\", \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"\
    XXXVII\", \"XXXVIII\", \"XXXIX\", \"XL\", \"L\", \"LI\", \"LII\", \"LII\", \"\
    LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\", \"LX\", \"LXI\", \"LXII\"\
    , \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\", \"\
    LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\"\
    , \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\"\
    , \"LXXXV\", \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\"\
    , \"CI\", \"CII\", \"CII\", \"CIII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\"\
    , \"CIX\", \"CX\", \"CXI\", \"CXII\", \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\",\
    \ \"CXVII\", \"CXVIII\", \"CXIX\", \"CXX\", \"CXXI\", \"CXXII\", \"CXXIII\", \"\
    CXXIV\", \"CXXV\", \"CXXVI\", \"CXXVII\", \"CXXVIII\", \"CXXIX\", \"CXXX\", \"\
    CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\", \"CXXXV\", \"CXXXVI\", \"CXXXVII\"\
    , \"CXXXVIII\", \"CXXXIX\", \"CXL\", \"CL\", \"LI\", \"LII\", \"LII\", \"LIII\"\
    , \"LIIII\", \"LIIIII\", \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\"\
    , \"LXV\", \"LXVI\", \"", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int, Int]", " \
    \       val roman = mutable.ArrayBuffer.empty[String]\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums) {\n            val num = (number\
    \ / nums).toInt\n            val romanDigit = if (num == 1) \"M\" else if (num\
    \ == 2) \"D\" else if (num == 3) \"C\" else \"L\"\n            roman += romanDigit\n\
    \            number -= num\n        }\n        roman.toString().toLowerCase",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsLen = nums.length\n        val numsDigits = nums.map(_.toInt)\n\
    \        val numsDigitsLen = numsDigits.length\n        val numsDigitSum = numsDigits.foldLeft(0)(_\
    \ + _)\n        val numsDigitSumLen = numsDigitSum.length\n        val numsDigitSumToOne\
    \ = numsDigitSum.map(x => if (x == 0) 1 else 0)\n        val numsDigitSumToOneLen\
    \ = numsDigitSumToOne.length\n        val numsDigitSumToOneToOne = numsDigitSumToOne.map(x\
    \ => if (x == 1) 1 else 0)\n        val numsDigitSumToOneToOneLen = numsDigitSumToOneToOne.length\n\
    \        val numsDigitSumToOneToOneToOne = numsDigitSumToOneToOne.map(x => if\
    \ (x == 2) 1 else 0)\n        val numsDigitSumToOneToOneToOneLen = numsDigitSumToOneToOneToOne.length\n\
    \        val numsDigitSumToOneToOneToOneToOne = numsDigitSumToOneToOneToOne.map(x\
    \ => if (x == 3) 1 else 0)\n        val numsDigitSumToOneToOneToOneToOneLen =\
    \ numsDigitSumToOneToOneToOneToOne.length\n        val numsDigitSumToOneToOneToOneToOneToOne\
    \ = numsDigitSumToOneToOneToOneToOne.map(x => if (x == 4) 1 else 0)\n        val\
    \ numsDigitSumToOneToOneToOneToOneToOneLen = numsDigitSumToOneToOneToOneToOneToOne.length\n\
    \        val numsDigitSumToOneToOneToOneToOneToOneToOne = numsDigitSumToOneToOneToOneToOneToOneToOne.map(x\
    \ => if (x == 5) 1 else 0)\n        val numsDigitSumToOneToOneToOneToOneToOneToOneLen\
    \ = numsDigitSumToOneToOneToOneToOneToOneToOne.length\n        val numsDigitSumToOneToOneToOneToOneToOneToOneTo\
    \ = numsDigitSumToOneToOneToOneToOneToOneToOne.map(x => if (x", "        val roman\
    \ = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10, number.toInt)\n\
    \        for (i <- 0 until nums) {\n            val num = scala.math.pow(10, i)\n\
    \            val numStr = num.toString.toCharArray.map(_.toString.toInt)\n   \
    \         val numStr = numStr.map(_.toString).mkString(\"\")\n            val\
    \ numStr2 = numStr.map(_.toString).mkString(\"\")\n            val numStr3 = numStr2.map(_.toString).mkString(\"\
    \")\n            val numStr4 = numStr3.map(_.toString).mkString(\"\")\n      \
    \      val numStr5 = numStr4.map(_.toString).mkString(\"\")\n            val numStr6\
    \ = numStr5.map(_.toString).mkString(\"\")\n            val numStr7 = numStr6.map(_.toString).mkString(\"\
    \")\n            val numStr8 = numStr7.map(_.toString).mkString(\"\")\n      \
    \      val numStr9 = numStr8.map(_.toString).mkString(\"\")\n            val numStr10\
    \ = numStr9.map(_.toString).mkString(\"\")\n            val numStr11 = numStr10.map(_.toString).mkString(\"\
    \")\n            val numStr12 = numStr11.map(_.toString).mkString(\"\")\n    \
    \        val numStr13 = numStr12.map(_.toString).mkString(\"\")\n            val\
    \ numStr14 = numStr13.map(_.toString).mkString(\"\")\n            val numStr15\
    \ = numStr14.map(_.toString).mkString(\"\")\n            val numStr16 = numStr15.map(_.toString).mkString(\"\
    \")\n            val numStr17 = numStr16.map(_.toString).mkString(\"\")\n    \
    \        val numStr18 = numStr17.map(_.toString).mkString(\"\")\n            val\
    \ numStr19 = numStr18.map(_.toString).mkString(\"\")\n            val numStr20\
    \ = numStr19.map(_.toString).mkString(\"\")\n            val numStr21 = numStr20.map(_.toString).mkString(\"\
    \")\n            val numStr22 = numStr21.map(_.toString).mkString(\"\")\n    \
    \        val numStr23 = numStr22.map(_.toString).mkString(\"\")\n            val\
    \ numStr24 = numStr23.map(_.toString).mkString(\"\")\n            val numStr25\
    \ = numStr24.map(_.toString).mkString(\"\")\n            val numStr26 = numStr25.map(_.toString).mkString(\"\
    \")\n            val numStr27 = numStr26.map(_.toString).mkString(\"\")\n    \
    \        val ", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val romanNum = scala.collection.mutable.ListBuffer.empty[Int]\n     \
    \   val numDigits = scala.math.log10(number).toInt\n        val numDigitsInRoman\
    \ = scala.math.pow(10, numDigits - 1)\n        val romanDigits = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRoman = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntIntInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntIntIntInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntIntIntIntInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntIntIntIntIntInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntIntIntIntIntIntInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntIntIntIntIntIntIntInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntIntIntIntIntIntIntIntInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntIntIntIntIntIntIntIntIntIntInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntIntIntIntIntIntIntIntIntIntIntInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntIntIntIntIntIntIntIntIntIntIntIntInt = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val romanDigitsInRomanIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt =\
    \ scala.collection.mutable.ListBuffer.empty[Int]\n        val romanDigitsInRomanIntIntIntIntIntIntIntIntInt",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsArray = nums.toArray.sorted\n        var i =\
    \ 0\n        while (i < numsArray.length) {\n            val num = numsArray(i)\n\
    \            if (num < 1000) {\n                roman.append(num.toString)\n \
    \           } else {\n                val num2 = num % 1000\n                val\
    \ num3 = num / 1000\n                val num4 = num % 100\n                val\
    \ num5 = num / 100\n                val num6 = num % 10\n                val num7\
    \ = num / 10\n                val num8 = num % 5\n                val num9 = num\
    \ / 5\n                val num10 = num % 3\n                val num11 = num /\
    \ 3\n                val num12 = num % 2\n                val num13 = num / 2\n\
    \                val num14 = num % 1\n                val num15 = num / 1\n  \
    \              roman.append(num2.toString)\n                roman.append(num3.toString)\n\
    \                roman.append(num4.toString)\n                roman.append(num5.toString)\n\
    \                roman.append(num6.toString)\n                roman.append(num7.toString)\n\
    \                roman.append(num8.toString)\n                roman.append(num9.toString)\n\
    \                roman.append(num10.toString)\n                roman.append(num11.toString)\n\
    \                roman.append(num12.toString)\n                roman.append(num13.toString)\n\
    \                roman.append(num14.toString)\n                roman.append(num15.toString)\n\
    \            }\n            i += 1\n        }\n        roman.mkString.toLowerCase",
  "        val roman = scala.collection.mutable.ListBuffer[String]()\n        val\
    \ nums = scala.collection.mutable.ListBuffer[Int]()\n        val digits = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val tens = scala.collection.mutable.ListBuffer[Int]()\n        val hundreds\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val thousands = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numDigits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ numTens = scala.collection.mutable.ListBuffer[Int]()\n        val numHundreds\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numThousands = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numDigit = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ numTen = scala.collection.mutable.ListBuffer[Int]()\n        val numHundred\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numThousand = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numDigits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ numTens = scala.collection.mutable.ListBuffer[Int]()\n        val numHundreds\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numThousands = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numDigit = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ numTen = scala.collection.mutable.ListBuffer[Int]()\n        val numHundred\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numThousand = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numDigits = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ numTens = scala.collection.mutable.ListBuffer[Int]()\n        val numHundreds\
    \ = scala.collection.mutable.ListBuffer[Int]()\n        val numThousands = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numDigit = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ numTen = scala.collection.mutable.ListBuffer[Int]()\n        val numHundred\
    \ = scala.collection.mutable.ListBuffer[Int]()\n", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        var i = number\n        while (i >= 1000) {\n            roman.append(scala.math.pow(10,\
    \ i).toString)\n            i -= 1000\n        }\n        roman.append(scala.math.pow(10,\
    \ i).toString)\n        roman.reverse.mkString", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap2\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap3\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap4\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap5\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap6\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap7\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap8\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap9\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap10\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap11\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap12\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap13\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap14\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap15\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap16\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap17\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap18\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap19\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap20\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap21\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap22\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap23\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap24\
    \ = scala.", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        val nums = scala.collection.mutable.ListBuffer[Long]()\n        val numsStr\
    \ = scala.collection.mutable.ListBuffer[String]()\n        val numsStrLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLen = scala.collection.mutable.ListBuffer[Int]()\n    \
    \    val numsStrLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n     \
    \   val numsStrLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n   \
    \     val numsStrLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLenLen", "        val roman\
    \ = scala.collection.mutable.ListBuffer[String]()\n        val nums = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsMap = scala.collection.mutable.Map[Int, String]()\n        val\
    \ numsMap2 = scala.collection.mutable.Map[Int, String]()\n        val numsMap3\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap4 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap5 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap6 = scala.collection.mutable.Map[Int, String]()\n        val\
    \ numsMap7 = scala.collection.mutable.Map[Int, String]()\n        val numsMap8\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap9 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap10 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap11 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap12 = scala.collection.mutable.Map[Int, String]()\n        val numsMap13\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap14 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap15 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap16 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap17 = scala.collection.mutable.Map[Int, String]()\n        val numsMap18\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap19 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap20 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap21 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap22 = scala.collection.mutable.Map[Int, String]()\n        val numsMap23\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap24 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap25 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap26 = scala.collection.mutable.Map[Int, String]", "       \
    \ val roman = scala.collection.mutable.ListBuffer.empty[String]\n        val nums\
    \ = scala.collection.mutable.ListBuffer.empty[Long]\n        val numsMap = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap2 = scala.collection.mutable.Map[String, Long]()\n\
    \        val numsMap3 = scala.collection.mutable.Map[String, Long]()\n       \
    \ val numsMap4 = scala.collection.mutable.Map[String, Long]()\n        val numsMap5\
    \ = scala.collection.mutable.Map[String, Long]()\n        val numsMap6 = scala.collection.mutable.Map[String,\
    \ Long]()\n        val numsMap7 = scala.collection.mutable.Map[String, Long]()\n\
    \        val numsMap8 = scala.collection.mutable.Map[String, Long]()\n       \
    \ val numsMap9 = scala.collection.mutable.Map[String, Long]()\n        val numsMap10\
    \ = scala.collection.mutable.Map[String, Long]()\n        val numsMap11 = scala.collection.mutable.Map[String,\
    \ Long]()\n        val numsMap12 = scala.collection.mutable.Map[String, Long]()\n\
    \        val numsMap13 = scala.collection.mutable.Map[String, Long]()\n      \
    \  val numsMap14 = scala.collection.mutable.Map[String, Long]()\n        val numsMap15\
    \ = scala.collection.mutable.Map[String, Long]()\n        val numsMap16 = scala.collection.mutable.Map[String,\
    \ Long]()\n        val numsMap17 = scala.collection.mutable.Map[String, Long]()\n\
    \        val numsMap18 = scala.collection.mutable.Map[String, Long]()\n      \
    \  val numsMap19 = scala.collection.mutable.Map[String, Long]()\n        val numsMap20\
    \ = scala.collection.mutable.Map[String, Long]()\n        val numsMap21 = scala.collection.mutable.Map[String,\
    \ Long]()\n        val numsMap22 = scala.collection.mutable.Map[String, Long]()\n\
    \        val numsMap23 = scala.collection.mutable.Map[String, Long]()\n      \
    \  val numsMap24 = scala.collection.mutable.Map[String, Long]()\n        val numsMap25\
    \ = scala.collection.mutable.Map[String, Long]()\n        val numsMap26 = scala.collection.mutable.Map[String,\
    \ Long]()\n        val numsMap27 = scala.collection.mutable.Map[String, Long]()\n\
    \        val numsMap", "        val roman = mutable.ListBuffer[String]()\n   \
    \     val nums = scala.math.pow(10, number.toInt)\n        for (i <- 0 until nums)\
    \ {\n            val num = scala.math.pow(10, i.toInt)\n            val remainder\
    \ = number % num\n            roman.append(remainder.toString.substring(1).toLowerCase)\n\
    \            number -= remainder\n        }\n        roman.mkString", "      \
    \  val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsStr = nums.toString.reverse\n        val numsStrLen\
    \ = numsStr.length\n        for (i <- 0 until numsStrLen) {\n            val num\
    \ = numsStr(i).toInt\n            val romanNum = num / 100\n            val remainder\
    \ = num % 100\n            val romanChar = if (romanNum > 0) \"M\" else \"CM\"\
    \n            val romanChar2 = if (remainder > 0) \"D\" else \"CD\"\n        \
    \    roman.append(romanChar + romanChar2)\n        }\n        roman.reverse.mkString.toLowerCase",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsLength = nums.length\n        val numsLengthMinusOne\
    \ = numsLength - 1\n        val numsLengthMinusOneMinusOne = numsLengthMinusOne\
    \ - 1\n        val numsLengthMinusOneMinusOneMinusOne = numsLengthMinusOneMinusOne\
    \ - 1\n        val numsLengthMinusOneMinusOneMinusOneMinusOne = numsLengthMinusOneMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLengthMinusOneMinusOneMinusOneMinusOneMinusOne = numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne - 1\n \
    \       val numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ - 1\n        val numsLengthMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMin",
  "        val roman = mutable.ArrayBuffer(\n            \"I\", \"II\", \"III\", \"\
    IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \"X\", \"XI\", \"XII\", \"XIII\"\
    , \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"\
    XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\"\
    , \"XXX\", \"XXXI\", \"XXXII\", \"XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"\
    XXXVII\", \"XXXVIII\", \"XXXIX\", \"XL\", \"L\", \"LI\", \"LII\", \"LIII\", \"\
    LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\", \"LIX\", \"LX\", \"LXI\", \"LXII\"\
    , \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\", \"\
    LXX\", \"LXXI\", \"LXXII\", \"LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\"\
    , \"LXXVIII\", \"LXXIX\", \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\"\
    , \"LXXXV\", \"LXXXVI\", \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\"\
    , \"CI\", \"CII\", \"CIV\", \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"\
    CX\", \"CXI\", \"CXII\", \"CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"\
    CXVIII\", \"CXIX\", \"CXX\", \"CXXI\", \"CXXII\", \"CXXIII\", \"CXXIV\", \"CXXV\"\
    , \"CXXVI\", \"CXXVII\", \"CXXVIII\", \"CXXIX\", \"CXXX\", \"CXXXI\", \"CXXXII\"\
    , \"CXXXIII\", \"CXXXIV\", \"CXXXV\", \"CXXXVI\", \"CXXXVII\", \"CXXXVIII\", \"\
    CXXXIX\", \"CXL\", \"CL\", \"LI\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\"\
    , \"LVII\", \"LVIII\", \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\"\
    , \"LXV\", \"LXVI\", \"LXVII\", \"", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsLen = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen",
  "        val roman = scala.collection.mutable.ListBuffer[String]()\n        val\
    \ nums = scala.collection.mutable.ListBuffer[Int]()\n        val numsMap = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap4\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap8\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap13\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap18\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap23\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap26 = scala.collection.mutable.Map[Int, Int]", "        val\
    \ roman = mutable.ListBuffer.empty[String]\n        val nums = scala.math.pow(2,\
    \ number).toInt\n        val numsStr = scala.collection.immutable.Range(0, nums).map(i\
    \ => i.toString.toUpperCase).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ nums).map(i => i.toString).mkString(\"\")\n        val numsArr = scala.collection.immutable.Range(0,\
    \ num", "        val roman = mutable.ListBuffer[String]()\n        val nums =\
    \ scala.math.pow(10, number.toInt)\n        var i = 0\n        while (i < nums)\
    \ {\n            val num = scala.math.pow(10, i)\n            val numStr = num.toString.toCharArray.map(_.toString).mkString\n\
    \            val numStrLen = numStr.length\n            val numStrLenMinusOne\
    \ = numStrLen - 1\n            val numStrLenMinusTwo = numStrLen - 2\n       \
    \     val numStrLenMinusThree = numStrLen - 3\n            val numStrLenMinusFour\
    \ = numStrLen - 4\n            val numStrLenMinusFive = numStrLen - 5\n      \
    \      val numStrLenMinusSix = numStrLen - 6\n            val numStrLenMinusSeven\
    \ = numStrLen - 7\n            val numStrLenMinusEight = numStrLen - 8\n     \
    \       val numStrLenMinusNine = numStrLen - 9\n            val numStrLenMinusTen\
    \ = numStrLen - 10\n            val numStrLenMinusEleven = numStrLen - 11\n  \
    \          val numStrLenMinusTwelve = numStrLen - 12\n            val numStrLenMinusThirteen\
    \ = numStrLen - 13\n            val numStrLenMinusFourteen = numStrLen - 14\n\
    \            val numStrLenMinusFifteen = numStrLen - 15\n            val numStrLenMinusSixteen\
    \ = numStrLen - 16\n            val numStrLenMinusSeventeen = numStrLen - 17\n\
    \            val numStrLenMinusEighteen = numStrLen - 18\n            val numStrLenMinusNineteen\
    \ = numStrLen - 19\n            val numStrLenMinusTwenty = numStrLen - 20\n  \
    \          val numStrLenMinusTwentyOne = numStrLen - 21\n            val numStrLenMinusTwentyTwo\
    \ = numStrLen - 22\n            val numStrLenMinusTwentyThree = numStrLen - 23\n\
    \            val numStrLenMinusTwentyFour = numStrLen - 24\n            val numStrLenMinusTwentyFive\
    \ = numStrLen - 25\n            val numStrLenMinusTwentySix = numStrLen - 26\n\
    \            val numStrLenMinusTwentySe", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        val nums = scala.collection.mutable.ListBuffer[Long]()\n        val numsStr\
    \ = scala.collection.mutable.ListBuffer[String]()\n        val numsStrLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLen = scala.collection.mutable.ListBuffer[Int]()\n    \
    \    val numsStrLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n     \
    \   val numsStrLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n   \
    \     val numsStrLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsStrLenLenLenLenLenLenLenLenLenLenLenLenLen", "        val roman\
    \ = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10, number.toInt)\n\
    \        val numsArray = nums.toArray\n        val numsArrayLength = numsArray.length\n\
    \        var i = 0\n        while (i < numsArrayLength) {\n            val num\
    \ = numsArray(i)\n            val digit = num % 10\n            val romanDigit\
    \ = if (digit > 0) roman.last.charAt(digit) else \"\"\n            roman.append(romanDigit)\n\
    \            num /= 10\n            i += 1\n        }\n        roman.mkString.toLowerCase",
  "        val roman = scala.collection.mutable.ArrayBuffer.empty[String]\n      \
    \  val nums = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val numsMap\
    \ = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap2 = scala.collection.mutable.HashMap.empty[Int,\
    \ Int]\n        val numsMap3 = scala.collection.mutable.HashMap.empty[Int, Int]\n\
    \        val numsMap4 = scala.collection.mutable.HashMap.empty[Int, Int]\n   \
    \     val numsMap5 = scala.collection.mutable.HashMap.empty[Int, Int]\n      \
    \  val numsMap6 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val\
    \ numsMap7 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap8\
    \ = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap9 = scala.collection.mutable.HashMap.empty[Int,\
    \ Int]\n        val numsMap10 = scala.collection.mutable.HashMap.empty[Int, Int]\n\
    \        val numsMap11 = scala.collection.mutable.HashMap.empty[Int, Int]\n  \
    \      val numsMap12 = scala.collection.mutable.HashMap.empty[Int, Int]\n    \
    \    val numsMap13 = scala.collection.mutable.HashMap.empty[Int, Int]\n      \
    \  val numsMap14 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val\
    \ numsMap15 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap16\
    \ = scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap17 =\
    \ scala.collection.mutable.HashMap.empty[Int, Int]\n        val numsMap18 = scala.collection.mutable.HashMap.empty[Int,\
    \ Int]\n        val numsMap19 = scala.collection.mutable.HashMap.empty[Int, Int]\n\
    \        val numsMap20 = scala.collection.mutable.HashMap.empty[Int, Int]\n  \
    \      val numsMap21 = scala.collection.mutable.HashMap.empty[Int, Int]\n    \
    \    val numsMap22 = scala.collection.mutable.HashMap.empty[Int, Int]\n      \
    \  val numsMap23 = scala.collection.mutable.HashMap.empty[Int, Int]\n        val\
    \ numsMap24 = scala.", "        val roman = mutable.ListBuffer[String]()\n   \
    \     val nums = scala.math.pow(10, number.toInt)\n        val numsLen = nums.length\n\
    \        val numsDigits = nums.toString.reverse.grouped(numsLen).map(_.mkString).reverse\n\
    \        val numsDigitsLen = numsDigits.length\n        val numsDigitsDigits =\
    \ numsDigits.toString.reverse.grouped(numsDigitsLen).map(_.mkString).reverse\n\
    \        val numsDigitsDigitsLen = numsDigitsDigits.length\n        val numsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDigitsDigits.length\n        val numsDigitsDigitsDigitsDigitsDigitsDigitsLen\
    \ = numsDigitsDigitsDigitsDig", "        val roman = mutable.ArrayBuffer(\n  \
    \          'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I')\n\
    \        val romanNum = mutable.ArrayBuffer(\n            'M', 'CM', 'D', 'CD',\
    \ 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I')\n        val romanNum2 = mutable.ArrayBuffer(\n\
    \            'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV',\
    \ 'I')\n        val romanNum3 = mutable.ArrayBuffer(\n            'M', 'CM', 'D',\
    \ 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I')\n        val romanNum4\
    \ = mutable.ArrayBuffer(\n            'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL',\
    \ 'X', 'IX', 'V', 'IV', 'I')\n        val romanNum5 = mutable.ArrayBuffer(\n \
    \           'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV',\
    \ 'I')\n        val romanNum6 = mutable.ArrayBuffer(\n            'M', 'CM', 'D',\
    \ 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I')\n        val romanNum7\
    \ = mutable.ArrayBuffer(\n            'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL',\
    \ 'X', 'IX', 'V', 'IV', 'I')\n        val romanNum8 = mutable.ArrayBuffer(\n \
    \           'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV',\
    \ 'I')\n        val romanNum9 = mutable.ArrayBuffer(\n            'M', 'CM', 'D',\
    \ 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I')\n        val romanNum10\
    \ = mutable.ArrayBuffer(\n            'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL',\
    \ 'X', 'IX', 'V', 'IV', 'I')\n        val romanNum11 = mutable.ArrayBuffer(\n\
    \            'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV',\
    \ 'I')\n        val romanNum12 = mutable.ArrayBuffer(\n            'M', 'CM',\
    \ 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I')\n        val romanNum13\
    \ = mutable.ArrayBuffer(\n            'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL',\
    \ 'X', 'IX', 'V', 'IV', 'I')\n        val romanNum14 = mut", "        val roman\
    \ = scala.collection.mutable.ListBuffer[String]()\n        val nums = scala.collection.mutable.ListBuffer[Int]()\n\
    \        val numsMap = scala.collection.mutable.Map[Int, String]()\n        val\
    \ numsMap2 = scala.collection.mutable.Map[Int, String]()\n        val numsMap3\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap4 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap5 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap6 = scala.collection.mutable.Map[Int, String]()\n        val\
    \ numsMap7 = scala.collection.mutable.Map[Int, String]()\n        val numsMap8\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap9 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap10 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap11 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap12 = scala.collection.mutable.Map[Int, String]()\n        val numsMap13\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap14 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap15 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap16 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap17 = scala.collection.mutable.Map[Int, String]()\n        val numsMap18\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap19 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap20 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap21 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap22 = scala.collection.mutable.Map[Int, String]()\n        val numsMap23\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap24 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap25 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap26 = scala.collection.mutable.Map[Int, String]", "       \
    \ val roman = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"D\",\"\
    CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n        val romanNum\
    \ = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"D\",\"CD\",\"C\"\
    ,\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n        val romanNum2 =\
    \ scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"D\",\"CD\",\"C\",\"\
    XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n        val romanNum3 = scala.collection.mutable.ArrayBuffer(\"\
    \",\"M\",\"CM\",\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\"\
    ,\"I\")\n        val romanNum4 = scala.collection.mutable.ArrayBuffer(\"\",\"\
    M\",\"CM\",\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"\
    I\")\n        val romanNum5 = scala.collection.mutable.ArrayBuffer(\"\",\"M\"\
    ,\"CM\",\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\"\
    )\n        val romanNum6 = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"\
    CM\",\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n\
    \        val romanNum7 = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\"\
    ,\"D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n   \
    \     val romanNum8 = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"\
    D\",\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n      \
    \  val romanNum9 = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"D\"\
    ,\"CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n        val\
    \ romanNum10 = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"D\",\"\
    CD\",\"C\",\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"I\")\n        val romanNum11\
    \ = scala.collection.mutable.ArrayBuffer(\"\",\"M\",\"CM\",\"D\",\"CD\",\"C\"\
    ,\"XC\",\"L\",\"XL\",\"X\",\"IX\",\"V\",\"IV\",\"", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.Map[Int, String]()\n        val numsMap2\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap3 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap4 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap5 = scala.collection.mutable.Map[Int, String]()\n        val\
    \ numsMap6 = scala.collection.mutable.Map[Int, String]()\n        val numsMap7\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap8 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap9 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap10 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap11 = scala.collection.mutable.Map[Int, String]()\n        val numsMap12\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap13 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap14 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap15 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap16 = scala.collection.mutable.Map[Int, String]()\n        val numsMap17\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap18 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap19 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap20 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap21 = scala.collection.mutable.Map[Int, String]()\n        val numsMap22\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap23 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap24 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap25 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap26 = scala.collection.mutable.Map[Int, String]", "        val roman\
    \ = scala.collection.mutable.ListBuffer.empty[String]\n        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsMap = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap5 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap9 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap14 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap19 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap24 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int,\
    \ Int]", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsString = scala.collection.mutable.ListBuffer.empty[String]\n        val\
    \ numsStringBuilder = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilderBuilder2 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder3 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder4 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder5 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder6 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder7 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder8 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder9 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder10 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder11 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder12 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder13 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder14 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder15 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder16 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder17 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder18 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder19 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder20 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder21 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder22 = scala.collection.mutable.ListBuffer.empty[StringBuilder]\n\
    \        val numsStringBuilder23 = scala.collection.", "        val roman = mutable.ArrayBuffer(\n\
    \            \"\",\n            \"M\",\n            \"CM\",\n            \"D\"\
    ,\n            \"CD\",\n            \"C\",\n            \"XC\",\n            \"\
    L\",\n            \"XL\",\n            \"X\",\n            \"IX\",\n         \
    \   \"V\",\n            \"IV\",\n            \"I\"\n        )\n        val romanNum\
    \ = number / 100\n        val remainder = number % 100\n        romanNum match\
    \ {\n            case 0 => roman(0)\n            case 1 => roman(1)\n        \
    \    case 2 => roman(1) + roman(0)\n            case 3 => roman(1) + roman(2)\
    \ + roman(0)\n            case 4 => roman(1) + roman(2) + roman(3) + roman(0)\n\
    \            case 5 => roman(1) + roman(2) + roman(3) + roman(4) + roman(0)\n\
    \            case 6 => roman(1) + roman(2) + roman(3) + roman(4) + roman(5) +\
    \ roman(0)\n            case 7 => roman(1) + roman(2) + roman(3) + roman(4) +\
    \ roman(5) + roman(6) + roman(0)\n            case 8 => roman(1) + roman(2) +\
    \ roman(3) + roman(4) + roman(5) + roman(6) + roman(7) + roman(0)\n          \
    \  case 9 => roman(1) + roman(2) + roman(3) + roman(4) + roman(5) + roman(6) +\
    \ roman(7) + roman(8) + roman(0)\n            case 10 => roman(1) + roman(2) +\
    \ roman(3) + roman(4) + roman(5) + roman(6) + roman(7) + roman(8) + roman(9) +\
    \ roman(0)\n            case 11 => roman(1) + roman(2) + roman(3) + roman(4) +\
    \ roman(5) + roman(6) + roman(7) + roman(8) + roman(9) + roman(10) + roman(0)\n\
    \            case 12 => roman(1) + roman(2) + roman(3) + roman(4) + roman(5) +\
    \ roman(6) + roman(7) + roman(8) + roman(9) + roman(10) + roman(11) + roman(0)\n\
    \            case 13 => roman(1) + roman(2) + roman(3) + roman(4) + roman(5) +\
    \ roman(6) + roman(7) + roman", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int, Int]", " \
    \       val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsStr = nums.toString.reverse\n        val numsStrLen\
    \ = numsStr.length\n        val numsStrArray = numsStr.toArray\n        val numsStrArrayLen\
    \ = numsStrArray.length\n        val numsStrArray2 = numsStrArray.dropRight(numsStrArrayLen)\n\
    \        val numsStrArray2Len = numsStrArray2.length\n        val numsStrArray3\
    \ = numsStrArray2.dropRight(numsStrArray2Len)\n        val numsStrArray3Len =\
    \ numsStrArray3.length\n        val numsStrArray4 = numsStrArray3.dropRight(numsStrArray3Len)\n\
    \        val numsStrArray4Len = numsStrArray4.length\n        val numsStrArray5\
    \ = numsStrArray4.dropRight(numsStrArray4Len)\n        val numsStrArray5Len =\
    \ numsStrArray5.length\n        val numsStrArray6 = numsStrArray5.dropRight(numsStrArray5Len)\n\
    \        val numsStrArray6Len = numsStrArray6.length\n        val numsStrArray7\
    \ = numsStrArray6.dropRight(numsStrArray6Len)\n        val numsStrArray7Len =\
    \ numsStrArray7.length\n        val numsStrArray8 = numsStrArray7.dropRight(numsStrArray7Len)\n\
    \        val numsStrArray8Len = numsStrArray8.length\n        val numsStrArray9\
    \ = numsStrArray8.dropRight(numsStrArray8Len)\n        val numsStrArray9Len =\
    \ numsStrArray9.length\n        val numsStrArray10 = numsStrArray9.dropRight(numsStrArray9Len)\n\
    \        val numsStrArray10Len = numsStrArray10.length\n        val numsStrArray11\
    \ = numsStrArray10.dropRight(numsStrArray10Len)\n        val numsStrArray11Len\
    \ = numsStrArray11.length\n        val numsStrArray12 = numsStrArray11.dropRight(numsStrArray11Len)\n\
    \        val numsStrArray12Len = numsStrArray12.length\n        val numsStrArray13\
    \ = numsStrArray12.dropRight(numsStr", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val romanNum = scala.collection.mutable.ListBuffer.empty[Int]\n     \
    \   var i = 1\n        while (number > 0) {\n            roman.append(romanNum.take(number).mkString(\"\
    \"))\n            romanNum.clear()\n            while (number >= i) {\n      \
    \          romanNum += i\n                number -= i\n                i += 1\n\
    \            }\n        }\n        roman.append(romanNum.mkString(\"\"))\n   \
    \     roman.mkString.toLowerCase", "        val roman = mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        for (i <- 0 until\
    \ nums) {\n            val num = scala.math.pow(10, i)\n            val remainder\
    \ = number - num\n            val romanNum = remainder / num\n            roman.append(romanNum.toString)\n\
    \            roman.append(if (remainder % num > 0) \"M\" else \"m\")\n       \
    \ }\n        roman.mkString", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.collection.mutable.ListBuffer[Int]()\n        val numsMap\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int, Int]()\n \
    \       ", "        val roman = mutable.ListBuffer.empty[String]\n        val\
    \ nums = scala.math.pow(2, number)\n        var i = 0\n        while (i < nums)\
    \ {\n            roman += scala.math.pow(10, i).toString.toLowerCase + roman.last\n\
    \            i += 1\n        }\n        roman.last", "        val roman = mutable.ArrayBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ArrayBuffer.empty[Long]\n       \
    \ val numsMap = new scala.collection.mutable.HashMap[Long, String]()\n       \
    \ val numsMap2 = new scala.collection.mutable.HashMap[Long, String]()\n      \
    \  val numsMap3 = new scala.collection.mutable.HashMap[Long, String]()\n     \
    \   val numsMap4 = new scala.collection.mutable.HashMap[Long, String]()\n    \
    \    val numsMap5 = new scala.collection.mutable.HashMap[Long, String]()\n   \
    \     val numsMap6 = new scala.collection.mutable.HashMap[Long, String]()\n  \
    \      val numsMap7 = new scala.collection.mutable.HashMap[Long, String]()\n \
    \       val numsMap8 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap9 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap10 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap11 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap12 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap13 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap14 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap15 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap16 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap17 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap18 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap19 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap20 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap21 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap22 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap23 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val numsMap24 = new scala.collection.mutable.HashMap[Long, String]()\n\
    \        val ", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        val nums = scala.collection.mutable.ListBuffer[Long]()\n        val numsMap\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap2 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap3 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap4 = scala.collection.mutable.Map[Long, String]()\n       \
    \ val numsMap5 = scala.collection.mutable.Map[Long, String]()\n        val numsMap6\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap7 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap8 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap9 = scala.collection.mutable.Map[Long, String]()\n       \
    \ val numsMap10 = scala.collection.mutable.Map[Long, String]()\n        val numsMap11\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap12 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap13 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap14 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap15 = scala.collection.mutable.Map[Long, String]()\n        val numsMap16\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap17 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap18 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap19 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap20 = scala.collection.mutable.Map[Long, String]()\n        val numsMap21\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap22 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap23 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap24 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap25 = scala.collection.mutable.Map[Long, String]()\n        val numsMap26\
    \ = scala.collection.mutable.Map[Long, String]", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsLength =\
    \ nums.length\n        val numsDigits = nums.map(_.toString).map(_.length)\n \
    \       val numsDigitSum = numsDigits.sum\n        val numsDigitSum2 = numsDigitSum\
    \ * numsDigitSum\n        val numsDigitSum3 = numsDigitSum2 * numsDigitSum\n \
    \       val numsDigitSum4 = numsDigitSum3 * numsDigitSum\n        val numsDigitSum5\
    \ = numsDigitSum4 * numsDigitSum\n        val numsDigitSum6 = numsDigitSum5 *\
    \ numsDigitSum\n        val numsDigitSum7 = numsDigitSum6 * numsDigitSum\n   \
    \     val numsDigitSum8 = numsDigitSum7 * numsDigitSum\n        val numsDigitSum9\
    \ = numsDigitSum8 * numsDigitSum\n        val numsDigitSum10 = numsDigitSum9 *\
    \ numsDigitSum\n        val numsDigitSum11 = numsDigitSum10 * numsDigitSum\n \
    \       val numsDigitSum12 = numsDigitSum11 * numsDigitSum\n        val numsDigitSum13\
    \ = numsDigitSum12 * numsDigitSum\n        val numsDigitSum14 = numsDigitSum13\
    \ * numsDigitSum\n        val numsDigitSum15 = numsDigitSum14 * numsDigitSum\n\
    \        val numsDigitSum16 = numsDigitSum15 * numsDigitSum\n        val numsDigitSum17\
    \ = numsDigitSum16 * numsDigitSum\n        val numsDigitSum18 = numsDigitSum17\
    \ * numsDigitSum\n        val numsDigitSum19 = numsDigitSum18 * numsDigitSum\n\
    \        val numsDigitSum20 = numsDigitSum19 * numsDigitSum\n        val numsDigitSum21\
    \ = numsDigitSum20 * numsDigitSum\n        val numsDigitSum22 = numsDigitSum21\
    \ * numsDigitSum\n        val numsDigitSum23 = numsDigitSum22 * numsDigitSum\n\
    \        val numsDigitSum24 = numsDigitSum23 * numsDigitSum\n        val numsDigitSum25\
    \ = numsDigitSum24 * numsDigitSum\n        val numsDigitSum26 = num", "      \
    \  val roman = scala.collection.mutable.ListBuffer.empty[String]\n        val\
    \ digits = scala.collection.mutable.ListBuffer.empty[Int]\n        val numDigits\
    \ = scala.math.log10(number).toInt\n        var i = 1\n        while (i <= numDigits)\
    \ {\n            val digit = number % 10\n            number /= 10\n         \
    \   digits += digit\n            roman += romanDigit(digit)\n            i +=\
    \ 1\n        }\n        roman.reverse.mkString(\"\")", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        val romanNum = scala.collection.mutable.ListBuffer[Int]()\n        val\
    \ numDigits = scala.math.log10(number).toInt\n        val numDigitsInt = scala.math.pow(10,\
    \ numDigits - 1)\n        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n\
    \        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt\
    \ = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt = scala.math.pow(10,\
    \ numDigits - 1)\n        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n\
    \        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt\
    \ = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt = scala.math.pow(10,\
    \ numDigits - 1)\n        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n\
    \        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt\
    \ = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt = scala.math.pow(10,\
    \ numDigits - 1)\n        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n\
    \        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt\
    \ = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt = scala.math.pow(10,\
    \ numDigits - 1)\n        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n\
    \        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt\
    \ = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt = scala.math.pow(10,\
    \ numDigits - 1)\n        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n\
    \        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt\
    \ = scala.math.pow(10, numDigits - 1)\n        val numDigitsInt = scala.math.pow(10,\
    \ numDigits - 1)\n        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n\
    \        val numDigitsInt = scala.math.pow(10, numDigits - 1)\n        val numDigit",
  "        val roman = scala.collection.mutable.ListBuffer[String]()\n        var\
    \ romanNum = number\n        var romanNumStr = \"\"\n        var romanNumStrLen\
    \ = 0\n        while (romanNum > 0) {\n            val remainder = romanNum %\
    \ 1000\n            romanNum /= 1000\n            romanNumStr += romanNumStrLen.toString\n\
    \            romanNumStrLen += 1\n            if (remainder >= 1000) {\n     \
    \           romanNumStr += (remainder % 1000).toString\n                romanNumStrLen\
    \ += 1\n            }\n        }\n        roman.clear()\n        roman.append(romanNumStr)\n\
    \        roman.mkString.toLowerCase", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        var index = 0\n        while (number > 0) {\n            roman.append(romanDigit(number\
    \ % 10, index))\n            number /= 10\n            index += 1\n        }\n\
    \        roman.reverse", "        val roman = mutable.ArrayBuffer.empty[String]\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        for (i <- 0 until\
    \ nums) {\n            val num = scala.math.pow(10, i.toInt)\n            val\
    \ numStr = num.toString.toUpperCase\n            val numStrLen = numStr.length\n\
    \            val numStrDigits = numStr.grouped(numStrLen).map(_.toInt)\n     \
    \       val numStrDigitSum = numStrDigits.sum\n            val numStrDigitDiff\
    \ = numStrDigitSum - numStrDigits(0)\n            val numStrDigitDiffLen = numStrDigitDiff.length\n\
    \            val numStrDigitDiffDigits = numStrDigitDiff.grouped(numStrDigitDiffLen).map(_.toInt)\n\
    \            val numStrDigitDiffDigitSum = numStrDigitDiffDigits.sum\n       \
    \     val numStrDigitDiffDigitDiff = numStrDigitDiffDigitSum - numStrDigitDiffDigits(0)\n\
    \            val numStrDigitDiffDigitDiffLen = numStrDigitDiffDigitDiff.length\n\
    \            val numStrDigitDiffDigitDiffDigits = numStrDigitDiffDigitDiff.grouped(numStrDigitDiffDigitDiffLen).map(_.toInt)\n\
    \            val numStrDigitDiffDigitDiffDigitSum = numStrDigitDiffDigitDiffDigits.sum\n\
    \            val numStrDigitDiffDigitDiffDigitDiff = numStrDigitDiffDigitDiffDigitSum\
    \ - numStrDigitDiffDigitDiffDigits(0)\n            val numStrDigitDiffDigitDiffDigitDiffLen\
    \ = numStrDigitDiffDigitDiffDigitDiff.length\n            val numStrDigitDiffDigitDiffDigitDiffDigits\
    \ = numStrDigitDiffDigitDiffDigitDiff.grouped(numStrDigitDiffDigitDiffDigitDiffLen).map(_.toInt)\n\
    \            val numStrDigitDiffDigitDiffDigitDiffDigitSum = numStrDigitDiffDigitDiffDigitDiffDigits.sum\n\
    \            val numStrDigitDiffDigitDiffDigitDiffDigitDiff = numStrDigitDiffDigitDiffDigitDiffDigitSum\
    \ - numStrDigitDiffDigitDiffDigitDiffDigits(0)\n            val numStrDigitDiffDigitDiffDigitDiffDigitDiffLen\
    \ = numStrDigitDiffDigitDiffDigitDiffDigitDiffDigits.length\n            val numStrDigitDiffDigitDiffDigitDiffDigitDiffDigits\
    \ = numStrDigitDiffDigitDiffDigitDiffDigitDiff.grouped(numStrDigitDiffDigitDiffDigitDiffDigitDiffLen).map(_.toInt)\n\
    \            val numStrDigitDiffDigitDiff", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.Map[Int, String]()\n        val numsMap2\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap3 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap4 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap5 = scala.collection.mutable.Map[Int, String]()\n        val\
    \ numsMap6 = scala.collection.mutable.Map[Int, String]()\n        val numsMap7\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap8 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap9 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap10 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap11 = scala.collection.mutable.Map[Int, String]()\n        val numsMap12\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap13 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap14 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap15 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap16 = scala.collection.mutable.Map[Int, String]()\n        val numsMap17\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap18 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap19 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap20 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap21 = scala.collection.mutable.Map[Int, String]()\n        val numsMap22\
    \ = scala.collection.mutable.Map[Int, String]()\n        val numsMap23 = scala.collection.mutable.Map[Int,\
    \ String]()\n        val numsMap24 = scala.collection.mutable.Map[Int, String]()\n\
    \        val numsMap25 = scala.collection.mutable.Map[Int, String]()\n       \
    \ val numsMap26 = scala.collection.mutable.Map[Int, String]", "        val roman\
    \ = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10, number.toInt)\n\
    \        for (i <- 0 until nums) {\n            val num = scala.math.pow(10, i)\n\
    \            if (num > 0) {\n                val romanNum = scala.math.pow(10,\
    \ num).toInt\n                roman += romanNum.toString\n            }\n    \
    \    }\n        roman.foldLeft(\"\")(_ + _)", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Long]\n        val\
    \ numsStr = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStrLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLenLen",
  "        val roman = mutable.ArrayBuffer(\n            \"M\", \"CM\", \"D\", \"\
    CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n    \
    \    )\n        val romanNum = mutable.ArrayBuffer(\n            \"M\", \"D\"\
    , \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n        )\n\
    \        val romanNum2 = mutable.ArrayBuffer(\n            \"M\", \"D\", \"C\"\
    , \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n        )\n    \
    \    val romanNum3 = mutable.ArrayBuffer(\n            \"M\", \"D\", \"C\", \"\
    XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val\
    \ romanNum4 = mutable.ArrayBuffer(\n            \"M\", \"D\", \"C\", \"XC\", \"\
    L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum5\
    \ = mutable.ArrayBuffer(\n            \"M\", \"D\", \"C\", \"XC\", \"L\", \"XL\"\
    , \"X\", \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum6 = mutable.ArrayBuffer(\n\
    \            \"M\", \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\"\
    , \"IV\", \"I\"\n        )\n        val romanNum7 = mutable.ArrayBuffer(\n   \
    \         \"M\", \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"\
    IV\", \"I\"\n        )\n        val romanNum8 = mutable.ArrayBuffer(\n       \
    \     \"M\", \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\"\
    , \"I\"\n        )\n        val romanNum9 = mutable.ArrayBuffer(\n           \
    \ \"M\", \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"\
    I\"\n        )\n        val romanNum10 = mutable.ArrayBuffer(\n            \"\
    M\", \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n\
    \        )\n        val romanNum11 = mutable.ArrayBuffer(\n            \"M\",\
    \ \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n \
    \       )\n        val romanNum12 = mutable.ArrayBuffer(\n            \"M\", \"\
    D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n     \
    \   )\n        val romanNum13 = mutable.ArrayBuffer(\n            \"M\", \"",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsArray = nums.toArray\n        val numsArrayLength\
    \ = numsArray.length\n        val numsArrayMax = numsArrayLength - 1\n       \
    \ var i = 0\n        while (i < numsArrayLength) {\n            val numsArrayIndex\
    \ = i\n            val numsArrayValue = numsArray(numsArrayIndex)\n          \
    \  if (numsArrayValue == 1) {\n                roman.append(\"x\")\n         \
    \   } else if (numsArrayValue == 5) {\n                roman.append(\"v\")\n \
    \           } else if (numsArrayValue == 10) {\n                roman.append(\"\
    l\")\n            } else if (numsArrayValue == 50) {\n                roman.append(\"\
    c\")\n            } else if (numsArrayValue == 100) {\n                roman.append(\"\
    d\")\n            } else if (numsArrayValue == 500) {\n                roman.append(\"\
    cm\")\n            } else if (numsArrayValue == 1000) {\n                roman.append(\"\
    m\")\n            } else if (numsArrayValue == 5000) {\n                roman.append(\"\
    mm\")\n            } else if (numsArrayValue == 10000) {\n                roman.append(\"\
    xm\")\n            } else if (numsArrayValue == 100000) {\n                roman.append(\"\
    xxm\")\n            } else if (numsArrayValue == 1000000) {\n                roman.append(\"\
    xxxm\")\n            } else if (numsArrayValue == 10000000) {\n              \
    \  roman.append(\"xxxxm\")\n            } else if (numsArrayValue == 100000000)\
    \ {\n                roman.append(\"xxxxxm\")\n            } else if (numsArrayValue\
    \ == 1000000000) {\n                roman.append(\"xxxxxxm\")\n            } else\
    \ if (numsArrayValue == 10000000000) {\n                roman.append(\"xxxxxxxm\"\
    )\n            } else if (numsArrayValue == 100000000000) {\n                roman.append(\"\
    xxxxxxxxm\")\n            } else if (numsArrayValue == 1000000000000) {\n    \
    \            roman.append(\"xxxxxxxxxm\")\n            } else if (numsArrayValue\
    \ == 10000000000000) {\n                roman.append(\"xxxxxxxxxxm\")\n      \
    \      } else if (numsArrayValue == 100000000000000) {\n                roman.append(\"\
    xxxxxxxxxxxm\")\n            } else if (numsArrayValue == 1000000000000000) {\n\
    \                roman.append(\"xxxxxxxxxxxxm\")\n            } else if (numsArrayValue\
    \ == 10000000000000000) {\n                roman.append(\"xxxxxxxxxxxxxm\")\n\
    \            } else if (numsArrayValue == 100000000000000000) {\n            \
    \    roman.append(\"xxxxxxxxxxxxxxm\")\n            } else if (numsArrayValue\
    \ == 1000000000000000000) {\n                roman.append(\"xxxxxxxxxxxxxxx",
  "        val roman = mutable.ArrayBuffer.empty[String]\n        val nums = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        val numsMap = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap2 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap3 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap4 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap5 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap6 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap7 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap8 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap9 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap10 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap11 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap12 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap13 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap14 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap15 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap16 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap17 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap18 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap19 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap20 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap21 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap22 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap23 = scala.collection.mutable.HashMap.empty[Long, String]\n\
    \        val numsMap24 = scala.collection.mutable.", "        val roman = mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsStr = nums.toString.reverse\n\
    \        val numsArr = numsStr.split(\"\\\\.\")\n        val numsArrLength = numsArr.length\n\
    \        val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val numsArrLength = numsArrLength - 1\n        val numsArrLength\
    \ = numsArrLength - 1\n        val numsArrLength = numsArrLength - 1\n       \
    \ val numsArrLength = numsArrLength - 1\n        val numsArrLength = numsArrLength\
    \ - 1\n        val num", "        val roman = mutable.ListBuffer[String]()\n \
    \       val nums = scala.math.pow(10, number.toInt)\n        val numsStr = nums.toString.reverse\n\
    \        val numsStrLen = numsStr.length\n        val numsStrLen2 = numsStrLen\
    \ / 2\n        val numsStrLen3 = numsStrLen / 3\n        val numsStrLen4 = numsStrLen\
    \ / 4\n        val numsStrLen5 = numsStrLen / 5\n        val numsStrLen6 = numsStrLen\
    \ / 6\n        val numsStrLen7 = numsStrLen / 7\n        val numsStrLen8 = numsStrLen\
    \ / 8\n        val numsStrLen9 = numsStrLen / 9\n        val numsStrLen10 = numsStrLen\
    \ / 10\n        val numsStrLen11 = numsStrLen / 11\n        val numsStrLen12 =\
    \ numsStrLen / 12\n        val numsStrLen13 = numsStrLen / 13\n        val numsStrLen14\
    \ = numsStrLen / 14\n        val numsStrLen15 = numsStrLen / 15\n        val numsStrLen16\
    \ = numsStrLen / 16\n        val numsStrLen17 = numsStrLen / 17\n        val numsStrLen18\
    \ = numsStrLen / 18\n        val numsStrLen19 = numsStrLen / 19\n        val numsStrLen20\
    \ = numsStrLen / 20\n        val numsStrLen21 = numsStrLen / 21\n        val numsStrLen22\
    \ = numsStrLen / 22\n        val numsStrLen23 = numsStrLen / 23\n        val numsStrLen24\
    \ = numsStrLen / 24\n        val numsStrLen25 = numsStrLen / 25\n        val numsStrLen26\
    \ = numsStrLen / 26\n        val numsStrLen27 = numsStrLen / 27\n        val numsStrLen28\
    \ = numsStrLen / 28\n        val numsStrLen29 = numsStrLen / 29\n        val numsStrLen30\
    \ = numsStrLen / 30\n        val numsStrLen31 = numsStrLen / 31\n        val numsStrLen32\
    \ = numsStrLen / 32\n        val numsStrLen33", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsArray =\
    \ nums.toArray\n        for (i <- 0 until numsArray.length) {\n            val\
    \ num = numsArray(i)\n            val romanNum = num.toString.toRoman\n      \
    \      roman.append(romanNum)\n        }\n        roman.mkString(\"\")", "   \
    \     val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums) {\n            val num = scala.math.pow(10,\
    \ i.toInt)\n            val romanNum = num / nums.toDouble\n            roman\
    \ += romanNum.toString\n        }\n        roman.foldLeft(\"\")(_ + _.toLowerCase)",
  "        val roman = scala.collection.mutable.ListBuffer[String]()\n        var\
    \ i = number\n        while(i >= 1000) {\n            roman.insert(0, roman.last.substring(0,\
    \ roman.last.length - 1) + \"m\")\n            i -= 1000\n        }\n        while(i\
    \ >= 100) {\n            roman.insert(0, roman.last.substring(0, roman.last.length\
    \ - 1) + \"c\")\n            i -= 100\n        }\n        while(i >= 10) {\n \
    \           roman.insert(0, roman.last.substring(0, roman.last.length - 1) + \"\
    d\")\n            i -= 10\n        }\n        while(i >= 1) {\n            roman.insert(0,\
    \ roman.last.substring(0, roman.last.length - 1) + \"x\")\n            i -= 1\n\
    \        }\n        roman.insert(0, roman.last.substring(0, roman.last.length\
    \ - 1) + \"i\")\n        roman.mkString", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        val nums = scala.collection.mutable.ListBuffer[Long]()\n        val numsMap\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap2 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap3 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap4 = scala.collection.mutable.Map[Long, String]()\n       \
    \ val numsMap5 = scala.collection.mutable.Map[Long, String]()\n        val numsMap6\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap7 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap8 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap9 = scala.collection.mutable.Map[Long, String]()\n       \
    \ val numsMap10 = scala.collection.mutable.Map[Long, String]()\n        val numsMap11\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap12 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap13 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap14 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap15 = scala.collection.mutable.Map[Long, String]()\n        val numsMap16\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap17 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap18 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap19 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap20 = scala.collection.mutable.Map[Long, String]()\n        val numsMap21\
    \ = scala.collection.mutable.Map[Long, String]()\n        val numsMap22 = scala.collection.mutable.Map[Long,\
    \ String]()\n        val numsMap23 = scala.collection.mutable.Map[Long, String]()\n\
    \        val numsMap24 = scala.collection.mutable.Map[Long, String]()\n      \
    \  val numsMap25 = scala.collection.mutable.Map[Long, String]()\n        val numsMap26\
    \ = scala.collection.mutable.Map[Long, String]", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsArray =\
    \ nums.toArray\n        val numsArrayLength = numsArray.length\n        for (i\
    \ <- 0 until numsArrayLength) {\n            val num = numsArray(i)\n        \
    \    val romanDigit = num / 100\n            val romanDigitString = romanDigit.toString.toUpperCase\n\
    \            val romanDigitStringLength = romanDigitString.length\n          \
    \  val romanDigitStringWithSpaces = romanDigitString + \" \" * (romanDigitStringLength\
    \ - 1)\n            val romanDigitStringWithSpacesLength = romanDigitStringWithSpaces.length\n\
    \            val romanDigitStringWithSpacesWithSpaces = romanDigitStringWithSpaces\
    \ + \" \" * (romanDigitStringWithSpacesLength - 1)\n            val romanDigitStringWithSpacesWithSpacesLength\
    \ = romanDigitStringWithSpacesWithSpaces.length\n            val romanDigitStringWithSpacesWithSpacesWithSpaces\
    \ = romanDigitStringWithSpacesWithSpaces + \" \" * (romanDigitStringWithSpacesWithSpacesLength\
    \ - 1)\n            val romanDigitStringWithSpacesWithSpacesWithSpacesLength =\
    \ romanDigitStringWithSpacesWithSpacesWithSpaces.length\n            val romanDigitStringWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = romanDigitStringWithSpacesWithSpacesWithSpaces + \" \" * (romanDigitStringWithSpacesWithSpacesWithSpacesLength\
    \ - 1)\n            val romanDigitStringWithSpacesWithSpacesWithSpacesWithSpacesLength\
    \ = romanDigitStringWithSpacesWithSpacesWithSpacesWithSpaces.length\n        \
    \    val romanDigitStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces =\
    \ romanDigitStringWithSpacesWithSpacesWithSpacesWithSpaces + \" \" * (romanDigitStringWithSpacesWithSpacesWithSpacesWithSpacesLength\
    \ - 1)\n            val romanDigitStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesLength\
    \ = romanDigitStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces.length\n\
    \            val romanDigitStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces\
    \ = romanDigitStringWithSpacesWithSpacesWithSpacesWithSpacesWithSpaces + \" \"\
    \ * (romanDigitStringWithSpacesWithSpa", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsStr = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStrLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStrLenLenLenLenLenLenLenLenLenLenLenLenLen",
  "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n       \
    \ var i = number\n        while(i >= 1000) {\n            roman.insert(0, \"M\"\
    )\n            i -= 1000\n        }\n        while(i >= 100) {\n            roman.insert(0,\
    \ \"C\")\n            i -= 100\n        }\n        while(i >= 10) {\n        \
    \    roman.insert(0, \"D\")\n            i -= 10\n        }\n        while(i >=\
    \ 1) {\n            roman.insert(0, \"L\")\n            i -= 1\n        }\n  \
    \      roman.insert(0, \"X\")\n        roman.toString", "        val roman = mutable.ArrayBuffer(\n\
    \            \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\"\
    , \"IX\", \"X\", \"XI\", \"XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\"\
    , \"XVIII\", \"XIX\", \"XX\", \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\"\
    , \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\", \"XXXI\", \"XXXII\", \"\
    XXXIII\", \"XXXIV\", \"XXXV\", \"XXXVI\", \"XXXVII\", \"XXXVIII\", \"XXXIX\",\
    \ \"XL\", \"L\", \"LI\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\"\
    , \"LVIII\", \"LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\"\
    , \"LXVI\", \"LXVII\", \"LXVIII\", \"LXIX\", \"LXX\", \"LXXI\", \"LXXII\", \"\
    LXXIII\", \"LXXIV\", \"LXXV\", \"LXXVI\", \"LXXVII\", \"LXXVIII\", \"LXXIX\",\
    \ \"LXXX\", \"LXXXI\", \"LXXXII\", \"LXXXIII\", \"LXXXIV\", \"LXXXV\", \"LXXXVI\"\
    , \"LXXXVII\", \"LXXXVIII\", \"LXXXIX\", \"XC\", \"C\", \"CI\", \"CII\", \"CIV\"\
    , \"CV\", \"CVI\", \"CVII\", \"CVIII\", \"CIX\", \"CX\", \"CXI\", \"CXII\", \"\
    CXIII\", \"CXIV\", \"CXV\", \"CXVI\", \"CXVII\", \"CXVIII\", \"CXIX\", \"CXX\"\
    , \"CXXI\", \"CXXII\", \"CXXIII\", \"CXXIV\", \"CXXV\", \"CXXVI\", \"CXXVII\"\
    , \"CXXVIII\", \"CXXIX\", \"CXXX\", \"CXXXI\", \"CXXXII\", \"CXXXIII\", \"CXXXIV\"\
    , \"CXXXV\", \"CXXXVI\", \"CXXXVII\", \"CXXXVIII\", \"CXXXIX\", \"CXL\", \"CL\"\
    , \"LI\", \"LII\", \"LIII\", \"LIV\", \"LV\", \"LVI\", \"LVII\", \"LVIII\", \"\
    LIX\", \"LX\", \"LXI\", \"LXII\", \"LXIII\", \"LXIV\", \"LXV\", \"LXVI\", \"LXVII\"\
    , \"", "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsArray = nums.toArray\n        val numsArrayLength\
    \ = numsArray.length\n        val numsArrayCopy = numsArray.clone()\n        val\
    \ numsArrayCopyLength = numsArrayCopy.length\n        val numsArrayCopyReverse\
    \ = numsArrayCopy.reverse\n        val numsArrayCopyReverseLength = numsArrayCopyReverse.length\n\
    \        val numsArrayCopyReverseReverse = numsArrayCopyReverse.reverse\n    \
    \    val numsArrayCopyReverseReverseLength = numsArrayCopyReverseReverse.length\n\
    \        val numsArrayCopyReverseReverseReverse = numsArrayCopyReverseReverse.reverse.reverse\n\
    \        val numsArrayCopyReverseReverseReverseLength = numsArrayCopyReverseReverseReverse.length\n\
    \        val numsArrayCopyReverseReverseReverse = numsArrayCopyReverseReverse.reverse.reverse.reverse\n\
    \        val numsArrayCopyReverseReverseReverseLength = numsArrayCopyReverseReverseReverse.length\n\
    \        val numsArrayCopyReverseReverseReverse = numsArrayCopyReverseReverse.reverse.reverse.reverse.reverse\n\
    \        val numsArrayCopyReverseReverseReverseLength = numsArrayCopyReverseReverseReverse.length\n\
    \        val numsArrayCopyReverseReverseReverse = numsArrayCopyReverseReverse.reverse.reverse.reverse.reverse\n\
    \        val numsArrayCopyReverseReverseReverseLength = numsArrayCopyReverseReverseReverse.length\n\
    \        val numsArrayCopyReverseReverseReverse = numsArrayCopyReverseReverse.reverse.reverse.reverse.reverse\n\
    \        val numsArrayCopyReverseReverseReverseLength = numsArrayCopyReverseReverseReverse.length\n\
    \        val numsArrayCopyReverseReverseReverse = numsArrayCopyReverseReverse.reverse.reverse.reverse.reverse.reverse\n\
    \        val numsArrayCopyReverseReverseReverseLength = numsArrayCopyReverseReverseReverse.length\n\
    \        val numsArrayCopyReverseReverseReverse = numsArrayCopyReverseReverse.reverse.reverse.reverse.reverse.reverse\n\
    \        val numsArrayCopyReverseReverseReverseLength = numsArrayCopyReverseReverseReverse.length\n\
    \        val numsArrayCopyReverseReverseReverse = numsArrayCopyReverseReverse.reverse.reverse.reverse.reverse.reverse.reverse\n\
    \        val numsArrayCopyReverseReverseReverseLength = numsArrayCopyReverseReverseReverse.length\n\
    \        val numsArrayCopyReverseReverseReverse = numsArrayCopyReverseReverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse.reverse",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums) {\n            val num = scala.math.pow(10,\
    \ i)\n            val numStr = num.toString.toCharArray\n            val numStrLen\
    \ = numStr.length\n            val numStrLen2 = numStrLen / 2\n            val\
    \ numStrLen3 = numStrLen / 3\n            val numStrLen4 = numStrLen / 4\n   \
    \         val numStrLen5 = numStrLen / 5\n            val numStrLen6 = numStrLen\
    \ / 6\n            val numStrLen7 = numStrLen / 7\n            val numStrLen8\
    \ = numStrLen / 8\n            val numStrLen9 = numStrLen / 9\n            val\
    \ numStrLen10 = numStrLen / 10\n            val numStrLen11 = numStrLen / 11\n\
    \            val numStrLen12 = numStrLen / 12\n            val numStrLen13 = numStrLen\
    \ / 13\n            val numStrLen14 = numStrLen / 14\n            val numStrLen15\
    \ = numStrLen / 15\n            val numStrLen16 = numStrLen / 16\n           \
    \ val numStrLen17 = numStrLen / 17\n            val numStrLen18 = numStrLen /\
    \ 18\n            val numStrLen19 = numStrLen / 19\n            val numStrLen20\
    \ = numStrLen / 20\n            val numStrLen21 = numStrLen / 21\n           \
    \ val numStrLen22 = numStrLen / 22\n            val numStrLen23 = numStrLen /\
    \ 23\n            val numStrLen24 = numStrLen / 24\n            val numStrLen25\
    \ = numStrLen / 25\n            val numStrLen26 = numStrLen / 26\n           \
    \ val numStrLen27 = numStrLen / 27\n            val numStrLen28 = numStrLen /\
    \ 28\n            val numStrLen29 = numStrLen / 29\n            val numStrLen30\
    \ = numStrLen / 30\n            val numStrLen31 = numStrLen / 31\n           \
    \ val numStrLen32 = numStrLen / 32\n            val numStrLen33 = numStrLen /\
    \ 33\n            val numStrLen34 = numStrLen / 34\n            val numStrLen35\
    \ = numStrLen / 35\n            val numStrLen36 = numStrLen / 36\n            ",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums.size) {\n            val num =\
    \ nums(i)\n            val digit = num / 100\n            val hundreds = num %\
    \ 100\n            val hundredsString = if (hundreds == 0) \"M\" else if (hundreds\
    \ == 1) \"CM\" else \"D\"\n            val tens = num / 10\n            val tensString\
    \ = if (tens == 0) \"C\" else if (tens == 1) \"XC\" else \"L\"\n            val\
    \ ones = num % 10\n            val onesString = if (ones == 0) \"X\" else if (ones\
    \ == 1) \"XL\" else \"X\"\n            roman.append(if (digit == 0) onesString\
    \ else tensString)\n            roman.append(if (digit == 0) onesString else hundredsString)\n\
    \        }\n        roman.mkString.toLowerCase", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        for (i <- 0 until\
    \ nums) {\n            val num = (number / nums).toInt\n            val romanNum\
    \ = if (num > 0) nums.toString.substring(i, i + 1) else \"\"\n            roman.append(romanNum)\n\
    \        }\n        roman.mkString", "        val roman = scala.collection.mutable.ArrayBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap2\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap3\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap4\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap5\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap6\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap7\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap8\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap9\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap10\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap11\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap12\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap13\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap14\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap15\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap16\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap17\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap18\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap19\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap20\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap21\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap22\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap23\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap24\
    \ = scala.", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        val romanNum = scala.collection.mutable.ListBuffer[Int]()\n        var\
    \ romanNumNum = 0\n        var romanNumNumNum = 0\n        var romanNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNum = 0\n        var romanNumNumNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNumNumNum = 0\n        var romanNumNumNumNumNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNumNumNumNumNum = 0\n        var romanNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNumNumNumNumNumNum = 0\n        var romanNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNumNumNumNumNumNum = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNum = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ romanNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ romanNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ romanNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ romanNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ romanNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var romanNumNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ romanNumNumNumNumNumNumNumNumNumNum", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap2\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap3\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap4\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap5\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap6\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap7\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap8\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap9\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap10\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap11\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap12\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap13\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap14\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap15\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap16\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap17\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap18\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap19\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap20\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap21\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap22\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap23\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap24\
    \ = scala.", "        val roman = mutable.ListBuffer[String]()\n        var romanNum\
    \ = number\n        while(romanNum > 0){\n            roman += romanNum % 10.toString\n\
    \            romanNum /= 10\n        }\n        roman.reverse.mkString.toLowerCase",
  "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n       \
    \ val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen", "        val roman\
    \ = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10, number.toInt)\n\
    \        val numsReversed = scala.math.pow(10, number.toInt.reverse)\n       \
    \ val numsReversedReversed = scala.math.pow(10, number.toInt.reverse.reverse)\n\
    \        val numsHalf = scala.math.pow(10, number.toInt.toDouble/10)\n       \
    \ val numsHalfReversed = scala.math.pow(10, number.toInt.toDouble/10.reverse)\n\
    \        val numsHalfReversedReversed = scala.math.pow(10, number.toInt.toDouble/10.reverse.reverse)\n\
    \        val numsQuarter = scala.math.pow(10, number.toInt.toDouble/25)\n    \
    \    val numsQuarterReversed = scala.math.pow(10, number.toInt.toDouble/25.reverse)\n\
    \        val numsQuarterReversedReversed = scala.math.pow(10, number.toInt.toDouble/25.reverse.reverse)\n\
    \        val numsHalfHalf = scala.math.pow(10, number.toInt.toDouble/50)\n   \
    \     val numsHalfHalfReversed = scala.math.pow(10, number.toInt.toDouble/50.reverse)\n\
    \        val numsHalfHalfReversedReversed = scala.math.pow(10, number.toInt.toDouble/50.reverse.reverse)\n\
    \        val numsQuarterQuarter = scala.math.pow(10, number.toInt.toDouble/75)\n\
    \        val numsQuarterQuarterReversed = scala.math.pow(10, number.toInt.toDouble/75.reverse)\n\
    \        val numsQuarterQuarterReversedReversed = scala.math.pow(10, number.toInt.toDouble/75.reverse.reverse)\n\
    \        val numsHalfHalfHalf = scala.math.pow(10, number.toInt.toDouble/100)\n\
    \        val numsHalfHalfHalfReversed = scala.math.pow(10, number.toInt.toDouble/100.reverse)\n\
    \        val numsHalfHalfHalfReversedReversed = scala.math.pow(10, number.toInt.toDouble/100.reverse.reverse)\n\
    \        val numsHalfHalfHalfHalf = scala.math.pow(10, number.toInt.toDouble/500)\n\
    \        val numsHalfHalfHalfHalfReversed = scala.math.pow(10, number.toInt.toDouble/500.reverse)\n\
    \        val numsHalfHalfHalfHalfReversedReversed = scala.math.pow(10, number.toInt.toDouble/500.reverse.reverse)\n\
    \        val numsHalfHalfHalfHalfHalf = ", "        val roman = mutable.ArrayBuffer(\n\
    \            \"\",\n            \"M\",\n            \"CM\",\n            \"D\"\
    ,\n            \"CD\",\n            \"C\",\n            \"XC\",\n            \"\
    L\",\n            \"XL\",\n            \"X\",\n            \"IX\",\n         \
    \   \"V\",\n            \"IV\",\n            \"I\"\n        )\n        val romanNum\
    \ = number / 100\n        val romanDigit = number % 100\n        roman.updated(romanNum,\
    \ romanDigit)\n        roman.takeWhile(x => x.nonEmpty).mkString", "        val\
    \ roman = scala.collection.mutable.ListBuffer.empty[String]\n        val nums\
    \ = scala.collection.mutable.ListBuffer.empty[Long]\n        val numsMap = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap2 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap3 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap4 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap5 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap6 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap7 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap8 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap9 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap10 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap11 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap12 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap13 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap14 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap15 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap16 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap17 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap18 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap19 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap20 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap21 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap22 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap23 = scala.collection.mutable.HashMap.empty[Long,\
    \ String]\n        val numsMap24 = scala.", "        val roman = scala.collection.mutable.ListBuffer[String]()\n\
    \        val nums = scala.collection.mutable.ListBuffer[Int]()\n        val numsMap\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap2 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap3 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap4 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap5\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap6 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap7 = scala.collection.mutable.Map[Int, Int]()\n  \
    \      val numsMap8 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap9\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap10 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap11 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap12 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap13 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap14\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap15 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap16 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap17 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap18 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap19\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap20 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap21 = scala.collection.mutable.Map[Int, Int]()\n \
    \       val numsMap22 = scala.collection.mutable.Map[Int, Int]()\n        val\
    \ numsMap23 = scala.collection.mutable.Map[Int, Int]()\n        val numsMap24\
    \ = scala.collection.mutable.Map[Int, Int]()\n        val numsMap25 = scala.collection.mutable.Map[Int,\
    \ Int]()\n        val numsMap26 = scala.collection.mutable.Map[Int, Int]", " \
    \       val roman = mutable.ArrayBuffer.empty[String]\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        val numsArray = nums.toArray.sortBy(_._1).reverse\n \
    \       val numsArrayLength = numsArray.length\n        val numsArrayIndex = 0\n\
    \        val numsArrayElement = numsArray(numsArrayIndex)\n        val numsArrayElementLength\
    \ = numsArrayElement.length\n        val numsArrayElementIndex = 0\n        val\
    \ numsArrayElementElement = numsArrayElement(numsArrayElementIndex)\n        val\
    \ numsArrayElementElementLength = numsArrayElementElement.length\n        val\
    \ numsArrayElementElementIndex = 0\n        val numsArrayElementElementElement\
    \ = numsArrayElement(numsArrayElementElementIndex)\n        val numsArrayElementElementElementLength\
    \ = numsArrayElementElementElement.length\n        val numsArrayElementElementElementIndex\
    \ = 0\n        val numsArrayElementElementElementElement = numsArrayElement(numsArrayElementElementElementIndex)\n\
    \        val numsArrayElementElementElementElementLength = numsArrayElementElementElementElement.length\n\
    \        val numsArrayElementElementElementElementIndex = 0\n        val numsArrayElementElementElementElementElement\
    \ = numsArrayElement(numsArrayElementElementElementIndex)\n        val numsArrayElementElementElementElementElementLength\
    \ = numsArrayElementElementElementElementElement.length\n        val numsArrayElementElementElementElementElementIndex\
    \ = 0\n        val numsArrayElementElementElementElementElementElement = numsArrayElement(numsArrayElementElementElementElementIndex)\n\
    \        val numsArrayElementElementElementElementElementElementLength = numsArrayElementElementElementElementElementElement.length\n\
    \        val numsArrayElementElementElementElementElementElementIndex = 0\n  \
    \      val numsArrayElementElementElementElementElementElementElement = numsArrayElement(numsArrayElementElementElementElementElementIndex)\n\
    \        val numsArrayElementElementElementElementElementElementElementLength\
    \ = numsArrayElementElementElementElementElementElementElement.length\n      \
    \  val numsArrayElementElementElementElementElementElementElementIndex = 0\n \
    \       val numsArrayElementElementElementElementElementElementElementElement\
    \ = numsArrayElement(numsArrayElementElementElementElementElementElementIndex)\n\
    \        val numsArrayElementElementElementElementElementElementElementElementLength\
    \ = numsArrayElementElementElementElementElementElementElementElementElement.length\n\
    \        val numsArrayElementElementElementElementElementElementElementElementIndex\
    \ = 0\n        val numsArrayElementElementElement", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsStr = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStrLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStr = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val numsStrLen = scala.collection.mutable.ListBuffer.empty[Int]\n   \
    \     val numsStr = scala.collection.mutable.ListBuffer.empty[String]\n      \
    \  val numsStrLen = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsStr = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStrLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStr = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val numsStrLen = scala.collection.mutable.ListBuffer.empty[Int]\n   \
    \     val numsStr = scala.collection.mutable.ListBuffer.empty[String]\n      \
    \  val numsStrLen = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsStr = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStrLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStr = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val numsStrLen = scala.collection.mutable.ListBuffer.empty[Int]\n   \
    \     val numsStr = scala.collection.mutable.ListBuffer.empty[String]\n      \
    \  val numsStrLen = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsStr = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStrLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStr = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val numsStrLen = scala.collection.mutable.ListBuffer.empty[Int]\n   \
    \     val numsStr = scala.collection.mutable.ListBuffer.empty[String]\n      \
    \  val numsStrLen = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsStr = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStrLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsStr = scala.collection.mutable.List",
  "        val roman = scala.collection.mutable.ListBuffer[String]()\n        val\
    \ nums = scala.collection.mutable.ListBuffer[Int]()\n        val numsMap = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap2 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap3 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap4 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap5 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap6 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap7 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap8 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap9 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap10 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap11 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap12 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap13 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap14 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap15 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap16 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap17 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap18 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap19 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap20 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap21 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap22 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap23 = new\
    \ scala.collection.mutable.HashMap[Int, String]()\n        val numsMap24 = new\
    \ scala.collection.mutable.HashMap[Int, String]()", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        val numsArray =\
    \ nums.toArray\n        for (i <- 0 until numsArray.length)\n            roman\
    \ += numsArray(i).toString() + if (numsArray(i) > 0) \"M\" else \"m\"\n      \
    \  roman.toList.reverse.mkString", "        val roman = mutable.ListBuffer[String]()\n\
    \        val nums = scala.math.pow(10, number.toInt)\n        for (i <- 0 until\
    \ nums) {\n            val n = math.floor(i / nums)\n            val r = math.mod(i,\
    \ nums)\n            roman += if (r == 0) \"M\" else if (r == 1) \"D\" else \"\
    C\"\n            roman += if (n == 0) \"\" else scala.math.pow(10, n - 1)\n  \
    \      }\n        roman.mkString", "        val roman = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum = mutable.ArrayBuffer(\n\
    \            \"M\", \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\"\
    , \"IV\", \"I\"\n        )\n        val romanNum2 = mutable.ArrayBuffer(\n   \
    \         \"M\", \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"\
    IV\", \"I\"\n        )\n        val romanNum3 = mutable.ArrayBuffer(\n       \
    \     \"M\", \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\"\
    , \"I\"\n        )\n        val romanNum4 = mutable.ArrayBuffer(\n           \
    \ \"M\", \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"\
    I\"\n        )\n        val romanNum5 = mutable.ArrayBuffer(\n            \"M\"\
    , \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n \
    \       )\n        val romanNum6 = mutable.ArrayBuffer(\n            \"M\", \"\
    D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n     \
    \   )\n        val romanNum7 = mutable.ArrayBuffer(\n            \"M\", \"D\"\
    , \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n        )\n\
    \        val romanNum8 = mutable.ArrayBuffer(\n            \"M\", \"D\", \"C\"\
    , \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n        )\n    \
    \    val romanNum9 = mutable.ArrayBuffer(\n            \"M\", \"D\", \"C\", \"\
    XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val\
    \ romanNum10 = mutable.ArrayBuffer(\n            \"M\", \"D\", \"C\", \"XC\",\
    \ \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum11\
    \ = mutable.ArrayBuffer(\n            \"M\", \"D\", \"C\", \"XC\", \"L\", \"XL\"\
    , \"X\", \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum12 = mutable.ArrayBuffer(\n\
    \            \"M\", \"D\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\"\
    , \"IV\", \"I\"\n        )\n        val romanNum13 = mutable.ArrayBuffer(\n  \
    \          \"M\", \"", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsStr = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStr2\
    \ = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStr3 =\
    \ scala.collection.mutable.ListBuffer.empty[String]\n        val numsStr4 = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val numsStr5 = scala.collection.mutable.ListBuffer.empty[String]\n  \
    \      val numsStr6 = scala.collection.mutable.ListBuffer.empty[String]\n    \
    \    val numsStr7 = scala.collection.mutable.ListBuffer.empty[String]\n      \
    \  val numsStr8 = scala.collection.mutable.ListBuffer.empty[String]\n        val\
    \ numsStr9 = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStr10\
    \ = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStr11 =\
    \ scala.collection.mutable.ListBuffer.empty[String]\n        val numsStr12 = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val numsStr13 = scala.collection.mutable.ListBuffer.empty[String]\n \
    \       val numsStr14 = scala.collection.mutable.ListBuffer.empty[String]\n  \
    \      val numsStr15 = scala.collection.mutable.ListBuffer.empty[String]\n   \
    \     val numsStr16 = scala.collection.mutable.ListBuffer.empty[String]\n    \
    \    val numsStr17 = scala.collection.mutable.ListBuffer.empty[String]\n     \
    \   val numsStr18 = scala.collection.mutable.ListBuffer.empty[String]\n      \
    \  val numsStr19 = scala.collection.mutable.ListBuffer.empty[String]\n       \
    \ val numsStr20 = scala.collection.mutable.ListBuffer.empty[String]\n        val\
    \ numsStr21 = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStr22\
    \ = scala.collection.mutable.ListBuffer.empty[String]\n        val numsStr23 =\
    \ scala.collection.mutable.ListBuffer.empty[String]\n        val numsStr24 = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val numsStr25 = scala.collection.mutable.ListBuffer.empty[String]\n \
    \       val numsStr26 = scala.collection.mutable.ListBuffer.empty[String", " \
    \       val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums.size) {\n            val num =\
    \ nums(i)\n            val digit = num / 100\n            val hundreds = num %\
    \ 100\n            val hundredsString = if (hundreds == 0) \"M\" else if (hundreds\
    \ == 1) \"CM\" else \"D\"\n            val tens = num / 10\n            val tensString\
    \ = if (tens == 0) \"C\" else if (tens == 1) \"XC\" else \"L\"\n            val\
    \ ones = num % 10\n            val onesString = if (ones == 0) \"X\" else if (ones\
    \ == 1) \"XL\" else \"X\"\n            roman += hundredsString + tensString +\
    \ onesString\n        }\n        roman.mkString", "        val roman = scala.collection.mutable.ArrayBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ArrayBuffer.empty[Int]\n        val\
    \ numsMap = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap2\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap3\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap4\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap5\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap6\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap7\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap8\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap9\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap10\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap11\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap12\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap13\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap14\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap15\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap16\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap17\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap18\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap19\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap20\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap21\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap22\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap23\
    \ = scala.collection.mutable.HashMap.empty[Int, String]\n        val numsMap24\
    \ = scala.", "        val roman = mutable.ListBuffer[String]()\n        val nums\
    \ = scala.math.pow(10, number.toInt)\n        var i = 1\n        while (i <= nums)\
    \ {\n            val remainder = number % i\n            roman.append(remainder.toString)\n\
    \            number /= i\n            i += 1\n        }\n        roman.reverse.mkString",
  "        val roman = mutable.ArrayBuffer(\n            \"M\", \"CM\", \"D\", \"\
    CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"\n    \
    \    )\n        val romanNum = mutable.ArrayBuffer(\n            \"M\", \"CM\"\
    , \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"\
    I\"\n        )\n        val romanNum2 = mutable.ArrayBuffer(\n            \"M\"\
    , \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"\
    IV\", \"I\"\n        )\n        val romanNum3 = mutable.ArrayBuffer(\n       \
    \     \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\"\
    , \"V\", \"IV\", \"I\"\n        )\n        val romanNum4 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum5 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum6 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum7 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum8 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum9 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum10 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum11 = mutable.ArrayBuffer(\n\
    \            \"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\"\
    , \"IX\", \"V\", \"IV\", \"I\"\n        )\n        val romanNum12 = mutable.Array",
  "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n       \
    \ val romanNum = scala.collection.mutable.ListBuffer.empty[Int]\n        val nums\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n   \
    \     val numsLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n   \
    \     val numsLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]\n\
    \        val numsLenLenLenLenLenLenLenLenLenLenLenLenLenLen = scala.collection.mutable.ListBuffer.empty[Int]",
  "        val roman = mutable.ListBuffer[String]()\n        val nums = scala.math.pow(10,\
    \ number.toInt)\n        for (i <- 0 until nums) {\n            val remainder\
    \ = number % i\n            roman.append(if (remainder == 0) \"M\" else if (remainder\
    \ == 1) \"D\" else \"C\")\n            number /= i\n        }\n        roman.reverse.mkString",
  "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n       \
    \ var remainder = number\n        while(number > 0){\n            val remainderDigit\
    \ = remainder % 10\n            roman.append(remainderDigit.toString)\n      \
    \      remainder = remainder / 10\n        }\n        roman.reverse.mkString(\"\
    \")", "        val roman = mutable.ArrayBuffer(\n            \"\",\n         \
    \   \"M\",\n            \"CM\",\n            \"D\",\n            \"CD\",\n   \
    \         \"C\",\n            \"XC\",\n            \"L\",\n            \"XL\"\
    ,\n            \"X\",\n            \"IX\",\n            \"V\",\n            \"\
    IV\",\n            \"I\"\n        )\n        val romanNum = number / 100\n   \
    \     val romanDigit = number % 100\n        roman(romanNum) += romanDigit\n \
    \       romanNum", "        val roman = scala.collection.mutable.ListBuffer.empty[String]\n\
    \        val nums = scala.collection.mutable.ListBuffer.empty[Int]\n        val\
    \ numsLen = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = scala.collection.mutable.ListBuffer.empty[Int]\n        val numsLenLenLenLenLenLenLenLenLenLenLenLenLen"]
stop_tokens:
- "\n    }\n"

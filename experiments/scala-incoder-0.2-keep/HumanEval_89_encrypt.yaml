name: HumanEval_89_encrypt
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function encrypt that takes a string as an argument and\n    //\
  \ returns a string encrypted with the alphabet being rotated. \n    // The alphabet\
  \ should be rotated in a manner such that the letters \n    // shift down by two\
  \ multiplied to two places.\n    // For example:\n    // encrypt('hi') returns 'lm'\n\
  \    // encrypt('asdfghjkl') returns 'ewhjklnop'\n    // encrypt('gf') returns 'kj'\n\
  \    // encrypt('et') returns 'ix'\n    def encrypt(s : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(encrypt((\"hi\")).equals((\"\
  lm\")));\n    assert(encrypt((\"asdfghjkl\")).equals((\"ewhjklnop\")));\n    assert(encrypt((\"\
  gf\")).equals((\"kj\")));\n    assert(encrypt((\"et\")).equals((\"ix\")));\n   \
  \ assert(encrypt((\"faewfawefaewg\")).equals((\"jeiajeaijeiak\")));\n    assert(encrypt((\"\
  hellomyfriend\")).equals((\"lippsqcjvmirh\")));\n    assert(encrypt((\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
  )).equals((\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")));\n    assert(encrypt((\"\
  a\")).equals((\"e\")));\n    }\n\n}\n"
completions: ["        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newAlphabet2 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 2))\n\
    \        val newAlphabet3 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 1))\n\
    \        val newAlphabet4 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 1))\n\
    \        val newAlphabet5 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 0))\n\
    \        val newAlphabet6 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 0))\n\
    \        val newAlphabet7 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 1))\n\
    \        val newAlphabet8 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 1))\n\
    \        val newAlphabet9 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newAlphabet10 = alphabet.map(x => alphabet(alphabet.indexOf(x) -\
    \ 2))\n        val newAlphabet11 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet12 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet13 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet14 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet15 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet16 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet17 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet18 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet19 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet20 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet21 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet22 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphab", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newString = new StringBuilder()\n        for(i <- 0 until s.length){\n\
    \            newString.append(newAlphabet(alphabet.indexOf(s.charAt(i)))) \n \
    \       }\n        newString.toString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c -> alphabet(alphabet.indexOf(c)\
    \ + 1))\n        val rotatedString = s.map(c => rotatedAlphabet(alphabet.indexOf(c))).mkString\n\
    \        rotatedString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString(\"\")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a' + 1)\n        val newAlphabet2\
    \ = alphabet.map(x => x + 'z' - 'a' + 2)\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'z' - 'a' + 3)\n        val newAlphabet4 = alphabet.map(x => x + 'z'\
    \ - 'a' + 4)\n        val newAlphabet5 = alphabet.map(x => x + 'z' - 'a' + 5)\n\
    \        val newAlphabet6 = alphabet.map(x => x + 'z' - 'a' + 6)\n        val\
    \ newAlphabet7 = alphabet.map(x => x + 'z' - 'a' + 7)\n        val newAlphabet8\
    \ = alphabet.map(x => x + 'z' - 'a' + 8)\n        val newAlphabet9 = alphabet.map(x\
    \ => x + 'z' - 'a' + 9)\n        val newAlphabet10 = alphabet.map(x => x + 'z'\
    \ - 'a' + 10)\n        val newAlphabet11 = alphabet.map(x => x + 'z' - 'a' + 11)\n\
    \        val newAlphabet12 = alphabet.map(x => x + 'z' - 'a' + 12)\n        val\
    \ newAlphabet13 = alphabet.map(x => x + 'z' - 'a' + 13)\n        val newAlphabet14\
    \ = alphabet.map(x => x + 'z' - 'a' + 14)\n        val newAlphabet15 = alphabet.map(x\
    \ => x + 'z' - 'a' + 15)\n        val newAlphabet16 = alphabet.map(x => x + 'z'\
    \ - 'a' + 16)\n        val newAlphabet17 = alphabet.map(x => x + 'z' - 'a' + 17)\n\
    \        val newAlphabet18 = alphabet.map(x => x + 'z' - 'a' + 18)\n        val\
    \ newAlphabet19 = alphabet.map(x => x + 'z' - 'a' + 19)\n        val newAlphabet20\
    \ = alphabet.map(x => x + 'z' - 'a' + 20)\n        val newAlphabet21 = alphabet.map(x\
    \ => x + 'z' - 'a' + 21)\n        val newAlphabet22 = alphabet.map(x => x + 'z'\
    \ - 'a' + 22)\n        val ", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 9))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 10))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 11))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 12))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 13))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 14))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 15))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 16))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 17))", "        val alphabet = List('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet21 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)\
    \ + 2))\n        rotatedString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 9))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 10))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 11))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 12))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 13))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 14))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 15))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 16))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 17))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 18))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + ", "        var alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet2 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet3 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet4 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet5 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet6 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet7 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet8 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString(\"\")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet2\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet4 = alphabet.map(x => (x - 2) %\
    \ 26 + 2)\n        val newAlphabet5 = alphabet.map(x => (x - 2) % 26 + 2)\n  \
    \      val newAlphabet6 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet7\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet8 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet9 = alphabet.map(x => (x - 2) %\
    \ 26 + 2)\n        val newAlphabet10 = alphabet.map(x => (x - 2) % 26 + 2)\n \
    \       val newAlphabet11 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet12\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet13 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet14 = alphabet.map(x => (x - 2)\
    \ % 26 + 2)\n        val newAlphabet15 = alphabet.map(x => (x - 2) % 26 + 2)\n\
    \        val newAlphabet16 = alphabet.map(x => (x - 2) % 26 + 2)\n        val\
    \ newAlphabet17 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet18\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet20 = alphabet.map(x => (x - 2)\
    \ % 26 + 2)\n        val newAlphabet21 = alphabet.map(x => (x - 2) % 26 + 2)\n\
    \        val newAlphabet22 = alphabet.map(x => (x - 2) % 26 + 2)\n        val\
    \ newAlphabet23 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet24\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet25 = alphabet.map(",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newString = new StringBuilder\n        for(i <- 0 until s.length)\n\
    \            newString.append(newAlphabet(alphabet.indexOf(s.charAt(i))))\n  \
    \      newString.toString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar"]
stop_tokens:
- "\n    }\n"

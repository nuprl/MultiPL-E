name: HumanEval_89_encrypt
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function encrypt that takes a string as an argument and\n    //\
  \ returns a string encrypted with the alphabet being rotated. \n    // The alphabet\
  \ should be rotated in a manner such that the letters \n    // shift down by two\
  \ multiplied to two places.\n    // For example:\n    // encrypt('hi') returns 'lm'\n\
  \    // encrypt('asdfghjkl') returns 'ewhjklnop'\n    // encrypt('gf') returns 'kj'\n\
  \    // encrypt('et') returns 'ix'\n    def encrypt(s : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(encrypt((\"hi\")).equals((\"\
  lm\")));\n    assert(encrypt((\"asdfghjkl\")).equals((\"ewhjklnop\")));\n    assert(encrypt((\"\
  gf\")).equals((\"kj\")));\n    assert(encrypt((\"et\")).equals((\"ix\")));\n   \
  \ assert(encrypt((\"faewfawefaewg\")).equals((\"jeiajeaijeiak\")));\n    assert(encrypt((\"\
  hellomyfriend\")).equals((\"lippsqcjvmirh\")));\n    assert(encrypt((\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
  )).equals((\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")));\n    assert(encrypt((\"\
  a\")).equals((\"e\")));\n    }\n\n}\n"
completions: ["        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newAlphabet2 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 2))\n\
    \        val newAlphabet3 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 1))\n\
    \        val newAlphabet4 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 1))\n\
    \        val newAlphabet5 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 0))\n\
    \        val newAlphabet6 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 0))\n\
    \        val newAlphabet7 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 1))\n\
    \        val newAlphabet8 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 1))\n\
    \        val newAlphabet9 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newAlphabet10 = alphabet.map(x => alphabet(alphabet.indexOf(x) -\
    \ 2))\n        val newAlphabet11 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet12 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet13 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet14 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet15 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet16 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet17 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet18 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet19 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet20 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet21 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet22 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphab", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newString = new StringBuilder()\n        for(i <- 0 until s.length){\n\
    \            newString.append(newAlphabet(alphabet.indexOf(s.charAt(i)))) \n \
    \       }\n        newString.toString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c -> alphabet(alphabet.indexOf(c)\
    \ + 1))\n        val rotatedString = s.map(c => rotatedAlphabet(alphabet.indexOf(c))).mkString\n\
    \        rotatedString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString(\"\")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a' + 1)\n        val newAlphabet2\
    \ = alphabet.map(x => x + 'z' - 'a' + 2)\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'z' - 'a' + 3)\n        val newAlphabet4 = alphabet.map(x => x + 'z'\
    \ - 'a' + 4)\n        val newAlphabet5 = alphabet.map(x => x + 'z' - 'a' + 5)\n\
    \        val newAlphabet6 = alphabet.map(x => x + 'z' - 'a' + 6)\n        val\
    \ newAlphabet7 = alphabet.map(x => x + 'z' - 'a' + 7)\n        val newAlphabet8\
    \ = alphabet.map(x => x + 'z' - 'a' + 8)\n        val newAlphabet9 = alphabet.map(x\
    \ => x + 'z' - 'a' + 9)\n        val newAlphabet10 = alphabet.map(x => x + 'z'\
    \ - 'a' + 10)\n        val newAlphabet11 = alphabet.map(x => x + 'z' - 'a' + 11)\n\
    \        val newAlphabet12 = alphabet.map(x => x + 'z' - 'a' + 12)\n        val\
    \ newAlphabet13 = alphabet.map(x => x + 'z' - 'a' + 13)\n        val newAlphabet14\
    \ = alphabet.map(x => x + 'z' - 'a' + 14)\n        val newAlphabet15 = alphabet.map(x\
    \ => x + 'z' - 'a' + 15)\n        val newAlphabet16 = alphabet.map(x => x + 'z'\
    \ - 'a' + 16)\n        val newAlphabet17 = alphabet.map(x => x + 'z' - 'a' + 17)\n\
    \        val newAlphabet18 = alphabet.map(x => x + 'z' - 'a' + 18)\n        val\
    \ newAlphabet19 = alphabet.map(x => x + 'z' - 'a' + 19)\n        val newAlphabet20\
    \ = alphabet.map(x => x + 'z' - 'a' + 20)\n        val newAlphabet21 = alphabet.map(x\
    \ => x + 'z' - 'a' + 21)\n        val newAlphabet22 = alphabet.map(x => x + 'z'\
    \ - 'a' + 22)\n        val ", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 9))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 10))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 11))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 12))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 13))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 14))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 15))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 16))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 17))", "        val alphabet = List('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet21 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)\
    \ + 2))\n        rotatedString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 9))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 10))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 11))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 12))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 13))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 14))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 15))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 16))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 17))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 18))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + ", "        var alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet2 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet3 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet4 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet5 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet6 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet7 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet8 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString(\"\")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet2\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet4 = alphabet.map(x => (x - 2) %\
    \ 26 + 2)\n        val newAlphabet5 = alphabet.map(x => (x - 2) % 26 + 2)\n  \
    \      val newAlphabet6 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet7\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet8 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet9 = alphabet.map(x => (x - 2) %\
    \ 26 + 2)\n        val newAlphabet10 = alphabet.map(x => (x - 2) % 26 + 2)\n \
    \       val newAlphabet11 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet12\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet13 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet14 = alphabet.map(x => (x - 2)\
    \ % 26 + 2)\n        val newAlphabet15 = alphabet.map(x => (x - 2) % 26 + 2)\n\
    \        val newAlphabet16 = alphabet.map(x => (x - 2) % 26 + 2)\n        val\
    \ newAlphabet17 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet18\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet20 = alphabet.map(x => (x - 2)\
    \ % 26 + 2)\n        val newAlphabet21 = alphabet.map(x => (x - 2) % 26 + 2)\n\
    \        val newAlphabet22 = alphabet.map(x => (x - 2) % 26 + 2)\n        val\
    \ newAlphabet23 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet24\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet25 = alphabet.map(",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newString = new StringBuilder\n        for(i <- 0 until s.length)\n\
    \            newString.append(newAlphabet(alphabet.indexOf(s.charAt(i))))\n  \
    \      newString.toString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet2\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet4 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet5 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet6\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet7 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet8 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet9 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet10\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet11 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet12 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet13 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet14\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet15 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet16 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet17 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet18\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet19 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet20 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet21 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet22\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet23 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet24 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet25 = alphabet.map(", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet2\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet4 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet5 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet6\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet7 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet8 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet9 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet10\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet11 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet12 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet13 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet14\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet15 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet16 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet17 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet18\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet19 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet20 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet21 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet22\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet23 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet24 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet25 = alphabet.map(", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x + 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x + 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x + 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x + 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x + 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x + 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x - 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = newAlphabet.map(x => (x - 2).toChar)\n        val newAlphabet3 = newAlphabet2.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = newAlphabet3.map(x => (x - 2).toChar)\n\
    \        val newAlphabet5 = newAlphabet4.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet6 = newAlphabet5.map(x => (x - 2).toChar)\n        val newAlphabet7\
    \ = newAlphabet6.map(x => (x - 2).toChar)\n        val newAlphabet8 = newAlphabet7.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet9 = newAlphabet8.map(x => (x - 2).toChar)\n\
    \        val newAlphabet10 = newAlphabet9.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet11 = newAlphabet10.map(x => (x - 2).toChar)\n        val newAlphabet12\
    \ = newAlphabet11.map(x => (x - 2).toChar)\n        val newAlphabet13 = newAlphabet12.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet14 = newAlphabet13.map(x => (x -\
    \ 2).toChar)\n        val newAlphabet15 = newAlphabet14.map(x => (x - 2).toChar)\n\
    \        val newAlphabet16 = newAlphabet15.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet17 = newAlphabet16.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = newAlphabet17.map(x => (x - 2).toChar)\n        val newAlphabet19 = newAlphabet18.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = newAlphabet19.map(x => (x -\
    \ 2).toChar)\n        val newAlphabet21 = newAlphabet20.map(x => (x - 2).toChar)\n\
    \        val newAlphabet22 = newAlphabet21.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet23 = newAlphabet22.map(x => (x - 2).toChar)\n        val newAlphabet24\
    \ = newAlphabet23.map(x => (x - 2).toChar)\n", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet2 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet3 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet4 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet5 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet6 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet7 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet8 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet9 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z').toList\n        val newAlphabet2\
    \ = alphabet.map(x => x + 'y').toList\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'x').toList\n        val newAlphabet4 = alphabet.map(x => x + 'w').toList\n\
    \        val newAlphabet5 = alphabet.map(x => x + 'v').toList\n        val newAlphabet6\
    \ = alphabet.map(x => x + 'u').toList\n        val newAlphabet7 = alphabet.map(x\
    \ => x + 't').toList\n        val newAlphabet8 = alphabet.map(x => x + 's').toList\n\
    \        val newAlphabet9 = alphabet.map(x => x + 'r').toList\n        val newAlphabet10\
    \ = alphabet.map(x => x + 'q').toList\n        val newAlphabet11 = alphabet.map(x\
    \ => x + 'p').toList\n        val newAlphabet12 = alphabet.map(x => x + 'o').toList\n\
    \        val newAlphabet13 = alphabet.map(x => x + 'n').toList\n        val newAlphabet14\
    \ = alphabet.map(x => x + 'm').toList\n        val newAlphabet15 = alphabet.map(x\
    \ => x + 'l').toList\n        val newAlphabet16 = alphabet.map(x => x + 'k').toList\n\
    \        val newAlphabet17 = alphabet.map(x => x + 'j').toList\n        val newAlphabet18\
    \ = alphabet.map(x => x + 'i').toList\n        val newAlphabet19 = alphabet.map(x\
    \ => x + 'h').toList\n        val newAlphabet20 = alphabet.map(x => x + 'g').toList\n\
    \        val newAlphabet21 = alphabet.map(x => x + 'f').toList\n        val newAlphabet22\
    \ = alphabet.map(x => x + 'e').toList\n        val newAlphabet23 = alphabet.map(x\
    \ => x + 'd').toList\n        val newAlphabet24 = alphabet.map(x => x + 'c').toList\n\
    \        val newAlphabet25 = alphabet.map(", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar).reverse\n       \
    \ val newString = s.map(x => newAlphabet(alphabet.indexOf(x) + 2))\n        newString.mkString",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 9))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 10))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 11))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 12))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 13))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 14))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 15))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 16))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 17))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 18", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c -> alphabet(alphabet.indexOf(c)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(c => rotatedAlphabet(c))\n\
    \        val result = rotatedString.map(c => alphabet(alphabet.indexOf(c) - 2))\n\
    \        new String(result)", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)\
    \ + 2))\n        rotatedString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabetLength = alphabet.length\n        val alphabetShift = alphabet.length/2\n\
    \        val alphabetShift2 = alphabet.length/3\n        val alphabetShift3 =\
    \ alphabet.length/4\n        val alphabetShift4 = alphabet.length/5\n        val\
    \ alphabetShift5 = alphabet.length/6\n        val alphabetShift6 = alphabet.length/7\n\
    \        val alphabetShift7 = alphabet.length/8\n        val alphabetShift8 =\
    \ alphabet.length/9\n        val alphabetShift9 = alphabet.length/10\n       \
    \ val alphabetShift10 = alphabet.length/11\n        val alphabetShift11 = alphabet.length/12\n\
    \        val alphabetShift12 = alphabet.length/13\n        val alphabetShift13\
    \ = alphabet.length/14\n        val alphabetShift14 = alphabet.length/15\n   \
    \     val alphabetShift15 = alphabet.length/16\n        val alphabetShift16 =\
    \ alphabet.length/17\n        val alphabetShift17 = alphabet.length/18\n     \
    \   val alphabetShift18 = alphabet.length/19\n        val alphabetShift19 = alphabet.length/20\n\
    \        val alphabetShift20 = alphabet.length/21\n        val alphabetShift21\
    \ = alphabet.length/22\n        val alphabetShift22 = alphabet.length/23\n   \
    \     val alphabetShift23 = alphabet.length/24\n        val alphabetShift24 =\
    \ alphabet.length/25\n        val alphabetShift25 = alphabet.length/26\n     \
    \   val alphabetShift26 = alphabet.length/27\n        val alphabetShift27 = alphabet.length/28\n\
    \        val alphabetShift28 = alphabet.length/29\n        val alphabetShift29\
    \ = alphabet.length/30\n        val alphabetShift30 = alphabet.length/31\n   \
    \     val alphabetShift31 = alphabet.length/32\n        val alphabetShift32 =\
    \ alphabet.length/33\n        val alphabetShift33 = alphabet.length/34\n     \
    \   val alphabetShift34 = alphabet.length/35\n        val alphabetShift35 = alphabet.length/36\n\
    \        val alphabetShift36 = alphabet.length/37\n        val alphabetShift37\
    \ = alphabet.length/38\n        val alphabetShift38 = alphabet.length/39\n   \
    \     val alphabetShift39 = alphabet.length/40\n        val alphabetShift40 =\
    \ alphabet.length/41\n        val alphabetShift41 = alphabet.length/42\n     \
    \   val alphabetShift42 = alphabet.length/43\n", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 9))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 10))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 11))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 12))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 13))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 14))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 15))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 16))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 17))", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 0))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 0))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabetLength = alphabet.length\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength\n        val alphabetLength = alphabetLength\
    \ / 2\n        val alphabetLength = alphabetLength * 2\n        val alphabetLength\
    \ = alphabetLength + alphabetLength", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c -> alphabet(alphabet.indexOf(c)\
    \ + 2))\n        val rotatedString = s.map(c => rotatedAlphabet(c))\n        rotatedString.map(c\
    \ => c.mkString).mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabetLength = alphabet.length\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newString = s.toCharArray.zip(newAlphabet).map(x => x._1 + x._2).mkString\n\
    \        newString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        val result = new String(rotatedString)\n        result", "        val\
    \ alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c -> alphabet(alphabet.indexOf(c)\
    \ + 2))\n        val rotatedString = s.map(c => rotatedAlphabet(alphabet.indexOf(c))).mkString\n\
    \        rotatedString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        var alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet = List('z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a');\n\
    \        var newString = \"\"\n        var i = 0\n        var j = 0\n        var\
    \ k = 0\n        var l = 0\n        var m = 0\n        var n = 0\n        var\
    \ o = 0\n        var p = 0\n        var q = 0\n        var r = 0\n        var\
    \ s = 0\n        var t = 0\n        var u = 0\n        var v = 0\n        var\
    \ w = 0\n        var x = 0\n        var y = 0\n        var z = 0\n        var\
    \ a = 0\n        var b = 0\n        var c = 0\n        var d = 0\n        var\
    \ e = 0\n        var f = 0\n        var g = 0\n        var h = 0\n        var\
    \ i = 0\n        var j = 0\n        var k = 0\n        var l = 0\n        var\
    \ m = 0\n        var n = 0\n        var o = 0\n        var p = 0\n        var\
    \ q = 0\n        var r = 0\n        var s = 0\n        var t = 0\n        var\
    \ u = 0\n        var v = 0\n        var w = 0\n        var x = 0\n        var\
    \ y = 0\n        var z = 0\n        var a = 0\n        var b = 0\n        var\
    \ c = 0\n        var d = 0\n        var e = 0\n        var f = 0\n        var\
    \ g = 0\n        var h = 0\n        var i = 0\n        var j = 0\n        var\
    \ k = 0\n        var l = 0\n        var m = 0\n        var n = 0\n        var\
    \ o = 0\n        var p = 0\n        var q = 0\n        var r = 0\n        var\
    \ s = 0\n        var t = 0\n        var u = 0\n        var v = 0\n        var\
    \ w = 0\n        var x = 0\n        var y = 0\n        var z = 0\n        var\
    \ a = 0\n        var b = 0\n        var c = 0\n        var d = 0\n        var\
    \ e = 0\n        var f = 0\n        var g = 0\n        var h = 0\n        var\
    \ i = 0\n        var j = 0\n        var k = 0\n        var l = 0\n        var\
    \ m = 0\n        var n = 0\n        var o = 0\n        var p = 0\n        var\
    \ q = 0\n        var r = 0\n        var s = 0\n        var t = 0\n        var\
    \ u = 0\n        var v = 0\n        var w = 0\n        var x = 0\n        var\
    \ y = 0\n        var z = 0\n        var a = 0\n        var b = 0\n        var\
    \ c = 0\n        var d", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet2 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet3 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet4 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet5 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet6 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet7 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet8 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet9 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => (c + 2).toChar)\n        val\
    \ rotatedAlphabet2 = alphabet.map(c => (c + 2).toChar)\n        val rotatedAlphabet3\
    \ = alphabet.map(c => (c + 2).toChar)\n        val rotatedAlphabet4 = alphabet.map(c\
    \ => (c + 2).toChar)\n        val rotatedAlphabet5 = alphabet.map(c => (c + 2).toChar)\n\
    \        val rotatedAlphabet6 = alphabet.map(c => (c + 2).toChar)\n        val\
    \ rotatedAlphabet7 = alphabet.map(c => (c + 2).toChar)\n        val rotatedAlphabet8\
    \ = alphabet.map(c => (c + 2).toChar)\n        val rotatedAlphabet9 = alphabet.map(c\
    \ => (c + 2).toChar)\n        val rotatedAlphabet10 = alphabet.map(c => (c + 2).toChar)\n\
    \        val rotatedAlphabet11 = alphabet.map(c => (c + 2).toChar)\n        val\
    \ rotatedAlphabet12 = alphabet.map(c => (c + 2).toChar)\n        val rotatedAlphabet13\
    \ = alphabet.map(c => (c + 2).toChar)\n        val rotatedAlphabet14 = alphabet.map(c\
    \ => (c + 2).toChar)\n        val rotatedAlphabet15 = alphabet.map(c => (c + 2).toChar)\n\
    \        val rotatedAlphabet16 = alphabet.map(c => (c + 2).toChar)\n        val\
    \ rotatedAlphabet17 = alphabet.map(c => (c + 2).toChar)\n        val rotatedAlphabet18\
    \ = alphabet.map(c => (c + 2).toChar)\n        val rotatedAlphabet19 = alphabet.map(c\
    \ => (c + 2).toChar)\n        val rotatedAlphabet20 = alphabet.map(c => (c + 2).toChar)\n\
    \        val rotatedAlphabet21 = alphabet.map(c => (c + 2).toChar)\n        val\
    \ rotatedAlphabet22 = alphabet.map(c => (c + 2).toChar)\n        val rotatedAlphabet23\
    \ = alphabet.map(c => (c + 2).toChar)\n        val rotatedAlphabet24 = alphabet.map(c\
    \ => (c + 2).toChar)\n        val rotatedAlphabet25 = alphabet.", "        val\
    \ alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 0))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString", "        val alphabet = List('a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z')\n        val newAlphabet = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) + 2))\n        val newAlphabet2 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) + 1))\n        val newAlphabet3 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) + 0))\n        val newAlphabet4 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 1))\n        val newAlphabet5 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 2))\n        val newAlphabet6 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 3))\n        val newAlphabet7 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 4))\n        val newAlphabet8 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 5))\n        val newAlphabet9 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 6))\n        val newAlphabet10 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 7))\n        val newAlphabet11 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 8))\n        val newAlphabet12 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 9))\n        val newAlphabet13 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 10))\n        val newAlphabet14 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 11))\n        val newAlphabet15 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 12))\n        val newAlphabet16 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 13))\n        val newAlphabet17 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 14))\n        val newAlphabet18 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 15))\n        val newAlphabet19 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 16))\n        val newAlphabet20 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 17))\n        val newAlphabet21 = alphabet.map(x\
    \ => x -> alphabet(", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newAlphabet2 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 4))\n\
    \        val newAlphabet3 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 6))\n\
    \        val newAlphabet4 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 8))\n\
    \        val newAlphabet5 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 10))\n\
    \        val newAlphabet6 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 12))\n\
    \        val newAlphabet7 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 14))\n\
    \        val newAlphabet8 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 16))\n\
    \        val newAlphabet9 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 18))\n\
    \        val newAlphabet10 = alphabet.map(x => alphabet(alphabet.indexOf(x) +\
    \ 20))\n        val newAlphabet11 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 22))\n        val newAlphabet12 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 24))\n        val newAlphabet13 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 26))\n        val newAlphabet14 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 28))\n        val newAlphabet15 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 30))\n        val newAlphabet16 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 32))\n        val newAlphabet17 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 34))\n        val newAlphabet18 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 36))\n        val newAlphabet19 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 38))\n        val newAlphabet20 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 40))\n        val newAlphabet21 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 42))\n        val newAlphabet22 = alphabet.map(x ", "        val alphabet\
    \ = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 9))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 10))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 11))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 12))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 13))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 14))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 15))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 16))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 17))", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => (x - 2).toChar).map(x => alphabet(alphabet.indexOf(x)))\n\
    \        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newString = s.toCharArray.zip(newAlphabet).map(x => x._1 + x._2).mkString(\"\
    \")\n        newString", "        val alphabet = List('a', 'b', 'c', 'd', 'e',\
    \ 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\
    \ 'v', 'w', 'x', 'y', 'z')\n        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newString = s.toCharArray.map(x => newAlphabet(alphabet.indexOf(x)\
    \ + 1))\n        new String(newString)", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 10))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 12))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 14))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 16))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 18))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 20))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 22))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 24))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 26))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 28))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 30))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 32))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 34))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 36))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.",
  "        val alphabet = List('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newString = s.map(x => newAlphabet(alphabet.indexOf(x)))\n      \
    \  newString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString", "        val alphabet = List('a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z')\n        val newAlphabet = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) + 2))\n        val newAlphabet2 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) + 1))\n        val newAlphabet3 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 1))\n        val newAlphabet4 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 2))\n        val newAlphabet5 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 3))\n        val newAlphabet6 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 4))\n        val newAlphabet7 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 5))\n        val newAlphabet8 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 6))\n        val newAlphabet9 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 7))\n        val newAlphabet10 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 8))\n        val newAlphabet11 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 9))\n        val newAlphabet12 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 10))\n        val newAlphabet13 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 11))\n        val newAlphabet14 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 12))\n        val newAlphabet15 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 13))\n        val newAlphabet16 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 14))\n        val newAlphabet17 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 15))\n        val newAlphabet18 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 16))\n        val newAlphabet19 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 17))\n        val newAlphabet20 = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) - 18))\n        val newAlphabet21 = alphabet.map(x\
    \ => x -> alphabet", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet2\
    \ = newAlphabet.map(x => x + 'z' - 'a')\n        val newAlphabet3 = newAlphabet2.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet4 = newAlphabet3.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet5 = newAlphabet4.map(x => x + 'z' - 'a')\n  \
    \      val newAlphabet6 = newAlphabet5.map(x => x + 'z' - 'a')\n        val newAlphabet7\
    \ = newAlphabet6.map(x => x + 'z' - 'a')\n        val newAlphabet8 = newAlphabet7.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet9 = newAlphabet8.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet10 = newAlphabet9.map(x => x + 'z' - 'a')\n \
    \       val newAlphabet11 = newAlphabet10.map(x => x + 'z' - 'a')\n        val\
    \ newAlphabet12 = newAlphabet11.map(x => x + 'z' - 'a')\n        val newAlphabet13\
    \ = newAlphabet12.map(x => x + 'z' - 'a')\n        val newAlphabet14 = newAlphabet13.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet15 = newAlphabet14.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet16 = newAlphabet15.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet17 = newAlphabet16.map(x => x + 'z' - 'a')\n        val\
    \ newAlphabet18 = newAlphabet17.map(x => x + 'z' - 'a')\n        val newAlphabet19\
    \ = newAlphabet18.map(x => x + 'z' - 'a')\n        val newAlphabet20 = newAlphabet19.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet21 = newAlphabet20.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet22 = newAlphabet21.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet23 = newAlphabet22.map(x => x + 'z", "        val alphabet\
    \ = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newAlphabet2 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 1))\n\
    \        val newAlphabet3 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 2))\n\
    \        val newAlphabet4 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 1))\n\
    \        val newAlphabet5 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 1))\n\
    \        val newAlphabet6 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 2))\n\
    \        val newAlphabet7 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 1))\n\
    \        val newAlphabet8 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newAlphabet9 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 2))\n\
    \        val newAlphabet10 = alphabet.map(x => alphabet(alphabet.indexOf(x) -\
    \ 1))\n        val newAlphabet11 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet13 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet14 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet15 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet16 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet18 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet20 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet21 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet22 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphab", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 0))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newString = s.toCharArray.map(x => alphabet(alphabet.indexOf(x) +\
    \ 2))\n        new String(newAlphabet ++ newString)", "        val alphabet =\
    \ List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        val result = new String(rotatedString)\n        return result", "   \
    \     val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => x + 'z' - 'a' + 1)\n        val\
    \ rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n        rotatedString.mkString",
  "        var alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var result = \"\"\n        var i = 0\n        var j = 0\n        while\
    \ (i < s.length){\n            result += alphabet(j) + alphabet(j+1)\n       \
    \     i += 1\n            j += 1\n            if (j == 26){\n                j\
    \ = 0\n            }\n        }\n        return result", "        val alphabet\
    \ = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 9))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 9))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 10))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 10))\n        val newAlphab", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c+c).map(c => c+c).map(c => c+c).map(c\
    \ => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c\
    \ => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c\
    \ => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c\
    \ => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c\
    \ => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c\
    \ => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c\
    \ => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c\
    \ => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c\
    \ => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c\
    \ => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c => c+c).map(c\
    \ => c", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)).apply(x))\n\
    \        rotatedString.mkString(\"\")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabetLength = alphabet.length\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1\n        val alphabetLength = alphabetLength - 1\n        val alphabetLength\
    \ = alphabetLength - 1\n        val alphabetLength = alphabetLength - 1\n    \
    \    val alphabetLength = alphabetLength - 1\n        val alphabetLength = alphabetLength\
    \ - 1", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet2\
    \ = newAlphabet.map(x => x + 'z' - 'a')\n        val newAlphabet3 = newAlphabet2.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet4 = newAlphabet3.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet5 = newAlphabet4.map(x => x + 'z' - 'a')\n  \
    \      val newAlphabet6 = newAlphabet5.map(x => x + 'z' - 'a')\n        val newAlphabet7\
    \ = newAlphabet6.map(x => x + 'z' - 'a')\n        val newAlphabet8 = newAlphabet7.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet9 = newAlphabet8.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet10 = newAlphabet9.map(x => x + 'z' - 'a')\n \
    \       val newAlphabet11 = newAlphabet10.map(x => x + 'z' - 'a')\n        val\
    \ newAlphabet12 = newAlphabet11.map(x => x + 'z' - 'a')\n        val newAlphabet13\
    \ = newAlphabet12.map(x => x + 'z' - 'a')\n        val newAlphabet14 = newAlphabet13.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet15 = newAlphabet14.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet16 = newAlphabet15.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet17 = newAlphabet16.map(x => x + 'z' - 'a')\n        val\
    \ newAlphabet18 = newAlphabet17.map(x => x + 'z' - 'a')\n        val newAlphabet19\
    \ = newAlphabet18.map(x => x + 'z' - 'a')\n        val newAlphabet20 = newAlphabet19.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet21 = newAlphabet20.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet22 = newAlphabet21.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet23 = newAlphabet22.map(x => x + 'z", "        val alphabet\
    \ = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a' + 1).map(x => x + 'z'\
    \ - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x =>\
    \ x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x => x + 'z' - 'a' + 1).map(x\
    \ => x + 'z", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a' + 1)\n        val newAlphabet2\
    \ = alphabet.map(x => x + 'z' - 'a' + 2)\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'z' - 'a' + 3)\n        val newAlphabet4 = alphabet.map(x => x + 'z'\
    \ - 'a' + 4)\n        val newAlphabet5 = alphabet.map(x => x + 'z' - 'a' + 5)\n\
    \        val newAlphabet6 = alphabet.map(x => x + 'z' - 'a' + 6)\n        val\
    \ newAlphabet7 = alphabet.map(x => x + 'z' - 'a' + 7)\n        val newAlphabet8\
    \ = alphabet.map(x => x + 'z' - 'a' + 8)\n        val newAlphabet9 = alphabet.map(x\
    \ => x + 'z' - 'a' + 9)\n        val newAlphabet10 = alphabet.map(x => x + 'z'\
    \ - 'a' + 10)\n        val newAlphabet11 = alphabet.map(x => x + 'z' - 'a' + 11)\n\
    \        val newAlphabet12 = alphabet.map(x => x + 'z' - 'a' + 12)\n        val\
    \ newAlphabet13 = alphabet.map(x => x + 'z' - 'a' + 13)\n        val newAlphabet14\
    \ = alphabet.map(x => x + 'z' - 'a' + 14)\n        val newAlphabet15 = alphabet.map(x\
    \ => x + 'z' - 'a' + 15)\n        val newAlphabet16 = alphabet.map(x => x + 'z'\
    \ - 'a' + 16)\n        val newAlphabet17 = alphabet.map(x => x + 'z' - 'a' + 17)\n\
    \        val newAlphabet18 = alphabet.map(x => x + 'z' - 'a' + 18)\n        val\
    \ newAlphabet19 = alphabet.map(x => x + 'z' - 'a' + 19)\n        val newAlphabet20\
    \ = alphabet.map(x => x + 'z' - 'a' + 20)\n        val newAlphabet21 = alphabet.map(x\
    \ => x + 'z' - 'a' + 21)\n        val newAlphabet22 = alphabet.map(x => x + 'z'\
    \ - 'a' + 22)\n        val ", "        val alphabet = List('a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z')\n        val rotatedAlphabet = alphabet.map(x\
    \ => x -> alphabet(alphabet.indexOf(x) + 2))\n        val rotatedString = s.map(x\
    \ => rotatedAlphabet(alphabet.indexOf(x)))\n        rotatedString.map(x => x._1\
    \ + x._2).mkString", "        val alphabet = List('a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val newAlphabet = alphabet.map(x => x + 'z').map(x\
    \ => x + 'y').map(x => x + 'x').map(x => x + 'w').map(x => x + 'v').map(x => x\
    \ + 'u').map(x => x + 't').map(x => x + 's').map(x => x + 'r').map(x => x + 'q').map(x\
    \ => x + 'p').map(x => x + 'o').map(x => x + 'n').map(x => x + 'm').map(x => x\
    \ + 'l').map(x => x + 'k').map(x => x + 'j').map(x => x + 'i').map(x => x + 'h').map(x\
    \ => x + 'g').map(x => x + 'f').map(x => x + 'e').map(x => x + 'd').map(x => x\
    \ + 'c').map(x => x + 'b').map(x => x + 'a').map(x => x + 'z')\n        val newString\
    \ = s.toCharArray.map(x => newAlphabet(alphabet.indexOf(x) + 1)).map(x => x.toString).mkString\n\
    \        newString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c -> alphabet(alphabet.indexOf(c)\
    \ + 2))\n        val rotatedString = s.map(c => rotatedAlphabet(c))\n        rotatedString.mkString(\"\
    \")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2) % 26 + 2).toList\n      \
    \  val newAlphabet2 = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val\
    \ newAlphabet3 = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphabet4\
    \ = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphabet5 = alphabet.map(x\
    \ => (x - 2) % 26 + 2).toList\n        val newAlphabet6 = alphabet.map(x => (x\
    \ - 2) % 26 + 2).toList\n        val newAlphabet7 = alphabet.map(x => (x - 2)\
    \ % 26 + 2).toList\n        val newAlphabet8 = alphabet.map(x => (x - 2) % 26\
    \ + 2).toList\n        val newAlphabet9 = alphabet.map(x => (x - 2) % 26 + 2).toList\n\
    \        val newAlphabet10 = alphabet.map(x => (x - 2) % 26 + 2).toList\n    \
    \    val newAlphabet11 = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val\
    \ newAlphabet12 = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphabet13\
    \ = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphabet14 = alphabet.map(x\
    \ => (x - 2) % 26 + 2).toList\n        val newAlphabet15 = alphabet.map(x => (x\
    \ - 2) % 26 + 2).toList\n        val newAlphabet16 = alphabet.map(x => (x - 2)\
    \ % 26 + 2).toList\n        val newAlphabet17 = alphabet.map(x => (x - 2) % 26\
    \ + 2).toList\n        val newAlphabet18 = alphabet.map(x => (x - 2) % 26 + 2).toList\n\
    \        val newAlphabet19 = alphabet.map(x => (x - 2) % 26 + 2).toList\n    \
    \    val newAlphabet20 = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val\
    \ newAlphabet21 = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphabet22\
    \ = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphab", "    \
    \    val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newString = s.toCharArray.map(x => newAlphabet(alphabet.indexOf(x)).head).mkString\n\
    \        newString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z').map(x => x + 'y').map(x\
    \ => x + 'x').map(x => x + 'w').map(x => x + 'v').map(x => x + 'u').map(x => x\
    \ + 't').map(x => x + 's').map(x => x + 'r').map(x => x + 'q').map(x => x + 'p').map(x\
    \ => x + 'o').map(x => x + 'n').map(x => x + 'm').map(x => x + 'l').map(x => x\
    \ + 'k').map(x => x + 'j').map(x => x + 'i').map(x => x + 'h').map(x => x + 'g').map(x\
    \ => x + 'f').map(x => x + 'e').map(x => x + 'd').map(x => x + 'c').map(x => x\
    \ + 'b').map(x => x + 'a').map(x => x + 'z')\n        val newAlphabet2 = alphabet.map(x\
    \ => x + 'z').map(x => x + 'y').map(x => x + 'x').map(x => x + 'w').map(x => x\
    \ + 'v').map(x => x + 'u').map(x => x + 't').map(x => x + 's').map(x => x + 'r').map(x\
    \ => x + 'q').map(x => x + 'p').map(x => x + 'o').map(x => x + 'n').map(x => x\
    \ + 'm').map(x => x + 'l').map(x => x + 'k').map(x => x + 'j').map(x => x + 'i').map(x\
    \ => x + 'h').map(x => x + 'g').map(x => x + 'f').map(x => x + 'e').map(x => x\
    \ + 'd').map(x => x + 'c').map(x => x + 'b').map(x => x + 'a').map(x => x + 'z')\n\
    \        val newAlphabet3 = alphabet.map(x => x + 'z').map(x => x + 'y').map(x\
    \ => x + 'x').map(x => x + 'w').map(x => x + 'v').map(x => x + 'u').map(x => x\
    \ + 't').map(", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 9))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 10))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 11))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 12))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 13))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 14))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 15))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 16))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 17))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 18))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + ", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x + 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x + 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x + 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x - 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)\
    \ + 1))\n        rotatedString.mkString(\"\")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newString = s.map(x => newAlphabet(alphabet.indexOf(x)))\n\
    \        newString.mkString", "        val alphabet = List('a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z')\n        val result = new StringBuilder\n    \
    \    for(i <- 0 until s.length){\n            val c = s.charAt(i)\n          \
    \  val index = alphabet.indexOf(c)\n            val newIndex = index - 2\n   \
    \         if(newIndex < 0){\n                newIndex += alphabet.length\n   \
    \         }\n            result.append(alphabet(newIndex))\n        }\n      \
    \  return result.toString()", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a' + 1)\n        val newAlphabet2\
    \ = alphabet.map(x => x + 'z' - 'a' + 2)\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'z' - 'a' + 3)\n        val newAlphabet4 = alphabet.map(x => x + 'z'\
    \ - 'a' + 4)\n        val newAlphabet5 = alphabet.map(x => x + 'z' - 'a' + 5)\n\
    \        val newAlphabet6 = alphabet.map(x => x + 'z' - 'a' + 6)\n        val\
    \ newAlphabet7 = alphabet.map(x => x + 'z' - 'a' + 7)\n        val newAlphabet8\
    \ = alphabet.map(x => x + 'z' - 'a' + 8)\n        val newAlphabet9 = alphabet.map(x\
    \ => x + 'z' - 'a' + 9)\n        val newAlphabet10 = alphabet.map(x => x + 'z'\
    \ - 'a' + 10)\n        val newAlphabet11 = alphabet.map(x => x + 'z' - 'a' + 11)\n\
    \        val newAlphabet12 = alphabet.map(x => x + 'z' - 'a' + 12)\n        val\
    \ newAlphabet13 = alphabet.map(x => x + 'z' - 'a' + 13)\n        val newAlphabet14\
    \ = alphabet.map(x => x + 'z' - 'a' + 14)\n        val newAlphabet15 = alphabet.map(x\
    \ => x + 'z' - 'a' + 15)\n        val newAlphabet16 = alphabet.map(x => x + 'z'\
    \ - 'a' + 16)\n        val newAlphabet17 = alphabet.map(x => x + 'z' - 'a' + 17)\n\
    \        val newAlphabet18 = alphabet.map(x => x + 'z' - 'a' + 18)\n        val\
    \ newAlphabet19 = alphabet.map(x => x + 'z' - 'a' + 19)\n        val newAlphabet20\
    \ = alphabet.map(x => x + 'z' - 'a' + 20)\n        val newAlphabet21 = alphabet.map(x\
    \ => x + 'z' - 'a' + 21)\n        val newAlphabet22 = alphabet.map(x => x + 'z'\
    \ - 'a' + 22)\n        val ", "        val alphabet = List('a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z')\n        val rotatedAlphabet = alphabet.map(x\
    \ => alphabet(alphabet.indexOf(x) + 2))\n        val rotatedString = s.toCharArray.map(x\
    \ => rotatedAlphabet(alphabet.indexOf(x)))\n        rotatedString.mkString(\"\"\
    )", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c -> alphabet(alphabet.indexOf(c)\
    \ + 2))\n        val rotatedString = s.map(c => rotatedAlphabet(alphabet.indexOf(c))).mkString\n\
    \        rotatedString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newString = s.map(x => newAlphabet(alphabet.indexOf(x)))\n\
    \        newString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => (c + c).toUpper)\n        val\
    \ rotatedAlphabet2 = rotatedAlphabet.map(c => (c + c).toUpper)\n        val rotatedAlphabet3\
    \ = rotatedAlphabet2.map(c => (c + c).toUpper)\n        val rotatedAlphabet4 =\
    \ rotatedAlphabet3.map(c => (c + c).toUpper)\n        val rotatedAlphabet5 = rotatedAlphabet4.map(c\
    \ => (c + c).toUpper)\n        val rotatedAlphabet6 = rotatedAlphabet5.map(c =>\
    \ (c + c).toUpper)\n        val rotatedAlphabet7 = rotatedAlphabet6.map(c => (c\
    \ + c).toUpper)\n        val rotatedAlphabet8 = rotatedAlphabet7.map(c => (c +\
    \ c).toUpper)\n        val rotatedAlphabet9 = rotatedAlphabet8.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet10 = rotatedAlphabet9.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet11 = rotatedAlphabet10.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet12 = rotatedAlphabet11.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet13 = rotatedAlphabet12.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet14 = rotatedAlphabet13.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet15 = rotatedAlphabet14.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet16 = rotatedAlphabet15.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet17 = rotatedAlphabet16.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet18 = rotatedAlphabet17.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet19 = rotatedAlphabet18.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet20 = rotatedAlphabet19.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet21 = rotatedAlphabet20.map(c => (c + c).toUpper)\n\
    \        val rotatedAlphabet22 = ", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 2)\n        val newAlphabet2\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet3 = alphabet.map(x => x -\
    \ 2)\n        val newAlphabet4 = alphabet.map(x => x - 1)\n        val newAlphabet5\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet6 = alphabet.map(x => x -\
    \ 2)\n        val newAlphabet7 = alphabet.map(x => x - 1)\n        val newAlphabet8\
    \ = alphabet.map(x => x + 2)\n        val newAlphabet9 = alphabet.map(x => x +\
    \ 1)\n        val newAlphabet10 = alphabet.map(x => x - 2)\n        val newAlphabet11\
    \ = alphabet.map(x => x - 1)\n        val newAlphabet12 = alphabet.map(x => x\
    \ + 2)\n        val newAlphabet13 = alphabet.map(x => x + 1)\n        val newAlphabet14\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet15 = alphabet.map(x => x\
    \ - 1)\n        val newAlphabet16 = alphabet.map(x => x + 2)\n        val newAlphabet17\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet18 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet19 = alphabet.map(x => x - 1)\n        val newAlphabet20\
    \ = alphabet.map(x => x + 2)\n        val newAlphabet21 = alphabet.map(x => x\
    \ + 1)\n        val newAlphabet22 = alphabet.map(x => x - 2)\n        val newAlphabet23\
    \ = alphabet.map(x => x - 1)\n        val newAlphabet24 = alphabet.map(x => x\
    \ + 2)\n        val newAlphabet25 = alphabet.map(x => x + 1)\n        val newAlphabet26\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet27 = alphabet.map(x => x\
    \ - 1)\n        val newAlphabet28 = alphabet.map(x => x + 2)\n        val newAlphabet29\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet30 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet31 = alphabet.map(x => x - 1)\n        ", "   \
    \     val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z')\n        val rotatedAlphabet = alphabet.map(x\
    \ => alphabet(alphabet.indexOf(x) + 2))\n        val rotatedString = s.toCharArray.map(x\
    \ => rotatedAlphabet(alphabet.indexOf(x)))\n        rotatedString.mkString", " \
    \       val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newString = s.toCharArray.zip(newAlphabet).map(x => x._1 + x._2).mkString(\"\
    \")\n        newString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString(\"\")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 2)\n        val newAlphabet2\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet3 = alphabet.map(x => x -\
    \ 1)\n        val newAlphabet4 = alphabet.map(x => x - 2)\n        val newAlphabet5\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet6 = alphabet.map(x => x -\
    \ 1)\n        val newAlphabet7 = alphabet.map(x => x - 2)\n        val newAlphabet8\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet9 = alphabet.map(x => x -\
    \ 2)\n        val newAlphabet10 = alphabet.map(x => x + 1)\n        val newAlphabet11\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet12 = alphabet.map(x => x\
    \ + 1)\n        val newAlphabet13 = alphabet.map(x => x - 2)\n        val newAlphabet14\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet15 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet16 = alphabet.map(x => x + 1)\n        val newAlphabet17\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet18 = alphabet.map(x => x\
    \ + 1)\n        val newAlphabet19 = alphabet.map(x => x - 2)\n        val newAlphabet20\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet21 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet22 = alphabet.map(x => x + 1)\n        val newAlphabet23\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet24 = alphabet.map(x => x\
    \ + 1)\n        val newAlphabet25 = alphabet.map(x => x - 2)\n        val newAlphabet26\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet27 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet28 = alphabet.map(x => x + 1)\n        val newAlphabet29\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet30 = alphabet.map(x => x\
    \ + 1)\n        val newAlphabet31 = alphabet.map(x => x - 2)\n        ", "   \
    \     val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet2\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet4 = alphabet.map(x => (x - 2) %\
    \ 26 + 2)\n        val newAlphabet5 = alphabet.map(x => (x - 2) % 26 + 2)\n  \
    \      val newAlphabet6 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet7\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet8 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet9 = alphabet.map(x => (x - 2) %\
    \ 26 + 2)\n        val newAlphabet10 = alphabet.map(x => (x - 2) % 26 + 2)\n \
    \       val newAlphabet11 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet12\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet13 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet14 = alphabet.map(x => (x - 2)\
    \ % 26 + 2)\n        val newAlphabet15 = alphabet.map(x => (x - 2) % 26 + 2)\n\
    \        val newAlphabet16 = alphabet.map(x => (x - 2) % 26 + 2)\n        val\
    \ newAlphabet17 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet18\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet20 = alphabet.map(x => (x - 2)\
    \ % 26 + 2)\n        val newAlphabet21 = alphabet.map(x => (x - 2) % 26 + 2)\n\
    \        val newAlphabet22 = alphabet.map(x => (x - 2) % 26 + 2)\n        val\
    \ newAlphabet23 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet24\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet25 = alphabet.map(",
  "        val alphabet = List('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val result = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n       \
    \ val result = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result\
    \ = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x\
    \ => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n\
    \        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n       \
    \ val result = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result\
    \ = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x\
    \ => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n\
    \        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n       \
    \ val result = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result\
    \ = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x\
    \ => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n\
    \        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n       \
    \ val result = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result\
    \ = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x\
    \ => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n\
    \        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n       \
    \ val result = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result\
    \ = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x\
    \ => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n\
    \        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n       \
    \ val result = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result\
    \ = result.map(x => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x\
    \ => alphabet(alphabet.indexOf(x)))\n        val result = result.map(x => alphabet(alphabet.indexOf(x)))\n\
    \        val result = result.map(x => alphabet(alphabet.indexOf(x)))", "     \
    \   val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        new String(rotatedString)", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a' + 1)\n        val newAlphabet2\
    \ = alphabet.map(x => x + 'z' - 'a' + 2)\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'z' - 'a' + 3)\n        val newAlphabet4 = alphabet.map(x => x + 'z'\
    \ - 'a' + 4)\n        val newAlphabet5 = alphabet.map(x => x + 'z' - 'a' + 5)\n\
    \        val newAlphabet6 = alphabet.map(x => x + 'z' - 'a' + 6)\n        val\
    \ newAlphabet7 = alphabet.map(x => x + 'z' - 'a' + 7)\n        val newAlphabet8\
    \ = alphabet.map(x => x + 'z' - 'a' + 8)\n        val newAlphabet9 = alphabet.map(x\
    \ => x + 'z' - 'a' + 9)\n        val newAlphabet10 = alphabet.map(x => x + 'z'\
    \ - 'a' + 10)\n        val newAlphabet11 = alphabet.map(x => x + 'z' - 'a' + 11)\n\
    \        val newAlphabet12 = alphabet.map(x => x + 'z' - 'a' + 12)\n        val\
    \ newAlphabet13 = alphabet.map(x => x + 'z' - 'a' + 13)\n        val newAlphabet14\
    \ = alphabet.map(x => x + 'z' - 'a' + 14)\n        val newAlphabet15 = alphabet.map(x\
    \ => x + 'z' - 'a' + 15)\n        val newAlphabet16 = alphabet.map(x => x + 'z'\
    \ - 'a' + 16)\n        val newAlphabet17 = alphabet.map(x => x + 'z' - 'a' + 17)\n\
    \        val newAlphabet18 = alphabet.map(x => x + 'z' - 'a' + 18)\n        val\
    \ newAlphabet19 = alphabet.map(x => x + 'z' - 'a' + 19)\n        val newAlphabet20\
    \ = alphabet.map(x => x + 'z' - 'a' + 20)\n        val newAlphabet21 = alphabet.map(x\
    \ => x + 'z' - 'a' + 21)\n        val newAlphabet22 = alphabet.map(x => x + 'z'\
    \ - 'a' + 22)\n        val ", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => (c + c).rotate(2))\n        val\
    \ rotatedString = s.toCharArray.map(c => rotatedAlphabet(alphabet.indexOf(c))).mkString\n\
    \        rotatedString", "        var alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var result = \"\"\n        for(i <- 0 until s.length){\n            result\
    \ += alphabet(alphabet.indexOf(s)+2)\n        }\n        result", "        val\
    \ alphabet = List('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z')\n    \
    \    val newAlphabet = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val\
    \ newAlphabet2 = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphabet3\
    \ = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphabet4 = alphabet.map(x\
    \ => (x - 2) % 26 + 2).toList\n        val newAlphabet5 = alphabet.map(x => (x\
    \ - 2) % 26 + 2).toList\n        val newAlphabet6 = alphabet.map(x => (x - 2)\
    \ % 26 + 2).toList\n        val newAlphabet7 = alphabet.map(x => (x - 2) % 26\
    \ + 2).toList\n        val newAlphabet8 = alphabet.map(x => (x - 2) % 26 + 2).toList\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2) % 26 + 2).toList\n     \
    \   val newAlphabet10 = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val\
    \ newAlphabet11 = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphabet12\
    \ = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphabet13 = alphabet.map(x\
    \ => (x - 2) % 26 + 2).toList\n        val newAlphabet14 = alphabet.map(x => (x\
    \ - 2) % 26 + 2).toList\n        val newAlphabet15 = alphabet.map(x => (x - 2)\
    \ % 26 + 2).toList\n        val newAlphabet16 = alphabet.map(x => (x - 2) % 26\
    \ + 2).toList\n        val newAlphabet17 = alphabet.map(x => (x - 2) % 26 + 2).toList\n\
    \        val newAlphabet18 = alphabet.map(x => (x - 2) % 26 + 2).toList\n    \
    \    val newAlphabet19 = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val\
    \ newAlphabet20 = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphabet21\
    \ = alphabet.map(x => (x - 2) % 26 + 2).toList\n        val newAlphabet22 = alphabet.map(x\
    \ => (x - 2) % 26 + 2).toList\n        val newAlphabet23 = alphabet.map(x => (x\
    \ - 2) % 26 + 2).toList\n", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        val result = rotatedString.mkString\n        result", "        val alphabet\
    \ = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c -> alphabet(alphabet.indexOf(c)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(c => rotatedAlphabet(alphabet.indexOf(c))).mkString\n\
    \        rotatedString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        new String(rotatedString)", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c -> alphabet(alphabet.indexOf(c)\
    \ + 1))\n        val rotatedString = s.map(c => rotatedAlphabet(c))\n        rotatedString.mkString(\"\
    \")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c -> alphabet(alphabet.indexOf(c)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(c => rotatedAlphabet(alphabet.indexOf(c))).mkString\n\
    \        rotatedString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c + 'z').map(c => c + 'y').map(c\
    \ => c + 'x').map(c => c + 'w').map(c => c + 'v').map(c => c + 'u').map(c => c\
    \ + 't').map(c => c + 's').map(c => c + 'r').map(c => c + 'q').map(c => c + 'p').map(c\
    \ => c + 'o').map(c => c + 'n').map(c => c + 'm').map(c => c + 'l').map(c => c\
    \ + 'k').map(c => c + 'j').map(c => c + 'h').map(c => c + 'g').map(c => c + 'f').map(c\
    \ => c + 'e').map(c => c + 'd').map(c => c + 'c').map(c => c + 'b').map(c => c\
    \ + 'a').map(c => c + 'z')\n        val rotatedString = s.map(c => rotatedAlphabet(c))\n\
    \        rotatedString.mkString", "        var alphabet = List('a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z')\n        var result = \"\"\n        var i\
    \ = 0\n        while (i < s.length) {\n            result += alphabet(alphabet.size\
    \ - 1 - alphabet.indexOfAt(s.charAt(i)))\n            i += 1\n        }\n    \
    \    return result", "        val alphabet = List('a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val result = new StringBuilder\n        for(i <-\
    \ 0 until s.length)\n            result.append(alphabet(alphabet.indexOf(s) +\
    \ 2))\n        result.toString", "        var alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet2 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet3 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet4 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet5 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet6 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet7 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet8 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar).reverse\n       \
    \ val newString = s.map(x => newAlphabet(alphabet.indexOf(x)))\n        newString.mkString",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 9))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 10))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 11))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 12))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 13))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 14))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 15))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 16))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 17))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 18", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newAlphabet2 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 2))\n\
    \        val newAlphabet3 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 1))\n\
    \        val newAlphabet4 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 1))\n\
    \        val newAlphabet5 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 0))\n\
    \        val newAlphabet6 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 0))\n\
    \        val newAlphabet7 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 1))\n\
    \        val newAlphabet8 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 1))\n\
    \        val newAlphabet9 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newAlphabet10 = alphabet.map(x => alphabet(alphabet.indexOf(x) -\
    \ 2))\n        val newAlphabet11 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet12 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet13 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet14 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet15 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet16 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet17 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet18 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet19 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet20 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet21 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet22 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphab", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabetLength = alphabet.length\n        val alphabetRotated = alphabet.map(x\
    \ => alphabet(alphabetLength - alphabet.indexOf(x)))\n        val alphabetLengthRotated\
    \ = alphabetRotated.length\n        val alphabetLengthRotated2 = alphabetLengthRotated\
    \ * 2\n        val alphabetLengthRotated3 = alphabetLengthRotated2 * 2\n     \
    \   val alphabetLengthRotated4 = alphabetLengthRotated3 * 2\n        val alphabetLengthRotated5\
    \ = alphabetLengthRotated4 * 2\n        val alphabetLengthRotated6 = alphabetLengthRotated5\
    \ * 2\n        val alphabetLengthRotated7 = alphabetLengthRotated6 * 2\n     \
    \   val alphabetLengthRotated8 = alphabetLengthRotated7 * 2\n        val alphabetLengthRotated9\
    \ = alphabetLengthRotated8 * 2\n        val alphabetLengthRotated10 = alphabetLengthRotated9\
    \ * 2\n        val alphabetLengthRotated11 = alphabetLengthRotated10 * 2\n   \
    \     val alphabetLengthRotated12 = alphabetLengthRotated11 * 2\n        val alphabetLengthRotated13\
    \ = alphabetLengthRotated12 * 2\n        val alphabetLengthRotated14 = alphabetLengthRotated13\
    \ * 2\n        val alphabetLengthRotated15 = alphabetLengthRotated14 * 2\n   \
    \     val alphabetLengthRotated16 = alphabetLengthRotated15 * 2\n        val alphabetLengthRotated17\
    \ = alphabetLengthRotated16 * 2\n        val alphabetLengthRotated18 = alphabetLengthRotated17\
    \ * 2\n        val alphabetLengthRotated19 = alphabetLengthRotated18 * 2\n   \
    \     val alphabetLengthRotated20 = alphabetLengthRotated19 * 2\n        val alphabetLengthRotated21\
    \ = alphabetLengthRotated20 * 2\n        val alphabetLengthRotated22 = alphabetLengthRotated21\
    \ * 2\n        val alphabetLengthRotated23 = alphabetLengthRotated22 * 2\n   \
    \     val alphabetLengthRotated24 = alphabetLengthRotated23 * 2\n        val alphabetLengthRotated25\
    \ = alphabetLengthRotated24 * 2\n        val alphabetLengthRotated26 = alphabetLengthRotated25\
    \ * 2\n        val alphabetLengthRotated27 = alphabetLengthRotated26 * 2\n   \
    \     val alphabetLengthRotated28 = alphabetLengthRotated27 * 2\n        val ",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet2 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet3 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet4 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet5 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet6 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet7 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet8 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet9 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        new String(rotatedString)", "        val alphabet = List('a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z')\n        val newAlphabet = alphabet.map(x\
    \ => x + 'z' - 'a' + 1)\n        val newAlphabet2 = alphabet.map(x => x + 'z'\
    \ - 'a' + 2)\n        val newAlphabet3 = alphabet.map(x => x + 'z' - 'a' + 3)\n\
    \        val newAlphabet4 = alphabet.map(x => x + 'z' - 'a' + 4)\n        val\
    \ newAlphabet5 = alphabet.map(x => x + 'z' - 'a' + 5)\n        val newAlphabet6\
    \ = alphabet.map(x => x + 'z' - 'a' + 6)\n        val newAlphabet7 = alphabet.map(x\
    \ => x + 'z' - 'a' + 7)\n        val newAlphabet8 = alphabet.map(x => x + 'z'\
    \ - 'a' + 8)\n        val newAlphabet9 = alphabet.map(x => x + 'z' - 'a' + 9)\n\
    \        val newAlphabet10 = alphabet.map(x => x + 'z' - 'a' + 10)\n        val\
    \ newAlphabet11 = alphabet.map(x => x + 'z' - 'a' + 11)\n        val newAlphabet12\
    \ = alphabet.map(x => x + 'z' - 'a' + 12)\n        val newAlphabet13 = alphabet.map(x\
    \ => x + 'z' - 'a' + 13)\n        val newAlphabet14 = alphabet.map(x => x + 'z'\
    \ - 'a' + 14)\n        val newAlphabet15 = alphabet.map(x => x + 'z' - 'a' + 15)\n\
    \        val newAlphabet16 = alphabet.map(x => x + 'z' - 'a' + 16)\n        val\
    \ newAlphabet17 = alphabet.map(x => x + 'z' - 'a' + 17)\n        val newAlphabet18\
    \ = alphabet.map(x => x + 'z' - 'a' + 18)\n        val newAlphabet19 = alphabet.map(x\
    \ => x + 'z' - 'a' + 19)\n        val newAlphabet20 = alphabet.map(x => x + 'z'\
    \ - 'a' + 20)\n        val newAlphabet21 = alphabet.map(x => x + 'z' - 'a' + 21)\n\
    \        val newAlphabet22 = alphabet.map(x => x + 'z' - 'a' + 22)\n        val\
    \ newAlphabet23 = alphabet.map(x => x + 'z' - 'a' + ", "        val alphabet =\
    \ List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet2\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet4 = alphabet.map(x => (x - 2) %\
    \ 26 + 2)\n        val newAlphabet5 = alphabet.map(x => (x - 2) % 26 + 2)\n  \
    \      val newAlphabet6 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet7\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet8 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet9 = alphabet.map(x => (x - 2) %\
    \ 26 + 2)\n        val newAlphabet10 = alphabet.map(x => (x - 2) % 26 + 2)\n \
    \       val newAlphabet11 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet12\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet13 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet14 = alphabet.map(x => (x - 2)\
    \ % 26 + 2)\n        val newAlphabet15 = alphabet.map(x => (x - 2) % 26 + 2)\n\
    \        val newAlphabet16 = alphabet.map(x => (x - 2) % 26 + 2)\n        val\
    \ newAlphabet17 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet18\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2) % 26 + 2)\n        val newAlphabet20 = alphabet.map(x => (x - 2)\
    \ % 26 + 2)\n        val newAlphabet21 = alphabet.map(x => (x - 2) % 26 + 2)\n\
    \        val newAlphabet22 = alphabet.map(x => (x - 2) % 26 + 2)\n        val\
    \ newAlphabet23 = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet24\
    \ = alphabet.map(x => (x - 2) % 26 + 2)\n        val newAlphabet25 = alphabet.map(",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString(\"\")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)\
    \ + 2))\n        new String(rotatedString)", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => (x to (x + 2))).map(x => (x to\
    \ (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x\
    \ + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x +\
    \ 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x\
    \ => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x =>\
    \ (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x\
    \ to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to\
    \ (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x\
    \ + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x +\
    \ 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x\
    \ => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x =>\
    \ (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x\
    \ to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to\
    \ (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x\
    \ + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x +\
    \ 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x => (x to (x + 2))).map(x\
    \ => (x ", "        val alphabet = List('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet21 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet2 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet3 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet4 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet5 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet6 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet7 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet8 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet9 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c + 'z').map(c => c + 'y').map(c\
    \ => c + 'x').map(c => c + 'w').map(c => c + 'v').map(c => c + 'u').map(c => c\
    \ + 't').map(c => c + 's').map(c => c + 'r').map(c => c + 'q').map(c => c + 'p').map(c\
    \ => c + 'o').map(c => c + 'n').map(c => c + 'm').map(c => c + 'l').map(c => c\
    \ + 'k').map(c => c + 'j').map(c => c + 'h').map(c => c + 'g').map(c => c + 'f').map(c\
    \ => c + 'e').map(c => c + 'd').map(c => c + 'c').map(c => c + 'b').map(c => c\
    \ + 'a').map(c => c + 'z')\n        val rotatedAlphabetReversed = rotatedAlphabet.reverse\n\
    \        val rotatedAlphabetReversedZipped = rotatedAlphabetReversed.zip(rotatedAlphabet)\n\
    \        val rotatedAlphabetZipped = rotatedAlphabet.zip(rotatedAlphabetReversed)\n\
    \        val rotatedAlphabetZippedZipped = rotatedAlphabetZipped.zip(rotatedAlphabetZipped)\n\
    \        val rotatedAlphabetZippedZippedZipped = rotatedAlphabetZippedZipped.zip(rotatedAlphabetZippedZipped)\n\
    \        val rotatedAlphabetZippedZippedZippedZipped = rotatedAlphabetZippedZippedZipped.zip(rotatedAlphabetZippedZippedZipped)\n\
    \        val rotatedAlphabetZippedZippedZippedZippedZipped = rotatedAlphabetZippedZippedZippedZipped.zip(rotatedAlphabetZippedZippedZippedZipped)\n\
    \        val rotatedAlphabetZippedZippedZippedZippedZippedZipped = rotatedAlphabetZippedZippedZippedZippedZipped.zip(rotatedAlphabetZippedZippedZippedZippedZipped)\n\
    \        val rotatedAlphabetZippedZippedZippedZip", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z').map(x => x + 'y').map(x\
    \ => x + 'x').map(x => x + 'w').map(x => x + 'v').map(x => x + 'u').map(x => x\
    \ + 't').map(x => x + 's').map(x => x + 'r').map(x => x + 'q').map(x => x + 'p').map(x\
    \ => x + 'o').map(x => x + 'n').map(x => x + 'm').map(x => x + 'l').map(x => x\
    \ + 'k').map(x => x + 'j').map(x => x + 'h').map(x => x + 'g').map(x => x + 'f').map(x\
    \ => x + 'e').map(x => x + 'd').map(x => x + 'c').map(x => x + 'b').map(x => x\
    \ + 'a').map(x => x + 'z')\n        val newAlphabet2 = alphabet.map(x => x + 'z').map(x\
    \ => x + 'y').map(x => x + 'x').map(x => x + 'w').map(x => x + 'v').map(x => x\
    \ + 'u').map(x => x + 't').map(x => x + 's').map(x => x + 'r').map(x => x + 'q').map(x\
    \ => x + 'p').map(x => x + 'o').map(x => x + 'n').map(x => x + 'm').map(x => x\
    \ + 'l').map(x => x + 'k').map(x => x + 'j').map(x => x + 'h').map(x => x + 'g').map(x\
    \ => x + 'f').map(x => x + 'e').map(x => x + 'd').map(x => x + 'c').map(x => x\
    \ + 'b').map(x => x + 'a').map(x => x + 'z')\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'z').map(x => x + 'y').map(x => x + 'x').map(x => x + 'w').map(x => x\
    \ + 'v').map(x => x + 'u').map(x => x + 't').map(x => x + 's').map(x => x + 'r').map(",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)\
    \ + 2))\n        rotatedString.mkString(\"\")", "        val alphabet = List('a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z')\n        val newAlphabet = alphabet.map(x\
    \ => (x -> alphabet(alphabet.indexOf(x) + 2))).toMap\n        val newString =\
    \ s.map(x => newAlphabet(x)).mkString\n        newString", "        val alphabet\
    \ = List('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\
    \ 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z')\n        val newAlphabet\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) + 2))\n        val newAlphabet2\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) - 2))\n        val newAlphabet3\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) + 1))\n        val newAlphabet4\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) - 1))\n        val newAlphabet5\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) + 2))\n        val newAlphabet6\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) - 2))\n        val newAlphabet7\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) + 1))\n        val newAlphabet8\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) - 1))\n        val newAlphabet9\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) + 2))\n        val newAlphabet10\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) - 2))\n        val newAlphabet11\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) + 1))\n        val newAlphabet12\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) - 1))\n        val newAlphabet13\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) + 2))\n        val newAlphabet14\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) - 2))\n        val newAlphabet15\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) + 1))\n        val newAlphabet16\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) - 1))\n        val newAlphabet17\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) + 2))\n        val newAlphabet18\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) - 2))\n        val newAlphabet19\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) + 1))\n        val newAlphabet20\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) - 1))\n        val newAlphabet21\
    \ = alphabet.map(x => x -> alphabet(alphabet.indexOf(x) + 2))\n", "        val\
    \ alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet2\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet4 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet5 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet6\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet7 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet8 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet9 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet10\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet11 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet12 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet13 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet14\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet15 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet16 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet17 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet18\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet19 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet20 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet21 = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet22\
    \ = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet23 = alphabet.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet24 = alphabet.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet25 = alphabet.map(", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)\
    \ + 2))\n        rotatedString.mkString(\"\")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar).map(x => alphabet(x)).mkString\n\
    \        val newString = s.map(x => newAlphabet(alphabet.indexOf(x) + 2))\n  \
    \      newString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)\
    \ + 2))\n        val result = new String(rotatedString)\n        result", "  \
    \      val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x.toUpperCase)\n        val newAlphabet2\
    \ = newAlphabet.map(x => x.toUpperCase)\n        val newAlphabet3 = newAlphabet2.map(x\
    \ => x.toUpperCase)\n        val newAlphabet4 = newAlphabet3.map(x => x.toUpperCase)\n\
    \        val newAlphabet5 = newAlphabet4.map(x => x.toUpperCase)\n        val\
    \ newAlphabet6 = newAlphabet5.map(x => x.toUpperCase)\n        val newAlphabet7\
    \ = newAlphabet6.map(x => x.toUpperCase)\n        val newAlphabet8 = newAlphabet7.map(x\
    \ => x.toUpperCase)\n        val newAlphabet9 = newAlphabet8.map(x => x.toUpperCase)\n\
    \        val newAlphabet10 = newAlphabet9.map(x => x.toUpperCase)\n        val\
    \ newAlphabet11 = newAlphabet10.map(x => x.toUpperCase)\n        val newAlphabet12\
    \ = newAlphabet11.map(x => x.toUpperCase)\n        val newAlphabet13 = newAlphabet12.map(x\
    \ => x.toUpperCase)\n        val newAlphabet14 = newAlphabet13.map(x => x.toUpperCase)\n\
    \        val newAlphabet15 = newAlphabet14.map(x => x.toUpperCase)\n        val\
    \ newAlphabet16 = newAlphabet15.map(x => x.toUpperCase)\n        val newAlphabet17\
    \ = newAlphabet16.map(x => x.toUpperCase)\n        val newAlphabet18 = newAlphabet17.map(x\
    \ => x.toUpperCase)\n        val newAlphabet19 = newAlphabet18.map(x => x.toUpperCase)\n\
    \        val newAlphabet20 = newAlphabet19.map(x => x.toUpperCase)\n        val\
    \ newAlphabet21 = newAlphabet20.map(x => x.toUpperCase)\n        val newAlphabet22\
    \ = newAlphabet21.map(x => x.toUpperCase)\n        val newAlphabet23 = newAlphabet22.map(x\
    \ => x.toUpperCase)\n        val newAlphabet24 = newAlphabet23.map(x => x.toUpperCase)\n\
    \        val newAlphabet25 = newAlphabet24.map(x => x.toUpperCase)\n        val\
    \ newAlphabet26", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newString = s.toCharArray.zip(newAlphabet).map(x => x._1 + x._2).mkString\n\
    \        newString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x - 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x - 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z').map(x => x + 'y').map(x\
    \ => x + 'x').map(x => x + 'w').map(x => x + 'v').map(x => x + 'u').map(x => x\
    \ + 't').map(x => x + 's').map(x => x + 'r').map(x => x + 'q').map(x => x + 'p').map(x\
    \ => x + 'o').map(x => x + 'n').map(x => x + 'm').map(x => x + 'l').map(x => x\
    \ + 'k').map(x => x + 'j').map(x => x + 'h').map(x => x + 'g').map(x => x + 'f').map(x\
    \ => x + 'e').map(x => x + 'd').map(x => x + 'c').map(x => x + 'b').map(x => x\
    \ + 'a').map(x => x + 'z')\n        val newAlphabet2 = alphabet.map(x => x + 'z').map(x\
    \ => x + 'y').map(x => x + 'x').map(x => x + 'w').map(x => x + 'v').map(x => x\
    \ + 'u').map(x => x + 't').map(x => x + 's').map(x => x + 'r').map(x => x + 'q').map(x\
    \ => x + 'p').map(x => x + 'o').map(x => x + 'n').map(x => x + 'm').map(x => x\
    \ + 'l').map(x => x + 'k').map(x => x + 'j').map(x => x + 'h').map(x => x + 'g').map(x\
    \ => x + 'f').map(x => x + 'e').map(x => x + 'd').map(x => x + 'c').map(x => x\
    \ + 'b').map(x => x + 'a').map(x => x + 'z')\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'z').map(x => x + 'y').map(x => x + 'x').map(x => x + 'w').map(x => x\
    \ + 'v').map(x => x + 'u').map(x => x + 't').map(x => x + 's').map(x => x + 'r').map(",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => (c -> alphabet(alphabet.indexOf(c)\
    \ + 2)))\n        val rotatedString = s.map(c => rotatedAlphabet(c))\n       \
    \ rotatedString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 2)\n        val newAlphabet2\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet3 = alphabet.map(x => x -\
    \ 1)\n        val newAlphabet4 = alphabet.map(x => x - 2)\n        val newAlphabet5\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet6 = alphabet.map(x => x -\
    \ 1)\n        val newAlphabet7 = alphabet.map(x => x - 2)\n        val newAlphabet8\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet9 = alphabet.map(x => x -\
    \ 2)\n        val newAlphabet10 = alphabet.map(x => x + 1)\n        val newAlphabet11\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet12 = alphabet.map(x => x\
    \ + 1)\n        val newAlphabet13 = alphabet.map(x => x - 2)\n        val newAlphabet14\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet15 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet16 = alphabet.map(x => x + 1)\n        val newAlphabet17\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet18 = alphabet.map(x => x\
    \ + 1)\n        val newAlphabet19 = alphabet.map(x => x - 2)\n        val newAlphabet20\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet21 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet22 = alphabet.map(x => x + 1)\n        val newAlphabet23\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet24 = alphabet.map(x => x\
    \ + 1)\n        val newAlphabet25 = alphabet.map(x => x - 2)\n        val newAlphabet26\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet27 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet28 = alphabet.map(x => x + 1)\n        val newAlphabet29\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet30 = alphabet.map(x => x\
    \ + 1)\n        val newAlphabet31 = alphabet.map(x => x - 2)\n        ", "   \
    \     val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newAlphabet2 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 2))\n\
    \        val newAlphabet3 = alphabet.map(x => alphabet(alphabet.indexOf(x) - 4))\n\
    \        val newAlphabet4 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 4))\n\
    \        val newAlphabet5 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 6))\n\
    \        val newAlphabet6 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 8))\n\
    \        val newAlphabet7 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 10))\n\
    \        val newAlphabet8 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 12))\n\
    \        val newAlphabet9 = alphabet.map(x => alphabet(alphabet.indexOf(x) + 14))\n\
    \        val newAlphabet10 = alphabet.map(x => alphabet(alphabet.indexOf(x) +\
    \ 16))\n        val newAlphabet11 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 18))\n        val newAlphabet12 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 20))\n        val newAlphabet13 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 22))\n        val newAlphabet14 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 24))\n        val newAlphabet15 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 26))\n        val newAlphabet16 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 28))\n        val newAlphabet17 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 30))\n        val newAlphabet18 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 32))\n        val newAlphabet19 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 34))\n        val newAlphabet20 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 36))\n        val newAlphabet21 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 38))\n        val newAlphabet22 = alphabet.map(x => alphabet", "        val\
    \ alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedAlphabet2 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val rotatedAlphabet3 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val rotatedAlphabet4 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val rotatedAlphabet5 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 10))\n        val rotatedAlphabet6 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 12))\n        val rotatedAlphabet7 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 14))\n        val rotatedAlphabet8 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 16))\n        val rotatedAlphabet9 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 18))\n        val rotatedAlphabet10 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 20))\n        val rotatedAlphabet11 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 22))\n        val rotatedAlphabet12 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 24))\n        val rotatedAlphabet13 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 26))\n        val rotatedAlphabet14 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 28))\n        val rotatedAlphabet15 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 30))\n        val rotatedAlphabet16 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 32))\n        val rotatedAlphabet17 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 34))\n        val rotatedAlphabet18 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 36))\n        val rotatedAlphabet19 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 38))\n        val rotatedAlphabet20 = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 40))\n        val rotatedAlphabet21 = alphabet.map(x => ", "        val alphabet\
    \ = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c + 'z').map(c => c + 'y').map(c\
    \ => c + 'x').map(c => c + 'w').map(c => c + 'v').map(c => c + 'u').map(c => c\
    \ + 't').map(c => c + 's').map(c => c + 'r').map(c => c + 'q').map(c => c + 'p').map(c\
    \ => c + 'o').map(c => c + 'n').map(c => c + 'm').map(c => c + 'l').map(c => c\
    \ + 'k').map(c => c + 'j').map(c => c + 'h').map(c => c + 'g').map(c => c + 'f').map(c\
    \ => c + 'e').map(c => c + 'd').map(c => c + 'c').map(c => c + 'b').map(c => c\
    \ + 'a').map(c => c + 'z').map(c => c + 'y').map(c => c + 'x')\n        val rotatedAlphabet2\
    \ = alphabet.map(c => c + 'z').map(c => c + 'y').map(c => c + 'x').map(c => c\
    \ + 'w').map(c => c + 'v').map(c => c + 'u').map(c => c + 't').map(c => c + 's').map(c\
    \ => c + 'r').map(c => c + 'q').map(c => c + 'p').map(c => c + 'o').map(c => c\
    \ + 'n').map(c => c + 'm').map(c => c + 'l').map(c => c + 'k').map(c => c + 'j').map(c\
    \ => c + 'h').map(c => c + 'g').map(c => c + 'f').map(c => c + 'e').map(c => c\
    \ + 'd').map(c => c + 'c').map(c => c + 'b').map(c => c + 'a').map(c => c + 'z').map(c\
    \ => c + 'y').map(c => c + 'x')\n        val rotatedAlphabet3 = alphabet.map(c\
    \ => c + 'z').map(c => c + 'y').map(c => c + 'x').map(c => c + 'w').map(c => c\
    \ + 'v').", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 9))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 9))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 10))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 10))\n        val newAlphab", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newString = s.map(x => newAlphabet(alphabet.indexOf(x)))\n\
    \        newString.mkString(\"\")", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z')\n        val result = new StringBuilder()\n\
    \        for(i <- 0 until s.length)\n            result.append(alphabet(alphabet.indexOf(s.charAt(i))\
    \ + (alphabet.size/2)).toString)\n        return result.toString", "        val\
    \ alphabet = List('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z')\n    \
    \    val newAlphabet = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x) +\
    \ 2))).toMap\n        val newString = s.map(x => newAlphabet.getOrElse(x, x))\n\
    \        newString.mkString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 9))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 9))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 10))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 10))\n        val newAlphab", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet2 = List('b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet3 = List('c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet4 = List('d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet5 = List('e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet6 = List('f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet7 = List('g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet8 = List('h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet9 = List('i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet10 = List('j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet11 = List('k','l','m','n','", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => c -> alphabet(alphabet.indexOf(c)\
    \ + 2))\n        val rotatedString = s.map(c => rotatedAlphabet(alphabet.indexOf(c))).mkString\n\
    \        rotatedString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar).reverse\n       \
    \ val newString = s.toCharArray.zip(newAlphabet).map(x => x._1 + x._2).mkString\n\
    \        newString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 10))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 12))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 14))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 16))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 18))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 20))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 22))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 24))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 26))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 28))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 30))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 32))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 34))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 36))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 38))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphab",
  "        var alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet2 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet3 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet4 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet5 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet6 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet7 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet8 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 0))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 8))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 9))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 10))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 11))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 12))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 13))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 14))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 15))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 16))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 17))", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet2 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet3 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet4 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet5 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet6 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet7 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet8 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabet9 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 2)\n        val newAlphabet2\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet3 = alphabet.map(x => x -\
    \ 2)\n        val newAlphabet4 = alphabet.map(x => x - 1)\n        val newAlphabet5\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet6 = alphabet.map(x => x -\
    \ 2)\n        val newAlphabet7 = alphabet.map(x => x - 1)\n        val newAlphabet8\
    \ = alphabet.map(x => x + 2)\n        val newAlphabet9 = alphabet.map(x => x +\
    \ 1)\n        val newAlphabet10 = alphabet.map(x => x - 2)\n        val newAlphabet11\
    \ = alphabet.map(x => x - 1)\n        val newAlphabet12 = alphabet.map(x => x\
    \ + 2)\n        val newAlphabet13 = alphabet.map(x => x + 1)\n        val newAlphabet14\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet15 = alphabet.map(x => x\
    \ - 1)\n        val newAlphabet16 = alphabet.map(x => x + 2)\n        val newAlphabet17\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet18 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet19 = alphabet.map(x => x - 1)\n        val newAlphabet20\
    \ = alphabet.map(x => x + 2)\n        val newAlphabet21 = alphabet.map(x => x\
    \ + 1)\n        val newAlphabet22 = alphabet.map(x => x - 2)\n        val newAlphabet23\
    \ = alphabet.map(x => x - 1)\n        val newAlphabet24 = alphabet.map(x => x\
    \ + 2)\n        val newAlphabet25 = alphabet.map(x => x + 1)\n        val newAlphabet26\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet27 = alphabet.map(x => x\
    \ - 1)\n        val newAlphabet28 = alphabet.map(x => x + 2)\n        val newAlphabet29\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet30 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet31 = alphabet.map(x => x - 1)\n        ", "   \
    \     val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 2)\n        val newAlphabet2\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet3 = alphabet.map(x => x -\
    \ 2)\n        val newAlphabet4 = alphabet.map(x => x - 1)\n        val newAlphabet5\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet6 = alphabet.map(x => x -\
    \ 2)\n        val newAlphabet7 = alphabet.map(x => x - 1)\n        val newAlphabet8\
    \ = alphabet.map(x => x + 2)\n        val newAlphabet9 = alphabet.map(x => x +\
    \ 1)\n        val newAlphabet10 = alphabet.map(x => x - 2)\n        val newAlphabet11\
    \ = alphabet.map(x => x - 1)\n        val newAlphabet12 = alphabet.map(x => x\
    \ + 2)\n        val newAlphabet13 = alphabet.map(x => x + 1)\n        val newAlphabet14\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet15 = alphabet.map(x => x\
    \ - 1)\n        val newAlphabet16 = alphabet.map(x => x + 2)\n        val newAlphabet17\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet18 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet19 = alphabet.map(x => x - 1)\n        val newAlphabet20\
    \ = alphabet.map(x => x + 2)\n        val newAlphabet21 = alphabet.map(x => x\
    \ + 1)\n        val newAlphabet22 = alphabet.map(x => x - 2)\n        val newAlphabet23\
    \ = alphabet.map(x => x - 1)\n        val newAlphabet24 = alphabet.map(x => x\
    \ + 2)\n        val newAlphabet25 = alphabet.map(x => x + 1)\n        val newAlphabet26\
    \ = alphabet.map(x => x - 2)\n        val newAlphabet27 = alphabet.map(x => x\
    \ - 1)\n        val newAlphabet28 = alphabet.map(x => x + 2)\n        val newAlphabet29\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet30 = alphabet.map(x => x\
    \ - 2)\n        val newAlphabet31 = alphabet.map(x => x - 1)\n        ", "   \
    \     val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = newAlphabet.map(x => (x - 2).toChar)\n        val newAlphabet3 = newAlphabet2.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = newAlphabet3.map(x => (x - 2).toChar)\n\
    \        val newAlphabet5 = newAlphabet4.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet6 = newAlphabet5.map(x => (x - 2).toChar)\n        val newAlphabet7\
    \ = newAlphabet6.map(x => (x - 2).toChar)\n        val newAlphabet8 = newAlphabet7.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet9 = newAlphabet8.map(x => (x - 2).toChar)\n\
    \        val newAlphabet10 = newAlphabet9.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet11 = newAlphabet10.map(x => (x - 2).toChar)\n        val newAlphabet12\
    \ = newAlphabet11.map(x => (x - 2).toChar)\n        val newAlphabet13 = newAlphabet12.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet14 = newAlphabet13.map(x => (x -\
    \ 2).toChar)\n        val newAlphabet15 = newAlphabet14.map(x => (x - 2).toChar)\n\
    \        val newAlphabet16 = newAlphabet15.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet17 = newAlphabet16.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = newAlphabet17.map(x => (x - 2).toChar)\n        val newAlphabet19 = newAlphabet18.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = newAlphabet19.map(x => (x -\
    \ 2).toChar)\n        val newAlphabet21 = newAlphabet20.map(x => (x - 2).toChar)\n\
    \        val newAlphabet22 = newAlphabet21.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet23 = newAlphabet22.map(x => (x - 2).toChar)\n        val newAlphabet24\
    \ = newAlphabet23.map(x => (x - 2).toChar)\n", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x.toUpperCase).reverse\n        val\
    \ newAlphabet2 = newAlphabet.map(x => x.toUpperCase).reverse\n        val newAlphabet3\
    \ = newAlphabet2.map(x => x.toUpperCase).reverse\n        val newAlphabet4 = newAlphabet3.map(x\
    \ => x.toUpperCase).reverse\n        val newAlphabet5 = newAlphabet4.map(x =>\
    \ x.toUpperCase).reverse\n        val newAlphabet6 = newAlphabet5.map(x => x.toUpperCase).reverse\n\
    \        val newAlphabet7 = newAlphabet6.map(x => x.toUpperCase).reverse\n   \
    \     val newAlphabet8 = newAlphabet7.map(x => x.toUpperCase).reverse\n      \
    \  val newAlphabet9 = newAlphabet8.map(x => x.toUpperCase).reverse\n        val\
    \ newAlphabet10 = newAlphabet9.map(x => x.toUpperCase).reverse\n        val newAlphabet11\
    \ = newAlphabet10.map(x => x.toUpperCase).reverse\n        val newAlphabet12 =\
    \ newAlphabet11.map(x => x.toUpperCase).reverse\n        val newAlphabet13 = newAlphabet12.map(x\
    \ => x.toUpperCase).reverse\n        val newAlphabet14 = newAlphabet13.map(x =>\
    \ x.toUpperCase).reverse\n        val newAlphabet15 = newAlphabet14.map(x => x.toUpperCase).reverse\n\
    \        val newAlphabet16 = newAlphabet15.map(x => x.toUpperCase).reverse\n \
    \       val newAlphabet17 = newAlphabet16.map(x => x.toUpperCase).reverse\n  \
    \      val newAlphabet18 = newAlphabet17.map(x => x.toUpperCase).reverse\n   \
    \     val newAlphabet19 = newAlphabet18.map(x => x.toUpperCase).reverse\n    \
    \    val newAlphabet20 = newAlphabet19.map(x => x.toUpperCase).reverse\n     \
    \   val newAlphabet21 = newAlphabet20.map(x => x.toUpperCase).reverse\n      \
    \  val newAlphabet22 = newAlphabet21.map(x => x.toUpperCase).reverse\n       \
    \ val newAlphabet23 = newAlphabet22.map(x => x.toUpperCase).reverse\n        val\
    \ newAlphabet24 = newAlphabet23.map(x => x.toUpperCase).reverse\n", "        val\
    \ alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newAlphabet2 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 2)))\n        val newAlphabet3 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newAlphabet4 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 2)))\n        val newAlphabet5 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newAlphabet6 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 2)))\n        val newAlphabet7 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newAlphabet8 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 2)))\n        val newAlphabet9 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newAlphabet10 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 2)))\n        val newAlphabet11 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newAlphabet12 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 2)))\n        val newAlphabet13 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newAlphabet14 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 2)))\n        val newAlphabet15 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newAlphabet16 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 2)))\n        val newAlphabet17 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newAlphabet18 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 2)))\n        val newAlphabet19 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newAlphabet20 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 2)))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z' - 'a')\n        val newAlphabet2\
    \ = newAlphabet.map(x => x + 'z' - 'a')\n        val newAlphabet3 = newAlphabet2.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet4 = newAlphabet3.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet5 = newAlphabet4.map(x => x + 'z' - 'a')\n  \
    \      val newAlphabet6 = newAlphabet5.map(x => x + 'z' - 'a')\n        val newAlphabet7\
    \ = newAlphabet6.map(x => x + 'z' - 'a')\n        val newAlphabet8 = newAlphabet7.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet9 = newAlphabet8.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet10 = newAlphabet9.map(x => x + 'z' - 'a')\n \
    \       val newAlphabet11 = newAlphabet10.map(x => x + 'z' - 'a')\n        val\
    \ newAlphabet12 = newAlphabet11.map(x => x + 'z' - 'a')\n        val newAlphabet13\
    \ = newAlphabet12.map(x => x + 'z' - 'a')\n        val newAlphabet14 = newAlphabet13.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet15 = newAlphabet14.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet16 = newAlphabet15.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet17 = newAlphabet16.map(x => x + 'z' - 'a')\n        val\
    \ newAlphabet18 = newAlphabet17.map(x => x + 'z' - 'a')\n        val newAlphabet19\
    \ = newAlphabet18.map(x => x + 'z' - 'a')\n        val newAlphabet20 = newAlphabet19.map(x\
    \ => x + 'z' - 'a')\n        val newAlphabet21 = newAlphabet20.map(x => x + 'z'\
    \ - 'a')\n        val newAlphabet22 = newAlphabet21.map(x => x + 'z' - 'a')\n\
    \        val newAlphabet23 = newAlphabet22.map(x => x + 'z", "        var alphabet\
    \ = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet2 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet3 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet4 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet5 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet6 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet7 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet8 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 10))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 12))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 14))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 16))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 18))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 20))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 22))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 24))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 26))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 28))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 30))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 32))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 34))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 36))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.",
  "        var alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet2 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet3 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet4 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet5 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet6 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet7 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        var newAlphabet8 = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newString = s.toCharArray.map(x => newAlphabet(alphabet.indexOf(x)).apply(x))\n\
    \        new String(newString)", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 8))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 9))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 10))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 11))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 12))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 13))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 14))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 15))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 16))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 17))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 18", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.map(x => x._1 + x._2).mkString(\"\")", "        val alphabet\
    \ = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabetLength = alphabet.length\n        val alphabetShift = alphabet.length/2\n\
    \        val alphabetShift2 = alphabet.length/2\n        val alphabetShift3 =\
    \ alphabet.length/2\n        val alphabetShift4 = alphabet.length/2\n        val\
    \ alphabetShift5 = alphabet.length/2\n        val alphabetShift6 = alphabet.length/2\n\
    \        val alphabetShift7 = alphabet.length/2\n        val alphabetShift8 =\
    \ alphabet.length/2\n        val alphabetShift9 = alphabet.length/2\n        val\
    \ alphabetShift10 = alphabet.length/2\n        val alphabetShift11 = alphabet.length/2\n\
    \        val alphabetShift12 = alphabet.length/2\n        val alphabetShift13\
    \ = alphabet.length/2\n        val alphabetShift14 = alphabet.length/2\n     \
    \   val alphabetShift15 = alphabet.length/2\n        val alphabetShift16 = alphabet.length/2\n\
    \        val alphabetShift17 = alphabet.length/2\n        val alphabetShift18\
    \ = alphabet.length/2\n        val alphabetShift19 = alphabet.length/2\n     \
    \   val alphabetShift20 = alphabet.length/2\n        val alphabetShift21 = alphabet.length/2\n\
    \        val alphabetShift22 = alphabet.length/2\n        val alphabetShift23\
    \ = alphabet.length/2\n        val alphabetShift24 = alphabet.length/2\n     \
    \   val alphabetShift25 = alphabet.length/2\n        val alphabetShift26 = alphabet.length/2\n\
    \        val alphabetShift27 = alphabet.length/2\n        val alphabetShift28\
    \ = alphabet.length/2\n        val alphabetShift29 = alphabet.length/2\n     \
    \   val alphabetShift30 = alphabet.length/2\n        val alphabetShift31 = alphabet.length/2\n\
    \        val alphabetShift32 = alphabet.length/2\n        val alphabetShift33\
    \ = alphabet.length/2\n        val alphabetShift34 = alphabet.length/2\n     \
    \   val alphabetShift35 = alphabet.length/2\n        val alphabetShift36 = alphabet.length/2\n\
    \        val alphabetShift37 = alphabet.length/2\n        val alphabetShift38\
    \ = alphabet.length/2\n        val alphabetShift39 = alphabet.length/2\n     \
    \   val alphabetShift40 = alphabet.length/2\n        val alphabetShift41 = alphabet.length/2\n\
    \        val alphabetShift42 = alphabet.length/2\n        val alphabetShift43\
    \ = alphabet.length/2\n        val alphabetShift44 = alphabet.length/2\n     \
    \   val alphabetShift45 = alphabet.length/2\n        val alphabetShift46 = alphabet.length/2",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = newAlphabet.map(x => (x - 2).toChar)\n        val newAlphabet3 = newAlphabet2.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = newAlphabet3.map(x => (x - 2).toChar)\n\
    \        val newAlphabet5 = newAlphabet4.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet6 = newAlphabet5.map(x => (x - 2).toChar)\n        val newAlphabet7\
    \ = newAlphabet6.map(x => (x - 2).toChar)\n        val newAlphabet8 = newAlphabet7.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet9 = newAlphabet8.map(x => (x - 2).toChar)\n\
    \        val newAlphabet10 = newAlphabet9.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet11 = newAlphabet10.map(x => (x - 2).toChar)\n        val newAlphabet12\
    \ = newAlphabet11.map(x => (x - 2).toChar)\n        val newAlphabet13 = newAlphabet12.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet14 = newAlphabet13.map(x => (x -\
    \ 2).toChar)\n        val newAlphabet15 = newAlphabet14.map(x => (x - 2).toChar)\n\
    \        val newAlphabet16 = newAlphabet15.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet17 = newAlphabet16.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = newAlphabet17.map(x => (x - 2).toChar)\n        val newAlphabet19 = newAlphabet18.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = newAlphabet19.map(x => (x -\
    \ 2).toChar)\n        val newAlphabet21 = newAlphabet20.map(x => (x - 2).toChar)\n\
    \        val newAlphabet22 = newAlphabet21.map(x => (x - 2).toChar)\n        val\
    \ newAlphabet23 = newAlphabet22.map(x => (x - 2).toChar)\n        val newAlphabet24\
    \ = newAlphabet23.map(x => (x - 2).toChar)\n", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.toCharArray.map(x => rotatedAlphabet(alphabet.indexOf(x)\
    \ + 2))\n        new String(rotatedString)", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x) + 2))\n\
    \        val newString = s.toCharArray.map(x => newAlphabet(alphabet.indexOf(x)\
    \ + 2))\n        new String(newString)", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z').map(x => x + 'y').map(x\
    \ => x + 'x').map(x => x + 'w').map(x => x + 'v').map(x => x + 'u').map(x => x\
    \ + 't').map(x => x + 's').map(x => x + 'r').map(x => x + 'q').map(x => x + 'p').map(x\
    \ => x + 'o').map(x => x + 'n').map(x => x + 'm').map(x => x + 'l').map(x => x\
    \ + 'k').map(x => x + 'j').map(x => x + 'h').map(x => x + 'g').map(x => x + 'f').map(x\
    \ => x + 'e').map(x => x + 'd').map(x => x + 'c').map(x => x + 'b').map(x => x\
    \ + 'a').map(x => x + 'z')\n        val newAlphabet2 = alphabet.map(x => x + 'z').map(x\
    \ => x + 'y').map(x => x + 'x').map(x => x + 'w').map(x => x + 'v').map(x => x\
    \ + 'u').map(x => x + 't').map(x => x + 's').map(x => x + 'r').map(x => x + 'q').map(x\
    \ => x + 'p').map(x => x + 'o').map(x => x + 'n').map(x => x + 'm').map(x => x\
    \ + 'l').map(x => x + 'k').map(x => x + 'j').map(x => x + 'h').map(x => x + 'g').map(x\
    \ => x + 'f').map(x => x + 'e').map(x => x + 'd').map(x => x + 'c').map(x => x\
    \ + 'b').map(x => x + 'a').map(x => x + 'z')\n        val newAlphabet3 = alphabet.map(x\
    \ => x + 'z').map(x => x + 'y').map(x => x + 'x').map(x => x + 'w').map(x => x\
    \ + 'v').map(x => x + 'u').map(x => x + 't').map(x => x + 's').map(x => x + 'r').map(",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 0))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 0))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 3))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 3))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 4))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 4))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 5))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 5))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 6))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 6))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 7))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 7))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 'z').map(x => x + 'y').map(x\
    \ => x + 'x').map(x => x + 'w').map(x => x + 'v').map(x => x + 'u').map(x => x\
    \ + 't').map(x => x + 's').map(x => x + 'r').map(x => x + 'q').map(x => x + 'p').map(x\
    \ => x + 'o').map(x => x + 'n').map(x => x + 'm').map(x => x + 'l').map(x => x\
    \ + 'k').map(x => x + 'j').map(x => x + 'i').map(x => x + 'h').map(x => x + 'g').map(x\
    \ => x + 'f').map(x => x + 'e').map(x => x + 'd').map(x => x + 'c').map(x => x\
    \ + 'b').map(x => x + 'a').map(x => x + 'z')\n        val newAlphabet2 = alphabet.map(x\
    \ => x + 'z').map(x => x + 'y').map(x => x + 'x').map(x => x + 'w').map(x => x\
    \ + 'v').map(x => x + 'u').map(x => x + 't').map(x => x + 's').map(x => x + 'r').map(x\
    \ => x + 'q').map(x => x + 'p').map(x => x + 'o').map(x => x + 'n').map(x => x\
    \ + 'm').map(x => x + 'l').map(x => x + 'k').map(x => x + 'j').map(x => x + 'i').map(x\
    \ => x + 'h').map(x => x + 'g').map(x => x + 'f').map(x => x + 'e').map(x => x\
    \ + 'd').map(x => x + 'c').map(x => x + 'b').map(x => x + 'a').map(x => x + 'z')\n\
    \        val newAlphabet3 = alphabet.map(x => x + 'z').map(x => x + 'y').map(x\
    \ => x + 'x').map(x => x + 'w').map(x => x + 'v').map(x => x + 'u').map(x => x\
    \ + 't').map(", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet2\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet3 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet4 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet5 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet6\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet7 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet8 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet9 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet10\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet11 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet12 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet13 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet14\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet15 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet16 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet17 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet18\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet19 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet20 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet21 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet22\
    \ = alphabet.map(x => (x + 2).toChar)\n        val newAlphabet23 = alphabet.map(x\
    \ => (x - 2).toChar)\n        val newAlphabet24 = alphabet.map(x => (x + 2).toChar)\n\
    \        val newAlphabet25 = alphabet.map(x => (x - 2).toChar)\n        val newAlphabet26\
    \ = alphabet.map(x => (x + 2).toChar", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(c => (c + 'z').toChar)\n        val\
    \ rotatedAlphabet2 = rotatedAlphabet.map(c => (c + 'y').toChar)\n        val rotatedAlphabet3\
    \ = rotatedAlphabet2.map(c => (c + 'x').toChar)\n        val rotatedAlphabet4\
    \ = rotatedAlphabet3.map(c => (c + 'w').toChar)\n        val rotatedAlphabet5\
    \ = rotatedAlphabet4.map(c => (c + 'v').toChar)\n        val rotatedAlphabet6\
    \ = rotatedAlphabet5.map(c => (c + 'u').toChar)\n        val rotatedAlphabet7\
    \ = rotatedAlphabet6.map(c => (c + 't').toChar)\n        val rotatedAlphabet8\
    \ = rotatedAlphabet7.map(c => (c + 's').toChar)\n        val rotatedAlphabet9\
    \ = rotatedAlphabet8.map(c => (c + 'r').toChar)\n        val rotatedAlphabet10\
    \ = rotatedAlphabet9.map(c => (c + 'q').toChar)\n        val rotatedAlphabet11\
    \ = rotatedAlphabet10.map(c => (c + 'p').toChar)\n        val rotatedAlphabet12\
    \ = rotatedAlphabet11.map(c => (c + 'o').toChar)\n        val rotatedAlphabet13\
    \ = rotatedAlphabet12.map(c => (c + 'n').toChar)\n        val rotatedAlphabet14\
    \ = rotatedAlphabet13.map(c => (c + 'm').toChar)\n        val rotatedAlphabet15\
    \ = rotatedAlphabet14.map(c => (c + 'l').toChar)\n        val rotatedAlphabet16\
    \ = rotatedAlphabet15.map(c => (c + 'k').toChar)\n        val rotatedAlphabet17\
    \ = rotatedAlphabet16.map(c => (c + 'j').toChar)\n        val rotatedAlphabet18\
    \ = rotatedAlphabet17.map(c => (c + 'i').toChar)\n        val rotatedAlphabet19\
    \ = rotatedAlphabet18.map(c => (c + 'h').toChar)\n        val rotatedAlphabet20\
    \ = rotatedAlphabet19.map(", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2)))\n        val newAlphabet2 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 2)))\n        val newAlphabet3 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 4)))\n        val newAlphabet4 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 4)))\n        val newAlphabet5 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 8)))\n        val newAlphabet6 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 8)))\n        val newAlphabet7 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 12)))\n        val newAlphabet8 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 12)))\n        val newAlphabet9 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 16)))\n        val newAlphabet10 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 16)))\n        val newAlphabet11 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 20)))\n        val newAlphabet12 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 20)))\n        val newAlphabet13 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 24)))\n        val newAlphabet14 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 24)))\n        val newAlphabet15 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 28)))\n        val newAlphabet16 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 28)))\n        val newAlphabet17 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 32)))\n        val newAlphabet18 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ - 32)))\n        val newAlphabet19 = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 36)))\n        val newAlphabet20 = alphabet.map(x => (", "        val alphabet\
    \ = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2))).toMap\n        val newString = s.toCharArray.map(x => newAlphabet(x)).mkString\n\
    \        newString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => (x -> alphabet(alphabet.indexOf(x)\
    \ + 2))).toMap\n        val rotatedString = s.map(x => rotatedAlphabet(x)).mkString\n\
    \        rotatedString", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet2 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet3 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet4 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet5 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet6 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet7 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet8 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet9 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet10 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet11 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet12 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet13 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet14 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet15 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet16 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet17 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val newAlphabet18 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 2))\n        val newAlphabet19 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ + 1))\n        val newAlphabet20 = alphabet.map(x => x -> alphabet(alphabet.indexOf(x)\
    \ - 1))\n        val newAlphabet2", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => alphabet(alphabet.indexOf(x)\
    \ + 2))\n        val rotatedString = s.map(x => rotatedAlphabet(alphabet.indexOf(x)))\n\
    \        rotatedString.mkString", "        val alphabet = List('a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z')\n        val rotatedAlphabet = alphabet.map(x\
    \ => alphabet(alphabet.indexOf(x) + 2))\n        val rotatedString = s.toCharArray.map(x\
    \ => rotatedAlphabet(alphabet.indexOf(x)))\n        new String(rotatedString)",
  "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val rotatedAlphabet = alphabet.map(x => x + 'z' - 'a')\n        val rotatedAlphabet2\
    \ = rotatedAlphabet.map(x => x + 'z' - 'a')\n        val rotatedAlphabet3 = rotatedAlphabet2.map(x\
    \ => x + 'z' - 'a')\n        val rotatedAlphabet4 = rotatedAlphabet3.map(x =>\
    \ x + 'z' - 'a')\n        val rotatedAlphabet5 = rotatedAlphabet4.map(x => x +\
    \ 'z' - 'a')\n        val rotatedAlphabet6 = rotatedAlphabet5.map(x => x + 'z'\
    \ - 'a')\n        val rotatedAlphabet7 = rotatedAlphabet6.map(x => x + 'z' - 'a')\n\
    \        val rotatedAlphabet8 = rotatedAlphabet7.map(x => x + 'z' - 'a')\n   \
    \     val rotatedAlphabet9 = rotatedAlphabet8.map(x => x + 'z' - 'a')\n      \
    \  val rotatedAlphabet10 = rotatedAlphabet9.map(x => x + 'z' - 'a')\n        val\
    \ rotatedAlphabet11 = rotatedAlphabet10.map(x => x + 'z' - 'a')\n        val rotatedAlphabet12\
    \ = rotatedAlphabet11.map(x => x + 'z' - 'a')\n        val rotatedAlphabet13 =\
    \ rotatedAlphabet12.map(x => x + 'z' - 'a')\n        val rotatedAlphabet14 = rotatedAlphabet13.map(x\
    \ => x + 'z' - 'a')\n        val rotatedAlphabet15 = rotatedAlphabet14.map(x =>\
    \ x + 'z' - 'a')\n        val rotatedAlphabet16 = rotatedAlphabet15.map(x => x\
    \ + 'z' - 'a')\n        val rotatedAlphabet17 = rotatedAlphabet16.map(x => x +\
    \ 'z' - 'a')\n        val rotatedAlphabet18 = rotatedAlphabet17.map(x => x + 'z'\
    \ - 'a')\n        val rotatedAlphabet19 = rotatedAlphabet18.map(x => x + 'z' -\
    \ 'a')\n        val rotatedAlphabet20 = rotatedAlphabet19.map(x => x + 'z' - 'a')\n\
    \        val rotatedAlphabet21 = rotated", "        val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val alphabetLength = alphabet.length\n        val alphabetShift = alphabet.length\
    \ * 2\n        val alphabetShift2 = alphabet.length * 3\n        val alphabetShift3\
    \ = alphabet.length * 4\n        val alphabetShift4 = alphabet.length * 5\n  \
    \      val alphabetShift5 = alphabet.length * 6\n        val alphabetShift6 =\
    \ alphabet.length * 7\n        val alphabetShift7 = alphabet.length * 8\n    \
    \    val alphabetShift8 = alphabet.length * 9\n        val alphabetShift9 = alphabet.length\
    \ * 10\n        val alphabetShift10 = alphabet.length * 11\n        val alphabetShift11\
    \ = alphabet.length * 12\n        val alphabetShift12 = alphabet.length * 13\n\
    \        val alphabetShift13 = alphabet.length * 14\n        val alphabetShift14\
    \ = alphabet.length * 15\n        val alphabetShift15 = alphabet.length * 16\n\
    \        val alphabetShift16 = alphabet.length * 17\n        val alphabetShift17\
    \ = alphabet.length * 18\n        val alphabetShift18 = alphabet.length * 19\n\
    \        val alphabetShift19 = alphabet.length * 20\n        val alphabetShift20\
    \ = alphabet.length * 21\n        val alphabetShift21 = alphabet.length * 22\n\
    \        val alphabetShift22 = alphabet.length * 23\n        val alphabetShift23\
    \ = alphabet.length * 24\n        val alphabetShift24 = alphabet.length * 25\n\
    \        val alphabetShift25 = alphabet.length * 26\n        val alphabetShift26\
    \ = alphabet.length * 27\n        val alphabetShift27 = alphabet.length * 28\n\
    \        val alphabetShift28 = alphabet.length * 29\n        val alphabetShift29\
    \ = alphabet.length * 30\n        val alphabetShift30 = alphabet.length * 31\n\
    \        val alphabetShift31 = alphabet.length * 32\n        val alphabetShift32\
    \ = alphabet.length * 33\n        val alphabetShift33 = alphabet.length * 34\n\
    \        val alphabetShift34 = alphabet.length * 35\n        val alphabetShift35\
    \ = alphabet.length * 36\n        val alphabetShift36 = alphabet.length * 37\n\
    \        val alphabetShift37 = alphabet.length * 38\n        val alphabetShift38\
    \ = alphabet.length * 39\n        val alphabetShift39 = alphabet.length * 40\n\
    \        val alphabetShift40 = alphabet.length * 41\n        val alphabetShift41\
    \ = alphabet.length * 42\n        val alphabetShift42 = alphabet.length * ", " \
    \       val alphabet = List('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n\
    \        val newAlphabet = alphabet.map(x => x + 2)\n        val newAlphabet2\
    \ = alphabet.map(x => x + 1)\n        val newAlphabet3 = alphabet.map(x => x -\
    \ 1)\n        val newAlphabet4 = alphabet.map(x => x - 2)\n        val newAlphabet5\
    \ = alphabet.map(x => x - 3)\n        val newAlphabet6 = alphabet.map(x => x -\
    \ 4)\n        val newAlphabet7 = alphabet.map(x => x - 5)\n        val newAlphabet8\
    \ = alphabet.map(x => x - 6)\n        val newAlphabet9 = alphabet.map(x => x -\
    \ 7)\n        val newAlphabet10 = alphabet.map(x => x - 8)\n        val newAlphabet11\
    \ = alphabet.map(x => x - 9)\n        val newAlphabet12 = alphabet.map(x => x\
    \ - 10)\n        val newAlphabet13 = alphabet.map(x => x - 11)\n        val newAlphabet14\
    \ = alphabet.map(x => x - 12)\n        val newAlphabet15 = alphabet.map(x => x\
    \ - 13)\n        val newAlphabet16 = alphabet.map(x => x - 14)\n        val newAlphabet17\
    \ = alphabet.map(x => x - 15)\n        val newAlphabet18 = alphabet.map(x => x\
    \ - 16)\n        val newAlphabet19 = alphabet.map(x => x - 17)\n        val newAlphabet20\
    \ = alphabet.map(x => x - 18)\n        val newAlphabet21 = alphabet.map(x => x\
    \ - 19)\n        val newAlphabet22 = alphabet.map(x => x - 20)\n        val newAlphabet23\
    \ = alphabet.map(x => x - 21)\n        val newAlphabet24 = alphabet.map(x => x\
    \ - 22)\n        val newAlphabet25 = alphabet.map(x => x - 23)\n        val newAlphabet26\
    \ = alphabet.map(x => x - 24)\n        val newAlphabet27 = alphabet.map(x => x\
    \ - 25)\n        val newAlphabet28 = alphabet.map(x => x - 26)\n        val newAlphabet29\
    \ = alphabet.map(x => x - 27)\n        val newAlphabet30 = alphabet.map(x => x\
    \ - 28)\n        val newAlphabet31 = alphabet.map(x "]
stop_tokens:
- "\n    }\n"

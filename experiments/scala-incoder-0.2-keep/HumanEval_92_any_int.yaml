name: HumanEval_92_any_int
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function that takes 3 numbers.\n    // Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  \    // Returns false in any other cases.\n    // Examples\n    // any_int(5, 2,\
  \ 7) \u279E True\n    // any_int(3, 2, 2) \u279E False\n    // any_int(3, -2, 1)\
  \ \u279E True\n    // any_int(3.6, -2.2, 2) \u279E False\n    def anyInt(x : Float,\
  \ y : Float, z : Float) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(anyInt(2l, 3l, 1l)\
  \ == (true));\n    assert(anyInt((2.5f), 2l, 3l) == (false));\n    assert(anyInt((1.5f),\
  \ 5l, (3.5f)) == (false));\n    assert(anyInt(2l, 6l, 2l) == (false));\n    assert(anyInt(4l,\
  \ 2l, 2l) == (true));\n    assert(anyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
  \    assert(anyInt(-4l, 6l, 2l) == (true));\n    assert(anyInt(2l, 1l, 1l) == (true));\n\
  \    assert(anyInt(3l, 4l, 7l) == (true));\n    assert(anyInt((3.0f), 4l, 7l) ==\
  \ (false));\n    }\n\n}\n"
completions: ["        val sum = x + y + z\n        if (sum == 0) true\n        else\
    \ false", "        val sum = x + y + z\n        val isInteger = (sum.toInt ==\
    \ sum)\n        val isSum = (x == sum) || (y == sum) || (z == sum)\n        isInteger\
    \ && isSum", "        val sum = x + y + z\n        if (sum == 0) false\n     \
    \   else (sum % 1 == 0)", "        val sum = x + y + z\n        val isInteger\
    \ = (sum.toInt == sum)\n        val isAllInteger = (x.toInt == x) && (y.toInt\
    \ == y) && (z.toInt == z)\n        (isInteger || isAllInteger)", "        val\
    \ sum = x + y + z\n        val isInteger = (sum % 1 == 0)\n        val isEqual\
    \ = sum == x + y + z\n        val isAllInteger = (x % 1 == 0) &&\n           \
    \                  (y % 1 == 0) &&\n                             (z % 1 == 0)\n\
    \        isInteger || isEqual || isAllInteger", "        val sum = x + y + z\n\
    \        val isInteger = (sum.toInt) match {\n            case x if x < 0 => false\n\
    \            case x if x > 0 => true\n            case _ => false\n        }\n\
    \        val isSum = (x + y + z) match {\n            case x if x < 0 => false\n\
    \            case x if x > 0 => true\n            case _ => false\n        }\n\
    \        isInteger && isSum", "        val sum = (x + y + z).asInstanceOf[Int]\n\
    \        val sum2 = (x * y * z).asInstanceOf[Int]\n        sum == sum2", '        (x
    == x + y) && (x == x + z) && (y == y + z) && (x == y + z) && (x == z + y) && (y
    == z + x) && (z == x + y)', "        val sum = x + y + z\n        val isInteger\
    \ = (sum % 1) == 0\n        val isSum = (sum == x)\n        val isDifferent =\
    \ (x != y)\n        val isDifferent2 = (y != z)\n        val isDifferent3 = (z\
    \ != x)\n        val isDifferent4 = (x != y)\n        val isDifferent5 = (y !=\
    \ z)\n        val isDifferent6 = (z != x)\n        val isDifferent7 = (x != y)\n\
    \        val isDifferent8 = (y != z)\n        val isDifferent9 = (z != x)\n  \
    \      val isDifferent10 = (x != y)\n        val isDifferent11 = (y != z)\n  \
    \      val isDifferent12 = (z != x)\n        val isDifferent13 = (x != y)\n  \
    \      val isDifferent14 = (y != z)\n        val isDifferent15 = (z != x)\n  \
    \      val isDifferent16 = (x != y)\n        val isDifferent17 = (y != z)\n  \
    \      val isDifferent18 = (z != x)\n        val isDifferent19 = (x != y)\n  \
    \      val isDifferent20 = (y != z)\n        val isDifferent21 = (z != x)\n  \
    \      val isDifferent22 = (x != y)\n        val isDifferent23 = (y != z)\n  \
    \      val isDifferent24 = (z != x)\n        val isDifferent25 = (x != y)\n  \
    \      val isDifferent26 = (y != z)\n        val isDifferent27 = (z != x)\n  \
    \      val isDifferent28 = (x != y)\n        val isDifferent29 = (y != z)\n  \
    \      val isDifferent30 = (z != x)\n        val isDifferent31 = (x != y)\n  \
    \      val isDifferent32 = (y != z)\n        val isDifferent33 = (z != x)\n  \
    \      val isDifferent34 = (x != y)\n        val isDifferent35 = (y != z)\n  \
    \      val isDifferent36 = (z != x)\n        val isDifferent37 = (x != y)\n  \
    \      val isDifferent38 = (y != z)\n        val isDifferent39 = (z != x)\n  \
    \      val isDifferent40 = (x != y)\n        val isDifferent41 = (y != z)\n  \
    \      val isDifferent42 = (z != x)\n        val isDifferent43 = (x != y)\n  \
    \      val isDifferent44 = (y != z)\n        val ", "        val sum = (x + y\
    \ + z).asInstanceOf[Int]\n        val isInteger = (sum % 1 == 0)\n        val\
    \ isSum = (sum == (x + y + z))\n        val isAllInteger = (isInteger && isSum)\n\
    \        isAllInteger", '        (x == (x + y) && y == (x + z) && z == (y + z))',
  "        val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSum = (sum == x)\n        val isAllInteger = (isInteger && isSum)\n      \
    \  val isAllIntegerAndNotEqualToSum = (isInteger && isAllInteger) && !(isSum)\n\
    \        isAllIntegerAndNotEqualToSum", "        val sum = x + y + z\n       \
    \ val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n        val\
    \ isDifferent = (x != y)\n        val isDifferent2 = (x != z)\n        val isDifferent3\
    \ = (y != z)\n        val isDifferent4 = (x != y)\n        val isDifferent5 =\
    \ (y != x)\n        val isDifferent6 = (z != x)\n        val isDifferent7 = (z\
    \ != y)\n        val isDifferent8 = (x != z)\n        val isDifferent9 = (y !=\
    \ z)\n        val isDifferent10 = (z != x)\n        val isDifferent11 = (z !=\
    \ y)\n        val isDifferent12 = (x != y)\n        val isDifferent13 = (y !=\
    \ x)\n        val isDifferent14 = (z != x)\n        val isDifferent15 = (z !=\
    \ y)\n        val isDifferent16 = (x != z)\n        val isDifferent17 = (y !=\
    \ z)\n        val isDifferent18 = (z != x)\n        val isDifferent19 = (z !=\
    \ y)\n        val isDifferent20 = (x != y)\n        val isDifferent21 = (y !=\
    \ x)\n        val isDifferent22 = (z != x)\n        val isDifferent23 = (z !=\
    \ y)\n        val isDifferent24 = (x != z)\n        val isDifferent25 = (y !=\
    \ z)\n        val isDifferent26 = (z != x)\n        val isDifferent27 = (z !=\
    \ y)\n        val isDifferent28 = (x != y)\n        val isDifferent29 = (y !=\
    \ x)\n        val isDifferent30 = (z != x)\n        val isDifferent31 = (z !=\
    \ y)\n        val isDifferent32 = (x != z)\n        val isDifferent33 = (y !=\
    \ z)\n        val isDifferent34 = (z != x)\n        val isDifferent35 = (z !=\
    \ y)\n        val isDifferent36 = (x != y)\n        val isDifferent37 = (y !=\
    \ x)\n        val isDifferent38 = (z != x)\n        val isDifferent39 = (z !=\
    \ y)\n        val isDifferent40 = (x != z)\n        val isDifferent41 = (y !=\
    \ z)\n        val isDifferent42 = (z != x)\n        val isDifferent43 = (z !=\
    \ y)\n        val isDifferent44 = (x != y)\n        val ", "        val sum =\
    \ x + y + z\n        val isInt = sum.toInt == sum\n        val isInt = isInt &&\
    \ (x.toInt == x && y.toInt == y && z.toInt == z)\n        isInt", '        (x
    == (x + y) && y == (x + z) && z == (y + z)) || (x == (x + z) && y == (y + z) &&
    z == (x + y))', "        val sum = (x + y + z).toInt\n        val x = x.toInt\n\
    \        val y = y.toInt\n        val z = z.toInt\n        if (sum == x || sum\
    \ == y || sum == z) {\n            return true\n        }\n        else {\n  \
    \          return false\n        }", "        val sum = x + y + z\n        val\
    \ isInteger = sum.toString.toInt\n        val isEqual = sum == isInteger\n   \
    \     val isAllInteger = isInteger == x.toString.toInt && isInteger == y.toString.toInt\
    \ && isInteger == z.toString.toInt\n        val isAllEqual = isEqual == true\n\
    \        isAllInteger && isAllEqual", "        val sum = x + y + z\n        val\
    \ isInteger = sum.asInstanceOf[Int] == sum\n        val isEqual = x + y == z\n\
    \        val isAllInteger = isInteger && isEqual\n        isAllInteger", "   \
    \     val sum = x + y + z\n        val isInteger = (sum.toInt == sum)\n      \
    \  val isEqual = (x == y || x == z || y == z)\n        val isAllInteger = (x %\
    \ 1 == 0 && y % 1 == 0 && z % 1 == 0)\n        isInteger && isEqual && isAllInteger",
  "        val sum = (x + y + z).asInstanceOf[Int]\n        (x == sum) || (y == sum)\
    \ || (z == sum)"]
stop_tokens:
- "\n    }\n"

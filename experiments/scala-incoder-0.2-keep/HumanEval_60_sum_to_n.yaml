name: HumanEval_60_sum_to_n
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // sum_to_n is a function that sums numbers from 1 to n.\n    // >>> sum_to_n(30)\n\
  \    // 465\n    // >>> sum_to_n(100)\n    // 5050\n    // >>> sum_to_n(5)\n   \
  \ // 15\n    // >>> sum_to_n(10)\n    // 55\n    // >>> sum_to_n(1)\n    // 1\n\
  \    def sumToN(n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sumToN((1l)) == (1l));\n\
  \    assert(sumToN((6l)) == (21l));\n    assert(sumToN((11l)) == (66l));\n    assert(sumToN((30l))\
  \ == (465l));\n    assert(sumToN((100l)) == (5050l));\n    }\n\n}\n"
completions: ["        var sum = 0L\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        return sum", "        var sum = 0L\n        for (i\
    \ <- 1 to n) {\n            sum += i\n        }\n        sum", "        var sum\
    \ = 0\n        for (i <- 1 to n) {\n            sum += i\n        }\n        return\
    \ sum", "        var sum = 0\n        for (i <- 1 to n) {\n            sum +=\
    \ i\n        }\n        sum", "        val sum = 0L\n        for (i <- 1 to n)\
    \ {\n            sum += i\n        }\n        sum", "        val sum = 0L\n  \
    \      for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       val sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n    \
    \    }\n        sum", "        var sum = 0\n        for (i <- 1 to n) {\n    \
    \        sum += i\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        val\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     sum", "        val result = mutable.ArrayBuffer.empty[Long]\n        for\
    \ (i <- 1 to n) {\n            result += i\n        }\n        result.sum", " \
    \       val s = scala.collection.mutable.ListBuffer[Long]()\n        var sum =\
    \ 0L\n        for (i <- 1 to n) {\n            sum += i\n            s += i\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 1 to n) {\n\
    \            sum += i\n        }\n        sum", "        var sum = 0L\n      \
    \  for (i <- 1 to n) {\n            sum += i\n        }\n        return sum",
  "        var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n     \
    \   }\n        sum", "        val sum = 0L\n        for (i <- 1 to n) {\n    \
    \        sum += i\n        }\n        sum", "        var sum = 0\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        var\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     sum", "        var sum = 0L\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        sum", "        var sum = 0L\n        for (i <- 1 to\
    \ n) {\n            sum += i\n        }\n        return sum", "        var sum\
    \ = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n       \
    \ sum", "        var sum = 0L\n        for (i <- 1 to n) {\n            sum +=\
    \ i\n        }\n        sum", "        val sum = 0L\n        for (i <- 1 to n)\
    \ {\n            sum += i\n        }\n        sum", "        val result = new\
    \ mutable.ListBuffer[Long]()\n        var sum = 0L\n        for (i <- 1 to n)\
    \ {\n            sum += i\n            result.add(sum)\n        }\n        sum.toLong",
  "        val sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n     \
    \   }\n        sum", "        val sum = 0L\n        for (i <- 1 to n) {\n    \
    \        sum += i\n        }\n        return sum", "        var sum = 0L\n   \
    \     for (i <- 1 to n) {\n            sum += i\n        }\n        return sum",
  "        var sum = 0L\n        var i = 2L\n        while (i <= n) {\n          \
    \  sum += i\n            i += 1\n        }\n        return sum", "        var\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     sum", "        val result = mutable.ListBuffer.empty[Long]\n        var\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n            result\
    \ += sum\n        }\n        result.last", "        var sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        val\
    \ result = new scala.collection.mutable.ListBuffer[Long]()\n        var sum =\
    \ 0L\n        for (i <- 1 to n) {\n            sum += i\n            result.add(sum)\n\
    \        }\n        sum.toLong", "        val sum = 0L\n        for (i <- 1 to\
    \ n) {\n            sum += i\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n    \
    \    }\n        sum", "        var sum = 0\n        for (i <- 1 to n) {\n    \
    \        sum += i\n        }\n        sum", "        var sum = 0\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        return sum", "   \
    \     var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n      \
    \  }\n        sum", "        var sum = 0L\n        for (i <- 1 to n) {\n     \
    \       sum += i\n        }\n        sum", "        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n   \
    \         result += sum\n        }\n        result.sum", "        val sum = 0L\n\
    \        for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n    \
    \    }\n        return sum", "        val sum = 0L\n        for (i <- 1 to n)\
    \ {\n            sum += i\n        }\n        sum", "        var sum = 0L\n  \
    \      for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       val sum = 0\n        for (i <- 1 to n) {\n            sum += i\n     \
    \   }\n        sum", "        var sum = 0\n        for (i <- 1 to n) {\n     \
    \       sum += i\n        }\n        return sum", "        var sum = 0\n     \
    \   for (i <- 1 to n) {\n            sum += i\n        }\n        sum", "    \
    \    val sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n       \
    \ }\n        sum", "        val sum = 0L\n        for (i <- 1 to n) {\n      \
    \      sum += i\n        }\n        sum", "        var sum = 0\n        for (i\
    \ <- 1 to n) {\n            sum += i\n        }\n        return sum", "      \
    \  var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n\
    \        sum", "        val sum = 0L\n        for (i <- 1 to n) {\n          \
    \  sum += i\n        }\n        return sum", "        var sum = 0\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        var\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     sum", "        val sum = 0L\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        sum", "        val result = new mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            result += i\n        }\n        val\
    \ sum = result.sum\n        sum", "        var sum = 0L\n        for (i <- 1 to\
    \ n) {\n            sum += i\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       var sum = 0\n        for (i <- 1 to n) {\n            sum += i\n     \
    \   }\n        sum", "        val sum = 0L\n        for (i <- 1 to n) {\n    \
    \        sum += i\n        }\n        return sum", "        var sum = 0\n    \
    \    for (i <- 1 to n) {\n            sum += i\n        }\n        sum", "   \
    \     var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n      \
    \  }\n        sum", "        val sum = 0L\n        for (i <- 1 to n) {\n     \
    \       sum += i\n        }\n        sum", "        val sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        val\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     sum", "        var sum = 0\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        sum", "        var sum = 0\n        for (i <- 1 to\
    \ n) {\n            sum += i\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n    \
    \    }\n        sum", "        val sum = 0L\n        for (i <- 1 to n) {\n   \
    \         sum += i\n        }\n        sum", "        var sum = 0\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        var\
    \ sum = 0\n        for (i <- 1 to n) {\n            sum += i\n        }\n    \
    \    sum", "        var sum = 0L\n        var i = 0L\n        while (i < n) {\n\
    \            sum += i\n            i += 1\n        }\n        return sum", " \
    \       var sum = 0\n        for (i <- 1 to n) {\n            sum += i\n     \
    \   }\n        sum", "        var sum = 0L\n        for (i <- 1 to n) {\n    \
    \        sum += i\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        var\
    \ sum = 0\n        for (i <- 1 to n) {\n            sum += i\n        }\n    \
    \    sum", "        val sum = 0L\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        sum", "        var sum = 0L\n        for (i <- 1 to\
    \ n) {\n            sum += i\n        }\n        sum", "        val sum = 0\n\
    \        for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n    \
    \    }\n        sum", "        var sum = 0L\n        for (i <- 1 to n) {\n   \
    \         sum += i\n        }\n        sum", "        val sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        val\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     sum", "        var sum = 0\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        sum", "        val sum = 0L\n        for (i <- 1 to\
    \ n) {\n            sum += i\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       val sum = 0\n        for (i <- 1 to n) {\n            sum += i\n     \
    \   }\n        sum", "        var sum = 0L\n        for (i <- 1 to n) {\n    \
    \        sum += i\n        }\n        sum", "        val sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        val\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     sum", "        var sum = 0L\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        sum", "        var sum = 0\n        for (i <- 1 to\
    \ n) {\n            sum += i\n        }\n        sum", "        val sum = 0L\n\
    \        for(i <- 1 to n) sum += i\n        sum", "        val sum = 0\n     \
    \   for (i <- 1 to n) {\n            sum += i\n        }\n        sum", "    \
    \    var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n       \
    \ }\n        sum", "        var sum = 0L\n        for (i <- 1 to n) {\n      \
    \      sum += i\n        }\n        sum", "        val sum = 0L\n        for (i\
    \ <- 1 to n) {\n            sum += i\n        }\n        sum", "        var sum\
    \ = 0\n        for (i <- 1 to n) {\n            sum += i\n        }\n        return\
    \ sum", "        var sum = 0L\n        for (i <- 1 to n) {\n            sum +=\
    \ i\n        }\n        return sum", "        val sum = 0L\n        for (i <-\
    \ 1 to n) {\n            sum += i\n        }\n        sum", "        val sum =\
    \ 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n        return\
    \ sum", "        val sum = 0\n        for (i <- 1 to n) sum += i\n        sum",
  "        var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n     \
    \   }\n        sum", "        val sum = 0\n        for (i <- 1 to n) {\n     \
    \       sum += i\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        var\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     return sum", "        val sum = 0L\n        for (i <- 1 to n) {\n      \
    \      sum += i\n        }\n        sum", "        var sum = 0L\n        for (i\
    \ <- 1 to n) {\n            sum += i\n        }\n        sum", "        val sum\
    \ = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n       \
    \ sum", "        var sum = 0L\n        for (i <- 1 to n) {\n            sum +=\
    \ i\n        }\n        sum", "        val sum = 0L\n        for (i <- 1 to n)\
    \ {\n            sum += i\n        }\n        sum", "        val sum = 0L\n  \
    \      for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       val sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n    \
    \    }\n        sum", "        var sum = 0\n        for (i <- 1 to n) {\n    \
    \        sum += i\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        val\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     sum", "        var sum = 0L\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        sum", "        var sum = 0L\n        for (i <- 1 to\
    \ n) {\n            sum += i\n        }\n        sum", "        var sum = 0\n\
    \        for (i <- 1 to n) {\n            sum += i\n        }\n        return\
    \ sum", "        val sum = 0L\n        for (i <- 1 to n) {\n            sum +=\
    \ i\n        }\n        return sum", "        var sum = 0L\n        for (i <-\
    \ 1 to n) {\n            sum += i\n        }\n        return sum", "        var\
    \ sum = 0\n        for (i <- 1 to n) {\n            sum += i\n        }\n    \
    \    sum", "        val sum = 0L\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        sum", "        val sum = 0L\n        for (i <- 1 to\
    \ n) {\n            sum += i\n        }\n        sum", "        val sum = 0L\n\
    \        for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       val result = mutable.ListBuffer.empty[Long]\n        for (i <- 1 to n)\
    \ {\n            result += i\n        }\n        result.sum", "        var sum\
    \ = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n       \
    \ sum", "        var sum = 0L\n        for (i <- 1 to n) {\n            sum +=\
    \ i\n        }\n        sum", "        val sum = 0L\n        for (i <- 1 to n)\
    \ {\n            sum += i\n        }\n        sum", "        var sum = 0\n   \
    \     for (i <- 1 to n) {\n            sum += i\n        }\n        sum", "  \
    \      var sum = 0\n        for (i <- 1 to n) {\n            sum += i\n      \
    \  }\n        sum", "        var sum = 0L\n        for (i <- 1 to n) {\n     \
    \       sum += i\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        return sum", "   \
    \     val sum = 0L\n        for(i <- 1 to n) sum += i\n        sum", "       \
    \ val sum = 0\n        for (i <- 1 to n) {\n            sum += i\n        }\n\
    \        sum", "        val sum = 0L\n        for (i <- 1 to n) {\n          \
    \  sum += i\n        }\n        sum", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val start = 1\n        val end = n\n        while (start <= end) {\n\
    \            val sum = start + end\n            result.append(sum)\n         \
    \   start = sum + 1\n            end = sum + n\n        }\n        val sum = result.sum\n\
    \        result.append(sum)\n        sum", "        var sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        val\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     sum", "        var sum = 0L\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        sum", "        var sum = 0L\n        for (i <- 1 to\
    \ n) {\n            sum += i\n        }\n        sum", "        val sum = 0L\n\
    \        for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n    \
    \    }\n        return sum", "        val sum = 0L\n        for (i <- 1 to n)\
    \ {\n            sum += i\n        }\n        sum", "        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            result += i\n        }\n        result.sum",
  "        var sum = 0\n        for (i <- 1 to n) {\n            sum += i\n      \
    \  }\n        sum", "        val s = scala.collection.mutable.ListBuffer[Long]()\n\
    \        var sum = 0\n        for (i <- 1 to n) {\n            sum += i\n    \
    \        s += i\n        }\n        sum", "        val sum = 0L\n        for (i\
    \ <- 1 to n) {\n            sum += i\n        }\n        sum", "        val sum\
    \ = 0\n        for (i <- 1 to n) {\n            sum += i\n        }\n        sum",
  "        val sum = 0\n        for (i <- 1 to n) {\n            sum += i\n      \
    \  }\n        sum", "        var sum = 0\n        for (i <- 1 to n) {\n      \
    \      sum += i\n        }\n        sum", "        var sum = 0L\n        for (i\
    \ <- 1 to n) {\n            sum += i\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n       \
    \ sum", "        var sum = 0L\n        for (i <- 1 to n) {\n            sum +=\
    \ i\n        }\n        sum", "        val sum = 0L\n        for (i <- 1 to n)\
    \ {\n            sum += i\n        }\n        sum", "        var sum = 0L\n  \
    \      for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       val result = new mutable.ListBuffer[Long]()\n        for (i <- 1 to n)\
    \ {\n            result += i\n        }\n        result.sum", "        var sum\
    \ = 0\n        for (i <- 1 to n) {\n            sum += i\n        }\n        sum",
  "        var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n     \
    \   }\n        sum", "        var sum = 0L\n        for (i <- 1 to n) {\n    \
    \        sum += i\n        }\n        sum", "        val sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        var\
    \ sum = 0\n        for (i <- 1 to n) {\n            sum += i\n        }\n    \
    \    sum", "        var sum = 0\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        sum", "        val result = mutable.ListBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            result += i\n        }\n        result.sum",
  "        var sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n     \
    \   }\n        sum", "        var sum = 0L\n        for (i <- 1 to n) {\n    \
    \        sum += i\n        }\n        sum", "        val sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        var\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     sum", "        var sum = 0L\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        return sum", "        var sum = 0L\n        for (i\
    \ <- 1 to n) {\n            sum += i\n        }\n        sum", "        val sum\
    \ = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n       \
    \ sum", "        val sum = 0L\n        for (i <- 1 to n) {\n            sum +=\
    \ i\n        }\n        sum", "        var sum = 0L\n        for (i <- 1 to n)\
    \ {\n            sum += i\n        }\n        sum", "        var sum = 0L\n  \
    \      for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       val result = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n)\
    \ {\n            result += i\n        }\n        result.sum", "        var sum\
    \ = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n       \
    \ sum", "        val sum = 0L\n        for (i <- 1 to n) {\n            sum +=\
    \ i\n        }\n        return sum", "        var sum = 0L\n        for (i <-\
    \ 1 to n) {\n            sum += i\n        }\n        sum", "        var sum =\
    \ 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n        return\
    \ sum", "        val sum = 0\n        for (i <- 1 to n) {\n            sum +=\
    \ i\n        }\n        sum", "        var sum = 0L\n        for (i <- 1 to n)\
    \ {\n            sum += i\n        }\n        sum", "        val sum = 0L\n  \
    \      for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       val sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n    \
    \    }\n        sum", "        val sum = 0L\n        for (i <- 1 to n) {\n   \
    \         sum += i\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        val\
    \ result = new mutable.ListBuffer[Long]()\n        for (i <- 1 to n) {\n     \
    \       result += i\n        }\n        result.sum", "        val sum = 0\n  \
    \      for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       val sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n    \
    \    }\n        sum", "        var sum = 0\n        for (i <- 1 to n) {\n    \
    \        sum += i\n        }\n        sum", "        val sum = 0L\n        for\
    \ (i <- 1 to n) {\n            sum += i\n        }\n        sum", "        var\
    \ sum = 0L\n        for (i <- 1 to n) {\n            sum += i\n        }\n   \
    \     sum", "        var sum = 0L\n        for (i <- 1 to n) {\n            sum\
    \ += i\n        }\n        sum", "        val sum = 0L\n        for (i <- 1 to\
    \ n) {\n            sum += i\n        }\n        sum", "        var sum = 0\n\
    \        for (i <- 1 to n) {\n            sum += i\n        }\n        sum", " \
    \       var sum = 0\n        for (i <- 1 to n) {\n            sum += i\n     \
    \   }\n        sum", "        var sum = 0\n        for (i <- 1 to n) {\n     \
    \       sum += i\n        }\n        sum", "        val sum = 0\n        for (i\
    \ <- 1 to n) {\n            sum += i\n        }\n        sum", "        var sum\
    \ = 0\n        for (i <- 1 to n) {\n            sum += i\n        }\n        return\
    \ sum", "        val result = mutable.ListBuffer.empty[Long]\n        var sum\
    \ = 0L\n        for(i <- 1 to n) {\n            sum += i\n            result +=\
    \ sum\n        }\n        sum.toLong"]
stop_tokens:
- "\n    }\n"

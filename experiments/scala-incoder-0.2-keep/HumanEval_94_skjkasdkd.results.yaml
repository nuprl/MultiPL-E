language: scala
name: HumanEval_94_skjkasdkd
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 107 == 0).filter(_ % 113 == 0).filter(_ % 119 == 0).filter(_\
    \ % 121 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 143 == 0).filter(_ % 149 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_\
    \ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_\
    \ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 231 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_\
    \ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_\
    \ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_\
    \ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_\
    \ % 313 == 0).filter(_ % 317 == 0).filter(_ % 321 == 0).filter(_ % 323 == 0).filter(_\
    \ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_ % 341 == 0).filter(_\
    \ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_ % 363 == 0).filter(_\
    \ % 369 == 0).filter(_ % 371 == 0).filter(_ % 377 == 0).filter(_ % 38\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpe5zx7p47.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpe5zx7p47.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m107\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m119\e[0m == \e[31m0\e[0m).filter(_ % \e[31m121\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m149\e[0m == \e[31m0\e[0m).filter(_ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 != 0).filter(_\
    \ % 3 != 0).filter(_ % 5 != 0).filter(_ % 7 != 0).filter(_ % 11 != 0).filter(_\
    \ % 13 != 0).filter(_ % 17 != 0).filter(_ % 19 != 0).filter(_ % 23 != 0).filter(_\
    \ % 29 != 0).filter(_ % 31 != 0).filter(_ % 37 != 0).filter(_ % 41 != 0).filter(_\
    \ % 43 != 0).filter(_ % 47 != 0).filter(_ % 51 != 0).filter(_ % 53 != 0).filter(_\
    \ % 59 != 0).filter(_ % 61 != 0).filter(_ % 67 != 0).filter(_ % 71 != 0).filter(_\
    \ % 73 != 0).filter(_ % 79 != 0).filter(_ % 83 != 0).filter(_ % 89 != 0).filter(_\
    \ % 97 != 0).filter(_ % 101 != 0).filter(_ % 103 != 0).filter(_ % 107 != 0).filter(_\
    \ % 109 != 0).filter(_ % 113 != 0).filter(_ % 121 != 0).filter(_ % 127 != 0).filter(_\
    \ % 131 != 0).filter(_ % 137 != 0).filter(_ % 139 !=0).filter(_ % 149 != 0).filter(_\
    \ % 151 != 0).filter(_ % 157 !=0).filter(_ % 163 != 0).filter(_ % 167 !=0).filter(_\
    \ % 173 != 0).filter(_ % 177 !=0).filter(_ % 183 != 0).filter(_ % 191 != 0).filter(_\
    \ % 193 !=0).filter(_ % 197 !=0).filter(_ % 199 !=0).filter(_ % 203 !=0).filter(_\
    \ % 207 !=0).filter(_ % 211 !=0).filter(_ % 213 !=0).filter(_ % 217 !=0).filter(_\
    \ % 223 !=0).filter(_ % 227 !=0).filter(_ % 229 !=0).filter(_ % 233 !=0).filter(_\
    \ % 239 !=0).filter(_ % 241 !=0).filter(_ % 247 !=0).filter(_ % 251 !=0).filter(_\
    \ % 257 !=0).filter(_ % 263 !=0).filter(_ % 269 !=0).filter(_ % 271 !=0).filter(_\
    \ % 277 !=0).filter(_ % 281 !=0).filter(_ % 283 !=0).filter(_ % 293 !=0).filter(_\
    \ % 297 !=0).filter(_ % 301 !=0).filter(_ % 307 !=0).filter\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpimue_nro.scala:15:5\
    \ ---------------------\e[0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804818
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val primeSum = primes.map(x => x.toString.toInt).sum\n\
    \        primeSum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp8_bo49g.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804813
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        sumOfDigits + maxPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp43pfeq22.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp43pfeq22.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804813
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_\
    \ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_\
    \ % 201 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 231 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 253 == 0).filter(_ % 257 == 0).filter(_ % 259 == 0).filter(_ % 263 == 0).filter(_\
    \ % 267 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 279 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_ % 33\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjdjql6y2.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpjdjql6y2.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_\
    \ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_\
    \ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 223 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_\
    \ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 283 == 0).filter(_ % 289 == 0).filter(_\
    \ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 323 == 0).filter(_ % 329 == 0).filter(_ % 331 == 0).filter(_\
    \ % 337 == 0).filter(_ % 343 == 0).filter(_ % 349 == 0).filter(_ % 351 == 0).filter(_\
    \ % 357 == 0).filter(_ % 363 == 0).filter(_ % 369 == 0).filter(_ % 371 == 0).filter(_\
    \ % 377 == 0).filter(_ % 383 == 0).filter(_ % 389 == 0).filter(_ % 39\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_m9d_yla.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp_m9d_yla.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804818
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val largestPrime = primes.max\n        val sumOfDigits = largestPrime.map(_.toString.toInt).sum\n\
    \        largestPrime.toString.toInt\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpye6frmlt.scala:17:39 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = largestPrime.map(_.toString.toInt).sum\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                          value map is not a member of Long\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt)\n        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x\
    \ => x.toString.toInt).sum\n        val maxSum = sumOfDigits + maxPrime\n    \
    \    val maxSumOfDigits = maxSum.toString.toInt\n        val maxSumOfDigitsString\
    \ = maxSumOfDigits.toString\n        if (maxSumOfDigitsString.length == maxSumOfDigits)\
    \ maxSumOfDigitsString\n        else maxSumOfDigitsString.substring(0, maxSumOfDigits)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr0nhunas.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt)\n\e[31m\e[31m   |\e[0m\
    \                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpr0nhunas.scala:20:59 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mif\e[0m (maxSumOfDigitsString.length ==\
    \ maxSumOfDigits) maxSumOfDigitsString\n\e[31m\e[31m   |\e[0m                \
    \                                           ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Found:    (maxSumOfDigitsString : String)\n\
    \e[31m   |\e[0m                               Required: Long\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpr0nhunas.scala:21:43 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33melse\e[0m maxSumOfDigitsString.substring(\e\
    [31m0\e[0m, maxSumOfDigits)\n\e[31m\e[31m   |\e[0m             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m             Found:    String\n\e[31m   |\e[0m           \
    \  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659804817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => x % 2 == 0).filter(x\
    \ => x % 3 == 0).filter(x => x % 5 == 0).filter(x => x % 7 == 0).filter(x => x\
    \ % 11 == 0).filter(x => x % 13 == 0).filter(x => x % 17 == 0).filter(x => x %\
    \ 19 == 0).filter(x => x % 23 == 0).filter(x => x % 29 == 0).filter(x => x % 31\
    \ == 0).filter(x => x % 37 == 0).filter(x => x % 41 == 0).filter(x => x % 43 ==\
    \ 0).filter(x => x % 47 == 0).filter(x => x % 49 == 0).filter(x => x % 53 == 0).filter(x\
    \ => x % 59 == 0).filter(x => x % 61 == 0).filter(x => x % 67 == 0).filter(x =>\
    \ x % 71 == 0).filter(x => x % 73 == 0).filter(x => x % 79 == 0).filter(x => x\
    \ % 83 == 0).filter(x => x % 89 == 0).filter(x => x % 97 == 0).filter(x => x %\
    \ 101 == 0).filter(x => x % 107 == 0).filter(x => x % 111 == 0).filter(x => x\
    \ % 117 == 0).filter(x => x % 121 == 0).filter(x => x % 127 == 0).filter(x =>\
    \ x % 131 == 0).filter(x => x % 137 == 0).filter(x => x % 141 == 0).filter(x =>\
    \ x % 147 == 0).filter(x => x % 151 == 0).filter(x => x % 157 == 0).filter(x =>\
    \ x % 161 == 0).filter(x => x % 167 == 0).filter(x => x % 171 == 0).filter(x =>\
    \ x % 177 == 0).filter(x => x % 181 == 0).filter(x => x % 191 == 0).filter(x =>\
    \ x % 193 == 0).filter(x => x % 197 == 0).filter(x => x % 199 == 0).filter(x =>\
    \ x % 201 == 0).filter(x => x % 207 == 0).filter(x => x % 211 == 0).filter(x =>\
    \ x % 213 == 0).filter(x => x % 217 == 0).filter(x => x % 221 == 0).filter(x =>\
    \ x % 225 == 0).filter(x => x % 229 == 0).filter(x => x % 233 == 0).filter(x =>\
    \ x % 239 == 0).filter(x => x % 241 == 0).filter(x => x % 243 == 0).filter(x =>\
    \ x % 247 == 0).filter(x => x % 251 == 0).filter(x => x % 257 == 0).filter(x =>\
    \ x % 261 == 0).filter(x => x \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyv0gopp3.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpyv0gopp3.scala:14:1645 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e[36mx\e[0m => x % \e\
    [31m2\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m3\e[0m == \e[31m0\e\
    [0m).filter(\e[36mx\e[0m => x % \e[31m5\e[0m == \e[31m0\e[0m).filter(\e[36mx\e\
    [0m => x % \e[31m7\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m13\e[0m == \e[31m0\e[0m).filter(\e\
    [36mx\e[0m => x % \e[31m17\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e\
    [31m19\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m23\e[0m == \e[31m0\e\
    [0m).filter(\e[36mx\e[0m => x % \e[31m29\e[0m == \e[31m0\e[0m).filter(\e[36mx\e\
    [0m => x % \e[31m31\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m37\e\
    [0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m41\e[0m == \e[31m0\e[0m).filter(\e\
    [36mx\e[0m => x % \e[31m43\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e\
    [31m47\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m49\e[0m == \e[31m0\e\
    [0m).filter(\e[36mx\e[0m => x % \e[31m53\e[0m == \e[31m0\e[0m).filter(\e[36mx\e\
    [0m => x % \e[31m59\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m61\e\
    [0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m67\e[0m == \e[31m0\e[0m).filter(\e\
    [36mx\e[0m => x % \e[31m71\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e\
    [31m73\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m79\e[0m == \e[31m0\e\
    [0m).filter(\e[36mx\e[0m => x % \e[31m83\e[0m == \e[31m0\e[0m).filter(\e[36mx\e\
    [0m => x % \e[31m89\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m101\e[0m == \e[31m0\e[0m).filter(\e\
    [36mx\e[0m => x % \e[31m107\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e\
    [31m111\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m117\e[0m == \e\
    [31m0\e[0m).filter(\e[36mx\e[0m => x % \e[31m121\e[0m == \e[31m0\e[0m).filter(\e\
    [36mx\e[0m => x % \e[31m127\e[0m == \e[31m0\e[0m).filter(\e[36mx\e[0m => x % \e\
    [31m131\e[0"
  stdout: ''
  timestamp: 1659804817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 161 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 179 == 0).filter(_ % 183 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_\
    \ % 261 == 0).filter(_ % 267 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 321 == 0).filter(_\
    \ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_\
    \ % 341 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_\
    \ % 361 == 0).filter(_ % 367 == 0).filter(_ % 371 == 0).filter(_ % 377\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5r4c9ckf.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp5r4c9ckf.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m161\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m183\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804818
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 107 == 0).filter(_ % 113 == 0).filter(_ % 119 == 0).filter(_\
    \ % 121 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 143 == 0).filter(_ % 149 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_\
    \ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_\
    \ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 223 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 231 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_\
    \ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 323 == 0).filter(_ % 329 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_\
    \ % 341 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_\
    \ % 363 == 0).filter(_ % 369 == 0).filter(_ % 371 == 0).filter(_ % 377\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdsy92jxn.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpdsy92jxn.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m107\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m119\e[0m == \e[31m0\e[0m).filter(_ % \e[31m121\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m149\e[0m == \e[31m0\e[0m).filter(_ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804818
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x =>\
    \ x.toString.toInt).sum\n        sumOfDigits + maxPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbcsexz9.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804812
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 161 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 179 == 0).filter(_ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 253 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_\
    \ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 321 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_\
    \ % 331 == 0).filter(_ % 337 == 0).filter(_ % 341 == 0).filter(_ % 347 == 0).filter(_\
    \ % 351 == 0).filter(_ % 353 == 0).filter(_ % 357 == 0).filter(_ % 36\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5l216szi.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp5l216szi.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m161\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804818
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x =>\
    \ x.toString.toInt).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpic3ftcc3.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804812
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val largest = primes.max\n\
    \        val sumOfDigits = largest.map(_.toString.toInt).sum\n        sumOfDigits\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8le2rgv3.scala:16:34 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = largest.map(_.toString.toInt).sum\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                          value map is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt)\n        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x\
    \ => x.toString.toInt).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_mbn5oy.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt)\n\e[31m\e[31m   |\e[0m\
    \                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804814
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val primesSet = primes.toSet\n        val maxPrime = primes.max\n        val\
    \ sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n        sumOfDigits\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$6(tmp43orgpx5.scala:17)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmp43orgpx5.scala:17)\n\
    \tat Problem$.main(tmp43orgpx5.scala:21)\n\tat Problem.main(tmp43orgpx5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804818
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val largestPrime = primes.max\n        val sumOfDigits = largestPrime.map(x\
    \ => math.log10(x)).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2lvgzx2o.scala:16:39 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = largestPrime.map(\e\
    [36mx\e[0m => math.log10(x)).sum\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                          value map\
    \ is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val sum = 0L\n        lst.foreach(x => {\n            val isPrime = lst.filter(_\
    \ % x == 0).length == 1\n            if (isPrime) {\n                primes +=\
    \ x\n            }\n        })\n        primes.foreach(x => {\n            val\
    \ isPrime = lst.filter(_ % x == 0).length == 1\n            if (isPrime) {\n \
    \               sum += lst.filter(_ % x == 0).sum\n            }\n        })\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpstxbknfg.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804813
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val largest = primes.max\n\
    \        val sumOfDigits = largest.map(_.toString.toInt).sum\n        sumOfDigits\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8le2rgv3.scala:16:34 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = largest.map(_.toString.toInt).sum\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                          value map is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val maxPrime = primes.max\n\
    \        val sumOfDigits = primes.map(x => math.pow(10, x)).sum\n        val maxDigit\
    \ = math.pow(10, maxPrime)\n        sumOfDigits + maxDigit\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi4ktrgt6.scala:18:8\
    \ ---------------------\e[0m\e[0m\n\e[31m18 |\e[0m        sumOfDigits + maxDigit\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \    Found:    Double\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659804815
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val primesCount = primes.size\n        val maxPrime = primes.max\n        val\
    \ maxPrimeIndex = primes.indexOf(maxPrime)\n        val maxPrimeDigits = maxPrime\
    \ % 10\n        val maxPrimeDigitIndex = maxPrimeIndex % 10\n        val maxPrimeSum\
    \ = maxPrime + maxPrimeDigits\n        val maxPrimeSumDigits = maxPrimeSum % 10\n\
    \        val maxPrimeSumDigitIndex = maxPrimeIndex % 10\n        val maxPrimeSumDigits\
    \ = maxPrimeSum + maxPrimeSumDigits\n        val maxPrimeSumDigitIndex = maxPrimeIndex\
    \ % 10\n        val maxPrimeSumDigits = maxPrimeSum + maxPrimeSumDigits\n    \
    \    val maxPrimeSumDigitIndex = maxPrimeIndex % 10\n        val maxPrimeSumDigits\
    \ = maxPrimeSum + maxPrimeSumDigits\n        val maxPrimeSumDigitIndex = maxPrimeIndex\
    \ % 10\n        val maxPrimeSumDigits = maxPrimeSum + maxPrimeSumDigits\n    \
    \    val maxPrimeSumDigitIndex = maxPrimeIndex % 10\n        val maxPrimeSumDigits\
    \ = maxPrimeSum + maxPrimeSumDigits\n        val maxPrimeSumDigitIndex = maxPrimeIndex\
    \ % 10\n        val maxPrimeSumDigits = maxPrimeSum + maxPrimeSumDigits\n    \
    \    val maxPrimeSumDigitIndex = maxPrimeIndex % 10\n        val maxPrimeSumDigits\
    \ = maxPrimeSum + maxPrimeSumDigits\n        val maxPrimeSumDigitIndex = maxPrimeIndex\
    \ % 10\n        val maxPrimeSumDigits = maxPrimeSum + maxPrimeSumDigits\n    \
    \    val maxPrimeSumDigitIndex = maxPrimeIndex % 10\n        val maxPrimeSumDigits\
    \ = maxPrimeSum + maxPrimeSumDigits\n        val maxPrimeSumDigitIndex = maxPrimeIndex\
    \ % 10\n        val maxPrimeSumDigits = maxPrimeSum + maxPrimeSumDigits\n    \
    \    val maxPrimeSumDigitIndex = maxPrimeIndex % 10\n        val maxPrimeSumDigits\
    \ = maxPrimeSum + maxPrimeSumDigits\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfgbnx8c_.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigits\e[0m =\
    \ maxPrimeSum + maxPrimeSumDigits\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumDigits is already defined as \e[33mvalue\e[0m \e\
    [35mmaxPrimeSumDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpfgbnx8c_.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigitIndex\e\
    [0m = maxPrimeIndex % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumDigitIndex is already defined as \e[33mvalue\e\
    [0m \e[35mmaxPrimeSumDigitIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfgbnx8c_.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigits\e[0m =\
    \ maxPrimeSum + maxPrimeSumDigits\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumDigits is already defined as \e[33mvalue\e[0m \e\
    [35mmaxPrimeSumDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpfgbnx8c_.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigitIndex\e\
    [0m = maxPrimeIndex % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumDigitIndex is already defined as \e[33mvalue\e\
    [0m \e[35mmaxPrimeSumDigitIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfgbnx8c_.scala:27:12 ---------------"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val primesCount = primes.size\n        val maxPrime = primes.max\n        val\
    \ maxPrimeIndex = primes.indexOf(maxPrime)\n        val maxPrimeDigit = maxPrime\
    \ % 10\n        val maxPrimeDigitIndex = maxPrimeIndex % 10\n        val maxPrimeSum\
    \ = maxPrimeDigit + maxPrimeDigitIndex\n        val maxPrimeSumIndex = maxPrimeIndex\
    \ / 10\n        val maxPrimeSumDigit = maxPrimeSumIndex % 10\n        val maxPrimeSumDigitIndex\
    \ = maxPrimeSumIndex / 10\n        val maxPrimeSumSum = maxPrimeSumDigit + maxPrimeSumDigitIndex\n\
    \        val maxPrimeSumSumIndex = maxPrimeSumIndex / 10\n        val maxPrimeSumSumDigit\
    \ = maxPrimeSumSumIndex % 10\n        val maxPrimeSumSumDigitIndex = maxPrimeSumSumIndex\
    \ / 10\n        val maxPrimeSumSumSum = maxPrimeSumSumDigit + maxPrimeSumSumDigitIndex\n\
    \        val maxPrimeSumSumSumIndex = maxPrimeSumSumIndex / 10\n        val maxPrimeSumSumSumDigit\
    \ = maxPrimeSumSumSumIndex % 10\n        val maxPrimeSumSumSumDigitIndex = maxPrimeSumSumSumIndex\
    \ / 10\n        val maxPrimeSumSumSumSum = maxPrimeSumSumSumDigit + maxPrimeSumSumSumDigitIndex\n\
    \        val maxPrimeSumSumSumSumIndex = maxPrimeSumSumSumIndex / 10\n       \
    \ val maxPrimeSumSumSumSumDigit = maxPrimeSumSumSumSumIndex % 10\n        val\
    \ maxPrimeSumSumSumSumDigitIndex = maxPrimeSumSumSumSumIndex / 10\n        val\
    \ maxPrimeSumSumSumSumSum = maxPrimeSumSumSumSumDigit + maxPrimeSumSumSumSumDigitIndex\n\
    \        val maxPrimeSumSumSumSumSumIndex = maxPrimeSumSumSumSumSumIndex / 10\n\
    \        val maxPrimeSumSumSumSumSumDigit = maxPrimeSumSumSumSumSumIndex % 10\n\
    \        val maxPrimeSumSumSumSumSumDigitIndex = maxPrimeSumSumSumSumSumIndex\
    \ / 10\n        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpolr8gokw.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E045] Cyclic Error: /tmp/tmpolr8gokw.scala:37:43 ---------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumSumSumSumSumIndex\e\
    [0m = maxPrimeSumSumSumSumSumIndex / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m    \
    \                                       ^\e[0m\n\e[31m   |\e[0m              \
    \   Recursive \e[33mvalue\e[0m \e[35mmaxPrimeSumSumSumSumSumIndex\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpolr8gokw.scala:41:5\
    \ ---------------------\e[0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659804824
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val result = sumOfDigits\
    \ + maxPrime.toString.toInt\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3p40wc2p.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3p40wc2p.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804821
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val maxPrime = primes.max\n        val maxPrimeIndex = primes.indexOf(maxPrime)\n\
    \        val maxPrimeDigit = maxPrime % 10\n        val maxPrimeDigitIndex = maxPrimeIndex\
    \ % 10\n        val maxPrimeDigitSum = maxPrimeDigit + maxPrimeDigitIndex\n  \
    \      val sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n        val sumOfDigitsCount\
    \ = lst.filter(_ % maxPrime == 0).size\n        val sumOfDigitsSum = sumOfDigits\
    \ + sumOfDigitsCount\n        val sumOfDigitsSumDigits = sumOfDigitsSum / 10\n\
    \        val sumOfDigitsSumDigitsCount = sumOfDigitsSum / 10\n        val sumOfDigitsSumDigitsCountDigits\
    \ = sumOfDigitsSumDigitsCount / 10\n        val sumOfDigitsSumDigitsCountDigitsCount\
    \ = sumOfDigitsSumDigitsCountDigits / 10\n        val sumOfDigitsSumDigitsCountDigitsCountDigits\
    \ = sumOfDigitsSumDigitsCountDigits / 10\n        val sumOfDigitsSumDigitsCountDigitsCountDigitsCount\
    \ = sumOfDigitsSumDigitsCountDigits / 10\n        val sumOfDigitsSumDigitsCountDigitsCountDigitsCountDigits\
    \ = sumOfDigitsSumDigitsCountDigits / 10\n        val sumOfDigitsSumDigitsCountDigitsCountDigitsCountDigitsCount\
    \ = sumOfDigitsSumDigitsCountDigits / 10\n        val sumOfDigitsSumDigitsCountDigitsCountDigitsCountDigitsCountDigits\
    \ = sumOfDigitsSumDigitsCountDigits / 10\n        val sumOfDigitsSumDigitsCountDigitsCountDigitsCountDigitsCountDigitsCount\
    \ = sumOfDigitsSumDigitsCountDigits / 10\n        val sumOfDigitsSumDigitsCountDigitsCountDigitsCountDigitsCountDigitsCountDigits\
    \ = sumOfDigitsSumDigitsCountDigits / 10\n        val sumOfDigitsSumDigitsCountDigitsCountDigitsCountDigitsCountDigitsCountDigits\
    \ = sumOfDigitsSumDigitsCountDigits / 10\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjppx26eh.scala:35:12 ---------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m        \e[33mval\e[0m \e[36msumOfDigitsSumDigitsCountDigitsCountDigitsCountDigitsCountDigitsCountDigits\e\
    [0m = sumOfDigitsSumDigitsCountDigits / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumOfDigitsSumDigitsCountDigitsCountDigitsCountDigitsCountDigitsCountDigits\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  sumOfDigitsSumDigitsCountDigitsCountDigitsCountDigitsCountDigitsCountDigits\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpjppx26eh.scala:37:5 ---------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804824
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 177 == 0).filter(_ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_\
    \ % 209 == 0).filter(_ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_\
    \ % 221 == 0).filter(_ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_\
    \ % 239 == 0).filter(_ % 241 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_\
    \ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_\
    \ % 337 == 0).filter(_ % 341 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_\
    \ % 357 == 0).filter(_ % 363 == 0).filter(_ % 369 == 0).filter(_ % 37\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbb3qhddj.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpbb3qhddj.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804826
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 161 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 179 == 0).filter(_ % 183 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_\
    \ % 261 == 0).filter(_ % 267 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 321 == 0).filter(_\
    \ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_\
    \ % 341 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_\
    \ % 361 == 0).filter(_ % 367 == 0).filter(_ % 371 == 0).filter(_ % 377\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuw42crxr.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpuw42crxr.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m161\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m183\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804826
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.length\n\
    \        val maxPrime = primes.max\n        val maxPrimeIndex = primes.indexOf(maxPrime)\n\
    \        val maxPrimeDigit = maxPrime % 10\n        val maxPrimeDigitIndex = maxPrimeIndex\
    \ % 10\n        val maxPrimeSum = maxPrime + maxPrimeDigit\n        val maxPrimeSumDigit\
    \ = maxPrimeSum % 10\n        val maxPrimeSumDigitIndex = maxPrimeSumIndex % 10\n\
    \        val maxPrimeSumDigitSum = maxPrimeSumDigit + maxPrimeSumDigit\n     \
    \   val maxPrimeSumDigitSumIndex = maxPrimeSumDigitIndex % 10\n        val maxPrimeSumDigitSumIndex\
    \ = maxPrimeSumDigitSumIndex % 10\n        val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex\
    \ % 10\n        val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex % 10\n\
    \        val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex % 10\n      \
    \  val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex % 10\n        val maxPrimeSumDigitSumIndex\
    \ = maxPrimeSumDigitSumIndex % 10\n        val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex\
    \ % 10\n        val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex % 10\n\
    \        val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex % 10\n      \
    \  val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex % 10\n        val maxPrimeSumDigitSumIndex\
    \ = maxPrimeSumDigitSumIndex % 10\n        val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex\
    \ % 10\n        val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex % 10\n\
    \        val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex % 10\n      \
    \  val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex % 10\n        val maxPrimeSumDigitSumIndex\
    \ = maxPrimeSumDigitSumIndex % 10\n        val maxPrimeSumDigitSumIndex = maxPrimeSumDigitSumIndex\
    \ % 10\n        val maxPrimeSumDigitSumIndex = maxPrimeSum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjwse1vpn.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigitSumIndex\e\
    [0m = maxPrimeSumDigitSumIndex % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumDigitSumIndex is already defined as \e[33mvalue\e\
    [0m \e[35mmaxPrimeSumDigitSumIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjwse1vpn.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigitSumIndex\e\
    [0m = maxPrimeSumDigitSumIndex % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumDigitSumIndex is already defined as \e[33mvalue\e\
    [0m \e[35mmaxPrimeSumDigitSumIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjwse1vpn.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigitSumIndex\e\
    [0m = maxPrimeSumDigitSumIndex % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumDigitSumIndex is already defined as \e[33mvalue\e\
    [0m \e[35mmaxPrimeSumDigitSumIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjwse1vpn.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigitSumIndex\e\
    [0m = maxPrimeSumDigitSumIndex % \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumDigitSumIndex is already defined as \e[33mvalue\e\
    [0m \e[35mmaxPrimeSumDigitSumIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must a"
  stdout: ''
  timestamp: 1659804826
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 107 == 0).filter(_ % 113 == 0).filter(_ % 121 == 0).filter(_\
    \ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_ % 143 == 0).filter(_\
    \ % 149 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_ % 163 == 0).filter(_\
    \ % 169 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_\
    \ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_\
    \ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_ % 213 == 0).filter(_\
    \ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_ % 231 == 0).filter(_\
    \ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_\
    \ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 321 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_\
    \ % 331 == 0).filter(_ % 337 == 0).filter(_ % 341 == 0).filter(_ % 347 == 0).filter(_\
    \ % 351 == 0).filter(_ % 357 == 0).filter(_ % 363 == 0).filter(_ % 369 == 0).filter(_\
    \ % 371 == 0).filter(_ % 377 == 0).filter(_ % 381 == 0).filter(_ % 38\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjucf5shm.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpjucf5shm.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m107\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m121\e[0m == \e[31m0\e[0m).filter(_ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m149\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m169\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_ % \e[31m197\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804829
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = lst.filter(_ % maxPrime\
    \ == 0).sum\n        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$5(tmpi3fto4i8.scala:17)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpi3fto4i8.scala:17)\n\
    \tat Problem$.main(tmpi3fto4i8.scala:21)\n\tat Problem.main(tmpi3fto4i8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804830
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val maxPrime = primes.max\n\
    \        val sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n        return sumOfDigits\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$5(tmpvsv38je8.scala:16)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpvsv38je8.scala:16)\n\
    \tat Problem$.main(tmpvsv38je8.scala:20)\n\tat Problem.main(tmpvsv38je8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804829
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_\
    \ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_\
    \ % 201 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 231 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 253 == 0).filter(_ % 257 == 0).filter(_ % 259 == 0).filter(_ % 263 == 0).filter(_\
    \ % 267 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 279 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_ % 33\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjdjql6y2.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpjdjql6y2.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 != 0).filter(_\
    \ % 3 != 0).filter(_ % 5 != 0).filter(_ % 7 != 0).filter(_ % 11 != 0).filter(_\
    \ % 13 != 0).filter(_ % 17 != 0).filter(_ % 19 != 0).filter(_ % 23 != 0).filter(_\
    \ % 29 != 0).filter(_ % 31 != 0).filter(_ % 37 != 0).filter(_ % 41 != 0).filter(_\
    \ % 43 != 0).filter(_ % 47 != 0).filter(_ % 51 != 0).filter(_ % 55 != 0).filter(_\
    \ % 59 != 0).filter(_ % 61 != 0).filter(_ % 67 != 0).filter(_ % 71 != 0).filter(_\
    \ % 73 != 0).filter(_ % 79 != 0).filter(_ % 83 != 0).filter(_ % 89 != 0).filter(_\
    \ % 97 != 0).filter(_ % 101 != 0).filter(_ % 103 != 0).filter(_ % 107 != 0).filter(_\
    \ % 109 != 0).filter(_ % 113 != 0).filter(_ % 121 != 0).filter(_ % 127 != 0).filter(_\
    \ % 131 != 0).filter(_ % 137 != 0).filter(_ % 139 !=0).filter(_ % 149 != 0).filter(_\
    \ % 151 != 0).filter(_ % 157 != 0).filter(_ % 163 != 0).filter(_ % 167 !=0).filter(_\
    \ % 173 != 0).filter(_ % 179 !=0).filter(_ % 183 != 0).filter(_ % 191 !=0).filter(_\
    \ % 197 !=0).filter(_ % 199 !=0).filter(_ % 203 !=0).filter(_ % 209 !=0).filter(_\
    \ % 211 !=0).filter(_ % 217 !=0).filter(_ % 223 !=0).filter(_ % 227 !=0).filter(_\
    \ % 229 !=0).filter(_ % 233 !=0).filter(_ % 239 !=0).filter(_ % 241 !=0).filter(_\
    \ % 247 !=0).filter(_ % 251 !=0).filter(_ % 257 !=0).filter(_ % 263 !=0).filter(_\
    \ % 269 !=0).filter(_ % 271 !=0).filter(_ % 277 !=0).filter(_ % 283 !=0).filter(_\
    \ % 289 !=0).filter(_ % 291 !=0).filter(_ % 297 !=0).filter(_ % 301 !=0).filter(_\
    \ % 307 !=0).filter(_ % 311 !=0).filter(_ % 317 !=0).filter\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwoptc8lj.scala:15:5\
    \ ---------------------\e[0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804829
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_\
    \ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_\
    \ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 253 == 0).filter(_\
    \ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_\
    \ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_\
    \ % 337 == 0).filter(_ % 339 == 0).filter(_ % 341 == 0).filter(_ % 343 == 0).filter(_\
    \ % 347 == 0).filter(_ % 351 == 0).filter(_ % 353 == 0).filter(_ % 357\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8uco7v7v.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp8uco7v7v.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804828
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val primesCount = primes.length\n        val maxPrime = primes.max\n      \
    \  val maxPrimeIndex = primes.indexOf(maxPrime)\n        val sumOfDigits = lst.filter(_\
    \ % maxPrime == 0).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$6(tmpz8itmrli.scala:18)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpz8itmrli.scala:18)\n\
    \tat Problem$.main(tmpz8itmrli.scala:22)\n\tat Problem.main(tmpz8itmrli.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804830
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x =>\
    \ x.toString.toInt).sum\n        val maxDigit = maxPrime.toString.toInt\n    \
    \    sumOfDigits + maxDigit\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbyunuwj6.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804825
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = primes.map(x => x.toString.toInt).sum\n        sumOfDigits + maxPrime\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeeqg6_bt.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804825
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt)\n        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x\
    \ => x.toString.toInt).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_mbn5oy.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt)\n\e[31m\e[31m   |\e[0m\
    \                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804814
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val primesCount = primes.size\n        val maxPrime = primes.max\n        val\
    \ sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n        sumOfDigits\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$6(tmpojwzy_rf.scala:17)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpojwzy_rf.scala:17)\n\
    \tat Problem$.main(tmpojwzy_rf.scala:21)\n\tat Problem.main(tmpojwzy_rf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804830
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val largestPrime =\
    \ primes.max\n        val sumOfDigits = largestPrime.map(x => x % 10).sum\n  \
    \      sumOfDigits\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcg8r9cnt.scala:16:39 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = largestPrime.map(\e\
    [36mx\e[0m => x % \e[31m10\e[0m).sum\n\e[31m\e[31m   |\e[0m                  \
    \        ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                          value\
    \ map is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659804829
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val primesCount = primes.count()\n        val maxPrime = primes.max\n     \
    \   val maxPrimeIndex = primes.indexOf(maxPrime)\n        val maxPrimeDigit =\
    \ maxPrime % 10\n        val maxPrimeDigitIndex = maxPrimeIndex % 10\n       \
    \ val maxPrimeSum = maxPrimeDigit + maxPrimeDigitIndex\n        val maxPrimeSumIndex\
    \ = maxPrimeIndex / 10\n        val maxPrimeSumDigit = maxPrimeSumIndex % 10\n\
    \        val maxPrimeSumDigitIndex = maxPrimeSumIndex / 10\n        val maxPrimeSumSum\
    \ = maxPrimeSumDigit + maxPrimeSumDigitIndex\n        val maxPrimeSumSumIndex\
    \ = maxPrimeSumIndex / 10\n        val maxPrimeSumSumDigit = maxPrimeSumSumIndex\
    \ % 10\n        val maxPrimeSumSumDigitIndex = maxPrimeSumSumIndex / 10\n    \
    \    val maxPrimeSumSumSum = maxPrimeSumSumDigit + maxPrimeSumSumDigitIndex\n\
    \        val maxPrimeSumSumSumIndex = maxPrimeSumSumIndex / 10\n        val maxPrimeSumSumSumDigit\
    \ = maxPrimeSumSumSumIndex % 10\n        val maxPrimeSumSumSumDigitIndex = maxPrimeSumSumSumIndex\
    \ / 10\n        val maxPrimeSumSumSumSum = maxPrimeSumSumSumDigit + maxPrimeSumSumSumDigitIndex\n\
    \        val maxPrimeSumSumSumSumIndex = maxPrimeSumSumSumIndex / 10\n       \
    \ val maxPrimeSumSumSumSumDigit = maxPrimeSumSumSumSumIndex % 10\n        val\
    \ maxPrimeSumSumSumSumDigitIndex = maxPrimeSumSumSumSumIndex / 10\n        val\
    \ maxPrimeSumSumSumSumSum = maxPrimeSumSumSumSumDigit + maxPrimeSumSumSumSumDigitIndex\n\
    \        val maxPrimeSumSumSumSumSumIndex = maxPrimeSumSumSumSumSumIndex / 10\n\
    \        val maxPrimeSumSumSumSumSumDigit = maxPrimeSumSumSumSumSumIndex % 10\n\
    \        val maxPrimeSumSumSumSumSumDigitIndex = maxPrimeSumSumSumSumSumIndex\
    \ / 10\n        \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpp1vin1or.scala:15:38 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesCount\e[0m = primes.count()\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mmissing argument for parameter p of \e[33mmethod\e[0m \e[35mcount\e[0m in \e\
    [33mtrait\e[0m \e[35mIterableOnceOps\e[0m: (p: Long => Boolean): Int\n\e[31m\e\
    [31m-- [E045] Cyclic Error: /tmp/tmpp1vin1or.scala:37:43 ---------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumSumSumSumSumIndex\e\
    [0m = maxPrimeSumSumSumSumSumIndex / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m    \
    \                                       ^\e[0m\n\e[31m   |\e[0m              \
    \   Recursive \e[33mvalue\e[0m \e[35mmaxPrimeSumSumSumSumSumIndex\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpp1vin1or.scala:41:5\
    \ ---------------------\e[0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659804828
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val maxPrime = primes.max\n        val sumOfDigits = lst.filter(_ % maxPrime\
    \ == 0).sum\n        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$6(tmp8h388rc6.scala:16)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmp8h388rc6.scala:16)\n\
    \tat Problem$.main(tmp8h388rc6.scala:20)\n\tat Problem.main(tmp8h388rc6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804830
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.map(x => x % maxPrime).sum\n        return sumOfDigits\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong,\
    \ 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong,\
    \ 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong,\
    \ 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong,\
    \ 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong,\
    \ 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong)))\
    \ == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong,\
    \ 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong,\
    \ 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong)))\
    \ == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9njbvrlx.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804827
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 161 == 0).filter(_ % 165 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_ % 191 == 0).filter(_\
    \ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_ % 201 == 0).filter(_\
    \ % 207 == 0).filter(_ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_\
    \ % 221 == 0).filter(_ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_\
    \ % 239 == 0).filter(_ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 257 == 0).filter(_ % 261 == 0).filter(_ % 265 == 0).filter(_\
    \ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_\
    \ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_\
    \ % 313 == 0).filter(_ % 317 == 0).filter(_ % 321 == 0).filter(_ % 323 == 0).filter(_\
    \ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_ % 339 == 0).filter(_\
    \ % 343 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjs13ksw1.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpjs13ksw1.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m161\e[0m == \e[31m0\e[0m).filter(_ % \e[31m165\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804830
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 107 == 0).filter(_ % 113 == 0).filter(_ % 119 == 0).filter(_\
    \ % 121 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 143 == 0).filter(_ % 149 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_\
    \ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_\
    \ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 231 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_\
    \ % 263 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 321 == 0).filter(_\
    \ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_\
    \ % 341 == 0).filter(_ % 343 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_\
    \ % 357 == 0).filter(_ % 363 == 0).filter(_ % 369 == 0).filter(_ % 37\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt3be5q9m.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpt3be5q9m.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m107\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m119\e[0m == \e[31m0\e[0m).filter(_ % \e[31m121\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m149\e[0m == \e[31m0\e[0m).filter(_ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804831
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val primesCount = primes.size\n        val maxPrime = primes.max\n        val\
    \ maxPrimeDigit = maxPrime.toString.length\n        val maxPrimeSum = maxPrime.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigit = maxPrimeSum.toString.length\n        val\
    \ maxPrimeSumDigits = maxPrimeSum.toString.reverse.foldLeft(0)(_ + _)\n      \
    \  val maxPrimeSumDigits2 = maxPrimeSum.toString.reverse.foldLeft(0)(_ + _)\n\
    \        val maxPrimeSumDigits3 = maxPrimeSum.toString.reverse.foldLeft(0)(_ +\
    \ _)\n        val maxPrimeSumDigits4 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigits5 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigits6 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigits7 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigits8 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigits9 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigits10 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigits11 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigits12 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigits13 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigits14 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumDigits15 = maxPrimeSum.toString.reverse.foldLeft(0)(_\
    \ + _\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmq63ru12.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpmq63ru12.scala:35:5 ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804830
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_\
    \ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_\
    \ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 223 == 0).filter(_ % 229 == 0).filter(_\
    \ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_ % 251 == 0).filter(_\
    \ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_\
    \ % 277 == 0).filter(_ % 283 == 0).filter(_ % 289 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 323 == 0).filter(_ % 329 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_\
    \ % 343 == 0).filter(_ % 349 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_\
    \ % 363 == 0).filter(_ % 369 == 0).filter(_ % 371 == 0).filter(_ % 377 == 0).filter(_\
    \ % 383 == 0).filter(_ % 389 == 0).filter(_ % 393 == 0).filter(_ % 409\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2qx7x2ti.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp2qx7x2ti.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804831
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primeSum = mutable.Set[Long]()\n        val primeSums = mutable.Set[Long]()\n\
    \        val primeSumsSet = mutable.Set[Long]()\n        val primeSumsSet2 = mutable.Set[Long]()\n\
    \        val primeSumsSet3 = mutable.Set[Long]()\n        val primeSumsSet4 =\
    \ mutable.Set[Long]()\n        val primeSumsSet5 = mutable.Set[Long]()\n     \
    \   val primeSumsSet6 = mutable.Set[Long]()\n        val primeSumsSet7 = mutable.Set[Long]()\n\
    \        val primeSumsSet8 = mutable.Set[Long]()\n        val primeSumsSet9 =\
    \ mutable.Set[Long]()\n        val primeSumsSet10 = mutable.Set[Long]()\n    \
    \    val primeSumsSet11 = mutable.Set[Long]()\n        val primeSumsSet12 = mutable.Set[Long]()\n\
    \        val primeSumsSet13 = mutable.Set[Long]()\n        val primeSumsSet14\
    \ = mutable.Set[Long]()\n        val primeSumsSet15 = mutable.Set[Long]()\n  \
    \      val primeSumsSet16 = mutable.Set[Long]()\n        val primeSumsSet17 =\
    \ mutable.Set[Long]()\n        val primeSumsSet18 = mutable.Set[Long]()\n    \
    \    val primeSumsSet19 = mutable.Set[Long]()\n        val primeSumsSet20 = mutable.Set[Long]()\n\
    \        val primeSumsSet21 = mutable.Set[Long]()\n        val primeSumsSet22\
    \ = mutable.Set[Long]()\n        val primeSumsSet23 = mutable.Set[Long]()\n  \
    \      val primeSumsSet24 = mutable.Set[Long]()\n        val primeSumsSet25 =\
    \ mutable.Set[Long]()\n        val primeSumsSet26 = mutable.Set[Long]()\n    \
    \    val primeSumsSet27 = mutable.Set[Long]()\n        val primeSumsSet28 = mutable.Set[Long]()\n\
    \        val primeSumsSet29 = mutable.Set[Long]()\n        val primeSumsSet30\
    \ = mutable.Set[Long]()\n        val primeSumsSet\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaod1aug0.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:15:23\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m    \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeSums\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeSumsSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpaod1aug0.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimeSumsSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m lon"
  stdout: ''
  timestamp: 1659804833
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt)\n        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x\
    \ => x.toString.toInt).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_mbn5oy.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt)\n\e[31m\e[31m   |\e[0m\
    \                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804814
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 107 == 0).filter(_ % 113 == 0).filter(_ % 121 == 0).filter(_\
    \ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_ % 143 == 0).filter(_\
    \ % 149 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_ % 163 == 0).filter(_\
    \ % 169 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_\
    \ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_\
    \ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_ % 213 == 0).filter(_\
    \ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_ % 231 == 0).filter(_\
    \ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_\
    \ % 289 == 0).filter(_ % 293 == 0).filter(_ % 299 == 0).filter(_ % 301 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 321 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_\
    \ % 343 == 0).filter(_ % 349 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_\
    \ % 363 == 0).filter(_ % 369 == 0).filter(_ % 371 == 0).filter(_ % 377\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaojflzw_.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpaojflzw_.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m107\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m121\e[0m == \e[31m0\e[0m).filter(_ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m149\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m169\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_ % \e[31m197\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804838
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 != 0).filter(_\
    \ % 3 != 0).filter(_ % 5 != 0).filter(_ % 7 != 0).filter(_ % 11 != 0).filter(_\
    \ % 13 != 0).filter(_ % 17 != 0).filter(_ % 19 != 0).filter(_ % 23 != 0).filter(_\
    \ % 29 != 0).filter(_ % 31 != 0).filter(_ % 37 != 0).filter(_ % 41 != 0).filter(_\
    \ % 43 != 0).filter(_ % 47 != 0).filter(_ % 51 != 0).filter(_ % 53 != 0).filter(_\
    \ % 59 != 0).filter(_ % 61 != 0).filter(_ % 67 != 0).filter(_ % 71 != 0).filter(_\
    \ % 73 != 0).filter(_ % 79 != 0).filter(_ % 83 != 0).filter(_ % 89 != 0).filter(_\
    \ % 97 != 0).filter(_ % 101 != 0).filter(_ % 103 != 0).filter(_ % 107 != 0).filter(_\
    \ % 109 != 0).filter(_ % 113 != 0).filter(_ % 121 != 0).filter(_ % 127 != 0).filter(_\
    \ % 131 != 0).filter(_ % 137 != 0).filter(_ % 139 !=0).filter(_ % 149 != 0).filter(_\
    \ % 151 != 0).filter(_ % 157 !=0).filter(_ % 163 != 0).filter(_ % 167 !=0).filter(_\
    \ % 173 != 0).filter(_ % 179 !=0).filter(_ % 183 != 0).filter(_ % 191 != 0).filter(_\
    \ % 193 != 0).filter(_ % 197 !=0).filter(_ % 199 != 0).filter(_ % 203 != 0).filter(_\
    \ % 209 !=0).filter(_ % 211 != 0).filter(_ % 217 !=0).filter(_ % 223 != 0).filter(_\
    \ % 227 !=0).filter(_ % 229 !=0).filter(_ % 233 !=0).filter(_ % 239 !=0).filter(_\
    \ % 241 !=0).filter(_ % 247 !=0).filter(_ % 251 !=0).filter(_ % 257 !=0).filter(_\
    \ % 263 !=0).filter(_ % 269 !=0).filter(_ % 271 !=0).filter(_ % 277 !=0).filter(_\
    \ % 281 !=0).filter(_ % 283 !=0).filter(_ % 293 !=0).filter(_ % 297 !=0).filter(_\
    \ % 301 !=0).filter(_ % 303 !=0).filter(_ % 309 !=0).filter(_ % 311 !=0).\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbt3tk7_l.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpbt3tk7_l.scala:15:5 ---------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:  \
    \  Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804836
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val sum = 0\n        lst.foreach(x => {\n            val isPrime = primes.contains(x)\n\
    \            if (isPrime) {\n                sum += x\n            } else {\n\
    \                primes += x\n            }\n        })\n        sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpheptbzar.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpheptbzar.scala:19:20 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                sum += x\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659804835
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 161 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 179 == 0).filter(_ % 183 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_\
    \ % 261 == 0).filter(_ % 267 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 321 == 0).filter(_\
    \ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_\
    \ % 341 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_\
    \ % 361 == 0).filter(_ % 367 == 0).filter(_ % 371 == 0).filter(_ % 377\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5r4c9ckf.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp5r4c9ckf.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m161\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m183\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804818
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 107 == 0).filter(_ % 113 == 0).filter(_ % 121 == 0).filter(_\
    \ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_ % 143 == 0).filter(_\
    \ % 149 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_ % 163 == 0).filter(_\
    \ % 169 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_\
    \ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_\
    \ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_ % 213 == 0).filter(_\
    \ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_ % 231 == 0).filter(_\
    \ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_\
    \ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 321 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_\
    \ % 331 == 0).filter(_ % 337 == 0).filter(_ % 341 == 0).filter(_ % 347 == 0).filter(_\
    \ % 351 == 0).filter(_ % 357 == 0).filter(_ % 361 == 0).filter(_ % 367 == 0).filter(_\
    \ % 371 == 0).filter(_ % 377 == 0).filter(_ % 381 == 0).filter(_ % 38\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpb3sv4v4y.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpb3sv4v4y.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m107\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m121\e[0m == \e[31m0\e[0m).filter(_ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m149\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m169\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_ % \e[31m197\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804838
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.length\n\
    \        val maxPrime = primes.max\n        val maxPrimeIndex = primes.indexOf(maxPrime)\n\
    \        val maxPrimeDigit = maxPrime % 10\n        val maxPrimeDigitIndex = maxPrimeIndex\
    \ % 10\n        val maxPrimeSum = maxPrimeDigit + maxPrimeDigitIndex\n       \
    \ val sumOfDigits = lst.map(x => x % 10).sum\n        val sumOfDigitsCount = lst.map(x\
    \ => x % 10).length\n        val sumOfDigitsSum = sumOfDigits + sumOfDigitsCount\n\
    \        val sumOfDigitsSumOfDigits = sumOfDigitsSum + maxPrimeSum\n        val\
    \ sumOfDigitsSumOfDigitsCount = sumOfDigitsSumOfDigits + maxPrimeSum\n       \
    \ val sumOfDigitsSumOfDigitsCount2 = sumOfDigitsSumOfDigitsCount + maxPrimeSum\n\
    \        val sumOfDigitsSumOfDigitsCount3 = sumOfDigitsSumOfDigitsCount2 + maxPrimeSum\n\
    \        val sumOfDigitsSumOfDigitsCount4 = sumOfDigitsSumOfDigitsCount3 + maxPrimeSum\n\
    \        val sumOfDigitsSumOfDigitsCount5 = sumOfDigitsSumOfDigitsCount4 + maxPrimeSum\n\
    \        val sumOfDigitsSumOfDigitsCount6 = sumOfDigitsSumOfDigitsCount5 + maxPrimeSum\n\
    \        val sumOfDigitsSumOfDigitsCount7 = sumOfDigitsSumOfDigitsCount6 + maxPrimeSum\n\
    \        val sumOfDigitsSumOfDigitsCount8 = sumOfDigitsSumOfDigitsCount7 + maxPrimeSum\n\
    \        val sumOfDigitsSumOfDigitsCount9 = sumOfDigitsSumOfDigitsCount8 + maxPrimeSum\n\
    \        val sumOfDigitsSumOfDigitsCount10 = sumOfDigitsSumOfDigitsCount9 + maxPrimeSum\n\
    \        val sumOfDigitsSumOfDigitsCount11 = sumOfDigitsSumOfDigitsCount10 + maxPrimeSum\n\
    \        val sumOfDigitsSumOfDigitsCount12 = sumOfDigitsSumOfDigitsCount11 + maxPrimeSum\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2498uggs.scala:38:5\
    \ ---------------------\e[0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804837
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_\
    \ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_\
    \ % 201 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 231 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 253 == 0).filter(_ % 257 == 0).filter(_ % 259 == 0).filter(_ % 263 == 0).filter(_\
    \ % 267 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 279 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 319 == 0).filter(_ % 323 == 0).filter(_ % 337 == 0).filter(_ % 34\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpo5tr0ay_.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpo5tr0ay_.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804840
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 != 0).filter(_\
    \ % 3 != 0).filter(_ % 5 != 0).filter(_ % 7 != 0).filter(_ % 11 != 0).filter(_\
    \ % 13 != 0).filter(_ % 17 != 0).filter(_ % 19 != 0).filter(_ % 23 != 0).filter(_\
    \ % 29 != 0).filter(_ % 31 != 0).filter(_ % 37 != 0).filter(_ % 41 != 0).filter(_\
    \ % 43 != 0).filter(_ % 47 != 0).filter(_ % 51 != 0).filter(_ % 53 != 0).filter(_\
    \ % 59 != 0).filter(_ % 61 != 0).filter(_ % 67 != 0).filter(_ % 71 != 0).filter(_\
    \ % 73 != 0).filter(_ % 79 != 0).filter(_ % 83 != 0).filter(_ % 89 != 0).filter(_\
    \ % 97 != 0).filter(_ % 101 != 0).filter(_ % 103 != 0).filter(_ % 107 != 0).filter(_\
    \ % 109 != 0).filter(_ % 113 != 0).filter(_ % 121 != 0).filter(_ % 127 != 0).filter(_\
    \ % 131 != 0).filter(_ % 137 != 0).filter(_ % 139 !=0).filter(_ % 149 != 0).filter(_\
    \ % 151 != 0).filter(_ % 157 !=0).filter(_ % 163 != 0).filter(_ % 167 !=0).filter(_\
    \ % 173 != 0).filter(_ % 179 !=0).filter(_ % 183 != 0).filter(_ % 191 != 0).filter(_\
    \ % 193 !=0).filter(_ % 197 !=0).filter(_ % 199 !=0).filter(_ % 203 !=0).filter(_\
    \ % 207 !=0).filter(_ % 209 !=0).filter(_ % 211 !=0).filter(_ % 213 !=0).filter(_\
    \ % 217 !=0).filter(_ % 219 !=0).filter(_ % 223 !=0).filter(_ % 227 !=0).filter(_\
    \ % 229 !=0).filter(_ % 233 !=0).filter(_ % 239 !=0).filter(_ % 241 !=0).filter(_\
    \ % 247 !=0).filter(_ % 251 !=0).filter(_ % 257 !=0).filter(_ % 263 !=0).filter(_\
    \ % 269 !=0).filter(_ % 271 !=0).filter(_ % 277 !=0).filter(_ % 281 !=0).filter(_\
    \ % 283 !=0).filter(_ % 293 !=0).filter(_ % 297 !=0).filter\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppl9chkky.scala:15:5\
    \ ---------------------\e[0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804838
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 177 == 0).filter(_ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_\
    \ % 209 == 0).filter(_ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_\
    \ % 221 == 0).filter(_ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_\
    \ % 239 == 0).filter(_ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 253 == 0).filter(_ % 257 == 0).filter(_ % 259 == 0).filter(_\
    \ % 263 == 0).filter(_ % 267 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_\
    \ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_\
    \ % 337 == 0).filter(_ % 339 == 0).filter(_ % 343 == 0).filter(_ % 347\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdx5kt55y.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpdx5kt55y.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_\
    \ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_\
    \ % 201 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 231 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 253 == 0).filter(_ % 257 == 0).filter(_ % 259 == 0).filter(_ % 263 == 0).filter(_\
    \ % 267 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 279 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_ % 33\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjdjql6y2.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpjdjql6y2.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primeSum = mutable.Set[Long]()\n        val primeSums = mutable.Set[Long]()\n\
    \        val primeSumsSet = mutable.Set[Long]()\n        val primeSumsSet2 = mutable.Set[Long]()\n\
    \        val primeSumsSet3 = mutable.Set[Long]()\n        val primeSumsSet4 =\
    \ mutable.Set[Long]()\n        val primeSumsSet5 = mutable.Set[Long]()\n     \
    \   val primeSumsSet6 = mutable.Set[Long]()\n        val primeSumsSet7 = mutable.Set[Long]()\n\
    \        val primeSumsSet8 = mutable.Set[Long]()\n        val primeSumsSet9 =\
    \ mutable.Set[Long]()\n        val primeSumsSet10 = mutable.Set[Long]()\n    \
    \    val primeSumsSet11 = mutable.Set[Long]()\n        val primeSumsSet12 = mutable.Set[Long]()\n\
    \        val primeSumsSet13 = mutable.Set[Long]()\n        val primeSumsSet14\
    \ = mutable.Set[Long]()\n        val primeSumsSet15 = mutable.Set[Long]()\n  \
    \      val primeSumsSet16 = mutable.Set[Long]()\n        val primeSumsSet17 =\
    \ mutable.Set[Long]()\n        val primeSumsSet18 = mutable.Set[Long]()\n    \
    \    val primeSumsSet19 = mutable.Set[Long]()\n        val primeSumsSet20 = mutable.Set[Long]()\n\
    \        val primeSumsSet21 = mutable.Set[Long]()\n        val primeSumsSet22\
    \ = mutable.Set[Long]()\n        val primeSumsSet23 = mutable.Set[Long]()\n  \
    \      val primeSumsSet24 = mutable.Set[Long]()\n        val primeSumsSet25 =\
    \ mutable.Set[Long]()\n        val primeSumsSet26 = mutable.Set[Long]()\n    \
    \    val primeSumsSet27 = mutable.Set[Long]()\n        val primeSumsSet28 = mutable.Set[Long]()\n\
    \        val primeSumsSet29 = mutable.Set[Long]()\n        val primeSumsSet30\
    \ = mutable.Set[Long]()\n        val primeSumsSet\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaod1aug0.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:15:23\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m    \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeSums\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeSumsSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpaod1aug0.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimeSumsSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m lon"
  stdout: ''
  timestamp: 1659804833
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt)\n        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x\
    \ => x.toString.toInt).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_mbn5oy.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt)\n\e[31m\e[31m   |\e[0m\
    \                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804814
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val sum = 0\n        for(i <- 0 until lst.size) {\n            val prime = lst.filter(_\
    \ % i == 0).length\n            if(prime > 1) {\n                primes += prime\n\
    \            }\n        }\n        val max = primes.max\n        for(i <- 0 until\
    \ max) {\n            val digits = lst.filter(_ % i == 0).length\n           \
    \ sum += digits\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwwkgpq80.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpwwkgpq80.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            sum += digits\n\e[31m\e[31m   |\e[0m    \
    \        ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659804839
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 161 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 179 == 0).filter(_ % 183 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_\
    \ % 261 == 0).filter(_ % 267 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 321 == 0).filter(_\
    \ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_\
    \ % 341 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_\
    \ % 361 == 0).filter(_ % 367 == 0).filter(_ % 371 == 0).filter(_ % 377\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0bjz7p1a.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp0bjz7p1a.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m161\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m183\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val maxPrime = primes.max\n        val sumOfDigits = lst.filter(_ % maxPrime\
    \ == 0).sum\n        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$6(tmp8h388rc6.scala:16)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmp8h388rc6.scala:16)\n\
    \tat Problem$.main(tmp8h388rc6.scala:20)\n\tat Problem.main(tmp8h388rc6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804830
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val maxPrime = primes.max\n        val maxPrimeIndex = primes.indexOf(maxPrime)\n\
    \        val maxPrimeDigit = maxPrime % 10\n        val maxPrimeDigitIndex = maxPrimeIndex\
    \ % 10\n        val maxPrimeDigitSum = maxPrimeDigit + maxPrimeDigitIndex\n  \
    \      val maxPrimeDigitSumIndex = maxPrimeDigitSum - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex2 = maxPrimeDigitSumIndex - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex3 = maxPrimeDigitSumIndex2 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex4 = maxPrimeDigitSumIndex3 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex5 = maxPrimeDigitSumIndex4 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex6 = maxPrimeDigitSumIndex5 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex7 = maxPrimeDigitSumIndex6 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex8 = maxPrimeDigitSumIndex7 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex9 = maxPrimeDigitSumIndex8 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex10 = maxPrimeDigitSumIndex9 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex11 = maxPrimeDigitSumIndex10 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex12 = maxPrimeDigitSumIndex11 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex13 = maxPrimeDigitSumIndex12 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex14 = maxPrimeDigitSumIndex13 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex15 = maxPrimeDigitSumIndex14 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex16 = maxPrimeDigitSumIndex15 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex17 = maxPrimeDigitSumIndex16 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex18 = maxPrimeDigitSumIndex17 - maxPrimeIndex\n        val\
    \ maxPrimeDigitSumIndex19\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp6mvuqpk5.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp6mvuqpk5.scala:40:5 ---------------------\e[0m\e[0m\n\e[31m40 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesSet = primes.toSet\n\
    \        val primesSetSize = primesSet.size\n        val primesSetIterator = primesSet.iterator\n\
    \        val maxPrime = primesSetIterator.next\n        val maxPrimeSet = maxPrime\
    \ + primesSetIterator.next\n        val maxPrimeSetSize = maxPrimeSet.size\n \
    \       val maxPrimeSetIterator = maxPrimeSet.iterator\n        val maxPrimeSetIteratorIterator\
    \ = maxPrimeSetIterator.iterator\n        val maxPrimeSetIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIterator.iterator\n        val maxPrimeSetIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIterator.iterator\n        val maxPrimeSetIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIterator.iterator\n        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIterator.iterator\n        val\
    \ maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIterator = maxPrimeSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIterator.iterator\n        val\
    \ maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIterator.iterator\n        val\
    \ maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIterator.iterator\n        val\
    \ maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIterator.iterator\n        val\
    \ maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIterator.iterator\n        val\
    \ maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIterator.iterator\n        val\
    \ maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIterator.iterator\n        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIterator.iterator\n        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuieyjxc4.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpuieyjxc4.scala:35:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m35 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\e\
    [0m = maxPrimeSetIteratorIteratorIteratorIterator.iterator\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpuieyjxc4.scala:20:42 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSetSize\e[0m = maxPrimeSet.size\n\
    \e[31m\e[31m   |\e[0m                              ^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                              value size is not a member of Long\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpuieyjxc4.scala:21:46 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSetIterator\e[0m\
    \ = maxPrimeSet.iterator\n\e[31m\e[31m   |\e[0m                              \
    \    ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                              \
    \    value iterator is not a member of Long\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpuieyjxc4.scala:37:5 ---------------------\e[0m\e[0m\n\e[31m37\
    \ |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:  \
    \  Unit\n\e[31m   |\e[0m   "
  stdout: ''
  timestamp: 1659804841
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val primesCount = primes.size\n        val maxPrime = primes.max\n        val\
    \ maxPrimeDigit = maxPrime % 10\n        val maxPrimeDigitCount = maxPrimeDigit\
    \ + 1\n        val maxPrimeDigitSum = maxPrimeDigitCount * maxPrimeDigit\n   \
    \     val sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n        sumOfDigits\
    \ + maxPrimeDigitSum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$6(tmpz6va60w2.scala:20)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpz6va60w2.scala:20)\n\
    \tat Problem$.main(tmpz6va60w2.scala:24)\n\tat Problem.main(tmpz6va60w2.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804844
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val maxPrime = primes.max\n\
    \        val sumOfDigits = primes.map(x => math.pow(10, x)).sum\n        sumOfDigits\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppx3qvb4t.scala:17:8\
    \ ---------------------\e[0m\e[0m\n\e[31m17 |\e[0m        sumOfDigits\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (sumOfDigits\
    \ : Double)\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 != 0)\n    \
    \    val primesSet = primes.toSet\n        val maxPrime = primes.max\n       \
    \ val maxPrimeIndex = primes.indexOf(maxPrime)\n        val maxPrimeSet = primes.take(maxPrimeIndex).toSet\n\
    \        val maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetIterator\
    \ = maxPrimeSet.iterator\n        val maxPrimeSetIteratorSize = maxPrimeSetIterator.size\n\
    \        val maxPrimeSetIteratorIterator = maxPrimeSetIterator.iterator\n    \
    \    val maxPrimeSetIteratorIteratorSize = maxPrimeSetIteratorIterator.size\n\
    \        val maxPrimeSetIteratorIteratorIterator = maxPrimeSetIteratorIterator.iterator\n\
    \        val maxPrimeSetIteratorIteratorIteratorSize = maxPrimeSetIteratorIteratorIterator.size\n\
    \        val maxPrimeSetIteratorIteratorIteratorIterator = maxPrimeSetIteratorIteratorIterator.iterator\n\
    \        val maxPrimeSetIteratorIteratorIteratorIteratorSize = maxPrimeSetIteratorIteratorIteratorIterator.size\n\
    \        val maxPrimeSetIteratorIteratorIteratorIteratorIterator = maxPrimeSetIteratorIteratorIteratorIterator.iterator\n\
    \        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorSize = maxPrimeSetIteratorIteratorIteratorIteratorIterator.size\n\
    \        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorIterator = maxPrimeSetIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorSize =\
    \ maxPrimeSetIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIterator = maxPrimeSetIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val maxPrimeSetIteratorIteratorIterator\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpv6hj70gc.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv6hj70gc.scala:37:110\
    \ -----------------------\e[0m\e[0m\n\e[31m37 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\e\
    [0m = maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNot found: maxPrimeSetIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpv6hj70gc.scala:39:5\
    \ ---------------------\e[0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659804841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val largestPrime = primes.max\n        val sumOfDigits = largestPrime.map(_.toString.toInt).sum\n\
    \        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa2k6cig1.scala:17:39 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = largestPrime.map(_.toString.toInt).sum\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                          value map is not a member of Long\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val primesSum = primes.sum\n        val primesDigits\
    \ = primes.map(x => x.toString.toInt)\n        val maxPrime = primes.max\n   \
    \     val maxPrimeDigits = maxPrime.toString.toInt\n        val maxPrimeSum =\
    \ maxPrime.toString.toInt\n        val maxPrimeSumDigits = maxPrimeSum.toString.toInt\n\
    \        val maxPrimeSumDigitsSum = maxPrimeSumDigits.sum\n        val maxPrimeSumDigitsSumDigits\
    \ = maxPrimeSumDigitsSum.toString.toInt\n        val maxPrimeSumDigitsSumDigitsSum\
    \ = maxPrimeSumDigitsSumDigits.sum\n        val maxPrimeSumDigitsSumDigitsSumDigits\
    \ = maxPrimeSumDigitsSumDigitsSum.toString.toInt\n        val maxPrimeSumDigitsSumDigitsSumDigitsSum\
    \ = maxPrimeSumDigitsSumDigitsSumDigitsSum.toString.toInt\n        val maxPrimeSumDigitsSumDigitsSumDigitsSumDigits\
    \ = maxPrimeSumDigitsSumDigitsSumDigitsSumDigits.sum\n        val maxPrimeSumDigitsSumDigitsSumDigitsSumDigitsSum\
    \ = maxPrimeSumDigitsSumDigitsSumDigitsSumDigitsSum.toString.toInt\n        val\
    \ maxPrimeSumDigitsSumDigitsSumDigitsSumDigitsSumDigits = maxPrimeSumDigitsSumDigitsSumDigitsSumDigitsSumDigits.sum\n\
    \        val maxPrimeSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSum = maxPrimeSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSum.toString.toInt\n\
    \        val maxPrimeSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigits =\
    \ maxPrimeSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigits.sum\n       \
    \ val maxPrimeSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSum = maxPrimeSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSumDigitsSum.toString.toInt\n\
    \        val maxPrimeSumDigitsSumDigitsSumDigitsSumDigitsSum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptzo8hn0f.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptzo8hn0f.scala:14:37\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = lst.filter(\e[36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\
    \e[31m\e[31m   |\e[0m                                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                     Not found: isPrime\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptzo8hn0f.scala:21:53 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigitsSum\e[0m\
    \ = maxPrimeSumDigits.sum\n\e[31m\e[31m   |\e[0m                             \
    \      ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                           \
    \        value sum is not a member of Int\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmptzo8hn0f.scala:25:53 ---------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigitsSumDigitsSumDigitsSum\e\
    [0m = maxPrimeSumDigitsSumDigitsSumDigitsSum.toString.toInt\n\e[31m\e[31m   |\e\
    [0m                                                     ^\e[0m\n\e[31m   |\e[0m\
    \       Recursive \e[33mvalue\e[0m \e[35mmaxPrimeSumDigitsSumDigitsSumDigitsSum\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmptzo8hn0f.scala:26:59\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxPrimeSumDigitsSumDigitsSumDigitsSumDigits\e[0m = maxPrimeSumDigitsSumDigitsSumDigitsSumDigits.sum\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \   ^\e[0m\n\e[31m   |\e[0m Recursive \e[33mvalue\e[0m \e[35mmaxPrimeSumDigitsSumDigitsSumDigitsSumDigits\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmptzo"
  stdout: ''
  timestamp: 1659804843
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_\
    \ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_\
    \ % 201 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 231 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 253 == 0).filter(_ % 257 == 0).filter(_ % 259 == 0).filter(_ % 263 == 0).filter(_\
    \ % 267 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 279 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 297 == 0).filter(_ % 301 == 0).filter(_ % 303 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 319\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphy0hyycc.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmphy0hyycc.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804843
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = primes.map(x => x.toInt).sum\n        val maxDigit = maxPrime.toString.toInt\n\
    \        sumOfDigits + maxDigit\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy9vwu5ut.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804839
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 != 0).filter(_\
    \ % 3 != 0).filter(_ % 5 != 0).filter(_ % 7 != 0)\n        val maxPrime = primes.max\n\
    \        val sumOfDigits = lst.filter(_ % maxPrime != 0).sum\n        sumOfDigits\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpd4qj2_6k.scala:20)\n\tat Problem.main(tmpd4qj2_6k.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804844
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val largestPrime =\
    \ primes.max\n        val sumOfDigits = largestPrime.map(_.toString.toInt).sum\n\
    \        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpakctpfdl.scala:16:39 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = largestPrime.map(_.toString.toInt).sum\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                          value map is not a member of Long\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804843
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 177 == 0).filter(_ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_\
    \ % 263 == 0).filter(_ % 267 == 0).filter(_ % 269 == 0).filter(_ % 273 == 0).filter(_\
    \ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_\
    \ % 337 == 0).filter(_ % 339 == 0).filter(_ % 343 == 0).filter(_ % 347 == 0).filter(_\
    \ % 351 == 0).filter(_ % 357 == 0).filter(_ % 359 == 0).filter(_ % 36\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp83r9f03e.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp83r9f03e.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804845
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 177 == 0).filter(_ % 179 == 0).filter(_ % 183 == 0).filter(_ % 187 == 0).filter(_\
    \ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_\
    \ % 203 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_ % 243 == 0).filter(_\
    \ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_\
    \ % 267 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_\
    \ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_\
    \ % 313 == 0).filter(_ % 317 == 0).filter(_ % 319 == 0).filter(_ % 323 == 0).filter(_\
    \ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_ % 341 == 0).filter(_\
    \ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_ % 359\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpc6gny98j.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpc6gny98j.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m183\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804847
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = primes.map(x => x.toString.toInt).sum\n        sumOfDigits\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong,\
    \ 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong,\
    \ 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong,\
    \ 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong,\
    \ 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong,\
    \ 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong)))\
    \ == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong,\
    \ 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong,\
    \ 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong)))\
    \ == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp22_qkzyl.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804844
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt)\n        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x\
    \ => x.toString.toInt).sum\n        val result = sumOfDigits + maxPrime\n    \
    \    result\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy22sd23q.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt)\n\e[31m\e[31m   |\e[0m\
    \                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804846
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 177 == 0).filter(_ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 223 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 253 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 267 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_\
    \ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 321 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_\
    \ % 331 == 0).filter(_ % 337 == 0).filter(_ % 341 == 0).filter(_ % 347 == 0).filter(_\
    \ % 351 == 0).filter(_ % 353 == 0).filter(_ % 357 == 0).filter(_ % 36\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpiym3x5a1.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpiym3x5a1.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804850
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 161 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 179 == 0).filter(_ % 183 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_\
    \ % 261 == 0).filter(_ % 267 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 321 == 0).filter(_\
    \ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_\
    \ % 341 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_\
    \ % 361 == 0).filter(_ % 367 == 0).filter(_ % 371 == 0).filter(_ % 377\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5r4c9ckf.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp5r4c9ckf.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m161\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m183\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804818
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x =>\
    \ x.toString.toInt).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpic3ftcc3.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804812
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 177 == 0).filter(_ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_\
    \ % 209 == 0).filter(_ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_\
    \ % 221 == 0).filter(_ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_\
    \ % 239 == 0).filter(_ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 267 == 0).filter(_\
    \ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_\
    \ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_\
    \ % 313 == 0).filter(_ % 317 == 0).filter(_ % 319 == 0).filter(_ % 323 == 0).filter(_\
    \ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_ % 339 == 0).filter(_\
    \ % 343 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbgs6x53v.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpbgs6x53v.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804851
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.length\n\
    \        val maxPrime = primes.max\n        val maxPrimeIndex = primes.indexOf(maxPrime)\n\
    \        val maxPrimeDigit = maxPrime % 10\n        val maxPrimeDigitIndex = maxPrimeIndex\
    \ % 10\n        val maxPrimeDigitSum = maxPrimeDigit + maxPrimeDigitIndex\n  \
    \      val sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n        sumOfDigits\
    \ + maxPrimeDigitSum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$5(tmpef2gxhfv.scala:21)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpef2gxhfv.scala:21)\n\
    \tat Problem$.main(tmpef2gxhfv.scala:25)\n\tat Problem.main(tmpef2gxhfv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804852
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 107 == 0).filter(_ % 113 == 0).filter(_ % 121 == 0).filter(_\
    \ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_ % 143 == 0).filter(_\
    \ % 149 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_ % 163 == 0).filter(_\
    \ % 169 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_\
    \ % 191 == 0).filter(_ % 197 == 0).filter(_ % 203 == 0).filter(_ % 209 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 223 == 0).filter(_ % 229 == 0).filter(_\
    \ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 283 == 0).filter(_ % 289 == 0).filter(_\
    \ % 291 == 0).filter(_ % 297 == 0).filter(_ % 303 == 0).filter(_ % 309 == 0).filter(_\
    \ % 311 == 0).filter(_ % 317 == 0).filter(_ % 323 == 0).filter(_ % 329 == 0).filter(_\
    \ % 331 == 0).filter(_ % 337 == 0).filter(_ % 343 == 0).filter(_ % 349 == 0).filter(_\
    \ % 351 == 0).filter(_ % 357 == 0).filter(_ % 363 == 0).filter(_ % 369 == 0).filter(_\
    \ % 371 == 0).filter(_ % 377 == 0).filter(_ % 383 == 0).filter(_ % 389 == 0).filter(_\
    \ % 391 == 0).filter(_ % 397 == 0).filter(_ % 403 == 0).filter(_ % 409\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpq4lp8ghp.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpq4lp8ghp.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m107\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m121\e[0m == \e[31m0\e[0m).filter(_ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m149\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m169\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m197\e[0m == \e[31m0\e[0m).filter(_ % \e[31m203\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804851
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toSet\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        sumOfDigits + maxPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjwyob8sq.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toSet\n\e[31m\e[31m   |\e\
    [0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                             Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjwyob8sq.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804848
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 != 0).filter(_\
    \ % 3 != 0).filter(_ % 5 != 0).filter(_ % 7 != 0).filter(_ % 11 != 0).filter(_\
    \ % 13 != 0).filter(_ % 17 != 0).filter(_ % 19 != 0).filter(_ % 23 != 0).filter(_\
    \ % 29 != 0).filter(_ % 31 != 0).filter(_ % 37 != 0).filter(_ % 41 != 0).filter(_\
    \ % 43 != 0).filter(_ % 47 != 0).filter(_ % 51 != 0).filter(_ % 55 != 0).filter(_\
    \ % 59 != 0).filter(_ % 61 != 0).filter(_ % 67 != 0).filter(_ % 71 != 0).filter(_\
    \ % 73 != 0).filter(_ % 79 != 0).filter(_ % 83 != 0).filter(_ % 89 != 0).filter(_\
    \ % 97 != 0).filter(_ % 101 != 0).filter(_ % 103 != 0).filter(_ % 107 != 0).filter(_\
    \ % 109 != 0).filter(_ % 113 != 0).filter(_ % 121 != 0).filter(_ % 127 != 0).filter(_\
    \ % 131 != 0).filter(_ % 137 != 0).filter(_ % 139 !=0).filter(_ % 149 != 0).filter(_\
    \ % 151 != 0).filter(_ % 157 !=0).filter(_ % 163 != 0).filter(_ % 167 !=0).filter(_\
    \ % 173 != 0).filter(_ % 177 !=0).filter(_ % 183 != 0).filter(_ % 187 != 0).filter(_\
    \ % 193 != 0).filter(_ % 197 !=0).filter(_ % 203 != 0).filter(_ % 207 !=0).filter(_\
    \ % 211 != 0).filter(_ % 217 !=0).filter(_ % 223 != 0).filter(_ % 227 !=0).filter(_\
    \ % 233 != 0).filter(_ % 239 !=0).filter(_ % 241 !=0).filter(_ % 247 !=0).filter(_\
    \ % 253 != 0).filter(_ % 257 !=0).filter(_ % 263 != 0).filter(_ % 267 !=0).filter(_\
    \ % 273 != 0).filter(_ % 277 !=0).filter(_ % 283 != 0).filter(_ % 287 !=0).filter(_\
    \ % 293 != 0).filter(_ % 297 !=0).filter(_ % 303 != 0).filter(_ % 307 !=0).filter(_\
    \ % 313 !=0).filter(_ % 317 !=0).filter(_ % 323 != 0).filter(_ % 327 !=0).filter(_\
    \ % 333 != 0).filter\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_h85d___.scala:15:5\
    \ ---------------------\e[0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804852
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesSet = primes.toSet\n\
    \        val primesSetSize = primesSet.size\n        val maxPrime = primesSet.max\n\
    \        val maxPrimeSet = maxPrime.toSet\n        val maxPrimeSetSize = maxPrimeSet.size\n\
    \        val maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize =\
    \ maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n        val\
    \ maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n\
    \        val maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize =\
    \ maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n        val\
    \ maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n\
    \        val maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize =\
    \ maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n        val\
    \ maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n\
    \        val maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize =\
    \ maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n        val\
    \ maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n\
    \        val maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize =\
    \ maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n        val\
    \ maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n\
    \        val maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize =\
    \ maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n        val\
    \ maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize = maxPrimeSet.size\n\
    \        val maxPrimeSetSize = maxPrimeSet.size\n        val maxPrimeSetSize =\
    \ maxPrimeSet.size\n        val maxPrimeSetSize = max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzc0oogfr.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSetSize\e[0m = maxPrimeSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mmaxPrimeSetSize is already defined as \e[33mvalue\e[0m \e[35mmaxPrimeSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpzc0oogfr.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSetSize\e[0m = maxPrimeSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mmaxPrimeSetSize is already defined as \e[33mvalue\e[0m \e[35mmaxPrimeSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpzc0oogfr.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSetSize\e[0m = maxPrimeSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mmaxPrimeSetSize is already defined as \e[33mvalue\e[0m \e[35mmaxPrimeSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpzc0oogfr.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSetSize\e[0m = maxPrimeSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mmaxPrimeSetSize is already defined as \e[33mvalue\e[0m \e[35mmaxPrimeSetSize\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpzc0oogfr.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSetSize\e[0m = maxPrimeSet.size\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659804852
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largestPrime = primes.max\n        val sumOfDigits = primes.map(x\
    \ => x.toString.toInt).sum\n        largestPrime + sumOfDigits\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong,\
    \ 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong,\
    \ 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong,\
    \ 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong,\
    \ 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong,\
    \ 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong)))\
    \ == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong,\
    \ 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong,\
    \ 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong)))\
    \ == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ft_q9mu.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804850
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val largestPrime = mutable.Set[Long]()\n        val sumOfDigits = mutable.Set[Long]()\n\
    \        lst.foreach(x => primes += x)\n        primes.foreach(x => largestPrime\
    \ += x)\n        largestPrime.foreach(x => sumOfDigits += x)\n        largestPrime.foreach(x\
    \ => sumOfDigits += x % 10)\n        largestPrime.foreach(x => sumOfDigits +=\
    \ x / 10)\n        largestPrime.foreach(x => sumOfDigits += x / 10)\n        largestPrime.foreach(x\
    \ => sumOfDigits += x / 10)\n        largestPrime.foreach(x => sumOfDigits +=\
    \ x / 10)\n        largestPrime.foreach(x => sumOfDigits += x / 10)\n        largestPrime.foreach(x\
    \ => sumOfDigits += x / 10)\n        largestPrime.foreach(x => sumOfDigits +=\
    \ x / 10)\n        largestPrime.foreach(x => sumOfDigits += x / 10)\n        largestPrime.foreach(x\
    \ => sumOfDigits += x / 10)\n        largestPrime.foreach(x => sumOfDigits +=\
    \ x / 10)\n        largestPrime.foreach(x => sumOfDigits += x / 10)\n        largestPrime.foreach(x\
    \ => sumOfDigits += x / 10)\n        largestPrime.foreach(x => sumOfDigits +=\
    \ x / 10)\n        largestPrime.foreach(x => sumOfDigits += x / 10)\n        largestPrime.foreach(x\
    \ => sumOfDigits += x / 10)\n        largestPrime.foreach(x => sumOfDigits +=\
    \ x / 10)\n        largestPrime.foreach(x => sumOfDigits += x / 10)\n        largestPrime.foreach(x\
    \ => sumOfDigits += x / 10)\n        largestPrime.foreach(x => sumOfDigits +=\
    \ x / 10)\n        largestPrime.foreach(x => sumOfDigits += x / 10)\n        largestPrime.foreach(x\
    \ => sumOfDigits += x / 10)\n        largestPrime.foreach(x => sumOfDigits +=\
    \ x / 10)\n        largestPrime.foreach(x => sumOfDigits += x / 10)\n        largestPrime.foreach(x\
    \ => sumOfDigits += x / 10)\n        largestPrime.\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp46esj982.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp46esj982.scala:14:21 ------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp46esj982.scala:15:27 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36mlargestPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp46esj982.scala:16:26 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659804847
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 161 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 183 == 0).filter(_\
    \ % 187 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 225 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 253 == 0).filter(_\
    \ % 257 == 0).filter(_ % 261 == 0).filter(_ % 263 == 0).filter(_ % 267 == 0).filter(_\
    \ % 269 == 0).filter(_ % 273 == 0).filter(_ % 277 == 0).filter(_ % 279 == 0).filter(_\
    \ % 283 == 0).filter(_ % 287 == 0).filter(_ % 291 == 0).filter(_ % 293 == 0).filter(_\
    \ % 297 == 0).filter(_ % 301 == 0).filter(_ % 303 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 319\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpsteemu80.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpsteemu80.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m161\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804854
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val primesSet = primes.toSet\n        val maxPrime = primes.max\n        val\
    \ sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n        sumOfDigits\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$6(tmp43orgpx5.scala:17)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmp43orgpx5.scala:17)\n\
    \tat Problem$.main(tmp43orgpx5.scala:21)\n\tat Problem.main(tmp43orgpx5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804818
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt)\n        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x\
    \ => x.toString.toInt).sum\n        val result = sumOfDigits + maxPrime.toString.toInt\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppj9wxkju.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt)\n\e[31m\e[31m   |\e[0m\
    \                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804849
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val maxDigit =\
    \ lst.filter(x => isPrime(x)).map(x => x.toInt).max\n        val maxSum = sumOfDigits\
    \ + maxDigit\n        val maxSumOfDigits = sumOfDigits + maxDigit\n        val\
    \ maxSumOfDigitsAndMaxDigit = sumOfDigits + maxDigit\n        val maxSumOfDigitsAndMaxDigitAndMaxPrime\
    \ = sumOfDigits + maxDigit + maxPrime\n        val maxSumOfDigitsAndMaxDigitAndMaxPrimeAndMaxPrimes\
    \ = sumOfDigits + maxDigit + maxPrime + maxPrimes\n        val maxSumOfDigitsAndMaxDigitAndMaxPrimeAndMaxPrimesAndMaxPrime\
    \ = sumOfDigits + maxDigit + maxPrime + maxPrimes + maxPrimes\n        val maxSumOfDigitsAndMaxDigitAndMaxPrimeAndMaxPrimesAndMaxPrimeAndMaxPrime\
    \ = sumOfDigits + maxDigit + maxPrime + maxPrimes + maxPrimes + maxPrime\n   \
    \     val maxSumOfDigitsAndMaxDigitAndMaxPrimeAndMaxPrimesAndMaxPrimeAndMaxPrimeAndMaxPrime\
    \ = sumOfDigits + maxDigit + maxPrime + maxPrimes + maxPrimes + maxPrimes + maxPrime\n\
    \        val maxSumOfDigitsAndMaxDigitAndMaxPrimeAndMaxPrimesAndMaxPrimeAndMaxPrimeAndMaxPrimeAndMaxPrime\
    \ = sumOfDigits + maxDigit + maxPrime + maxPrimes + maxPrimes + maxPrimes + maxPrimes\
    \ + maxPrime\n        val maxSumOfDigitsAndMaxDigitAndMaxPrimeAndMaxPrimesAndMaxPrimeAndMaxPrimeAndMaxPrimeAndMaxPrimeAndMaxPrime\
    \ = sumOfDigits + maxDigit + maxPrime + maxPrimes + maxPrimes + maxPrimes + maxPrimes\
    \ + maxPrimes + maxPrime\n        val maxSumOfDigitsAndMaxDigitAndMaxPrimeAndMaxPrimesAnd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp277u_giy.scala:29:4 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp277u_giy.scala:14:37\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = lst.filter(\e[36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\
    \e[31m\e[31m   |\e[0m                                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                     Not found: isPrime\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp277u_giy.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp277u_giy.scala:17:39 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mmaxDigit\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).max\n\e[31m\e[31m   |\e\
    [0m                                       ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                                 Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp277u_giy.scala:22:99 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mmaxSumOfDigitsAndMaxDigitAndMaxPrimeAndMaxPrimes\e\
    [0m = sumOfDigits + maxDigit + maxPrime + maxPrimes\n\e[31m\e[31m   |\e[0m   \
    \                                                                            \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                         \
    \                           Not found: maxPrimes\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation a"
  stdout: ''
  timestamp: 1659804853
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val primesCount = primes.size\n        val largestPrime = primes.max\n    \
    \    val largestPrimeDigits = largestPrime / 10\n        val largestPrimeSum =\
    \ largestPrimeDigits.sum\n        largestPrimeSum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd0cocp0w.scala:18:49 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeSum\e[0m = largestPrimeDigits.sum\n\
    \e[31m\e[31m   |\e[0m                              ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                              value sum is not a member of Long\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659804851
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val primesSum = primes.sum\n        val primesDigits\
    \ = primes.map(x => x.toString.toInt)\n        val primesMax = primes.max\n  \
    \      val primesMaxDigits = primesMax.map(x => x.toString.toInt)\n        val\
    \ primesMaxSum = primesMax.sum\n        val primesMaxSumDigits = primesMaxSum.map(x\
    \ => x.toString.toInt)\n        val primesMaxSumDigit = primesMaxSumDigits.max\n\
    \        val primesMaxSumDigitMax = primesMaxSumDigits.max\n        val primesMaxSumDigitMaxDigit\
    \ = primesMaxSumDigitMax.max\n        val primesMaxSumDigitMaxDigitMax = primesMaxSumDigitMax.max\n\
    \        val primesMaxSumDigitMaxDigitMax = primesMaxSumDigitMax.max\n       \
    \ val primesMaxSumDigitMaxDigitMaxDigit = primesMaxSumDigitMax.max\n        val\
    \ primesMaxSumDigitMaxDigitMaxDigitMax = primesMaxSumDigitMax.max\n        val\
    \ primesMaxSumDigitMaxDigitMaxDigitMaxDigit = primesMaxSumDigitMax.max\n     \
    \   val primesMaxSumDigitMaxDigitMaxDigitMaxDigitMax = primesMaxSumDigitMax.max\n\
    \        val primesMaxSumDigitMaxDigitMaxDigitMaxDigitMax = primesMaxSumDigitMax.max\n\
    \        val primesMaxSumDigitMaxDigitMaxDigitMaxDigitMax = primesMaxSumDigitMax.max\n\
    \        val primesMaxSumDigitMaxDigitMaxDigitMaxDigitMaxDigit = primesMaxSumDigitMax.max\n\
    \        val primesMaxSumDigitMaxDigitMaxDigitMaxDigitMaxDigitMax = primesMaxSumDigitMax.max\n\
    \        val primesMaxSumDigitMaxDigitMaxDigitMaxDigitMaxDigitMax = primesMaxSumDigitMax.max\n\
    \        val primesMaxSumDigitMaxDigitMaxDigitMaxDigitMaxDigitMax = primesMaxSumDigitMax.max\n\
    \        val primesMaxSumDigitMaxDigitMaxDigitMaxDigitMaxDigitMaxDigit = primesMaxSumDigitMax.max\n\
    \        val primesMaxSumDigitMaxDigitMaxDigitMaxDigitMaxDigitMaxDigitMax = primesMaxSumDigitMax.max\n\
    \        val primesMaxSum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpi8jfjzpk.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi8jfjzpk.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mprimesMaxSumDigitMaxDigitMax\e[0m = primesMaxSumDigitMax.max\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprimesMaxSumDigitMaxDigitMax is already defined as \e[33mvalue\e\
    [0m \e[35mprimesMaxSumDigitMaxDigitMax\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi8jfjzpk.scala:30:12 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mprimesMaxSumDigitMaxDigitMaxDigitMaxDigitMax\e\
    [0m = primesMaxSumDigitMax.max\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprimesMaxSumDigitMaxDigitMaxDigitMaxDigitMax is already defined\
    \ as \e[33mvalue\e[0m \e[35mprimesMaxSumDigitMaxDigitMaxDigitMaxDigitMax\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpi8jfjzpk.scala:31:12 ---------------------------\e[0m\e[0m\n\e[31m31\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimesMaxSumDigitMaxDigitMaxDigitMaxDigitMax\e\
    [0m = primesMaxSumDigitMax.max\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprimesMaxSumDigitMaxDigitMaxDigitMaxDigitMax is already defined\
    \ as \e[33mvalue\e[0m \e[35mprimesMaxSumDigitMaxDigitMaxDigitMaxDigitMax\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpi8jfjzpk.scala:34:12 ---------------------------\e[0m\e[0m\n\e[31m34\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimesMaxSumDigitMaxDi"
  stdout: ''
  timestamp: 1659804853
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 183 == 0).filter(_\
    \ % 187 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_\
    \ % 259 == 0).filter(_ % 263 == 0).filter(_ % 267 == 0).filter(_ % 269 == 0).filter(_\
    \ % 273 == 0).filter(_ % 277 == 0).filter(_ % 279 == 0).filter(_ % 283 == 0).filter(_\
    \ % 287 == 0).filter(_ % 291 == 0).filter(_ % 297 == 0).filter(_ % 301 == 0).filter(_\
    \ % 303 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3llxb7ba.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp3llxb7ba.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804855
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 161 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 183 == 0).filter(_\
    \ % 187 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 219 == 0).filter(_\
    \ % 223 == 0).filter(_ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_\
    \ % 239 == 0).filter(_ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 253 == 0).filter(_ % 257 == 0).filter(_ % 259 == 0).filter(_\
    \ % 263 == 0).filter(_ % 267 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_\
    \ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_ % 33\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpn8dl1m9g.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpn8dl1m9g.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m161\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804856
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 183 == 0).filter(_\
    \ % 187 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 219 == 0).filter(_\
    \ % 223 == 0).filter(_ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_\
    \ % 239 == 0).filter(_ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 253 == 0).filter(_ % 257 == 0).filter(_ % 259 == 0).filter(_\
    \ % 263 == 0).filter(_ % 267 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_\
    \ % 277 == 0).filter(_ % 279 == 0).filter(_ % 283 == 0).filter(_ % 287 == 0).filter(_\
    \ % 291 == 0).filter(_ % 293 == 0).filter(_ % 297 == 0).filter(_ % 301 == 0).filter(_\
    \ % 303 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxz6ex_pd.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpxz6ex_pd.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804856
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toSet\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val result = sumOfDigits\
    \ + maxPrime\n        result\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvc4oeg0y.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toSet\n\e[31m\e[31m   |\e\
    [0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                             Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpvc4oeg0y.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804853
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt)\n        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x\
    \ => x.toString.toInt).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_mbn5oy.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt)\n\e[31m\e[31m   |\e[0m\
    \                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804814
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x =>\
    \ x.toString.toInt).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpic3ftcc3.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804812
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 161 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 179 == 0).filter(_ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 257 == 0).filter(_ % 261 == 0).filter(_ % 267 == 0).filter(_ % 271 == 0).filter(_\
    \ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 321 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_\
    \ % 337 == 0).filter(_ % 341 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_\
    \ % 357 == 0).filter(_ % 361 == 0).filter(_ % 367 == 0).filter(_ % 37\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp456nd45m.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp456nd45m.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m161\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804857
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).toList\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x =>\
    \ x.toString.toInt).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphs5f2goq.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).toList\n\e[31m\e[31m   |\e[0m                      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                                \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804854
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesSet = primes.toSet\n\
    \        val maxPrime = primes.max\n        val maxPrimeSet = maxPrime.toSet\n\
    \        val maxPrimeSum = maxPrimeSet.foldLeft(0)(_ + _)\n        val maxPrimeSumSet\
    \ = maxPrimeSum.toSet\n        val maxPrimeSumSetSum = maxPrimeSumSet.foldLeft(0)(_\
    \ + _)\n        val maxPrimeSumSetSumSet = maxPrimeSumSetSum.toSet\n        val\
    \ maxPrimeSumSetSumSetSum = maxPrimeSumSetSumSet.foldLeft(0)(_ + _)\n        val\
    \ maxPrimeSumSetSumSetSumSet = maxPrimeSumSetSumSetSum.toSet\n        val maxPrimeSumSetSumSetSumSetSum\
    \ = maxPrimeSumSetSumSetSumSet.foldLeft(0)(_ + _)\n        val maxPrimeSumSetSumSetSumSetSumSet\
    \ = maxPrimeSumSetSumSetSumSetSum.toSet\n        val maxPrimeSumSetSumSetSumSetSumSetSum\
    \ = maxPrimeSumSetSumSetSumSetSumSet.toSet\n        val maxPrimeSumSetSumSetSumSetSumSetSumSet\
    \ = maxPrimeSumSetSumSetSumSetSumSetSumSet.toSet\n        val maxPrimeSumSetSumSetSumSetSumSetSumSetSum\
    \ = maxPrimeSumSetSumSetSumSetSumSetSumSetSum.toSet\n        val maxPrimeSumSetSumSetSumSetSumSetSumSetSumSet\
    \ = maxPrimeSumSetSumSetSumSetSumSetSumSetSum.toSet\n        val maxPrimeSumSetSumSetSumSetSumSetSumSetSumSet\
    \ = maxPrimeSumSetSumSetSumSetSumSetSumSetSumSet.toSet\n        val maxPrimeSumSetSumSetSumSetSumSetSumSetSumSetSum\
    \ = maxPrimeSumSetSumSetSumSetSumSetSumSetSumSetSum.toSet\n        val maxPrimeSumSetSumSetSumSetSumSetSumSetSumSetSum\
    \ = maxPrimeSumSetSumSetSumSetSumSetSumSetSumSetSum.toSet\n        val maxPrimeSumSetSumSetSumSetSumSetSumSetSumSetSum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpg1tg0c1_.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpg1tg0c1_.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxPrimeSumSetSumSetSumSetSumSetSumSetSumSet\e[0m = maxPrimeSumSetSumSetSumSetSumSetSumSetSumSet.toSet\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumSetSumSetSumSetSumSetSumSetSumSet is already defined\
    \ as \e[33mvalue\e[0m \e[35mmaxPrimeSumSetSumSetSumSetSumSetSumSetSumSet\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpg1tg0c1_.scala:32:12 ---------------------------\e[0m\e[0m\n\e[31m32\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumSetSumSetSumSetSumSetSumSetSumSetSum\e\
    [0m = maxPrimeSumSetSumSetSumSetSumSetSumSetSumSetSum.toSet\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumSetSumSetSumSetSumSetSumSetSumSetSum is already\
    \ defined as \e[33mvalue\e[0m \e[35mmaxPrimeSumSetSumSetSumSetSumSetSumSetSumSetSum\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpg1tg0c1_.scala:17:35 ------------------------\e[0m\e[0m\n\
    \e[31m17 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSet\e[0m = maxPrime.toSet\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m      value toSet is not a member of Long - did you mean maxPrime.toInt?\n\e\
    [31m\e[31m-- [E045] Cyclic Error: /tmp/tmpg1tg0c1_.scala:27:53 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumSetSumSetSumSetSumSetSumSet\e\
    [0m = maxPrimeSumSetSumSetSumSetSumSetSumSet.toSet\n\e[31m\e[31m   "
  stdout: ''
  timestamp: 1659804858
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_\
    \ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_\
    \ % 201 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 253 == 0).filter(_\
    \ % 257 == 0).filter(_ % 259 == 0).filter(_ % 263 == 0).filter(_ % 267 == 0).filter(_\
    \ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_ % 279 == 0).filter(_\
    \ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 319 == 0).filter(_\
    \ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpl2pz4z49.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpl2pz4z49.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804859
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesSet = primes.toSet\n\
    \        val primesSetSize = primesSet.size\n        val maxPrime = primesSet.max\n\
    \        val maxPrimeIndex = primesSet.indexWhere(_ == maxPrime)\n        val\
    \ maxPrimeValue = primes(maxPrimeIndex)\n        val sumOfDigits = lst.filter(_\
    \ % maxPrimeValue == 0).sum\n        sumOfDigits\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy8ol9t3r.scala:18:38 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeIndex\e[0m = primesSet.indexWhere(_\
    \ == maxPrime)\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                           value indexWhere is not a member\
    \ of Set[Long]\n1 error found\n"
  stdout: ''
  timestamp: 1659804858
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_\
    \ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_\
    \ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 211 == 0).filter(_ % 223 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_\
    \ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_\
    \ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_\
    \ % 331 == 0).filter(_ % 337 == 0).filter(_ % 339 == 0).filter(_ % 343 == 0).filter(_\
    \ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_ % 359 == 0).filter(_\
    \ % 363 == 0).filter(_ % 367 == 0).filter(_ % 371 == 0).filter(_ % 377 == 0).filter(_\
    \ % 381 == 0).filter(_ % 383 == 0).filter(_ % 389 == 0).filter(_ % 39\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0dqzpvlw.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp0dqzpvlw.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804861
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 183 == 0).filter(_\
    \ % 187 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 219 == 0).filter(_\
    \ % 223 == 0).filter(_ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_\
    \ % 239 == 0).filter(_ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 253 == 0).filter(_ % 257 == 0).filter(_ % 259 == 0).filter(_\
    \ % 263 == 0).filter(_ % 267 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_\
    \ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 297 == 0).filter(_ % 301 == 0).filter(_ % 303 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 319\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpawcsq4xi.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpawcsq4xi.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804861
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 177 == 0).filter(_ % 183 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_\
    \ % 263 == 0).filter(_ % 267 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 321 == 0).filter(_\
    \ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_\
    \ % 341 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_\
    \ % 363 == 0).filter(_ % 367 == 0).filter(_ % 371 == 0).filter(_ % 377\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp6l4dxjvd.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp6l4dxjvd.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m183\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804864
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        sumOfDigits + maxPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp43pfeq22.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp43pfeq22.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804813
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val maxPrime = primes.max\n        val sumOfDigits = lst.filter(_ % maxPrime\
    \ == 0).sum\n        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$6(tmp8h388rc6.scala:16)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmp8h388rc6.scala:16)\n\
    \tat Problem$.main(tmp8h388rc6.scala:20)\n\tat Problem.main(tmp8h388rc6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804830
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val sum = 0L\n        lst.foreach(x => {\n            val isPrime = primes.contains(x)\n\
    \            if (isPrime) {\n                sum += x\n            } else {\n\
    \                primes += x\n            }\n        })\n        sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsp6bp2c5.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpsp6bp2c5.scala:19:20 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                sum += x\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659804863
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val largestPrime = primes.max\n        val sumOfDigits = largestPrime.map(_.toString.toInt).sum\n\
    \        return sumOfDigits\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjlgj_gjo.scala:16:39 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = largestPrime.map(_.toString.toInt).sum\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                          value map is not a member of Long\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804862
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val maxPrime = primes.max\n\
    \        val sumOfDigits = primes.map(x => math.log10(x)).sum\n        val maxDigit\
    \ = math.pow(10, maxPrime)\n        sumOfDigits * maxDigit\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp09tvbl4v.scala:18:8\
    \ ---------------------\e[0m\e[0m\n\e[31m18 |\e[0m        sumOfDigits * maxDigit\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \    Found:    Double\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659804863
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        sumOfDigits + maxPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp43pfeq22.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp43pfeq22.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804813
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 183 == 0).filter(_\
    \ % 187 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_\
    \ % 259 == 0).filter(_ % 263 == 0).filter(_ % 267 == 0).filter(_ % 269 == 0).filter(_\
    \ % 273 == 0).filter(_ % 277 == 0).filter(_ % 279 == 0).filter(_ % 283 == 0).filter(_\
    \ % 287 == 0).filter(_ % 291 == 0).filter(_ % 297 == 0).filter(_ % 301 == 0).filter(_\
    \ % 303 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3llxb7ba.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp3llxb7ba.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804855
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => x % 2 != 0 &&\
    \ x % 3 != 0 && x % 5 != 0 && x % 7 != 0).map(x => x).distinct\n        val maxPrime\
    \ = primes.max\n        val sumOfDigits = lst.map(x => x % maxPrime).sum\n   \
    \     sumOfDigits\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf1lroiq5.scala:20)\n\tat Problem.main(tmpf1lroiq5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804866
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesCount = mutable.Map[Long, Int]()\n        val primesSum = mutable.Map[Long,\
    \ Long]()\n        val primesSumCount = mutable.Map[Long, Long]()\n        val\
    \ primesSumCount2 = mutable.Map[Long, Long]()\n        val primesSumCount3 = mutable.Map[Long,\
    \ Long]()\n        val primesSumCount4 = mutable.Map[Long, Long]()\n        val\
    \ primesSumCount5 = mutable.Map[Long, Long]()\n        val primesSumCount6 = mutable.Map[Long,\
    \ Long]()\n        val primesSumCount7 = mutable.Map[Long, Long]()\n        val\
    \ primesSumCount8 = mutable.Map[Long, Long]()\n        val primesSumCount9 = mutable.Map[Long,\
    \ Long]()\n        val primesSumCount10 = mutable.Map[Long, Long]()\n        val\
    \ primesSumCount11 = mutable.Map[Long, Long]()\n        val primesSumCount12 =\
    \ mutable.Map[Long, Long]()\n        val primesSumCount13 = mutable.Map[Long,\
    \ Long]()\n        val primesSumCount14 = mutable.Map[Long, Long]()\n        val\
    \ primesSumCount15 = mutable.Map[Long, Long]()\n        val primesSumCount16 =\
    \ mutable.Map[Long, Long]()\n        val primesSumCount17 = mutable.Map[Long,\
    \ Long]()\n        val primesSumCount18 = mutable.Map[Long, Long]()\n        val\
    \ primesSumCount19 = mutable.Map[Long, Long]()\n        val primesSumCount20 =\
    \ mutable.Map[Long, Long]()\n        val primesSumCount21 = mutable.Map[Long,\
    \ Long]()\n        val primesSumCount22 = mutable.Map[Long, Long]()\n        val\
    \ primesSumCount23 = mutable.Map[Long, Long]()\n        val primesSumCount24 =\
    \ mutable.Map[Long, Long]()\n        val primesSumCount25 = mutable.Map[Long,\
    \ Long]()\n        val primesSumCount26 = mutable.Map[Long, Long]()\n        val\
    \ primesSumCount27 = mutable.Map[Long, Long]()\n        val primesSumCount28 =\
    \ mutable.Map[Long, Long]()\n        val primesSumCount29 = \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp5a3tpxgl.scala:45:30 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mval\e[0m \e[36mprimesSumCount29\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                              ^\e[0m\n\e[31m   |\e[0m\
    \                              expression expected but \e[31m'}'\e[0m found\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5a3tpxgl.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5a3tpxgl.scala:15:26\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesCount\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mInt\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                          ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp5a3tpxgl.scala:16:24 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSum\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     \
    \   ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5a3tpxgl.scala:17:29\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumCount\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e\
    [31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                             Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp5a3tpxgl.scala:18:30 ------------"
  stdout: ''
  timestamp: 1659804864
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_\
    \ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_\
    \ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 223 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_\
    \ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_\
    \ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 323 == 0).filter(_ % 329 == 0).filter(_ % 331 == 0).filter(_\
    \ % 337 == 0).filter(_ % 341 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_\
    \ % 357 == 0).filter(_ % 363 == 0).filter(_ % 369 == 0).filter(_ % 371 == 0).filter(_\
    \ % 377 == 0).filter(_ % 381 == 0).filter(_ % 383 == 0).filter(_ % 389\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpplhd52u7.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpplhd52u7.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804866
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val maxDigit =\
    \ sumOfDigits / maxPrime\n        val maxDigitDigit = maxDigit % 10\n        val\
    \ maxDigitPrime = maxDigit / 10\n        val maxDigitPrimeDigit = maxDigitPrime\
    \ % 10\n        val maxDigitPrimePrime = maxDigitPrime / 10\n        val maxDigitPrimePrimeDigit\
    \ = maxDigitPrimePrime % 10\n        val maxDigitPrimePrimePrime = maxDigitPrimePrime\
    \ / 10\n        val maxDigitPrimePrimePrimeDigit = maxDigitPrimePrimePrime % 10\n\
    \        val maxDigitPrimePrimePrimePrime = maxDigitPrimePrimePrime / 10\n   \
    \     val maxDigitPrimePrimePrimePrimeDigit = maxDigitPrimePrimePrimePrime % 10\n\
    \        val maxDigitPrimePrimePrimePrimePrime = maxDigitPrimePrimePrimePrime\
    \ / 10\n        val maxDigitPrimePrimePrimePrimePrimeDigit = maxDigitPrimePrimePrimePrimePrime\
    \ % 10\n        val maxDigitPrimePrimePrimePrimePrimePrime = maxDigitPrimePrimePrimePrimePrime\
    \ / 10\n        val maxDigitPrimePrimePrimePrimePrimePrimeDigit = maxDigitPrimePrimePrimePrimePrime\
    \ % 10\n        val maxDigitPrimePrimePrimePrimePrimePrime = maxDigitPrimePrimePrimePrimePrime\
    \ / 10\n        val maxDigitPrimePrimePrimePrimePrimePrimeDigit = maxDigitPrimePrimePrimePrimePrimePrime\
    \ % 10\n        val maxDigitPrimePrimePrimePrimePrimePrimePrime = maxDigitPrimePrimePrimePrimePrimePrime\
    \ / 10\n        val maxDigitPrimePrimePrimePrimePrimePrimePrimeDigit = maxDigitPrimePrimePrimePrimePrimePrimePrime\
    \ % 10\n        val maxDigitPri\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaodjfjq1.scala:36:4 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpaodjfjq1.scala:31:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxDigitPrimePrimePrimePrimePrimePrime\e[0m = maxDigitPrimePrimePrimePrimePrime\
    \ / \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDigitPrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35mmaxDigitPrimePrimePrimePrimePrimePrime\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpaodjfjq1.scala:32:12 ---------------------------\e[0m\e[0m\n\e[31m32\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxDigitPrimePrimePrimePrimePrimePrimeDigit\e\
    [0m = maxDigitPrimePrimePrimePrimePrimePrime % \e[31m10\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDigitPrimePrimePrimePrimePrimePrimeDigit is already defined\
    \ as \e[33mvalue\e[0m \e[35mmaxDigitPrimePrimePrimePrimePrimePrimeDigit\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpaodjfjq1.scala:14:37 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e[36mx\e[0m => isPrime(x)).map(\e\
    [36mx\e[0m => x.toInt).toList\n\e[31m\e[31m   |\e[0m                         \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                                   \
    \  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaodjfjq1.scala:16:42\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36msumOfDigits\e[0m = lst.filter(\e[36mx\e[0m => "
  stdout: ''
  timestamp: 1659804865
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => x % 2 != 0 &&\
    \ x % 3 != 0 && x % 5 != 0 && x % 7 != 0)\n        val maxPrime = primes.max\n\
    \        val sumOfDigits = primes.map(x => math.pow(10, x)).sum\n        sumOfDigits\
    \ + maxPrime\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptixboxi9.scala:17:8\
    \ ---------------------\e[0m\e[0m\n\e[31m17 |\e[0m        sumOfDigits + maxPrime\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \    Found:    Double\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659804864
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 107 == 0).filter(_ % 113 == 0).filter(_ % 119 == 0).filter(_\
    \ % 121 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 143 == 0).filter(_ % 149 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_\
    \ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_\
    \ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 223 == 0).filter(_ % 229 == 0).filter(_\
    \ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_\
    \ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 323 == 0).filter(_ % 329 == 0).filter(_ % 331 == 0).filter(_\
    \ % 337 == 0).filter(_ % 343 == 0).filter(_ % 349 == 0).filter(_ % 351 == 0).filter(_\
    \ % 357 == 0).filter(_ % 363 == 0).filter(_ % 369 == 0).filter(_ % 371 == 0).filter(_\
    \ % 377 == 0).filter(_ % 381 == 0).filter(_ % 383 == 0).filter(_ % 389\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmhbpy1zq.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpmhbpy1zq.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m107\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m119\e[0m == \e[31m0\e[0m).filter(_ % \e[31m121\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m149\e[0m == \e[31m0\e[0m).filter(_ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804866
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 183 == 0).filter(_\
    \ % 187 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 253 == 0).filter(_ % 257 == 0).filter(_ % 259 == 0).filter(_ % 263 == 0).filter(_\
    \ % 267 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 279 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 297 == 0).filter(_ % 301 == 0).filter(_ % 303 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 319\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfhuzy1s8.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpfhuzy1s8.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804867
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesSet = primes.toSet\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = lst.filter(_ % maxPrime\
    \ == 0).sum\n        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$5(tmp3mx7az2_.scala:17)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmp3mx7az2_.scala:17)\n\
    \tat Problem$.main(tmp3mx7az2_.scala:21)\n\tat Problem.main(tmp3mx7az2_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804868
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = lst.filter(_ % maxPrime\
    \ == 0).sum\n        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$5(tmpi3fto4i8.scala:17)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpi3fto4i8.scala:17)\n\
    \tat Problem$.main(tmpi3fto4i8.scala:21)\n\tat Problem.main(tmpi3fto4i8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804830
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.map(x => x % maxPrime).sum\n        return sumOfDigits\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong,\
    \ 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong,\
    \ 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong,\
    \ 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong,\
    \ 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong,\
    \ 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong)))\
    \ == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong,\
    \ 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong,\
    \ 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong)))\
    \ == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9njbvrlx.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804827
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 179 == 0).filter(_ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_\
    \ % 209 == 0).filter(_ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_\
    \ % 223 == 0).filter(_ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_\
    \ % 239 == 0).filter(_ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_\
    \ % 251 == 0).filter(_ % 253 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_\
    \ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_\
    \ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_\
    \ % 313 == 0).filter(_ % 317 == 0).filter(_ % 319 == 0).filter(_ % 323 == 0).filter(_\
    \ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_ % 339 == 0).filter(_\
    \ % 343 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_ % 35\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpa9lh1usp.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpa9lh1usp.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804867
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val largestPrime = primes.max\n        val sumOfDigits = largestPrime.map(_.toString.toInt).sum\n\
    \        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa2k6cig1.scala:17:39 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = largestPrime.map(_.toString.toInt).sum\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                          value map is not a member of Long\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 181 == 0).filter(_\
    \ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_\
    \ % 201 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 231 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 253 == 0).filter(_ % 257 == 0).filter(_ % 259 == 0).filter(_ % 263 == 0).filter(_\
    \ % 267 == 0).filter(_ % 269 == 0).filter(_ % 271 == 0).filter(_ % 277 == 0).filter(_\
    \ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_ % 307 == 0).filter(_\
    \ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_ % 319 == 0).filter(_\
    \ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_ % 337\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3pmipfjk.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp3pmipfjk.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val maxPrime = primes.max\n        val sumOfDigits = primes.map(x => math.log10(x)).sum\n\
    \        val sumOfDigits = primes.map(x => math.log10(x)).sum\n        val sumOfDigits\
    \ = primes.map(x => math.log10(x)).sum\n        val sumOfDigits = primes.map(x\
    \ => math.log10(x)).sum\n        val sumOfDigits = primes.map(x => math.log10(x)).sum\n\
    \        val sumOfDigits = primes.map(x => math.log10(x)).sum\n        val sumOfDigits\
    \ = primes.map(x => math.log10(x)).sum\n        val sumOfDigits = primes.map(x\
    \ => math.log10(x)).sum\n        val sumOfDigits = primes.map(x => math.log10(x)).sum\n\
    \        val sumOfDigits = primes.map(x => math.log10(x)).sum\n        val sumOfDigits\
    \ = primes.map(x => math.log10(x)).sum\n        val sumOfDigits = primes.map(x\
    \ => math.log10(x)).sum\n        val sumOfDigits = primes.map(x => math.log10(x)).sum\n\
    \        val sumOfDigits = primes.map(x => math.log10(x)).sum\n        val sumOfDigits\
    \ = primes.map(x => math.log10(x)).sum\n        val sumOfDigits = primes.map(x\
    \ => math.log10(x)).sum\n        val sumOfDigits = primes.map(x => math.log10(x)).sum\n\
    \        val sumOfDigits = primes.map(x => math.log10(x)).sum\n        val sumOfDigits\
    \ = primes.map(x => math.log10(x)).sum\n        val sumOfDigits = primes.map(x\
    \ => math.log10(x)).sum\n        val sumOfDigits = primes.map(x => math.log10(x)).sum\n\
    \        val sumOfDigits = primes.map(x => math.log10(x)).sum\n        val sumOfDigits\
    \ = primes.map(x => math.log10(x)).sum\n        val sumOfDigits = primes.map(x\
    \ => math.log10(x)).sum\n        val sumOfDigits = primes.map(x => math.log10(x)).sum\n\
    \        val sumOfDigits = primes.map(x => math.log10(x)).sum\n        val sumOfDigits\
    \ = primes.map(x => math.log10(x)).sum\n        val sumOfDigits = primes.\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp12hhguh5.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp12hhguh5.scala:17:12 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = primes.map(\e[36mx\e[0m\
    \ => math.log10(x)).sum\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumOfDigits is already defined as \e[33mvalue\e[0m \e[35msumOfDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp12hhguh5.scala:18:12 ---------------------------\e[0m\e[0m\n\e\
    [31m18 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = primes.map(\e[36mx\e\
    [0m => math.log10(x)).sum\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumOfDigits is already defined as \e[33mvalue\e[0m \e[35msumOfDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp12hhguh5.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = primes.map(\e[36mx\e\
    [0m => math.log10(x)).sum\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumOfDigits is already defined as \e[33mvalue\e[0m \e[35msumOfDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp12hhguh5.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = primes.map(\e[36mx\e\
    [0m => math.log10(x)).sum\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumOfDigits is already defined as \e[33mvalue\e[0m \e[35msumOfDigits\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNo"
  stdout: ''
  timestamp: 1659804868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 159 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_\
    \ % 173 == 0).filter(_ % 177 == 0).filter(_ % 179 == 0).filter(_ % 183 == 0).filter(_\
    \ % 187 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_ % 257 == 0).filter(_\
    \ % 259 == 0).filter(_ % 263 == 0).filter(_ % 267 == 0).filter(_ % 269 == 0).filter(_\
    \ % 273 == 0).filter(_ % 277 == 0).filter(_ % 279 == 0).filter(_ % 283 == 0).filter(_\
    \ % 287 == 0).filter(_ % 291 == 0).filter(_ % 297 == 0).filter(_ % 301 == 0).filter(_\
    \ % 303 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3llxb7ba.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp3llxb7ba.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m159\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804855
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val maxPrime = primes.max\n        val maxPrimeIndex = primes.indexOf(maxPrime)\n\
    \        val sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n        sumOfDigits\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$5(tmpxsvaf2rx.scala:18)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpxsvaf2rx.scala:18)\n\
    \tat Problem$.main(tmpxsvaf2rx.scala:22)\n\tat Problem.main(tmpxsvaf2rx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804870
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val maxPrime = primes.max\n        val sumOfDigits = primes.map(x => math.pow(10,\
    \ x)).sum\n        sumOfDigits + maxPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpy5t44jx3.scala:17:8\
    \ ---------------------\e[0m\e[0m\n\e[31m17 |\e[0m        sumOfDigits + maxPrime\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \    Found:    Double\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659804868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_\
    \ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_ % 179 == 0).filter(_\
    \ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_ % 197 == 0).filter(_\
    \ % 199 == 0).filter(_ % 201 == 0).filter(_ % 207 == 0).filter(_ % 211 == 0).filter(_\
    \ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_ % 227 == 0).filter(_\
    \ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_\
    \ % 251 == 0).filter(_ % 257 == 0).filter(_ % 263 == 0).filter(_ % 269 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 283 == 0).filter(_ % 289 == 0).filter(_\
    \ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 321 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_\
    \ % 331 == 0).filter(_ % 337 == 0).filter(_ % 339 == 0).filter(_ % 343 == 0).filter(_\
    \ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_ % 359 == 0).filter(_\
    \ % 363 == 0).filter(_ % 367 == 0).filter(_ % 371 == 0).filter(_ % 377\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5v2frncu.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp5v2frncu.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_ % \e[31m193\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804869
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 161 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 179 == 0).filter(_ % 183 == 0).filter(_ % 187 == 0).filter(_ % 191 == 0).filter(_\
    \ % 193 == 0).filter(_ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_\
    \ % 207 == 0).filter(_ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_\
    \ % 221 == 0).filter(_ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_\
    \ % 239 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 257 == 0).filter(_ % 261 == 0).filter(_ % 267 == 0).filter(_ % 271 == 0).filter(_\
    \ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_ % 293 == 0).filter(_\
    \ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 321 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_ % 331 == 0).filter(_\
    \ % 337 == 0).filter(_ % 341 == 0).filter(_ % 347 == 0).filter(_ % 351 == 0).filter(_\
    \ % 357 == 0).filter(_ % 361 == 0).filter(_ % 367 == 0).filter(_ % 37\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpefjdhymz.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpefjdhymz.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m161\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m179\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m183\e[0m == \e[31m0\e[0m).filter(_ % \e[31m187\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804870
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt)\n        val maxPrime = primes.max\n        val sumOfDigits = lst.filter(x\
    \ => isPrime(x)).map(x => x.toInt).sum\n        val maxDigit = lst.filter(x =>\
    \ isPrime(x)).map(x => x.toInt).max\n        val maxDigitSum = lst.filter(x =>\
    \ isPrime(x)).map(x => x.toInt).sum\n        val maxDigitSumOfDigits = lst.filter(x\
    \ => isPrime(x)).map(x => x.toInt).sum\n        val maxDigitSumOfDigitsOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val maxDigitSumOfDigitsOfDigitsOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val maxDigitSumOfDigitsOfDigitsOfDigitsOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val maxDigitSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val maxDigitSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val maxDigitSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val maxDigitSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val maxDigitSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val maxDigitSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong,\
    \ 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong,\
    \ 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong,\
    \ 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong,\
    \ 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong,\
    \ 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong)))\
    \ == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong,\
    \ 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong,\
    \ 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong)))\
    \ == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpatxw6ihv.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt)\n\e[31m\e[31m   |\e[0m\
    \                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpatxw6ihv.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpatxw6ihv.scala:17:39 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mmaxDigit\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).max\n\e[31m\e[31m   |\e\
    [0m                                       ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                                 Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpatxw6ihv.scala:18:42 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mmaxDigitSum\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpatxw6ihv.scala:19:50 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mmaxDigitSumOfDigits\e[0m\
    \ = lst.filter(\e[36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e\
    [31m\e[31m  "
  stdout: ''
  timestamp: 1659804869
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesCount = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumCount = mutable.Set[Long]()\n        val primesSumCount2\
    \ = mutable.Set[Long]()\n        val primesSumCount3 = mutable.Set[Long]()\n \
    \       val primesSumCount4 = mutable.Set[Long]()\n        val primesSumCount5\
    \ = mutable.Set[Long]()\n        val primesSumCount6 = mutable.Set[Long]()\n \
    \       val primesSumCount7 = mutable.Set[Long]()\n        val primesSumCount8\
    \ = mutable.Set[Long]()\n        val primesSumCount9 = mutable.Set[Long]()\n \
    \       val primesSumCount10 = mutable.Set[Long]()\n        val primesSumCount11\
    \ = mutable.Set[Long]()\n        val primesSumCount12 = mutable.Set[Long]()\n\
    \        val primesSumCount13 = mutable.Set[Long]()\n        val primesSumCount14\
    \ = mutable.Set[Long]()\n        val primesSumCount15 = mutable.Set[Long]()\n\
    \        val primesSumCount16 = mutable.Set[Long]()\n        val primesSumCount17\
    \ = mutable.Set[Long]()\n        val primesSumCount18 = mutable.Set[Long]()\n\
    \        val primesSumCount19 = mutable.Set[Long]()\n        val primesSumCount20\
    \ = mutable.Set[Long]()\n        val primesSumCount21 = mutable.Set[Long]()\n\
    \        val primesSumCount22 = mutable.Set[Long]()\n        val primesSumCount23\
    \ = mutable.Set[Long]()\n        val primesSumCount24 = mutable.Set[Long]()\n\
    \        val primesSumCount25 = mutable.Set[Long]()\n        val primesSumCount26\
    \ = mutable.Set[Long]()\n        val primesSumCount27 = mutable.Set[Long]()\n\
    \        val primesSumCount28 = mutable.Set[Long]()\n        val primesSumCount29\
    \ = mutable.Set[Long]()\n        val primesSumCount30 = mutable.Set[Long]()\n\
    \        val primesSumCount\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt0ned7pr.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0ned7pr.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0ned7pr.scala:15:26\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0ned7pr.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0ned7pr.scala:17:29\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                             ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpt0ned7pr.scala:18:30 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumCount2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                              Not found: mutable\n\e[31m   |\e"
  stdout: ''
  timestamp: 1659804870
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        sumOfDigits + maxPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp43pfeq22.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp43pfeq22.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804813
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val maxPrime = primes.max\n\
    \        val sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n        sumOfDigits\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$5(tmpgrbhulqw.scala:16)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpgrbhulqw.scala:16)\n\
    \tat Problem$.main(tmpgrbhulqw.scala:20)\n\tat Problem.main(tmpgrbhulqw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804872
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_\
    \ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_\
    \ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_\
    \ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_\
    \ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_\
    \ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_\
    \ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_ % 109 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 139 == 0).filter(_ % 143 == 0).filter(_ % 147 == 0).filter(_ % 151 == 0).filter(_\
    \ % 157 == 0).filter(_ % 163 == 0).filter(_ % 167 == 0).filter(_ % 173 == 0).filter(_\
    \ % 177 == 0).filter(_ % 181 == 0).filter(_ % 191 == 0).filter(_ % 193 == 0).filter(_\
    \ % 197 == 0).filter(_ % 199 == 0).filter(_ % 203 == 0).filter(_ % 207 == 0).filter(_\
    \ % 211 == 0).filter(_ % 213 == 0).filter(_ % 217 == 0).filter(_ % 221 == 0).filter(_\
    \ % 227 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 243 == 0).filter(_ % 247 == 0).filter(_ % 251 == 0).filter(_\
    \ % 257 == 0).filter(_ % 263 == 0).filter(_ % 267 == 0).filter(_ % 269 == 0).filter(_\
    \ % 271 == 0).filter(_ % 277 == 0).filter(_ % 281 == 0).filter(_ % 283 == 0).filter(_\
    \ % 293 == 0).filter(_ % 307 == 0).filter(_ % 311 == 0).filter(_ % 313 == 0).filter(_\
    \ % 317 == 0).filter(_ % 319 == 0).filter(_ % 323 == 0).filter(_ % 327 == 0).filter(_\
    \ % 331 == 0).filter(_ % 337 == 0).filter(_ % 339 == 0).filter(_ % 343 == 0).filter(_\
    \ % 347 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_ % 359\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqytihs5s.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpqytihs5s.scala:14:1767 ------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(_ % \e[31m2\e[0m == \e\
    [31m0\e[0m).filter(_ % \e[31m3\e[0m == \e[31m0\e[0m).filter(_ % \e[31m5\e[0m ==\
    \ \e[31m0\e[0m).filter(_ % \e[31m7\e[0m == \e[31m0\e[0m).filter(_ % \e[31m11\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m13\e[0m == \e[31m0\e[0m).filter(_ % \e[31m17\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m19\e[0m == \e[31m0\e[0m).filter(_ % \e[31m23\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m29\e[0m == \e[31m0\e[0m).filter(_ % \e[31m31\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m37\e[0m == \e[31m0\e[0m).filter(_ % \e[31m41\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m43\e[0m == \e[31m0\e[0m).filter(_ % \e[31m47\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m53\e[0m == \e[31m0\e[0m).filter(_ % \e[31m59\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m61\e[0m == \e[31m0\e[0m).filter(_ % \e[31m67\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m71\e[0m == \e[31m0\e[0m).filter(_ % \e[31m73\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m79\e[0m == \e[31m0\e[0m).filter(_ % \e[31m83\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m89\e[0m == \e[31m0\e[0m).filter(_ % \e[31m97\e\
    [0m == \e[31m0\e[0m).filter(_ % \e[31m101\e[0m == \e[31m0\e[0m).filter(_ % \e\
    [31m103\e[0m == \e[31m0\e[0m).filter(_ % \e[31m107\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m109\e[0m == \e[31m0\e[0m).filter(_ % \e[31m113\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m127\e[0m == \e[31m0\e[0m).filter(_ % \e[31m131\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m137\e[0m == \e[31m0\e[0m).filter(_ % \e[31m139\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m143\e[0m == \e[31m0\e[0m).filter(_ % \e[31m147\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m151\e[0m == \e[31m0\e[0m).filter(_ % \e[31m157\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m163\e[0m == \e[31m0\e[0m).filter(_ % \e[31m167\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m173\e[0m == \e[31m0\e[0m).filter(_ % \e[31m177\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31m181\e[0m == \e[31m0\e[0m).filter(_ % \e[31m191\e[0m == \e[31m0\e[0m).filter(_\
    \ % \e[31"
  stdout: ''
  timestamp: 1659804872
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = lst.filter(_ % maxPrime\
    \ == 0).sum\n        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$5(tmpi3fto4i8.scala:17)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpi3fto4i8.scala:17)\n\
    \tat Problem$.main(tmpi3fto4i8.scala:21)\n\tat Problem.main(tmpi3fto4i8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804830
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val maxPrime = primes.max\n        val maxPrimeIndex = primes.indexOf(maxPrime)\n\
    \        val maxPrimeDigit = maxPrime % 10\n        val maxPrimeDigitIndex = maxPrimeIndex\
    \ % 10\n        val maxPrimeSum = maxPrimeDigit + maxPrimeDigitIndex\n       \
    \ val sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n        sumOfDigits + maxPrimeSum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$5(tmp9_azvqfa.scala:21)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmp9_azvqfa.scala:21)\n\
    \tat Problem$.main(tmp9_azvqfa.scala:25)\n\tat Problem.main(tmp9_azvqfa.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804872
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => x % 2 != 0).map(x\
    \ => x).distinct\n        val maxPrime = primes.max\n        val sumOfDigits =\
    \ lst.filter(x => x % maxPrime == 0).sum\n        sumOfDigits\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong,\
    \ 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong,\
    \ 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong,\
    \ 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong,\
    \ 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong,\
    \ 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong)))\
    \ == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong,\
    \ 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong,\
    \ 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong)))\
    \ == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyxf_76np.scala:20)\n\tat Problem.main(tmpyxf_76np.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804872
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val maxPrime = primes.max\n        val maxPrimeIndex = primes.indexOf(maxPrime)\n\
    \        val maxPrimeDigits = maxPrime % 10\n        val maxPrimeDigitIndex =\
    \ maxPrimeIndex % 10\n        val sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n\
    \        val sumOfDigitsOfMaxPrime = sumOfDigits + maxPrimeDigits\n        val\
    \ sumOfDigitsOfMaxPrimeIndex = sumOfDigits + maxPrimeDigitIndex\n        val maxPrimeSum\
    \ = sumOfDigitsOfMaxPrime + sumOfDigitsOfMaxPrimeIndex\n        val maxPrimeSumIndex\
    \ = sumOfDigitsOfMaxPrimeIndex + maxPrimeDigitIndex\n        val maxPrimeSumDigits\
    \ = maxPrimeSum % 10\n        val maxPrimeSumDigitIndex = maxPrimeSumIndex % 10\n\
    \        val maxPrimeSumDigits = maxPrimeSumDigits + maxPrimeSumDigitIndex\n \
    \       val maxPrimeSumDigitIndex = maxPrimeSumDigitIndex + maxPrimeDigitIndex\n\
    \        val maxPrimeSumDigits = maxPrimeSumDigits + maxPrimeSumDigitIndex\n \
    \       val maxPrimeSumDigitIndex = maxPrimeSumDigitIndex + maxPrimeDigitIndex\n\
    \        val maxPrimeSumDigits = maxPrimeSumDigits + maxPrimeSumDigitIndex\n \
    \       val maxPrimeSumDigitIndex = maxPrimeSumDigitIndex + maxPrimeDigitIndex\n\
    \        val maxPrimeSumDigits = maxPrimeSumDigits + maxPrimeSumDigitIndex\n \
    \       val maxPrimeSumDigitIndex = maxPrimeSumDigitIndex + maxPrimeDigitIndex\n\
    \        val maxPrimeSumDigits = maxPrimeSumDigits + maxPrimeSumDigitIndex\n \
    \       val maxPrimeSumDigitIndex = maxPrimeSumDigitIndex + maxPrimeDigitIndex\n\
    \        val maxPrimeSumDigits = maxPrimeSumDigits + maxPrimeSumDigitIndex\n \
    \       val maxPrimeSumDigitIndex = maxPrimeSumDigitIndex + maxPrimeDigitIndex\n\
    \        val maxPrimeSumDigits = maxPrimeSumDigits + maxPrimeSumDigitIndex\n \
    \       \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpy7yz0znx.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigits\e[0m =\
    \ maxPrimeSumDigits + maxPrimeSumDigitIndex\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumDigits is already defined as \e[33mvalue\e[0m \e\
    [35mmaxPrimeSumDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpy7yz0znx.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigitIndex\e\
    [0m = maxPrimeSumDigitIndex + maxPrimeDigitIndex\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mmaxPrimeSumDigitIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxPrimeSumDigitIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpy7yz0znx.scala:29:12 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigits\e[0m =\
    \ maxPrimeSumDigits + maxPrimeSumDigitIndex\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeSumDigits is already defined as \e[33mvalue\e[0m \e\
    [35mmaxPrimeSumDigits\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpy7yz0znx.scala:30:12 ---------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeSumDigitIndex\e\
    [0m = maxPrimeSumDigitIndex + maxPrimeDigitIndex\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mmaxPrimeSumDigitIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxPrimeSumDigitIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in"
  stdout: ''
  timestamp: 1659804872
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toList\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        val result = sumOfDigits\
    \ + maxPrime\n        result\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl0cgc217.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toList\n\e[31m\e[31m  \
    \ |\e[0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                  Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpl0cgc217.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804871
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primeSum = mutable.Set[Long]()\n        val primeSums = mutable.Set[Long]()\n\
    \        val primeSumsSet = mutable.Set[Long]()\n        val primeSumsSet2 = mutable.Set[Long]()\n\
    \        val primeSumsSet3 = mutable.Set[Long]()\n        val primeSumsSet4 =\
    \ mutable.Set[Long]()\n        val primeSumsSet5 = mutable.Set[Long]()\n     \
    \   val primeSumsSet6 = mutable.Set[Long]()\n        val primeSumsSet7 = mutable.Set[Long]()\n\
    \        val primeSumsSet8 = mutable.Set[Long]()\n        val primeSumsSet9 =\
    \ mutable.Set[Long]()\n        val primeSumsSet10 = mutable.Set[Long]()\n    \
    \    val primeSumsSet11 = mutable.Set[Long]()\n        val primeSumsSet12 = mutable.Set[Long]()\n\
    \        val primeSumsSet13 = mutable.Set[Long]()\n        val primeSumsSet14\
    \ = mutable.Set[Long]()\n        val primeSumsSet15 = mutable.Set[Long]()\n  \
    \      val primeSumsSet16 = mutable.Set[Long]()\n        val primeSumsSet17 =\
    \ mutable.Set[Long]()\n        val primeSumsSet18 = mutable.Set[Long]()\n    \
    \    val primeSumsSet19 = mutable.Set[Long]()\n        val primeSumsSet20 = mutable.Set[Long]()\n\
    \        val primeSumsSet21 = mutable.Set[Long]()\n        val primeSumsSet22\
    \ = mutable.Set[Long]()\n        val primeSumsSet23 = mutable.Set[Long]()\n  \
    \      val primeSumsSet24 = mutable.Set[Long]()\n        val primeSumsSet25 =\
    \ mutable.Set[Long]()\n        val primeSumsSet26 = mutable.Set[Long]()\n    \
    \    val primeSumsSet27 = mutable.Set[Long]()\n        val primeSumsSet28 = mutable.Set[Long]()\n\
    \        val primeSumsSet29 = mutable.Set[Long]()\n        val primeSumsSet30\
    \ = mutable.Set[Long]()\n        val primeSumsSet\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaod1aug0.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:15:23\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m    \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeSums\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaod1aug0.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeSumsSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpaod1aug0.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimeSumsSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m lon"
  stdout: ''
  timestamp: 1659804833
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumSet = mutable.Set[Long]()\n        val primesSumSet2 = mutable.Set[Long]()\n\
    \        val primesSumSet3 = mutable.Set[Long]()\n        val primesSumSet4 =\
    \ mutable.Set[Long]()\n        val primesSumSet5 = mutable.Set[Long]()\n     \
    \   val primesSumSet6 = mutable.Set[Long]()\n        val primesSumSet7 = mutable.Set[Long]()\n\
    \        val primesSumSet8 = mutable.Set[Long]()\n        val primesSumSet9 =\
    \ mutable.Set[Long]()\n        val primesSumSet10 = mutable.Set[Long]()\n    \
    \    val primesSumSet11 = mutable.Set[Long]()\n        val primesSumSet12 = mutable.Set[Long]()\n\
    \        val primesSumSet13 = mutable.Set[Long]()\n        val primesSumSet14\
    \ = mutable.Set[Long]()\n        val primesSumSet15 = mutable.Set[Long]()\n  \
    \      val primesSumSet16 = mutable.Set[Long]()\n        val primesSumSet17 =\
    \ mutable.Set[Long]()\n        val primesSumSet18 = mutable.Set[Long]()\n    \
    \    val primesSumSet19 = mutable.Set[Long]()\n        val primesSumSet20 = mutable.Set[Long]()\n\
    \        val primesSumSet21 = mutable.Set[Long]()\n        val primesSumSet22\
    \ = mutable.Set[Long]()\n        val primesSumSet23 = mutable.Set[Long]()\n  \
    \      val primesSumSet24 = mutable.Set[Long]()\n        val primesSumSet25 =\
    \ mutable.Set[Long]()\n        val primesSumSet26 = mutable.Set[Long]()\n    \
    \    val primesSumSet27 = mutable.Set[Long]()\n        val primesSumSet28 = mutable.Set[Long]()\n\
    \        val primesSumSet29 = mutable.Set[Long]()\n        val primesSumSet30\
    \ = mutable.Set[Long]()\n        val primes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz1483ts.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:15:24\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuz1483ts.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumSet\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpuz1483ts.scala:18:28 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumSet2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m "
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesMap = mutable.Map[Long,\
    \ Long]()\n        val primesMap2 = mutable.Map[Long, Long]()\n        val primesMap3\
    \ = mutable.Map[Long, Long]()\n        val primesMap4 = mutable.Map[Long, Long]()\n\
    \        val primesMap5 = mutable.Map[Long, Long]()\n        val primesMap6 =\
    \ mutable.Map[Long, Long]()\n        val primesMap7 = mutable.Map[Long, Long]()\n\
    \        val primesMap8 = mutable.Map[Long, Long]()\n        val primesMap9 =\
    \ mutable.Map[Long, Long]()\n        val primesMap10 = mutable.Map[Long, Long]()\n\
    \        val primesMap11 = mutable.Map[Long, Long]()\n        val primesMap12\
    \ = mutable.Map[Long, Long]()\n        val primesMap13 = mutable.Map[Long, Long]()\n\
    \        val primesMap14 = mutable.Map[Long, Long]()\n        val primesMap15\
    \ = mutable.Map[Long, Long]()\n        val primesMap16 = mutable.Map[Long, Long]()\n\
    \        val primesMap17 = mutable.Map[Long, Long]()\n        val primesMap18\
    \ = mutable.Map[Long, Long]()\n        val primesMap19 = mutable.Map[Long, Long]()\n\
    \        val primesMap20 = mutable.Map[Long, Long]()\n        val primesMap21\
    \ = mutable.Map[Long, Long]()\n        val primesMap22 = mutable.Map[Long, Long]()\n\
    \        val primesMap23 = mutable.Map[Long, Long]()\n        val primesMap24\
    \ = mutable.Map[Long, Long]()\n        val primesMap25 = mutable.Map[Long, Long]()\n\
    \        val primesMap26 = mutable.Map[Long, Long]()\n        val primesMap27\
    \ = mutable.Map[Long, Long]()\n        val primesMap28 = mutable.Map[Long, Long]()\n\
    \        val primesMap29 = mutable.Map[Long, Long]()\n        val primesMap30\
    \ = mutable.Map[Long, Long]()\n        val primesMap31 = mutable.Map[Long, Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp909xr0of.scala:47:11 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp909xr0of.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp909xr0of.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp909xr0of.scala:16:24 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesMap\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     \
    \   ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp909xr0of.scala:17:25\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesMap2\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp909xr0of.scala:18:25 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesMap3\e[0m = mutable.Map[\e[35mLong\e[0m,\
    \ \e[35mLong\e[0m"
  stdout: ''
  timestamp: 1659804872
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = primes.map(x =>\
    \ x.toString.toInt).sum\n        val maxSumOfDigits = sumOfDigits + maxPrime.toString.toInt\n\
    \        maxSumOfDigits\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3qxn2ap0.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804871
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesCount = mutable.Set[Long]()\n        val primesSum = mutable.Set[Long]()\n\
    \        val primesSumCount = mutable.Set[Long]()\n        val primesSumCount2\
    \ = mutable.Set[Long]()\n        val primesSumCount3 = mutable.Set[Long]()\n \
    \       val primesSumCount4 = mutable.Set[Long]()\n        val primesSumCount5\
    \ = mutable.Set[Long]()\n        val primesSumCount6 = mutable.Set[Long]()\n \
    \       val primesSumCount7 = mutable.Set[Long]()\n        val primesSumCount8\
    \ = mutable.Set[Long]()\n        val primesSumCount9 = mutable.Set[Long]()\n \
    \       val primesSumCount10 = mutable.Set[Long]()\n        val primesSumCount11\
    \ = mutable.Set[Long]()\n        val primesSumCount12 = mutable.Set[Long]()\n\
    \        val primesSumCount13 = mutable.Set[Long]()\n        val primesSumCount14\
    \ = mutable.Set[Long]()\n        val primesSumCount15 = mutable.Set[Long]()\n\
    \        val primesSumCount16 = mutable.Set[Long]()\n        val primesSumCount17\
    \ = mutable.Set[Long]()\n        val primesSumCount18 = mutable.Set[Long]()\n\
    \        val primesSumCount19 = mutable.Set[Long]()\n        val primesSumCount20\
    \ = mutable.Set[Long]()\n        val primesSumCount21 = mutable.Set[Long]()\n\
    \        val primesSumCount22 = mutable.Set[Long]()\n        val primesSumCount23\
    \ = mutable.Set[Long]()\n        val primesSumCount24 = mutable.Set[Long]()\n\
    \        val primesSumCount25 = mutable.Set[Long]()\n        val primesSumCount26\
    \ = mutable.Set[Long]()\n        val primesSumCount27 = mutable.Set[Long]()\n\
    \        val primesSumCount28 = mutable.Set[Long]()\n        val primesSumCount29\
    \ = mutable.Set[Long]()\n        val primesSumCount30 = mutable.Set[Long]()\n\
    \        val primesSumCount\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt0ned7pr.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0ned7pr.scala:14:21\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0ned7pr.scala:15:26\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0ned7pr.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSum\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0ned7pr.scala:17:29\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimesSumCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                             ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpt0ned7pr.scala:18:30 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mval\e[0m \e[36mprimesSumCount2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                              Not found: mutable\n\e[31m   |\e"
  stdout: ''
  timestamp: 1659804870
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).map(x\
    \ => x.toInt).toSet\n        val maxPrime = primes.max\n        val sumOfDigits\
    \ = lst.filter(x => isPrime(x)).map(x => x.toInt).sum\n        sumOfDigits + maxPrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjwyob8sq.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).toSet\n\e[31m\e[31m   |\e\
    [0m                                     ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                             Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpjwyob8sq.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfDigits\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).map(\e[36mx\e[0m => x.toInt).sum\n\e[31m\e[31m   |\e\
    [0m                                          ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                       Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804848
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val maxPrime = primes.max\n\
    \        val sumOfDigits = lst.filter(_ % maxPrime == 0).sum\n        sumOfDigits\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$5(tmpgrbhulqw.scala:16)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpgrbhulqw.scala:16)\n\
    \tat Problem$.main(tmpgrbhulqw.scala:20)\n\tat Problem.main(tmpgrbhulqw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804872
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0)\n      \
    \  val maxPrime = primes.max\n        val sumOfDigits = lst.filter(_ % maxPrime\
    \ == 0).sum\n        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$6(tmp8h388rc6.scala:16)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmp8h388rc6.scala:16)\n\
    \tat Problem$.main(tmp8h388rc6.scala:20)\n\tat Problem.main(tmp8h388rc6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804830
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(_ % 2 == 0).filter(_\
    \ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0)\n        val primesCount = primes.size\n\
    \        val maxPrime = primes.max\n        val sumOfDigits = lst.filter(_ % maxPrime\
    \ == 0).sum\n        sumOfDigits\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.$anonfun$5(tmpi3fto4i8.scala:17)\n\
    \tat scala.runtime.java8.JFunction1$mcZJ$sp.apply(JFunction1$mcZJ$sp.scala:17)\n\
    \tat scala.collection.immutable.List.filter(List.scala:515)\n\tat Problem$.skjkasdkd(tmpi3fto4i8.scala:17)\n\
    \tat Problem$.main(tmpi3fto4i8.scala:21)\n\tat Problem.main(tmpi3fto4i8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804830
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = mutable.Set[Long]()\n       \
    \ val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpwo2aa6gs.scala:49:11 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mprimesSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimesSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpwo2aa6gs.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimesSet4\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^"
  stdout: ''
  timestamp: 1659804816

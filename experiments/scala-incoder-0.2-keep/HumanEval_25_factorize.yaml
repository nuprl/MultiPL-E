name: HumanEval_25_factorize
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return list of prime factors of given integer in the order from smallest\
  \ to largest.\n    // Each of the factors should be listed number of times corresponding\
  \ to how many times it appeares in factorization.\n    // Input number should be\
  \ equal to the product of all factors\n    // >>> factorize(8)\n    // [2, 2, 2]\n\
  \    // >>> factorize(25)\n    // [5, 5]\n    // >>> factorize(70)\n    // [2, 5,\
  \ 7]\n    def factorize(n : Long) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(factorize((2l)).equals((List[Long](2l.toLong))));\n\
  \    assert(factorize((4l)).equals((List[Long](2l.toLong, 2l.toLong))));\n    assert(factorize((8l)).equals((List[Long](2l.toLong,\
  \ 2l.toLong, 2l.toLong))));\n    assert(factorize((57l)).equals((List[Long](3l.toLong,\
  \ 19l.toLong))));\n    assert(factorize((3249l)).equals((List[Long](3l.toLong, 3l.toLong,\
  \ 19l.toLong, 19l.toLong))));\n    assert(factorize((185193l)).equals((List[Long](3l.toLong,\
  \ 3l.toLong, 3l.toLong, 19l.toLong, 19l.toLong, 19l.toLong))));\n    assert(factorize((20577l)).equals((List[Long](3l.toLong,\
  \ 19l.toLong, 19l.toLong, 19l.toLong))));\n    assert(factorize((18l)).equals((List[Long](2l.toLong,\
  \ 3l.toLong, 3l.toLong))));\n    }\n\n}\n"
completions: ["        val factors = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primes = mutable.ArrayBuffer.empty[Long]\n        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSum = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationCountSums = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSums =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSum =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSumsSum\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSumsSumsSums",
  "        val factorization = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val factorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts = mutable.ListBuffer[Long]()\n        val factorizationCountSum\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountSums = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSum = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountSumsSums = mutable.ListBuffer[Long]()\n        val factorizationCountSumsSumsSum\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSums = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ListBuffer",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationListSize = mutable.ArrayBuffer.empty[Int]\n\
    \        val factorizationListSizeSize = mutable.ArrayBuffer.empty[Int]\n    \
    \    val factorizationListSizeSize2 = mutable.ArrayBuffer.empty[Int]\n       \
    \ val factorizationListSizeSize3 = mutable.ArrayBuffer.empty[Int]\n        val\
    \ factorizationListSizeSize4 = mutable.ArrayBuffer.empty[Int]\n        val factorizationListSizeSize5\
    \ = mutable.ArrayBuffer.empty[Int]\n        val factorizationListSizeSize6 = mutable.ArrayBuffer.empty[Int]\n\
    \        val factorizationListSizeSize7 = mutable.ArrayBuffer.empty[Int]\n   \
    \     val factorizationListSizeSize8 = mutable.ArrayBuffer.empty[Int]\n      \
    \  val factorizationListSizeSize9 = mutable.ArrayBuffer.empty[Int]\n        val\
    \ factorizationListSizeSize10 = mutable.ArrayBuffer.empty[Int]\n        val factorizationListSizeSize11\
    \ = mutable.ArrayBuffer.empty[Int]\n        val factorizationListSizeSize12 =\
    \ mutable.ArrayBuffer.empty[Int]\n        val factorizationListSizeSize13 = mutable.ArrayBuffer.empty[Int]\n\
    \        val factorizationListSizeSize14 = mutable.ArrayBuffer.empty[Int]\n  \
    \      val factorizationListSizeSize15 = mutable.ArrayBuffer.empty[Int]\n    \
    \    val factorizationListSizeSize16 = mutable.ArrayBuffer.empty[Int]\n      \
    \  val factorizationListSizeSize17 = mutable.ArrayBuffer.empty[Int]\n        val\
    \ factorizationListSizeSize18 = mutable.ArrayBuffer.empty[Int]\n        val factorizationListSizeSize19\
    \ = mutable.ArrayBuffer.empty[Int]\n        val factorizationListSizeSize20 =\
    \ mutable.ArrayBuffer.empty[Int]\n        val factorizationListSizeSize21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val factorizationListSizeSize22 = mutable.ArrayBuffer.empty[Int]\n  \
    \      val factorizationListSizeSize23 = mutable.ArrayBuffer.empty[Int]\n    \
    \    val factorizationListSizeSize24 = mutable.ArrayBuffer.empty[Int]\n      \
    \  val factorizationListSizeSize25 = mutable.ArrayBuffer.empty[Int]\n        val\
    \ factorizationListSizeSize26 = mutable.ArrayBuffer.empty[Int]\n        val factorizationListSizeSize27\
    \ = mutable.ArrayBuffer.empty", "        val factors = mutable.ListBuffer.empty[Long]\n\
    \        var i = 2\n        while(i <= n) {\n            val f = math.gcd(i, n)\n\
    \            if(f == 1) {\n                factors += i\n            }\n     \
    \       i += f\n        }\n        factors.toList", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        var i = 2L\n       \
    \ while (i <= n) {\n            if (n % i == 0) {\n                factors +=\
    \ i\n                primes += i\n                i += 1\n            }\n    \
    \    }\n        factors.toList", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorization = mutable.ListBuffer[Boolean]()\n        val\
    \ isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactor",
  "        val factors = mutable.ListBuffer.empty[Long]\n        val primes = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ListBuffer.empty[Long]\n        val factorization\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCounts = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCountPairs = mutable.ListBuffer.empty[(Long, Long)]\n        val\
    \ factorizationCountPairsSorted = mutable.ListBuffer.empty[(Long, Long)]\n   \
    \     val factorizationCountPairsSortedByCount = mutable.ListBuffer.empty[(Long,\
    \ Long)]\n        val factorizationCountPairsSortedByCountSorted = mutable.ListBuffer.empty[(Long,\
    \ Long)]\n        val factorizationCountPairsSortedByCountSortedByCount = mutable.ListBuffer.empty[(Long,\
    \ Long)]\n        val factorizationCountPairsSortedByCountSortedByCountSorted\
    \ = mutable.ListBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountSortedByCountSortedByCount\
    \ = mutable.ListBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountSortedByCountSortedByCountSorted\
    \ = mutable.ListBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountSortedByCountSortedByCountSortedByCount\
    \ = mutable.ListBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountSortedByCountSortedByCountSortedByCountSorted\
    \ = mutable.ListBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountSortedByCountSortedByCountSortedByCountSortedByCount\
    \ = mutable.ListBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountSortedByCountSortedByCountSortedByCountSortedByCountSorted\
    \ = mutable.ListBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountSortedByCountSortedByCountSortedByCountSortedByCountSortedByCount\
    \ = mutable.ListBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountSortedByCountSortedByCountSortedByCountSortedByCountSortedByCountSorted\
    \ = mutable.ListBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountSortedByCountSortedByCountSortedByCountSortedByCountSortedByCountSortedByCount\
    \ = mutable.ListBuffer.empty[(Long, Long", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorization",
  "        val factors = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to n\
    \ by 2){\n            val p = i\n            for(j <- 2 to n by 2){\n        \
    \        if(p * j == n){\n                    factors += p\n                 \
    \   break\n                }\n            }\n        }\n        factors.toList",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimes = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationFactorsPrimes = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactorsPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactorsPrimesPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactorsPrimesPrimesPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactorsPrimesPrimesPrimesPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactorsPrimesPrimesPrimesPrimesPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimesPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimesPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.Array", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val factorization = factorization(n) \n        factorization.foreach(f\
    \ => factors += f)\n        factors.toList", "        val factors = mutable.ListBuffer.empty[Long]\n\
    \        val factorization = factorization(n) \n        factorization foreach\
    \ { f =>\n            factors += f\n        }\n        factors", "        val\
    \ factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2L\n        while(i <= n) {\n            val p = i\n        \
    \    while(p % i == 0) {\n                p /= i\n                factors += p\n\
    \                primes += i\n            }\n            i += 1\n        }\n \
    \       factors.toList", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMax = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationCountMaxs = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMin\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMins = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMin = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationCountMaxMins = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationCountMinMax = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountMinMaxs = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMaxMinMax\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMaxMinMaxs\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMinMaxMax =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMinMaxMaxs =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMaxMinMaxMax\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMaxMinMaxMaxs\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMinMaxMaxMax\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMinMaxMaxMaxs\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMaxMinMaxMaxMax\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMaxMinMaxMaxMaxs\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMinMaxMaxMaxMaxMax\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMinMaxMaxMaxMaxMaxs\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMaxMinMaxMaxMaxMax\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMaxMinMaxMaxMaxMaxs\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMinMaxMaxMaxMaxMaxMax\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMinMaxMaxMaxMaxMaxMaxs\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMaxMin", " \
    \       val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val primeFactorsCount\
    \ = mutable.ListBuffer[Long]()\n        val factorization = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer", "        val factors = mutable.ListBuffer[Long]()\n \
    \       val factorization = factorization(n) //factorization is list of factors\
    \ of given number\n        factorization foreach { f =>\n            factors +=\
    \ f\n        }\n        factors", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSize = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationListSizeSize = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationListSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationListSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationListSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n \
    \       val factorizationListSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = ", "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val factors = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationFactorsCount = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationFactorsCount2 = mutable.ArrayBuffer.empty[Long]\n     \
    \   val factorizationFactorsCount3 = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationFactorsCount4 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationFactorsCount5 = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount6\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount7 =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount8 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationFactorsCount9 = mutable.ArrayBuffer.empty[Long]\n  \
    \      val factorizationFactorsCount10 = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationFactorsCount11 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationFactorsCount12 = mutable.ArrayBuffer.empty[Long]\n     \
    \   val factorizationFactorsCount13 = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationFactorsCount14 = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationFactorsCount15 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationFactorsCount16 = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount18 =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount19 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationFactorsCount20 = mutable.ArrayBuffer.empty[Long]\n \
    \       val factorizationFactorsCount21 = mutable.ArrayBuffer.empty[Long]\n  \
    \      val factorizationFactorsCount22 = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationFactorsCount23 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationFactorsCount24 = mutable.ArrayBuffer.empty[Long]\n     \
    \   val factorizationFactorsCount25 = mut", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactors = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationPrimeFactorsCount = mutable.ArrayBuffer.empty[Long]\n \
    \       val factorizationPrimeFactorsCountSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountSumOfSquares = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountSumOfSquaresOf = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountSumOfSquaresOfSquares = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountSumOfSquaresOfSquaresOf = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquares = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOf =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquaresOf\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquaresOf\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquaresOf\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquaresOf\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquares",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization2 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization3 = mutable.ListBuffer[Long]()\n        val primeFactorization4\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization5 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization6 = mutable.ListBuffer[Long]()\n        val primeFactorization7\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization8 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization9 = mutable.ListBuffer[Long]()\n        val primeFactorization10\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization11 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization12 = mutable.ListBuffer[Long]()\n        val primeFactorization13\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization14 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization15 = mutable.ListBuffer[Long]()\n        val primeFactorization16\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization17 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization18 = mutable.ListBuffer[Long]()\n        val primeFactorization19\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization20 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization21 = mutable.ListBuffer[Long]()\n        val primeFactorization22\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization23 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization24 = mutable.ListBuffer[Long]()\n        val primeFactorization25\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization26 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization27 = mutable.ListBuffer[Long]()\n        val primeFactorization28\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization29 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization30 = mutable.ListBuffer[Long]()\n        val primeFactor",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val factorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount2 = mutable.ListBuffer[Long]()\n        val factorizationCount3\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount4 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount5 = mutable.ListBuffer[Long]()\n        val factorizationCount6\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount7 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount8 = mutable.ListBuffer[Long]()\n        val factorizationCount9\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount10 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount11 = mutable.ListBuffer[Long]()\n        val factorizationCount12\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount13 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount14 = mutable.ListBuffer[Long]()\n        val factorizationCount15\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount16 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount17 = mutable.ListBuffer[Long]()\n        val factorizationCount18\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount19 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount20 = mutable.ListBuffer[Long]()\n        val factorizationCount21\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount22 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount23 = mutable.ListBuffer[Long]()\n        val factorizationCount24\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount25 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount26 = mutable.ListBuffer[Long]()\n        val factorizationCount27\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount28 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount29 = mutable.ListBuffer[Long]()\n        val factorizationCount30\
    \ = ", "        val factorization = mutable.ListBuffer[Long]()\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactors = mutable.ListBuffer[Boolean]()\n        val isPrimePrimes\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimePrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimeFactors = mutable.ListBuffer[Boolean]()\n        val\
    \ isPrimePrimePrimes = mutable.ListBuffer[Boolean]()\n        val isPrimePrimePrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimePrimePrimeFactors = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimes = mutable.ListBuffer[Boolean]()\n       \
    \ val isPrimePrimePrimePrimeFactorization = mutable.ListBuffer[Boolean]()\n  \
    \      val isPrimePrimePrimePrimeFactors = mutable.ListBuffer[Boolean]()\n   \
    \     val isPrimePrimePrimePrimePrimes = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimePrimePrimePrimePrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimeFactors = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimes = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactors = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimes = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactors = mutable.ListBuffer[",
  "        val factors = mutable.ListBuffer.empty[Long]\n        val primes = mutable.ListBuffer.empty[Long]\n\
    \        val factorization = mutable.ListBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val factorization = factorization(n).toList\n        factorization.foreach(x\
    \ => factors += x)\n        factors", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val factorization =\
    \ mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount2\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount3 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount4 = mutable.ListBuffer[Long]()\n        val factorizationCount5\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount6 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount7 = mutable.ListBuffer[Long]()\n        val factorizationCount8\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount9 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount10 = mutable.ListBuffer[Long]()\n        val factorizationCount11\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount12 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount13 = mutable.ListBuffer[Long]()\n        val factorizationCount14\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount15 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount16 = mutable.ListBuffer[Long]()\n        val factorizationCount17\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount18 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount19 = mutable.ListBuffer[Long]()\n        val factorizationCount20\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount21 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount22 = mutable.ListBuffer[Long]()\n        val factorizationCount23\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount24 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount25 = mutable.ListBuffer[Long]()\n        val factorizationCount26\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount27 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount28 = mutable.ListBuffer[Long]()\n        val factorizationCount29\
    \ = ", "        val factors = mutable.ListBuffer[Long]()\n        val factorization\
    \ = factorization(n)\n        factorization.foreach(x => factors += x)\n     \
    \   factors", "        val factorization = mutable.ArrayBuffer.empty[Long]\n \
    \       val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizations = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCounts\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorization",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = ", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val factorization =\
    \ mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimes = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationPrimeFactors = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCounts\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCounts\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCountsCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCountsCounts\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCountsCountsCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCountsCountsCounts\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCountsCountsCountsCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCountsCountsCountsCounts\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCountsCountsCountsCountsCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCountsCountsCountsCountsCounts\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCountsCountsCountsCountsCountsCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsCountPrimesCountsCountsCountsCoun",
  "        val factorization = mutable.ListBuffer[Long]()\n        val factorizations\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrime = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationPrimeFactors = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactor\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrime\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactor\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactorPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactorPrime\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactor\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrime\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactor\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrime\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        ", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val factorization =\
    \ mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mut", "        val factorization = mutable.ListBuffer[Long]()\n        var\
    \ factor = 1\n        while (n > 1) {\n            while (n % factor == 0) {\n\
    \                factorization += factor\n                n /= factor\n      \
    \      }\n            factor += 1\n        }\n        factorization.toList", " \
    \       val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactors = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorsPrimes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorsPrimesPrimes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorsPrimesPrimesPrimes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorsPrimesPrimesPrimesPrimes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorsPrimesPrimesPrimesPrimesPrimes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorsPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPri",
  "        val factors = mutable.ListBuffer[Long]()\n        val factorization = factorization(n)\
    \ //factorization is list of factors of given number\n        factorization.foreach(f\
    \ => factors += f)\n        factors", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorization = mutable.ListBuffer[Boolean]()\n        val\
    \ isPrimeFactorizationCount = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationPrimeCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationFactorCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationFactorizationPrimeCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationFactorizationFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationFactorizationFactorCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorizationFactorizationFactorization = mutable.ListBuffer[Boolean]()",
  "        val factors = mutable.ListBuffer[Long]()\n        val factorization = factorization(n)\
    \ \n        factorization foreach { x => factors += x }\n        factors.toList",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val factorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimes = mutable.ListBuffer[Long]()\n        val\
    \ factorizationPrimeFactors = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizations =\
    \ mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()", "        val factors = mutable.ListBuffer[Long]()\n\
    \        var factor = 1\n        for(i <- 2 to n by 2){\n            while(n %\
    \ i == 0){\n                factor *= i\n                factors += factor\n \
    \               n /= i\n            }\n        }\n        factors += n\n     \
    \   factors.toList", "        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val factorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationCount = mutable.ArrayBuffer.empty[Long]\n     \
    \   val primeFactorizationCount2 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorizationCount3 = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationCount4\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationCount5 = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationCount6 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val primeFactorizationCount7 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorizationCount8 = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationCount9\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationCount10 = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationCount11 = mutable.ArrayBuffer.empty[Long]\n   \
    \     val primeFactorizationCount12 = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorizationCount13 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorizationCount14 = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationCount15\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationCount16 = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationCount17 = mutable.ArrayBuffer.empty[Long]\n   \
    \     val primeFactorizationCount18 = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorizationCount19 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorizationCount20 = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationCount21\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationCount22 = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationCount23 = mutable.ArrayBuffer.empty[Long]\n   \
    \     val primeFactorizationCount24 = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorizationCount25 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorizationCount26 = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationCount27\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationCount28 = mutable.Array",
  "        val factorization = mutable.ListBuffer[Long]()\n        var factor = 2\n\
    \        while (factor <= n) {\n            if (n % factor == 0) {\n         \
    \       factorization += factor\n                while (n % factor == 0) {\n \
    \                   n /= factor\n                    factor += 1\n           \
    \     }\n            }\n            factor += 1\n        }\n        factorization.toList",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = ", "   \
    \     val factors = mutable.ListBuffer[Long]()\n        val factorization = factorization(n)\
    \ \n        factorization foreach { f => factors += f }\n        factors", " \
    \       val factors = mutable.ListBuffer.empty[Long]\n        val primes = mutable.ListBuffer.empty[Long]\n\
    \        val factorization = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationCount2 = mutable.ListBuffer.empty[Long]\n     \
    \   val primeFactorizationCount3 = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizationCount4 = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount5\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount6 = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationCount7 = mutable.ListBuffer.empty[Long]\n     \
    \   val primeFactorizationCount8 = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizationCount9 = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount10\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount11 = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationCount12 = mutable.ListBuffer.empty[Long]\n    \
    \    val primeFactorizationCount13 = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizationCount14 = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount15\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount16 = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationCount17 = mutable.ListBuffer.empty[Long]\n    \
    \    val primeFactorizationCount18 = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizationCount19 = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount20\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount21 = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationCount22 = mutable.ListBuffer.empty[Long]\n    \
    \    val primeFactorizationCount23 = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizationCount24 = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount25\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount26 = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationCount27 = mutable.ListBuffer.empty[Long]\n    \
    \    val primeFactorizationCount28 = mutable.List", "        val factors = mutable.ListBuffer[Long]()\n\
    \        var i = 2\n        while (i <= n / i) {\n            if (n % i == 0)\
    \ {\n                factors += i\n                n /= i\n            }\n   \
    \         i += 1\n        }\n        factors.toList", "        val factorization\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val isPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimeFactorizationPrimePrime = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimeFactorizationPrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPri", "   \
    \     val factors = mutable.ListBuffer[Long]()\n        val factorization = factorization(n).toList\n\
    \        factorization.foreach(factor => factors += factor)\n        factors",
  "        val factors = mutable.ListBuffer[Long]()\n        var i = 2\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                factors += i\n\
    \                n /= i\n            }\n            i += 1\n        }\n      \
    \  if (n != 1) factors += n\n        factors.toList", "        val factorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factors = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactors = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationPrimeFactorsCount = mutable.ArrayBuffer.empty[Long]\n \
    \       val factorizationFactorsCount = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationPrimeFactorsCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCountCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCountCountCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCountCountCountCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.", "        val factorization = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val factors = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val factorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts = mutable.ListBuffer[Long]()\n        val factorizationCountOf\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountOfs = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountOfsOf = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountOfsOfs = mutable.ListBuffer[Long]()\n        val factorizationCountOfsOfsOf\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountOfsOfsOfs = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountOfsOfsOfsOf = mutable.ListBuffer[Long]()\n    \
    \    val factorizationCountOfsOfsOfsOfs = mutable.ListBuffer[Long]()\n       \
    \ val factorizationCountOfsOfsOfsOf = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountOfsOfsOfsOfs = mutable.ListBuffer[Long]()\n        val factorizationCountOfsOfsOfsOfsOf\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountOfsOfsOfsOfsOfs\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountOfsOfsOfsOfsOfsOf\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountOfsOfsOfsOfsOfsOf\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountOfsOfsOfsOfsOfsOfs\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountOfsOfsOfsOfsOfsOf\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountOfsOfsOfsOfsOfsOfs\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountOfsOfsOfsOfsOfsOfsOf\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountOfsOfsOfsOfs", " \
    \       val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountSum = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSums = mutable.ArrayBuffer.empty[Long]\n  \
    \      val factorizationCountSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n \
    \       val factorizationCountSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSumsSums", "      \
    \  val factors = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                factors += i\n\
    \                n /= i\n            }\n            i += 1\n        }\n      \
    \  factors.toList", "        val factors = mutable.ListBuffer[Long]()\n      \
    \  val factorization = factorization(n);\n        factorization.foreach(x => factors\
    \ += x)\n        factors", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMax = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationCountMaxs = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMin\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMins = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMax = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationCountMinMaxs = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationCountMinMaxMin = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountMinMaxMins = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountMinMaxMinMinMax = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationCountMinMaxMinMaxs = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationCountMinMaxMinMaxMinMax = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMaxMinMaxMinMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMaxMinMaxMinMaxMin = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMaxMinMaxMinMaxMins = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMaxMinMaxMinMaxMinMax = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMaxMinMaxMinMaxMinMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMaxMinMaxMinMaxMinMaxMin = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMaxMinMaxMinMaxMinMaxMins = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMaxMinMaxMinMaxMinMaxMinMax = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMaxMinMaxMinMaxMinMaxMinMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMaxMinMaxMinMaxMinMaxMinMax = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMinMaxMinMaxMinMaxMinMaxMinMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val ", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primeFactorizationList = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationList\
    \ = ", "        val factors = mutable.ArrayBuffer.empty[Long]\n        val factorization\
    \ = factorization(n)\n        factorization.foreach(f => factors += f)\n     \
    \   factors", "        val factors = mutable.ListBuffer[Long]()\n        val primes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactors = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsCount = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount2\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount3 = mutable.ListBuffer[Int]()\n\
    \        val isPrimeFactorsCount4 = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount5\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount6 = mutable.ListBuffer[Int]()\n\
    \        val isPrimeFactorsCount7 = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount8\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount9 = mutable.ListBuffer[Int]()\n\
    \        val isPrimeFactorsCount10 = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount11\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount12 = mutable.ListBuffer[Int]()\n\
    \        val isPrimeFactorsCount13 = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount14\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount15 = mutable.ListBuffer[Int]()\n\
    \        val isPrimeFactorsCount16 = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount17\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount18 = mutable.ListBuffer[Int]()\n\
    \        val isPrimeFactorsCount19 = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount20\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount21 = mutable.ListBuffer[Int]()\n\
    \        val isPrimeFactorsCount22 = mutable.ListBuffer[Int]()\n        val isPrimeFactorsCount23\
    \ = mutable.ListBuffer[Int]()\n        ", "        val factors = mutable.ListBuffer[Long]()\n\
    \        var i = 2\n        while (i <= n / i) {\n            if (n % i == 0)\
    \ {\n                factors += i\n                n /= i\n            }\n   \
    \         i += 1\n        }\n        factors.toList", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorization = mutable.ListBuffer[Boolean]()\n        val\
    \ isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactor",
  "        val factors = mutable.ListBuffer[Long]()\n        val factorization = factorization(n)\n\
    \        factorization foreach { factor =>\n            factors += factor\n  \
    \      }\n        factors", "        val factors = mutable.ListBuffer.empty[Long]\n\
    \        val primes = mutable.ListBuffer.empty[Long]\n        val primeFactors\
    \ = mutable.ListBuffer.empty[Long]\n        val factorization = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount2 = mutable.ListBuffer.empty[Long]\n        val factorizationCount3\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount4 = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount5 = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount6 = mutable.ListBuffer.empty[Long]\n        val factorizationCount7\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount8 = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount9 = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount10 = mutable.ListBuffer.empty[Long]\n        val factorizationCount11\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount12 = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount13 = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount14 = mutable.ListBuffer.empty[Long]\n        val factorizationCount15\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount16 = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount17 = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount18 = mutable.ListBuffer.empty[Long]\n        val factorizationCount19\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount20 = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount21 = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount22 = mutable.ListBuffer.empty[Long]\n        val factorizationCount23\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount24 = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount25 = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount26 = mutable.ListBuffer.empty[Long]\n        val factorizationCount27\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount28 = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount29 = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount30 = ", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationSize = n\n     \
    \   val primesSize = factorizationSize / 2\n        val primeFactorizationSize\
    \ = primesSize * 2\n        val factorizationPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationSize = factorizationPrimeFactorization.length\n\
    \        val factorizationPrimeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationPrimesSize = factorizationPrimeFactorizationPrimes.length\n\
    \        val factorizationPrimeFactorizationPrimesPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationPrimesPrimesSize = factorizationPrimeFactorizationPrimesPrimes.length\n\
    \        val factorizationPrimeFactorizationPrimesPrimesPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationPrimesPrimesPrimesSize = factorizationPrimeFactorizationPrimesPrimesPrimes.length\n\
    \        val factorizationPrimeFactorizationPrimesPrimesPrimesPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationPrimesPrimesPrimesPrimesSize = factorizationPrimeFactorizationPrimesPrimesPrimesPrimes.length\n\
    \        val factorizationPrimeFactorizationPrimesPrimesPrimesPrimesPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationPrimesPrimesPrimesPrimesPrimesSize\
    \ = factorizationPrimeFactorizationPrimesPrimesPrimesPrimesPrimes.length\n   \
    \     val factorizationPrimeFactorizationPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimesPrimesPrimesPrimesPrimesPrimesSize\
    \ = factorizationPrimeFactorizationPrimesPrimesPrimesPrimesPrimesPrimes.length\n\
    \        val factorizationPrimeFactorizationPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimesPrimesPrimesPrimesPrimesPrimesPri",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMax = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationCountMaxs = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMaxMax\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountMaxMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMax = mutable.ArrayBuffer.empty[Long]\n \
    \       val factorizationCountMaxMaxMaxs = mutable.ArrayBuffer.empty[Long]\n \
    \       val factorizationCountMaxMaxMaxMax = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMax = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxMax = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxMaxMax = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxMaxMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMax = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMaxMax = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMaxMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMaxMaxMax = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxs = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax = ", "      \
    \  val factors = mutable.ArrayBuffer.empty[Long]\n        val factorization =\
    \ factorization(n) \n        factorization.foreach(x => factors += x)\n      \
    \  factors", "        val factors = mutable.ListBuffer.empty[Long]\n        val\
    \ primes = mutable.ListBuffer.empty[Long]\n        val primeFactors = mutable.ListBuffer.empty[Long]\n\
    \        val isPrime = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactor\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactors = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCount = mutable.ListBuffer.empty[Boolean]\n       \
    \ val isPrimeFactorsCounts = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorsCountOf\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorsCountOfs = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCountOfsOf = mutable.ListBuffer.empty[Boolean]\n  \
    \      val isPrimeFactorsCountOfsOfs = mutable.ListBuffer.empty[Boolean]\n   \
    \     val isPrimeFactorsCountOfsOfsOf = mutable.ListBuffer.empty[Boolean]\n  \
    \      val isPrimeFactorsCountOfsOfsOfs = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCountOfsOfsOfs = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCountOfsOfsOfsOf = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCountOfsOfsOfsOfs = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCountOfsOfsOfsOfsOf = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCountOfsOfsOfsOfsOfs = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCountOfsOfsOfsOfsOf = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCountOfsOfsOfsOfsOfs = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCountOfsOfsOfsOfsOf = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCountOfsOfsOfsOfsOfs = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsCountOfsOfsOfsOfsOf = mutable.ListBuffer.empty[Boolean]\n\
    \        val ", "        val factors = mutable.ArrayBuffer.empty[Long]\n     \
    \   val factorization = factorizations(n)\n        factorization.foreach(f =>\
    \ factors += f)\n        factors", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val factorization =\
    \ mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimeFactorizationFactorization = mutable.ListBuffer[Boolean]()\n  \
    \      val isPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val factorization = factorization(n) \n        factorization.foreach(f\
    \ => factors += f)\n        factors", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val factorization =\
    \ mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimeFactorizationFactorization = mutable.ListBuffer[Boolean]()\n  \
    \      val isPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationFactorization\
    \ = mutable.ListBuffer[Boolean]", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val factorization = factorizationOf(n)\n        factorization.foreach(f\
    \ => factors += f)\n        factors", "        val factorization = mutable.ListBuffer.empty[Long]\n\
    \        val factors = mutable.ListBuffer.empty[Long]\n        val primes = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ListBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorization = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactors = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimes\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimeFactorization =\
    \ mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimeFactors = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimes = mutable.ListBuffer.empty[Boolean]\n        val\
    \ isPrimePrimePrimeFactorization = mutable.ListBuffer.empty[Boolean]\n       \
    \ val isPrimePrimePrimeFactors = mutable.ListBuffer.empty[Boolean]\n        val\
    \ isPrimePrimePrimePrimes = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimePrimePrimeFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimePrimePrimeFactors\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimePrimePrimePrimes\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimePrimePrimePrimeFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimePrimePrimePrimeFactors\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimePrimePrimePrimePrimes\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimePrimePrimePrimePrimeFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimePrimePrimePrimePrimeFactors\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimePrimePrimePrimePrimePrimes\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimePrimePrimePrimePrimePrimePrimeFactors\
    \ = mutable.ListBuffer.empty", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        factorize(n, 0, factorization)\n        factorization.toList", "    \
    \    val factorization = mutable.ArrayBuffer.empty[Long]\n        val primes =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountSum = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSums\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSums = mutable.ArrayBuffer.empty[Long]\n  \
    \      val factorizationCountSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n \
    \       val factorizationCountSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSumsSumsSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountSumsSumsSumsSumsSumsSums", "        val factorization\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizations = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCounts = mutable.ListBuffer.empty[Long]\n        val factorizationCountMax\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxs = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCountMaxMax = mutable.ListBuffer.empty[Long]\n     \
    \   val factorizationCountMaxMaxs = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCountMaxMaxMax = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxs\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMax\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxs\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMax\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxs\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxMax\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxs\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxMax\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxMaxs\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxMaxMax\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxMaxMaxs\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMax\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMaxs\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMaxMaxs\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxs\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCountMax", "    \
    \    val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n\
    \                factors += i\n                primes += i\n                while\
    \ (i <= n / i) {\n                    i += 1\n                }\n            }\n\
    \            i += 1\n        }\n        factors.toList", "        val factors\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        var i = 2L\n        while (i < n) {\n\
    \            if (n % i == 0) {\n                factors += i\n               \
    \ factorization += i\n                primes += i\n                primeFactorization\
    \ += i\n            }\n            i += 1\n        }\n        factors.toList.sortWith(_\
    \ < _)\n        primes.toList.sortWith(_ < _)\n        factorization.toList.sortWith(_\
    \ < _)\n        primeFactorization.toList.sortWith(_ < _)\n        factors.toList.map(n\
    \ => factorization.count(_ == n)).sortWith(_ < _)", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactors = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrime = mutable.ListBuffer[Boolean]()\n        val\
    \ isPrimeFactorsPrimePrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrime", "  \
    \      val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCount2\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount3 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount4 = mutable.ListBuffer[Long]()\n        val factorizationCount5\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount6 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount7 = mutable.ListBuffer[Long]()\n        val factorizationCount8\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount9 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount10 = mutable.ListBuffer[Long]()\n        val factorizationCount11\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount12 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount13 = mutable.ListBuffer[Long]()\n        val factorizationCount14\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount15 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount16 = mutable.ListBuffer[Long]()\n        val factorizationCount17\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount18 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount19 = mutable.ListBuffer[Long]()\n        val factorizationCount20\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount21 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount22 = mutable.ListBuffer[Long]()\n        val factorizationCount23\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount24 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount25 = mutable.ListBuffer[Long]()\n        val factorizationCount26\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount27 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount28 = mutable.ListBuffer[Long]()\n        val factorizationCount29\
    \ = ", "        val factors = mutable.ListBuffer[Long]()\n        val primes =\
    \ mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount2 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount3 = mutable.ListBuffer[Long]()\n        val factorizationCount4\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount5 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount6 = mutable.ListBuffer[Long]()\n        val factorizationCount7\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount8 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount9 = mutable.ListBuffer[Long]()\n        val factorizationCount10\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount11 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount12 = mutable.ListBuffer[Long]()\n        val factorizationCount13\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount14 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount15 = mutable.ListBuffer[Long]()\n        val factorizationCount16\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount17 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount18 = mutable.ListBuffer[Long]()\n        val factorizationCount19\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount20 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount21 = mutable.ListBuffer[Long]()\n        val factorizationCount22\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount23 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount24 = mutable.ListBuffer[Long]()\n        val factorizationCount25\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount26 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount27 = mutable.ListBuffer[Long]()\n        val factorizationCount28\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount29 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount30 = ", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationFactorsCount = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationFactorsCount2 = mutable.ArrayBuffer.empty[Long]\n     \
    \   val factorizationFactorsCount3 = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationFactorsCount4 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationFactorsCount5 = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount6\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount7 =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount8 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationFactorsCount9 = mutable.ArrayBuffer.empty[Long]\n  \
    \      val factorizationFactorsCount10 = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationFactorsCount11 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationFactorsCount12 = mutable.ArrayBuffer.empty[Long]\n     \
    \   val factorizationFactorsCount13 = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationFactorsCount14 = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationFactorsCount15 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationFactorsCount16 = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount18 =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorizationFactorsCount19 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationFactorsCount20 = mutable.ArrayBuffer.empty[Long]\n \
    \       val factorizationFactorsCount21 = mutable.ArrayBuffer.empty[Long]\n  \
    \      val factorizationFactorsCount22 = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationFactorsCount23 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationFactorsCount24 = mutable.ArrayBuffer.empty[Long]\n     \
    \   val factorizationFactorsCount25 = mut", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactors = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrime = mutable.ListBuffer[Boolean]()\n        val\
    \ isPrimeFactorsPrimePrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrime", "  \
    \      val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factorizationIndex = 0\n    \
    \    while(n != 1) {\n            factorizationIndex += 1\n            val factorizationIndex\
    \ = factorizationIndex % factorization.length\n            factorization += n\n\
    \            val factorization = factorization.toList\n            val factorizations\
    \ = factorizations.toList\n            val factorization = factorization.filterNot(_\
    \ == 1)\n            factorizations += factorization\n            val factorization\
    \ = factorization.filter(_ == 1)\n            factorizations += factorization\n\
    \            n /= factorization\n        }\n        factorizations.toList", " \
    \       val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val factorization\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isFactorization = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n", "        val factorization = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactors = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimeFactorizationPrimeFactors = mutable.ListBuffer[Boolean]()\n   \
    \     val isPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactors = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactors\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactors\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactors\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime",
  "        val factors = mutable.ListBuffer[Long]()\n        val factorization = factorization(n)\n\
    \        factorization foreach { f =>\n            factors += f\n        }\n \
    \       factors", "        val factors = mutable.ListBuffer.empty[Long]\n    \
    \    val factorization = factorization(n) \n        factorization foreach { x\
    \ => factors += x }\n        factors", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount2 = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCount3 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCount4 = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCount7 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCount8 = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount9\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount10 = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCount11 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCount12 = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount13\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount14 = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCount15 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCount16 = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCount19 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCount20 = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount21\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount22 = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCount23 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCount24 = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount25\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorsCount26 = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorsCount27 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorsCount28 = mutable.ArrayBuffer.", "        val factorization = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val factors = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val factorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val factorizationFactors = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorsCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationFactorsCount = mutable.ListBuffer[Long]()\n        val\
    \ factorizationPrimeFactorsCount2 = mutable.ListBuffer[Long]()\n        val factorizationFactorsCount2\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorsCount3 =\
    \ mutable.ListBuffer[Long]()\n        val factorizationFactorsCount3 = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorsCount4 = mutable.ListBuffer[Long]()\n  \
    \      val factorizationFactorsCount4 = mutable.ListBuffer[Long]()\n        val\
    \ factorizationPrimeFactorsCount5 = mutable.ListBuffer[Long]()\n        val factorizationFactorsCount5\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorsCount6 =\
    \ mutable.ListBuffer[Long]()\n        val factorizationFactorsCount6 = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorsCount7 = mutable.ListBuffer[Long]()\n  \
    \      val factorizationFactorsCount7 = mutable.ListBuffer[Long]()\n        val\
    \ factorizationPrimeFactorsCount8 = mutable.ListBuffer[Long]()\n        val factorizationFactorsCount8\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorsCount9 =\
    \ mutable.ListBuffer[Long]()\n        val factorizationFactorsCount9 = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorsCount10 = mutable.ListBuffer[Long]()\n \
    \       val factorizationFactorsCount10 = mutable.ListBuffer[Long]()\n       \
    \ val factorizationPrimeFactorsCount11 = mutable.ListBuffer[Long]()\n        val\
    \ factorizationFactorsCount11 = mutable.ListBuffer[Long]()\n        ", "     \
    \   val factors = mutable.ArrayBuffer.empty[Long]\n        val factorization =\
    \ mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactors = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSum = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSums = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumOfSquares = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumOfSquaresOfSquares = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorsCountSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = mutable.ArrayBuffer.empty[", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount2 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount3 = mutable.ListBuffer[Long]()\n        val factorizationCount4\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount5 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount6 = mutable.ListBuffer[Long]()\n        val factorizationCount7\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount8 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount9 = mutable.ListBuffer[Long]()\n        val factorizationCount10\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount11 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount12 = mutable.ListBuffer[Long]()\n        val factorizationCount13\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount14 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount15 = mutable.ListBuffer[Long]()\n        val factorizationCount16\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount17 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount18 = mutable.ListBuffer[Long]()\n        val factorizationCount19\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount20 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount21 = mutable.ListBuffer[Long]()\n        val factorizationCount22\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount23 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount24 = mutable.ListBuffer[Long]()\n        val factorizationCount25\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount26 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount27 = mutable.ListBuffer[Long]()\n        val factorizationCount28\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount29 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount30 = ", "        val factors = mutable.ListBuffer.empty[Long]\n\
    \        val primes = mutable.ListBuffer.empty[Long]\n        val factorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorization = mutable.ListBuffer.empty[Long]\n\
    \        val factorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizationPrimes = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactors = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCount = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCounts = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSum = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSums = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumsSum = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumsSums = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumsSumsSum = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumsSumsSums = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumsSumsSumsSum = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumsSumsSumsSums = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumsSumsSumsSumsSum = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumsSumsSumsSumsSums = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumsSumsSumsSumsSumsSum = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumsSumsSumsSumsSumsSums = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorsCountSumsSumsSumsSumsSumsSumsSum =\
    \ mutable.ListBuffer.empty[Long]\n        val primeFactorizationPrimeFactors",
  "        val factors = mutable.ListBuffer.empty[Long]\n        val primes = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ListBuffer.empty[Long]\n        val factorization\
    \ = mutable.ListBuffer.empty[Long]\n        val isPrime = mutable.ListBuffer.empty[Boolean]\n\
    \        val isFactorization = mutable.ListBuffer.empty[Boolean]\n        val\
    \ isPrimeFactorization = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrime\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationFactorization\
    \ = mutable.ListBuffer.empty[Boolean]\n", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        var factor = 1\n        while(factor < n) {\n            while(n % factor\
    \ == 0) {\n                factorization += factor\n                n /= factor\n\
    \            }\n            factor += 1\n        }\n        factorization.toList",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount", "      \
    \  val factors = mutable.ListBuffer[Long]()\n        val factorization = factorization(n)\
    \ //factorization is list of prime factors of n\n        factorization.foreach\
    \ { f =>\n            val factorCount = factors.count(f => f == f)\n         \
    \   if (factorCount == 0) factors += f\n        }\n        factors.toList", " \
    \       val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.Array", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = ", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val factorization = factorization(n)\n        factorization.foreach(f\
    \ => factors += f)\n        factors", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationPrimes = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPri",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization2 = mutable.ListBuffer[Long]()\n        val primeFactorization3\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization4 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization5 = mutable.ListBuffer[Long]()\n        val primeFactorization6\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization7 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization8 = mutable.ListBuffer[Long]()\n        val primeFactorization9\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization10 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization11 = mutable.ListBuffer[Long]()\n        val primeFactorization12\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization13 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization14 = mutable.ListBuffer[Long]()\n        val primeFactorization15\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization16 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization17 = mutable.ListBuffer[Long]()\n        val primeFactorization18\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization19 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization20 = mutable.ListBuffer[Long]()\n        val primeFactorization21\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization22 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization23 = mutable.ListBuffer[Long]()\n        val primeFactorization24\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization25 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization26 = mutable.ListBuffer[Long]()\n        val primeFactorization27\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization28 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization29 = mutable.ListBuffer[Long]()\n        val primeFactorization",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationSize = n\n        val primeFactorizationSize = factorizationSize\
    \ / 2\n        val factorizationPrimes = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationPrimeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationSize = factorizationPrimes.size\n\
    \        val factorizationPrimeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationPrimeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationSize = factorizationPrimeFactorizationPrimes.size\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationSize\
    \ = factorizationPrimeFactorizationPrimeFactorization.size\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationSize\
    \ = factorizationPrimeFactorizationPrimeFactorizationPrimeFactorization.size\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationSize\
    \ = factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization.size\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorization",
  "        val factorization = mutable.ListBuffer[Long]()\n        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeRev = mutable.ListBuffer[Boolean]()\n        val isPrimeRev2\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeRev3 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeRev4 = mutable.ListBuffer[Boolean]()\n        val isPrimeRev5\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeRev6 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeRev7 = mutable.ListBuffer[Boolean]()\n        val isPrimeRev8\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeRev9 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeRev10 = mutable.ListBuffer[Boolean]()\n        val isPrimeRev11\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeRev12 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeRev13 = mutable.ListBuffer[Boolean]()\n        val isPrimeRev14\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeRev15 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeRev16 = mutable.ListBuffer[Boolean]()\n        val isPrimeRev17\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeRev18 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeRev19 = mutable.ListBuffer[Boolean]()\n        val isPrimeRev20\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeRev21 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeRev22 = mutable.ListBuffer[Boolean]()\n        val isPrimeRev23\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeRev24 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeRev25 = mutable.ListBuffer[Boolean]()\n        val isPrimeRev26\
    \ = mutable.ListBuffer[Boolean]()\n        val isPri", "        val factorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizations = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = ", "        val factors = mutable.ListBuffer[Long]()\n        val factorization\
    \ = factorizations(n)\n        factorization.foreach(f => factors += f)\n    \
    \    factors", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationSize = n\n     \
    \   val primeFactorizationSize = factorizationSize / 2\n        val primeFactorizationSize2\
    \ = primeFactorizationSize / 2\n        val primeFactorizationSize3 = primeFactorizationSize2\
    \ / 2\n        val primeFactorizationSize4 = primeFactorizationSize3 / 2\n   \
    \     val primeFactorizationSize5 = primeFactorizationSize4 / 2\n        val primeFactorizationSize6\
    \ = primeFactorizationSize5 / 2\n        val primeFactorizationSize7 = primeFactorizationSize6\
    \ / 2\n        val primeFactorizationSize8 = primeFactorizationSize7 / 2\n   \
    \     val primeFactorizationSize9 = primeFactorizationSize8 / 2\n        val primeFactorizationSize10\
    \ = primeFactorizationSize9 / 2\n        val primeFactorizationSize11 = primeFactorizationSize10\
    \ / 2\n        val primeFactorizationSize12 = primeFactorizationSize11 / 2\n \
    \       val primeFactorizationSize13 = primeFactorizationSize12 / 2\n        val\
    \ primeFactorizationSize14 = primeFactorizationSize13 / 2\n        val primeFactorizationSize15\
    \ = primeFactorizationSize14 / 2\n        val primeFactorizationSize16 = primeFactorizationSize15\
    \ / 2\n        val primeFactorizationSize17 = primeFactorizationSize16 / 2\n \
    \       val primeFactorizationSize18 = primeFactorizationSize17 / 2\n        val\
    \ primeFactorizationSize19 = primeFactorizationSize18 / 2\n        val primeFactorizationSize20\
    \ = primeFactorizationSize19 / 2\n        val primeFactorizationSize21 = primeFactorizationSize20\
    \ / 2\n        val primeFactorizationSize22 = primeFactorizationSize21 / 2\n \
    \       val primeFactorizationSize23 = primeFactorizationSize22 / 2\n        val\
    \ primeFactorizationSize24 = primeFactorizationSize23 / 2\n        val primeFactorizationSize25\
    \ = primeFactorizationSize24 / 2\n        val primeFactorizationSize26 = primeFactorizationSize25\
    \ / 2\n        val primeFactorizationSize27 = primeFactorizationSize26 / 2\n \
    \       val primeFactorizationSize28 = primeFactorizationSize27 / 2\n        val\
    \ primeFactorizationSize29 = primeFactorizationSize28 / 2\n        val primeFactorizationSize30\
    \ = primeFactorizationSize29 / 2\n", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        var factor = 2\n        var factorCount = 0\n        while (n > 1) {\n\
    \            if (n % factor == 0) {\n                factorCount += 1\n      \
    \          factorization += factor\n                n /= factor\n            }\
    \ else {\n                factor += 1\n                factorCount += 1\n    \
    \        }\n        }\n        factorization.reverse", "        val factorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizations = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = ", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorization",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factor", "        val factors = mutable.ListBuffer[Long]()\n    \
    \    val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount2 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount3 = mutable.ListBuffer[Long]()\n        val factorizationCount4\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount5 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount6 = mutable.ListBuffer[Long]()\n        val factorizationCount7\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount8 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount9 = mutable.ListBuffer[Long]()\n        val factorizationCount10\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount11 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount12 = mutable.ListBuffer[Long]()\n        val factorizationCount13\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount14 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount15 = mutable.ListBuffer[Long]()\n        val factorizationCount16\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount17 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount18 = mutable.ListBuffer[Long]()\n        val factorizationCount19\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount20 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount21 = mutable.ListBuffer[Long]()\n        val factorizationCount22\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount23 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount24 = mutable.ListBuffer[Long]()\n        val factorizationCount25\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount26 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount27 = mutable.ListBuffer[Long]()\n        val factorizationCount28\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount29 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount30 = ", "        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorization = factorization(n) //factorization is list of factors\
    \ of given number\n        factorization.foreach { f =>\n            factors +=\
    \ f\n        }\n        factors", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountOfFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountOfFactorizations = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountOfFactorizationOfFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountOfFactorizationOfFactorizations = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountOfFactorizationOfFactorizationOfFactorization =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorizationCountOfFactorizationOfFactorizationOfFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountOfFactorizationOfFactorizationOfFactorizationOfFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val factorization = factorizations(n)\n        factorization.foreach(f\
    \ => factors += f)\n        factors", "        val factorization = mutable.ListBuffer.empty[Long]\n\
    \        val factorizations = mutable.ListBuffer.empty[Long]\n        val primes\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizations = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ListBuffer.empty[Long]\n        val\
    \ primeFactorizations = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = ", "        val factors = mutable.ListBuffer[Long]()\n        val primes =\
    \ mutable.ListBuffer[Long]()\n        val factorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount2 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount3 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount4 = mutable.ListBuffer[Long]()\n        val primeFactorizationCount5\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount6 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount7 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount8 = mutable.ListBuffer[Long]()\n        val primeFactorizationCount9\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount10 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount11 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount12 = mutable.ListBuffer[Long]()\n        val primeFactorizationCount13\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount14 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount15 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount16 = mutable.ListBuffer[Long]()\n        val primeFactorizationCount17\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount18 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount19 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount20 = mutable.ListBuffer[Long]()\n        val primeFactorizationCount21\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount22 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount23 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount24 = mutable.ListBuffer[Long]()\n        val primeFactorizationCount25\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount26 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount27 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount28 = mutable.List", "        val factors = mutable.ListBuffer.empty[Long]\n\
    \        val primes = mutable.ListBuffer.empty[Long]\n        val primeFactors\
    \ = mutable.ListBuffer.empty[Long]\n        val factorization = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ListBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ListBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ListBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ListBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ListBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ListBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ListBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ListBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty", "        val factors\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList2 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList3 = mutable.ListBuffer[Long]()\n        val primeFactorizationList4\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList5 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList6 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList7 = mutable.ListBuffer[Long]()\n        val primeFactorizationList8\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList9 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList10 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList11 = mutable.ListBuffer[Long]()\n        val primeFactorizationList12\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList13 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList14 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList15 = mutable.ListBuffer[Long]()\n        val primeFactorizationList16\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList17 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList18 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList19 = mutable.ListBuffer[Long]()\n        val primeFactorizationList20\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList21 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList22 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList23 = mutable.ListBuffer[Long]()\n        val primeFactorizationList24\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList25 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList26 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList27 = mutable.ListBuffer[Long]()\n        val primeFactorizationList28\
    \ = mutable.List", "        val factors = mutable.ListBuffer[Long]()\n       \
    \ val factorization = factorizations(n)\n        factorization.foreach(f => factors\
    \ += f)\n        factors", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val factorization = factorization(n) \n        for (i <- factorization.indices)\
    \ {\n            val factorCount = factorization(i)\n            factors += factorCount\n\
    \        }\n        factors.toList", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorization = mutable.ListBuffer[Boolean]()\n        val\
    \ isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactor",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isPrimeFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactors = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrimePrimePrime = mutable.ListBuffer[Boolean]()\n \
    \       val isPrimeFactorsPrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsPrimePrime", "  \
    \      val factorization = mutable.ArrayBuffer.empty[Long]\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationSize = n\n        val primeFactorizationSize = factorizationSize\
    \ / 2\n        val primeFactorizationSize2 = primeFactorizationSize / 2\n    \
    \    val primeFactorizationSize3 = primeFactorizationSize2 / 2\n        val primeFactorizationSize4\
    \ = primeFactorizationSize3 / 2\n        val primeFactorizationSize5 = primeFactorizationSize4\
    \ / 2\n        val primeFactorizationSize6 = primeFactorizationSize5 / 2\n   \
    \     val primeFactorizationSize7 = primeFactorizationSize6 / 2\n        val primeFactorizationSize8\
    \ = primeFactorizationSize7 / 2\n        val primeFactorizationSize9 = primeFactorizationSize8\
    \ / 2\n        val primeFactorizationSize10 = primeFactorizationSize9 / 2\n  \
    \      val primeFactorizationSize11 = primeFactorizationSize10 / 2\n        val\
    \ primeFactorizationSize12 = primeFactorizationSize11 / 2\n        val primeFactorizationSize13\
    \ = primeFactorizationSize12 / 2\n        val primeFactorizationSize14 = primeFactorizationSize13\
    \ / 2\n        val primeFactorizationSize15 = primeFactorizationSize14 / 2\n \
    \       val primeFactorizationSize16 = primeFactorizationSize15 / 2\n        val\
    \ primeFactorizationSize17 = primeFactorizationSize16 / 2\n        val primeFactorizationSize18\
    \ = primeFactorizationSize17 / 2\n        val primeFactorizationSize19 = primeFactorizationSize18\
    \ / 2\n        val primeFactorizationSize20 = primeFactorizationSize19 / 2\n \
    \       val primeFactorizationSize21 = primeFactorizationSize20 / 2\n        val\
    \ primeFactorizationSize22 = primeFactorizationSize21 / 2\n        val primeFactorizationSize23\
    \ = primeFactorizationSize22 / 2\n        val primeFactorizationSize24 = primeFactorizationSize23\
    \ / 2\n        val primeFactorizationSize25 = primeFactorizationSize24 / 2\n \
    \       val primeFactorizationSize26 = primeFactorizationSize25 / 2\n        val\
    \ primeFactorizationSize27 = primeFactorizationSize26 / 2\n        val primeFactorizationSize28\
    \ = primeFactorizationSize27 / 2\n        val primeFactorizationSize29 = primeFactorizationSize28\
    \ / 2\n        val primeFactorizationSize30 = primeFactorizationSize29 / 2\n",
  "        val factorization = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val isPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationInOrder = mutable.ListBuffer[Boolean]()\n   \
    \     val isPrimeFactorizationInOrderInOrder = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationInOrderInOrderInOrder = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationInOrderInOrderInOrderInOrder = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrder = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrder =\
    \ mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationIn", "    \
    \    val factorization = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimeFactorizationPrimeCount = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPri", "   \
    \     val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationCountList2 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountList3 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList4\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList5 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList6 = mutable.ArrayBuffer.empty[Long]\n     \
    \   val factorizationCountList7 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountList8 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList9\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList10 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList11 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationCountList12 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountList13 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList14\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList15 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList16 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationCountList17 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountList18 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList19\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList20 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList21 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationCountList22 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountList23 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList24\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList25 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList26 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationCountList27 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountList28 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList29",
  "        val factors = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val factorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty",
  "        val factorization = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val factors =\
    \ mutable.ListBuffer[Long]()\n        val factorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCounts\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMax = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountMaxs = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountMin = mutable.ListBuffer[Long]()\n        val factorizationCountMins\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountSum = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSums = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountSumMax = mutable.ListBuffer[Long]()\n        val factorizationCountSumMaxs\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountSumMin = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumMins = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountSumSum = mutable.ListBuffer[Long]()\n        val factorizationCountSumSums\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountSumSumMax = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumSumMaxs = mutable.ListBuffer[Long]()\n     \
    \   val factorizationCountSumSumMin = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountSumSumMins = mutable.ListBuffer[Long]()\n        val factorizationCountSumSumSum\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountSumSumSumMax = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountSumSumSumMaxs = mutable.ListBuffer[Long]()\n  \
    \      val factorizationCountSumSumSumMin = mutable.ListBuffer[Long]()\n     \
    \   val factorizationCountSumSumSumMins = mutable.ListBuffer[Long]()\n       \
    \ val factorizationCountSumSumSumSum = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountSumSumSumSumMax = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountSumSumSumSumMaxs = mut", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactors\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsSet = mutable.Set[Boolean]()\n\
    \        val isPrimeFactorsSetSet = mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSet\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSet = mutable.Set[Boolean]()\n\
    \        val isPrimeFactorsSetSetSetSetSet = mutable.Set[Boolean]()\n        val\
    \ isPrimeFactorsSetSetSetSetSetSet = mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSet\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSet =\
    \ mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSetSet =\
    \ mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSetSet =\
    \ mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSetSet =\
    \ mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSetSet =\
    \ mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSetSetSet\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSetSetSet\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSetSetSetSet\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSetSetSetSet\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSetSetSetSet\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSetSetSetSet\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSetSetSetSetSetSetSetSetSetSet\
    \ = mutable.Set[Boolean]()\n        val ", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationList = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationList = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationList = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationList = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationList = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationList = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationList = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationList = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationList = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationList = mutable.Array",
  "        val factors = mutable.ListBuffer.empty[Long]\n        val primes = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ListBuffer.empty[Long]\n        val factorization\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCounts = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCounts_prime = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_prime_prime_prime_prime_prime_prime",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isPrimeFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactor2 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor3\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor4 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactor5 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor6\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor7 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactor8 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor9\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor10 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactor11 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor12\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor13 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactor14 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor15\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor16 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactor17 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor18\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor19 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactor20 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor21\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor22 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactor23 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor24\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor25 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactor26 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor27\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactor28 = mutable.", " \
    \       val factorization = mutable.ArrayBuffer.empty[Long]\n        factorize(n,\
    \ factorization)\n        factorization.toList", "        val factorization =\
    \ mutable.ListBuffer[Long]()\n        val factorizations = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimes = mutable.ListBuffer[Long]()\n        val factorizationPrime\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizations =\
    \ mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorization = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrime = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPri",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.Array", "        val factorization = mutable.ListBuffer[Long]()\n\
    \        val factors = mutable.ListBuffer[Long]()\n        val factorizations\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.List", "        val factorization =\
    \ mutable.ArrayBuffer.empty[Long]\n        val factorizations = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n    \
    \    val primeFactorizationPrime = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorizationPrimeFactorization = mutable.ArrayBuffer.empty[Long]\n   \
    \     val primeFactorizationPrimeFactorizationPrime = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorizationPrimeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = ", "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationSize = n\n        val primeFactorizationSize = factorizationSize\
    \ / 2\n        val factorizationPrimes = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationPrimeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationSize = factorizationPrimes.size /\
    \ 2\n        val factorizationPrimeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationPrimeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationSize = factorizationPrimeFactorizationPrimes.size\
    \ / 2\n        val factorizationPrimeFactorizationPrimeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationSize\
    \ = factorizationPrimeFactorizationPrimeFactorization.size / 2\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationSize\
    \ = factorizationPrimeFactorizationPrimeFactorizationPrimes.size / 2\n       \
    \ val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationSize\
    \ = factorizationPrimeFactorizationPrimeFactorizationPrimeFactorization.size /\
    \ 2\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorizationPrimeFactorizationPrime",
  "        val factors = mutable.ListBuffer.empty[Long]\n        val primes = mutable.ListBuffer.empty[Long]\n\
    \        val factorization = mutable.ListBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ListBuffer.empty[Long]\n        val primeFactorizationCount = mutable.ListBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ListBuffer.empty[Long]\n        val\
    \ factorizationCounts = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes_primes_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes_primes_primes_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = mutable.ListBuffer.empty[Long]\n        val factorizationCounts_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationIn", " \
    \       val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCounts_ = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCounts_ = ", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactors\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorsIndex = mutable.ListBuffer[Int]()\n\
    \        val isPrimeFactorsIndexIndex = mutable.ListBuffer[Int]()\n        val\
    \ isPrimeFactorsIndexIndexIndex = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = mutable.ListBuffer[Int]()\n        val isPrimeFactorsIndexIndexIndexIndexIndex",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        var factor\
    \ = 1\n        while (n > 1) {\n            while (n % factor == 0) {\n      \
    \          factorization += factor\n                n /= factor\n            }\n\
    \            factor += 1\n        }\n        factorization.toList", "        val\
    \ factors = mutable.ListBuffer.empty[Long]\n        var i = 2\n        while (i\
    \ <= n) {\n            if (n % i == 0) {\n                factors += i\n     \
    \           n /= i\n            }\n            i += 1\n        }\n        factors",
  "        val factors = mutable.ListBuffer[Long]()\n        val factorization = factorization(n);\n\
    \        factorization.foreach(x => factors += x)\n        factors", "       \
    \ val factors = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i\
    \ <= n) {\n            if (n % i == 0) {\n                factors += i\n     \
    \           n /= i\n            }\n            i += 1\n        }\n        factors.toList",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        var i = 2L\n        while (i <= n) {\n\
    \            if (n % i == 0) {\n                factors.append(i)\n          \
    \      factors.append(n / i)\n                factors.append(n / i * i)\n    \
    \            factors.append(n / i * i * i)\n                factors.append(n /\
    \ i * i * i * i)\n                factors.append(n / i * i * i * i * i)\n    \
    \            factors.append(n / i * i * i * i * i * i)\n                factors.append(n\
    \ / i * i * i * i * i * i * i)\n                factors.append(n / i * i * i *\
    \ i * i * i * i * i)\n                factors.append(n / i * i * i * i * i * i\
    \ * i * i * i)\n                factors.append(n / i * i * i * i * i * i * i *\
    \ i * i * i)\n                factors.append(n / i * i * i * i * i * i * i * i\
    \ * i * i * i)\n                factors.append(n / i * i * i * i * i * i * i *\
    \ i * i * i * i * i)\n                factors.append(n / i * i * i * i * i * i\
    \ * i * i * i * i * i * i * i)\n                factors.append(n / i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i)\n                factors.append(n\
    \ / i * i * i * i * i * i * i * i * i * i * i * i * i * i * i)\n             \
    \   factors.append(n / i * i * i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i)\n                factors.append(n / i * i * i * i * i * i * i * i * i * i\
    \ * i * i * i * i * i)\n                factors.append(n / i * i * i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i)\n                factors.append(n / i\
    \ * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i)\n             \
    \   factors.append(n / i * i * i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i * i)\n                factors.append(n / i * i * i * i * i * i * i * i * i\
    \ * i * i * i * i * i * i * i)\n                factors.append(n / i * i * i *\
    \ i * i * i * i * i * i * i * i * i * i * i * i * i)\n                factors.append(n\
    \ / i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i)\n         \
    \       factors.append(n / i * i * i * i * i * i * i * i * i * i * i * i * i *\
    \ i * i * i)\n                factors.append(n / i * i * i * i * i * i * i * i\
    \ * i * i * i * i * i * i * i * i * i)\n                factors.append(n / i *\
    \ i * i * i * i * ", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationList = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSize = mutable.ArrayBuffer.empty[Long]\n       \
    \ val factorizationListSizeSize = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationListSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationListSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n      \
    \  val factorizationListSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n \
    \       val factorizationListSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationListSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSizeSize",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        var factor\
    \ = 2\n        while (factor <= n) {\n            if (n % factor == 0) {\n   \
    \             factorization += factor\n                n /= factor\n         \
    \   } else {\n                factor += 1\n            }\n        }\n        factorization.toList",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationSize = n\n        val primesSize = factorizationSize\
    \ / 2\n        val primeFactorizationSize = primesSize * 2\n        val primeFactorizationBuffer\
    \ = new Array[Long](primeFactorizationSize)\n        val factorizationBuffer =\
    \ new Array[Long](factorizationSize)\n        val primeFactorizationBuffer = new\
    \ Array[Long](primeFactorizationSize)\n        val factorizationBuffer = new Array[Long](factorizationSize)\n\
    \        val primeFactorizationBuffer = new Array[Long](primeFactorizationSize)\n\
    \        val factorizationBuffer = new Array[Long](factorizationSize)\n      \
    \  val primeFactorizationBuffer = new Array[Long](primeFactorizationSize)\n  \
    \      val factorizationBuffer = new Array[Long](factorizationSize)\n        val\
    \ primeFactorizationBuffer = new Array[Long](primeFactorizationSize)\n       \
    \ val factorizationBuffer = new Array[Long](factorizationSize)\n        val primeFactorizationBuffer\
    \ = new Array[Long](primeFactorizationSize)\n        val factorizationBuffer =\
    \ new Array[Long](factorizationSize)\n        val primeFactorizationBuffer = new\
    \ Array[Long](primeFactorizationSize)\n        val factorizationBuffer = new Array[Long](factorizationSize)\n\
    \        val primeFactorizationBuffer = new Array[Long](primeFactorizationSize)\n\
    \        val factorizationBuffer = new Array[Long](factorizationSize)\n      \
    \  val primeFactorizationBuffer = new Array[Long](primeFactorizationSize)\n  \
    \      val factorizationBuffer = new Array[Long](factorizationSize)\n        val\
    \ primeFactorizationBuffer = new Array[Long](primeFactorizationSize)\n       \
    \ val factorizationBuffer = new Array[Long](factorizationSize)\n        val primeFactorizationBuffer\
    \ = new Array[Long](primeFactorizationSize)\n        val factorizationBuffer =\
    \ new Array[Long](factorizationSize)\n        val primeFactorizationBuffer = new\
    \ Array[Long](primeFactorizationSize)\n        val factorizationBuffer = new Array[Long](factorizationSize)\n\
    \        val primeFactorizationBuffer = new Array[Long](primeFactorizationSize)\n\
    \        val factorizationBuffer = new Array[Long](factorizationSize)\n      \
    \  val primeFactorizationBuffer = new Array[Long](primeFactorizationSize)\n  \
    \      val factorizationBuffer = new Array", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val factorization = factorization(n) \n        for (factor <- factorization)\
    \ {\n            factors += factor\n        }\n        factors.toList", "    \
    \    val factors = mutable.ListBuffer[Long]()\n        val factorization = factorization(n)\
    \ //factorization is list of factors of given number\n        factorization foreach\
    \ { factor =>\n            factors += factor\n        }\n        factors", " \
    \       val factors = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactors = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeFactorsOfPrimes = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrimes\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrimeFactorOfPrimes\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrimeFactorOfPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrimeFactorOfPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrimeFactorOfPrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimes\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsOfPrimeFactorOfPrimeFactorOfPrimeFactorOfPrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        ", "        val factorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizations_count = mutable.ListBuffer[Long]()\n        val factorizations_count_max\
    \ = mutable.ListBuffer[Long]()\n        val factorizations_count_min = mutable.ListBuffer[Long]()\n\
    \        val factorizations_count_min = mutable.ListBuffer[Long]()\n        val\
    \ factorizations_count_max = mutable.ListBuffer[Long]()\n        val factorizations_count_min\
    \ = mutable.ListBuffer[Long]()\n        val factorizations_count_max = mutable.ListBuffer[Long]()\n\
    \        val factorizations_count_min = mutable.ListBuffer[Long]()\n        val\
    \ factorizations_count_max = mutable.ListBuffer[Long]()\n        val factorizations_count_min\
    \ = mutable.ListBuffer[Long]()\n        val factorizations_count_max = mutable.ListBuffer[Long]()\n\
    \        val factorizations_count_min = mutable.ListBuffer[Long]()\n        val\
    \ factorizations_count_max = mutable.ListBuffer[Long]()\n        val factorizations_count_min\
    \ = mutable.ListBuffer[Long]()\n        val factorizations_count_max = mutable.ListBuffer[Long]()\n\
    \        val factorizations_count_min = mutable.ListBuffer[Long]()\n        val\
    \ factorizations_count_max = mutable.ListBuffer[Long]()\n        val factorizations_count_min\
    \ = mutable.ListBuffer[Long]()\n        val factorizations_count_max = mutable.ListBuffer[Long]()\n\
    \        val factorizations_count_min = mutable.ListBuffer[Long]()\n        val\
    \ factorizations_count_max = mutable.ListBuffer[Long]()\n        val factorizations_count_min\
    \ = mutable.ListBuffer[Long]()\n        val factorizations_count_max = mutable.ListBuffer[Long]()\n\
    \        val factorizations_count_min = mutable.ListBuffer[Long]()\n        val\
    \ factorizations_count_max = mutable.ListBuffer[Long]()\n        val factorizations_count_min\
    \ = mutable.ListBuffer[Long]()\n        val factorizations_count_max = mutable.ListBuffer[Long]()\n\
    \        val factorizations_count_min = mutable.ListBuffer[Long]()\n        val\
    \ factorizations_count_max = mutable.ListBuffer[Long]()\n        val factorizations_count_min\
    \ = mutable.ListBuffer[Long]()\n        val factorizations_", "        val factors\
    \ = mutable.ListBuffer[Long]()\n        val factorization = factorization(n) \n\
    \        factorization.foreach { f =>\n            factors += f\n        }\n \
    \       factors.toList", "        val factors = mutable.ListBuffer[Long]()\n \
    \       var i = 2\n        while (i <= n / i) {\n            if (n % i == 0) {\n\
    \                factors += i\n                n /= i\n            }\n       \
    \     i += 1\n        }\n        factors.toList", "        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorization\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = mutable.ArrayBuffer.empty[Boolean", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val factorization = factorization(n) //factorization is list of factors\
    \ of n\n        factorization.foreach(factor => factors += factor)\n        factors",
  "        val factors = mutable.ListBuffer.empty[Long]\n        val factorization\
    \ = factorization(n)\n        factorization foreach { f =>\n            factors\
    \ += f\n        }\n        factors", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationList = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList2 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList3 = mutable.ArrayBuffer.empty[Long]\n     \
    \   val factorizationCountList4 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountList5 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList6\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList7 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList8 = mutable.ArrayBuffer.empty[Long]\n     \
    \   val factorizationCountList9 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountList10 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList13 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationCountList14 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountList15 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList16\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList17 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList18 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationCountList19 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountList20 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList21\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList22 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList23 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationCountList24 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCountList25 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList26\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCountList27 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountList28 = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationCountList29", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationSize = n\n     \
    \   val primeFactorizationSize = factorizationSize / 2\n        val primeFactorizationSize2\
    \ = primeFactorizationSize / 2\n        val primeFactorizationSize3 = primeFactorizationSize2\
    \ / 2\n        val primeFactorizationSize4 = primeFactorizationSize3 / 2\n   \
    \     val primeFactorizationSize5 = primeFactorizationSize4 / 2\n        val primeFactorizationSize6\
    \ = primeFactorizationSize5 / 2\n        val primeFactorizationSize7 = primeFactorizationSize6\
    \ / 2\n        val primeFactorizationSize8 = primeFactorizationSize7 / 2\n   \
    \     val primeFactorizationSize9 = primeFactorizationSize8 / 2\n        val primeFactorizationSize10\
    \ = primeFactorizationSize9 / 2\n        val primeFactorizationSize11 = primeFactorizationSize10\
    \ / 2\n        val primeFactorizationSize12 = primeFactorizationSize11 / 2\n \
    \       val primeFactorizationSize13 = primeFactorizationSize12 / 2\n        val\
    \ primeFactorizationSize14 = primeFactorizationSize13 / 2\n        val primeFactorizationSize15\
    \ = primeFactorizationSize14 / 2\n        val primeFactorizationSize16 = primeFactorizationSize15\
    \ / 2\n        val primeFactorizationSize17 = primeFactorizationSize16 / 2\n \
    \       val primeFactorizationSize18 = primeFactorizationSize17 / 2\n        val\
    \ primeFactorizationSize19 = primeFactorizationSize18 / 2\n        val primeFactorizationSize20\
    \ = primeFactorizationSize19 / 2\n        val primeFactorizationSize21 = primeFactorizationSize20\
    \ / 2\n        val primeFactorizationSize22 = primeFactorizationSize21 / 2\n \
    \       val primeFactorizationSize23 = primeFactorizationSize22 / 2\n        val\
    \ primeFactorizationSize24 = primeFactorizationSize23 / 2\n        val primeFactorizationSize25\
    \ = primeFactorizationSize24 / 2\n        val primeFactorizationSize26 = primeFactorizationSize25\
    \ / 2\n        val primeFactorizationSize27 = primeFactorizationSize26 / 2\n \
    \       val primeFactorizationSize28 = primeFactorizationSize27 / 2\n        val\
    \ primeFactorizationSize29 = primeFactorizationSize28 / 2\n        val primeFactorizationSize30\
    \ = primeFactorizationSize29 / 2\n", "        val factors = mutable.ListBuffer[Long]()\n\
    \        var i = 2L\n        while (i <= n / i) {\n            if (n % i == 0)\
    \ {\n                factors += i\n                n /= i\n            }\n   \
    \         i += 1\n        }\n        if (n > 1) {\n            factors += n\n\
    \        }\n        factors.toList", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val factorization = factorization(n) \n        for (i <- factorization.indices)\
    \ {\n            val count = factorization(i)\n            val factor = factors(i)\n\
    \            factors += factor * count\n        }\n        factors.toList", " \
    \       val factorization = mutable.ListBuffer[Long]()\n        val factorizations\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrime = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationPrimeFactorizations = mutable.ListBuffer[Long]()\n       \
    \ val primeFactorizationPrimeFactorization = mutable.ListBuffer[Long]()\n    \
    \    val primeFactorizationPrimeFactorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorizationPrimeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = ", "        val factorization = mutable.ListBuffer[Long]()\n        val primes\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrder = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationInOrderInOrder = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationInOrderInOrderInOrder = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationInOrderInOrderInOrderInOrder = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrder = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrder =\
    \ mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrderInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationInOrderInOrderInOrderInOrderInOrderInOrderIn",
  "        val factors = mutable.ListBuffer.empty[Long]\n        val factorization\
    \ = factorization(n)\n        factorization.foreach(f => factors += f)\n     \
    \   factors", "        val factorization = mutable.ArrayBuffer.empty[Long]\n \
    \       val primes = mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactors = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactors = mutable.ArrayBuffer.empty[Long]\n   \
    \     val factorizationPrimeFactorsCount = mutable.ArrayBuffer.empty[Long]\n \
    \       val factorizationFactorsCount = mutable.ArrayBuffer.empty[Long]\n    \
    \    val factorizationPrimeFactorsCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCountCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCountCountCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCountCountCountCountCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimeFactorsCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationPrimeFactorsCountCountCountCountCountCountCountCountCount",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val factorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimeFactorizationPrimeCount = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPri",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrime = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactor = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorPrime = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorPrimeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorPrimeFactor = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorPrimeFactorPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorPrimeFactorPrime = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorPrimeFactorPrimeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorPrimeFactorPrimeFactor = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrime = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactors =\
    \ mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactor\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrime\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrimeFactors\
    \ = mutable.ArrayBuffer.empty[Long]\n        ", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val factorization = factorization(n)\n        factorization foreach {\
    \ x =>\n            factors += x\n        }\n        factors", "        val factors\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val factorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount2 = mutable.ListBuffer[Long]()\n        val factorizationCount3\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount4 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount5 = mutable.ListBuffer[Long]()\n        val factorizationCount6\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount7 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount8 = mutable.ListBuffer[Long]()\n        val factorizationCount9\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount10 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount11 = mutable.ListBuffer[Long]()\n        val factorizationCount12\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount13 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount14 = mutable.ListBuffer[Long]()\n        val factorizationCount15\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount16 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount17 = mutable.ListBuffer[Long]()\n        val factorizationCount18\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount19 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount20 = mutable.ListBuffer[Long]()\n        val factorizationCount21\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount22 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount23 = mutable.ListBuffer[Long]()\n        val factorizationCount24\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount25 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount26 = mutable.ListBuffer[Long]()\n        val factorizationCount27\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount28 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount29 = mutable.ListBuffer[Long]()\n        val factorizationCount30\
    \ = ", "        val factors = mutable.ListBuffer[Long]()\n        val primes =\
    \ mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val factorizationSize\
    \ = n\n        val factorizationPrimes = mutable.ListBuffer[Long]()\n        val\
    \ factorizationPrimeFactors = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorsSize\
    \ = factorizationPrimes.size\n        val factorizationPrimeFactorsIndex = factorizationPrimeFactorsSize\
    \ - 1\n        val factorizationPrimeFactorsIndexSize = factorizationPrimeFactorsIndex\
    \ + 1\n        val factorizationPrimeFactorsIndexLast = factorizationPrimeFactorsIndexSize\
    \ - 1\n        val factorizationPrimeFactorsIndexLastSize = factorizationPrimeFactorsIndexLast\
    \ + 1\n        val factorizationPrimeFactorsIndexLastLast = factorizationPrimeFactorsIndexLastSize\
    \ - 1\n        val factorizationPrimeFactorsIndexLastLastSize = factorizationPrimeFactorsIndexLastLast\
    \ + 1\n        val factorizationPrimeFactorsIndexLastLastLast = factorizationPrimeFactorsIndexLastLastSize\
    \ - 1\n        val factorizationPrimeFactorsIndexLastLastLastSize = factorizationPrimeFactorsIndexLastLastLast\
    \ + 1\n        val factorizationPrimeFactorsIndexLastLastLastLast = factorizationPrimeFactorsIndexLastLastLastSize\
    \ - 1\n        val factorizationPrimeFactorsIndexLastLastLastLastSize = factorizationPrimeFactorsIndexLastLastLastLast\
    \ + 1\n        val factorizationPrimeFactorsIndexLastLastLastLastSize = factorizationPrimeFactorsIndexLastLastLastLastSize\
    \ - 1\n        val factorizationPrimeFactorsIndexLastLastLastLastLastSize = factorizationPrimeFactorsIndexLastLastLastLastSize\
    \ - 1\n        val factorizationPrimeFactorsIndexLastLastLastLastLastSize = factorizationPrimeFactorsIndexLastLastLastLastLastSize\
    \ - 1\n        val factorizationPrimeFactorsIndexLastLastLastLastLastLastSize\
    \ = factorizationPrimeFactorsIndexLastLastLastLastLastSize - 1\n        val factorizationPrimeFactorsIndexLastLastLastLastLastLastSize\
    \ = factorizationPrimeFactorsIndexLastLastLastLastLastSize - 1\n        val factorizationPrimeFactorsIndexLastLastLastLastLastLastSize\
    \ = factorizationPrimeFactorsIndexLastLast", "        val factorization = mutable.ListBuffer[Long]()\n\
    \        val factorizations = mutable.ListBuffer[Long]()\n        val factorizations_count\
    \ = mutable.ListBuffer[Long]()\n        val factorizations_count_max = mutable.ListBuffer[Long]()\n\
    \        val factorizations_count_max_index = mutable.ListBuffer[Int]()\n    \
    \    val factorizations_count_max_index2 = mutable.ListBuffer[Int]()\n       \
    \ val factorizations_count_max_index3 = mutable.ListBuffer[Int]()\n        val\
    \ factorizations_count_max_index4 = mutable.ListBuffer[Int]()\n        val factorizations_count_max_index5\
    \ = mutable.ListBuffer[Int]()\n        val factorizations_count_max_index6 = mutable.ListBuffer[Int]()\n\
    \        val factorizations_count_max_index7 = mutable.ListBuffer[Int]()\n   \
    \     val factorizations_count_max_index8 = mutable.ListBuffer[Int]()\n      \
    \  val factorizations_count_max_index9 = mutable.ListBuffer[Int]()\n        val\
    \ factorizations_count_max_index10 = mutable.ListBuffer[Int]()\n        val factorizations_count_max_index11\
    \ = mutable.ListBuffer[Int]()\n        val factorizations_count_max_index12 =\
    \ mutable.ListBuffer[Int]()\n        val factorizations_count_max_index13 = mutable.ListBuffer[Int]()\n\
    \        val factorizations_count_max_index14 = mutable.ListBuffer[Int]()\n  \
    \      val factorizations_count_max_index15 = mutable.ListBuffer[Int]()\n    \
    \    val factorizations_count_max_index16 = mutable.ListBuffer[Int]()\n      \
    \  val factorizations_count_max_index17 = mutable.ListBuffer[Int]()\n        val\
    \ factorizations_count_max_index18 = mutable.ListBuffer[Int]()\n        val factorizations_count_max_index19\
    \ = mutable.ListBuffer[Int]()\n        val factorizations_count_max_index20 =\
    \ mutable.ListBuffer[Int]()\n        val factorizations_count_max_index21 = mutable.ListBuffer[Int]()\n\
    \        val factorizations_count_max_index22 = mutable.ListBuffer[Int]()\n  \
    \      val factorizations_count_max_index23 = mutable.ListBuffer[Int]()\n    \
    \    val factorizations_count_max_index24 = mutable.ListBuffer[Int]()\n      \
    \  val factorizations_count_max_index25 = ", "        val factorization = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorization",
  "        val factorization = mutable.ListBuffer[Long]()\n        var factor = 2\n\
    \        while (factor <= n) {\n            if (n % factor == 0) {\n         \
    \       factorization += factor\n                while (factor <= n / factor)\
    \ {\n                    factor += factor\n                }\n            }\n\
    \            factor += 1\n        }\n        factorization.toList", "        val\
    \ factorization = mutable.ListBuffer[Long]()\n        val factorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCounts\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCounts_ = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts_ = mutable.ListBuffer[Long]()\n        val factorizationCounts_\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCounts_ = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts_ = mutable.ListBuffer[Long]()\n        val factorizationCounts_\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCounts_ = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts_ = mutable.ListBuffer[Long]()\n        val factorizationCounts_\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCounts_ = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts_ = mutable.ListBuffer[Long]()\n        val factorizationCounts_\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCounts_ = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts_ = mutable.ListBuffer[Long]()\n        val factorizationCounts_\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCounts_ = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts_ = mutable.ListBuffer[Long]()\n        val factorizationCounts_\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCounts_ = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts_ = mutable.ListBuffer[Long]()\n        val factorizationCounts_\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCounts_ = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts_ = mutable.ListBuffer[Long]()\n        val factorizationCounts_\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCounts_ = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts_ = mutable.ListBuffer[Long]()\n        val factorizationCounts_\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCounts_ = mutable.ListBuffer[Long]()\n\
    \        val factorizationCounts_ = ", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount2 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount3\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount4 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount5 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount6 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount7\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount8 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount9 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount10 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount11\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount12 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount13 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount14 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount15\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount16 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount17 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount18 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount19\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount20 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount21 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount22 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount23\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount24 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount25 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount26 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount27\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount28 = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount29 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount30 = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount31\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount32 = mutable.ArrayBuffer.empty[Long]",
  "        val factors = mutable.ListBuffer[Long]()\n        var i = 2\n        while\
    \ (i <= n / i) {\n            if (n % i == 0) {\n                factors += i\n\
    \                n /= i\n            }\n            i += 1\n        }\n      \
    \  factors.toList", "        val factors = mutable.ListBuffer[Long]()\n      \
    \  val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val factorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount = mutable.ListBuffer[Boolean]()\n        val isFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorization = mutable.ListBuffer[Boolean]()\n        val\
    \ isPrimeFactorizationCount = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationCount2\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationCount3 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationCount4 = mutable.ListBuffer[Boolean]()\n    \
    \    val isPrimeFactorizationCount5 = mutable.ListBuffer[Boolean]()\n        val\
    \ isPrimeFactorizationCount6 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationCount7\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationCount8 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationCount9 = mutable.ListBuffer[Boolean]()\n    \
    \    val isPrimeFactorizationCount10 = mutable.ListBuffer[Boolean]()\n       \
    \ val isPrimeFactorizationCount11 = mutable.ListBuffer[Boolean]()\n        val\
    \ isPrimeFactorizationCount12 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationCount13\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationCount14 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationCount15 = mutable.ListBuffer[Boolean]()\n   \
    \     val isPrimeFactorizationCount16 = mutable.ListBuffer[Boolean]()\n      \
    \  val isPrimeFactorizationCount17 = mutable.ListBuffer[Boolean]()\n        val\
    \ isPrimeFactorizationCount18 = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationCount19\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationCount20 = mutable.ListBuffer[Boolean]()\n",
  "        val factorization = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factors = mutable.ListBuffer[Long]()\n        val primeFactors =\
    \ mutable.ListBuffer[Long]()\n        val primeFactorsCount = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorsCount2\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount2 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount3 = mutable.ListBuffer[Long]()\n        val factorizationCount3\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount4 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount4 = mutable.ListBuffer[Long]()\n        val primeFactorsCount5\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount5 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount6 = mutable.ListBuffer[Long]()\n        val factorizationCount6\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount7 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount7 = mutable.ListBuffer[Long]()\n        val primeFactorsCount8\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount8 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount9 = mutable.ListBuffer[Long]()\n        val factorizationCount9\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount10 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount10 = mutable.ListBuffer[Long]()\n        val primeFactorsCount11\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount11 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount12 = mutable.ListBuffer[Long]()\n        val factorizationCount12\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount13 = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount13 = mutable.ListBuffer[Long]()\n        val primeFactorsCount14\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount14 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount15 = mutable.ListBuffer[Long]()\n        val factorizationCount",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization2 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization3 = mutable.ListBuffer[Long]()\n        val primeFactorization4\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization5 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization6 = mutable.ListBuffer[Long]()\n        val primeFactorization7\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization8 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization9 = mutable.ListBuffer[Long]()\n        val primeFactorization10\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization11 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization12 = mutable.ListBuffer[Long]()\n        val primeFactorization13\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization14 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization15 = mutable.ListBuffer[Long]()\n        val primeFactorization16\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization17 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization18 = mutable.ListBuffer[Long]()\n        val primeFactorization19\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization20 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization21 = mutable.ListBuffer[Long]()\n        val primeFactorization22\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization23 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization24 = mutable.ListBuffer[Long]()\n        val primeFactorization25\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization26 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization27 = mutable.ListBuffer[Long]()\n        val primeFactorization28\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization29 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization30 = mutable.ListBuffer[Long]()\n        val primeFactor",
  "        val factorization = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimeFactorizationPrimeCount = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationCount = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeFactorizationPri", "   \
    \     val factorization = mutable.ArrayBuffer.empty[Long]\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.", "        val factors = mutable.ListBuffer.empty[Long]\n\
    \        val primes = mutable.ListBuffer.empty[Long]\n        val isPrime = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeIter = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter2\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter3 = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeIter4 = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter5\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter6 = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeIter7 = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter8\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter9 = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeIter10 = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter11\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter12 = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeIter13 = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter14\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter15 = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeIter16 = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter17\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter18 = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeIter19 = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter20\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter21 = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeIter22 = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter23\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter24 = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeIter25 = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter26\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter27 = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeIter28 = mutable.ListBuffer.empty[Boolean]\n        val isPrimeIter29",
  "        val factors = mutable.ListBuffer[Long]()\n        val factorization = factorizationOf(n)\n\
    \        factorization foreach { f =>\n            factors += f\n        }\n \
    \       factors", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizations = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCounts = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCountPairs = mutable.ArrayBuffer.empty[(Long, Long)]\n\
    \        val factorizationCountPairsSorted = mutable.ArrayBuffer.empty[(Long,\
    \ Long)]\n        val factorizationCountPairsSortedByCount = mutable.ArrayBuffer.empty[(Long,\
    \ Long)]\n        val factorizationCountPairsSortedByCountReversed = mutable.ArrayBuffer.empty[(Long,\
    \ Long)]\n        val factorizationCountPairsSortedByCountReversedByCount = mutable.ArrayBuffer.empty[(Long,\
    \ Long)]\n        val factorizationCountPairsSortedByCountReversedByCountReversed\
    \ = mutable.ArrayBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountReversedByCountReversedByCount\
    \ = mutable.ArrayBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountReversedByCountReversedByCountReversed\
    \ = mutable.ArrayBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountReversedByCountReversedByCountReversedByCount\
    \ = mutable.ArrayBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountReversedByCountReversedByCountReversedByCountReversed\
    \ = mutable.ArrayBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountReversedByCountReversedByCountReversedByCountReversedByCount\
    \ = mutable.ArrayBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountReversedByCountReversedByCountReversedByCountReversedByCountReversed\
    \ = mutable.ArrayBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountReversedByCountReversedByCountReversedByCountReversedByCountReversedByCount\
    \ = mutable.ArrayBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountReversedByCountReversedByCountReversedByCountReversedByCountReversedByCountReversed\
    \ = mutable.ArrayBuffer.empty[(Long, Long)]\n        val factorizationCountPairsSortedByCountReversedByCountReversedByCountReversedByCountReversedByCountReversedByCountReversedBy",
  "        val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorization = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = ", "   \
    \     val factorization = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factors = mutable.ListBuffer[Long]()\n        val primeFactors =\
    \ mutable.ListBuffer[Long]()\n        val primeFactorsCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount2 = mutable.ListBuffer[Long]()\n        val primeFactorsCount3\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount4 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount5 = mutable.ListBuffer[Long]()\n        val primeFactorsCount6\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount7 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount8 = mutable.ListBuffer[Long]()\n        val primeFactorsCount9\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount10 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount11 = mutable.ListBuffer[Long]()\n        val primeFactorsCount12\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount13 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount14 = mutable.ListBuffer[Long]()\n        val primeFactorsCount15\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount16 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount17 = mutable.ListBuffer[Long]()\n        val primeFactorsCount18\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount19 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount20 = mutable.ListBuffer[Long]()\n        val primeFactorsCount21\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount22 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount23 = mutable.ListBuffer[Long]()\n        val primeFactorsCount24\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount25 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorsCount26 = mutable.ListBuffer[Long]()\n        val primeFactorsCount27\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorsCount28 = mutable.ListBuffer",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizationList = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList2 = mutable.ListBuffer[Long]()\n        val primeFactorizationList3\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList4 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList5 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList6 = mutable.ListBuffer[Long]()\n        val primeFactorizationList7\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList8 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList9 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList10 = mutable.ListBuffer[Long]()\n        val primeFactorizationList11\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList12 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList13 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList14 = mutable.ListBuffer[Long]()\n        val primeFactorizationList15\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList16 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList17 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList18 = mutable.ListBuffer[Long]()\n        val primeFactorizationList19\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList20 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList21 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList22 = mutable.ListBuffer[Long]()\n        val primeFactorizationList23\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationList24 = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationList25 = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationList26 = mutable.ListBuffer[Long]()\n        val primeFactorizationList27\
    \ = mutable.ListBuffer[Long", "        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorization = mutable.ArrayBuffer.empty[Long]\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationSize = n\n        val primeFactorizationSize = factorizationSize\
    \ / 2\n        val primeFactorizationSize = primeFactorizationSize / 2\n     \
    \   val primeFactorizationSize = primeFactorizationSize / 2\n        val primeFactorizationSize\
    \ = primeFactorizationSize / 2\n        val primeFactorizationSize = primeFactorizationSize\
    \ / 2\n        val primeFactorizationSize = primeFactorizationSize / 2\n     \
    \   val primeFactorizationSize = primeFactorizationSize / 2\n        val primeFactorizationSize\
    \ = primeFactorizationSize / 2\n        val primeFactorizationSize = primeFactorizationSize\
    \ / 2\n        val primeFactorizationSize = primeFactorizationSize / 2\n     \
    \   val primeFactorizationSize = primeFactorizationSize / 2\n        val primeFactorizationSize\
    \ = primeFactorizationSize / 2\n        val primeFactorizationSize = primeFactorizationSize\
    \ / 2\n        val primeFactorizationSize = primeFactorizationSize / 2\n     \
    \   val primeFactorizationSize = primeFactorizationSize / 2\n        val primeFactorizationSize\
    \ = primeFactorizationSize / 2\n        val primeFactorizationSize = primeFactorizationSize\
    \ / 2\n        val primeFactorizationSize = primeFactorizationSize / 2\n     \
    \   val primeFactorizationSize = primeFactorizationSize / 2\n        val primeFactorizationSize\
    \ = primeFactorizationSize / 2\n        val primeFactorizationSize = primeFactorizationSize\
    \ / 2\n        val primeFactorizationSize = primeFactorizationSize / 2\n     \
    \   val primeFactorizationSize = primeFactorizationSize / 2\n        val primeFactorizationSize\
    \ = primeFactorizationSize / 2\n        val primeFactorizationSize = primeFactorizationSize\
    \ / 2\n        val primeFactorizationSize = primeFactorizationSize / 2\n     \
    \   val primeFactorizationSize = primeFactorizationSize / 2\n        val primeFactorizationSize\
    \ = primeFactorizationSize / 2\n        val primeFactorizationSize = primeFactorizationSize\
    \ / 2\n        val primeFactorizationSize = primeFactorizationSize / 2\n     \
    \   val primeFactorizationSize = primeFactorizationSize / 2\n        val primeFactorizationSize\
    \ = primeFactorizationSize / 2\n        val primeFactorizationSize = primeFactorizationSize\
    \ / 2\n        val primeFactorizationSize = primeFactorizationSize / 2\n     \
    \   val primeFactorizationSize = primeFactorization", "        val factorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizations = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimes = mutable.ListBuffer[Long]()\n        val factorizationPrime\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizations =\
    \ mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorization = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrime = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorization = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrime = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPri",
  "        val factors = mutable.ListBuffer.empty[Long]\n        val primes = mutable.ListBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ListBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactors = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrime = mutable.ListBuffer.empty[Boolean]\n       \
    \ val isPrimeFactorsPrimePrime = mutable.ListBuffer.empty[Boolean]\n        val\
    \ isPrimeFactorsPrimePrimePrime = mutable.ListBuffer.empty[Boolean]\n        val\
    \ isPrimeFactorsPrimePrimePrimePrime = mutable.ListBuffer.empty[Boolean]\n   \
    \     val isPrimeFactorsPrimePrimePrimePrimePrime = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrime = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrime = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer.empty[Boolean]\n\
    \        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer.empty[Boolean]\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrime",
  "        val factors = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val factorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizationCount = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizationCount = mutable.ListBuffer[Long]()\n        val\
    \ primeFactorizationCount = mutable.ListBuffer[Long]()\n        val primeFactorizationCount\
    \ = mutable.List", "        val factors = mutable.ListBuffer.empty[Long]\n   \
    \     var factor = 1\n        while (n > 1) {\n            while (n % factor ==\
    \ 0) {\n                factors += factor\n                n /= factor\n     \
    \       }\n            factor += 1\n        }\n        factors", "        val\
    \ factorization = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val factors = mutable.ListBuffer[Long]()\n        val primeFactors =\
    \ mutable.ListBuffer[Long]()\n        val factorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val factorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizations = mutable.ListBuffer[Long]()\n \
    \       val factorizationPrimeFactorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimes = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactors = mutable.ListBuffer[Long]()\n\
    \        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactors\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ListBuffer[Long]()\n        val factorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime",
  "        val factors = mutable.ListBuffer[Long]()\n        val factorization = factorization(n)\n\
    \        factorization.foreach(x => factors += x)\n        factors", "       \
    \ val factorization = mutable.ArrayBuffer.empty[Long]\n        val factorizationList\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationCount = mutable.Array", "        val factorization = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val factorizations = mutable.ListBuffer[Long]()\n\
    \        val factorizationCount = mutable.ListBuffer[Long]()\n        val factorizationCounts\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMax = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountMaxs = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountMin = mutable.ListBuffer[Long]()\n        val factorizationCountMins\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMaxMin = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountMaxMins = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountMinMax = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxs\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxMin = mutable.ListBuffer[Long]()\n\
    \        val factorizationCountMinMaxMins = mutable.ListBuffer[Long]()\n     \
    \   val factorizationCountMinMaxMinMax = mutable.ListBuffer[Long]()\n        val\
    \ factorizationCountMinMaxMinMaxs = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxMinMaxMin\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxMinMaxMins\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxMinMaxMinMax\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxMinMaxMinMaxs\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxMinMaxMinMaxMin\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxMinMaxMinMaxMins\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxMinMaxMinMaxMinMax\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxMinMaxMinMaxMinMaxs\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxMinMaxMinMaxMinMaxMax\
    \ = mutable.ListBuffer[Long]()\n        val factorizationCountMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = mutable.ListBuffer[Long]()\n", "        val factors = mutable.ListBuffer[Long]()\n\
    \        val primes = mutable.ListBuffer[Long]()\n        val factorizations =\
    \ mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val factorization = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.ListBuffer[Long]()\n        val primeFactorization\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorizations = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val primeFactorizations\
    \ = mutable.ListBuffer[Long]()\n        val primeFactorization = mutable.ListBuffer[Long]()\n\
    \        val primeFactorizations = mutable.", "        val factorization = mutable.ArrayBuffer.empty[Long]\n\
    \        val primes = mutable.ArrayBuffer.empty[Long]\n        val factorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizations = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorizationPrimes = mutable.ArrayBuffer.empty[Long]\n        val\
    \ factorizationPrimeFactorizations = mutable.ArrayBuffer.empty[Long]\n       \
    \ val primeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n        val\
    \ primeFactorizationPrimeFactorizations = mutable.ArrayBuffer.empty[Long]\n  \
    \      val primeFactorizationPrimeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorizationPrimeFactorizations = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizations\
    \ = mutable.ArrayBuffer.empty[Long]\n        val ", "        val factorization\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactorization = mutable.ListBuffer[Long]()\n        val factorizationSize\
    \ = n\n        val primeFactorizationSize = factorizationSize / 2\n        val\
    \ primeFactorizationSize2 = primeFactorizationSize / 2\n        val primeFactorizationSize3\
    \ = primeFactorizationSize2 / 2\n        val primeFactorizationSize4 = primeFactorizationSize3\
    \ / 2\n        val primeFactorizationSize5 = primeFactorizationSize4 / 2\n   \
    \     val primeFactorizationSize6 = primeFactorizationSize5 / 2\n        val primeFactorizationSize7\
    \ = primeFactorizationSize6 / 2\n        val primeFactorizationSize8 = primeFactorizationSize7\
    \ / 2\n        val primeFactorizationSize9 = primeFactorizationSize8 / 2\n   \
    \     val primeFactorizationSize10 = primeFactorizationSize9 / 2\n        val\
    \ primeFactorizationSize11 = primeFactorizationSize10 / 2\n        val primeFactorizationSize12\
    \ = primeFactorizationSize11 / 2\n        val primeFactorizationSize13 = primeFactorizationSize12\
    \ / 2\n        val primeFactorizationSize14 = primeFactorizationSize13 / 2\n \
    \       val primeFactorizationSize15 = primeFactorizationSize14 / 2\n        val\
    \ primeFactorizationSize16 = primeFactorizationSize15 / 2\n        val primeFactorizationSize17\
    \ = primeFactorizationSize16 / 2\n        val primeFactorizationSize18 = primeFactorizationSize17\
    \ / 2\n        val primeFactorizationSize19 = primeFactorizationSize18 / 2\n \
    \       val primeFactorizationSize20 = primeFactorizationSize19 / 2\n        val\
    \ primeFactorizationSize21 = primeFactorizationSize20 / 2\n        val primeFactorizationSize22\
    \ = primeFactorizationSize21 / 2\n        val primeFactorizationSize23 = primeFactorizationSize22\
    \ / 2\n        val primeFactorizationSize24 = primeFactorizationSize23 / 2\n \
    \       val primeFactorizationSize25 = primeFactorizationSize24 / 2\n        val\
    \ primeFactorizationSize26 = primeFactorizationSize25 / 2\n        val primeFactorizationSize27\
    \ = primeFactorizationSize26 / 2\n        val primeFactorizationSize28 = primeFactorizationSize27\
    \ / 2\n        val primeFactorizationSize29 = primeFactorizationSize28 / 2\n \
    \       val primeFactorizationSize30 = primeFactorizationSize29 / 2\n"]
stop_tokens:
- "\n    }\n"

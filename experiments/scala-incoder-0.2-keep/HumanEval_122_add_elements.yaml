name: HumanEval_122_add_elements
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a non-empty array of integers arr and an integer k, return\n    //\
  \ the sum of the elements with at most two digits from the first k elements of arr.\n\
  \    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n    // Output:\
  \ 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    //\
  \ 2. 1 <= k <= len(arr)\n    def addElements(arr : List[Long], k : Long) : Long\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(addElements((List[Long](1l.toLong,\
  \ -2l.toLong, -3l.toLong, 41l.toLong, 57l.toLong, 76l.toLong, 87l.toLong, 88l.toLong,\
  \ 99l.toLong)), (3l)) == (-4l));\n    assert(addElements((List[Long](111l.toLong,\
  \ 121l.toLong, 3l.toLong, 4000l.toLong, 5l.toLong, 6l.toLong)), (2l)) == (0l));\n\
  \    assert(addElements((List[Long](11l.toLong, 21l.toLong, 3l.toLong, 90l.toLong,\
  \ 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)), (4l)) == (125l));\n \
  \   assert(addElements((List[Long](111l.toLong, 21l.toLong, 3l.toLong, 4000l.toLong,\
  \ 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)), (4l)) == (24l));\n  \
  \  assert(addElements((List[Long](1l.toLong)), (1l)) == (1l));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

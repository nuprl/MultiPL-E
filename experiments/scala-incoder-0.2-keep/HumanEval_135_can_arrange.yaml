name: HumanEval_135_can_arrange
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function which returns the largest index of an element which\n\
  \    // is not greater than or equal to the element immediately preceding it. If\n\
  \    // no such element exists then return -1. The given array will not contain\n\
  \    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5]) = 3\n\
  \    // can_arrange([1,2,3]) = -1\n    def canArrange(arr : List[Long]) : Long =\
  \ {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))) == (3l));\n    assert(canArrange((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 5l.toLong))) == (-1l));\n    assert(canArrange((List[Long](1l.toLong,\
  \ 4l.toLong, 2l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong, 10l.toLong)))\
  \ == (2l));\n    assert(canArrange((List[Long](4l.toLong, 8l.toLong, 5l.toLong,\
  \ 7l.toLong, 3l.toLong))) == (4l));\n    assert(canArrange((List[Long]())) == (-1l));\n\
  \    }\n\n}\n"
completions: ["        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex - 1", "        val maxIndex = arr.indexWhere(x =>\
    \ x < arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", "     \
    \   val maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) <=\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        if (maxIndex == arr.length) -1 else maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) < maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if\
    \ (maxIndex == arr.length) -1\n        else maxIndex", "        val maxIndex =\
    \ 0\n        val maxValue = arr(0)\n        val index = 1\n        while (index\
    \ < arr.length) {\n            if (arr(index) > maxValue) {\n                maxValue\
    \ = arr(index)\n                maxIndex = index\n            }\n            index\
    \ += 1\n        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        val\
    \ maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else maxIndex",
  "        val maxIndex = 0\n        val maxValue = arr(0)\n        val maxIndexInList\
    \ = arr.indexWhere(x => x <= maxValue)\n        val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n        if (maxIndexInList == -1) {\n            return -1\n\
    \        }\n        else {\n            val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n            if (maxIndexInList == -1) {\n               \
    \ return -1\n            }\n            else {\n                val maxIndexInList\
    \ = arr.indexWhere(x => x <= maxValue)\n                if (maxIndexInList ==\
    \ -1) {\n                    return -1\n                }\n                else\
    \ {\n                    val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n\
    \                    if (maxIndexInList == -1) {\n                        return\
    \ -1\n                    }\n                    else {\n                    \
    \    val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n               \
    \         if (maxIndexInList == -1) {\n                            return -1\n\
    \                        }\n                        else {\n                 \
    \           val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n        \
    \                    if (maxIndexInList == -1) {\n                           \
    \     return -1\n                            }\n                            else\
    \ {\n                                val maxIndexInList = arr.indexWhere(x =>\
    \ x <= maxValue)\n                                if (maxIndexInList == -1) {\n\
    \                                    return -1\n                             \
    \   }\n                                else {\n                              \
    \      val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n             \
    \                       if (maxIndexInList == -1) {\n                        \
    \                return -1\n                                    }\n          \
    \                          else {\n                                        val\
    \ maxIndexInList = arr.indexWhere(x => x <= maxValue)\n                      \
    \                  if (maxIndexInList == -1) {\n                             \
    \               return -1\n                                        }\n       \
    \                                 else {\n                                   \
    \         val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n          \
    \                                  if (maxIndexInList == -1) {\n             \
    \                                   return -1\n                              \
    \              }\n                                            else {\n       \
    \                                         val maxIndexInList = arr.indexWhere(x\
    \ => x <= maxValue)\n                                                if (maxIndexInList\
    \ == -1) {\n                                                    return -1\n  \
    \                                              }\n                           \
    \                     else {\n                                               \
    \     val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n              \
    \                                      if (maxIndexInList == -1) {\n         \
    \                                               return -1\n                  \
    \                                  }\n                                       \
    \             else {\n                                                       \
    \ val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n                  \
    \                                      if (maxIndexInList == -1) {\n         \
    \                                                   return -1\n              \
    \                                          }\n                               \
    \                         else {\n                                           \
    \                 val maxIndexInList = arr.indexWhere(x => x <= maxValue)\n  \
    \                                                          if (maxIndexInList\
    \ == -1) {\n                                                                return\
    \ -1\n                                                            }\n        \
    \                                                    else {\n                \
    \                                                val maxIndexInList = arr.indexWhere(x ",
  "        var largest = -1\n        var largestIndex = 0\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > arr(largest)) {\n                largest\
    \ = arr(i)\n                largestIndex = i\n            }\n        }\n     \
    \   if (largest == -1) {\n            return -1\n        } else {\n          \
    \  return largestIndex\n        }", "        val maxIndex = arr.indexWhere(x =>\
    \ x >= arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", "    \
    \    val maxIndex = 0\n        val maxValue = arr(0)\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) >= maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndexes = mutable.ArrayBuffer.empty[Long]\n        var maxIndex\
    \ = 0\n        for (i <- 0 until arr.length) {\n            if (arr(i) > arr(maxIndex))\
    \ {\n                maxIndexes += maxIndex\n                maxIndex = i\n  \
    \          }\n        }\n        if (maxIndexes.nonEmpty) {\n            maxIndexes.last\n\
    \        } else {\n            -1\n        }", "        val maxIndex = 0\n   \
    \     val maxValue = arr(0)\n        for(i <- 0 until arr.length) {\n        \
    \    if(arr(i) > maxValue) {\n                maxValue = arr(i)\n            \
    \    maxIndex = i\n            }\n        }\n        if(maxIndex == arr.length\
    \ - 1) -1 else maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex - 1", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n      \
    \  else maxIndex - 1", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        val n = arr.length\n        var maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        var index = 0\n        for (i <-\
    \ 0 until n) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = index\n            }\n            index\
    \ += 1\n        }\n        if (maxIndex == 0) -1\n        else maxIndex", "  \
    \      val maxIndex = arr.lastIndexWhere(x => x >= arr(arr.length-1))\n      \
    \  if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x <= arr.head)\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       val maxIndex = 0\n        var maxVal = -1L\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxVal) {\n                maxVal =\
    \ arr(i)\n                maxIndex = i\n            }\n        }\n        if (maxVal\
    \ == -1L) return -1\n        return maxIndex", "        var maxIndex = 0\n   \
    \     var maxValue = arr(0)\n        var maxIndex = 0\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if\
    \ (maxIndex == arr.length-1)\n            return -1\n        return maxIndex",
  "        val maxIndex = 0\n        val maxValue = arr(0)\n        val maxIndexOfMaxValue\
    \ = -1\n        for (i <- 0 until arr.length) {\n            if (arr(i) <= maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndexOfMaxValue = i\n            }\n        }\n        if\
    \ (maxIndexOfMaxValue == -1) {\n            return -1\n        } else {\n    \
    \        return maxIndex\n        }", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        if (maxIndex == arr.length) -1\n        else\
    \ maxIndex", "        var maxIndex = 0\n        var maxVal = arr(0)\n        for\
    \ (i <- 0 until arr.length) {\n            if (arr(i) < maxVal) {\n          \
    \      maxVal = arr(i)\n                maxIndex = i\n            }\n        }\n\
    \        if (maxIndex == arr.length-1)\n            return -1\n        else\n\
    \            return maxIndex", "        val maxIndex = arr.indexWhere(_ <= arr.last)\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        var maxIndex =\
    \ 0\n        var maxVal = arr(0)\n        for (i <- 0 until arr.length) {\n  \
    \          if (arr(i) > maxVal) {\n                maxIndex = i\n            \
    \    maxVal = arr(i)\n            }\n        }\n        if (maxIndex == arr.length-1)\n\
    \            return -1\n        return maxIndex", "        var maxIndex = -1\n\
    \        var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n    \
    \        if (arr(i) >= maxValue) {\n                maxValue = arr(i)\n      \
    \          maxIndex = i\n            }\n        }\n        maxIndex", "      \
    \  val maxIndex = 0\n        val maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) >= maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexWhere(x => x <= arr(0))\n        if (maxIndex ==\
    \ -1) -1\n        else maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        var index = 1\n        while (index < arr.length) {\n    \
    \        if (arr(index) > maxValue) {\n                maxValue = arr(index)\n\
    \                maxIndex = index\n            }\n            index += 1\n   \
    \     }\n        return maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x < arr(0))\n        if (maxIndex < 0) -1\n        else maxIndex", "       \
    \ var largest = -1\n        var largestIndex = 0\n        for(i <- 0 until arr.length)\
    \ {\n            if(i == 0 || arr(i) > arr(largest)) {\n                largest\
    \ = arr(i)\n                largestIndex = i\n            }\n        }\n     \
    \   if(largest == -1) largestIndex\n        else largestIndex", "        var maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        var maxIndexOfMaxValue = -1\n  \
    \      for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \     maxIndexOfMaxValue = i\n            }\n        }\n        if (maxIndexOfMaxValue\
    \ == -1) {\n            return -1\n        }\n        return maxIndexOfMaxValue",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        return\
    \ maxIndex", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n    \
    \    if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(_\
    \ <= arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        var maxIndex\
    \ = 0\n        var maxVal = arr(0)\n        var index = 1\n        for(i <- 0\
    \ until arr.length) {\n            if(arr(i) >= maxVal) {\n                maxVal\
    \ = arr(i)\n                maxIndex = index\n            }\n            index\
    \ += 1\n        }\n        if(maxIndex == arr.length-1)\n            return -1\n\
    \        return maxIndex", "        val maxIndex = 0\n        val maxValue = arr(0)\n\
    \        for(i <- 0 until arr.length) {\n            if(arr(i) >= maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        val m = arr.head\n        var maxIndex\
    \ = 0\n        var maxValue = arr(0)\n        for (i <- 1 until arr.length) {\n\
    \            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        if (maxIndex ==\
    \ arr.length) {\n            return -1\n        }\n        if (maxValue > arr(maxIndex))\
    \ {\n            return maxIndex\n        }\n        return -1", "        var\
    \ largest = -1L\n        var largestIndex = 0\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > arr(largest)) {\n                largest = arr(i)\n\
    \                largestIndex = i\n            }\n        }\n        largestIndex",
  "        val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        var index = 1\n        for(i <- 0 until arr.length) {\n  \
    \          if(arr(i) > maxValue) {\n                maxValue = arr(i)\n      \
    \          maxIndex = index\n            }\n            index += 1\n        }\n\
    \        if(maxIndex == arr.length-1)\n            -1\n        else\n        \
    \    maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex <\
    \ 0) -1\n        else maxIndex", "        val maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >=\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = 0\n        var maxValue = arr(0)\n      \
    \  for (i <- 0 until arr.length) {\n            if (arr(i) < maxValue) {\n   \
    \             maxValue = arr(i)\n                maxIndex = i\n            }\n\
    \        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x => x <=\
    \ arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", "        val\
    \ maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex < 0) -1\
    \ else maxIndex", "        var largest = -1\n        var index = 0\n        for\
    \ (i <- 0 until arr.length) {\n            if (arr(i) > arr(index)) {\n      \
    \          index = i\n            }\n            if (arr(i) > largest) {\n   \
    \             largest = arr(i)\n            }\n        }\n        index", "  \
    \      val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1)\
    \ -1\n        else maxIndex - 1", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) <\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        if (maxIndex == arr.length - 1) {\n       \
    \     return -1\n        }\n        return maxIndex", "        val m = arr.toSet\n\
    \        val n = arr.toSeq\n        val l = m.toSeq\n        val r = n.toSeq\n\
    \        val m = m.toSeq\n        val n = n.toSeq\n        val l = l.toSeq\n \
    \       val r = r.toSeq\n        val m = m.toSeq\n        val n = n.toSeq\n  \
    \      val l = l.toSeq\n        val r = r.toSeq\n        val m = m.toSeq\n   \
    \     val n = n.toSeq\n        val l = l.toSeq\n        val r = r.toSeq\n    \
    \    val m = m.toSeq\n        val n = n.toSeq\n        val l = l.toSeq\n     \
    \   val r = r.toSeq\n        val m = m.toSeq\n        val n = n.toSeq\n      \
    \  val l = l.toSeq\n        val r = r.toSeq\n        val m = m.toSeq\n       \
    \ val n = n.toSeq\n        val l = l.toSeq\n        val r = r.toSeq\n        val\
    \ m = m.toSeq\n        val n = n.toSeq\n        val l = l.toSeq\n        val r\
    \ = r.toSeq\n        val m = m.toSeq\n        val n = n.toSeq\n        val l =\
    \ l.toSeq\n        val r = r.toSeq\n        val m = m.toSeq\n        val n = n.toSeq\n\
    \        val l = l.toSeq\n        val r = r.toSeq\n        val m = m.toSeq\n \
    \       val n = n.toSeq\n        val l = l.toSeq\n        val r = r.toSeq\n  \
    \      val m = m.toSeq\n        val n = n.toSeq\n        val l = l.toSeq\n   \
    \     val r = r.toSeq\n        val m = m.toSeq\n        val n = n.toSeq\n    \
    \    val l = l.toSeq\n        val r = r.toSeq\n        val m = m.toSeq\n     \
    \   val n = n.toSeq\n        val l = l.toSeq\n        val r = r.toSeq\n      \
    \  val m = m.toSeq\n        val n = n.toSeq\n        val l = l.toSeq\n       \
    \ val r = r.toSeq\n        val m = m.toSeq\n        val n = n.toSeq\n        val\
    \ l = l.toSeq\n        val r = r.toSeq\n        val m = m.toSeq\n        val n\
    \ = n.toSeq\n        val l = l.toSeq\n        val r = r.toSeq\n        val m =\
    \ m.toSeq\n        val n = n.toSeq\n        val l = l.toSeq\n        val r = r.toSeq\n\
    \        val m = m.toSeq\n        ", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex\
    \ < 0) -1 else maxIndex", "        val maxIndex = 0\n        val maxValue = arr(0)\n\
    \        for(i <- 1 until arr.length) {\n            if(arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        if (maxIndex == arr.length-1)\n           \
    \ return -1\n        else\n            return maxIndex", "        var largest\
    \ = -1\n        var largestIndex = 0\n        var index = 0\n        for(i <-\
    \ 0 until arr.length) {\n            val current = arr(i)\n            val previousIndex\
    \ = index\n            index = i\n            if(current > largest) {\n      \
    \          largest = current\n                largestIndex = previousIndex\n \
    \           }\n        }\n        return largestIndex", "        val m = arr.head\n\
    \        val n = arr.tail.head\n        val max = arr.tail.tail.head\n       \
    \ val index = arr.indexWhere(x => x <= max)\n        if (index == -1) {\n    \
    \        return -1\n        }\n        if (index == arr.length - 1) {\n      \
    \      return index\n        }\n        if (arr(index - 1) <= arr(index)) {\n\
    \            return canArrange(arr.drop(index + 1))\n        }\n        return\
    \ canArrange(arr.drop(index + 1))", "        val maxIndex = arr.indexWhere(x =>\
    \ x <= arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", "  \
    \      val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x =>\
    \ x >= arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex\
    \ = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex < 0) -1\n       \
    \ else maxIndex", "        val result = arr.foldLeft(-1)((max, current) => {\n\
    \            if (max < 0 || current > max)\n                max\n            else\
    \ if (current > max && current != 0)\n                max\n            else\n\
    \                current\n        })\n        result", "        val maxIndex =\
    \ arr.indexOfMax\n        if (maxIndex == -1) return -1\n        val maxValue\
    \ = arr(maxIndex)\n        val index = arr.lastIndexWhere(x => x != maxValue)\n\
    \        if (index == -1) return -1\n        arr(index + 1)", "        val maxIndex\
    \ = arr.lastIndexWhere(x => x <= arr(0))\n        if (maxIndex == -1) -1\n   \
    \     else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        if (maxIndex == arr.length-1)\n            return -1\n\
    \        else\n            return maxIndex", "        val m = arr.head\n     \
    \   var max = 0\n        var maxIndex = 0\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) < m) {\n                max = arr(i)\n           \
    \     maxIndex = i\n            }\n        }\n        if (maxIndex == arr.length-1)\n\
    \            -1\n        else\n            maxIndex", "        val maxIndex =\
    \ arr.indexOfMax\n        if(maxIndex == -1) -1\n        else maxIndex - 1", " \
    \       val result = arr.foldLeft[Long](-1L){\n            (maxIndex, currentValue)\
    \ =>\n                if (currentValue >= maxIndex) maxIndex\n               \
    \ else if (currentValue > maxIndex) currentIndex\n                else -1L\n \
    \       }\n        result", "        val maxIndex = arr.lastIndexWhere(_ >= 0)\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        var maxIndex =\
    \ 0\n        var maxValue = arr(0)\n        for(i <- 0 until arr.length) {\n \
    \           if(arr(i) > maxValue) {\n                maxValue = arr(i)\n     \
    \           maxIndex = i\n            }\n        }\n        if(maxIndex == arr.length-1)\n\
    \            return -1\n        else\n            return maxIndex", "        val\
    \ maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n        else maxIndex\
    \ - 1", "        val result = arr.foldLeft[Long](-1L){\n            (maxIndex,\
    \ currentValue) =>\n                if (currentValue <= maxIndex) maxIndex\n \
    \               else if (maxIndex == -1L) -1L\n                else if (currentValue\
    \ > maxIndex) currentValue\n                else maxIndex\n        }\n       \
    \ result", "        val maxIndex = arr.indexWhere(x => x < arr(0))\n        if\
    \ (maxIndex == -1) -1\n        else maxIndex", "        var maxIndex = 0\n   \
    \     var maxVal = arr(0)\n        for (i <- 0 until arr.length) {\n         \
    \   if (arr(i) > maxVal) {\n                maxVal = arr(i)\n                maxIndex\
    \ = i\n            }\n        }\n        maxIndex", "        val n = arr.length\n\
    \        var maxIndex = -1\n        var maxVal = -1L\n        var i = 0\n    \
    \    while (i < n) {\n            if (arr(i) < maxVal) {\n                maxVal\
    \ = arr(i)\n                maxIndex = i\n            }\n            i += 1\n\
    \        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x => x <\
    \ arr(0))\n        if (maxIndex < 0) -1\n        else maxIndex", "        var\
    \ largest = -1\n        var largestIndex = 0\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) > arr(largest)) {\n                largest = arr(i)\n\
    \                largestIndex = i\n            }\n        }\n        if (largest\
    \ == -1) {\n            return -1\n        }\n        largestIndex", "       \
    \ val maxIndex = 0\n        val maxValue = arr(0)\n        for(i <- 0 until arr.length)\
    \ {\n            if(arr(i) > maxValue) {\n                maxIndex = i\n     \
    \           maxValue = arr(i)\n            }\n        }\n        if(maxIndex ==\
    \ arr.length - 1) {\n            return -1\n        }\n        return maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n       \
    \ else maxIndex - 1", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        var maxIndex =\
    \ 0\n        var maxValue = arr(0)\n        var maxIndex = 0\n        for (i <-\
    \ 0 until arr.length) {\n            if (arr(i) > maxValue) {\n              \
    \  maxValue = arr(i)\n                maxIndex = i\n            }\n        }\n\
    \        return maxIndex", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n\
    \        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr(arr.length-1))\n        if (maxIndex < 0) -1\n        else maxIndex",
  "        val result = arr.foldLeft((-1,-1)){\n            case ((maxIndex, maxValue),\
    \ value) =>\n                if (value <= maxValue) (value,maxIndex) else (maxValue,\
    \ maxIndex)\n        }\n        result._1", "        val m = arr.toSet\n     \
    \   val n = arr.toSeq\n        val s = arr.toList\n        val l = arr.toSeq\n\
    \        val r = arr.toList\n        val q = arr.toSet\n        val t = arr.toSeq\n\
    \        val u = arr.toList\n        val v = arr.toSeq\n        val w = arr.toSet\n\
    \        val x = arr.toSeq\n        val y = arr.toList\n        val z = arr.toSeq\n\
    \        val a = arr.toSet\n        val b = arr.toSeq\n        val c = arr.toList\n\
    \        val d = arr.toSeq\n        val e = arr.toSet\n        val f = arr.toSeq\n\
    \        val g = arr.toList\n        val h = arr.toSeq\n        val i = arr.toSet\n\
    \        val j = arr.toSeq\n        val k = arr.toList\n        val l = arr.toSeq\n\
    \        val m = arr.toSet\n        val n = arr.toSeq\n        val o = arr.toList\n\
    \        val p = arr.toSeq\n        val q = arr.toSet\n        val r = arr.toSeq\n\
    \        val s = arr.toList\n        val t = arr.toSeq\n        val u = arr.toList\n\
    \        val v = arr.toSeq\n        val w = arr.toSet\n        val x = arr.toSeq\n\
    \        val y = arr.toList\n        val z = arr.toSeq\n        val a = arr.toSet\n\
    \        val b = arr.toSeq\n        val c = arr.toList\n        val d = arr.toSeq\n\
    \        val e = arr.toSet\n        val f = arr.toSeq\n        val g = arr.toList\n\
    \        val h = arr.toSeq\n        val i = arr.toSet\n        val j = arr.toSeq\n\
    \        val k = arr.toList\n        val l = arr.toSeq\n        val m = arr.toSet\n\
    \        val n = arr.toSeq\n        val o = arr.toList\n        val p = arr.toSeq\n\
    \        val q = arr.toSet\n        val r = arr.toSeq\n        val s = arr.toList\n\
    \        val t = arr.toSeq\n        val u = arr.toList\n        val v = arr.toSeq\n\
    \        val w = arr.toSet\n        val x = arr.toSeq\n        val y = arr.toList\n\
    \        val z = arr.toSeq\n        val a = arr.toSet\n        val b = arr.toSeq\n\
    \        val c = arr.toList\n        val d = arr.toSeq\n        val e = arr.toSet\n\
    \        val f = arr.toSeq\n        val g = arr.toList\n        val h = arr.toSeq\n\
    \        ", "        var maxIndex = 0\n        var maxValue = arr(0)\n       \
    \ for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n    \
    \            maxValue = arr(i)\n                maxIndex = i\n            }\n\
    \        }\n        return maxIndex", "        val maxIndex = arr.indexOfMax\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex =\
    \ arr.indexOfMax\n        if (maxIndex == -1)\n            return -1\n       \
    \ if (maxIndex == 0)\n            return arr.length\n        val prevIndex = maxIndex\
    \ - 1\n        val prevValue = arr(prevIndex)\n        if (prevValue >= arr(maxIndex))\n\
    \            return -1\n        val nextIndex = maxIndex + 1\n        val nextValue\
    \ = arr(nextIndex)\n        if (nextValue >= arr(maxIndex))\n            return\
    \ -1\n        if (prevValue < prevValue)\n            return -1\n        if (nextValue\
    \ < nextValue)\n            return -1\n        if (prevValue == nextValue)\n \
    \           return -1\n        if (prevValue < nextValue)\n            return\
    \ -1\n        if (prevValue > nextValue)\n            return -1\n        if (prevValue\
    \ < prevValue)\n            return -1\n        if (nextValue < prevValue)\n  \
    \          return -1\n        if (nextValue < nextValue)\n            return -1\n\
    \        if (prevValue < nextValue)\n            return -1\n        if (prevValue\
    \ > nextValue)\n            return -1\n        if (prevValue > prevValue)\n  \
    \          return -1\n        if (nextValue > prevValue)\n            return -1\n\
    \        if (nextValue > nextValue)\n            return -1\n        if (prevValue\
    \ > nextValue)\n            return -1\n        if (prevValue < prevValue)\n  \
    \          return -1\n        if (nextValue < prevValue)\n            return -1\n\
    \        if (nextValue < nextValue)\n            return -1\n        if (prevValue\
    \ < nextValue)\n            return -1\n        if (prevValue > nextValue)\n  \
    \          return -1\n        if (prevValue > prevValue)\n            return -1\n\
    \        if (nextValue > prevValue)\n            return -1\n        if (nextValue\
    \ > nextValue)\n            return -1\n        if (prevValue > nextValue)\n  \
    \          return -1\n        if (prevValue < prevValue)\n            return -1\n\
    \        if (nextValue < prevValue)\n            return -1\n        if (nextValue\
    \ < nextValue)\n            return -1\n        if (prevValue < nextValue)\n  \
    \          return -1\n        if (prevValue > nextValue)\n            return -1\n\
    \        if (prevValue > prevValue)\n            return -1\n        if (nextValue\
    \ > prevValue)\n            return -1\n        if (nextValue > nextValue)\n  \
    \          return -1\n        if (prevValue > nextValue)\n            return -1\n\
    \        if (prevValue < prevValue)\n            return -1\n        if (nextValue\
    \ < prevValue)\n            return -1\n        if (nextValue < nextValue)\n  \
    \          return -1\n        if (prevValue < nextValue)\n            return -1\n\
    \        if (prevValue > nextValue)\n            return -1\n        if (prevValue\
    \ > prevValue)\n            return -1\n        if (nextValue > prevValue)\n  \
    \          return -1\n        if (nextValue > nextValue)\n            return -1\n\
    \        if (prevValue > nextValue)\n            return -1\n        if (prevValue\
    \ < prevValue)\n            return -1\n        if (nextValue < prev", "      \
    \  var maxIndex = -1\n        var maxValue = arr(0)\n        var index = 0\n \
    \       for (i <- 0 until arr.length) {\n            if (arr(i) <= maxValue) {\n\
    \                maxIndex = i\n                maxValue = arr(i)\n           \
    \ }\n        }\n        return maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       var maxIndex = 0\n        var maxValue = arr(0)\n        for (i<-0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if\
    \ (maxIndex == arr.length-1)\n            return -1\n        else\n          \
    \  return maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        val m = arr.head\n        var maxIndex\
    \ = -1\n        var maxVal = m\n        var index = 0\n        for (i <- arr.indices)\
    \ {\n            if (arr(i) < maxVal) {\n                maxVal = arr(i)\n   \
    \             index = i\n            }\n        }\n        if (maxIndex == -1)\
    \ {\n            return -1\n        }\n        if (arr(index) == maxVal) {\n \
    \           return index\n        }\n        return maxIndex", "        val maxIndex\
    \ = arr.lastIndexWhere(_ <= arr.head)\n        if (maxIndex == -1)\n         \
    \   return -1\n        else\n            maxIndex", "        val result = arr.foldLeft(-1)((max,\
    \ cur) => if (max < cur) max else cur)\n        if (result > -1) result else -1",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if\
    \ (maxIndex == arr.length) -1\n        else maxIndex", "        val maxIndexes\
    \ = arr.zipWithIndex.filter(_._2 > 0).map(_._1)\n        if (maxIndexes.isEmpty)\
    \ -1\n        else maxIndexes.max", "        val m = arr.toSet\n        val n\
    \ = arr.toSeq\n        val m = m.toList\n        val n = n.toList\n        val\
    \ m = m.toSet\n        val n = n.toSet\n        val m = m.toSeq\n        val n\
    \ = n.toSeq\n        val m = m.toList\n        val n = n.toList\n        val m\
    \ = m.toSet\n        val n = n.toSet\n        val m = m.toSeq\n        val n =\
    \ n.toSeq\n        val m = m.toList\n        val n = n.toList\n        val m =\
    \ m.toSet\n        val n = n.toSet\n        val m = m.toSeq\n        val n = n.toSeq\n\
    \        val m = m.toList\n        val n = n.toList\n        val m = m.toSet\n\
    \        val n = n.toSet\n        val m = m.toSeq\n        val n = n.toSeq\n \
    \       val m = m.toList\n        val n = n.toList\n        val m = m.toSet\n\
    \        val n = n.toSet\n        val m = m.toSeq\n        val n = n.toSeq\n \
    \       val m = m.toList\n        val n = n.toList\n        val m = m.toSet\n\
    \        val n = n.toSet\n        val m = m.toSeq\n        val n = n.toSeq\n \
    \       val m = m.toList\n        val n = n.toList\n        val m = m.toSet\n\
    \        val n = n.toSet\n        val m = m.toSeq\n        val n = n.toSeq\n \
    \       val m = m.toList\n        val n = n.toList\n        val m = m.toSet\n\
    \        val n = n.toSet\n        val m = m.toSeq\n        val n = n.toSeq\n \
    \       val m = m.toList\n        val n = n.toList\n        val m = m.toSet\n\
    \        val n = n.toSet\n        val m = m.toSeq\n        val n = n.toSeq\n \
    \       val m = m.toList\n        val n = n.toList\n        val m = m.toSet\n\
    \        val n = n.toSet\n        val m = m.toSeq\n        val n = n.toSeq\n \
    \       val m = m.toList\n        val n = n.toList\n        val m = m.toSet\n\
    \        val n = n.toSet\n        val m = m.toSeq\n        val n = n.toSeq\n \
    \       val m = m.toList\n        val n = n.toList\n        val m = m.toSet\n\
    \        val n = n.toSet\n        val m = m.toSeq\n        ", "        val maxIndex\
    \ = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex < 0) -1\n       \
    \ else maxIndex", "        val maxIndex = arr.indexWhere(x => x < arr.last)\n\
    \        if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex == -1) -1\n     \
    \   else maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        var largest = -1L\n        var index\
    \ = 0\n        for (i <- 0 until arr.length) {\n            if (arr(i) <= arr(largest))\
    \ {\n                largest = i\n            }\n        }\n        if (largest\
    \ != -1) {\n            largest\n        } else {\n            -1\n        }",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        return\
    \ maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex < 0)\
    \ -1\n        else maxIndex", "        val m = arr.head\n        val n = arr.last\n\
    \        val max = arr.last\n        val index = arr.lastIndexWhere(x => x <=\
    \ max)\n        if (index >= 0) {\n            if (arr(index) < m) {\n       \
    \         index\n            } else {\n                -1\n            }\n   \
    \     } else {\n            -1\n        }", "        var maxIndex = 0\n      \
    \  var maxValue = arr(0)\n        var currentIndex = 0\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = currentIndex\n            }\n         \
    \   currentIndex += 1\n        }\n        if (maxIndex == arr.length) return -1\n\
    \        return maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i<-0 until arr.length) {\n            if (arr(i) >= maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        if (maxIndex == arr.length-1)\n            return -1\n\
    \        else\n            return maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       val maxIndex = arr.lastIndexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        var currentIndex = 0\n        var currentValue = arr(0)\n\
    \        for(i <- 0 until arr.length) {\n            if(arr(i) > currentValue)\
    \ {\n                currentIndex = i\n                currentValue = arr(i)\n\
    \            }\n            if(arr(i) > maxValue) {\n                maxIndex\
    \ = currentIndex\n                maxValue = currentValue\n            }\n   \
    \     }\n        if(maxIndex == arr.length-1) {\n            return -1\n     \
    \   }\n        return maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        var currentIndex = 1\n        for(i <- 1 until arr.length)\
    \ {\n            if(arr(i) > maxValue) {\n                maxValue = arr(i)\n\
    \                maxIndex = currentIndex\n            }\n            currentIndex\
    \ += 1\n        }\n        if(maxIndex == arr.length-1)\n            return -1\n\
    \        else\n            return maxIndex", "        var maxIndex = 0\n     \
    \   var maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n         \
    \   if (arr(i) > maxValue) {\n                maxValue = arr(i)\n            \
    \    maxIndex = i\n            }\n        }\n        if (maxIndex == arr.length\
    \ - 1) {\n            return -1\n        }\n        return maxIndex", "      \
    \  val maxIndexes = mutable.HashMap.empty[Long, Int]\n        arr.zipWithIndex.foreach\
    \ { case (elem, index) =>\n            if (elem > maxIndexes.last._1) {\n    \
    \            maxIndexes.update(elem, index)\n            }\n        }\n      \
    \  maxIndexes.last._2", "        var maxIndex = -1\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        val maxIndex = arr.indexOfMax\n  \
    \      if (maxIndex < 0) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) >= maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if\
    \ (maxIndex == arr.length-1)\n            return -1\n        return maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        var index = 1\n\
    \        for(i <- 0 until arr.length) {\n            if(arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = index\n       \
    \     }\n            index += 1\n        }\n        if(maxIndex == arr.length)\
    \ -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x => x >=\
    \ arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex\
    \ = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex < 0) -1\n       \
    \ else maxIndex", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n\
    \        if (maxIndex == -1)\n            return -1\n        else\n          \
    \  return maxIndex", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n\
    \        if (maxIndex == -1) {\n            return -1\n        }\n        val\
    \ maxValue = arr.last\n        val maxIndex2 = maxIndex - 1\n        if (maxIndex2\
    \ >= 0) {\n            if (arr.last.equals(arr(maxIndex2))) {\n              \
    \  return maxIndex2\n            }\n        }\n        return maxIndex", "   \
    \     val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        var largest = -1\n        var largestIndex\
    \ = 0\n        for(i <- 0 until arr.length) {\n            if(arr(i) > arr(largest))\
    \ {\n                largest = arr(i)\n                largestIndex = i\n    \
    \        }\n        }\n        if(largest == -1) {\n            return -1\n  \
    \      }\n        largestIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for(i <- 0 until arr.length) {\n            if(arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        if(maxIndex == arr.length-1)\n            return -1\n\
    \        else\n            return maxIndex", "        val maxIndex = arr.lastIndexWhere(_\
    \ <= arr(0))\n        if (maxIndex < 0) -1\n        else maxIndex", "        val\
    \ maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex < 0) -1\n\
    \        else maxIndex", "        val maxIndex = 0\n        val maxValue = arr(0)\n\
    \        val maxIndexOfMaxValue = -1\n        for(i <- 0 until arr.length) {\n\
    \            val value = arr(i)\n            if(value > maxValue) {\n        \
    \        maxValue = value\n                maxIndex = i\n            }\n     \
    \       if(value == maxValue) {\n                maxIndexOfMaxValue = i\n    \
    \        }\n        }\n        if(maxIndexOfMaxValue == -1) {\n            return\
    \ -1\n        } else {\n            return maxIndex\n        }", "        var\
    \ maxIndex = 0\n        var maxVal = arr(0)\n        var index = 1\n        for\
    \ (i <- 0 until arr.length) {\n            if (arr(i) > maxVal) {\n          \
    \      maxVal = arr(i)\n                maxIndex = index\n            }\n    \
    \        index += 1\n        }\n        if (maxIndex == arr.length) -1\n     \
    \   else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) < maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        return maxIndex", "        var maxIndex = 0\n        var\
    \ maxValue = arr(0)\n        for(i <- 0 until arr.length) {\n            if(arr(i)\
    \ <= maxValue) {\n                maxValue = arr(i)\n                maxIndex\
    \ = i\n            }\n        }\n        maxIndex", "        val maxIndex = 0\n\
    \        var maxValue = arr(0)\n        var maxIndex = 0\n        for (i <- 0\
    \ until arr.length) {\n            if (arr(i) < maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if\
    \ (maxIndex == arr.length - 1) {\n            return -1\n        }\n        return\
    \ maxIndex", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n    \
    \    if (maxIndex < 0) -1 else maxIndex", "        val maxIndexes = mutable.ListBuffer.empty[Long]\n\
    \        var maxIndex = 0\n        for (i <- 0 until arr.length) {\n         \
    \   if (arr(i) > arr(maxIndex)) {\n                maxIndexes += maxIndex\n  \
    \              maxIndex = i\n            }\n        }\n        if (maxIndexes.isEmpty)\
    \ -1\n        else maxIndexes.max", "        val m = arr.head\n        val n =\
    \ arr.last\n        val maxIndex = arr.indexWhere(x => x <= m)\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = 0\n        val maxValue\
    \ = arr(0)\n        for(i <- 1 until arr.length) {\n            if(arr(i) > maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = i\n       \
    \     }\n        }\n        if(maxValue == 0) -1\n        else maxIndex", "  \
    \      var largest = -1\n        var largestIndex = 0\n        for(i <- 0 until\
    \ arr.length) {\n            if(i == 0 || arr(i) > arr(largest)) {\n         \
    \       largest = arr(i)\n                largestIndex = i\n            }\n  \
    \      }\n        return largestIndex", "        val maxIndex = arr.lastIndexWhere(x\
    \ => x <= arr(0))\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        val maxIndex = 0\n        var maxVal\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxVal) {\n                maxVal = arr(i)\n                maxIndex = i\n \
    \           }\n        }\n        maxIndex", "        val m = arr.head\n     \
    \   val n = arr.tail.head\n        val maxIndex = arr.lastIndexWhere(_ <= m)\n\
    \        if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex\
    \ = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex < 0) -1\n       \
    \ else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n \
    \       var maxIndexOfMaxValue = -1\n        for (i <- 0 until arr.length) {\n\
    \            if (arr(i) <= maxValue) {\n                maxValue = arr(i)\n  \
    \              maxIndex = i\n                maxIndexOfMaxValue = i\n        \
    \    }\n        }\n        if (maxIndexOfMaxValue == -1) {\n            return\
    \ -1\n        } else {\n            return maxIndexOfMaxValue\n        }", " \
    \       var maxIndex = 0\n        var maxVal = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxVal) {\n                maxVal =\
    \ arr(i)\n                maxIndex = i\n            }\n        }\n        if (maxIndex\
    \ == arr.length-1)\n            return -1\n        return maxIndex", "       \
    \ val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex < 0)\
    \ -1\n        else maxIndex", "        val result = arr.foldLeft((-1, -1)){\n\
    \            case ((maxIndex, maxValue), value) =>\n                if (value\
    \ > maxValue) {\n                    (maxIndex, value)\n                } else\
    \ {\n                    (maxIndex + 1, value)\n                }\n        }\n\
    \        result._1", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n\
    \        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        val\
    \ maxIndex = arr.indexWhere(x => x <= arr.last)\n        if (maxIndex == -1) -1\n\
    \        else maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i<-0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        if (maxIndex == arr.length) -1\n        else maxIndex",
  "        var maxIndex = 0\n        var maxVal = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxVal) {\n                maxVal =\
    \ arr(i)\n                maxIndex = i\n            }\n        }\n        maxIndex",
  "        val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.indexWhere(x => x <= arr.last)\n    \
    \    if (maxIndex == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex < 0) -1 else maxIndex", "        val\
    \ maxIndex = arr.indexWhere(x => x < arr(0))\n        if (maxIndex < 0) -1\n \
    \       else maxIndex", "        val maxIndex = arr.indexOfMax\n        if (maxIndex\
    \ == -1) -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x >= arr.last)\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       var maxIndex = 0\n        var maxValue = arr(0)\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if(maxIndex\
    \ == arr.length-1)\n            return -1\n        else\n            return maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) < maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if\
    \ (maxIndex == arr.length-1)\n            return -1\n        return maxIndex",
  "        var maxIndex = 0\n        var maxValue = arr(0)\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if(maxIndex\
    \ == arr.length-1)\n            return -1\n        else\n            return maxIndex",
  "        val maxIndex = arr.indexWhere(x => x >= arr.last)\n        if (maxIndex\
    \ < 0) -1\n        else maxIndex", "        val m = arr.toSet\n        val n =\
    \ arr.toSeq\n        val l = m.toSeq\n        val r = n.toSeq\n        var max\
    \ = 0\n        var maxIndex = 0\n        var i = 0\n        var j = 0\n      \
    \  while(i < l.length && j < r.length) {\n            if(l(i) < r(j)) {\n    \
    \            max = l(i)\n                maxIndex = i\n                i += 1\n\
    \            } else {\n                max = r(j)\n                maxIndex =\
    \ j\n                j += 1\n            }\n        }\n        if(maxIndex ==\
    \ l.length) {\n            return -1\n        }\n        return maxIndex", " \
    \       val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.indexWhere(x => x <= arr(0))\n      \
    \  if (maxIndex < 0) -1\n        else maxIndex", "        val n = arr.length\n\
    \        val maxIndex = 0\n        var maxVal = arr(0)\n        var index = 1\n\
    \        while (index < n) {\n            if (arr(index) > maxVal) {\n       \
    \         maxVal = arr(index)\n                maxIndex = index\n            }\n\
    \            index += 1\n        }\n        if (maxIndex == 0) -1\n        else\
    \ maxIndex", "        val maxIndex = arr.lastIndexWhere(x => x >= arr.last)\n\
    \        if (maxIndex < 0) -1\n        else maxIndex", "        val result = arr.foldLeft((-1,\
    \ -1)){\n            case ((maxIndex, maxValue), value) =>\n                if\
    \ (value > maxValue) {\n                    (maxIndex, value)\n              \
    \  } else {\n                    maxIndex\n                }\n        }._1\n \
    \       if (result < 0) {\n            -1\n        } else {\n            result\n\
    \        }", "        val m = arr.head\n        val n = arr.tail.head\n      \
    \  val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val n = arr.tail.head\n\
    \        val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val n = arr.tail.head\n\
    \        val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val n = arr.tail.head\n\
    \        val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val n = arr.tail.head\n\
    \        val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val n = arr.tail.head\n\
    \        val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val n = arr.tail.head\n\
    \        val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val n = arr.tail.head\n\
    \        val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val n = arr.tail.head\n\
    \        val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val n = arr.tail.head\n\
    \        val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val n = arr.tail.head\n\
    \        val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val n = arr.tail.head\n\
    \        val m = arr.head\n        val n = arr.tail.head\n        val m = arr.head\n\
    \        val n = arr.tail.head\n        val m = arr.head\n        val ", "   \
    \     val m = arr.head\n        val n = arr.last\n        var maxIndex = -1\n\
    \        var maxVal = -1L\n        for (i <- 0 until arr.length) {\n         \
    \   if (arr(i) < m) {\n                maxIndex = i\n                maxVal =\
    \ arr(i)\n            } else if (arr(i) > m && arr(i) <= n) {\n              \
    \  maxIndex = i\n                maxVal = arr(i)\n            }\n        }\n \
    \       maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i<-0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        if (maxIndex == arr.length-1) {\n            return -1\n\
    \        }\n        return maxIndex", "        val n = arr.size\n        var max\
    \ = 0\n        var maxIndex = 0\n        for(i <- 0 until n) {\n            val\
    \ curr = arr(i)\n            val prev = arr(i-1)\n            if(curr > prev)\
    \ {\n                max = curr\n                maxIndex = i\n            }\n\
    \        }\n        if(maxIndex == 0) -1\n        else maxIndex", "        val\
    \ maxIndex = arr.lastIndexWhere(x => x <= arr.head)\n        if (maxIndex < 0)\
    \ -1\n        else maxIndex", "        val maxIndex = arr.indexWhere(x => x >=\
    \ arr(arr.length-1))\n        if (maxIndex < 0) -1\n        else maxIndex", " \
    \       val maxIndex = arr.indexOfMax\n        if (maxIndex == -1) -1\n      \
    \  else maxIndex - 1", "        val maxIndex = arr.indexWhere(x => x < arr.max)\n\
    \        if (maxIndex < 0) -1 else maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x < arr(0))\n        if (maxIndex < 0) -1 else maxIndex", "        val m\
    \ = arr.toSet\n        val n = arr.toSeq\n        val m = m.toList\n        val\
    \ n = n.toList\n        var max = 0\n        var maxIndex = 0\n        var i =\
    \ 0\n        var j = 0\n        while (i < m.length) {\n            val x = m(j)\n\
    \            val y = n(i)\n            if (x > y) {\n                max = x\n\
    \                maxIndex = j\n            }\n            i += 1\n           \
    \ j += 1\n        }\n        if (maxIndex == -1) {\n            return -1\n  \
    \      }\n        return maxIndex", "        var maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) >\
    \ maxValue) {\n                maxValue = arr(i)\n                maxIndex = i\n\
    \            }\n        }\n        maxIndex", "        val maxIndex = arr.indexWhere(x\
    \ => x <= arr.last)\n        if (maxIndex == -1) -1\n        else maxIndex", " \
    \       val max = arr.max\n        val index = arr.indexWhere(x => x <= max)\n\
    \        if (index == -1)\n            -1\n        else\n            index", " \
    \       var maxIndex = 0\n        var maxValue = arr(0)\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) > maxValue) {\n                maxValue\
    \ = arr(i)\n                maxIndex = i\n            }\n        }\n        if\
    \ (maxIndex == arr.length-1)\n            return -1\n        else\n          \
    \  return maxIndex", "        var maxIndex = 0\n        var maxValue = arr(0)\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) > maxValue) {\n\
    \                maxValue = arr(i)\n                maxIndex = i\n           \
    \ }\n        }\n        maxIndex", "        val maxIndex = 0\n        var maxValue\
    \ = arr(0)\n        var maxIndex = 1\n        for (i <- 1 until arr.length) {\n\
    \            if (arr(i) > maxValue) {\n                maxValue = arr(i)\n   \
    \             maxIndex = i\n            }\n        }\n        if (maxValue ==\
    \ arr(0)) {\n            return -1\n        }\n        return maxIndex", "   \
    \     val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex", "        val result = arr.foldLeft(-1)((max, current) => {\n    \
    \        if (max >= current) max\n            else current\n        })\n     \
    \   result", "        var maxIndex = 0\n        var maxValue = arr(0)\n      \
    \  for (i <- 0 until arr.length) {\n            if (arr(i) <= maxValue) {\n  \
    \              maxValue = arr(i)\n                maxIndex = i\n            }\n\
    \        }\n        return maxIndex", "        var maxIndex = -1\n        var\
    \ maxValue = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i)\
    \ > maxValue) {\n                maxValue = arr(i)\n                maxIndex =\
    \ i\n            }\n        }\n        maxIndex", "        var maxIndex = 0\n\
    \        var maxVal = arr(0)\n        var index = 1\n        for(i <- 0 until\
    \ arr.length) {\n            if(arr(i) <= maxVal) {\n                maxVal =\
    \ arr(i)\n                maxIndex = i\n            }\n        }\n        if(maxIndex\
    \ == arr.length - 1) {\n            return -1\n        }\n        return maxIndex",
  "        var maxIndex = -1\n        var maxValue = arr(0)\n        var index = 1\n\
    \        for (i <- 0 until arr.length) {\n            if (arr(i) >= maxValue)\
    \ {\n                maxValue = arr(i)\n                maxIndex = index\n   \
    \         }\n            index += 1\n        }\n        return maxIndex", "  \
    \      val maxIndex = arr.indexOfMax\n        if (maxIndex < 0) -1\n        else\
    \ maxIndex"]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else a\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2wvi67xv.scala:14)\n\tat Problem.main(tmp2wvi67xv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > 0) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd(gcd, a)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpyh8j02c9.scala:11:31 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m (gcd == \e[31m0\e[0m) gcd \e[33melse\e\
    [0m gcd(gcd, a)\n\e[31m\e[31m   |\e[0m                               ^^^\e[0m\n\
    \e[31m   |\e[0m                               \e[33mvalue\e[0m \e[35mgcd\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else greatestCommonDivisor(gcd, a)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:1"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val r = a / b\n        val q = a % b\n        if (b > 0) {\n        \
    \    greatestCommonDivisor(b, r)\n        } else {\n            r\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmpz2n683zk.scala:10)\n\
    \tat Problem$.main(tmpz2n683zk.scala:19)\n\tat Problem.main(tmpz2n683zk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        lcm\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzm8zw4r9.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val a = a % b\n        val b = b % a\n        if (a == 0) b\n       \
    \ else if (b == 0) a\n        else greatestCommonDivisor(a, b)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpcuc7hsaf.scala:10:16 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = a % b\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E045]\
    \ Cyclic Error: /tmp/tmpcuc7hsaf.scala:11:16 ---------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = b % a\n\e[31m\e[31m\
    \   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive \e\
    [33mvalue\e[0m \e[35mb\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else greatestCommonDivisor(a, gcd)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:1"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) a else gcd\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = math.gcd(a, b)\n        if\
    \ (gcd == 0) gcd else lcm\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8e8mzyce.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp8e8mzyce.scala:11:23 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\e[31m\e[31m \
    \  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  value\
    \ gcd is not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd / a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuxc54q_4.scala:14)\n\tat Problem.main(tmpuxc54q_4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) 1 else gcd\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd(b, a % gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmp3kh8h_wg.scala:11:31 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m (gcd == \e[31m0\e[0m) gcd \e[33melse\e\
    [0m gcd(b, a % gcd)\n\e[31m\e[31m   |\e[0m                               ^^^\e\
    [0m\n\e[31m   |\e[0m                               \e[33mvalue\e[0m \e[35mgcd\e\
    [0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd(gcd, a)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpyh8j02c9.scala:11:31 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m (gcd == \e[31m0\e[0m) gcd \e[33melse\e\
    [0m gcd(gcd, a)\n\e[31m\e[31m   |\e[0m                               ^^^\e[0m\n\
    \e[31m   |\e[0m                               \e[33mvalue\e[0m \e[35mgcd\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd / a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuxc54q_4.scala:14)\n\tat Problem.main(tmpuxc54q_4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        lcm\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzm8zw4r9.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        lcm\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzm8zw4r9.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        lcm\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzm8zw4r9.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val a = a % b\n        if (a == 0) b\n        else greatestCommonDivisor(b,\
    \ a)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpwni15tqh.scala:10:16 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = a % b\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        lcm\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzm8zw4r9.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val a = a % b\n        if (a == 0) b\n        else greatestCommonDivisor(b,\
    \ a)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpwni15tqh.scala:10:16 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = a % b\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd(gcd, a)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpyh8j02c9.scala:11:31 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m (gcd == \e[31m0\e[0m) gcd \e[33melse\e\
    [0m gcd(gcd, a)\n\e[31m\e[31m   |\e[0m                               ^^^\e[0m\n\
    \e[31m   |\e[0m                               \e[33mvalue\e[0m \e[35mgcd\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else a\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2wvi67xv.scala:14)\n\tat Problem.main(tmp2wvi67xv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd(b, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpp4onmhxu.scala:11:31 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m (gcd == \e[31m0\e[0m) gcd \e[33melse\e\
    [0m gcd(b, gcd)\n\e[31m\e[31m   |\e[0m                               ^^^\e[0m\n\
    \e[31m   |\e[0m                               \e[33mvalue\e[0m \e[35mgcd\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd + 1\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_tzgs0f_.scala:14)\n\tat Problem.main(tmp_tzgs0f_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) 1 else gcd\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) 1 else gcd\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) 1 else gcd\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd(gcd, a)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpyh8j02c9.scala:11:31 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m (gcd == \e[31m0\e[0m) gcd \e[33melse\e\
    [0m gcd(gcd, a)\n\e[31m\e[31m   |\e[0m                               ^^^\e[0m\n\
    \e[31m   |\e[0m                               \e[33mvalue\e[0m \e[35mgcd\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else greatestCommonDivisor(a, gcd)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:1"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = math.gcd(a, b)\n        if\
    \ (gcd > lcm) gcd else lcm\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpp8b_seit.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpp8b_seit.scala:11:23 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\e[31m\e[31m \
    \  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  value\
    \ gcd is not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        lcm\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzm8zw4r9.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (a == 0 || b == 0) 1\n        else greatestCommonDivisor(b, a % b)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpflkt_qgg.scala:15)\n\tat Problem.main(tmpflkt_qgg.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (a == 0 || b == 0) 1\n        else greatestCommonDivisor(b, a % b)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpflkt_qgg.scala:15)\n\tat Problem.main(tmpflkt_qgg.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        lcm\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzm8zw4r9.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else a\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2wvi67xv.scala:14)\n\tat Problem.main(tmp2wvi67xv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else greatestCommonDivisor(a, gcd)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:1"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd / a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuxc54q_4.scala:14)\n\tat Problem.main(tmpuxc54q_4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd / a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuxc54q_4.scala:14)\n\tat Problem.main(tmpuxc54q_4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) a else gcd\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd / a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuxc54q_4.scala:14)\n\tat Problem.main(tmpuxc54q_4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else greatestCommonDivisor(a, gcd)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:1"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        gcd * (gcd\
    \ > b ? gcd : b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyxgmas0q.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd + 1\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_tzgs0f_.scala:14)\n\tat Problem.main(tmp_tzgs0f_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd / a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuxc54q_4.scala:14)\n\tat Problem.main(tmpuxc54q_4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val a = a % b\n        if (a == 0) b\n        else greatestCommonDivisor(b,\
    \ a)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpwni15tqh.scala:10:16 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = a % b\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else greatestCommonDivisor(a, gcd)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:1"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        val remainder\
    \ = a % lcm\n        gcd + (if (remainder > 0) remainder else 0)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxwbof77b.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794663
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd / a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuxc54q_4.scala:14)\n\tat Problem.main(tmpuxc54q_4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        lcm\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzm8zw4r9.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val a = a % b\n        val b = b % a\n        if (a == 0 || b == 0) 1\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpgejul9xd.scala:10:16 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = a % b\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E045]\
    \ Cyclic Error: /tmp/tmpgejul9xd.scala:11:16 ---------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = b % a\n\e[31m\e[31m\
    \   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive \e\
    [33mvalue\e[0m \e[35mb\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd(gcd, a)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpyh8j02c9.scala:11:31 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m (gcd == \e[31m0\e[0m) gcd \e[33melse\e\
    [0m gcd(gcd, a)\n\e[31m\e[31m   |\e[0m                               ^^^\e[0m\n\
    \e[31m   |\e[0m                               \e[33mvalue\e[0m \e[35mgcd\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else a\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2wvi67xv.scala:14)\n\tat Problem.main(tmp2wvi67xv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) 1 else gcd\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else greatestCommonDivisor(a, gcd)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:1"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = math.gcd(a, b)\n        if\
    \ (gcd == 0) lcm else gcd\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4uspokbm.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp4uspokbm.scala:11:23 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\e[31m\e[31m \
    \  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  value\
    \ gcd is not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1659794663
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else greatestCommonDivisor(gcd, a)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp57e_m8li.scala:1"
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd(b, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpp4onmhxu.scala:11:31 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m (gcd == \e[31m0\e[0m) gcd \e[33melse\e\
    [0m gcd(b, gcd)\n\e[31m\e[31m   |\e[0m                               ^^^\e[0m\n\
    \e[31m   |\e[0m                               \e[33mvalue\e[0m \e[35mgcd\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        lcm\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzm8zw4r9.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd / a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuxc54q_4.scala:14)\n\tat Problem.main(tmpuxc54q_4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else greatestCommonDivisor(a, gcd)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:1"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        lcm\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzm8zw4r9.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else a\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2wvi67xv.scala:14)\n\tat Problem.main(tmp2wvi67xv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd(gcd, a)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpyh8j02c9.scala:11:31 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m (gcd == \e[31m0\e[0m) gcd \e[33melse\e\
    [0m gcd(gcd, a)\n\e[31m\e[31m   |\e[0m                               ^^^\e[0m\n\
    \e[31m   |\e[0m                               \e[33mvalue\e[0m \e[35mgcd\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) 1 else gcd\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd / a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuxc54q_4.scala:14)\n\tat Problem.main(tmpuxc54q_4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd / a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuxc54q_4.scala:14)\n\tat Problem.main(tmpuxc54q_4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val a = math.abs(a)\n        val b = math.abs(b)\n        val gcd = if\
    \ (b == 0) a else greatestCommonDivisor(b, a % b)\n        gcd * (a / gcd)\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmphbr77fdk.scala:10:25 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = math.abs(a)\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Recursive \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmphbr77fdk.scala:11:25 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = math.abs(b)\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Recursive \e[33mvalue\e[0m \e[35mb\e[0m needs type\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794662
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = math.gcd(a, b)\n        if\
    \ (gcd == 0) lcm else gcd\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4uspokbm.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp4uspokbm.scala:11:23 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\e[31m\e[31m \
    \  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  value\
    \ gcd is not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1659794663
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) 1 else gcd\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        gcd * (gcd\
    \ > b ? gcd : b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyxgmas0q.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd > a) gcd else a\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv8ifcqg5.scala:14)\n\tat Problem.main(tmpv8ifcqg5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        lcm\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzm8zw4r9.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm\n\
    \        else greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8hc5bd3d.scala:16)\n\tat Problem.main(tmp8hc5bd3d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val a = a % b\n        val b = b % a\n        if (a == 0 || b == 0) 1\n\
    \        else greatestCommonDivisor(b, a - b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp6tedyk3k.scala:10:16 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = a % b\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E045]\
    \ Cyclic Error: /tmp/tmp6tedyk3k.scala:11:16 ---------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = b % a\n\e[31m\e[31m\
    \   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive \e\
    [33mvalue\e[0m \e[35mb\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794662
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd + (if (a < 0) a else 0)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794664
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd(gcd, a)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpyh8j02c9.scala:11:31 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m (gcd == \e[31m0\e[0m) gcd \e[33melse\e\
    [0m gcd(gcd, a)\n\e[31m\e[31m   |\e[0m                               ^^^\e[0m\n\
    \e[31m   |\e[0m                               \e[33mvalue\e[0m \e[35mgcd\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else greatestCommonDivisor(a, gcd)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpwvh04cde.scala:1"
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd + 1\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_tzgs0f_.scala:14)\n\tat Problem.main(tmp_tzgs0f_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else a\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2wvi67xv.scala:14)\n\tat Problem.main(tmp2wvi67xv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        gcd * (gcd\
    \ > b ? gcd : b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyxgmas0q.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        val lcm2 = lcm / b\n\
    \        val gcd2 = lcm % b\n        val lcm3 = lcm2 / b\n        val gcd3 = lcm2\
    \ % b\n        val lcm4 = lcm3 / b\n        val gcd4 = lcm3 % b\n        val lcm5\
    \ = lcm4 / b\n        val gcd5 = lcm4 % b\n        val lcm6 = lcm5 / b\n     \
    \   val gcd6 = lcm5 % b\n        val lcm7 = lcm6 / b\n        val gcd7 = lcm6\
    \ % b\n        val lcm8 = lcm7 / b\n        val gcd8 = lcm7 % b\n        val lcm9\
    \ = lcm8 / b\n        val gcd9 = lcm8 % b\n        val lcm10 = lcm9 / b\n    \
    \    val gcd10 = lcm9 % b\n        val lcm11 = lcm10 / b\n        val gcd11 =\
    \ lcm10 % b\n        val lcm12 = lcm11 / b\n        val gcd12 = lcm11 % b\n  \
    \      val lcm13 = lcm12 / b\n        val gcd13 = lcm12 % b\n        val lcm14\
    \ = lcm13 / b\n        val gcd14 = lcm13 % b\n        val lcm15 = lcm14 / b\n\
    \        val gcd15 = lcm14 % b\n        val lcm16 = lcm15 / b\n        val gcd16\
    \ = lcm15 % b\n        val lcm17 = lcm16 / b\n        val gcd17 = lcm16 % b\n\
    \        val lcm18 = lcm17 / b\n        val gcd18 = lcm17 % b\n        val lcm19\
    \ = lcm18 / b\n        val gcd19 = lcm18 % b\n        val lcm20 = lcm19 / b\n\
    \        val gcd20 = lcm19 % b\n        val lcm21 = lcm20 / b\n        val gcd21\
    \ = lcm20 % b\n        val lcm22 = lcm21 / b\n        val gcd22 = lcm21 % b\n\
    \        val lcm23 = lcm22 / b\n        val gcd\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8gwfajv2.scala:56:4 ----------------------------\e\
    [0m\e[0m\n\e[31m56 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp8gwfajv2.scala:56:5 ---------------------\e[0m\e[0m\n\e[31m56 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794664
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (a == 0 || b == 0) return 0\n        val gcd = if (b == 0) a else\
    \ greatestCommonDivisor(b, a % b)\n        if (gcd == 0) a else gcd\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpp_8p573l.scala:15)\n\tat Problem.main(tmpp_8p573l.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794664
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd + 1\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_tzgs0f_.scala:14)\n\tat Problem.main(tmp_tzgs0f_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val a = a % b\n        val b = b % a\n        if (a == 0) b\n       \
    \ else greatestCommonDivisor(b, a)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpoz5wpg05.scala:10:16 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = a % b\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E045]\
    \ Cyclic Error: /tmp/tmpoz5wpg05.scala:11:16 ---------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = b % a\n\e[31m\e[31m\
    \   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive \e\
    [33mvalue\e[0m \e[35mb\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794663
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  gcd / a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuxc54q_4.scala:14)\n\tat Problem.main(tmpuxc54q_4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        val lcm2 = lcm * lcm\n\
    \        val gcd_2 = lcm2 % gcd\n        gcd_2\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6amumev1.scala:17)\n\tat Problem.main(tmp6amumev1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794664
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = a / lcm\n        gcd * (gcd\
    \ > b ? gcd : b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyxgmas0q.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n      \
    \  if (gcd == 0) gcd else gcd(b, gcd)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpp4onmhxu.scala:11:31 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m (gcd == \e[31m0\e[0m) gcd \e[33melse\e\
    [0m gcd(b, gcd)\n\e[31m\e[31m   |\e[0m                               ^^^\e[0m\n\
    \e[31m   |\e[0m                               \e[33mvalue\e[0m \e[35mgcd\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = a / b\n        val gcd = a % b\n        if (gcd == 0) lcm else\
    \ greatestCommonDivisor(lcm, gcd)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplp1qz64y.scala:15)\n\tat Problem.main(tmplp1qz64y.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    def greatestCommonDivisor(a : Long, b : Long) : Long = {\n\
    \        val lcm = math.lcm(a, b)\n        val gcd = math.gcd(a, b)\n        lcm\
    \ / gcd\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8a7scu98.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value lcm is not a member of math\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp8a7scu98.scala:11:23 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\e[31m\e[31m \
    \  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  value\
    \ gcd is not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1659794664
